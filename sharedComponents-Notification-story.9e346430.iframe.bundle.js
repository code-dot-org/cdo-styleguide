/*! For license information please see sharedComponents-Notification-story.9e346430.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[9636],{"./.storybook/decorators.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{reduxStore:()=>reduxStore,reduxStoreDecorator:()=>reduxStoreDecorator});var lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/lodash.js"),react_redux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-redux/es/index.js"),redux__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/redux/es/redux.js"),redux_thunk__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/redux-thunk/lib/index.js"),_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/code-studio/isRtlRedux.js"),_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/code-studio/responsiveRedux.js");const reduxStore=(reducers={},state={})=>(0,redux__WEBPACK_IMPORTED_MODULE_5__.createStore)((0,redux__WEBPACK_IMPORTED_MODULE_5__.combineReducers)({isRtl:_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_3__.default,responsive:_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_4__.default,...reducers}),state,(0,redux__WEBPACK_IMPORTED_MODULE_5__.applyMiddleware)(redux_thunk__WEBPACK_IMPORTED_MODULE_2__.default)),reduxStoreDecorator=function(Story,context){const state=(0,lodash__WEBPACK_IMPORTED_MODULE_0__.merge)({},this.initialState,context.parameters.store);return(0,react_redux__WEBPACK_IMPORTED_MODULE_1__.Provider)({children:Story(),store:reduxStore(this.reducers,state)})}},"./src/code-studio/isRtlRedux.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function locale(){var state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RTL)return action.isRtl;return state},exports.isRtlFromDOM=isRtlFromDOM,exports.setRtlFromDOM=exports.setRtl=void 0;var SET_RTL="isRtl/SET_RTL",setRtl=exports.setRtl=function setRtl(isRtl){return{type:SET_RTL,isRtl}};exports.setRtlFromDOM=function setRtlFromDOM(){return setRtl(isRtlFromDOM())};function isRtlFromDOM(){var head=document.getElementsByTagName("head")[0];if(head&&head.parentElement){var dir=head.parentElement.getAttribute("dir");return!(!dir||"rtl"!==dir.toLowerCase())}return!1}},"./src/code-studio/responsiveRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResponsiveSize=void 0,exports.default=function reducer(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RESPONSIVE_SIZE&&state.responsiveSize!==action.responsiveSize)return _objectSpread(_objectSpread({},state),{},{responsiveSize:action.responsiveSize});return state},exports.getResponsiveBreakpoint=getResponsiveBreakpoint,exports.setResponsiveSize=void 0;var _utils=__webpack_require__("./src/utils.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_RESPONSIVE_SIZE="responsive/SET_RESPONSIVE_SIZE",ResponsiveSize=(exports.setResponsiveSize=function setResponsiveSize(responsiveSize){return{type:SET_RESPONSIVE_SIZE,responsiveSize}},exports.ResponsiveSize=(0,_utils.makeEnum)("lg","md","sm","xs")),Breakpoints=[{breakpoint:992,responsiveSize:ResponsiveSize.lg},{breakpoint:720,responsiveSize:ResponsiveSize.md},{breakpoint:650,responsiveSize:ResponsiveSize.sm},{breakpoint:0,responsiveSize:ResponsiveSize.xs}];function getResponsiveBreakpoint(width){var responsiveSize=Breakpoints.find((function(_ref){var breakpoint=_ref.breakpoint;return width>breakpoint}));return void 0===responsiveSize?(console.error("No responsive size found for width ".concat(width,", defaulting to xs")),ResponsiveSize.xs):responsiveSize.responsiveSize}var initialState={responsiveSize:getResponsiveBreakpoint(window.innerWidth)}},"./src/logToCloud.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _experiments=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/util/experiments.js"));function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}var PageAction=(0,__webpack_require__("./src/utils.js").makeEnum)("DropletTransitionError","SanitizedLevelHtml","UserJavaScriptError","RunButtonClick","StartWebRequest","StaticResourceFetchError","PegasusSectionsRedirect","DancePartyOnInit","BrambleError","BrambleFilesystemResetSuccess","BrambleFilesystemResetFailed","JotFormFrameLoaded","JotFormLoadFailed","BlockLoadFailed","MapboxMarkerLoadError","LoadScriptProgressStarted","LoadScriptProgressFinished","SectionProgressRenderedWithData","JavabuilderWebSocketConnectionError","NoValidAmplitudeEventNameError"),REPORT_PAGE_SIZE=_experiments.default.isEnabled("logPageSize")||Math.random()<.01;module.exports={PageAction,addPageAction:function addPageAction(actionName,value,sampleRate){if(void 0===sampleRate&&(sampleRate=1),window.newrelic)if(PageAction[actionName])if("object"===_typeof(value)){if(!(Math.random()>sampleRate)){for(var prop in value)"boolean"==typeof value[prop]&&(value[prop]=value[prop].toString()),"string"==typeof value[prop]&&(value[prop]=value[prop].substring(0,4095));window.newrelic.addPageAction(actionName,value)}}else console.log("Expected value to be an object");else console.log("Unknown actionName: "+actionName)},setCustomAttribute:function setCustomAttribute(key,value){window.newrelic&&window.newrelic.setCustomAttribute(key,value)},loadFinished:function loadFinished(){window.newrelic&&window.newrelic.finished()},logError:function logError(e){window.newrelic&&window.newrelic.noticeError(e)},reportPageSize:function reportPageSize(){if(REPORT_PAGE_SIZE)try{var _step,resources=performance&&performance.getEntriesByType("resource"),totalDownloadSize=0,jsDownloadSize=0,jsFileRegex=/\.js$/,_iterator=_createForOfIteratorHelper(resources);try{for(_iterator.s();!(_step=_iterator.n()).done;){var resource=_step.value;if(void 0===resource.transferSize||void 0===resource.encodedBodySize)return;totalDownloadSize+=resource.transferSize,jsFileRegex.test(resource.name)&&(jsDownloadSize+=resource.transferSize)}}catch(err){_iterator.e(err)}finally{_iterator.f()}if(!window.newrelic)return;window.newrelic.setCustomAttribute("totalDownloadSize",totalDownloadSize),window.newrelic.setCustomAttribute("jsDownloadSize",jsDownloadSize)}catch(e){this.logError(e)}}}},"./src/sharedComponents/Notification.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.NotificationType=exports.NotificationResponsive=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_Button=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/Button.jsx")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_firehose=_interopRequireDefault(__webpack_require__("./src/metrics/firehose.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var NotificationType=exports.NotificationType={default:"default",information:"information",success:"success",failure:"failure",warning:"warning",course:"course",bullhorn:"bullhorn",feedback:"feedback",bullhorn_yellow:"bullhorn_yellow",collaborate:"collaborate"},Notification=function Notification(_ref){var buttonClassName=_ref.buttonClassName,buttonLink=_ref.buttonLink,buttons=_ref.buttons,buttonsStyles=_ref.buttonsStyles,buttonText=_ref.buttonText,buttonColor=_ref.buttonColor,children=_ref.children,details=_ref.details,detailsLink=_ref.detailsLink,detailsLinkNewWindow=_ref.detailsLinkNewWindow,detailsLinkText=_ref.detailsLinkText,dismissible=_ref.dismissible,firehoseAnalyticsData=_ref.firehoseAnalyticsData,iconStyles=_ref.iconStyles,isRtl=_ref.isRtl,newWindow=_ref.newWindow,notice=_ref.notice,onDismiss=_ref.onDismiss,onButtonClick=_ref.onButtonClick,responsiveSize=_ref.responsiveSize,type=_ref.type,tooltipText=_ref.tooltipText,width=_ref.width,colors=_ref.colors,_useState2=_slicedToArray((0,_react.useState)(!0),2),open=_useState2[0],setOpen=_useState2[1],desktop=void 0===responsiveSize||"lg"===responsiveSize,icons={information:"info-circle",success:"check-circle",failure:"exclamation-triangle",warning:"exclamation-triangle",bullhorn:"bullhorn",bullhorn_yellow:"bullhorn",feedback:"envelope",collaborate:"users"},mainStyle=_objectSpread(_objectSpread({},styles.main),{},{direction:isRtl?"rtl":"ltr",width:width||styles.main.width});if(!open)return null;var colorStyles=_objectSpread(_objectSpread({},styles.colors[type]),colors),tooltipId=_lodash.default.uniqueId();return _react.default.createElement("div",{className:"announcement-notification"},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},colorStyles),mainStyle)},type!==NotificationType.course&&_react.default.createElement("div",{style:_objectSpread(_objectSpread(_objectSpread({},styles.iconBox),colorStyles),iconStyles)},icons[type]&&_react.default.createElement(_FontAwesome.default,{icon:icons[type],style:styles.icon})),_react.default.createElement("div",{style:styles.contentBox},_react.default.createElement("div",{style:styles.wordBox},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},colorStyles),styles.notice)},notice,tooltipText?_react.default.createElement("span",null,_react.default.createElement("span",{"data-tip":!0,"data-for":tooltipId,style:styles.tooltip},_react.default.createElement(_FontAwesome.default,{icon:"info-circle"})),_react.default.createElement(_reactTooltip.default,{id:tooltipId,effect:"solid"},_react.default.createElement("p",{style:styles.tooltipText},tooltipText))):null),_react.default.createElement("div",{style:styles.details},details,detailsLinkText&&detailsLink&&_react.default.createElement("span",null," ",_react.default.createElement("a",{href:detailsLink,style:styles.detailsLink,target:detailsLinkNewWindow?"_blank":null,rel:detailsLinkNewWindow?"noreferrer":void 0},detailsLinkText)))),_react.default.createElement("div",{style:desktop?buttonsStyles:_objectSpread(_objectSpread({},styles.buttonsMobile),{},{buttonsStyles})},buttonText&&buttonLink&&_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,href:buttonLink,color:buttonColor||_Button.default.ButtonColor.gray,text:buttonText,style:styles.button,target:newWindow?"_blank":null,onClick:function onAnnouncementClick(){firehoseAnalyticsData&&function logAnnouncementClickToFirehose(){var record={};["user_id","script_id","lesson_id"].forEach((function(firehoseMetadataKey){firehoseMetadataKey in firehoseAnalyticsData&&(record[firehoseMetadataKey]=firehoseAnalyticsData[firehoseMetadataKey])})),record=_objectSpread(_objectSpread({},record),{},{study:"notification_engagement",event:"notification_click",data_json:JSON.stringify(_objectSpread(_objectSpread({},firehoseAnalyticsData),{},{notice,details,buttonLink}))}),_firehose.default.putRecord(record,{includeUserId:!0})}(),onButtonClick&&onButtonClick()},className:buttonClassName}),buttons&&buttons.map((function(button,index){return _react.default.createElement(_Button.default,{key:index,href:button.link,color:button.color||_Button.default.ButtonColor.gray,text:button.text,style:_objectSpread(_objectSpread({},styles.button),button.style),onClick:button.onClick,className:button.className})})),children)),dismissible&&_react.default.createElement("div",{style:styles.dismiss},_react.default.createElement(_FontAwesome.default,{icon:"times",onClick:function handleDismiss(){setOpen(!1),onDismiss&&onDismiss()}}))),_react.default.createElement("div",{style:styles.clear}))};Notification.propTypes={type:_propTypes.default.oneOf(Object.keys(NotificationType)).isRequired,notice:_propTypes.default.string.isRequired,details:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]).isRequired,detailsLinkText:_propTypes.default.string,detailsLink:_propTypes.default.string,detailsLinkNewWindow:_propTypes.default.bool,buttonText:_propTypes.default.string,buttonLink:_propTypes.default.string,buttonColor:_propTypes.default.string,dismissible:_propTypes.default.bool.isRequired,iconStyles:_propTypes.default.object,onDismiss:_propTypes.default.func,newWindow:_propTypes.default.bool,firehoseAnalyticsData:_propTypes.default.object,responsiveSize:_propTypes.default.oneOf(["lg","md","sm","xs"]),isRtl:_propTypes.default.bool.isRequired,onButtonClick:_propTypes.default.func,buttonClassName:_propTypes.default.string,tooltipText:_propTypes.default.string,buttonsStyles:_propTypes.default.object,buttons:_propTypes.default.arrayOf(_propTypes.default.shape({text:_propTypes.default.string,link:_propTypes.default.string,onClick:_propTypes.default.func,className:_propTypes.default.string,color:_propTypes.default.oneOf(Object.keys(_Button.default.ButtonColor)),style:_propTypes.default.object})),children:_propTypes.default.node,width:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.string]),colors:_propTypes.default.shape({backgroundColor:_propTypes.default.string,borderColor:_propTypes.default.string,color:_propTypes.default.string})},Notification.defaultProps={type:NotificationType.default,colors:{}};var styles={main:{borderWidth:1,borderStyle:"solid",minHeight:72,width:"100%",backgroundColor:_color.default.white,marginBottom:20,display:"flex",flexFlow:"wrap",boxSizing:"border-box"},notice:_objectSpread(_objectSpread({},_fontConstants.default["main-font-regular"]),{},{fontSize:18,letterSpacing:-.2,lineHeight:1.5,marginTop:16,backgroundColor:_color.default.white}),details:_objectSpread(_objectSpread({},_fontConstants.default["main-font-regular"]),{},{fontSize:14,lineHeight:1.5,paddingTop:6,paddingBottom:16,color:_color.default.charcoal}),detailsLink:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{color:_color.default.teal}),wordBox:{flex:1,marginLeft:25,marginRight:25},dismiss:{color:_color.default.lighter_gray,marginTop:5,marginRight:0,marginLeft:10,cursor:"pointer"},iconBox:{width:72,backgroundColor:_color.default.lightest_gray,textAlign:"center",float:"left"},contentBox:{width:"calc(100% - 100px)",display:"flex",flexFlow:"wrap"},icon:{color:"rgba(255,255,255, .8)",fontSize:38,lineHeight:2},buttonsMobile:{width:"100%"},button:{marginLeft:25,marginRight:25,marginTop:18,marginBottom:18},colors:_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({},NotificationType.default,{borderColor:_color.default.teal,backgroundColor:_color.default.teal}),NotificationType.information,{borderColor:_color.default.teal,color:_color.default.teal,backgroundColor:_color.default.teal}),NotificationType.success,{borderColor:_color.default.level_perfect,color:_color.default.level_perfect,backgroundColor:_color.default.level_perfect}),NotificationType.failure,{borderColor:_color.default.red,color:_color.default.red,backgroundColor:_color.default.red}),NotificationType.warning,{borderColor:_color.default.mustardyellow,color:_color.default.charcoal,backgroundColor:_color.default.mustardyellow}),NotificationType.course,{borderColor:_color.default.border_gray,color:_color.default.teal,backgroundColor:_color.default.teal}),NotificationType.bullhorn,{borderColor:_color.default.teal,color:_color.default.teal,backgroundColor:_color.default.teal}),NotificationType.bullhorn_yellow,{borderColor:_color.default.yellow,color:_color.default.yellow,backgroundColor:_color.default.yellow}),NotificationType.feedback,{borderColor:_color.default.purple,color:_color.default.purple,backgroundColor:_color.default.purple}),NotificationType.collaborate,{borderColor:_color.default.light_secondary_500,color:_color.default.light_secondary_500,backgroundColor:_color.default.light_secondary_500}),clear:{clear:"both"},tooltip:{cursor:"pointer",marginLeft:"5px",marginRight:"5px",fontSize:"14px",verticalAlign:"middle",color:_color.default.light_gray_500},tooltipText:{color:_color.default.white,margin:0}};exports.default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))(Notification),exports.NotificationResponsive=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl,responsiveSize:state.responsive.responsiveSize}}))(Notification)},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/sharedComponents/Notification.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Warning=exports.Success=exports.Information=exports.InfoNonDefaultWidth=exports.InfoMobileWidth=exports.InfoLongDetails=exports.InfoCallToActionButtonAndDismissible=exports.InfoCallToActionButton=exports.FindACourse=exports.Failure=exports.AnnouncementWithButton=exports.AnnouncementTwoButtonsAndALink=exports.Announcement=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_decorators=__webpack_require__("./.storybook/decorators.js"),_Notification=_interopRequireDefault(__webpack_require__("./src/sharedComponents/Notification.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default={component:_Notification.default};var informationDetails="Seriously, Kansas. Earth's greatest hero is from a tiny town called Smallville, if you can believe it. ",Template=function Template(args){return _react.default.createElement(_reactRedux.Provider,{store:(0,_decorators.reduxStore)()},_react.default.createElement(_Notification.default,args))},Information=exports.Information=Template.bind({});Information.args={type:"bullhorn",notice:"Here is some news",details:"Here are the details of the news.",dismissible:!1};var InfoCallToActionButton=exports.InfoCallToActionButton=Template.bind({});InfoCallToActionButton.args=_objectSpread(_objectSpread({},Information.args),{},{buttonText:"Call to Action",buttonLink:"to a new page",dismissible:!1}),InfoCallToActionButton.storyName="Information - call-to-action button";var InfoCallToActionButtonAndDismissible=exports.InfoCallToActionButtonAndDismissible=Template.bind({});InfoCallToActionButtonAndDismissible.args=_objectSpread(_objectSpread({},Information.args),{},{buttonText:"Call to Action",buttonLink:"to a new page",dismissible:!0}),InfoCallToActionButtonAndDismissible.storyName="Information - call-to-action button, dismissible";var InfoNonDefaultWidth=exports.InfoNonDefaultWidth=Template.bind({});InfoNonDefaultWidth.args=_objectSpread(_objectSpread({},Information.args),{},{width:800}),InfoNonDefaultWidth.storyName="Information - non-default width";var InfoLongDetails=exports.InfoLongDetails=Template.bind({});InfoLongDetails.args=_objectSpread(_objectSpread({},Information.args),{},{details:informationDetails+informationDetails+informationDetails+informationDetails}),InfoLongDetails.storyName="Information - long details";var InfoMobileWidth=exports.InfoMobileWidth=function InfoMobileWidth(args){return _react.default.createElement(_reactRedux.Provider,{store:(0,_decorators.reduxStore)()},_react.default.createElement("div",{style:{width:400}},_react.default.createElement(_Notification.default,args)))};InfoMobileWidth.args=_objectSpread(_objectSpread({},Information.args),{},{notice:"LongUnbreakingWord",details:"Because our notice can't break, we should see our button wrap to below",buttonText:"Call to Action",buttonLink:"to a new page",dismissible:!1,width:"100%"}),InfoMobileWidth.storyName="Information - mobile width",(exports.Success=Template.bind({})).args={type:"success",notice:"Wonder Woman Saved the Day",details:"Things were pretty sketchy there for awhile, but don't worry- she's on top of it.",dismissible:!0},(exports.Failure=Template.bind({})).args={type:"failure",notice:"Lex Luther Attacked Metropolis",details:"If you're in the Metropolis area, get to saftey as quickly as possible",dismissible:!1},(exports.Warning=Template.bind({})).args={type:"warning",notice:"Batman is on Vacation in the Bahamas",details:"Now is probably not the best time to be in Gotham City. Watch your back.",dismissible:!0},(exports.FindACourse=Template.bind({})).args={type:"course",notice:"Find a course",details:"Try new courses to add them to your homepage.",dismissible:!1,buttonText:"Find a course",buttonLink:"/courses"};var Announcement=exports.Announcement=Template.bind({});Announcement.args={type:"bullhorn",notice:"Here is some news",details:"Here are the details of the news.",dismissible:!1};var AnnouncementWithButton=exports.AnnouncementWithButton=Template.bind({});AnnouncementWithButton.args=_objectSpread(_objectSpread({},Announcement.args),{},{buttonText:"Learn more",buttonLink:"/",newWindow:!0,firehoseAnalyticsData:{user_id:1,important_data_point:2}}),AnnouncementWithButton.storyName="Announcement - with button";var AnnouncementTwoButtonsAndALink=exports.AnnouncementTwoButtonsAndALink=Template.bind({});AnnouncementTwoButtonsAndALink.args=_objectSpread(_objectSpread({},Announcement.args),{},{detailsLinkText:"And here's an extra link.",detailsLink:"/",buttons:[{text:"Learn more",link:"/more",newWindow:!0,onClick:(0,_addonActions.action)("onClickPopupMore")},{text:"Learn less",link:"/less",newWindow:!0,onClick:(0,_addonActions.action)("onClickPopupLess")}]}),AnnouncementTwoButtonsAndALink.storyName="Announcement - two buttons and a link"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,