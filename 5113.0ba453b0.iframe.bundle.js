"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[5113],{"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var rendered=(this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact).processSync(this.props.markdown).contents,markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=_redactableMarkdown.default.create().getParser().use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHTML:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"}),_default=SafeMarkdown;exports.default=_default,module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/templates/progress/FocusAreaIndicator.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var styles={main:{display:"inline-block",position:"absolute",right:0,top:0,whiteSpace:"nowrap"},arrowContainer:{display:"inline-block",position:"relative",top:10},leftArrow:{display:"inline-block",width:0,height:0,borderStyle:"solid",borderWidth:"17px 20px 17px",borderColor:"transparent ".concat(_color.default.cyan," transparent transparent")},focusArea:{display:"inline-block",backgroundColor:_color.default.cyan,color:_color.default.white,height:34,lineHeight:"34px",position:"relative",top:-3},text:{display:"inline-block"},focusAreaIcon:{display:"inline-block",color:_color.default.white,lineHeight:"13px",padding:5,marginLeft:5,marginRight:5,borderRadius:4,":hover":{backgroundColor:_color.default.default_blue}}},_default=(0,_radium.default)((function FocusAreaIndicator(){return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.arrowContainer},_react.default.createElement("div",{style:styles.leftArrow})),_react.default.createElement("div",{style:styles.focusArea},_react.default.createElement("div",{style:styles.text},"Focus Area"),_react.default.createElement("a",{href:window.location.pathname+"/preview-assignments"},_react.default.createElement("div",{style:styles.focusAreaIcon,"data-tip":!0,"data-for":"focus-area"},_react.default.createElement(_FontAwesome.default,{icon:"pencil"})))),_react.default.createElement(_reactTooltip.default,{id:"focus-area",role:"tooltip",effect:"solid"},"Click to change your focus area."))}));exports.default=_default,module.exports=exports.default},"./src/templates/progress/ProgressBubble.jsx":(module,exports,__webpack_require__)=>{function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_types=__webpack_require__("./src/templates/feedback/types.js"),_BubbleBadge=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./src/templates/progress/BubbleBadge.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBubble=function(_React$Component){function ProgressBubble(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"onClickLevel",(function(){_this.props.onClick&&_this.props.onClick(_this.props.level)})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBubble,_React$Component);var _proto=ProgressBubble.prototype;return _proto.isClickable=function isClickable(){var _this$props=this.props,disabled=_this$props.disabled,level=_this$props.level,onClick=_this$props.onClick;return!(disabled||!level.url&&!onClick)},_proto.getUrl=function getUrl(){var _this$props2=this.props,onClick=_this$props2.onClick,level=_this$props2.level,selectedSectionId=_this$props2.selectedSectionId,selectedStudentId=_this$props2.selectedStudentId;return onClick?null:(0,_BubbleFactory.getBubbleUrl)(level.url,selectedStudentId,selectedSectionId,!0)},_proto.renderBubbleBadge=function renderBubbleBadge(bubbleShape,bubbleSize){var _this$props3=this.props,level=_this$props3.level,smallBubble=_this$props3.smallBubble,hideAssessmentBadge=_this$props3.hideAssessmentBadge,hasKeepWorkingFeedback=level.teacherFeedbackReviewState===_types.ReviewStates.keepWorking;if(((0,_progressHelpers.isLevelAssessment)(level)&&!hideAssessmentBadge||hasKeepWorkingFeedback)&&!smallBubble)return _react.default.createElement(_BubbleBadge.default,{badgeType:hasKeepWorkingFeedback?_BubbleBadge.BadgeType.keepWorking:_BubbleBadge.BadgeType.assessment,bubbleSize,bubbleShape})},_proto.createBubbleElement=function createBubbleElement(){var _this$props4=this.props,level=_this$props4.level,smallBubble=_this$props4.smallBubble,hideToolTips=_this$props4.hideToolTips,bubbleSize=smallBubble?_BubbleFactory.BubbleSize.dot:_BubbleFactory.BubbleSize.full,content=(0,_BubbleFactory.getBubbleContent)(level.isLocked,level.isUnplugged,level.bonus,level.paired,level.bubbleText||level.letter||level.levelNumber,bubbleSize),bubbleShape=(0,_BubbleFactory.getBubbleShape)(level.isUnplugged&&!smallBubble,level.isConceptLevel),bubble=_react.default.createElement(_BubbleFactory.BasicBubble,{shape:bubbleShape,size:bubbleSize,progressStyle:(0,_progressStyles.levelProgressStyle)(level.status,level.kind),classNames:(0,_BubbleFactory.getBubbleClassNames)(this.isClickable())},content,this.renderBubbleBadge(bubbleShape,bubbleSize));return hideToolTips?bubble:_react.default.createElement(_BubbleFactory.BubbleTooltip,{level},bubble)},_proto.render=function render(){var level=this.props.level,levelID=level.bubbleText||level.letter||level.levelNumber,lessonName=this.props.lessonName,description=_locale.default.progressBubbleDescription({levelID});return lessonName&&(description=_locale.default.progressBubbleDescriptionWithLesson({levelID,lessonName})),this.isClickable()?_react.default.createElement(_BubbleFactory.BubbleLink,{url:this.getUrl(),onClick:this.onClickLevel,a11y_description:description},this.createBubbleElement()):this.createBubbleElement()},ProgressBubble}(_react.default.Component);exports.default=ProgressBubble,_defineProperty(ProgressBubble,"propTypes",{level:_progressTypes.levelWithProgressType.isRequired,disabled:_propTypes.default.bool.isRequired,smallBubble:_propTypes.default.bool,selectedSectionId:_propTypes.default.number,selectedStudentId:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),hideToolTips:_propTypes.default.bool,onClick:_propTypes.default.func,hideAssessmentBadge:_propTypes.default.bool,lessonName:_propTypes.default.string}),module.exports=exports.default},"./src/templates/progress/ProgressBubbleSet.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressBubbleSet=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_ProgressBubble=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressBubble.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBubbleSet=function(_React$Component){function ProgressBubbleSet(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"renderBubble",(function(level,index,isSublevel){var _this$props=_this.props,levels=_this$props.levels,selectedSectionId=_this$props.selectedSectionId,selectedStudentId=_this$props.selectedStudentId,isRtl=_this$props.isRtl,backgroundFirstStyle=isRtl?styles.backgroundLast:styles.backgroundFirst,backgroundLastStyle=isRtl?styles.backgroundFirst:styles.backgroundLast,backgroundStyleProp=_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},styles.background),level.isConceptLevel&&styles.backgroundDiamond),isSublevel&&styles.backgroundSublevel),level.isUnplugged&&styles.backgroundPill),!isSublevel&&0===index&&backgroundFirstStyle),!isSublevel&&!level.sublevels&&index===levels.length-1&&backgroundLastStyle),containerStyleProp=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},styles.container),level.isUnplugged&&styles.pillContainer),level.isConceptLevel&&styles.diamondContainer),isSublevel&&styles.containerSublevel);return _react.default.createElement("div",{style:styles.withBackground,key:index},_react.default.createElement("div",{style:backgroundStyleProp}),_react.default.createElement("div",{style:containerStyleProp},_react.default.createElement(_ProgressBubble.default,{level,disabled:_this.props.disabled,smallBubble:isSublevel,selectedSectionId,selectedStudentId,hideToolTips:_this.props.hideToolTips,onClick:_this.props.onBubbleClick,lessonName:_this.props.lessonName})))})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBubbleSet,_React$Component),ProgressBubbleSet.prototype.render=function render(){var _this2=this,_this$props2=this.props,levels=_this$props2.levels,style=_this$props2.style,showSublevels=_this$props2.showSublevels;return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.main),style)},levels.map((function(level,index){return _react.default.createElement("span",{key:index},_this2.renderBubble(level,index,!1),showSublevels&&level.sublevels&&level.sublevels.map((function(sublevel,index){return _react.default.createElement("span",{key:index},_this2.renderBubble(sublevel,index,!0))})))})))},ProgressBubbleSet}(_react.default.Component);_defineProperty(ProgressBubbleSet,"propTypes",{levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,disabled:_propTypes.default.bool.isRequired,style:_propTypes.default.object,selectedSectionId:_propTypes.default.number,selectedStudentId:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),hideToolTips:_propTypes.default.bool,lessonExtrasEnabled:_propTypes.default.bool,showSublevels:_propTypes.default.bool,onBubbleClick:_propTypes.default.func,lessonName:_propTypes.default.string,isRtl:_propTypes.default.bool});var styles={main:{position:"relative",display:"inline-block"},withBackground:{display:"inline-block",position:"relative"},background:{height:10,backgroundColor:_color.default.lighter_gray,position:"absolute",left:0,right:0,top:(_progressStyles.DOT_SIZE+4+6-10)/2},backgroundDiamond:{top:(_progressStyles.DIAMOND_DOT_SIZE+4+12-10)/2},backgroundPill:{top:15},backgroundSublevel:{top:9},backgroundFirst:{left:15},backgroundLast:{right:15},container:{position:"relative"},containerSublevel:{top:5},diamondContainer:{height:36},pillContainer:{marginRight:2,height:37}},UnconnectedProgressBubbleSet=ProgressBubbleSet;exports.UnconnectedProgressBubbleSet=UnconnectedProgressBubbleSet;var _default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))((0,_radium.default)(ProgressBubbleSet));exports.default=_default},"./src/templates/progress/ProgressLesson.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressLesson=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_ProgressLessonContent=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressLessonContent.jsx")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_viewAsRedux=__webpack_require__("./src/code-studio/viewAsRedux.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_ProgressLessonTeacherInfo=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressLessonTeacherInfo.jsx")),_FocusAreaIndicator=_interopRequireDefault(__webpack_require__("./src/templates/progress/FocusAreaIndicator.jsx")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressLesson=function(_React$Component){function ProgressLesson(props){var _this;return _defineProperty(_assertThisInitialized(_this=_React$Component.call(this,props)||this),"toggleCollapsed",(function(){return _this.setState({collapsed:!_this.state.collapsed})})),_defineProperty(_assertThisInitialized(_this),"onClickStudentLessonPlan",(function(){_firehose.default.putRecord({study:"script_overview_actions",study_group:"student_lesson_plan",event:"open_student_lesson_plan",data_json:JSON.stringify({lesson_id:_this.props.lesson.id,script_id:_this.props.scriptId})},{includeUserId:!0})})),_this.state={collapsed:props.viewAs!==_viewAsRedux.ViewType.Instructor&&props.currentLessonId!==props.lesson.id},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressLesson,_React$Component);var _proto=ProgressLesson.prototype;return _proto.UNSAFE_componentWillReceiveProps=function UNSAFE_componentWillReceiveProps(nextProps){nextProps.currentLessonId!==this.props.currentLessonId&&this.setState({collapsed:this.state.collapsed&&nextProps.currentLessonId!==this.props.lesson.id})},_proto.render=function render(){var _this2=this,_this$props=this.props,lesson=_this$props.lesson,levels=_this$props.levels,viewAs=_this$props.viewAs,isVisible=_this$props.isVisible,hiddenForStudents=_this$props.hiddenForStudents,isLockedForUser=_this$props.isLockedForUser,isLockedForAllStudents=_this$props.isLockedForAllStudents,selectedSectionId=_this$props.selectedSectionId,isRtl=_this$props.isRtl;if(!isVisible)return null;var showAsLocked=isLockedForUser||isLockedForAllStudents,title=lesson.lessonNumber?_locale.default.lessonNumbered({lessonNumber:lesson.lessonNumber,lessonName:lesson.name}):lesson.name,caretStyle=isRtl?styles.caretRTL:styles.caret,caret=this.state.collapsed?"caret-right":"caret-down",lockedTooltipId=_lodash.default.uniqueId(),description=viewAs===_viewAsRedux.ViewType.Instructor?lesson.description_teacher:lesson.description_student,lessonUrl=levels[0]&&levels[0].url,showNotAuthorizedWarning=lesson.lockable&&viewAs===_viewAsRedux.ViewType.Instructor&&this.props.lockableAuthorizedLoaded&&!this.props.lockableAuthorized;return _react.default.createElement("div",{id:"progress-lesson-".concat(lesson.lessonNumber),className:"uitest-progress-lesson",style:_objectSpread(_objectSpread({},styles.outer),(hiddenForStudents||showAsLocked)&&styles.hiddenOrLocked)},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.main),(hiddenForStudents&&viewAs===_viewAsRedux.ViewType.Participant||isLockedForUser)&&styles.translucent)},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.heading),{marginBottom:this.state.collapsed?0:15})},_react.default.createElement("div",{style:styles.headingText,onClick:this.toggleCollapsed,tabIndex:"0",role:"button",onKeyDown:function onKeyDown(e){[" ","Enter","Spacebar"].includes(e.key)&&(e.preventDefault(),_this2.toggleCollapsed())},"aria-expanded":!this.state.collapsed},_react.default.createElement(_FontAwesome.default,{icon:caret,style:caretStyle}),hiddenForStudents&&_react.default.createElement(_FontAwesome.default,{icon:"eye-slash",style:styles.icon}),lesson.lockable&&this.props.lockStatusLoaded&&_react.default.createElement("span",{"data-tip":!0,"data-for":lockedTooltipId},_react.default.createElement(_FontAwesome.default,{icon:showAsLocked?"lock":"unlock",style:_objectSpread(_objectSpread({},styles.icon),!showAsLocked&&styles.unlockedIcon)}),!showAsLocked&&viewAs===_viewAsRedux.ViewType.Instructor&&_react.default.createElement(_reactTooltip.default,{id:lockedTooltipId,role:"tooltip",wrapper:"span",effect:"solid"},_locale.default.lockAssessmentLong())),_react.default.createElement("span",null,title)),viewAs===_viewAsRedux.ViewType.Participant&&lesson.student_lesson_plan_html_url&&_react.default.createElement("span",{style:styles.buttonStyle},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,className:"ui-test-lesson-resources",href:lesson.student_lesson_plan_html_url,text:_locale.default.lessonResources(),icon:"file-text",color:"purple",target:"_blank",onClick:this.onClickStudentLessonPlan}))),showNotAuthorizedWarning&&_react.default.createElement("div",{style:styles.notAuthorizedWarning},_locale.default.unverifiedTeacherLockWarning(),_react.default.createElement("a",{style:styles.learnMoreLink,href:"https://support.code.org/hc/en-us/articles/115001550131-Becoming-a-verified-teacher-CS-Principles-and-CS-Discoveries-only-"},_locale.default.learnMoreWithPeriod())),!this.state.collapsed&&_react.default.createElement(_ProgressLessonContent.default,{description,levels,disabled:isLockedForUser,selectedSectionId,lessonName:lesson.name})),viewAs===_viewAsRedux.ViewType.Instructor&&!this.props.isMiniView&&_react.default.createElement(_ProgressLessonTeacherInfo.default,{lesson,lessonUrl,onClickStudentLessonPlan:this.onClickStudentLessonPlan}),lesson.isFocusArea&&_react.default.createElement(_FocusAreaIndicator.default,null))},ProgressLesson}(_react.default.Component);_defineProperty(ProgressLesson,"propTypes",{lesson:_progressTypes.lessonType.isRequired,levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,scriptId:_propTypes.default.number,currentLessonId:_propTypes.default.number,viewAs:_propTypes.default.oneOf(Object.values(_viewAsRedux.ViewType)).isRequired,isVisible:_propTypes.default.bool.isRequired,hiddenForStudents:_propTypes.default.bool.isRequired,isLockedForUser:_propTypes.default.bool.isRequired,selectedSectionId:_propTypes.default.number,lockableAuthorized:_propTypes.default.bool,lockableAuthorizedLoaded:_propTypes.default.bool.isRequired,isLockedForAllStudents:_propTypes.default.bool.isRequired,isRtl:_propTypes.default.bool,isMiniView:_propTypes.default.bool,lockStatusLoaded:_propTypes.default.bool.isRequired});var styles={outer:{position:"relative",display:"table",width:"100%",height:"100%",background:_color.default.lightest_gray,borderColor:_color.default.border_gray,borderStyle:"solid",borderRadius:2,borderWidth:1,marginTop:3,marginBottom:15,marginLeft:3,marginRight:3},main:{padding:20},heading:_objectSpread(_objectSpread({fontSize:18},_fontConstants.default["main-font-semi-bold"]),{},{display:"flex",alignItems:"center"}),headingText:{cursor:"pointer",flexGrow:1},buttonStyle:{marginLeft:"auto"},hiddenOrLocked:{borderStyle:"dashed",borderWidth:4,marginTop:0,marginBottom:12,marginLeft:0,marginRight:0},translucent:{opacity:.6},caret:{marginRight:10},caretRTL:{marginLeft:10},icon:{marginRight:5,fontSize:18,color:_color.default.cyan},unlockedIcon:{color:_color.default.orange},notAuthorizedWarning:_objectSpread(_objectSpread({color:_color.default.red},_fontConstants.default["main-font-semi-bold-italic"]),{},{marginTop:10}),learnMoreLink:{marginLeft:5}},UnconnectedProgressLesson=ProgressLesson;exports.UnconnectedProgressLesson=UnconnectedProgressLesson;var _default=(0,_reactRedux.connect)((function(state,ownProps){return{currentLessonId:state.progress.currentLessonId,viewAs:state.viewAs,lockableAuthorized:state.lessonLock.lockableAuthorized,lockableAuthorizedLoaded:state.lessonLock.lockableAuthorizedLoaded,isVisible:(0,_progressHelpers.lessonIsVisible)(ownProps.lesson,state,state.viewAs),hiddenForStudents:!(0,_progressHelpers.lessonIsVisible)(ownProps.lesson,state,_viewAsRedux.ViewType.Participant),isLockedForUser:(0,_progressHelpers.lessonIsLockedForUser)(ownProps.lesson,ownProps.levels,state,state.viewAs),isLockedForAllStudents:(0,_progressHelpers.lessonIsLockedForAllStudents)(ownProps.lesson.id,state),selectedSectionId:state.teacherSections.selectedSectionId,scriptId:state.progress.scriptId,isRtl:state.isRtl,isMiniView:state.progress.isMiniView,lockStatusLoaded:state.progress.unitProgressHasLoaded&&state.lessonLock.lessonsBySectionIdLoaded}}))(ProgressLesson);exports.default=_default},"./src/templates/progress/ProgressLessonContent.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_ProgressLevelSet=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressLevelSet.jsx")),_ProgressBubbleSet=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressBubbleSet.jsx")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_progressReduxSelectors=__webpack_require__("./src/code-studio/progressReduxSelectors.js"),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressLessonContent=function(_React$Component){function ProgressLessonContent(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressLessonContent,_React$Component),ProgressLessonContent.prototype.render=function render(){var bubbles,_this$props=this.props,description=_this$props.description,levels=_this$props.levels,disabled=_this$props.disabled,selectedSectionId=_this$props.selectedSectionId,lessonName=_this$props.lessonName,progressions=(0,_progressReduxSelectors.progressionsFromLevels)(levels);return bubbles=0===progressions.length?_react.default.createElement("span",{style:styles.noLevelsWarning},_locale.default.lessonContainsNoLevels()):1!==progressions.length||progressions[0].name?progressions.map((function(progression,index){return _react.default.createElement(_ProgressLevelSet.default,{key:index,name:progression.displayName,lessonName,levels:progression.levels,disabled,selectedSectionId})})):_react.default.createElement(_ProgressBubbleSet.default,{levels:progressions[0].levels,disabled,selectedSectionId}),_react.default.createElement("div",null,description&&_react.default.createElement("div",{style:styles.summary},_react.default.createElement(_SafeMarkdown.default,{markdown:description})),_react.default.createElement("div",null," ",bubbles," "))},ProgressLessonContent}(_react.default.Component);exports.default=ProgressLessonContent,_defineProperty(ProgressLessonContent,"propTypes",{description:_propTypes.default.string,levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,disabled:_propTypes.default.bool.isRequired,selectedSectionId:_propTypes.default.number,lessonName:_propTypes.default.string});var styles={summary:function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({marginTop:20,marginBottom:30,fontSize:14},_fontConstants.default["main-font-regular"]),noLevelsWarning:{fontSize:13}};module.exports=exports.default},"./src/templates/progress/ProgressLevelSet.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressLevelSet=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_ProgressBubbleSet=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressBubbleSet.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_ProgressPill=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressPill.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressLevelSet=function(_React$Component){function ProgressLevelSet(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressLevelSet,_React$Component),ProgressLevelSet.prototype.render=function render(){var pillText,icon,_this$props=this.props,name=_this$props.name,levels=_this$props.levels,disabled=_this$props.disabled,selectedSectionId=_this$props.selectedSectionId,onBubbleClick=_this$props.onBubbleClick,isRtl=_this$props.isRtl,lessonName=_this$props.lessonName,multiLevelStep=levels.length>1,url=multiLevelStep||onBubbleClick?void 0:levels[0].url,onClick=multiLevelStep?void 0:function(){return onBubbleClick(levels[0])},col2Style=isRtl?styles.col2RTL:styles.col2,progressStyle=!1;return levels[0].isUnplugged||levels[levels.length-1].isUnplugged?multiLevelStep?(pillText="",icon=(0,_progressHelpers.getIconForLevel)(levels[0])):(pillText=_locale.default.unpluggedActivity(),progressStyle=!0):(pillText=levels[0].levelNumber.toString(),icon=(0,_progressHelpers.getIconForLevel)(levels[0]),multiLevelStep&&(pillText+="-".concat(levels[levels.length-1].levelNumber))),_react.default.createElement("table",{style:styles.table},_react.default.createElement("tbody",null,_react.default.createElement("tr",null,_react.default.createElement("td",{style:styles.col1},_react.default.createElement(_ProgressPill.default,{levels,icon,text:pillText,disabled,selectedSectionId,progressStyle,onSingleLevelClick:onBubbleClick})),_react.default.createElement("td",{style:col2Style},_react.default.createElement("a",{href:url,onClick},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.nameText),styles.text)},name)))),multiLevelStep&&_react.default.createElement("tr",null,_react.default.createElement("td",null,_react.default.createElement("div",{style:styles.linesAndDot},_react.default.createElement("div",{style:styles.verticalLine}),_react.default.createElement("div",{style:styles.horizontalLine}),_react.default.createElement("div",{style:styles.dot}))),_react.default.createElement("td",{style:styles.col2},_react.default.createElement(_ProgressBubbleSet.default,{levels,disabled,selectedSectionId,onBubbleClick,lessonName})))))},ProgressLevelSet}(_react.default.Component);_defineProperty(ProgressLevelSet,"propTypes",{name:_propTypes.default.string,lessonName:_propTypes.default.string,levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,disabled:_propTypes.default.bool.isRequired,selectedSectionId:_propTypes.default.number,onBubbleClick:_propTypes.default.func,isRtl:_propTypes.default.bool});var styles={table:{marginTop:12},nameText:{color:_color.default.charcoal},text:_objectSpread(_objectSpread({display:"inline-block"},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,letterSpacing:-.12}),col2:{paddingLeft:20},col2RTL:{paddingRight:20},linesAndDot:{whiteSpace:"nowrap",marginLeft:"50%",marginRight:14},verticalLine:{display:"inline-block",backgroundColor:_color.default.lighter_gray,height:15,width:3,position:"relative",bottom:2},horizontalLine:{display:"inline-block",backgroundColor:_color.default.lighter_gray,position:"relative",top:-2,height:3,width:"100%"},dot:{display:"inline-block",position:"relative",left:-2,top:1,backgroundColor:_color.default.lighter_gray,height:10,width:10,borderRadius:10}},UnconnectedProgressLevelSet=ProgressLevelSet;exports.UnconnectedProgressLevelSet=UnconnectedProgressLevelSet;var _default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))((0,_radium.default)(ProgressLevelSet));exports.default=_default},"./src/templates/progress/ProgressPill.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressPill=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_utils=__webpack_require__("./src/code-studio/utils.js"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_types=__webpack_require__("./src/templates/feedback/types.js"),_BubbleBadge=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./src/templates/progress/BubbleBadge.jsx")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressPill=function(_React$Component){function ProgressPill(){return _React$Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressPill,_React$Component);var _proto=ProgressPill.prototype;return _proto.getUrl=function getUrl(){var _this$props=this.props,levels=_this$props.levels,disabled=_this$props.disabled,selectedSectionId=_this$props.selectedSectionId,onSingleLevelClick=_this$props.onSingleLevelClick;if(!disabled&&!onSingleLevelClick&&1===levels.length){var userId=(0,_utils.queryParams)("user_id");return(0,_BubbleFactory.getBubbleUrl)(levels[0].url,userId,selectedSectionId)}},_proto.getTooltipProps=function getTooltipProps(){var tooltip=this.props.tooltip,tooltipProps={};if(tooltip){var id=tooltip.props.tooltipId;tooltipProps["data-tip"]=!0,tooltipProps["data-for"]=id,tooltipProps["aria-describedby"]=id}return tooltipProps},_proto.render=function render(){var _this$props2=this.props,levels=_this$props2.levels,icon=_this$props2.icon,text=_this$props2.text,tooltip=_this$props2.tooltip,disabled=_this$props2.disabled,progressStyle=_this$props2.progressStyle,isRtl=_this$props2.isRtl,onSingleLevelClick=_this$props2.onSingleLevelClick,firstLevel=levels[0],multiLevelStep=levels.length>1,url=this.getUrl(),onClick=multiLevelStep||disabled||url?void 0:function(){return onSingleLevelClick(firstLevel)},style=_objectSpread(_objectSpread(_objectSpread({},styles.levelPill),(url||onClick)&&_progressStyles.hoverStyle),!multiLevelStep&&(0,_progressStyles.levelProgressStyle)(firstLevel.status,firstLevel.kind)),iconMarginStyle=isRtl?styles.iconMarginRTL:styles.iconMargin,tooltipProps=this.getTooltipProps(),hasKeepWorkingFeedback=firstLevel.teacherFeedbackReviewState===_types.ReviewStates.keepWorking,displayBadge=!multiLevelStep&&(hasKeepWorkingFeedback||(0,_progressHelpers.isLevelAssessment)(firstLevel)),textStyle=progressStyle?styles.textProgressStyle:styles.text;return _react.default.createElement("a",{href:url,style:{textDecoration:"none"},className:"uitest-ProgressPill",onClick},_react.default.createElement("div",_extends({},tooltipProps,{style}),icon&&_react.default.createElement(_FontAwesome.default,{icon}),text&&_react.default.createElement("div",{className:"ProgressPillTextAndIcon",style:_objectSpread(_objectSpread({},textStyle),icon&&iconMarginStyle)},text),tooltip,displayBadge&&_react.default.createElement(_BubbleBadge.default,{badgeType:hasKeepWorkingFeedback?_BubbleBadge.BadgeType.keepWorking:_BubbleBadge.BadgeType.assessment,bubbleSize:_BubbleFactory.BubbleSize.full,bubbleShape:_BubbleFactory.BubbleShape.pill})))},ProgressPill}(_react.default.Component);_defineProperty(ProgressPill,"propTypes",{levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType),icon:_propTypes.default.string,text:_propTypes.default.string,tooltip:_propTypes.default.element,disabled:_propTypes.default.bool,selectedSectionId:_propTypes.default.number,progressStyle:_propTypes.default.bool,onSingleLevelClick:_propTypes.default.func,isRtl:_propTypes.default.bool});var styles={levelPill:_objectSpread(_objectSpread({textAlign:"center",justifyContent:"center",borderWidth:2,borderStyle:"solid",borderColor:_color.default.lighter_gray,color:_color.default.charcoal,display:"flex",fontSize:16},_fontConstants.default["main-font-semi-bold"]),{},{borderRadius:20,paddingLeft:10,paddingRight:10,paddingTop:6,paddingBottom:6,minWidth:70,lineHeight:"18px",marginTop:3,marginBottom:3,position:"relative"}),text:_objectSpread(_objectSpread({display:"inline-block"},_fontConstants.default["main-font-semi-bold"]),{},{letterSpacing:-.12}),textProgressStyle:_objectSpread(_objectSpread({display:"inline-block"},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:12,letterSpacing:-.12,width:120,whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}),iconMargin:{marginLeft:10},iconMarginRTL:{marginRight:10}},UnconnectedProgressPill=ProgressPill;exports.UnconnectedProgressPill=UnconnectedProgressPill;var _default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))((0,_radium.default)(ProgressPill));exports.default=_default}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QW1IckIsSUFBTTJELE9BQVMsQ0FDYmdSLFVBQVcsY0FBRixlQUNQWSxVQUFXLFNBQ1hDLGVBQWdCLFNBQ2hCalIsWUFBYSxFQUNiRCxZQUFhLFFBQ2JFLFlBQWFDLE9BQUFBLFFBQU1tSCxhQUNuQm5ILE1BQU9BLE9BQUFBLFFBQU1vUCxTQUNiaFEsUUFBUyxPQUNUb04sU0FBVSxJQUNQQyxlQUFBQSxRQUFjLHdCQVRWLElBVVA5TCxhQUFjLEdBQ2QyTyxZQUFhLEdBQ2JDLGFBQWMsR0FDZHlCLFdBQVksRUFDWkMsY0FBZSxFQUNmQyxTQUFVLEdBQ1Y3USxXQUFZLE9BQ1prTSxVQUFXLEVBQ1g1QixhQUFjLEVBQ2R0TCxTQUFVLGFBRVppQixLQUFNLGNBQUYsZUFDRmxCLFFBQVMsZ0JBQ05xTixlQUFBQSxRQUFjLHdCQUZmLElBR0Y0QyxlQUFnQixNQUVsQm9CLGtCQUFtQixjQUFGLGVBQ2ZyUixRQUFTLGdCQUNOcU4sZUFBQUEsUUFBYyx3QkFGRixJQUdmRCxTQUFVLEdBQ1Y2QyxlQUFnQixJQUNoQjFQLE1BQU8sSUFDUEgsV0FBWSxTQUNaMlIsU0FBVSxTQUNWQyxhQUFjLGFBRWhCZCxXQUFZLENBQ1Y3UCxXQUFZLElBRWQ0UCxjQUFlLENBQ2IzUCxZQUFhLEtBSUoyUSx3QkFBMEIzQixhLHNFQUV4QixFQUFBbEksWUFBQUEsVUFBUSxTQUFBQyxPQUFLLE1BQUssQ0FDL0JoQyxNQUFPZ0MsTUFBTWhDLE1BRGEsR0FBYixFQUVYLEVBQUE1RSxRQUFBQSxTQUFPNk8sZSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvU2FmZU1hcmtkb3duLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3BsdWdpbnMvZXh0ZXJuYWxMaW5rcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3Byb2dyZXNzL0ZvY3VzQXJlYUluZGljYXRvci5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9Qcm9ncmVzc0J1YmJsZS5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9Qcm9ncmVzc0J1YmJsZVNldC5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9Qcm9ncmVzc0xlc3Nvbi5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9Qcm9ncmVzc0xlc3NvbkNvbnRlbnQuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvcHJvZ3Jlc3MvUHJvZ3Jlc3NMZXZlbFNldC5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9Qcm9ncmVzc1BpbGwuanN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgUGFyc2VyIGZyb20gJ0Bjb2RlLWRvdC1vcmcvcmVkYWN0YWJsZS1tYXJrZG93bic7XG5cbmltcG9ydCB7XG4gIGRldGFpbHMsXG4gIGNsaWNrYWJsZVRleHQsXG4gIGV4cGFuZGFibGVJbWFnZXMsXG4gIHZpc3VhbENvZGVCbG9jayxcbiAgeG1sQXNUb3BMZXZlbEJsb2NrLFxufSBmcm9tICdAY29kZS1kb3Qtb3JnL3JlbWFyay1wbHVnaW5zJztcblxuaW1wb3J0IHJlbWFya1JlaHlwZSBmcm9tICdyZW1hcmstcmVoeXBlJztcbmltcG9ydCByZWh5cGVSYXcgZnJvbSAncmVoeXBlLXJhdyc7XG5pbXBvcnQgcmVoeXBlU2FuaXRpemUgZnJvbSAncmVoeXBlLXNhbml0aXplJztcbmltcG9ydCByZWh5cGVSZWFjdCBmcm9tICdyZWh5cGUtcmVhY3QnO1xuaW1wb3J0IGRlZmF1bHRTYW5pdGl6YXRpb25TY2hlbWEgZnJvbSAnaGFzdC11dGlsLXNhbml0aXplL2xpYi9naXRodWIuanNvbic7XG5cbmltcG9ydCBleHRlcm5hbExpbmtzIGZyb20gJy4vcGx1Z2lucy9leHRlcm5hbExpbmtzJztcblxuLyoqXG4gKiBCYXNpYyBjb21wb25lbnQgZm9yIHJlbmRlcmluZyBhIG1hcmtkb3duIHN0cmluZyBhcyBIVE1MLCB3aXRoIHNhbml0aXphdGlvbi5cbiAqIENhbiBzYWZlbHkgcmVuZGVyIG1hcmtkb3duIGV2ZW4gZnJvbSB1bnRydXN0ZWQgc291cmNlcywgd2l0aG91dCBwb3RlbnRpYWxseVxuICogZXhwb3NpbmcgdXMgdG8gYW4gWFNTIGluamVjdGlvbi5cbiAqL1xuY2xhc3MgU2FmZU1hcmtkb3duIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBtYXJrZG93bjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIG9wZW5FeHRlcm5hbExpbmtzSW5OZXdUYWI6IFByb3BUeXBlcy5ib29sLFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgLy8gV2Ugb25seSBvcGVuIGV4dGVybmFsIGxpbmtzIGluIGEgbmV3IHRhYiBpZiBpdCdzIGV4cGxpY2l0bHkgc3BlY2lmaWVkXG4gICAgLy8gdGhhdCB3ZSBkbyBzbzsgdGhpcyBpcyBhYnNvbHV0ZWx5IG5vdCBzb21ldGhpbmcgd2Ugd2FudCB0byBkbyBhcyBhXG4gICAgLy8gZ2VuZXJhbCBwcmFjdGljZSwgYnV0IHVuZm9ydHVuYXRlbHkgdGhlcmUgYXJlIHNvbWUgc2l0dWF0aW9ucyBpbiB3aGljaFxuICAgIC8vIGl0IGlzIGN1cnJlbnRseSBhIHJlcXVpcmVtZW50LlxuICAgIGNvbnN0IHBhcnNlciA9IHRoaXMucHJvcHMub3BlbkV4dGVybmFsTGlua3NJbk5ld1RhYlxuICAgICAgPyBtYXJrZG93blRvUmVhY3RFeHRlcm5hbExpbmtzXG4gICAgICA6IG1hcmtkb3duVG9SZWFjdDtcblxuICAgIGNvbnN0IHJlbmRlcmVkID0gcGFyc2VyLnByb2Nlc3NTeW5jKHRoaXMucHJvcHMubWFya2Rvd24pLmNvbnRlbnRzO1xuXG4gICAgY29uc3QgbWFya2Rvd25Qcm9wcyA9IHt9O1xuICAgIGlmICh0aGlzLnByb3BzLmNsYXNzTmFtZSkge1xuICAgICAgbWFya2Rvd25Qcm9wcy5jbGFzc05hbWUgPSB0aGlzLnByb3BzLmNsYXNzTmFtZTtcbiAgICB9XG4gICAgLy8gcmVoeXBlLXJlYWN0IHdpbGwgb25seSB3cmFwIHRoZSBjb21waWxlZCBtYXJrZG93biBpbiBhIDxkaXY+IHRhZ1xuICAgIC8vIGlmIGl0IG5lZWRzIHRvIChpZSwgaWYgdGhlcmUgd291bGQgb3RoZXJ3aXNlIGJlIG11bHRpcGxlIGVsZW1lbnRzXG4gICAgLy8gcmV0dXJuZWQpIG9yIHdlJ3JlIGFzc2lnbmluZyBwcm9wcy4gV2UgcHJlZmVyIGNvbnNpc3RlbmN5IG92ZXIgZmxleGliaWxpdHksXG4gICAgLy8gc28gaGVyZSB3ZSB3cmFwIHRoZSByZXN1bHQgaW4gYSBkaXYgaWYgaXQgd2Fzbid0IGFscmVhZHlcbiAgICBpZiAoXG4gICAgICByZW5kZXJlZCAmJlxuICAgICAgcmVuZGVyZWQudHlwZSA9PT0gJ2RpdicgJiZcbiAgICAgICFPYmplY3Qua2V5cyhtYXJrZG93blByb3BzKS5sZW5ndGhcbiAgICApIHtcbiAgICAgIHJldHVybiByZW5kZXJlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIDxkaXYgey4uLm1hcmtkb3duUHJvcHN9PntyZW5kZXJlZH08L2Rpdj47XG4gICAgfVxuICB9XG59XG5cbi8vIGNyZWF0ZSBjdXN0b20gc2FuaXRpemF0aW9uIHNjaGVtYSBhcyBwZXJcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zeW50YXgtdHJlZS9oYXN0LXV0aWwtc2FuaXRpemUjc2NoZW1hXG4vLyB0byBzdXBwb3J0IG91ciBjdXN0b20gc3ludGF4ZXNcbmNvbnN0IHNjaGVtYSA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRTYW5pdGl6YXRpb25TY2hlbWEpO1xuXG4vLyBXZSB1c2UgYSBfbG90XyBvZiBpbWFnZSBmb3JtYXR0aW5nIHN0dWZmIGluIG91clxuLy8gaW5zdHJ1Y3Rpb25zLCBwYXJ0aWN1bGFybHkgaW4gQ1NQXG5zY2hlbWEuYXR0cmlidXRlcy5pbWcucHVzaCgnaGVpZ2h0JywgJ3dpZHRoJyk7XG5cbi8vIEFkZCBzdXBwb3J0IGZvciBleHBhbmRhYmxlSW1hZ2VzXG5zY2hlbWEudGFnTmFtZXMucHVzaCgnc3BhbicpO1xuc2NoZW1hLmF0dHJpYnV0ZXMuc3BhbiA9IFsnZGF0YVVybCcsICdjbGFzc05hbWUnXTtcblxuLy8gQWRkIHN1cHBvcnQgZm9yIGlubGluZSBzdHlsZXMgKGdyb3NzKVxuLy8gVE9ETyByZXBsYWNlIGFsbCBpbmxpbmUgc3R5bGVzIGluIG91ciBjdXJyaWN1bHVtIGNvbnRlbnQgd2l0aFxuLy8gc2VtYW50aWNhbGx5LXNpZ25pZmljYW50IGNvbnRlbnRcbnNjaGVtYS5hdHRyaWJ1dGVzWycqJ10ucHVzaCgnc3R5bGUnLCAnY2xhc3NOYW1lJyk7XG5cbi8vIENsaWNrYWJsZVRleHQgdXNlcyBkYXRhLWlkIG9uIGEgYm9sZCB0YWcuXG5zY2hlbWEuYXR0cmlidXRlc1snYiddID0gWydkYXRhSWQnXTtcblxuLy8gQWRkIHN1cHBvcnQgZm9yIEJsb2NrbHkgWE1MXG5zY2hlbWEuY2xvYmJlciA9IFtdO1xuY29uc3QgYmxvY2tseVRhZ3MgPSBbXG4gICdibG9jaycsXG4gICdmdW5jdGlvbmFsX2lucHV0JyxcbiAgJ211dGF0aW9uJyxcbiAgJ25leHQnLFxuICAnc3RhdGVtZW50JyxcbiAgJ3RpdGxlJyxcbiAgJ2ZpZWxkJyxcbiAgJ3ZhbHVlJyxcbiAgJ3htbCcsXG5dO1xuc2NoZW1hLnRhZ05hbWVzID0gc2NoZW1hLnRhZ05hbWVzLmNvbmNhdChibG9ja2x5VGFncyk7XG5sZXQgYmxvY2tseUNvbXBvbmVudFdyYXBwZXJzID0ge307XG5ibG9ja2x5VGFncy5mb3JFYWNoKHRhZyA9PiB7XG4gIHNjaGVtYS5hdHRyaWJ1dGVzW3RhZ10gPSBbJ2Jsb2NrX3RleHQnLCAnaWQnLCAnaW5saW5lJywgJ25hbWUnLCAndHlwZSddO1xuXG4gIC8vIENyZWF0ZSBhIFJlYWN0IGNvbXBvbmVudCB0byB3cmFwIGVhY2ggQmxvY2tseSB0YWcuIFNpbmNlIHRoZXNlIGVsZW1lbnRzIHVsdGltYXRlbHlcbiAgLy8gcmVuZGVyIGFzIFJlYWN0IGNvbXBvbmVudHMsIGNyZWF0aW5nIGEgd3JhcHBlciBtYWtlcyB0aGVtIHZhbGlkICh3aGVyZWFzIDx4bWw+XG4gIC8vIGlzIG5vdCBhIHZhbGlkIFJlYWN0IHRhZykuXG4gIGJsb2NrbHlDb21wb25lbnRXcmFwcGVyc1t0YWddID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgY29uc3QgQmxvY2tseUVsZW1lbnQgPSB0YWc7XG4gICAgLy8gVGhlIFwiaXNcIiBhdHRyaWJ1dGUgcHJldmVudHMgUmVhY3QgZnJvbSB3YXJuaW5nIGFib3V0IHVucmVjb2duaXplZCB0YWdzOlxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9pc3N1ZXMvMTExODQjaXNzdWVjb21tZW50LTMzNTk0MjQzOVxuICAgIHJldHVybiA8QmxvY2tseUVsZW1lbnQgaXM9e3RhZ30gey4uLnByb3BzfSAvPjtcbiAgfTtcbn0pO1xuXG5jb25zdCBtYXJrZG93blRvUmVhY3QgPSBQYXJzZXIuY3JlYXRlKClcbiAgLmdldFBhcnNlcigpXG4gIC8vIGluY2x1ZGUgY3VzdG9tIHBsdWdpbnNcbiAgLnVzZShbXG4gICAgY2xpY2thYmxlVGV4dCxcbiAgICBleHBhbmRhYmxlSW1hZ2VzLFxuICAgIHZpc3VhbENvZGVCbG9jayxcbiAgICB4bWxBc1RvcExldmVsQmxvY2ssXG4gICAgZGV0YWlscyxcbiAgXSlcbiAgLy8gY29udmVydCBtYXJrZG93biB0byBhbiBIVE1MIEFic3RyYWN0IFN5bnRheCBUcmVlIChIQVNUKVxuICAudXNlKHJlbWFya1JlaHlwZSwge1xuICAgIC8vIGluY2x1ZGUgYW55IHJhdyBIVE1MIGluIHRoZSBtYXJrZG93biBhcyByYXcgSFRNTCBub2RlcyBpbiB0aGUgSEFTVFxuICAgIGFsbG93RGFuZ2Vyb3VzSFRNTDogdHJ1ZSxcbiAgfSlcbiAgLy8gcGFyc2UgdGhlIHJhdyBIVE1MIG5vZGVzIGluIHRoZSBIQVNUIHRvIGFjdHVhbCBIQVNUIG5vZGVzXG4gIC51c2UocmVoeXBlUmF3KVxuICAvLyBzYW5pdGl6ZSB0aGUgSEFTVFxuICAudXNlKHJlaHlwZVNhbml0aXplLCBzY2hlbWEpXG4gIC8vIGNvbnZlcnQgdGhlIEhBU1QgdG8gUmVhY3RcbiAgLnVzZShyZWh5cGVSZWFjdCwge1xuICAgIGNyZWF0ZUVsZW1lbnQ6IFJlYWN0LmNyZWF0ZUVsZW1lbnQsXG4gICAgLy8gVXNlIFJlYWN0IGNvbXBvbmVudCB3cmFwcGVycyBmb3IgQmxvY2tseSBYTUwgZWxlbWVudHMgdG8gcHJldmVudFxuICAgIC8vIFJlYWN0IGZyb20gd2FybmluZyB1cyBhYm91dCBpbnZhbGlkIGNvbXBvbmVudHMuXG4gICAgY29tcG9uZW50czogYmxvY2tseUNvbXBvbmVudFdyYXBwZXJzLFxuICB9KTtcblxuY29uc3QgbWFya2Rvd25Ub1JlYWN0RXh0ZXJuYWxMaW5rcyA9IG1hcmtkb3duVG9SZWFjdCgpLnVzZShleHRlcm5hbExpbmtzLCB7XG4gIGxpbmtzOiAnYWxsJyxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBTYWZlTWFya2Rvd247XG4iLCIvKipcbiAqIE9wZW4gZXh0ZXJuYWwgbGlua3MgaW4gYSBuZXcgdGFiLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBleHRlcm5hbExpbmtzKG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBQYXJzZXIgPSB0aGlzLlBhcnNlcjtcbiAgY29uc3QgdG9rZW5pemVycyA9IFBhcnNlci5wcm90b3R5cGUuaW5saW5lVG9rZW5pemVycztcbiAgY29uc3Qgb3JpZ2luYWwgPSB0b2tlbml6ZXJzLmxpbms7XG4gIGNvbnN0IGFsbCA9IG9wdGlvbnMubGlua3MgPT09ICdhbGwnO1xuXG4gIHRva2VuaXplcnMubGluayA9IGZ1bmN0aW9uIChlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgICBjb25zdCBsaW5rID0gb3JpZ2luYWwuY2FsbCh0aGlzLCBlYXQsIHZhbHVlLCBzaWxlbnQpO1xuICAgIGlmIChsaW5rICYmIGxpbmsudHlwZSA9PT0gJ2xpbmsnICYmIChhbGwgfHwgaXNFeHRlcm5hbExpbmsobGluay51cmwpKSkge1xuICAgICAgbGluay5kYXRhID0gbGluay5kYXRhIHx8IHt9O1xuICAgICAgbGluay5kYXRhLmhQcm9wZXJ0aWVzID0gbGluay5kYXRhLmhQcm9wZXJ0aWVzIHx8IHt9O1xuXG4gICAgICBjb25zdCBwcm9wcyA9IGxpbmsuZGF0YS5oUHJvcGVydGllcztcbiAgICAgIHByb3BzLnRhcmdldCA9IHByb3BzLnRhcmdldCB8fCAnX2JsYW5rJztcbiAgICAgIHByb3BzLnJlbCA9ICdub3JlZmVycmVyIG5vb3BlbmVyJztcbiAgICB9XG5cbiAgICByZXR1cm4gbGluaztcbiAgfTtcbiAgdG9rZW5pemVycy5saW5rLmxvY2F0b3IgPSBvcmlnaW5hbC5sb2NhdG9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNFeHRlcm5hbExpbmsodXJsKSB7XG4gIHJldHVybiAhL2h0dHBzPzpcXC9cXC8oW14uXStcXC4pKmNvZGUub3JnKDpbMC05XSspP1xcLy8udGVzdChmdWxseVF1YWxpZmllZCh1cmwpKTtcbn1cblxubGV0IGE7XG5mdW5jdGlvbiBmdWxseVF1YWxpZmllZChwYXRoKSB7XG4gIGEgPSBhIHx8IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgYS5ocmVmID0gcGF0aDtcbiAgcmV0dXJuIGEuaHJlZjtcbn1cbiIsIi8qKlxuICogQSBjb21wb25lbnQgdGhhdCBhZGRzIGEgcmliYm9uIHRvIHRoZSBzaWRlIG9mIHlvdXIgcm93IHRvIGluZGljYXRlIHRoYXQgaXQgaXNcbiAqIGEgZm9jdXMgYXJlYS4gTm90ZTogVGhpcyBpcyBFbmdsaXNoIG9ubHkuXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSYWRpdW0gZnJvbSAncmFkaXVtJzsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1yZXN0cmljdGVkLWltcG9ydHNcbmltcG9ydCBSZWFjdFRvb2x0aXAgZnJvbSAncmVhY3QtdG9vbHRpcCc7XG5pbXBvcnQgRm9udEF3ZXNvbWUgZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9Gb250QXdlc29tZSc7XG5pbXBvcnQgY29sb3IgZnJvbSAnQGNkby9hcHBzL3V0aWwvY29sb3InO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIG1haW46IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICByaWdodDogMCxcbiAgICB0b3A6IDAsXG4gICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gIH0sXG4gIGFycm93Q29udGFpbmVyOiB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgdG9wOiAxMCxcbiAgfSxcbiAgbGVmdEFycm93OiB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgd2lkdGg6IDAsXG4gICAgaGVpZ2h0OiAwLFxuICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgIGJvcmRlcldpZHRoOiAnMTdweCAyMHB4IDE3cHgnLFxuICAgIGJvcmRlckNvbG9yOiBgdHJhbnNwYXJlbnQgJHtjb2xvci5jeWFufSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudGAsXG4gIH0sXG4gIGZvY3VzQXJlYToge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IuY3lhbixcbiAgICBjb2xvcjogY29sb3Iud2hpdGUsXG4gICAgaGVpZ2h0OiAzNCxcbiAgICBsaW5lSGVpZ2h0OiAnMzRweCcsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgdG9wOiAtMyxcbiAgfSxcbiAgdGV4dDoge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICB9LFxuICBmb2N1c0FyZWFJY29uOiB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgY29sb3I6IGNvbG9yLndoaXRlLFxuICAgIGxpbmVIZWlnaHQ6ICcxM3B4JyxcbiAgICBwYWRkaW5nOiA1LFxuICAgIG1hcmdpbkxlZnQ6IDUsXG4gICAgbWFyZ2luUmlnaHQ6IDUsXG4gICAgYm9yZGVyUmFkaXVzOiA0LFxuICAgICc6aG92ZXInOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmRlZmF1bHRfYmx1ZSxcbiAgICB9LFxuICB9LFxufTtcblxuY29uc3QgRm9jdXNBcmVhSW5kaWNhdG9yID0gKCkgPT4gKFxuICA8ZGl2IHN0eWxlPXtzdHlsZXMubWFpbn0+XG4gICAgPGRpdiBzdHlsZT17c3R5bGVzLmFycm93Q29udGFpbmVyfT5cbiAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5sZWZ0QXJyb3d9IC8+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBzdHlsZT17c3R5bGVzLmZvY3VzQXJlYX0+XG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMudGV4dH0+Rm9jdXMgQXJlYTwvZGl2PlxuICAgICAgPGEgaHJlZj17d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgJy9wcmV2aWV3LWFzc2lnbm1lbnRzJ30+XG4gICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5mb2N1c0FyZWFJY29ufSBkYXRhLXRpcCBkYXRhLWZvcj1cImZvY3VzLWFyZWFcIj5cbiAgICAgICAgICA8Rm9udEF3ZXNvbWUgaWNvbj1cInBlbmNpbFwiIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICAgIDxSZWFjdFRvb2x0aXAgaWQ9XCJmb2N1cy1hcmVhXCIgcm9sZT1cInRvb2x0aXBcIiBlZmZlY3Q9XCJzb2xpZFwiPlxuICAgICAgQ2xpY2sgdG8gY2hhbmdlIHlvdXIgZm9jdXMgYXJlYS5cbiAgICA8L1JlYWN0VG9vbHRpcD5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBSYWRpdW0oRm9jdXNBcmVhSW5kaWNhdG9yKTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHtpc0xldmVsQXNzZXNzbWVudH0gZnJvbSAnLi9wcm9ncmVzc0hlbHBlcnMnO1xuaW1wb3J0IHtsZXZlbFdpdGhQcm9ncmVzc1R5cGV9IGZyb20gJy4vcHJvZ3Jlc3NUeXBlcyc7XG5pbXBvcnQge1xuICBCYXNpY0J1YmJsZSxcbiAgQnViYmxlTGluayxcbiAgQnViYmxlU2l6ZSxcbiAgQnViYmxlVG9vbHRpcCxcbiAgZ2V0QnViYmxlQ2xhc3NOYW1lcyxcbiAgZ2V0QnViYmxlQ29udGVudCxcbiAgZ2V0QnViYmxlU2hhcGUsXG4gIGdldEJ1YmJsZVVybCxcbn0gZnJvbSAnLi9CdWJibGVGYWN0b3J5JztcbmltcG9ydCB7bGV2ZWxQcm9ncmVzc1N0eWxlfSBmcm9tICcuL3Byb2dyZXNzU3R5bGVzJztcbmltcG9ydCB7UmV2aWV3U3RhdGVzfSBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL2ZlZWRiYWNrL3R5cGVzJztcbmltcG9ydCBCdWJibGVCYWRnZSwge0JhZGdlVHlwZX0gZnJvbSAnLi9CdWJibGVCYWRnZSc7XG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5cbi8qKlxuICogQSBQcm9ncmVzc0J1YmJsZSByZXByZXNlbnRzIHByb2dyZXNzIGZvciBhIHNwZWNpZmljIGxldmVsLiBJdCBjYW4gYmUgYSBjaXJjbGVcbiAqIG9yIGEgZGlhbW9uZCAob3IgYSBwaWxsIGluIHRoZSBjYXNlIG9mIHVucGx1Z2dlZCBsZXZlbHMpLCBhbmQgaXQgY2FuIGJlIGJpZ1xuICogb3Igc21hbGwuIFRoZSBmaWxsIGFuZCBvdXRsaW5lIGNoYW5nZSBkZXBlbmRpbmcgb24gdGhlIGxldmVsIHN0YXR1cy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZ3Jlc3NCdWJibGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGxldmVsOiBsZXZlbFdpdGhQcm9ncmVzc1R5cGUuaXNSZXF1aXJlZCxcbiAgICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgICBzbWFsbEJ1YmJsZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgc2VsZWN0ZWRTZWN0aW9uSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgc2VsZWN0ZWRTdHVkZW50SWQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIFByb3BUeXBlcy5udW1iZXIsXG4gICAgXSksXG4gICAgaGlkZVRvb2xUaXBzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICAvLyBXZSBoYXZlIHRoZSBhYmlsaXR5IHRvIGhpZGUgdGhlIGFzc2Vzc21lbnQgY2hlY2ttYXJrIGJhZGdlIGJlY2F1c2VcbiAgICAvLyBpdCdzIHZpc3VhbGx5IGNsdXR0ZXJpbmcgaW4gcGxhY2VzIGxpa2UgdGhlIHRlYWNoZXIgcGFuZWwgYW5kIHByb2dyZXNzIHRhYmxlXG4gICAgaGlkZUFzc2Vzc21lbnRCYWRnZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgbGVzc29uTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgfTtcblxuICBpc0NsaWNrYWJsZSgpIHtcbiAgICBjb25zdCB7ZGlzYWJsZWQsIGxldmVsLCBvbkNsaWNrfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuICFkaXNhYmxlZCAmJiAoISFsZXZlbC51cmwgfHwgISFvbkNsaWNrKTtcbiAgfVxuXG4gIG9uQ2xpY2tMZXZlbCA9ICgpID0+IHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbkNsaWNrKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2sodGhpcy5wcm9wcy5sZXZlbCk7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBvbkNsaWNrIHRha2VzIHByaW9yaXR5IG92ZXIgdXJsLCBzbyBpZiB3ZSBoYXZlIG9uQ2xpY2ssIHJldHVybiBudWxsXG4gICAqL1xuICBnZXRVcmwoKSB7XG4gICAgY29uc3Qge29uQ2xpY2ssIGxldmVsLCBzZWxlY3RlZFNlY3Rpb25JZCwgc2VsZWN0ZWRTdHVkZW50SWR9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gb25DbGlja1xuICAgICAgPyBudWxsXG4gICAgICA6IGdldEJ1YmJsZVVybChsZXZlbC51cmwsIHNlbGVjdGVkU3R1ZGVudElkLCBzZWxlY3RlZFNlY3Rpb25JZCwgdHJ1ZSk7XG4gIH1cblxuICByZW5kZXJCdWJibGVCYWRnZShidWJibGVTaGFwZSwgYnViYmxlU2l6ZSkge1xuICAgIGNvbnN0IHtsZXZlbCwgc21hbGxCdWJibGUsIGhpZGVBc3Nlc3NtZW50QmFkZ2V9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGhhc0tlZXBXb3JraW5nRmVlZGJhY2sgPVxuICAgICAgbGV2ZWwudGVhY2hlckZlZWRiYWNrUmV2aWV3U3RhdGUgPT09IFJldmlld1N0YXRlcy5rZWVwV29ya2luZztcblxuICAgIGNvbnN0IGRpc3BsYXlBc3Nlc3NtZW50QmFkZ2UgPVxuICAgICAgaXNMZXZlbEFzc2Vzc21lbnQobGV2ZWwpICYmICFoaWRlQXNzZXNzbWVudEJhZGdlO1xuXG4gICAgaWYgKChkaXNwbGF5QXNzZXNzbWVudEJhZGdlIHx8IGhhc0tlZXBXb3JraW5nRmVlZGJhY2spICYmICFzbWFsbEJ1YmJsZSkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPEJ1YmJsZUJhZGdlXG4gICAgICAgICAgYmFkZ2VUeXBlPXtcbiAgICAgICAgICAgIGhhc0tlZXBXb3JraW5nRmVlZGJhY2tcbiAgICAgICAgICAgICAgPyBCYWRnZVR5cGUua2VlcFdvcmtpbmdcbiAgICAgICAgICAgICAgOiBCYWRnZVR5cGUuYXNzZXNzbWVudFxuICAgICAgICAgIH1cbiAgICAgICAgICBidWJibGVTaXplPXtidWJibGVTaXplfVxuICAgICAgICAgIGJ1YmJsZVNoYXBlPXtidWJibGVTaGFwZX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgY3JlYXRlQnViYmxlRWxlbWVudCgpIHtcbiAgICBjb25zdCB7bGV2ZWwsIHNtYWxsQnViYmxlLCBoaWRlVG9vbFRpcHN9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBidWJibGVTaXplID0gc21hbGxCdWJibGUgPyBCdWJibGVTaXplLmRvdCA6IEJ1YmJsZVNpemUuZnVsbDtcblxuICAgIGNvbnN0IGNvbnRlbnQgPSBnZXRCdWJibGVDb250ZW50KFxuICAgICAgbGV2ZWwuaXNMb2NrZWQsXG4gICAgICBsZXZlbC5pc1VucGx1Z2dlZCxcbiAgICAgIGxldmVsLmJvbnVzLFxuICAgICAgbGV2ZWwucGFpcmVkLFxuICAgICAgbGV2ZWwuYnViYmxlVGV4dCB8fCBsZXZlbC5sZXR0ZXIgfHwgbGV2ZWwubGV2ZWxOdW1iZXIsXG4gICAgICBidWJibGVTaXplXG4gICAgKTtcblxuICAgIGNvbnN0IGJ1YmJsZVNoYXBlID0gZ2V0QnViYmxlU2hhcGUoXG4gICAgICAvLyBvdmVycmlkZSBwaWxsIHNoYXBlIGZvciBzbWFsbCBidWJibGVzXG4gICAgICBsZXZlbC5pc1VucGx1Z2dlZCAmJiAhc21hbGxCdWJibGUsXG4gICAgICBsZXZlbC5pc0NvbmNlcHRMZXZlbFxuICAgICk7XG5cbiAgICBjb25zdCBidWJibGUgPSAoXG4gICAgICA8QmFzaWNCdWJibGVcbiAgICAgICAgc2hhcGU9e2J1YmJsZVNoYXBlfVxuICAgICAgICBzaXplPXtidWJibGVTaXplfVxuICAgICAgICBwcm9ncmVzc1N0eWxlPXtsZXZlbFByb2dyZXNzU3R5bGUobGV2ZWwuc3RhdHVzLCBsZXZlbC5raW5kKX1cbiAgICAgICAgY2xhc3NOYW1lcz17Z2V0QnViYmxlQ2xhc3NOYW1lcyh0aGlzLmlzQ2xpY2thYmxlKCkpfVxuICAgICAgPlxuICAgICAgICB7Y29udGVudH1cbiAgICAgICAge3RoaXMucmVuZGVyQnViYmxlQmFkZ2UoYnViYmxlU2hhcGUsIGJ1YmJsZVNpemUpfVxuICAgICAgPC9CYXNpY0J1YmJsZT5cbiAgICApO1xuXG4gICAgaWYgKGhpZGVUb29sVGlwcykge1xuICAgICAgcmV0dXJuIGJ1YmJsZTtcbiAgICB9XG4gICAgcmV0dXJuIDxCdWJibGVUb29sdGlwIGxldmVsPXtsZXZlbH0+e2J1YmJsZX08L0J1YmJsZVRvb2x0aXA+O1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IGxldmVsID0gdGhpcy5wcm9wcy5sZXZlbDtcbiAgICBjb25zdCBsZXZlbElEID0gbGV2ZWwuYnViYmxlVGV4dCB8fCBsZXZlbC5sZXR0ZXIgfHwgbGV2ZWwubGV2ZWxOdW1iZXI7XG4gICAgY29uc3QgbGVzc29uTmFtZSA9IHRoaXMucHJvcHMubGVzc29uTmFtZTtcbiAgICBsZXQgZGVzY3JpcHRpb24gPSBpMThuLnByb2dyZXNzQnViYmxlRGVzY3JpcHRpb24oe1xuICAgICAgbGV2ZWxJRDogbGV2ZWxJRCxcbiAgICB9KTtcbiAgICBpZiAobGVzc29uTmFtZSkge1xuICAgICAgZGVzY3JpcHRpb24gPSBpMThuLnByb2dyZXNzQnViYmxlRGVzY3JpcHRpb25XaXRoTGVzc29uKHtcbiAgICAgICAgbGV2ZWxJRDogbGV2ZWxJRCxcbiAgICAgICAgbGVzc29uTmFtZTogbGVzc29uTmFtZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAodGhpcy5pc0NsaWNrYWJsZSgpKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8QnViYmxlTGlua1xuICAgICAgICAgIHVybD17dGhpcy5nZXRVcmwoKX1cbiAgICAgICAgICBvbkNsaWNrPXt0aGlzLm9uQ2xpY2tMZXZlbH1cbiAgICAgICAgICBhMTF5X2Rlc2NyaXB0aW9uPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLmNyZWF0ZUJ1YmJsZUVsZW1lbnQoKX1cbiAgICAgICAgPC9CdWJibGVMaW5rPlxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlQnViYmxlRWxlbWVudCgpO1xuICAgIH1cbiAgfVxufVxuIiwiLyoqXG4gKiBBbiBvcmRlcmVkIHNldCBvZiBwcm9ncmVzcyBidWJibGVzLlxuICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSYWRpdW0gZnJvbSAncmFkaXVtJzsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1yZXN0cmljdGVkLWltcG9ydHNcbmltcG9ydCBQcm9ncmVzc0J1YmJsZSBmcm9tICcuL1Byb2dyZXNzQnViYmxlJztcbmltcG9ydCBjb2xvciBmcm9tICdAY2RvL2FwcHMvdXRpbC9jb2xvcic7XG5pbXBvcnQge2xldmVsV2l0aFByb2dyZXNzVHlwZX0gZnJvbSAnLi9wcm9ncmVzc1R5cGVzJztcbmltcG9ydCB7RE9UX1NJWkUsIERJQU1PTkRfRE9UX1NJWkV9IGZyb20gJy4vcHJvZ3Jlc3NTdHlsZXMnO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tICdyZWFjdC1yZWR1eCc7XG5cbi8vIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgUHJvZ3Jlc3NUYWJsZURldGFpbENlbGxcbi8vIGNvbXBvbmVudCB3aWxsIGJlIHJlbW92ZWQgYXMgcGFydCBvZiBodHRwczovL2NvZGVkb3RvcmcuYXRsYXNzaWFuLm5ldC9icm93c2UvTFAtMTYwNlxuY2xhc3MgUHJvZ3Jlc3NCdWJibGVTZXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGxldmVsczogUHJvcFR5cGVzLmFycmF5T2YobGV2ZWxXaXRoUHJvZ3Jlc3NUeXBlKS5pc1JlcXVpcmVkLFxuICAgIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHNlbGVjdGVkU2VjdGlvbklkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIHNlbGVjdGVkU3R1ZGVudElkOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICBQcm9wVHlwZXMubnVtYmVyLFxuICAgIF0pLFxuICAgIGhpZGVUb29sVGlwczogUHJvcFR5cGVzLmJvb2wsXG4gICAgbGVzc29uRXh0cmFzRW5hYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc2hvd1N1YmxldmVsczogUHJvcFR5cGVzLmJvb2wsXG4gICAgb25CdWJibGVDbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gICAgbGVzc29uTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAvLyBSZWR1eFxuICAgIGlzUnRsOiBQcm9wVHlwZXMuYm9vbCxcbiAgfTtcblxuICByZW5kZXJCdWJibGUgPSAobGV2ZWwsIGluZGV4LCBpc1N1YmxldmVsKSA9PiB7XG4gICAgY29uc3Qge2xldmVscywgc2VsZWN0ZWRTZWN0aW9uSWQsIHNlbGVjdGVkU3R1ZGVudElkLCBpc1J0bH0gPSB0aGlzLnByb3BzO1xuXG4gICAgLy8gQWRqdXN0IGJhY2tncm91bmQgc3R5bGVzIGlmIGxvY2FsZSBpcyBSVExcbiAgICBjb25zdCBiYWNrZ3JvdW5kRmlyc3RTdHlsZSA9IGlzUnRsXG4gICAgICA/IHN0eWxlcy5iYWNrZ3JvdW5kTGFzdFxuICAgICAgOiBzdHlsZXMuYmFja2dyb3VuZEZpcnN0O1xuICAgIGNvbnN0IGJhY2tncm91bmRMYXN0U3R5bGUgPSBpc1J0bFxuICAgICAgPyBzdHlsZXMuYmFja2dyb3VuZEZpcnN0XG4gICAgICA6IHN0eWxlcy5iYWNrZ3JvdW5kTGFzdDtcblxuICAgIGNvbnN0IGJhY2tncm91bmRTdHlsZVByb3AgPSB7XG4gICAgICAuLi5zdHlsZXMuYmFja2dyb3VuZCxcbiAgICAgIC4uLihsZXZlbC5pc0NvbmNlcHRMZXZlbCAmJiBzdHlsZXMuYmFja2dyb3VuZERpYW1vbmQpLFxuICAgICAgLi4uKGlzU3VibGV2ZWwgJiYgc3R5bGVzLmJhY2tncm91bmRTdWJsZXZlbCksXG4gICAgICAuLi4obGV2ZWwuaXNVbnBsdWdnZWQgJiYgc3R5bGVzLmJhY2tncm91bmRQaWxsKSxcbiAgICAgIC4uLighaXNTdWJsZXZlbCAmJiBpbmRleCA9PT0gMCAmJiBiYWNrZ3JvdW5kRmlyc3RTdHlsZSksXG4gICAgICAuLi4oIWlzU3VibGV2ZWwgJiZcbiAgICAgICAgIWxldmVsLnN1YmxldmVscyAmJlxuICAgICAgICBpbmRleCA9PT0gbGV2ZWxzLmxlbmd0aCAtIDEgJiZcbiAgICAgICAgYmFja2dyb3VuZExhc3RTdHlsZSksXG4gICAgfTtcblxuICAgIGNvbnN0IGNvbnRhaW5lclN0eWxlUHJvcCA9IHtcbiAgICAgIC4uLnN0eWxlcy5jb250YWluZXIsXG4gICAgICAuLi4obGV2ZWwuaXNVbnBsdWdnZWQgJiYgc3R5bGVzLnBpbGxDb250YWluZXIpLFxuICAgICAgLi4uKGxldmVsLmlzQ29uY2VwdExldmVsICYmIHN0eWxlcy5kaWFtb25kQ29udGFpbmVyKSxcbiAgICAgIC4uLihpc1N1YmxldmVsICYmIHN0eWxlcy5jb250YWluZXJTdWJsZXZlbCksXG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMud2l0aEJhY2tncm91bmR9IGtleT17aW5kZXh9PlxuICAgICAgICA8ZGl2IHN0eWxlPXtiYWNrZ3JvdW5kU3R5bGVQcm9wfSAvPlxuICAgICAgICA8ZGl2IHN0eWxlPXtjb250YWluZXJTdHlsZVByb3B9PlxuICAgICAgICAgIDxQcm9ncmVzc0J1YmJsZVxuICAgICAgICAgICAgbGV2ZWw9e2xldmVsfVxuICAgICAgICAgICAgZGlzYWJsZWQ9e3RoaXMucHJvcHMuZGlzYWJsZWR9XG4gICAgICAgICAgICBzbWFsbEJ1YmJsZT17aXNTdWJsZXZlbH1cbiAgICAgICAgICAgIHNlbGVjdGVkU2VjdGlvbklkPXtzZWxlY3RlZFNlY3Rpb25JZH1cbiAgICAgICAgICAgIHNlbGVjdGVkU3R1ZGVudElkPXtzZWxlY3RlZFN0dWRlbnRJZH1cbiAgICAgICAgICAgIGhpZGVUb29sVGlwcz17dGhpcy5wcm9wcy5oaWRlVG9vbFRpcHN9XG4gICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnByb3BzLm9uQnViYmxlQ2xpY2t9XG4gICAgICAgICAgICBsZXNzb25OYW1lPXt0aGlzLnByb3BzLmxlc3Nvbk5hbWV9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7bGV2ZWxzLCBzdHlsZSwgc2hvd1N1YmxldmVsc30gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXt7Li4uc3R5bGVzLm1haW4sIC4uLnN0eWxlfX0+XG4gICAgICAgIHtsZXZlbHMubWFwKChsZXZlbCwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHNwYW4ga2V5PXtpbmRleH0+XG4gICAgICAgICAgICAgIHt0aGlzLnJlbmRlckJ1YmJsZShsZXZlbCwgaW5kZXgsIGZhbHNlKX1cbiAgICAgICAgICAgICAge3Nob3dTdWJsZXZlbHMgJiZcbiAgICAgICAgICAgICAgICBsZXZlbC5zdWJsZXZlbHMgJiZcbiAgICAgICAgICAgICAgICBsZXZlbC5zdWJsZXZlbHMubWFwKChzdWJsZXZlbCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnJlbmRlckJ1YmJsZShzdWJsZXZlbCwgaW5kZXgsIHRydWUpfVxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICk7XG4gICAgICAgIH0pfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBzdHlsZXMgPSB7XG4gIG1haW46IHtcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgfSxcbiAgd2l0aEJhY2tncm91bmQ6IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgfSxcbiAgYmFja2dyb3VuZDoge1xuICAgIGhlaWdodDogMTAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci5saWdodGVyX2dyYXksXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogMCxcbiAgICAvLyBkb3Qgc2l6ZSwgcGx1cyBib3JkZXJzLCBwbHVzIG1hcmdpbiwgbWludXMgb3VyIGhlaWdodCBvZiBcImJhY2tncm91bmRcIlxuICAgIHRvcDogKERPVF9TSVpFICsgNCArIDYgLSAxMCkgLyAyLFxuICB9LFxuICBiYWNrZ3JvdW5kRGlhbW9uZDoge1xuICAgIHRvcDogKERJQU1PTkRfRE9UX1NJWkUgKyA0ICsgMTIgLSAxMCkgLyAyLFxuICB9LFxuICBiYWNrZ3JvdW5kUGlsbDoge1xuICAgIC8vIHBpbGwgaGFzIGhlaWdodCBvZiAxOCwgYm9yZGVyIG9mIDIsIHBhZGRpbmcgb2YgNiwgbWFyZ2luIG9mIDNcbiAgICB0b3A6ICgxOCArIDQgKyAxMiArIDYgLSAxMCkgLyAyLFxuICB9LFxuICBiYWNrZ3JvdW5kU3VibGV2ZWw6IHtcbiAgICB0b3A6IDksXG4gIH0sXG4gIGJhY2tncm91bmRGaXJzdDoge1xuICAgIGxlZnQ6IDE1LFxuICB9LFxuICBiYWNrZ3JvdW5kTGFzdDoge1xuICAgIHJpZ2h0OiAxNSxcbiAgfSxcbiAgY29udGFpbmVyOiB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gIH0sXG4gIGNvbnRhaW5lclN1YmxldmVsOiB7XG4gICAgdG9wOiA1LFxuICB9LFxuICBkaWFtb25kQ29udGFpbmVyOiB7XG4gICAgLy8gSGVpZ2h0IG5lZWRlZCBvbmx5IGJ5IElFIHRvIGdldCBkaWFtb25kcyB0byBsaW5lIHVwIHByb3Blcmx5XG4gICAgaGVpZ2h0OiAzNixcbiAgfSxcbiAgcGlsbENvbnRhaW5lcjoge1xuICAgIG1hcmdpblJpZ2h0OiAyLFxuICAgIC8vIEhlaWdodCBuZWVkZWQgb25seSBieSBJRSB0byBnZXQgcGlsbCB0byBsaW5lIHVwIHByb3Blcmx5XG4gICAgaGVpZ2h0OiAzNyxcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBVbmNvbm5lY3RlZFByb2dyZXNzQnViYmxlU2V0ID0gUHJvZ3Jlc3NCdWJibGVTZXQ7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3Qoc3RhdGUgPT4gKHtcbiAgaXNSdGw6IHN0YXRlLmlzUnRsLFxufSkpKFJhZGl1bShQcm9ncmVzc0J1YmJsZVNldCkpO1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBQcm9ncmVzc0xlc3NvbkNvbnRlbnQgZnJvbSAnLi9Qcm9ncmVzc0xlc3NvbkNvbnRlbnQnO1xuaW1wb3J0IEZvbnRBd2Vzb21lIGZyb20gJy4uL0ZvbnRBd2Vzb21lJztcbmltcG9ydCBjb2xvciBmcm9tICdAY2RvL2FwcHMvdXRpbC9jb2xvcic7XG5pbXBvcnQge2xldmVsV2l0aFByb2dyZXNzVHlwZSwgbGVzc29uVHlwZX0gZnJvbSAnLi9wcm9ncmVzc1R5cGVzJztcbmltcG9ydCB7Vmlld1R5cGV9IGZyb20gJ0BjZG8vYXBwcy9jb2RlLXN0dWRpby92aWV3QXNSZWR1eCc7XG5pbXBvcnQgZmlyZWhvc2VDbGllbnQgZnJvbSAnQGNkby9hcHBzL2xpYi91dGlsL2ZpcmVob3NlJztcbmltcG9ydCBpMThuIGZyb20gJ0BjZG8vbG9jYWxlJztcbmltcG9ydCB7XG4gIGxlc3NvbklzVmlzaWJsZSxcbiAgbGVzc29uSXNMb2NrZWRGb3JVc2VyLFxuICBsZXNzb25Jc0xvY2tlZEZvckFsbFN0dWRlbnRzLFxufSBmcm9tICcuL3Byb2dyZXNzSGVscGVycyc7XG5pbXBvcnQgUHJvZ3Jlc3NMZXNzb25UZWFjaGVySW5mbyBmcm9tICcuL1Byb2dyZXNzTGVzc29uVGVhY2hlckluZm8nO1xuaW1wb3J0IEZvY3VzQXJlYUluZGljYXRvciBmcm9tICcuL0ZvY3VzQXJlYUluZGljYXRvcic7XG5pbXBvcnQgUmVhY3RUb29sdGlwIGZyb20gJ3JlYWN0LXRvb2x0aXAnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBmb250Q29uc3RhbnRzIGZyb20gJ0BjZG8vYXBwcy9mb250Q29uc3RhbnRzJztcblxuY2xhc3MgUHJvZ3Jlc3NMZXNzb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGxlc3NvbjogbGVzc29uVHlwZS5pc1JlcXVpcmVkLFxuICAgIGxldmVsczogUHJvcFR5cGVzLmFycmF5T2YobGV2ZWxXaXRoUHJvZ3Jlc3NUeXBlKS5pc1JlcXVpcmVkLFxuXG4gICAgLy8gcmVkdXggcHJvdmlkZWRcbiAgICBzY3JpcHRJZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjdXJyZW50TGVzc29uSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgdmlld0FzOiBQcm9wVHlwZXMub25lT2YoT2JqZWN0LnZhbHVlcyhWaWV3VHlwZSkpLmlzUmVxdWlyZWQsXG4gICAgaXNWaXNpYmxlOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIGhpZGRlbkZvclN0dWRlbnRzOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIGlzTG9ja2VkRm9yVXNlcjogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgICBzZWxlY3RlZFNlY3Rpb25JZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBsb2NrYWJsZUF1dGhvcml6ZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2thYmxlQXV0aG9yaXplZExvYWRlZDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgICBpc0xvY2tlZEZvckFsbFN0dWRlbnRzOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIGlzUnRsOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc01pbmlWaWV3OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NrU3RhdHVzTG9hZGVkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAvLyBXZSB3YW50IGluc3RydWN0b3JzIHRvIHN0YXJ0IHdpdGggZXZlcnl0aGluZyB1bmNvbGxhcHNlZC4gRm9yIHBhcnRpY2lwYW50cyB3ZVxuICAgICAgLy8gY29sbGFwc2UgZXZlcnl0aGluZyBleGNlcHQgY3VycmVudCBsZXNzb25cbiAgICAgIGNvbGxhcHNlZDpcbiAgICAgICAgcHJvcHMudmlld0FzICE9PSBWaWV3VHlwZS5JbnN0cnVjdG9yICYmXG4gICAgICAgIHByb3BzLmN1cnJlbnRMZXNzb25JZCAhPT0gcHJvcHMubGVzc29uLmlkLFxuICAgIH07XG4gIH1cblxuICBVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAvLyBJZiB3ZSdyZSBhc3NpZ25lZCBhIGxlc3NvbiBpZCwgYW5kIGl0IGlzIGZvciB0aGlzIGxlc3NvbiwgdW5jb2xsYXBzZVxuICAgIGlmIChuZXh0UHJvcHMuY3VycmVudExlc3NvbklkICE9PSB0aGlzLnByb3BzLmN1cnJlbnRMZXNzb25JZCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGNvbGxhcHNlZDpcbiAgICAgICAgICB0aGlzLnN0YXRlLmNvbGxhcHNlZCAmJlxuICAgICAgICAgIG5leHRQcm9wcy5jdXJyZW50TGVzc29uSWQgIT09IHRoaXMucHJvcHMubGVzc29uLmlkLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgdG9nZ2xlQ29sbGFwc2VkID0gKCkgPT5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGNvbGxhcHNlZDogIXRoaXMuc3RhdGUuY29sbGFwc2VkLFxuICAgIH0pO1xuXG4gIG9uQ2xpY2tTdHVkZW50TGVzc29uUGxhbiA9ICgpID0+IHtcbiAgICBmaXJlaG9zZUNsaWVudC5wdXRSZWNvcmQoXG4gICAgICB7XG4gICAgICAgIHN0dWR5OiAnc2NyaXB0X292ZXJ2aWV3X2FjdGlvbnMnLFxuICAgICAgICBzdHVkeV9ncm91cDogJ3N0dWRlbnRfbGVzc29uX3BsYW4nLFxuICAgICAgICBldmVudDogJ29wZW5fc3R1ZGVudF9sZXNzb25fcGxhbicsXG4gICAgICAgIGRhdGFfanNvbjogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIGxlc3Nvbl9pZDogdGhpcy5wcm9wcy5sZXNzb24uaWQsXG4gICAgICAgICAgc2NyaXB0X2lkOiB0aGlzLnByb3BzLnNjcmlwdElkLFxuICAgICAgICB9KSxcbiAgICAgIH0sXG4gICAgICB7aW5jbHVkZVVzZXJJZDogdHJ1ZX1cbiAgICApO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBsZXNzb24sXG4gICAgICBsZXZlbHMsXG4gICAgICB2aWV3QXMsXG4gICAgICBpc1Zpc2libGUsXG4gICAgICBoaWRkZW5Gb3JTdHVkZW50cywgLy8gSXMgdGhpcyBhIGhpZGRlbiBsZXNzb24gdGhhdCB3ZSBzdGlsbCByZW5kZXIgYmVjYXVzZSB3ZSdyZSBhIGluc3RydWN0b3JcbiAgICAgIGlzTG9ja2VkRm9yVXNlcixcbiAgICAgIGlzTG9ja2VkRm9yQWxsU3R1ZGVudHMsXG4gICAgICBzZWxlY3RlZFNlY3Rpb25JZCxcbiAgICAgIGlzUnRsLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgaWYgKCFpc1Zpc2libGUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IHNob3dBc0xvY2tlZCA9IGlzTG9ja2VkRm9yVXNlciB8fCBpc0xvY2tlZEZvckFsbFN0dWRlbnRzO1xuXG4gICAgY29uc3QgdGl0bGUgPSBsZXNzb24ubGVzc29uTnVtYmVyXG4gICAgICA/IGkxOG4ubGVzc29uTnVtYmVyZWQoe1xuICAgICAgICAgIGxlc3Nvbk51bWJlcjogbGVzc29uLmxlc3Nvbk51bWJlcixcbiAgICAgICAgICBsZXNzb25OYW1lOiBsZXNzb24ubmFtZSxcbiAgICAgICAgfSlcbiAgICAgIDogbGVzc29uLm5hbWU7XG5cbiAgICAvLyBBZGp1c3QgY2FyZXQgc3R5bGUgaWYgbG9jYWxlIGlzIFJUTFxuICAgIGNvbnN0IGNhcmV0U3R5bGUgPSBpc1J0bCA/IHN0eWxlcy5jYXJldFJUTCA6IHN0eWxlcy5jYXJldDtcbiAgICBjb25zdCBjYXJldCA9IHRoaXMuc3RhdGUuY29sbGFwc2VkID8gJ2NhcmV0LXJpZ2h0JyA6ICdjYXJldC1kb3duJztcblxuICAgIGNvbnN0IGxvY2tlZFRvb2x0aXBJZCA9IF8udW5pcXVlSWQoKTtcblxuICAgIGNvbnN0IGRlc2NyaXB0aW9uID1cbiAgICAgIHZpZXdBcyA9PT0gVmlld1R5cGUuSW5zdHJ1Y3RvclxuICAgICAgICA/IGxlc3Nvbi5kZXNjcmlwdGlvbl90ZWFjaGVyXG4gICAgICAgIDogbGVzc29uLmRlc2NyaXB0aW9uX3N0dWRlbnQ7XG5cbiAgICAvLyBUaGVyZSdzIG5vIHVybCBmb3IgYSBsZXNzb24gc28gdXNlIHRoZSB1cmwgb2YgdGhlIGZpcnN0IGxldmVsIG9mIHRoZSBsZXNzb25cbiAgICAvLyBhcyB0aGUgdXJsIGZvciB0aGUgbGVzc29uLlxuICAgIC8vIFRPRE86IE1ha2UgdGhlIGJhY2stZW5kIHJldHVybiBhIGxlc3NvbiB1cmwgYXMgcGFydCBvZiB0aGUgbGVzc29uIG1ldGFkYXRhIHNvIHdlXG4gICAgLy8gZG9uJ3QgbmVlZCB0byBwYXNzIGl0IHNlcGFyYXRlbHkgZnJvbSBsZXNzb24gaGVyZSBhbmQgaW4gUHJvZ3Jlc3NMZXNzb25UZWFjaGVySW5mby5cbiAgICBjb25zdCBsZXNzb25VcmwgPSBsZXZlbHNbMF0gJiYgbGV2ZWxzWzBdLnVybDtcblxuICAgIC8vIElmIGEgaW5zdHJ1Y3RvciBpcyBub3QgdmVyaWZpZWQgdGhleSB3aWxsIG5vdCBiZSBsb2NrYWJsZUF1dGhvcml6ZWQgKG1lYW5pbmcgdGhleSBjYW4ndFxuICAgIC8vIGxvY2sgb3IgdW5sb2NrIGxlc3NvbnMpLiBGb3IgYSBsb2NrYWJsZSBsZXNzb24gd2hlcmUgaW5zdHJ1Y3RvciBpcyBub3QgYXV0aG9yaXplZCwgd2Ugd2lsbFxuICAgIC8vIGRpc3BsYXkgYSB3YXJuaW5nIGV4cGxhaW5pbmcgdGhhdCB0aGV5IG5lZWQgdG8gYmUgdmVyaWZpZWQgdG8gdW5sb2NrIGxlc3NvbnMuXG4gICAgY29uc3Qgc2hvd05vdEF1dGhvcml6ZWRXYXJuaW5nID1cbiAgICAgIGxlc3Nvbi5sb2NrYWJsZSAmJlxuICAgICAgdmlld0FzID09PSBWaWV3VHlwZS5JbnN0cnVjdG9yICYmXG4gICAgICB0aGlzLnByb3BzLmxvY2thYmxlQXV0aG9yaXplZExvYWRlZCAmJlxuICAgICAgIXRoaXMucHJvcHMubG9ja2FibGVBdXRob3JpemVkO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgaWQ9e2Bwcm9ncmVzcy1sZXNzb24tJHtsZXNzb24ubGVzc29uTnVtYmVyfWB9XG4gICAgICAgIGNsYXNzTmFtZT1cInVpdGVzdC1wcm9ncmVzcy1sZXNzb25cIlxuICAgICAgICBzdHlsZT17e1xuICAgICAgICAgIC4uLnN0eWxlcy5vdXRlcixcbiAgICAgICAgICAuLi4oKGhpZGRlbkZvclN0dWRlbnRzIHx8IHNob3dBc0xvY2tlZCkgJiYgc3R5bGVzLmhpZGRlbk9yTG9ja2VkKSxcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAuLi5zdHlsZXMubWFpbixcbiAgICAgICAgICAgIC4uLigoKGhpZGRlbkZvclN0dWRlbnRzICYmIHZpZXdBcyA9PT0gVmlld1R5cGUuUGFydGljaXBhbnQpIHx8XG4gICAgICAgICAgICAgIGlzTG9ja2VkRm9yVXNlcikgJiZcbiAgICAgICAgICAgICAgc3R5bGVzLnRyYW5zbHVjZW50KSxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgLi4uc3R5bGVzLmhlYWRpbmcsXG4gICAgICAgICAgICAgIC4uLnttYXJnaW5Cb3R0b206IHRoaXMuc3RhdGUuY29sbGFwc2VkID8gMCA6IDE1fSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLmhlYWRpbmdUZXh0fVxuICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnRvZ2dsZUNvbGxhcHNlZH1cbiAgICAgICAgICAgICAgdGFiSW5kZXg9XCIwXCJcbiAgICAgICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgIG9uS2V5RG93bj17ZSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKFsnICcsICdFbnRlcicsICdTcGFjZWJhciddLmluY2x1ZGVzKGUua2V5KSkge1xuICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgdGhpcy50b2dnbGVDb2xsYXBzZWQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9eyF0aGlzLnN0YXRlLmNvbGxhcHNlZH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lIGljb249e2NhcmV0fSBzdHlsZT17Y2FyZXRTdHlsZX0gLz5cbiAgICAgICAgICAgICAge2hpZGRlbkZvclN0dWRlbnRzICYmIChcbiAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWUgaWNvbj1cImV5ZS1zbGFzaFwiIHN0eWxlPXtzdHlsZXMuaWNvbn0gLz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAge2xlc3Nvbi5sb2NrYWJsZSAmJiB0aGlzLnByb3BzLmxvY2tTdGF0dXNMb2FkZWQgJiYgKFxuICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtdGlwIGRhdGEtZm9yPXtsb2NrZWRUb29sdGlwSWR9PlxuICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lXG4gICAgICAgICAgICAgICAgICAgIGljb249e3Nob3dBc0xvY2tlZCA/ICdsb2NrJyA6ICd1bmxvY2snfVxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgIC4uLnN0eWxlcy5pY29uLFxuICAgICAgICAgICAgICAgICAgICAgIC4uLighc2hvd0FzTG9ja2VkICYmIHN0eWxlcy51bmxvY2tlZEljb24pLFxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIHshc2hvd0FzTG9ja2VkICYmIHZpZXdBcyA9PT0gVmlld1R5cGUuSW5zdHJ1Y3RvciAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxSZWFjdFRvb2x0aXBcbiAgICAgICAgICAgICAgICAgICAgICBpZD17bG9ja2VkVG9vbHRpcElkfVxuICAgICAgICAgICAgICAgICAgICAgIHJvbGU9XCJ0b29sdGlwXCJcbiAgICAgICAgICAgICAgICAgICAgICB3cmFwcGVyPVwic3BhblwiXG4gICAgICAgICAgICAgICAgICAgICAgZWZmZWN0PVwic29saWRcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAge2kxOG4ubG9ja0Fzc2Vzc21lbnRMb25nKCl9XG4gICAgICAgICAgICAgICAgICAgIDwvUmVhY3RUb29sdGlwPlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDxzcGFuPnt0aXRsZX08L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHt2aWV3QXMgPT09IFZpZXdUeXBlLlBhcnRpY2lwYW50ICYmXG4gICAgICAgICAgICAgIGxlc3Nvbi5zdHVkZW50X2xlc3Nvbl9wbGFuX2h0bWxfdXJsICYmIChcbiAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT17c3R5bGVzLmJ1dHRvblN0eWxlfT5cbiAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgX191c2VEZXByZWNhdGVkVGFnXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInVpLXRlc3QtbGVzc29uLXJlc291cmNlc1wiXG4gICAgICAgICAgICAgICAgICAgIGhyZWY9e2xlc3Nvbi5zdHVkZW50X2xlc3Nvbl9wbGFuX2h0bWxfdXJsfVxuICAgICAgICAgICAgICAgICAgICB0ZXh0PXtpMThuLmxlc3NvblJlc291cmNlcygpfVxuICAgICAgICAgICAgICAgICAgICBpY29uPVwiZmlsZS10ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I9XCJwdXJwbGVcIlxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLm9uQ2xpY2tTdHVkZW50TGVzc29uUGxhbn1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHtzaG93Tm90QXV0aG9yaXplZFdhcm5pbmcgJiYgKFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLm5vdEF1dGhvcml6ZWRXYXJuaW5nfT5cbiAgICAgICAgICAgICAge2kxOG4udW52ZXJpZmllZFRlYWNoZXJMb2NrV2FybmluZygpfVxuICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMubGVhcm5Nb3JlTGlua31cbiAgICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9zdXBwb3J0LmNvZGUub3JnL2hjL2VuLXVzL2FydGljbGVzLzExNTAwMTU1MDEzMS1CZWNvbWluZy1hLXZlcmlmaWVkLXRlYWNoZXItQ1MtUHJpbmNpcGxlcy1hbmQtQ1MtRGlzY292ZXJpZXMtb25seS1cIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2kxOG4ubGVhcm5Nb3JlV2l0aFBlcmlvZCgpfVxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuICAgICAgICAgIHshdGhpcy5zdGF0ZS5jb2xsYXBzZWQgJiYgKFxuICAgICAgICAgICAgPFByb2dyZXNzTGVzc29uQ29udGVudFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgIGxldmVscz17bGV2ZWxzfVxuICAgICAgICAgICAgICBkaXNhYmxlZD17aXNMb2NrZWRGb3JVc2VyfVxuICAgICAgICAgICAgICBzZWxlY3RlZFNlY3Rpb25JZD17c2VsZWN0ZWRTZWN0aW9uSWR9XG4gICAgICAgICAgICAgIGxlc3Nvbk5hbWU9e2xlc3Nvbi5uYW1lfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge3ZpZXdBcyA9PT0gVmlld1R5cGUuSW5zdHJ1Y3RvciAmJiAhdGhpcy5wcm9wcy5pc01pbmlWaWV3ICYmIChcbiAgICAgICAgICA8UHJvZ3Jlc3NMZXNzb25UZWFjaGVySW5mb1xuICAgICAgICAgICAgbGVzc29uPXtsZXNzb259XG4gICAgICAgICAgICBsZXNzb25Vcmw9e2xlc3NvblVybH1cbiAgICAgICAgICAgIG9uQ2xpY2tTdHVkZW50TGVzc29uUGxhbj17dGhpcy5vbkNsaWNrU3R1ZGVudExlc3NvblBsYW59XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAge2xlc3Nvbi5pc0ZvY3VzQXJlYSAmJiA8Rm9jdXNBcmVhSW5kaWNhdG9yIC8+fVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBzdHlsZXMgPSB7XG4gIG91dGVyOiB7XG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgZGlzcGxheTogJ3RhYmxlJyxcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIGhlaWdodDogJzEwMCUnLFxuICAgIGJhY2tncm91bmQ6IGNvbG9yLmxpZ2h0ZXN0X2dyYXksXG4gICAgYm9yZGVyQ29sb3I6IGNvbG9yLmJvcmRlcl9ncmF5LFxuICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgIGJvcmRlclJhZGl1czogMixcbiAgICAvLyBXaGVuIHRvZ2dsaW5nIGJldHdlZW4gaGlkZGVuIGFuZCBub3QsIHdlIGNoYW5nZSBvdXIgYm9yZGVyIHNpemUgZnJvbSAxIHRvIDQuXG4gICAgLy8gV2Ugd2FudCB0byBsaW1pdCBob3cgbXVjaCB0b2dnbGluZyB0aGlzIGNoYW5nZXMgb3VyIHNpemluZywgc28gd2UgYWRkICszXG4gICAgLy8gdG8gZWFjaCBvZiBvdXIgbm9uLWhpZGRlbiBtYXJnaW5zXG4gICAgYm9yZGVyV2lkdGg6IDEsXG4gICAgbWFyZ2luVG9wOiAzLFxuICAgIG1hcmdpbkJvdHRvbTogMTUsXG4gICAgbWFyZ2luTGVmdDogMyxcbiAgICBtYXJnaW5SaWdodDogMyxcbiAgfSxcbiAgbWFpbjoge1xuICAgIHBhZGRpbmc6IDIwLFxuICB9LFxuICBoZWFkaW5nOiB7XG4gICAgZm9udFNpemU6IDE4LFxuICAgIC4uLmZvbnRDb25zdGFudHNbJ21haW4tZm9udC1zZW1pLWJvbGQnXSxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIH0sXG4gIGhlYWRpbmdUZXh0OiB7XG4gICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgZmxleEdyb3c6IDEsXG4gIH0sXG4gIGJ1dHRvblN0eWxlOiB7XG4gICAgbWFyZ2luTGVmdDogJ2F1dG8nLFxuICB9LFxuICBoaWRkZW5PckxvY2tlZDoge1xuICAgIGJvcmRlclN0eWxlOiAnZGFzaGVkJyxcbiAgICBib3JkZXJXaWR0aDogNCxcbiAgICBtYXJnaW5Ub3A6IDAsXG4gICAgbWFyZ2luQm90dG9tOiAxMixcbiAgICBtYXJnaW5MZWZ0OiAwLFxuICAgIG1hcmdpblJpZ2h0OiAwLFxuICB9LFxuICB0cmFuc2x1Y2VudDoge1xuICAgIG9wYWNpdHk6IDAuNixcbiAgfSxcbiAgY2FyZXQ6IHtcbiAgICBtYXJnaW5SaWdodDogMTAsXG4gIH0sXG4gIGNhcmV0UlRMOiB7XG4gICAgbWFyZ2luTGVmdDogMTAsXG4gIH0sXG4gIGljb246IHtcbiAgICBtYXJnaW5SaWdodDogNSxcbiAgICBmb250U2l6ZTogMTgsXG4gICAgY29sb3I6IGNvbG9yLmN5YW4sXG4gIH0sXG4gIHVubG9ja2VkSWNvbjoge1xuICAgIGNvbG9yOiBjb2xvci5vcmFuZ2UsXG4gIH0sXG4gIG5vdEF1dGhvcml6ZWRXYXJuaW5nOiB7XG4gICAgY29sb3I6IGNvbG9yLnJlZCxcbiAgICAuLi5mb250Q29uc3RhbnRzWydtYWluLWZvbnQtc2VtaS1ib2xkLWl0YWxpYyddLFxuICAgIG1hcmdpblRvcDogMTAsXG4gIH0sXG4gIGxlYXJuTW9yZUxpbms6IHtcbiAgICBtYXJnaW5MZWZ0OiA1LFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IFVuY29ubmVjdGVkUHJvZ3Jlc3NMZXNzb24gPSBQcm9ncmVzc0xlc3NvbjtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdCgoc3RhdGUsIG93blByb3BzKSA9PiAoe1xuICBjdXJyZW50TGVzc29uSWQ6IHN0YXRlLnByb2dyZXNzLmN1cnJlbnRMZXNzb25JZCxcbiAgdmlld0FzOiBzdGF0ZS52aWV3QXMsXG4gIGxvY2thYmxlQXV0aG9yaXplZDogc3RhdGUubGVzc29uTG9jay5sb2NrYWJsZUF1dGhvcml6ZWQsXG4gIGxvY2thYmxlQXV0aG9yaXplZExvYWRlZDogc3RhdGUubGVzc29uTG9jay5sb2NrYWJsZUF1dGhvcml6ZWRMb2FkZWQsXG4gIGlzVmlzaWJsZTogbGVzc29uSXNWaXNpYmxlKG93blByb3BzLmxlc3Nvbiwgc3RhdGUsIHN0YXRlLnZpZXdBcyksXG4gIGhpZGRlbkZvclN0dWRlbnRzOiAhbGVzc29uSXNWaXNpYmxlKFxuICAgIG93blByb3BzLmxlc3NvbixcbiAgICBzdGF0ZSxcbiAgICBWaWV3VHlwZS5QYXJ0aWNpcGFudFxuICApLFxuICBpc0xvY2tlZEZvclVzZXI6IGxlc3NvbklzTG9ja2VkRm9yVXNlcihcbiAgICBvd25Qcm9wcy5sZXNzb24sXG4gICAgb3duUHJvcHMubGV2ZWxzLFxuICAgIHN0YXRlLFxuICAgIHN0YXRlLnZpZXdBc1xuICApLFxuICBpc0xvY2tlZEZvckFsbFN0dWRlbnRzOiBsZXNzb25Jc0xvY2tlZEZvckFsbFN0dWRlbnRzKFxuICAgIG93blByb3BzLmxlc3Nvbi5pZCxcbiAgICBzdGF0ZVxuICApLFxuICBzZWxlY3RlZFNlY3Rpb25JZDogc3RhdGUudGVhY2hlclNlY3Rpb25zLnNlbGVjdGVkU2VjdGlvbklkLFxuICBzY3JpcHRJZDogc3RhdGUucHJvZ3Jlc3Muc2NyaXB0SWQsXG4gIGlzUnRsOiBzdGF0ZS5pc1J0bCxcbiAgaXNNaW5pVmlldzogc3RhdGUucHJvZ3Jlc3MuaXNNaW5pVmlldyxcbiAgbG9ja1N0YXR1c0xvYWRlZDpcbiAgICBzdGF0ZS5wcm9ncmVzcy51bml0UHJvZ3Jlc3NIYXNMb2FkZWQgJiZcbiAgICBzdGF0ZS5sZXNzb25Mb2NrLmxlc3NvbnNCeVNlY3Rpb25JZExvYWRlZCxcbn0pKShQcm9ncmVzc0xlc3Nvbik7XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9ncmVzc0xldmVsU2V0IGZyb20gJy4vUHJvZ3Jlc3NMZXZlbFNldCc7XG5pbXBvcnQgUHJvZ3Jlc3NCdWJibGVTZXQgZnJvbSAnLi9Qcm9ncmVzc0J1YmJsZVNldCc7XG5pbXBvcnQge2xldmVsV2l0aFByb2dyZXNzVHlwZX0gZnJvbSAnLi9wcm9ncmVzc1R5cGVzJztcbmltcG9ydCB7cHJvZ3Jlc3Npb25zRnJvbUxldmVsc30gZnJvbSAnQGNkby9hcHBzL2NvZGUtc3R1ZGlvL3Byb2dyZXNzUmVkdXhTZWxlY3RvcnMnO1xuaW1wb3J0IFNhZmVNYXJrZG93biBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL1NhZmVNYXJrZG93bic7XG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5pbXBvcnQgZm9udENvbnN0YW50cyBmcm9tICdAY2RvL2FwcHMvZm9udENvbnN0YW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2dyZXNzTGVzc29uQ29udGVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZGVzY3JpcHRpb246IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgbGV2ZWxzOiBQcm9wVHlwZXMuYXJyYXlPZihsZXZlbFdpdGhQcm9ncmVzc1R5cGUpLmlzUmVxdWlyZWQsXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gICAgc2VsZWN0ZWRTZWN0aW9uSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgbGVzc29uTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge2Rlc2NyaXB0aW9uLCBsZXZlbHMsIGRpc2FibGVkLCBzZWxlY3RlZFNlY3Rpb25JZCwgbGVzc29uTmFtZX0gPVxuICAgICAgdGhpcy5wcm9wcztcbiAgICBjb25zdCBwcm9ncmVzc2lvbnMgPSBwcm9ncmVzc2lvbnNGcm9tTGV2ZWxzKGxldmVscyk7XG5cbiAgICBsZXQgYnViYmxlcztcbiAgICBpZiAocHJvZ3Jlc3Npb25zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgYnViYmxlcyA9IChcbiAgICAgICAgPHNwYW4gc3R5bGU9e3N0eWxlcy5ub0xldmVsc1dhcm5pbmd9PlxuICAgICAgICAgIHtpMThuLmxlc3NvbkNvbnRhaW5zTm9MZXZlbHMoKX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHByb2dyZXNzaW9ucy5sZW5ndGggPT09IDEgJiYgIXByb2dyZXNzaW9uc1swXS5uYW1lKSB7XG4gICAgICBidWJibGVzID0gKFxuICAgICAgICA8UHJvZ3Jlc3NCdWJibGVTZXRcbiAgICAgICAgICBsZXZlbHM9e3Byb2dyZXNzaW9uc1swXS5sZXZlbHN9XG4gICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgIHNlbGVjdGVkU2VjdGlvbklkPXtzZWxlY3RlZFNlY3Rpb25JZH1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1YmJsZXMgPSBwcm9ncmVzc2lvbnMubWFwKChwcm9ncmVzc2lvbiwgaW5kZXgpID0+IChcbiAgICAgICAgPFByb2dyZXNzTGV2ZWxTZXRcbiAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgIG5hbWU9e3Byb2dyZXNzaW9uLmRpc3BsYXlOYW1lfVxuICAgICAgICAgIGxlc3Nvbk5hbWU9e2xlc3Nvbk5hbWV9XG4gICAgICAgICAgbGV2ZWxzPXtwcm9ncmVzc2lvbi5sZXZlbHN9XG4gICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgIHNlbGVjdGVkU2VjdGlvbklkPXtzZWxlY3RlZFNlY3Rpb25JZH1cbiAgICAgICAgLz5cbiAgICAgICkpO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7ZGVzY3JpcHRpb24gJiYgKFxuICAgICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5zdW1tYXJ5fT5cbiAgICAgICAgICAgIDxTYWZlTWFya2Rvd24gbWFya2Rvd249e2Rlc2NyaXB0aW9ufSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgICA8ZGl2PiB7YnViYmxlc30gPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgc3VtbWFyeToge1xuICAgIG1hcmdpblRvcDogMjAsXG4gICAgbWFyZ2luQm90dG9tOiAzMCxcbiAgICBmb250U2l6ZTogMTQsXG4gICAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXJlZ3VsYXInXSxcbiAgfSxcbiAgbm9MZXZlbHNXYXJuaW5nOiB7XG4gICAgZm9udFNpemU6IDEzLFxuICB9LFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJhZGl1bSBmcm9tICdyYWRpdW0nOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXJlc3RyaWN0ZWQtaW1wb3J0c1xuaW1wb3J0IFByb2dyZXNzQnViYmxlU2V0IGZyb20gJy4vUHJvZ3Jlc3NCdWJibGVTZXQnO1xuaW1wb3J0IGNvbG9yIGZyb20gJ0BjZG8vYXBwcy91dGlsL2NvbG9yJztcbmltcG9ydCB7bGV2ZWxXaXRoUHJvZ3Jlc3NUeXBlfSBmcm9tICcuL3Byb2dyZXNzVHlwZXMnO1xuaW1wb3J0IHtnZXRJY29uRm9yTGV2ZWx9IGZyb20gJy4vcHJvZ3Jlc3NIZWxwZXJzJztcbmltcG9ydCBQcm9ncmVzc1BpbGwgZnJvbSAnLi9Qcm9ncmVzc1BpbGwnO1xuaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgZm9udENvbnN0YW50cyBmcm9tICdAY2RvL2FwcHMvZm9udENvbnN0YW50cyc7XG5cbi8qKlxuICogQSBzZXQgb2Ygb25lIG9yIG1vcmUgbGV2ZWxzIHRoYXQgYXJlIHBhcnQgb2YgdGhlIHNhbWUgcHJvZ3Jlc3Npb25cbiAqL1xuY2xhc3MgUHJvZ3Jlc3NMZXZlbFNldCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBsZXNzb25OYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGxldmVsczogUHJvcFR5cGVzLmFycmF5T2YobGV2ZWxXaXRoUHJvZ3Jlc3NUeXBlKS5pc1JlcXVpcmVkLFxuICAgIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIHNlbGVjdGVkU2VjdGlvbklkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIG9uQnViYmxlQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIC8vIFJlZHV4XG4gICAgaXNSdGw6IFByb3BUeXBlcy5ib29sLFxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLFxuICAgICAgbGV2ZWxzLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICBzZWxlY3RlZFNlY3Rpb25JZCxcbiAgICAgIG9uQnViYmxlQ2xpY2ssXG4gICAgICBpc1J0bCxcbiAgICAgIGxlc3Nvbk5hbWUsXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBtdWx0aUxldmVsU3RlcCA9IGxldmVscy5sZW5ndGggPiAxO1xuICAgIGNvbnN0IHVybCA9IG11bHRpTGV2ZWxTdGVwIHx8IG9uQnViYmxlQ2xpY2sgPyB1bmRlZmluZWQgOiBsZXZlbHNbMF0udXJsO1xuICAgIGNvbnN0IG9uQ2xpY2sgPSBtdWx0aUxldmVsU3RlcCA/IHVuZGVmaW5lZCA6ICgpID0+IG9uQnViYmxlQ2xpY2sobGV2ZWxzWzBdKTtcblxuICAgIC8vIEFkanVzdCBjb2x1bW4gc3R5bGVzIGlmIGxvY2FsZSBpcyBSVExcbiAgICBjb25zdCBjb2wyU3R5bGUgPSBpc1J0bCA/IHN0eWxlcy5jb2wyUlRMIDogc3R5bGVzLmNvbDI7XG5cbiAgICBsZXQgcGlsbFRleHQsIGljb247XG4gICAgbGV0IHByb2dyZXNzU3R5bGUgPSBmYWxzZTtcbiAgICBpZiAobGV2ZWxzWzBdLmlzVW5wbHVnZ2VkIHx8IGxldmVsc1tsZXZlbHMubGVuZ3RoIC0gMV0uaXNVbnBsdWdnZWQpIHtcbiAgICAgIC8vIFdlIGV4cGxpY2l0bHkgZG9uJ3Qgd2FudCBhbnkgdGV4dCBpbiB0aGlzIGNhc2VcbiAgICAgIGlmIChtdWx0aUxldmVsU3RlcCkge1xuICAgICAgICBwaWxsVGV4dCA9ICcnO1xuICAgICAgICBpY29uID0gZ2V0SWNvbkZvckxldmVsKGxldmVsc1swXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwaWxsVGV4dCA9IGkxOG4udW5wbHVnZ2VkQWN0aXZpdHkoKTtcbiAgICAgICAgcHJvZ3Jlc3NTdHlsZSA9IHRydWU7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBpbGxUZXh0ID0gbGV2ZWxzWzBdLmxldmVsTnVtYmVyLnRvU3RyaW5nKCk7XG4gICAgICBpY29uID0gZ2V0SWNvbkZvckxldmVsKGxldmVsc1swXSk7XG4gICAgICBpZiAobXVsdGlMZXZlbFN0ZXApIHtcbiAgICAgICAgcGlsbFRleHQgKz0gYC0ke2xldmVsc1tsZXZlbHMubGVuZ3RoIC0gMV0ubGV2ZWxOdW1iZXJ9YDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPHRhYmxlIHN0eWxlPXtzdHlsZXMudGFibGV9PlxuICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgPHRyPlxuICAgICAgICAgICAgPHRkIHN0eWxlPXtzdHlsZXMuY29sMX0+XG4gICAgICAgICAgICAgIDxQcm9ncmVzc1BpbGxcbiAgICAgICAgICAgICAgICBsZXZlbHM9e2xldmVsc31cbiAgICAgICAgICAgICAgICBpY29uPXtpY29ufVxuICAgICAgICAgICAgICAgIHRleHQ9e3BpbGxUZXh0fVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgICAgICAgICBzZWxlY3RlZFNlY3Rpb25JZD17c2VsZWN0ZWRTZWN0aW9uSWR9XG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3NTdHlsZT17cHJvZ3Jlc3NTdHlsZX1cbiAgICAgICAgICAgICAgICBvblNpbmdsZUxldmVsQ2xpY2s9e29uQnViYmxlQ2xpY2t9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkIHN0eWxlPXtjb2wyU3R5bGV9PlxuICAgICAgICAgICAgICA8YSBocmVmPXt1cmx9IG9uQ2xpY2s9e29uQ2xpY2t9PlxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3suLi5zdHlsZXMubmFtZVRleHQsIC4uLnN0eWxlcy50ZXh0fX0+e25hbWV9PC9kaXY+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgPC90cj5cbiAgICAgICAgICB7bXVsdGlMZXZlbFN0ZXAgJiYgKFxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmxpbmVzQW5kRG90fT5cbiAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy52ZXJ0aWNhbExpbmV9IC8+XG4gICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuaG9yaXpvbnRhbExpbmV9IC8+XG4gICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuZG90fSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICA8dGQgc3R5bGU9e3N0eWxlcy5jb2wyfT5cbiAgICAgICAgICAgICAgICA8UHJvZ3Jlc3NCdWJibGVTZXRcbiAgICAgICAgICAgICAgICAgIGxldmVscz17bGV2ZWxzfVxuICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRTZWN0aW9uSWQ9e3NlbGVjdGVkU2VjdGlvbklkfVxuICAgICAgICAgICAgICAgICAgb25CdWJibGVDbGljaz17b25CdWJibGVDbGlja31cbiAgICAgICAgICAgICAgICAgIGxlc3Nvbk5hbWU9e2xlc3Nvbk5hbWV9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC90Ym9keT5cbiAgICAgIDwvdGFibGU+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRhYmxlOiB7XG4gICAgbWFyZ2luVG9wOiAxMixcbiAgfSxcbiAgbmFtZVRleHQ6IHtcbiAgICBjb2xvcjogY29sb3IuY2hhcmNvYWwsXG4gIH0sXG4gIHRleHQ6IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICAuLi5mb250Q29uc3RhbnRzWydtYWluLWZvbnQtc2VtaS1ib2xkJ10sXG4gICAgZm9udFNpemU6IDE0LFxuICAgIGxldHRlclNwYWNpbmc6IC0wLjEyLFxuICB9LFxuICBjb2wyOiB7XG4gICAgcGFkZGluZ0xlZnQ6IDIwLFxuICB9LFxuICBjb2wyUlRMOiB7XG4gICAgcGFkZGluZ1JpZ2h0OiAyMCxcbiAgfSxcbiAgbGluZXNBbmREb3Q6IHtcbiAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICBtYXJnaW5MZWZ0OiAnNTAlJyxcbiAgICBtYXJnaW5SaWdodDogMTQsXG4gIH0sXG4gIHZlcnRpY2FsTGluZToge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGlnaHRlcl9ncmF5LFxuICAgIGhlaWdodDogMTUsXG4gICAgd2lkdGg6IDMsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgYm90dG9tOiAyLFxuICB9LFxuICBob3Jpem9udGFsTGluZToge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGlnaHRlcl9ncmF5LFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIHRvcDogLTIsXG4gICAgaGVpZ2h0OiAzLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gIH0sXG4gIGRvdDoge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIGxlZnQ6IC0yLFxuICAgIHRvcDogMSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmxpZ2h0ZXJfZ3JheSxcbiAgICBoZWlnaHQ6IDEwLFxuICAgIHdpZHRoOiAxMCxcbiAgICBib3JkZXJSYWRpdXM6IDEwLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IFVuY29ubmVjdGVkUHJvZ3Jlc3NMZXZlbFNldCA9IFByb2dyZXNzTGV2ZWxTZXQ7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3Qoc3RhdGUgPT4gKHtcbiAgaXNSdGw6IHN0YXRlLmlzUnRsLFxufSkpKFJhZGl1bShQcm9ncmVzc0xldmVsU2V0KSk7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSYWRpdW0gZnJvbSAncmFkaXVtJzsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1yZXN0cmljdGVkLWltcG9ydHNcbmltcG9ydCBGb250QXdlc29tZSBmcm9tICcuLi9Gb250QXdlc29tZSc7XG5pbXBvcnQgY29sb3IgZnJvbSAnQGNkby9hcHBzL3V0aWwvY29sb3InO1xuaW1wb3J0IHtsZXZlbFdpdGhQcm9ncmVzc1R5cGV9IGZyb20gJy4vcHJvZ3Jlc3NUeXBlcyc7XG5pbXBvcnQge2xldmVsUHJvZ3Jlc3NTdHlsZSwgaG92ZXJTdHlsZX0gZnJvbSAnLi9wcm9ncmVzc1N0eWxlcyc7XG5pbXBvcnQge3F1ZXJ5UGFyYW1zfSBmcm9tICdAY2RvL2FwcHMvY29kZS1zdHVkaW8vdXRpbHMnO1xuaW1wb3J0IHtpc0xldmVsQXNzZXNzbWVudH0gZnJvbSAnLi9wcm9ncmVzc0hlbHBlcnMnO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQge1Jldmlld1N0YXRlc30gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9mZWVkYmFjay90eXBlcyc7XG5pbXBvcnQgQnViYmxlQmFkZ2UsIHtCYWRnZVR5cGV9IGZyb20gJ0BjZG8vYXBwcy90ZW1wbGF0ZXMvcHJvZ3Jlc3MvQnViYmxlQmFkZ2UnO1xuaW1wb3J0IHtcbiAgQnViYmxlU2hhcGUsXG4gIEJ1YmJsZVNpemUsXG4gIGdldEJ1YmJsZVVybCxcbn0gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9wcm9ncmVzcy9CdWJibGVGYWN0b3J5JztcbmltcG9ydCBmb250Q29uc3RhbnRzIGZyb20gJ0BjZG8vYXBwcy9mb250Q29uc3RhbnRzJztcblxuLyoqXG4gKiBUaGlzIGNvbXBvbmVudCBpcyBzaW1pbGFyIHRvIG91ciBQcm9ncmVzc0J1YmJsZSwgZXhjZXB0IHRoYXQgaW5zdGVhZCBvZiBiZWluZ1xuICogYSBjaXJjbGUgd2l0aCBhIG51bWJlciBpbnNpZGUsIGl0IGlzIGFuIGVsbGlwc2Ugd2l0aCB0ZXh0IChhbmQgcG9zc2libHkgYW5cbiAqIGljb24pXG4gKi9cbmNsYXNzIFByb2dyZXNzUGlsbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgbGV2ZWxzOiBQcm9wVHlwZXMuYXJyYXlPZihsZXZlbFdpdGhQcm9ncmVzc1R5cGUpLFxuICAgIGljb246IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdGV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0b29sdGlwOiBQcm9wVHlwZXMuZWxlbWVudCxcbiAgICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc2VsZWN0ZWRTZWN0aW9uSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgcHJvZ3Jlc3NTdHlsZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgb25TaW5nbGVMZXZlbENsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICAvLyBSZWR1eFxuICAgIGlzUnRsOiBQcm9wVHlwZXMuYm9vbCxcbiAgfTtcblxuICBnZXRVcmwoKSB7XG4gICAgY29uc3Qge2xldmVscywgZGlzYWJsZWQsIHNlbGVjdGVkU2VjdGlvbklkLCBvblNpbmdsZUxldmVsQ2xpY2t9ID1cbiAgICAgIHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBwaWxsTGlua3NUb0xldmVsID1cbiAgICAgICFkaXNhYmxlZCAmJiAhb25TaW5nbGVMZXZlbENsaWNrICYmIGxldmVscy5sZW5ndGggPT09IDE7XG5cbiAgICBpZiAoIXBpbGxMaW5rc1RvTGV2ZWwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB1c2VySWQgPSBxdWVyeVBhcmFtcygndXNlcl9pZCcpO1xuICAgIHJldHVybiBnZXRCdWJibGVVcmwobGV2ZWxzWzBdLnVybCwgdXNlcklkLCBzZWxlY3RlZFNlY3Rpb25JZCk7XG4gIH1cblxuICBnZXRUb29sdGlwUHJvcHMoKSB7XG4gICAgY29uc3Qge3Rvb2x0aXB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IHRvb2x0aXBQcm9wcyA9IHt9O1xuICAgIGlmICh0b29sdGlwKSB7XG4gICAgICBjb25zdCBpZCA9IHRvb2x0aXAucHJvcHMudG9vbHRpcElkO1xuICAgICAgdG9vbHRpcFByb3BzWydkYXRhLXRpcCddID0gdHJ1ZTtcbiAgICAgIHRvb2x0aXBQcm9wc1snZGF0YS1mb3InXSA9IGlkO1xuICAgICAgdG9vbHRpcFByb3BzWydhcmlhLWRlc2NyaWJlZGJ5J10gPSBpZDtcbiAgICB9XG5cbiAgICByZXR1cm4gdG9vbHRpcFByb3BzO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGxldmVscyxcbiAgICAgIGljb24sXG4gICAgICB0ZXh0LFxuICAgICAgdG9vbHRpcCxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgcHJvZ3Jlc3NTdHlsZSxcbiAgICAgIGlzUnRsLFxuICAgICAgb25TaW5nbGVMZXZlbENsaWNrLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgZmlyc3RMZXZlbCA9IGxldmVsc1swXTtcblxuICAgIGNvbnN0IG11bHRpTGV2ZWxTdGVwID0gbGV2ZWxzLmxlbmd0aCA+IDE7XG5cbiAgICBjb25zdCB1cmwgPSB0aGlzLmdldFVybCgpO1xuXG4gICAgbGV0IG9uQ2xpY2sgPVxuICAgICAgIW11bHRpTGV2ZWxTdGVwICYmICFkaXNhYmxlZCAmJiAhdXJsXG4gICAgICAgID8gKCkgPT4gb25TaW5nbGVMZXZlbENsaWNrKGZpcnN0TGV2ZWwpXG4gICAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgbGV0IHN0eWxlID0ge1xuICAgICAgLi4uc3R5bGVzLmxldmVsUGlsbCxcbiAgICAgIC4uLigodXJsIHx8IG9uQ2xpY2spICYmIGhvdmVyU3R5bGUpLFxuICAgICAgLi4uKCFtdWx0aUxldmVsU3RlcCAmJlxuICAgICAgICBsZXZlbFByb2dyZXNzU3R5bGUoZmlyc3RMZXZlbC5zdGF0dXMsIGZpcnN0TGV2ZWwua2luZCkpLFxuICAgIH07XG5cbiAgICAvLyBBZGp1c3QgaWNvbiBtYXJnaW5zIGlmIGxvY2FsZSBpcyBSVExcbiAgICBjb25zdCBpY29uTWFyZ2luU3R5bGUgPSBpc1J0bCA/IHN0eWxlcy5pY29uTWFyZ2luUlRMIDogc3R5bGVzLmljb25NYXJnaW47XG5cbiAgICBjb25zdCB0b29sdGlwUHJvcHMgPSB0aGlzLmdldFRvb2x0aXBQcm9wcygpO1xuXG4gICAgY29uc3QgaGFzS2VlcFdvcmtpbmdGZWVkYmFjayA9XG4gICAgICBmaXJzdExldmVsWyd0ZWFjaGVyRmVlZGJhY2tSZXZpZXdTdGF0ZSddID09PSBSZXZpZXdTdGF0ZXMua2VlcFdvcmtpbmc7XG5cbiAgICAvLyBPbmx5IHB1dCB0aGUgYnViYmxlIGJhZGdlIG9uIGlmIGl0cyBhIHNpbmdsZSBhc3Nlc3NtZW50IGxldmVsIChub3Qgc2V0KVxuICAgIGNvbnN0IGRpc3BsYXlCYWRnZSA9XG4gICAgICAhbXVsdGlMZXZlbFN0ZXAgJiZcbiAgICAgIChoYXNLZWVwV29ya2luZ0ZlZWRiYWNrIHx8IGlzTGV2ZWxBc3Nlc3NtZW50KGZpcnN0TGV2ZWwpKTtcblxuICAgIGNvbnN0IHRleHRTdHlsZSA9IHByb2dyZXNzU3R5bGUgPyBzdHlsZXMudGV4dFByb2dyZXNzU3R5bGUgOiBzdHlsZXMudGV4dDtcblxuICAgIHJldHVybiAoXG4gICAgICA8YVxuICAgICAgICBocmVmPXt1cmx9XG4gICAgICAgIHN0eWxlPXt7dGV4dERlY29yYXRpb246ICdub25lJ319XG4gICAgICAgIGNsYXNzTmFtZT1cInVpdGVzdC1Qcm9ncmVzc1BpbGxcIlxuICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgPlxuICAgICAgICA8ZGl2IHsuLi50b29sdGlwUHJvcHN9IHN0eWxlPXtzdHlsZX0+XG4gICAgICAgICAge2ljb24gJiYgPEZvbnRBd2Vzb21lIGljb249e2ljb259IC8+fVxuICAgICAgICAgIHt0ZXh0ICYmIChcbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiUHJvZ3Jlc3NQaWxsVGV4dEFuZEljb25cIlxuICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgIC4uLnRleHRTdHlsZSxcbiAgICAgICAgICAgICAgICAuLi4oaWNvbiAmJiBpY29uTWFyZ2luU3R5bGUpLFxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7dGV4dH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgICAge3Rvb2x0aXB9XG4gICAgICAgICAge2Rpc3BsYXlCYWRnZSAmJiAoXG4gICAgICAgICAgICA8QnViYmxlQmFkZ2VcbiAgICAgICAgICAgICAgYmFkZ2VUeXBlPXtcbiAgICAgICAgICAgICAgICBoYXNLZWVwV29ya2luZ0ZlZWRiYWNrXG4gICAgICAgICAgICAgICAgICA/IEJhZGdlVHlwZS5rZWVwV29ya2luZ1xuICAgICAgICAgICAgICAgICAgOiBCYWRnZVR5cGUuYXNzZXNzbWVudFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJ1YmJsZVNpemU9e0J1YmJsZVNpemUuZnVsbH1cbiAgICAgICAgICAgICAgYnViYmxlU2hhcGU9e0J1YmJsZVNoYXBlLnBpbGx9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9hPlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBsZXZlbFBpbGw6IHtcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBib3JkZXJXaWR0aDogMixcbiAgICBib3JkZXJTdHlsZTogJ3NvbGlkJyxcbiAgICBib3JkZXJDb2xvcjogY29sb3IubGlnaHRlcl9ncmF5LFxuICAgIGNvbG9yOiBjb2xvci5jaGFyY29hbCxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgZm9udFNpemU6IDE2LFxuICAgIC4uLmZvbnRDb25zdGFudHNbJ21haW4tZm9udC1zZW1pLWJvbGQnXSxcbiAgICBib3JkZXJSYWRpdXM6IDIwLFxuICAgIHBhZGRpbmdMZWZ0OiAxMCxcbiAgICBwYWRkaW5nUmlnaHQ6IDEwLFxuICAgIHBhZGRpbmdUb3A6IDYsXG4gICAgcGFkZGluZ0JvdHRvbTogNixcbiAgICBtaW5XaWR0aDogNzAsXG4gICAgbGluZUhlaWdodDogJzE4cHgnLFxuICAgIG1hcmdpblRvcDogMyxcbiAgICBtYXJnaW5Cb3R0b206IDMsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gIH0sXG4gIHRleHQ6IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICAuLi5mb250Q29uc3RhbnRzWydtYWluLWZvbnQtc2VtaS1ib2xkJ10sXG4gICAgbGV0dGVyU3BhY2luZzogLTAuMTIsXG4gIH0sXG4gIHRleHRQcm9ncmVzc1N0eWxlOiB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXNlbWktYm9sZCddLFxuICAgIGZvbnRTaXplOiAxMixcbiAgICBsZXR0ZXJTcGFjaW5nOiAtMC4xMixcbiAgICB3aWR0aDogMTIwLFxuICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gIH0sXG4gIGljb25NYXJnaW46IHtcbiAgICBtYXJnaW5MZWZ0OiAxMCxcbiAgfSxcbiAgaWNvbk1hcmdpblJUTDoge1xuICAgIG1hcmdpblJpZ2h0OiAxMCxcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBVbmNvbm5lY3RlZFByb2dyZXNzUGlsbCA9IFByb2dyZXNzUGlsbDtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChzdGF0ZSA9PiAoe1xuICBpc1J0bDogc3RhdGUuaXNSdGwsXG59KSkoUmFkaXVtKFByb2dyZXNzUGlsbCkpO1xuIl0sIm5hbWVzIjpbIlNhZmVNYXJrZG93biIsInJlbmRlciIsInJlbmRlcmVkIiwidGhpcyIsInByb3BzIiwib3BlbkV4dGVybmFsTGlua3NJbk5ld1RhYiIsIm1hcmtkb3duVG9SZWFjdEV4dGVybmFsTGlua3MiLCJtYXJrZG93blRvUmVhY3QiLCJwcm9jZXNzU3luYyIsIm1hcmtkb3duIiwiY29udGVudHMiLCJtYXJrZG93blByb3BzIiwiY2xhc3NOYW1lIiwidHlwZSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJSZWFjdCIsIkNvbXBvbmVudCIsIlByb3BUeXBlcyIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJib29sIiwic2NoZW1hIiwiYXNzaWduIiwiZGVmYXVsdFNhbml0aXphdGlvblNjaGVtYSIsImF0dHJpYnV0ZXMiLCJpbWciLCJwdXNoIiwidGFnTmFtZXMiLCJzcGFuIiwiY2xvYmJlciIsImJsb2NrbHlUYWdzIiwiY29uY2F0IiwiYmxvY2tseUNvbXBvbmVudFdyYXBwZXJzIiwiZm9yRWFjaCIsInRhZyIsIkJsb2NrbHlFbGVtZW50IiwiaXMiLCJQYXJzZXIiLCJjcmVhdGUiLCJnZXRQYXJzZXIiLCJ1c2UiLCJjbGlja2FibGVUZXh0IiwiZXhwYW5kYWJsZUltYWdlcyIsInZpc3VhbENvZGVCbG9jayIsInhtbEFzVG9wTGV2ZWxCbG9jayIsImRldGFpbHMiLCJyZW1hcmtSZWh5cGUiLCJhbGxvd0Rhbmdlcm91c0hUTUwiLCJyZWh5cGVSYXciLCJyZWh5cGVTYW5pdGl6ZSIsInJlaHlwZVJlYWN0IiwiY3JlYXRlRWxlbWVudCIsImNvbXBvbmVudHMiLCJleHRlcm5hbExpbmtzIiwibGlua3MiLCJpc0V4dGVybmFsTGluayIsInVybCIsInRlc3QiLCJmdWxseVF1YWxpZmllZCIsInBhdGgiLCJhIiwiZG9jdW1lbnQiLCJocmVmIiwib3B0aW9ucyIsInRva2VuaXplcnMiLCJwcm90b3R5cGUiLCJpbmxpbmVUb2tlbml6ZXJzIiwib3JpZ2luYWwiLCJsaW5rIiwiYWxsIiwiZWF0IiwidmFsdWUiLCJzaWxlbnQiLCJjYWxsIiwiZGF0YSIsImhQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicmVsIiwibG9jYXRvciIsInN0eWxlcyIsIm1haW4iLCJkaXNwbGF5IiwicG9zaXRpb24iLCJyaWdodCIsInRvcCIsIndoaXRlU3BhY2UiLCJhcnJvd0NvbnRhaW5lciIsImxlZnRBcnJvdyIsIndpZHRoIiwiaGVpZ2h0IiwiYm9yZGVyU3R5bGUiLCJib3JkZXJXaWR0aCIsImJvcmRlckNvbG9yIiwiY29sb3IiLCJjeWFuIiwiZm9jdXNBcmVhIiwiYmFja2dyb3VuZENvbG9yIiwid2hpdGUiLCJsaW5lSGVpZ2h0IiwidGV4dCIsImZvY3VzQXJlYUljb24iLCJwYWRkaW5nIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwiYm9yZGVyUmFkaXVzIiwiZGVmYXVsdF9ibHVlIiwiUmFkaXVtIiwiRm9jdXNBcmVhSW5kaWNhdG9yIiwic3R5bGUiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwiaWNvbiIsImlkIiwicm9sZSIsImVmZmVjdCIsIlByb2dyZXNzQnViYmxlIiwib25DbGljayIsImxldmVsIiwiaXNDbGlja2FibGUiLCJkaXNhYmxlZCIsImdldFVybCIsInNlbGVjdGVkU2VjdGlvbklkIiwic2VsZWN0ZWRTdHVkZW50SWQiLCJnZXRCdWJibGVVcmwiLCJyZW5kZXJCdWJibGVCYWRnZSIsImJ1YmJsZVNoYXBlIiwiYnViYmxlU2l6ZSIsInNtYWxsQnViYmxlIiwiaGlkZUFzc2Vzc21lbnRCYWRnZSIsImhhc0tlZXBXb3JraW5nRmVlZGJhY2siLCJ0ZWFjaGVyRmVlZGJhY2tSZXZpZXdTdGF0ZSIsIlJldmlld1N0YXRlcyIsImtlZXBXb3JraW5nIiwiaXNMZXZlbEFzc2Vzc21lbnQiLCJiYWRnZVR5cGUiLCJCYWRnZVR5cGUiLCJhc3Nlc3NtZW50IiwiY3JlYXRlQnViYmxlRWxlbWVudCIsImhpZGVUb29sVGlwcyIsIkJ1YmJsZVNpemUiLCJkb3QiLCJmdWxsIiwiY29udGVudCIsImdldEJ1YmJsZUNvbnRlbnQiLCJpc0xvY2tlZCIsImlzVW5wbHVnZ2VkIiwiYm9udXMiLCJwYWlyZWQiLCJidWJibGVUZXh0IiwibGV0dGVyIiwibGV2ZWxOdW1iZXIiLCJnZXRCdWJibGVTaGFwZSIsImlzQ29uY2VwdExldmVsIiwiYnViYmxlIiwiQmFzaWNCdWJibGUiLCJzaGFwZSIsInNpemUiLCJwcm9ncmVzc1N0eWxlIiwibGV2ZWxQcm9ncmVzc1N0eWxlIiwic3RhdHVzIiwia2luZCIsImNsYXNzTmFtZXMiLCJnZXRCdWJibGVDbGFzc05hbWVzIiwiQnViYmxlVG9vbHRpcCIsImxldmVsSUQiLCJsZXNzb25OYW1lIiwiZGVzY3JpcHRpb24iLCJpMThuIiwicHJvZ3Jlc3NCdWJibGVEZXNjcmlwdGlvbiIsInByb2dyZXNzQnViYmxlRGVzY3JpcHRpb25XaXRoTGVzc29uIiwiQnViYmxlTGluayIsIm9uQ2xpY2tMZXZlbCIsImExMXlfZGVzY3JpcHRpb24iLCJsZXZlbFdpdGhQcm9ncmVzc1R5cGUiLCJudW1iZXIiLCJvbmVPZlR5cGUiLCJmdW5jIiwiUHJvZ3Jlc3NCdWJibGVTZXQiLCJpbmRleCIsImlzU3VibGV2ZWwiLCJsZXZlbHMiLCJpc1J0bCIsImJhY2tncm91bmRGaXJzdFN0eWxlIiwiYmFja2dyb3VuZExhc3QiLCJiYWNrZ3JvdW5kRmlyc3QiLCJiYWNrZ3JvdW5kTGFzdFN0eWxlIiwiYmFja2dyb3VuZFN0eWxlUHJvcCIsImJhY2tncm91bmQiLCJiYWNrZ3JvdW5kRGlhbW9uZCIsImJhY2tncm91bmRTdWJsZXZlbCIsImJhY2tncm91bmRQaWxsIiwic3VibGV2ZWxzIiwiY29udGFpbmVyU3R5bGVQcm9wIiwiY29udGFpbmVyIiwicGlsbENvbnRhaW5lciIsImRpYW1vbmRDb250YWluZXIiLCJjb250YWluZXJTdWJsZXZlbCIsIndpdGhCYWNrZ3JvdW5kIiwia2V5Iiwib25CdWJibGVDbGljayIsInNob3dTdWJsZXZlbHMiLCJtYXAiLCJyZW5kZXJCdWJibGUiLCJzdWJsZXZlbCIsImFycmF5T2YiLCJvYmplY3QiLCJsZXNzb25FeHRyYXNFbmFibGVkIiwibGlnaHRlcl9ncmF5IiwibGVmdCIsIkRPVF9TSVpFIiwiRElBTU9ORF9ET1RfU0laRSIsIlVuY29ubmVjdGVkUHJvZ3Jlc3NCdWJibGVTZXQiLCJjb25uZWN0Iiwic3RhdGUiLCJQcm9ncmVzc0xlc3NvbiIsInNldFN0YXRlIiwiY29sbGFwc2VkIiwiZmlyZWhvc2VDbGllbnQiLCJwdXRSZWNvcmQiLCJzdHVkeSIsInN0dWR5X2dyb3VwIiwiZXZlbnQiLCJkYXRhX2pzb24iLCJKU09OIiwic3RyaW5naWZ5IiwibGVzc29uX2lkIiwibGVzc29uIiwic2NyaXB0X2lkIiwic2NyaXB0SWQiLCJpbmNsdWRlVXNlcklkIiwidmlld0FzIiwiVmlld1R5cGUiLCJJbnN0cnVjdG9yIiwiY3VycmVudExlc3NvbklkIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJuZXh0UHJvcHMiLCJpc1Zpc2libGUiLCJoaWRkZW5Gb3JTdHVkZW50cyIsImlzTG9ja2VkRm9yVXNlciIsImlzTG9ja2VkRm9yQWxsU3R1ZGVudHMiLCJzaG93QXNMb2NrZWQiLCJ0aXRsZSIsImxlc3Nvbk51bWJlciIsImxlc3Nvbk51bWJlcmVkIiwibmFtZSIsImNhcmV0U3R5bGUiLCJjYXJldFJUTCIsImNhcmV0IiwibG9ja2VkVG9vbHRpcElkIiwiXyIsInVuaXF1ZUlkIiwiZGVzY3JpcHRpb25fdGVhY2hlciIsImRlc2NyaXB0aW9uX3N0dWRlbnQiLCJsZXNzb25VcmwiLCJzaG93Tm90QXV0aG9yaXplZFdhcm5pbmciLCJsb2NrYWJsZSIsImxvY2thYmxlQXV0aG9yaXplZExvYWRlZCIsImxvY2thYmxlQXV0aG9yaXplZCIsIm91dGVyIiwiaGlkZGVuT3JMb2NrZWQiLCJQYXJ0aWNpcGFudCIsInRyYW5zbHVjZW50IiwiaGVhZGluZyIsIm1hcmdpbkJvdHRvbSIsImhlYWRpbmdUZXh0IiwidG9nZ2xlQ29sbGFwc2VkIiwidGFiSW5kZXgiLCJvbktleURvd24iLCJlIiwiaW5jbHVkZXMiLCJwcmV2ZW50RGVmYXVsdCIsImxvY2tTdGF0dXNMb2FkZWQiLCJ1bmxvY2tlZEljb24iLCJ3cmFwcGVyIiwibG9ja0Fzc2Vzc21lbnRMb25nIiwic3R1ZGVudF9sZXNzb25fcGxhbl9odG1sX3VybCIsImJ1dHRvblN0eWxlIiwiX191c2VEZXByZWNhdGVkVGFnIiwibGVzc29uUmVzb3VyY2VzIiwib25DbGlja1N0dWRlbnRMZXNzb25QbGFuIiwibm90QXV0aG9yaXplZFdhcm5pbmciLCJ1bnZlcmlmaWVkVGVhY2hlckxvY2tXYXJuaW5nIiwibGVhcm5Nb3JlTGluayIsImxlYXJuTW9yZVdpdGhQZXJpb2QiLCJpc01pbmlWaWV3IiwiaXNGb2N1c0FyZWEiLCJsZXNzb25UeXBlIiwib25lT2YiLCJ2YWx1ZXMiLCJsaWdodGVzdF9ncmF5IiwiYm9yZGVyX2dyYXkiLCJtYXJnaW5Ub3AiLCJmb250U2l6ZSIsImZvbnRDb25zdGFudHMiLCJhbGlnbkl0ZW1zIiwiY3Vyc29yIiwiZmxleEdyb3ciLCJvcGFjaXR5Iiwib3JhbmdlIiwicmVkIiwiVW5jb25uZWN0ZWRQcm9ncmVzc0xlc3NvbiIsIm93blByb3BzIiwicHJvZ3Jlc3MiLCJsZXNzb25Mb2NrIiwibGVzc29uSXNWaXNpYmxlIiwibGVzc29uSXNMb2NrZWRGb3JVc2VyIiwibGVzc29uSXNMb2NrZWRGb3JBbGxTdHVkZW50cyIsInRlYWNoZXJTZWN0aW9ucyIsInVuaXRQcm9ncmVzc0hhc0xvYWRlZCIsImxlc3NvbnNCeVNlY3Rpb25JZExvYWRlZCIsIlByb2dyZXNzTGVzc29uQ29udGVudCIsImJ1YmJsZXMiLCJwcm9ncmVzc2lvbnMiLCJwcm9ncmVzc2lvbnNGcm9tTGV2ZWxzIiwibm9MZXZlbHNXYXJuaW5nIiwibGVzc29uQ29udGFpbnNOb0xldmVscyIsInByb2dyZXNzaW9uIiwiZGlzcGxheU5hbWUiLCJzdW1tYXJ5IiwiUHJvZ3Jlc3NMZXZlbFNldCIsInBpbGxUZXh0IiwibXVsdGlMZXZlbFN0ZXAiLCJ1bmRlZmluZWQiLCJjb2wyU3R5bGUiLCJjb2wyUlRMIiwiY29sMiIsImdldEljb25Gb3JMZXZlbCIsInVucGx1Z2dlZEFjdGl2aXR5IiwidG9TdHJpbmciLCJ0YWJsZSIsImNvbDEiLCJvblNpbmdsZUxldmVsQ2xpY2siLCJuYW1lVGV4dCIsImxpbmVzQW5kRG90IiwidmVydGljYWxMaW5lIiwiaG9yaXpvbnRhbExpbmUiLCJjaGFyY29hbCIsImxldHRlclNwYWNpbmciLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsImJvdHRvbSIsIlVuY29ubmVjdGVkUHJvZ3Jlc3NMZXZlbFNldCIsIlByb2dyZXNzUGlsbCIsInVzZXJJZCIsInF1ZXJ5UGFyYW1zIiwiZ2V0VG9vbHRpcFByb3BzIiwidG9vbHRpcCIsInRvb2x0aXBQcm9wcyIsInRvb2x0aXBJZCIsImZpcnN0TGV2ZWwiLCJsZXZlbFBpbGwiLCJob3ZlclN0eWxlIiwiaWNvbk1hcmdpblN0eWxlIiwiaWNvbk1hcmdpblJUTCIsImljb25NYXJnaW4iLCJkaXNwbGF5QmFkZ2UiLCJ0ZXh0U3R5bGUiLCJ0ZXh0UHJvZ3Jlc3NTdHlsZSIsInRleHREZWNvcmF0aW9uIiwiQnViYmxlU2hhcGUiLCJwaWxsIiwiZWxlbWVudCIsInRleHRBbGlnbiIsImp1c3RpZnlDb250ZW50IiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iLCJtaW5XaWR0aCIsIm92ZXJmbG93IiwidGV4dE92ZXJmbG93IiwiVW5jb25uZWN0ZWRQcm9ncmVzc1BpbGwiXSwic291cmNlUm9vdCI6IiJ9