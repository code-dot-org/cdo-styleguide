(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[5747],{"./src/fontConstants.js":module=>{module.exports={"metropolis-font":"'Metropolis', sans-serif","main-font":"'Metropolis', sans-serif","thin-font-weight":"100","extra-light-font-weight":"200","light-font-weight":"300","regular-font-weight":"400","medium-font-weight":"500","semi-bold-font-weight":"600","bold-font-weight":"700","extra-bold-font-weight":"800","black-font-weight":"900","main-font-thin":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"normal"},"main-font-thin-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"italic"},"main-font-extra-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"normal"},"main-font-extra-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"italic"},"main-font-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"normal"},"main-font-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"italic"},"main-font-regular":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"normal"},"main-font-regular-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"italic"},"main-font-medium":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"normal"},"main-font-medium-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"italic"},"main-font-semi-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"normal"},"main-font-semi-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"italic"},"main-font-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"normal"},"main-font-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"italic"},"main-font-extra-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"normal"},"main-font-extra-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"italic"},"main-font-black":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"normal"},"main-font-black-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"italic"},"barlowSemiCondensed-semibold":"'Barlow Semi Condensed Semibold', sans-serif","barlowSemiCondensed-medium":"'Barlow Semi Condensed Medium', sans-serif","code-font":"'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace","font-awesome-core-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css'","font-awesome-brands-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css'","font-awesome-solid-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css'","font-awesome-regular-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css'","font-awesome-v4-fonts-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css'","font-awesome-v4-shims-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css'"}},"./src/lib/ui/PopUpMenu.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.STANDARD_PADDING=exports.MenuBubble=exports.MenuBreak=void 0;var _react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_reactPortal=__webpack_require__("./node_modules/react-portal/es/index.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BACKGROUND_COLOR=_color.default.white,BORDER_COLOR=_color.default.light_gray;exports.STANDARD_PADDING=20;var menuStyle={position:"absolute",zIndex:20,border:"1px solid ".concat(BORDER_COLOR),backgroundColor:BACKGROUND_COLOR,borderRadius:2,boxShadow:"3px 3px 3px gray",textAlign:"left",maxWidth:300},tailBorderStyle={position:"absolute",bottom:"100%",left:20,marginLeft:-7,borderTopWidth:0,borderBottomWidth:12,borderLeftWidth:7,borderRightWidth:7,borderStyle:"solid",borderColor:"transparent transparent ".concat(BORDER_COLOR," transparent")},tailFillStyle=_objectSpread(_objectSpread({},tailBorderStyle),{},{bottom:"calc(100% - 2px)",borderColor:"transparent transparent ".concat(BACKGROUND_COLOR," transparent")}),PopUpMenu=function(_Component){function PopUpMenu(){return _Component.apply(this,arguments)||this}return _inheritsLoose(PopUpMenu,_Component),PopUpMenu.prototype.render=function render(){var _this=this;return this.props.isOpen&&_react.default.createElement(_reactPortal.PortalWithState,{closeOnOutsideClick:!0,closeOnEsc:!0,onClose:this.props.onClose,defaultOpen:this.props.isOpen},(function(_ref){_ref.openPortal,_ref.closePortal,_ref.isOpen;var portal=_ref.portal;return _react.default.createElement("div",null,portal(_react.default.createElement(MenuBubble,{targetPoint:_this.props.targetPoint,offset:_this.props.offset,className:_this.props.className,showTail:_this.props.showTail,style:_this.props.style},_this.props.children)))}))},PopUpMenu}(_react.Component);exports.default=PopUpMenu,_defineProperty(PopUpMenu,"propTypes",{targetPoint:_propTypes.default.shape({top:_propTypes.default.number.isRequired,left:_propTypes.default.number.isRequired}).isRequired,offset:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}),children:_propTypes.default.any,className:_propTypes.default.string,isOpen:_propTypes.default.bool,onClose:_propTypes.default.func,showTail:_propTypes.default.bool,style:_propTypes.default.object});var MenuBubbleUnwrapped=function(_Component2){function MenuBubbleUnwrapped(){return _Component2.apply(this,arguments)||this}_inheritsLoose(MenuBubbleUnwrapped,_Component2);var _proto2=MenuBubbleUnwrapped.prototype;return _proto2.renderMenuItems=function renderMenuItems(){var children=this.props.children;Array.isArray(children)&&(children=children.filter((function(x){return x})));var childCount=_react.Children.count(children);return 0===childCount?_react.default.createElement("div",null,_react.default.createElement("em",null,_locale.default.noMenuItemsAvailable())):_react.default.createElement("div",null,_react.Children.map(children,(function(child,index){return child?_react.default.cloneElement(child,{first:0===index,last:index===childCount-1}):child})))},_proto2.render=function render(){var _this$props=this.props,targetPoint=_this$props.targetPoint,className=_this$props.className,marginTop=this.props.offset?this.props.offset.y:12,marginLeft=this.props.offset?this.props.offset.x:-20,style=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},menuStyle),this.props.style),targetPoint),{},{marginTop,marginLeft});return _react.default.createElement("div",{style,className},this.renderMenuItems(),this.props.showTail&&_react.default.createElement("span",{style:tailBorderStyle}),this.props.showTail&&_react.default.createElement("span",{style:tailFillStyle}))},MenuBubbleUnwrapped}(_react.Component);_defineProperty(MenuBubbleUnwrapped,"propTypes",{targetPoint:_propTypes.default.shape({top:_propTypes.default.number.isRequired,left:_propTypes.default.number.isRequired}).isRequired,offset:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}),children:_propTypes.default.any,className:_propTypes.default.string,showTail:_propTypes.default.bool,style:_propTypes.default.object});var MenuBubble=(0,_radium.default)(MenuBubbleUnwrapped);exports.MenuBubble=MenuBubble;var MenuBreak=function(_Component3){function MenuBreak(){return _Component3.apply(this,arguments)||this}return _inheritsLoose(MenuBreak,_Component3),MenuBreak.prototype.render=function render(){var style={borderTop:"1px solid "+_color.default.lighter_gray,marginTop:10,marginBottom:10,marginLeft:20,marginRight:20};return _react.default.createElement("div",{style})},MenuBreak}(_react.Component);exports.MenuBreak=MenuBreak;var Item=function(_Component4){function Item(){return _Component4.apply(this,arguments)||this}return _inheritsLoose(Item,_Component4),Item.prototype.render=function render(){var _this$props2=this.props,first=_this$props2.first,last=_this$props2.last,onClick=_this$props2.onClick,children=_this$props2.children,href=_this$props2.href,openInNewTab=_this$props2.openInNewTab,className=_this$props2.className,style=_this$props2.style,classList=className?"".concat("pop-up-menu-item"," ").concat(className):"pop-up-menu-item";if(!href&&!onClick)throw new Error("Expect at least one of href/onClick");var wrapperStyle=_objectSpread(_objectSpread({},{marginTop:first?15:void 0,marginBottom:last?15:void 0,paddingTop:5,paddingBottom:5,paddingLeft:20,paddingRight:20,cursor:"pointer",":hover":{backgroundColor:_color.default.lightest_gray}}),style),textStyle=_objectSpread({color:this.props.color?this.props.color:_color.default.dark_charcoal,textDecoration:"none"},_fontConstants.default["main-font-regular"]),target=openInNewTab?"_blank":"";return _react.default.createElement("div",{style:wrapperStyle},this.props.href&&_react.default.createElement("a",{className:classList,href,style:_objectSpread(_objectSpread({},textStyle),{display:"block"}),target},children),!this.props.href&&_react.default.createElement("div",{className:classList,style:textStyle,onClick},children))},Item}(_react.Component);_defineProperty(Item,"propTypes",{children:_propTypes.default.node.isRequired,onClick:_propTypes.default.func,href:_propTypes.default.string,first:_propTypes.default.bool,last:_propTypes.default.bool,color:_propTypes.default.string,openInNewTab:_propTypes.default.bool,className:_propTypes.default.string,style:_propTypes.default.object}),PopUpMenu.Item=(0,_radium.default)(Item)},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_500:"#94979B",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/react-portal/es/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Portal:()=>PortalCompat,PortalWithState:()=>es_PortalWithState});var react_dom=__webpack_require__("./node_modules/react-dom/index.js"),react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),canUseDOM=!("undefined"==typeof window||!window.document||!window.document.createElement),_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();var Portal=function(_React$Component){function Portal(){return function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,Portal),function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}(this,(Portal.__proto__||Object.getPrototypeOf(Portal)).apply(this,arguments))}return function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}(Portal,_React$Component),_createClass(Portal,[{key:"componentWillUnmount",value:function componentWillUnmount(){this.defaultNode&&document.body.removeChild(this.defaultNode),this.defaultNode=null}},{key:"render",value:function render(){return canUseDOM?(this.props.node||this.defaultNode||(this.defaultNode=document.createElement("div"),document.body.appendChild(this.defaultNode)),react_dom.createPortal(this.props.children,this.props.node||this.defaultNode)):null}}]),Portal}(react.Component);Portal.propTypes={children:prop_types_default().node.isRequired,node:prop_types_default().any};const es_Portal=Portal;var LegacyPortal_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();var LegacyPortal_Portal=function(_React$Component){function Portal(){return function LegacyPortal_classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,Portal),function LegacyPortal_possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}(this,(Portal.__proto__||Object.getPrototypeOf(Portal)).apply(this,arguments))}return function LegacyPortal_inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}(Portal,_React$Component),LegacyPortal_createClass(Portal,[{key:"componentDidMount",value:function componentDidMount(){this.renderPortal()}},{key:"componentDidUpdate",value:function componentDidUpdate(props){this.renderPortal()}},{key:"componentWillUnmount",value:function componentWillUnmount(){react_dom.unmountComponentAtNode(this.defaultNode||this.props.node),this.defaultNode&&document.body.removeChild(this.defaultNode),this.defaultNode=null,this.portal=null}},{key:"renderPortal",value:function renderPortal(props){this.props.node||this.defaultNode||(this.defaultNode=document.createElement("div"),document.body.appendChild(this.defaultNode));var children=this.props.children;"function"==typeof this.props.children.type&&(children=react.cloneElement(this.props.children)),this.portal=react_dom.unstable_renderSubtreeIntoContainer(this,children,this.props.node||this.defaultNode)}},{key:"render",value:function render(){return null}}]),Portal}(react.Component);const LegacyPortal=LegacyPortal_Portal;LegacyPortal_Portal.propTypes={children:prop_types_default().node.isRequired,node:prop_types_default().any};const PortalCompat=react_dom.createPortal?es_Portal:LegacyPortal;var PortalWithState_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();var KEYCODES_ESCAPE=27,PortalWithState=function(_React$Component){function PortalWithState(props){!function PortalWithState_classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,PortalWithState);var _this=function PortalWithState_possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}(this,(PortalWithState.__proto__||Object.getPrototypeOf(PortalWithState)).call(this,props));return _this.portalNode=null,_this.state={active:!!props.defaultOpen},_this.openPortal=_this.openPortal.bind(_this),_this.closePortal=_this.closePortal.bind(_this),_this.wrapWithPortal=_this.wrapWithPortal.bind(_this),_this.handleOutsideMouseClick=_this.handleOutsideMouseClick.bind(_this),_this.handleKeydown=_this.handleKeydown.bind(_this),_this}return function PortalWithState_inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}(PortalWithState,_React$Component),PortalWithState_createClass(PortalWithState,[{key:"componentDidMount",value:function componentDidMount(){this.props.closeOnEsc&&document.addEventListener("keydown",this.handleKeydown),this.props.closeOnOutsideClick&&document.addEventListener("click",this.handleOutsideMouseClick)}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.props.closeOnEsc&&document.removeEventListener("keydown",this.handleKeydown),this.props.closeOnOutsideClick&&document.removeEventListener("click",this.handleOutsideMouseClick)}},{key:"openPortal",value:function openPortal(e){this.state.active||(e&&e.nativeEvent&&e.nativeEvent.stopImmediatePropagation(),this.setState({active:!0},this.props.onOpen))}},{key:"closePortal",value:function closePortal(){this.state.active&&this.setState({active:!1},this.props.onClose)}},{key:"wrapWithPortal",value:function wrapWithPortal(children){var _this2=this;return this.state.active?react.createElement(PortalCompat,{node:this.props.node,key:"react-portal",ref:function ref(portalNode){return _this2.portalNode=portalNode}},children):null}},{key:"handleOutsideMouseClick",value:function handleOutsideMouseClick(e){if(this.state.active){var root=this.portalNode&&(this.portalNode.props.node||this.portalNode.defaultNode);!root||root.contains(e.target)||e.button&&0!==e.button||this.closePortal()}}},{key:"handleKeydown",value:function handleKeydown(e){e.keyCode===KEYCODES_ESCAPE&&this.state.active&&this.closePortal()}},{key:"render",value:function render(){return this.props.children({openPortal:this.openPortal,closePortal:this.closePortal,portal:this.wrapWithPortal,isOpen:this.state.active})}}]),PortalWithState}(react.Component);PortalWithState.propTypes={children:prop_types_default().func.isRequired,defaultOpen:prop_types_default().bool,node:prop_types_default().any,closeOnEsc:prop_types_default().bool,closeOnOutsideClick:prop_types_default().bool,onOpen:prop_types_default().func,onClose:prop_types_default().func},PortalWithState.defaultProps={onOpen:function onOpen(){},onClose:function onClose(){}};const es_PortalWithState=PortalWithState},"./src/lib/ui/PopUpMenu.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.BasicExample=void 0;var _react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_PopUpMenu=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/lib/ui/PopUpMenu.jsx"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var _default={component:_PopUpMenu.default};exports.default=_default;var BasicExampleComponent=function BasicExampleComponent(props){var _useState2=_slicedToArray((0,_react.useState)(!0),2),isOpen=_useState2[0],setIsOpen=_useState2[1],targetPoint=_react.default.createRef(),_useState4=_slicedToArray((0,_react.useState)(null),2),targetPointRect=_useState4[0],setTargetPointRect=_useState4[1];return(0,_react.useEffect)((function(){if(!targetPointRect){var rect=targetPoint.current.getBoundingClientRect();setTargetPointRect({top:rect.bottom,left:rect.left+rect.width/2})}}),[targetPoint,targetPointRect]),_react.default.createElement("div",null,"The ",_react.default.createElement("tt",null,"PopUpMenu")," component is absolutely-positioned.",_react.default.createElement("div",{style:{border:"solid black thin",margin:"1em",width:"50%"},ref:targetPoint,onClick:function onClick(){return!isOpen&&setIsOpen(!0)}},"It targets the bottom-center of this element."),targetPointRect&&_react.default.createElement(_PopUpMenu.default,{isOpen,onClose:function onClose(){return setIsOpen(!1)},targetPoint:targetPointRect},_react.default.createElement(_PopUpMenu.default.Item,{onClick:(0,_addonActions.action)("option 1")},"Option One"),_react.default.createElement(_PopUpMenu.default.Item,{onClick:(0,_addonActions.action)("option 2")},"Option Two"),_react.default.createElement(_PopUpMenu.default.Item,{onClick:(0,_addonActions.action)("option 3")},"Option Three")))};exports.BasicExample=function BasicExample(args){return _react.default.createElement(BasicExampleComponent,args)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLXVpLVBvcFVwTWVudS1zdG9yeS44MmQ4YzU5Ni5pZnJhbWUuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJrSEFNQUEsT0FBT0MsUUFBVSxDQUNmLGtCQUFtQiwyQkFDbkIsWUFBYSwyQkFDYixtQkFBb0IsTUFDcEIsMEJBQTJCLE1BQzNCLG9CQUFxQixNQUNyQixzQkFBdUIsTUFDdkIscUJBQXNCLE1BQ3RCLHdCQUF5QixNQUN6QixtQkFBb0IsTUFDcEIseUJBQTBCLE1BQzFCLG9CQUFxQixNQUNyQixpQkFBa0IsQ0FDbEIsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLHdCQUF5QixDQUN6QixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsd0JBQXlCLENBQ3pCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYiwrQkFBZ0MsQ0FDaEMsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLGtCQUFtQixDQUNuQixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIseUJBQTBCLENBQzFCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYixvQkFBcUIsQ0FDckIsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLDJCQUE0QixDQUM1QixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsbUJBQW9CLENBQ3BCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYiwwQkFBMkIsQ0FDM0IsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLHNCQUF1QixDQUN2QixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsNkJBQThCLENBQzlCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYixpQkFBa0IsQ0FDbEIsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLHdCQUF5QixDQUN6QixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsdUJBQXdCLENBQ3hCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVB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Iiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2ZvbnRDb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2xpYi91aS9Qb3BVcE1lbnUuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy91dGlsL2NvbG9yLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXBvcnRhbC9lcy91dGlscy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9ydGFsL2VzL1BvcnRhbC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9ydGFsL2VzL0xlZ2FjeVBvcnRhbC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9ydGFsL2VzL1BvcnRhbENvbXBhdC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9ydGFsL2VzL1BvcnRhbFdpdGhTdGF0ZS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvbGliL3VpL1BvcFVwTWVudS5zdG9yeS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cblxuLy8gYXBwcy9zcmMvZm9udENvbnN0YW50cy5qc1xuLy8gR0VORVJBVEVEIEZJTEU6IERPIE5PVCBNT0RJRlkgRElSRUNUTFlcbi8vIFRoaXMgZ2VuZXJhdGVkIGZpbGUgZXhwb3J0cyBhbGwgdmFyaWFibGVzIGRlZmluZWQgaW4gc2hhcmVkL2Nzcy9mb250LnNjc3Ncbi8vIGZvciB1c2UgaW4gSmF2YVNjcmlwdC4gVGhlIGdlbmVyYXRvciBzY3JpcHQgaXMgY29udmVydC1zY3NzLXZhcmlhYmxlcy5qc1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwibWV0cm9wb2xpcy1mb250XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwibWFpbi1mb250XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwidGhpbi1mb250LXdlaWdodFwiOiBcIjEwMFwiLFxuICBcImV4dHJhLWxpZ2h0LWZvbnQtd2VpZ2h0XCI6IFwiMjAwXCIsXG4gIFwibGlnaHQtZm9udC13ZWlnaHRcIjogXCIzMDBcIixcbiAgXCJyZWd1bGFyLWZvbnQtd2VpZ2h0XCI6IFwiNDAwXCIsXG4gIFwibWVkaXVtLWZvbnQtd2VpZ2h0XCI6IFwiNTAwXCIsXG4gIFwic2VtaS1ib2xkLWZvbnQtd2VpZ2h0XCI6IFwiNjAwXCIsXG4gIFwiYm9sZC1mb250LXdlaWdodFwiOiBcIjcwMFwiLFxuICBcImV4dHJhLWJvbGQtZm9udC13ZWlnaHRcIjogXCI4MDBcIixcbiAgXCJibGFjay1mb250LXdlaWdodFwiOiBcIjkwMFwiLFxuICBcIm1haW4tZm9udC10aGluXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjEwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC10aGluLWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCIxMDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtZXh0cmEtbGlnaHRcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMjAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWV4dHJhLWxpZ2h0LWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCIyMDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtbGlnaHRcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMzAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWxpZ2h0LWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCIzMDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtcmVndWxhclwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI0MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtcmVndWxhci1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNDAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LW1lZGl1bVwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI1MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtbWVkaXVtLWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI1MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtc2VtaS1ib2xkXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjYwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1zZW1pLWJvbGQtaXRhbGljXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjYwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIml0YWxpY1wiLFxuICB9LFxuICBcIm1haW4tZm9udC1ib2xkXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjcwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1ib2xkLWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI3MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtZXh0cmEtYm9sZFwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI4MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtZXh0cmEtYm9sZC1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiODAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWJsYWNrXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjkwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1ibGFjay1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiOTAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwiYmFybG93U2VtaUNvbmRlbnNlZC1zZW1pYm9sZFwiOiBcIidCYXJsb3cgU2VtaSBDb25kZW5zZWQgU2VtaWJvbGQnLCBzYW5zLXNlcmlmXCIsXG4gIFwiYmFybG93U2VtaUNvbmRlbnNlZC1tZWRpdW1cIjogXCInQmFybG93IFNlbWkgQ29uZGVuc2VkIE1lZGl1bScsIHNhbnMtc2VyaWZcIixcbiAgXCJjb2RlLWZvbnRcIjogXCInU291cmNlIENvZGUgUHJvJywgTW9uYWNvLCAnQml0c3RyZWFtIFZlcmEgU2FucyBNb25vJywgJ0x1Y2lkYSBDb25zb2xlJywgVGVybWluYWwsIG1vbm9zcGFjZVwiLFxuICBcImZvbnQtYXdlc29tZS1jb3JlLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3MvZm9udGF3ZXNvbWUubWluLmNzcydcIixcbiAgXCJmb250LWF3ZXNvbWUtYnJhbmRzLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3MvYnJhbmRzLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLXNvbGlkLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3Mvc29saWQubWluLmNzcydcIixcbiAgXCJmb250LWF3ZXNvbWUtcmVndWxhci11cmxcIjogXCInaHR0cHM6Ly9kc2NvLmNvZGUub3JnL2Fzc2V0cy9mb250LWF3ZXNvbWUtcHJvLzE2ODQxNzg4NzYvY3NzL3JlZ3VsYXIubWluLmNzcydcIixcbiAgXCJmb250LWF3ZXNvbWUtdjQtZm9udHMtdXJsXCI6IFwiJ2h0dHBzOi8vZHNjby5jb2RlLm9yZy9hc3NldHMvZm9udC1hd2Vzb21lLXByby8xNjg0MTc4ODc2L2Nzcy92NC1mb250LWZhY2UubWluLmNzcydcIixcbiAgXCJmb250LWF3ZXNvbWUtdjQtc2hpbXMtdXJsXCI6IFwiJ2h0dHBzOi8vZHNjby5jb2RlLm9yZy9hc3NldHMvZm9udC1hd2Vzb21lLXByby8xNjg0MTc4ODc2L2Nzcy92NC1zaGltcy5taW4uY3NzJ1wiLFxufTtcbiIsIi8qKiBAZmlsZSBQb3Atb3ZlciBtZW51IGNvbXBvbmVudC4gIENvbWJpbmUgd2l0aCByZWFjdC1wb3J0YWwgdG8gdXNlLiAqL1xuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50LCBDaGlsZHJlbn0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IFJhZGl1bSBmcm9tICdyYWRpdW0nOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXJlc3RyaWN0ZWQtaW1wb3J0c1xuaW1wb3J0IHtQb3J0YWxXaXRoU3RhdGV9IGZyb20gJ3JlYWN0LXBvcnRhbCc7XG5pbXBvcnQgbXNnIGZyb20gJ0BjZG8vbG9jYWxlJztcbmltcG9ydCBjb2xvciBmcm9tICcuLi8uLi91dGlsL2NvbG9yJztcbmltcG9ydCBmb250Q29uc3RhbnRzIGZyb20gJ0BjZG8vYXBwcy9mb250Q29uc3RhbnRzJztcblxuY29uc3QgVEFJTF9XSURUSCA9IDE0O1xuY29uc3QgVEFJTF9IRUlHSFQgPSAxMjtcbmNvbnN0IEJBQ0tHUk9VTkRfQ09MT1IgPSBjb2xvci53aGl0ZTtcbmNvbnN0IEJPUkRFUl9DT0xPUiA9IGNvbG9yLmxpZ2h0X2dyYXk7XG5leHBvcnQgY29uc3QgU1RBTkRBUkRfUEFERElORyA9IDIwO1xuXG5jb25zdCBtZW51U3R5bGUgPSB7XG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB6SW5kZXg6IDIwLFxuICBib3JkZXI6IGAxcHggc29saWQgJHtCT1JERVJfQ09MT1J9YCxcbiAgYmFja2dyb3VuZENvbG9yOiBCQUNLR1JPVU5EX0NPTE9SLFxuICBib3JkZXJSYWRpdXM6IDIsXG4gIGJveFNoYWRvdzogJzNweCAzcHggM3B4IGdyYXknLFxuICB0ZXh0QWxpZ246ICdsZWZ0JyxcbiAgbWF4V2lkdGg6IDMwMCxcbn07XG5jb25zdCB0YWlsQm9yZGVyU3R5bGUgPSB7XG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICBib3R0b206ICcxMDAlJyxcbiAgbGVmdDogU1RBTkRBUkRfUEFERElORyxcbiAgbWFyZ2luTGVmdDogLVRBSUxfV0lEVEggLyAyLFxuICBib3JkZXJUb3BXaWR0aDogMCxcbiAgYm9yZGVyQm90dG9tV2lkdGg6IFRBSUxfSEVJR0hULFxuICBib3JkZXJMZWZ0V2lkdGg6IFRBSUxfV0lEVEggLyAyLFxuICBib3JkZXJSaWdodFdpZHRoOiBUQUlMX1dJRFRIIC8gMixcbiAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gIGJvcmRlckNvbG9yOiBgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJHtCT1JERVJfQ09MT1J9IHRyYW5zcGFyZW50YCxcbn07XG5jb25zdCB0YWlsRmlsbFN0eWxlID0ge1xuICAuLi50YWlsQm9yZGVyU3R5bGUsXG4gIGJvdHRvbTogJ2NhbGMoMTAwJSAtIDJweCknLFxuICBib3JkZXJDb2xvcjogYHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICR7QkFDS0dST1VORF9DT0xPUn0gdHJhbnNwYXJlbnRgLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wVXBNZW51IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICB0YXJnZXRQb2ludDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHRvcDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgICAgbGVmdDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIH0pLmlzUmVxdWlyZWQsXG4gICAgb2Zmc2V0OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgeDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgICAgeTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIH0pLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55LFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBpc09wZW46IFByb3BUeXBlcy5ib29sLFxuICAgIG9uQ2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIHNob3dUYWlsOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHRoaXMucHJvcHMuaXNPcGVuICYmIChcbiAgICAgICAgPFBvcnRhbFdpdGhTdGF0ZVxuICAgICAgICAgIGNsb3NlT25PdXRzaWRlQ2xpY2tcbiAgICAgICAgICBjbG9zZU9uRXNjXG4gICAgICAgICAgb25DbG9zZT17dGhpcy5wcm9wcy5vbkNsb3NlfVxuICAgICAgICAgIGRlZmF1bHRPcGVuPXt0aGlzLnByb3BzLmlzT3Blbn1cbiAgICAgICAgPlxuICAgICAgICAgIHsoe29wZW5Qb3J0YWwsIGNsb3NlUG9ydGFsLCBpc09wZW4sIHBvcnRhbH0pID0+IChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIHtwb3J0YWwoXG4gICAgICAgICAgICAgICAgPE1lbnVCdWJibGVcbiAgICAgICAgICAgICAgICAgIHRhcmdldFBvaW50PXt0aGlzLnByb3BzLnRhcmdldFBvaW50fVxuICAgICAgICAgICAgICAgICAgb2Zmc2V0PXt0aGlzLnByb3BzLm9mZnNldH1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17dGhpcy5wcm9wcy5jbGFzc05hbWV9XG4gICAgICAgICAgICAgICAgICBzaG93VGFpbD17dGhpcy5wcm9wcy5zaG93VGFpbH1cbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt0aGlzLnByb3BzLnN0eWxlfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgICAgIDwvTWVudUJ1YmJsZT5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvUG9ydGFsV2l0aFN0YXRlPlxuICAgICAgKVxuICAgICk7XG4gIH1cbn1cblxuY2xhc3MgTWVudUJ1YmJsZVVud3JhcHBlZCBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgdGFyZ2V0UG9pbnQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICB0b3A6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgICAgIGxlZnQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgICB9KS5pc1JlcXVpcmVkLFxuICAgIG9mZnNldDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHg6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgICAgIHk6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgICB9KSxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLmFueSxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc2hvd1RhaWw6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICB9O1xuXG4gIHJlbmRlck1lbnVJdGVtcygpIHtcbiAgICBsZXQge2NoaWxkcmVufSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgICBjaGlsZHJlbiA9IGNoaWxkcmVuLmZpbHRlcih4ID0+IHgpO1xuICAgIH1cbiAgICBjb25zdCBjaGlsZENvdW50ID0gQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pO1xuICAgIGlmIChjaGlsZENvdW50ID09PSAwKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxlbT57bXNnLm5vTWVudUl0ZW1zQXZhaWxhYmxlKCl9PC9lbT5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAge0NoaWxkcmVuLm1hcChjaGlsZHJlbiwgKGNoaWxkLCBpbmRleCkgPT4ge1xuICAgICAgICAgIGlmICghY2hpbGQpIHtcbiAgICAgICAgICAgIHJldHVybiBjaGlsZDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7XG4gICAgICAgICAgICBmaXJzdDogaW5kZXggPT09IDAsXG4gICAgICAgICAgICBsYXN0OiBpbmRleCA9PT0gY2hpbGRDb3VudCAtIDEsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7dGFyZ2V0UG9pbnQsIGNsYXNzTmFtZX0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IG1hcmdpblRvcCA9IHRoaXMucHJvcHMub2Zmc2V0ID8gdGhpcy5wcm9wcy5vZmZzZXQueSA6IFRBSUxfSEVJR0hUO1xuICAgIGNvbnN0IG1hcmdpbkxlZnQgPSB0aGlzLnByb3BzLm9mZnNldFxuICAgICAgPyB0aGlzLnByb3BzLm9mZnNldC54XG4gICAgICA6IC1TVEFOREFSRF9QQURESU5HO1xuICAgIGNvbnN0IHN0eWxlID0ge1xuICAgICAgLi4ubWVudVN0eWxlLFxuICAgICAgLi4udGhpcy5wcm9wcy5zdHlsZSxcbiAgICAgIC4uLnRhcmdldFBvaW50LFxuICAgICAgbWFyZ2luVG9wOiBtYXJnaW5Ub3AsXG4gICAgICBtYXJnaW5MZWZ0OiBtYXJnaW5MZWZ0LFxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17c3R5bGV9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAge3RoaXMucmVuZGVyTWVudUl0ZW1zKCl9XG4gICAgICAgIHsvKiBUaGVzZSBlbGVtZW50cyBhcmUgdXNlZCB0byBkcmF3IHRoZSAndGFpbCcgd2l0aCBDU1MgKi99XG4gICAgICAgIHt0aGlzLnByb3BzLnNob3dUYWlsICYmIDxzcGFuIHN0eWxlPXt0YWlsQm9yZGVyU3R5bGV9IC8+fVxuICAgICAgICB7dGhpcy5wcm9wcy5zaG93VGFpbCAmJiA8c3BhbiBzdHlsZT17dGFpbEZpbGxTdHlsZX0gLz59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBNZW51QnViYmxlID0gUmFkaXVtKE1lbnVCdWJibGVVbndyYXBwZWQpO1xuXG5leHBvcnQgY2xhc3MgTWVudUJyZWFrIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHN0eWxlID0ge1xuICAgICAgYm9yZGVyVG9wOiAnMXB4IHNvbGlkICcgKyBjb2xvci5saWdodGVyX2dyYXksXG4gICAgICBtYXJnaW5Ub3A6IFNUQU5EQVJEX1BBRERJTkcgLyAyLFxuICAgICAgbWFyZ2luQm90dG9tOiBTVEFOREFSRF9QQURESU5HIC8gMixcbiAgICAgIG1hcmdpbkxlZnQ6IFNUQU5EQVJEX1BBRERJTkcsXG4gICAgICBtYXJnaW5SaWdodDogU1RBTkRBUkRfUEFERElORyxcbiAgICB9O1xuICAgIHJldHVybiA8ZGl2IHN0eWxlPXtzdHlsZX0gLz47XG4gIH1cbn1cblxuY2xhc3MgSXRlbSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaHJlZjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBmaXJzdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbGFzdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgb3BlbkluTmV3VGFiOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGZpcnN0LFxuICAgICAgbGFzdCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGhyZWYsXG4gICAgICBvcGVuSW5OZXdUYWIsXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBzdHlsZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ3BvcC11cC1tZW51LWl0ZW0nO1xuICAgIGNvbnN0IGNsYXNzTGlzdCA9IGNsYXNzTmFtZVxuICAgICAgPyBgJHtkZWZhdWx0Q2xhc3NOYW1lfSAke2NsYXNzTmFtZX1gXG4gICAgICA6IGRlZmF1bHRDbGFzc05hbWU7XG4gICAgaWYgKCFocmVmICYmICFvbkNsaWNrKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdCBhdCBsZWFzdCBvbmUgb2YgaHJlZi9vbkNsaWNrJyk7XG4gICAgfVxuXG4gICAgY29uc3QgcGFkZGluZ1N0eWxlID0ge1xuICAgICAgbWFyZ2luVG9wOiBmaXJzdCA/IFNUQU5EQVJEX1BBRERJTkcgKiAoMyAvIDQpIDogdW5kZWZpbmVkLFxuICAgICAgbWFyZ2luQm90dG9tOiBsYXN0ID8gU1RBTkRBUkRfUEFERElORyAqICgzIC8gNCkgOiB1bmRlZmluZWQsXG4gICAgICBwYWRkaW5nVG9wOiBTVEFOREFSRF9QQURESU5HIC8gNCxcbiAgICAgIHBhZGRpbmdCb3R0b206IFNUQU5EQVJEX1BBRERJTkcgLyA0LFxuICAgICAgcGFkZGluZ0xlZnQ6IFNUQU5EQVJEX1BBRERJTkcsXG4gICAgICBwYWRkaW5nUmlnaHQ6IFNUQU5EQVJEX1BBRERJTkcsXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgICc6aG92ZXInOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGlnaHRlc3RfZ3JheSxcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIGNvbnN0IHdyYXBwZXJTdHlsZSA9IHtcbiAgICAgIC4uLnBhZGRpbmdTdHlsZSxcbiAgICAgIC4uLnN0eWxlLFxuICAgIH07XG5cbiAgICAvLyBTdHlsZSBmb3IgYW5jaG9ycyB0YWdzIG5lc3RlZCBpbiBkaXZzXG4gICAgY29uc3QgYXJlYVN0eWxlID0ge1xuICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICB9O1xuXG4gICAgY29uc3QgdGV4dFN0eWxlID0ge1xuICAgICAgY29sb3I6IHRoaXMucHJvcHMuY29sb3IgPyB0aGlzLnByb3BzLmNvbG9yIDogY29sb3IuZGFya19jaGFyY29hbCxcbiAgICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsIC8vIFJlbW92ZSB1bmRlcmxpbmUgZnJvbSBhbmNob3IgdGFnc1xuICAgICAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXJlZ3VsYXInXSxcbiAgICB9O1xuXG4gICAgY29uc3QgdGFyZ2V0ID0gb3BlbkluTmV3VGFiID8gJ19ibGFuaycgOiAnJztcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXt3cmFwcGVyU3R5bGV9PlxuICAgICAgICB7dGhpcy5wcm9wcy5ocmVmICYmIChcbiAgICAgICAgICA8YVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc0xpc3R9XG4gICAgICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICAgICAgc3R5bGU9e3suLi50ZXh0U3R5bGUsIC4uLmFyZWFTdHlsZX19XG4gICAgICAgICAgICB0YXJnZXQ9e3RhcmdldH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgPC9hPlxuICAgICAgICApfVxuICAgICAgICB7IXRoaXMucHJvcHMuaHJlZiAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTGlzdH0gc3R5bGU9e3RleHRTdHlsZX0gb25DbGljaz17b25DbGlja30+XG4gICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cblBvcFVwTWVudS5JdGVtID0gUmFkaXVtKEl0ZW0pO1xuIiwiLyogZXNsaW50LWRpc2FibGUgKi9cblxuLy8gYXBwcy9zcmMvdXRpbC9jb2xvci5qc1xuLy8gR0VORVJBVEVEIEZJTEU6IERPIE5PVCBNT0RJRlkgRElSRUNUTFlcbi8vIFRoaXMgZ2VuZXJhdGVkIGZpbGUgZXhwb3J0cyBhbGwgdmFyaWFibGVzIGRlZmluZWQgaW4gc2hhcmVkL2Nzcy9jb2xvci5zY3NzXG4vLyBmb3IgdXNlIGluIEphdmFTY3JpcHQuIFRoZSBnZW5lcmF0b3Igc2NyaXB0IGlzIGNvbnZlcnQtc2Nzcy12YXJpYWJsZXMuanNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBcImJsYWNrXCI6IFwiIzAwMFwiLFxuICBcImJhY2tncm91bmRfYmxhY2tcIjogXCIjMTIxNDE2XCIsXG4gIFwiZGFya19ncmF5XCI6IFwiIzJEMzEzOVwiLFxuICBcImRhcmtlc3RfZ3JheVwiOiBcIiMyOTJGMzZcIixcbiAgXCJkYXJrX3NsYXRlX2dyYXlcIjogXCIjMjgyYzM0XCIsXG4gIFwiZGFya2VzdF9zbGF0ZV9ncmF5XCI6IFwiIzI1MjkyZFwiLFxuICBcImRhcmtfY2hhcmNvYWxcIjogXCIjNGQ1NzVmXCIsXG4gIFwiY2hhcmNvYWxcIjogXCIjNWI2NzcwXCIsXG4gIFwibGlnaHRfZ3JheVwiOiBcIiM5NDljYTJcIixcbiAgXCJsaWdodGVyX2dyYXlcIjogXCIjYzZjYWNkXCIsXG4gIFwibGlnaHRlc3RfZ3JheVwiOiBcIiNlN2U4ZWFcIixcbiAgXCJiYWNrZ3JvdW5kX2dyYXlcIjogXCIjZjJmMmYyXCIsXG4gIFwiZGltZ3JheVwiOiBcIiM2OTY5NjlcIixcbiAgXCJ3aGl0ZVwiOiBcIiNmZmZcIixcbiAgXCJkZWZhdWx0X2JsdWVcIjogXCIjMzY3MGIzXCIsXG4gIFwiZGFya190ZWFsXCI6IFwiIzAwOTRhM1wiLFxuICBcInRlYWxcIjogXCIjMDA5M2E0XCIsXG4gIFwiYXBwbGFiX2J1dHRvbl90ZWFsXCI6IFwiIzFhYmM5Y1wiLFxuICBcImxpZ2h0X3RlYWxcIjogXCIjNTljYWQzXCIsXG4gIFwibGlnaHRpc2hfdGVhbFwiOiBcIiM4MGQ2ZGVcIixcbiAgXCJsaWdodGVyX3RlYWxcIjogXCIjYTZlM2U4XCIsXG4gIFwibGlnaHRlc3RfdGVhbFwiOiBcIiNkOWYzZjVcIixcbiAgXCJhaV9ydWJyaWNfY3lhblwiOiBcIiMzY2ZmZjhcIixcbiAgXCJwdXJwbGVcIjogXCIjOGM1MmJhXCIsXG4gIFwibGlnaHRfcHVycGxlXCI6IFwiI2E2OWJjMVwiLFxuICBcImxpZ2h0ZXJfcHVycGxlXCI6IFwiI2NmYzlkZVwiLFxuICBcImxpZ2h0ZXN0X3B1cnBsZVwiOiBcIiNlYmU4ZjFcIixcbiAgXCJjeWFuXCI6IFwiIzAwOTRjYVwiLFxuICBcImxpZ2h0X2N5YW5cIjogXCIjNTliOWRjXCIsXG4gIFwibGlnaHRlcl9jeWFuXCI6IFwiI2E2ZGFlZFwiLFxuICBcImxpZ2h0ZXN0X2N5YW5cIjogXCIjZDllZmY3XCIsXG4gIFwiYWxtb3N0X3doaXRlX2N5YW5cIjogXCIjZjVmY2ZmXCIsXG4gIFwib3JhbmdlXCI6IFwiI2ZmYTQwMFwiLFxuICBcImxpZ2h0X29yYW5nZVwiOiBcIiNmZmM0NTlcIixcbiAgXCJsaWdodGVyX29yYW5nZVwiOiBcIiNmZmUwYTZcIixcbiAgXCJsaWdodGVzdF9vcmFuZ2VcIjogXCIjZmZmMmQ5XCIsXG4gIFwiZGFya19vcmFuZ2VcIjogXCIjZmY4NjAwXCIsXG4gIFwiZ3JlZW5cIjogXCIjYjliZjE1XCIsXG4gIFwibGlnaHRfZ3JlZW5cIjogXCIjZDFkNTY3XCIsXG4gIFwibGlnaHRlcl9ncmVlblwiOiBcIiNlN2U5YWRcIixcbiAgXCJsaWdodGVzdF9ncmVlblwiOiBcIiNmNWY1ZGNcIixcbiAgXCJoaWdobGlnaHRfZ3JlZW5cIjogXCIjOGFmYzliXCIsXG4gIFwieWVsbG93XCI6IFwiI2ZmYjgxZFwiLFxuICBcImxpZ2h0X3llbGxvd1wiOiBcIiNmZmRiNzRcIixcbiAgXCJsaWdodGVyX3llbGxvd1wiOiBcIiNmZmViYjVcIixcbiAgXCJsaWdodGVzdF95ZWxsb3dcIjogXCIjZmZmN2RmXCIsXG4gIFwiZ29sZGVucm9kXCI6IFwiI2RhYTUyMFwiLFxuICBcImhlYWRlcl90ZXh0XCI6IFwiI2ZmZlwiLFxuICBcImJrZ25kX2NvbG9yXCI6IFwiIzAwOTNhNFwiLFxuICBcImluc2V0X2NvbG9yXCI6IFwiI2M2Y2FjZFwiLFxuICBcImRhcmtfY29sb3JcIjogXCIjOGM1MmJhXCIsXG4gIFwiaGRyX2NvbG9yXCI6IFwiIzhjNTJiYVwiLFxuICBcInJlZFwiOiBcIiNjMDBcIixcbiAgXCJsaWdodGVzdF9yZWRcIjogXCIjZmNjXCIsXG4gIFwiZGFya19yZWRcIjogXCIjZDYyOTExXCIsXG4gIFwicmVhbGdyZWVuXCI6IFwiIzAwODAwMFwiLFxuICBcInJlYWx5ZWxsb3dcIjogXCIjZmYwXCIsXG4gIFwibXVzdGFyZHllbGxvd1wiOiBcIiNlZmNkMWNcIixcbiAgXCJ0d2l0dGVyX2JsdWVcIjogXCIjMDBhY2VkXCIsXG4gIFwiZmFjZWJvb2tfYmx1ZVwiOiBcIiMzYjU5OThcIixcbiAgXCJsaW5rZWRpbl9ibHVlXCI6IFwiIzAwNzdCNVwiLFxuICBcImRhcmtfYmx1ZVwiOiBcIiMwMDY0N2ZcIixcbiAgXCJibG9ja2x5X2ZseW91dF9ncmF5XCI6IFwiI2RkZFwiLFxuICBcImRlZmF1bHRfdGV4dFwiOiBcIiMzMzNcIixcbiAgXCJib3JkZXJfZ3JheVwiOiBcIiNiYmJcIixcbiAgXCJib3JkZXJfbGlnaHRfZ3JheVwiOiBcIiNkOGQ4ZDhcIixcbiAgXCJ0YWJsZV9oZWFkZXJcIjogXCIjZWNlY2VjXCIsXG4gIFwidGFibGVfbGlnaHRfcm93XCI6IFwiI2ZjZmNmY1wiLFxuICBcInRhYmxlX2Rhcmtfcm93XCI6IFwiI2Y0ZjRmNFwiLFxuICBcImxldmVsX3N1Ym1pdHRlZFwiOiBcIiM4YzUyYmFcIixcbiAgXCJsZXZlbF9wZXJmZWN0XCI6IFwicmdiKDE0LCAxOTAsIDE0KVwiLFxuICBcImxldmVsX3Bhc3NlZFwiOiBcInJnYigxNTksIDIxMiwgMTU5KVwiLFxuICBcImxldmVsX2F0dGVtcHRlZFwiOiBcIiNmZjBcIixcbiAgXCJsZXZlbF9ub3RfdHJpZWRcIjogXCIjZmVmZWZlXCIsXG4gIFwibGV2ZWxfY3VycmVudFwiOiBcIiNmZmE0MDBcIixcbiAgXCJsZXZlbF9yZXZpZXdfcmVqZWN0ZWRcIjogXCIjYzAwXCIsXG4gIFwibGV2ZWxfcmV2aWV3X2FjY2VwdGVkXCI6IFwicmdiKDExLCAxNDIsIDExKVwiLFxuICBcImFzc2Vzc21lbnRcIjogXCIjMDA5NGNhXCIsXG4gIFwid29ya3NwYWNlX3J1bm5pbmdfYmFja2dyb3VuZFwiOiBcIiNlNWU1ZTVcIixcbiAgXCJkYXJrX3B1cnBsZVwiOiBcIiM2ODJBNzdcIixcbiAgXCJicmlnaHRfZ3JlZW5cIjogXCIjMGViZTBlXCIsXG4gIFwibmVvbl9waW5rXCI6IFwiI2U5MTE4ZlwiLFxuICBcImxpbmtfY29sb3JcIjogXCIjMDU5NmNlXCIsXG4gIFwic2hhZG93XCI6IFwicmdiYSgwLCAwLCAwLCAwLjMpXCIsXG4gIFwiYm9vdHN0cmFwX2J1dHRvbl9ibHVlXCI6IFwiIzMzN2FiN1wiLFxuICBcImJvb3RzdHJhcF9idXR0b25fcmVkXCI6IFwiI2Q5NTM0ZlwiLFxuICBcImJvb3RzdHJhcF9lcnJvcl9iYWNrZ3JvdW5kXCI6IFwiI2YyZGVkZVwiLFxuICBcImJvb3RzdHJhcF9lcnJvcl90ZXh0XCI6IFwiI2I5NGE0OFwiLFxuICBcImJvb3RzdHJhcF92M19lcnJvcl90ZXh0XCI6IFwiI2E5NDQ0MlwiLFxuICBcImJvb3RzdHJhcF9lcnJvcl9ib3JkZXJcIjogXCIjZWJjY2QxXCIsXG4gIFwiYm9vdHN0cmFwX3dhcm5pbmdfYmFja2dyb3VuZFwiOiBcIiNmY2Y4ZTNcIixcbiAgXCJib290c3RyYXBfd2FybmluZ190ZXh0XCI6IFwiI2MwOTg1M1wiLFxuICBcImJvb3RzdHJhcF93YXJuaW5nX2JvcmRlclwiOiBcIiNmYWViY2NcIixcbiAgXCJib290c3RyYXBfYm9yZGVyX2NvbG9yXCI6IFwiI2NjY2NjY1wiLFxuICBcImJvb3RzdHJhcF9zdWNjZXNzX2JhY2tncm91bmRcIjogXCIjZGZmMGQ4XCIsXG4gIFwiYm9vdHN0cmFwX3N1Y2Nlc3NfdGV4dFwiOiBcIiM0Njg4NDdcIixcbiAgXCJib290c3RyYXBfc3VjY2Vzc19ib3JkZXJcIjogXCIjZDZlOWM2XCIsXG4gIFwiZHJvcGxldF9saWdodF9ncmVlblwiOiBcIiNkM2U5NjVcIixcbiAgXCJkcm9wbGV0X2JsdWVcIjogXCIjNjRiNWY2XCIsXG4gIFwiZHJvcGxldF9icmlnaHRfYmx1ZVwiOiBcIiMxOWMzZTFcIixcbiAgXCJkcm9wbGV0X3llbGxvd1wiOiBcIiNmZmYxNzZcIixcbiAgXCJkcm9wbGV0X29yYW5nZVwiOiBcIiNmZmI3NGRcIixcbiAgXCJkcm9wbGV0X3JlZFwiOiBcIiNmNzgxODNcIixcbiAgXCJkcm9wbGV0X2N5YW5cIjogXCIjNGRkMGUxXCIsXG4gIFwiZHJvcGxldF9waW5rXCI6IFwiI2Y1N2FjNlwiLFxuICBcImRyb3BsZXRfcHVycGxlXCI6IFwiI2JiNzdjN1wiLFxuICBcImRyb3BsZXRfZ3JlZW5cIjogXCIjNjhkOTk1XCIsXG4gIFwiZHJvcGxldF93aGl0ZVwiOiBcIiNmZmZcIixcbiAgXCJvY2VhbnNfZGVlcF9ibHVlXCI6IFwicmdiKDIsIDAsIDI4KVwiLFxuICBcImRhcmtfYmxhY2tcIjogXCIjMTIxMjEyXCIsXG4gIFwiYnJhbmRfcHJpbWFyeV9saWdodFwiOiBcIiNBQkRGRTVcIixcbiAgXCJicmFuZF9wcmltYXJ5X2RlZmF1bHRcIjogXCIjMDA5RUIwXCIsXG4gIFwiYnJhbmRfcHJpbWFyeV9kYXJrXCI6IFwiIzAwODI5MVwiLFxuICBcImJyYW5kX3NlY29uZGFyeV9saWdodFwiOiBcIiNFMEQxRUNcIixcbiAgXCJicmFuZF9zZWNvbmRhcnlfZGVmYXVsdFwiOiBcIiM4QzUyQkFcIixcbiAgXCJicmFuZF9zZWNvbmRhcnlfZGFya1wiOiBcIiM2RjQ4OEVcIixcbiAgXCJicmFuZF9hY2NlbnRfZGVmYXVsdFwiOiBcIiNFRDYwNjBcIixcbiAgXCJwcm9kdWN0X2FmZmlybWF0aXZlX2RlZmF1bHRcIjogXCIjM0VBMzNFXCIsXG4gIFwicHJvZHVjdF9uZWdhdGl2ZV9saWdodFwiOiBcIiNGREVCRTlcIixcbiAgXCJwcm9kdWN0X25lZ2F0aXZlX2RlZmF1bHRcIjogXCIjRTUzMTFBXCIsXG4gIFwicHJvZHVjdF9uZWdhdGl2ZV9kYXJrXCI6IFwiI0FBMjUxM1wiLFxuICBcInByb2R1Y3RfY2F1dGlvbl9kZWZhdWx0XCI6IFwiI0Y5Q0IyOFwiLFxuICBcInByb2R1Y3RfaW5mb3JtYXRpb25fZGVmYXVsdFwiOiBcIiMwMDdBQ0NcIixcbiAgXCJuZXV0cmFsX3doaXRlXCI6IFwiI0ZGRkZGRlwiLFxuICBcIm5ldXRyYWxfbGlnaHRcIjogXCIjRjdGOEZBXCIsXG4gIFwibmV1dHJhbF9kYXJrMTBcIjogXCIjRUFFQkVCXCIsXG4gIFwibmV1dHJhbF9kYXJrMjBcIjogXCIjRDRENUQ3XCIsXG4gIFwibmV1dHJhbF9kYXJrMzBcIjogXCIjQkZDMUMzXCIsXG4gIFwibmV1dHJhbF9kYXJrNDBcIjogXCIjQTlBQ0FGXCIsXG4gIFwibmV1dHJhbF9kYXJrNTBcIjogXCIjOTQ5NzlCXCIsXG4gIFwibmV1dHJhbF9kYXJrNjBcIjogXCIjN0Y4Mjg2XCIsXG4gIFwibmV1dHJhbF9kYXJrNzBcIjogXCIjNkE2RTczXCIsXG4gIFwibmV1dHJhbF9kYXJrODBcIjogXCIjNTQ1OTVFXCIsXG4gIFwibmV1dHJhbF9kYXJrOTBcIjogXCIjM0Y0NDRCXCIsXG4gIFwibmV1dHJhbF9kYXJrXCI6IFwiIzI5MkYzNlwiLFxuICBcImdvb2dsZV9icmFuZF9jb2xvclwiOiBcIiMwRjlENThcIixcbiAgXCJtaWNyb3NvZnRfYnJhbmRfY29sb3JcIjogXCIjRkZCOTAwXCIsXG4gIFwiZmFjZWJvb2tfYnJhbmRfY29sb3JcIjogXCIjM0I1OTk4XCIsXG4gIFwibGlnaHRfcHJpbWFyeV8xMDBcIjogXCIjQUJERkU1XCIsXG4gIFwibGlnaHRfcHJpbWFyeV81MDBcIjogXCIjMDA5M0E0XCIsXG4gIFwibGlnaHRfcHJpbWFyeV83MDBcIjogXCIjMDA4MjkxXCIsXG4gIFwibGlnaHRfc2Vjb25kYXJ5XzEwMFwiOiBcIiNFMkQ0RUVcIixcbiAgXCJsaWdodF9zZWNvbmRhcnlfNTAwXCI6IFwiIzhDNTJCQVwiLFxuICBcImxpZ2h0X3NlY29uZGFyeV83MDBcIjogXCIjNkY0ODhFXCIsXG4gIFwibGlnaHRfZ3JheV81MFwiOiBcIiNGN0Y4RkFcIixcbiAgXCJsaWdodF9ncmF5XzEwMFwiOiBcIiNFQUVCRUJcIixcbiAgXCJsaWdodF9ncmF5XzIwMFwiOiBcIiNENEQ1RDdcIixcbiAgXCJsaWdodF9ncmF5XzMwMFwiOiBcIiNCRkMxQzNcIixcbiAgXCJsaWdodF9ncmF5XzUwMFwiOiBcIiM5NDk3OUJcIixcbiAgXCJsaWdodF9ncmF5XzcwMFwiOiBcIiM2QTZFNzNcIixcbiAgXCJsaWdodF9ncmF5XzgwMFwiOiBcIiM1NDU5NUVcIixcbiAgXCJsaWdodF9ncmF5XzkwMFwiOiBcIiMzRjQ0NEJcIixcbiAgXCJsaWdodF9hZmZpcm1hdGl2ZV8xMDBcIjogXCIjRTJGMUUyXCIsXG4gIFwibGlnaHRfYWZmaXJtYXRpdmVfNTAwXCI6IFwiIzNFQTMzRVwiLFxuICBcImxpZ2h0X25lZ2F0aXZlXzUwMFwiOiBcIiNFNTMxMUFcIixcbiAgXCJsaWdodF9jYXV0aW9uXzUwMFwiOiBcIiNGOUNCMjhcIixcbiAgXCJsaWdodF9pbmZvXzEwMFwiOiBcIiNEQ0VGRkJcIixcbiAgXCJsaWdodF9pbmZvXzUwMFwiOiBcIiMxODkyRTNcIixcbiAgXCJsaWdodF93aGl0ZVwiOiBcIiNGRkZGRkZcIixcbiAgXCJsaWdodF9ibGFja1wiOiBcIiMyOTJGMzZcIixcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJleHBvcnQgdmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7IiwidmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHsgY2FuVXNlRE9NIH0gZnJvbSAnLi91dGlscyc7XG5cbnZhciBQb3J0YWwgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUG9ydGFsLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBQb3J0YWwoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBvcnRhbCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFBvcnRhbC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFBvcnRhbCkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFBvcnRhbCwgW3tcbiAgICBrZXk6ICdjb21wb25lbnRXaWxsVW5tb3VudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuZGVmYXVsdE5vZGUpIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLmRlZmF1bHROb2RlKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZGVmYXVsdE5vZGUgPSBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIGlmICghY2FuVXNlRE9NKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgICAgaWYgKCF0aGlzLnByb3BzLm5vZGUgJiYgIXRoaXMuZGVmYXVsdE5vZGUpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZGVmYXVsdE5vZGUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFJlYWN0RE9NLmNyZWF0ZVBvcnRhbCh0aGlzLnByb3BzLmNoaWxkcmVuLCB0aGlzLnByb3BzLm5vZGUgfHwgdGhpcy5kZWZhdWx0Tm9kZSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFBvcnRhbDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUG9ydGFsLnByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gIG5vZGU6IFByb3BUeXBlcy5hbnlcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvcnRhbDsiLCJ2YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbi8vIFRoaXMgZmlsZSBpcyBhIGZhbGxiYWNrIGZvciBhIGNvbnN1bWVyIHdobyBpcyBub3QgeWV0IG9uIFJlYWN0IDE2XG4vLyBhcyBjcmVhdGVQb3J0YWwgd2FzIGludHJvZHVjZWQgaW4gUmVhY3QgMTZcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxudmFyIFBvcnRhbCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhQb3J0YWwsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFBvcnRhbCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUG9ydGFsKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUG9ydGFsLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUG9ydGFsKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUG9ydGFsLCBbe1xuICAgIGtleTogJ2NvbXBvbmVudERpZE1vdW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICB0aGlzLnJlbmRlclBvcnRhbCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NvbXBvbmVudERpZFVwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcm9wcykge1xuICAgICAgdGhpcy5yZW5kZXJQb3J0YWwoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjb21wb25lbnRXaWxsVW5tb3VudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgUmVhY3RET00udW5tb3VudENvbXBvbmVudEF0Tm9kZSh0aGlzLmRlZmF1bHROb2RlIHx8IHRoaXMucHJvcHMubm9kZSk7XG4gICAgICBpZiAodGhpcy5kZWZhdWx0Tm9kZSkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuZGVmYXVsdE5vZGUpO1xuICAgICAgfVxuICAgICAgdGhpcy5kZWZhdWx0Tm9kZSA9IG51bGw7XG4gICAgICB0aGlzLnBvcnRhbCA9IG51bGw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyUG9ydGFsJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyUG9ydGFsKHByb3BzKSB7XG4gICAgICBpZiAoIXRoaXMucHJvcHMubm9kZSAmJiAhdGhpcy5kZWZhdWx0Tm9kZSkge1xuICAgICAgICB0aGlzLmRlZmF1bHROb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5kZWZhdWx0Tm9kZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgICAvLyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qaW1mYi9kOTllMDY3OGU5ZGE3MTVjY2Y2NDU0OTYxZWYwNGQxYlxuICAgICAgaWYgKHR5cGVvZiB0aGlzLnByb3BzLmNoaWxkcmVuLnR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY2hpbGRyZW4gPSBSZWFjdC5jbG9uZUVsZW1lbnQodGhpcy5wcm9wcy5jaGlsZHJlbik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMucG9ydGFsID0gUmVhY3RET00udW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIodGhpcywgY2hpbGRyZW4sIHRoaXMucHJvcHMubm9kZSB8fCB0aGlzLmRlZmF1bHROb2RlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW5kZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUG9ydGFsO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5leHBvcnQgZGVmYXVsdCBQb3J0YWw7XG5cblxuUG9ydGFsLnByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gIG5vZGU6IFByb3BUeXBlcy5hbnlcbn07IiwiaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCBQb3J0YWx2NCBmcm9tICcuL1BvcnRhbCc7XG5pbXBvcnQgTGVnYWN5UG9ydGFsIGZyb20gJy4vTGVnYWN5UG9ydGFsJztcblxudmFyIFBvcnRhbCA9IHZvaWQgMDtcblxuaWYgKFJlYWN0RE9NLmNyZWF0ZVBvcnRhbCkge1xuICBQb3J0YWwgPSBQb3J0YWx2NDtcbn0gZWxzZSB7XG4gIFBvcnRhbCA9IExlZ2FjeVBvcnRhbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9ydGFsOyIsInZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUG9ydGFsIGZyb20gJy4vUG9ydGFsQ29tcGF0JztcblxudmFyIEtFWUNPREVTID0ge1xuICBFU0NBUEU6IDI3XG59O1xuXG52YXIgUG9ydGFsV2l0aFN0YXRlID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFBvcnRhbFdpdGhTdGF0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUG9ydGFsV2l0aFN0YXRlKHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBvcnRhbFdpdGhTdGF0ZSk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUG9ydGFsV2l0aFN0YXRlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUG9ydGFsV2l0aFN0YXRlKSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgX3RoaXMucG9ydGFsTm9kZSA9IG51bGw7XG4gICAgX3RoaXMuc3RhdGUgPSB7IGFjdGl2ZTogISFwcm9wcy5kZWZhdWx0T3BlbiB9O1xuICAgIF90aGlzLm9wZW5Qb3J0YWwgPSBfdGhpcy5vcGVuUG9ydGFsLmJpbmQoX3RoaXMpO1xuICAgIF90aGlzLmNsb3NlUG9ydGFsID0gX3RoaXMuY2xvc2VQb3J0YWwuYmluZChfdGhpcyk7XG4gICAgX3RoaXMud3JhcFdpdGhQb3J0YWwgPSBfdGhpcy53cmFwV2l0aFBvcnRhbC5iaW5kKF90aGlzKTtcbiAgICBfdGhpcy5oYW5kbGVPdXRzaWRlTW91c2VDbGljayA9IF90aGlzLmhhbmRsZU91dHNpZGVNb3VzZUNsaWNrLmJpbmQoX3RoaXMpO1xuICAgIF90aGlzLmhhbmRsZUtleWRvd24gPSBfdGhpcy5oYW5kbGVLZXlkb3duLmJpbmQoX3RoaXMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhQb3J0YWxXaXRoU3RhdGUsIFt7XG4gICAga2V5OiAnY29tcG9uZW50RGlkTW91bnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLmNsb3NlT25Fc2MpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlS2V5ZG93bik7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5wcm9wcy5jbG9zZU9uT3V0c2lkZUNsaWNrKSB7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVPdXRzaWRlTW91c2VDbGljayk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY29tcG9uZW50V2lsbFVubW91bnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLmNsb3NlT25Fc2MpIHtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlS2V5ZG93bik7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5wcm9wcy5jbG9zZU9uT3V0c2lkZUNsaWNrKSB7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVPdXRzaWRlTW91c2VDbGljayk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnb3BlblBvcnRhbCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wZW5Qb3J0YWwoZSkge1xuICAgICAgaWYgKHRoaXMuc3RhdGUuYWN0aXZlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChlICYmIGUubmF0aXZlRXZlbnQpIHtcbiAgICAgICAgZS5uYXRpdmVFdmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBhY3RpdmU6IHRydWUgfSwgdGhpcy5wcm9wcy5vbk9wZW4pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Nsb3NlUG9ydGFsJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xvc2VQb3J0YWwoKSB7XG4gICAgICBpZiAoIXRoaXMuc3RhdGUuYWN0aXZlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBhY3RpdmU6IGZhbHNlIH0sIHRoaXMucHJvcHMub25DbG9zZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnd3JhcFdpdGhQb3J0YWwnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB3cmFwV2l0aFBvcnRhbChjaGlsZHJlbikge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy5zdGF0ZS5hY3RpdmUpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgUG9ydGFsLFxuICAgICAgICB7XG4gICAgICAgICAgbm9kZTogdGhpcy5wcm9wcy5ub2RlLFxuICAgICAgICAgIGtleTogJ3JlYWN0LXBvcnRhbCcsXG4gICAgICAgICAgcmVmOiBmdW5jdGlvbiByZWYocG9ydGFsTm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5wb3J0YWxOb2RlID0gcG9ydGFsTm9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGNoaWxkcmVuXG4gICAgICApO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2hhbmRsZU91dHNpZGVNb3VzZUNsaWNrJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlT3V0c2lkZU1vdXNlQ2xpY2soZSkge1xuICAgICAgaWYgKCF0aGlzLnN0YXRlLmFjdGl2ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB2YXIgcm9vdCA9IHRoaXMucG9ydGFsTm9kZSAmJiAodGhpcy5wb3J0YWxOb2RlLnByb3BzLm5vZGUgfHwgdGhpcy5wb3J0YWxOb2RlLmRlZmF1bHROb2RlKTtcbiAgICAgIGlmICghcm9vdCB8fCByb290LmNvbnRhaW5zKGUudGFyZ2V0KSB8fCBlLmJ1dHRvbiAmJiBlLmJ1dHRvbiAhPT0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLmNsb3NlUG9ydGFsKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaGFuZGxlS2V5ZG93bicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUtleWRvd24oZSkge1xuICAgICAgaWYgKGUua2V5Q29kZSA9PT0gS0VZQ09ERVMuRVNDQVBFICYmIHRoaXMuc3RhdGUuYWN0aXZlKSB7XG4gICAgICAgIHRoaXMuY2xvc2VQb3J0YWwoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW5kZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbih7XG4gICAgICAgIG9wZW5Qb3J0YWw6IHRoaXMub3BlblBvcnRhbCxcbiAgICAgICAgY2xvc2VQb3J0YWw6IHRoaXMuY2xvc2VQb3J0YWwsXG4gICAgICAgIHBvcnRhbDogdGhpcy53cmFwV2l0aFBvcnRhbCxcbiAgICAgICAgaXNPcGVuOiB0aGlzLnN0YXRlLmFjdGl2ZVxuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFBvcnRhbFdpdGhTdGF0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUG9ydGFsV2l0aFN0YXRlLnByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGRlZmF1bHRPcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgbm9kZTogUHJvcFR5cGVzLmFueSxcbiAgY2xvc2VPbkVzYzogUHJvcFR5cGVzLmJvb2wsXG4gIGNsb3NlT25PdXRzaWRlQ2xpY2s6IFByb3BUeXBlcy5ib29sLFxuICBvbk9wZW46IFByb3BUeXBlcy5mdW5jLFxuICBvbkNsb3NlOiBQcm9wVHlwZXMuZnVuY1xufTtcblxuUG9ydGFsV2l0aFN0YXRlLmRlZmF1bHRQcm9wcyA9IHtcbiAgb25PcGVuOiBmdW5jdGlvbiBvbk9wZW4oKSB7fSxcbiAgb25DbG9zZTogZnVuY3Rpb24gb25DbG9zZSgpIHt9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQb3J0YWxXaXRoU3RhdGU7IiwiaW1wb3J0IFJlYWN0LCB7dXNlU3RhdGUsIHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHthY3Rpb259IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tYWN0aW9ucyc7XG5pbXBvcnQgUG9wVXBNZW51IGZyb20gJy4vUG9wVXBNZW51JztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBjb21wb25lbnQ6IFBvcFVwTWVudSxcbn07XG5cbi8vXG4vLyBTVE9SSUVTXG4vL1xuXG4vLyBUaGlzIGNvbXBvbmVudCBpcyBhbiBpbnRlZ3JhdGVkIGV4YW1wbGUgZm9yIHRoZSA8UG9wVXBNZW51Pi5cbi8vIEl0IG5lZWRzIHRvIGJlIGl0cyBvd24gY29tcG9uZW50IHNvIHRoYXQgaXQgYWRoZXJlcyB0byBSZWFjdCBob29rc1xuLy8gbGludGluZyAoaS5lLiwgdGhpcyBjYW4ndCBiZSBhIHRlbXBsYXRlIG9yIHRoZSBleHBvcnRlZCBzdG9yeSBpdHNlbGYpLlxuY29uc3QgQmFzaWNFeGFtcGxlQ29tcG9uZW50ID0gcHJvcHMgPT4ge1xuICBjb25zdCBbaXNPcGVuLCBzZXRJc09wZW5dID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IHRhcmdldFBvaW50ID0gUmVhY3QuY3JlYXRlUmVmKCk7XG4gIGNvbnN0IFt0YXJnZXRQb2ludFJlY3QsIHNldFRhcmdldFBvaW50UmVjdF0gPSB1c2VTdGF0ZShudWxsKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghdGFyZ2V0UG9pbnRSZWN0KSB7XG4gICAgICBjb25zdCByZWN0ID0gdGFyZ2V0UG9pbnQuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHNldFRhcmdldFBvaW50UmVjdCh7XG4gICAgICAgIHRvcDogcmVjdC5ib3R0b20sXG4gICAgICAgIGxlZnQ6IHJlY3QubGVmdCArIHJlY3Qud2lkdGggLyAyLFxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbdGFyZ2V0UG9pbnQsIHRhcmdldFBvaW50UmVjdF0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIFRoZSA8dHQ+UG9wVXBNZW51PC90dD4gY29tcG9uZW50IGlzIGFic29sdXRlbHktcG9zaXRpb25lZC5cbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICBib3JkZXI6ICdzb2xpZCBibGFjayB0aGluJyxcbiAgICAgICAgICBtYXJnaW46ICcxZW0nLFxuICAgICAgICAgIHdpZHRoOiAnNTAlJyxcbiAgICAgICAgfX1cbiAgICAgICAgcmVmPXt0YXJnZXRQb2ludH1cbiAgICAgICAgb25DbGljaz17KCkgPT4gIWlzT3BlbiAmJiBzZXRJc09wZW4odHJ1ZSl9XG4gICAgICA+XG4gICAgICAgIEl0IHRhcmdldHMgdGhlIGJvdHRvbS1jZW50ZXIgb2YgdGhpcyBlbGVtZW50LlxuICAgICAgPC9kaXY+XG4gICAgICB7dGFyZ2V0UG9pbnRSZWN0ICYmIChcbiAgICAgICAgPFBvcFVwTWVudVxuICAgICAgICAgIGlzT3Blbj17aXNPcGVufVxuICAgICAgICAgIG9uQ2xvc2U9eygpID0+IHNldElzT3BlbihmYWxzZSl9XG4gICAgICAgICAgdGFyZ2V0UG9pbnQ9e3RhcmdldFBvaW50UmVjdH1cbiAgICAgICAgPlxuICAgICAgICAgIDxQb3BVcE1lbnUuSXRlbSBvbkNsaWNrPXthY3Rpb24oJ29wdGlvbiAxJyl9PlxuICAgICAgICAgICAgT3B0aW9uIE9uZVxuICAgICAgICAgIDwvUG9wVXBNZW51Lkl0ZW0+XG4gICAgICAgICAgPFBvcFVwTWVudS5JdGVtIG9uQ2xpY2s9e2FjdGlvbignb3B0aW9uIDInKX0+XG4gICAgICAgICAgICBPcHRpb24gVHdvXG4gICAgICAgICAgPC9Qb3BVcE1lbnUuSXRlbT5cbiAgICAgICAgICA8UG9wVXBNZW51Lkl0ZW0gb25DbGljaz17YWN0aW9uKCdvcHRpb24gMycpfT5cbiAgICAgICAgICAgIE9wdGlvbiBUaHJlZVxuICAgICAgICAgIDwvUG9wVXBNZW51Lkl0ZW0+XG4gICAgICAgIDwvUG9wVXBNZW51PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBCYXNpY0V4YW1wbGUgPSBhcmdzID0+IDxCYXNpY0V4YW1wbGVDb21wb25lbnQgey4uLmFyZ3N9IC8+O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJCQUNLR1JPVU5EX0NPTE9SIiwiY29sb3IiLCJ3aGl0ZSIsIkJPUkRFUl9DT0xPUiIsImxpZ2h0X2dyYXkiLCJtZW51U3R5bGUiLCJwb3NpdGlvbiIsInpJbmRleCIsImJvcmRlciIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsImJveFNoYWRvdyIsInRleHRBbGlnbiIsIm1heFdpZHRoIiwidGFpbEJvcmRlclN0eWxlIiwiYm90dG9tIiwibGVmdCIsIm1hcmdpbkxlZnQiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlckJvdHRvbVdpZHRoIiwiYm9yZGVyTGVmdFdpZHRoIiwiVEFJTF9XSURUSCIsImJvcmRlclJpZ2h0V2lkdGgiLCJib3JkZXJTdHlsZSIsImJvcmRlckNvbG9yIiwidGFpbEZpbGxTdHlsZSIsIlBvcFVwTWVudSIsInJlbmRlciIsInRoaXMiLCJwcm9wcyIsImlzT3BlbiIsIlBvcnRhbFdpdGhTdGF0ZSIsImNsb3NlT25PdXRzaWRlQ2xpY2siLCJjbG9zZU9uRXNjIiwib25DbG9zZSIsImRlZmF1bHRPcGVuIiwib3BlblBvcnRhbCIsImNsb3NlUG9ydGFsIiwicG9ydGFsIiwiTWVudUJ1YmJsZSIsInRhcmdldFBvaW50Iiwib2Zmc2V0IiwiY2xhc3NOYW1lIiwic2hvd1RhaWwiLCJzdHlsZSIsImNoaWxkcmVuIiwiQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwic2hhcGUiLCJ0b3AiLCJudW1iZXIiLCJpc1JlcXVpcmVkIiwieCIsInkiLCJhbnkiLCJzdHJpbmciLCJib29sIiwiZnVuYyIsIm9iamVjdCIsIk1lbnVCdWJibGVVbndyYXBwZWQiLCJyZW5kZXJNZW51SXRlbXMiLCJBcnJheSIsImlzQXJyYXkiLCJmaWx0ZXIiLCJjaGlsZENvdW50IiwiQ2hpbGRyZW4iLCJjb3VudCIsIm1zZyIsIm5vTWVudUl0ZW1zQXZhaWxhYmxlIiwibWFwIiwiY2hpbGQiLCJpbmRleCIsIlJlYWN0IiwiY2xvbmVFbGVtZW50IiwiZmlyc3QiLCJsYXN0IiwibWFyZ2luVG9wIiwiUmFkaXVtIiwiTWVudUJyZWFrIiwiYm9yZGVyVG9wIiwibGlnaHRlcl9ncmF5IiwiU1RBTkRBUkRfUEFERElORyIsIm1hcmdpbkJvdHRvbSIsIm1hcmdpblJpZ2h0IiwiSXRlbSIsIm9uQ2xpY2siLCJocmVmIiwib3BlbkluTmV3VGFiIiwiY2xhc3NMaXN0IiwiRXJyb3IiLCJ3cmFwcGVyU3R5bGUiLCJ1bmRlZmluZWQiLCJwYWRkaW5nVG9wIiwicGFkZGluZ0JvdHRvbSIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiY3Vyc29yIiwibGlnaHRlc3RfZ3JheSIsInRleHRTdHlsZSIsImRhcmtfY2hhcmNvYWwiLCJ0ZXh0RGVjb3JhdGlvbiIsImZvbnRDb25zdGFudHMiLCJ0YXJnZXQiLCJkaXNwbGF5Iiwibm9kZSIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImVyciIsIm5hbWUiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsInN5bWJvbCIsImFycmF5T2YiLCJlbGVtZW50IiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiY2FuVXNlRE9NIiwid2luZG93IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIlBvcnRhbCIsIl9SZWFjdCRDb21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIlR5cGVFcnJvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsImNhbGwiLCJSZWZlcmVuY2VFcnJvciIsIl9fcHJvdG9fXyIsImdldFByb3RvdHlwZU9mIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInZhbHVlIiwic2V0UHJvdG90eXBlT2YiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImRlZmF1bHROb2RlIiwiYm9keSIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJwcm9wVHlwZXMiLCJjb21wb25lbnREaWRNb3VudCIsInJlbmRlclBvcnRhbCIsImNvbXBvbmVudERpZFVwZGF0ZSIsInR5cGUiLCJMZWdhY3lQb3J0YWwiLCJLRVlDT0RFUyIsIl90aGlzIiwicG9ydGFsTm9kZSIsInN0YXRlIiwiYWN0aXZlIiwiYmluZCIsIndyYXBXaXRoUG9ydGFsIiwiaGFuZGxlT3V0c2lkZU1vdXNlQ2xpY2siLCJoYW5kbGVLZXlkb3duIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJlIiwibmF0aXZlRXZlbnQiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJzZXRTdGF0ZSIsIm9uT3BlbiIsIl90aGlzMiIsInJlZiIsInJvb3QiLCJjb250YWlucyIsImJ1dHRvbiIsImtleUNvZGUiLCJkZWZhdWx0UHJvcHMiLCJjb21wb25lbnQiLCJCYXNpY0V4YW1wbGVDb21wb25lbnQiLCJ1c2VTdGF0ZSIsInNldElzT3BlbiIsImNyZWF0ZVJlZiIsInRhcmdldFBvaW50UmVjdCIsInNldFRhcmdldFBvaW50UmVjdCIsInVzZUVmZmVjdCIsInJlY3QiLCJjdXJyZW50IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJtYXJnaW4iLCJhY3Rpb24iLCJCYXNpY0V4YW1wbGUiLCJhcmdzIl0sInNvdXJjZVJvb3QiOiIifQ==