/*! For license information please see 4954.1ddead26.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[4954],{"./src/code-studio/components/progress/SectionSelector.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedSectionSelector=exports.NO_SELECTED_SECTION_VALUE=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_utils=__webpack_require__("./src/utils.js"),_utils2=__webpack_require__("./src/code-studio/utils.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var NO_SELECTED_SECTION_VALUE=exports.NO_SELECTED_SECTION_VALUE="";function SectionSelector(_ref){var style=_ref.style,requireSelection=_ref.requireSelection,sections=_ref.sections,selectedSectionId=_ref.selectedSectionId,logToFirehose=_ref.logToFirehose,reloadOnChange=_ref.reloadOnChange,selectSection=_ref.selectSection;return 0===sections.length?null:_react.default.createElement("select",{className:"uitest-sectionselect",name:"sections","aria-label":_locale.default.selectSection(),style:_objectSpread(_objectSpread({},styles.select),style),value:selectedSectionId||NO_SELECTED_SECTION_VALUE,onChange:function handleSelectChange(event){var newSectionId=event.target.value;logToFirehose&&logToFirehose(),(0,_utils2.updateQueryParam)("section_id",newSectionId===NO_SELECTED_SECTION_VALUE?void 0:newSectionId),(0,_utils2.updateQueryParam)("user_id",void 0),reloadOnChange?(0,_utils.reload)():selectSection(newSectionId)}},!requireSelection&&_react.default.createElement("option",{key:NO_SELECTED_SECTION_VALUE,value:NO_SELECTED_SECTION_VALUE},_locale.default.selectSection()),sections.map((function(_ref2){var id=_ref2.id,name=_ref2.name;return _react.default.createElement("option",{key:id,value:id},name)})))}SectionSelector.propTypes={style:_propTypes.default.object,requireSelection:_propTypes.default.bool,alwaysShow:_propTypes.default.bool,reloadOnChange:_propTypes.default.bool,logToFirehose:_propTypes.default.func,sections:_propTypes.default.arrayOf(_propTypes.default.shape({name:_propTypes.default.string.isRequired,id:_propTypes.default.number.isRequired})).isRequired,selectedSectionId:_propTypes.default.number,selectSection:_propTypes.default.func.isRequired};var styles={select:{width:180}};exports.UnconnectedSectionSelector=SectionSelector,exports.default=(0,_reactRedux.connect)((function(state){return{selectedSectionId:state.teacherSections.selectedSectionId,sections:(0,_teacherSectionsRedux.sectionsNameAndId)(state.teacherSections)}}),(function(dispatch){return{selectSection:function selectSection(sectionId){dispatch((0,_teacherSectionsRedux.selectSection)(sectionId))}}}))(SectionSelector)},"./src/code-studio/components/progress/lessonLockDialog/LessonLockDataApi.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LockStatus=void 0,exports.saveLockState=function saveLockState(previousLockState,newLockState,csrfToken){var lockStateChanges=newLockState.filter((function(item,index){return!_lodash.default.isEqual(item,previousLockState[index])})).map((function(item){return{user_level_data:item.userLevelData,locked:item.lockStatus===LockStatus.Locked,readonly_answers:item.lockStatus===LockStatus.ReadonlyAnswers}}));return fetch("/api/lock_status",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":csrfToken},credentials:"same-origin",body:JSON.stringify({updates:lockStateChanges})})},exports.useGetLockState=function useGetLockState(unitId,lessonId,sectionId){var _useFetch=(0,_useFetch2.useFetch)("/api/lock_status?script_id=".concat(unitId)),loading=_useFetch.loading,data=_useFetch.data,serverLockState=(0,_react.useMemo)((function(){return function extractLockData(serverLockState,sectionId,lessonId){var lessonData=serverLockState&&serverLockState[sectionId]&&serverLockState[sectionId].lessons&&serverLockState[sectionId].lessons[lessonId];if(!lessonData)return[];return lessonData.map((function(studentData){return{name:studentData.name,lockStatus:toLockStatus(studentData),userLevelData:studentData.user_level_data}}))}(data,sectionId,lessonId)}),[data,sectionId,lessonId]);return{loading,serverLockState}};var _lodash=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/lodash/lodash.js")),_react=__webpack_require__("./node_modules/react/index.js"),_useFetch2=__webpack_require__("./src/util/useFetch.js"),_utils=__webpack_require__("./src/utils.js");var LockStatus=exports.LockStatus=(0,_utils.makeEnum)("Locked","Editable","ReadonlyAnswers");function toLockStatus(lockData){return lockData.locked?LockStatus.Locked:lockData.readonly_answers?LockStatus.ReadonlyAnswers:LockStatus.Editable}},"./src/code-studio/components/progress/lessonLockDialog/LessonLockDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedLessonLockDialog=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_LessonLockDataApi=__webpack_require__("./src/code-studio/components/progress/lessonLockDialog/LessonLockDataApi.js"),_SkeletonRows=_interopRequireDefault(__webpack_require__("./src/code-studio/components/progress/lessonLockDialog/SkeletonRows.jsx")),_StudentRow=_interopRequireDefault(__webpack_require__("./src/code-studio/components/progress/lessonLockDialog/StudentRow.jsx")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js"),_urlHelpers=__webpack_require__("./src/templates/teacherDashboard/urlHelpers.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_lessonLockRedux=__webpack_require__("./src/code-studio/lessonLockRedux.js"),_progressStyles=_interopRequireDefault(__webpack_require__("./src/code-studio/components/progress/progressStyles.js")),_SectionSelector=_interopRequireDefault(__webpack_require__("./src/code-studio/components/progress/SectionSelector.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function define(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{define({},"")}catch(t){define=function define(t,e,r){return t[e]=r}}function wrap(t,e,r,n){var i=e&&e.prototype instanceof Generator?e:Generator,a=Object.create(i.prototype),c=new Context(n||[]);return o(a,"_invoke",{value:makeInvokeMethod(t,r,c)}),a}function tryCatch(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=wrap;var h="suspendedStart",l="suspendedYield",f="executing",s="completed",y={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var p={};define(p,a,(function(){return this}));var d=Object.getPrototypeOf,v=d&&d(d(values([])));v&&v!==r&&n.call(v,a)&&(p=v);var g=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(p);function defineIteratorMethods(t){["next","throw","return"].forEach((function(e){define(t,e,(function(t){return this._invoke(e,t)}))}))}function AsyncIterator(t,e){function invoke(r,o,i,a){var c=tryCatch(t[r],t,o);if("throw"!==c.type){var u=c.arg,h=u.value;return h&&"object"==_typeof(h)&&n.call(h,"__await")?e.resolve(h.__await).then((function(t){invoke("next",t,i,a)}),(function(t){invoke("throw",t,i,a)})):e.resolve(h).then((function(t){u.value=t,i(u)}),(function(t){return invoke("throw",t,i,a)}))}a(c.arg)}var r;o(this,"_invoke",{value:function value(t,n){function callInvokeWithMethodAndArg(){return new e((function(e,r){invoke(t,n,e,r)}))}return r=r?r.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(e,r,n){var o=h;return function(i,a){if(o===f)throw Error("Generator is already running");if(o===s){if("throw"===i)throw a;return{value:t,done:!0}}for(n.method=i,n.arg=a;;){var c=n.delegate;if(c){var u=maybeInvokeDelegate(c,n);if(u){if(u===y)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===h)throw o=s,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=f;var p=tryCatch(e,r,n);if("normal"===p.type){if(o=n.done?s:l,p.arg===y)continue;return{value:p.arg,done:n.done}}"throw"===p.type&&(o=s,n.method="throw",n.arg=p.arg)}}}function maybeInvokeDelegate(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,maybeInvokeDelegate(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),y;var i=tryCatch(o,e.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,y;var a=i.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,y):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,y)}function pushTryEntry(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function resetTryEntry(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function Context(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(pushTryEntry,this),this.reset(!0)}function values(e){if(e||""===e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function next(){for(;++o<e.length;)if(n.call(e,o))return next.value=e[o],next.done=!1,next;return next.value=t,next.done=!0,next};return i.next=i}}throw new TypeError(_typeof(e)+" is not iterable")}return GeneratorFunction.prototype=GeneratorFunctionPrototype,o(g,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),o(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===GeneratorFunction||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,GeneratorFunctionPrototype):(t.__proto__=GeneratorFunctionPrototype,define(t,u,"GeneratorFunction")),t.prototype=Object.create(g),t},e.awrap=function(t){return{__await:t}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,c,(function(){return this})),e.AsyncIterator=AsyncIterator,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new AsyncIterator(wrap(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},defineIteratorMethods(g),define(g,u,"Generator"),define(g,a,(function(){return this})),define(g,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function next(){for(;r.length;){var t=r.pop();if(t in e)return next.value=t,next.done=!1,next}return next.done=!0,next}},e.values=values,Context.prototype={constructor:Context,reset:function reset(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(resetTryEntry),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function stop(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function dispatchException(e){if(this.done)throw e;var r=this;function handle(n,o){return a.type="throw",a.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return handle("end");if(i.tryLoc<=this.prev){var c=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(c&&u){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0);if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}}}},abrupt:function abrupt(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,y):this.complete(a)},complete:function complete(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),y},finish:function finish(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),resetTryEntry(r),y}},catch:function _catch(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;resetTryEntry(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function delegateYield(e,r,n){return this.delegate={iterator:values(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),y}},e}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function LessonLockDialog(_ref){var unitId=_ref.unitId,lessonId=_ref.lessonId,handleClose=_ref.handleClose,selectedSectionId=_ref.selectedSectionId,refetchSectionLockStatus=_ref.refetchSectionLockStatus,lessonIsHidden=_ref.lessonIsHidden,_useGetLockState=(0,_LessonLockDataApi.useGetLockState)(unitId,lessonId,selectedSectionId),loading=_useGetLockState.loading,serverLockState=_useGetLockState.serverLockState,_useState2=_slicedToArray((0,_react.useState)([]),2),clientLockState=_useState2[0],setClientLockState=_useState2[1],_useState4=_slicedToArray((0,_react.useState)(!1),2),saving=_useState4[0],setSaving=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(null),2),error=_useState6[0],setError=_useState6[1];(0,_react.useEffect)((function(){return setClientLockState(serverLockState)}),[serverLockState]);var setAllLockStatus=function setAllLockStatus(lockStatus){setClientLockState((function(clientLockState){return clientLockState.map((function(item){return _objectSpread(_objectSpread({},item),{},{lockStatus})}))}))},allowEditing=function allowEditing(){return setAllLockStatus(_LessonLockDataApi.LockStatus.Editable)},lockLesson=function lockLesson(){return setAllLockStatus(_LessonLockDataApi.LockStatus.Locked)},showAnswers=function showAnswers(){return setAllLockStatus(_LessonLockDataApi.LockStatus.ReadonlyAnswers)},viewSection=function viewSection(){var assessmentsUrl=(0,_urlHelpers.teacherDashboardUrl)(selectedSectionId,"/assessments");window.open(assessmentsUrl,"_blank","noopener,noreferrer")},handleRadioChange=function handleRadioChange(modifiedIndex,lockStatus){setClientLockState((function(clientLockState){return clientLockState.map((function(item,index){return index!==modifiedIndex?item:_objectSpread(_objectSpread({},item),{},{lockStatus})}))}))},handleSave=function(){var _ref2=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(){return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:_lodash.default.isEqual(serverLockState,clientLockState)?handleClose():sendSave();case 1:case"end":return _context.stop()}}),_callee)})));return function handleSave(){return _ref2.apply(this,arguments)}}(),sendSave=function(){var _ref3=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(){var csrfToken,saveLockStateResponse;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return setSaving(!0),setError(null),csrfToken=(0,_jquery.default)('meta[name="csrf-token"]').attr("content"),_context2.next=5,(0,_LessonLockDataApi.saveLockState)(serverLockState,clientLockState,csrfToken);case 5:if(!(saveLockStateResponse=_context2.sent).ok){_context2.next=12;break}return _context2.next=9,refetchSectionLockStatus(selectedSectionId,unitId);case 9:handleClose(),_context2.next=13;break;case 12:saveLockStateResponse.json().then((function(json){setSaving(!1),json.error?setError(_locale.default.errorSavingLockStatusWithMessage({errorMessage:json.error})):setError(_locale.default.errorSavingLockStatus())}));case 13:case"end":return _context2.stop()}}),_callee2)})));return function sendSave(){return _ref3.apply(this,arguments)}}(),hasSelectedSection=selectedSectionId!==_teacherSectionsRedux.NO_SECTION,hiddenUnlessSelectedSection=hasSelectedSection?{}:styles.hidden,responsiveHeight={maxHeight:.8*window.innerHeight-100};return _react.default.createElement(_BaseDialog.default,{isOpen:!0,handleClose},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.main),responsiveHeight)},_react.default.createElement("div",null,_react.default.createElement("span",{style:styles.title},_locale.default.assessmentSteps()),_react.default.createElement(_SectionSelector.default,{style:{marginLeft:10},requireSelection:hasSelectedSection})),lessonIsHidden&&function renderHiddenWarning(){return _react.default.createElement("div",{style:styles.hiddenError},_locale.default.hiddenAssessmentWarning())}(),function renderInstructionsAndButtons(){return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement("table",{style:hiddenUnlessSelectedSection},_react.default.createElement("tbody",null,_react.default.createElement("tr",null,_react.default.createElement("td",null,"1. ",_locale.default.allowEditingInstructions()),_react.default.createElement("td",null,_react.default.createElement("button",{type:"button",style:_progressStyles.default.orangeButton,onClick:allowEditing},_locale.default.allowEditing()))),_react.default.createElement("tr",null,_react.default.createElement("td",null,"2. ",_locale.default.lockStageInstructions()),_react.default.createElement("td",null,_react.default.createElement("button",{type:"button",style:_progressStyles.default.orangeButton,onClick:lockLesson},_locale.default.lockStage()))),_react.default.createElement("tr",null,_react.default.createElement("td",null,"3. ",_locale.default.showAnswersInstructions()),_react.default.createElement("td",null,_react.default.createElement("button",{type:"button",style:_progressStyles.default.orangeButton,onClick:showAnswers},_locale.default.showAnswers()))),_react.default.createElement("tr",null,_react.default.createElement("td",null,"4. ",_locale.default.relockStageInstructions()),_react.default.createElement("td",null,_react.default.createElement("button",{type:"button",style:_progressStyles.default.orangeButton,onClick:lockLesson},_locale.default.relockStage()))),_react.default.createElement("tr",null,_react.default.createElement("td",null,"5. ",_locale.default.reviewResponses()),_react.default.createElement("td",null,_react.default.createElement("button",{type:"button",style:_progressStyles.default.whiteButton,onClick:viewSection},_locale.default.viewSection()))))),_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.descriptionText),hiddenUnlessSelectedSection)},_locale.default.autolock()))}(),function renderStudentTable(){return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.title),hiddenUnlessSelectedSection)},_locale.default.studentControl()),_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.descriptionText),hiddenUnlessSelectedSection)},_locale.default.studentLockStateInstructions()),_react.default.createElement("table",{id:"ui-test-student-table",style:_objectSpread(_objectSpread({},styles.studentTable),hiddenUnlessSelectedSection)},_react.default.createElement("thead",null,_react.default.createElement("tr",null,_react.default.createElement("th",{style:styles.headerRow},_locale.default.student()),_react.default.createElement("th",{style:styles.headerRow},_locale.default.locked()),_react.default.createElement("th",{style:styles.headerRow},_locale.default.editable()),_react.default.createElement("th",{style:styles.headerRow},_locale.default.answersVisible()))),_react.default.createElement("tbody",null,loading?_react.default.createElement(_SkeletonRows.default,{numRows:5,numCols:4}):clientLockState.map((function(_ref4,index){var name=_ref4.name,lockStatus=_ref4.lockStatus;return _react.default.createElement(_StudentRow.default,{key:index,index,name,lockStatus,handleRadioChange})})))))}()),_react.default.createElement("div",{style:styles.buttonContainer},error&&_react.default.createElement("span",{style:styles.saveError},error),_react.default.createElement("button",{type:"button",style:_progressStyles.default.baseButton,onClick:handleClose},_locale.default.dialogCancel()),_react.default.createElement("button",{type:"button",style:_objectSpread(_objectSpread({},_progressStyles.default.blueButton),hiddenUnlessSelectedSection),onClick:handleSave,disabled:saving},saving?_locale.default.saving():_locale.default.save())))}LessonLockDialog.propTypes={unitId:_propTypes.default.number.isRequired,lessonId:_propTypes.default.number.isRequired,handleClose:_propTypes.default.func.isRequired,lessonIsHidden:_propTypes.default.bool,selectedSectionId:_propTypes.default.number,refetchSectionLockStatus:_propTypes.default.func.isRequired};var styles={main:{marginTop:20,marginBottom:10,marginLeft:20,marginRight:20,color:_color.default.charcoal,whiteSpace:"normal",overflowY:"scroll",textAlign:"left"},title:{color:_color.default.teal,fontSize:20,fontWeight:900,marginTop:15,marginBottom:15},headerRow:_objectSpread({borderWidth:1,borderStyle:"solid",borderColor:_color.default.teal,backgroundColor:_color.default.teal,padding:10,fontSize:"100%"},_fontConstants.default["main-font-regular"]),descriptionText:{marginTop:10,marginBottom:10},studentTable:{width:"100%"},buttonContainer:{textAlign:"right",marginRight:15},hidden:{display:"none"},saveError:{color:_color.default.red,fontStyle:"italic",marginRight:10},hiddenError:{color:_color.default.red,fontStyle:"italic",marginBottom:10}};exports.UnconnectedLessonLockDialog=LessonLockDialog,exports.default=(0,_reactRedux.connect)((function(state){return{selectedSectionId:state.teacherSections.selectedSectionId}}),(function(dispatch){return{refetchSectionLockStatus:function refetchSectionLockStatus(sectionId,lockStatus){dispatch((0,_lessonLockRedux.refetchSectionLockStatus)(sectionId,lockStatus))}}}))(LessonLockDialog)},"./src/code-studio/components/progress/lessonLockDialog/SkeletonRows.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_loadingSkeleton=_interopRequireDefault(__webpack_require__("./src/util/loadingSkeleton.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var SkeletonRows=function SkeletonRows(_ref){var numRows=_ref.numRows,numCols=_ref.numCols;return _lodash.default.times(numRows,(function(rowIndex){return _react.default.createElement("tr",{key:rowIndex},_lodash.default.times(numCols,(function(colIndex){return _react.default.createElement("td",{key:colIndex,style:styles.tableCell},_react.default.createElement(_loadingSkeleton.default,null))})))}))};SkeletonRows.propTypes={numRows:_propTypes.default.number.isRequired,numCols:_propTypes.default.number.isRequired};var styles={tableCell:{borderWidth:1,borderStyle:"solid",borderColor:_color.default.light_gray,padding:10}};exports.default=SkeletonRows;module.exports=exports.default},"./src/code-studio/components/progress/lessonLockDialog/StudentRow.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_LessonLockDataApi=__webpack_require__("./src/code-studio/components/progress/lessonLockDialog/LessonLockDataApi.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var StudentRow=function StudentRow(_ref){var index=_ref.index,name=_ref.name,lockStatus=_ref.lockStatus,handleRadioChange=_ref.handleRadioChange,radioChangeEvent=function radioChangeEvent(event){var modifiedIndex=parseInt(event.target.name,10),lockStatus=event.target.value;handleRadioChange(modifiedIndex,lockStatus)};return _react.default.createElement("tr",null,_react.default.createElement("td",{style:styles.tableCell},name),_react.default.createElement("td",{style:_objectSpread(_objectSpread(_objectSpread({},styles.tableCell),styles.radioCell),lockStatus===_LessonLockDataApi.LockStatus.Locked&&styles.selectedCell)},_react.default.createElement("input",{type:"radio",name:index,value:_LessonLockDataApi.LockStatus.Locked,checked:lockStatus===_LessonLockDataApi.LockStatus.Locked,onChange:radioChangeEvent})),_react.default.createElement("td",{style:_objectSpread(_objectSpread(_objectSpread({},styles.tableCell),styles.radioCell),lockStatus===_LessonLockDataApi.LockStatus.Editable&&styles.selectedCell)},_react.default.createElement("input",{type:"radio",name:index,value:_LessonLockDataApi.LockStatus.Editable,checked:lockStatus===_LessonLockDataApi.LockStatus.Editable,onChange:radioChangeEvent})),_react.default.createElement("td",{style:_objectSpread(_objectSpread(_objectSpread({},styles.tableCell),styles.radioCell),lockStatus===_LessonLockDataApi.LockStatus.ReadonlyAnswers&&styles.selectedCell)},_react.default.createElement("input",{type:"radio",name:index,value:_LessonLockDataApi.LockStatus.ReadonlyAnswers,checked:lockStatus===_LessonLockDataApi.LockStatus.ReadonlyAnswers,onChange:radioChangeEvent})))};StudentRow.propTypes={index:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,lockStatus:_propTypes.default.oneOf(Object.values(_LessonLockDataApi.LockStatus)).isRequired,handleRadioChange:_propTypes.default.func.isRequired};var styles={tableCell:{borderWidth:1,borderStyle:"solid",borderColor:_color.default.light_gray,padding:10},radioCell:{textAlign:"center"},selectedCell:{backgroundColor:_color.default.lightest_teal}};exports.default=StudentRow;module.exports=exports.default},"./src/code-studio/components/progress/progressStyles.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.createOutline=void 0;var _color=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/util/color.js"));exports.createOutline=function createOutline(color){return"\n    ".concat(color," 0 1px,\n    ").concat(color," 1px 1px,\n    ").concat(color," 1px 0px,\n    ").concat(color," 1px -1px,\n    ").concat(color," 0 -1px,\n    ").concat(color," -1px -1px,\n    ").concat(color," -1px 0,\n    ").concat(color," -1px 1px")};var baseButtonStyle={fontSize:14,paddingTop:5,paddingBottom:5,paddingLeft:10,paddingRight:10,whiteSpace:"nowrap"},progressStyles={baseButton:baseButtonStyle,blueButton:Object.assign({},baseButtonStyle,{backgroundColor:_color.default.cyan,color:_color.default.white}),orangeButton:Object.assign({},baseButtonStyle,{backgroundColor:_color.default.orange,color:_color.default.white}),whiteButton:Object.assign({},baseButtonStyle,{backgroundColor:_color.default.white,color:_color.default.dark_charcoal,borderColor:_color.default.lighter_gray})};exports.default=progressStyles},"./src/code-studio/progressReduxSelectors.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.progressionsFromLevels=exports.nextLevelId=exports.levelsForLessonId=exports.levelsByLesson=exports.levelCount=exports.levelById=exports.lessons=exports.lessonExtrasUrl=exports.isPerfect=exports.hasLockableLessons=exports.hasGroups=exports.groupedLessons=exports.getProgressLevelType=exports.getLevelPropertiesPath=exports.getCurrentScriptLevelId=exports.getCurrentLevels=exports.getCurrentLevel=exports.__testonly__=exports.ProgressLevelType=void 0;var _lodash=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/lodash/lodash.js")),_constants=__webpack_require__("./src/constants.js"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_activityUtils=__webpack_require__("./src/code-studio/activityUtils.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.hasLockableLessons=function hasLockableLessons(state){return state.lessons.some((function(lesson){return lesson.lockable}))},exports.hasGroups=function hasGroups(state){return Object.keys(groupedLessons(state)).length>1};var lessonFromLessonAtIndex=function lessonFromLessonAtIndex(state,lessonIndex){return _objectSpread(_objectSpread({},lessonFromLesson(state.lessons[lessonIndex])),{},{isFocusArea:state.focusAreaLessonIds.includes(state.lessons[lessonIndex].id)})},lessonFromLesson=function lessonFromLesson(lesson){return _lodash.default.pick(lesson,["name","id","lockable","lessonNumber","lessonStartUrl","lesson_plan_html_url","lesson_feedback_url","student_lesson_plan_html_url","description_student","description_teacher"])},peerReviewLesson=(exports.lessons=function lessons(state){return state.lessons.map((function(_,index){return lessonFromLessonAtIndex(state,index)}))},function peerReviewLesson(state){return _objectSpread(_objectSpread({},lessonFromLesson(state.peerReviewLessonInfo)),{},{id:-1,lockable:!1,isFocusArea:!1})}),peerReviewLevels=function peerReviewLevels(state){return state.peerReviewLessonInfo.levels.map((function(level,index){return _objectSpread(_objectSpread({},level),{},{id:(-1).toString(),isLocked:level.locked,status:level.status||_sharedConstants.LevelStatus.not_tried,levelNumber:index+1})}))},ProgressLevelType=exports.ProgressLevelType={SCRIPT_LEVEL:"script_level",LEVEL:"level"},getProgressLevelType=exports.getProgressLevelType=function getProgressLevelType(state){return state.progress.lessons?ProgressLevelType.SCRIPT_LEVEL:state.progress.currentLevelId?ProgressLevelType.LEVEL:void 0},levelWithProgress=(exports.getLevelPropertiesPath=function getLevelPropertiesPath(state){if(state.progress.lessons){var _state$progress$lesso,levelPosition,sublevelPosition,scriptName=state.progress.scriptName,lessonPosition=null===(_state$progress$lesso=state.progress.lessons)||void 0===_state$progress$lesso?void 0:_state$progress$lesso.find((function(lesson){return lesson.id===state.progress.currentLessonId})).relative_position,currentLevel=getCurrentLevel(state);if(levelPosition=currentLevel.levelNumber,currentLevel.parentLevelId)levelPosition=levelById(state.progress,state.progress.currentLessonId,currentLevel.parentLevelId).levelNumber,sublevelPosition=currentLevel.levelNumber;return"/s/".concat(scriptName,"/lessons/").concat(lessonPosition,"/levels/").concat(levelPosition,"/").concat(void 0===sublevelPosition?"":"sublevel/".concat(sublevelPosition,"/"),"level_properties")}if(null!==state.progress.currentLevelId){var levelId=state.progress.currentLevelId;return"/levels/".concat(levelId,"/level_properties")}},function levelWithProgress(_ref,level,isLockable,parentLevelId){var _levelProgress,_level$ids,_level$sublevels,levelResults=_ref.levelResults,unitProgress=_ref.unitProgress,_ref$levelPairing=_ref.levelPairing,levelPairing=void 0===_ref$levelPairing?{}:_ref$levelPairing,currentLevelId=_ref.currentLevelId,normalizedLevel=(0,_progressHelpers.processedLevel)(level,parentLevelId);level.ids&&(normalizedLevel.id=function bestResultLevelId(levelIds,progressData){if(1===levelIds.length)return levelIds[0];var attemptedIds=levelIds.filter((function(id){return progressData[id]}));if(0===attemptedIds.length)return levelIds[0];var bestId=attemptedIds[0],bestResult=progressData[bestId];return attemptedIds.forEach((function(id){var result=progressData[id];result>bestResult&&(bestId=id,bestResult=result)})),bestId}(level.ids,levelResults));var status=_sharedConstants.LevelStatus.not_tried,locked=isLockable,teacherFeedbackReviewState=null,levelProgress=unitProgress[normalizedLevel.id];null!==(_levelProgress=levelProgress)&&void 0!==_levelProgress&&_levelProgress.pages&&(levelProgress=levelProgress.pages[normalizedLevel.pageNumber-1]),levelProgress?(status=levelProgress.status,locked=levelProgress.locked,teacherFeedbackReviewState=levelProgress.teacherFeedbackReviewState):level.kind!==_sharedConstants.LevelKind.assessment&&(status=(0,_activityUtils.activityCssClass)(levelResults[normalizedLevel.id]));var isCurrent=normalizedLevel.id===currentLevelId||!(null===(_level$ids=level.ids)||void 0===_level$ids||!_level$ids.includes[currentLevelId]);return _objectSpread(_objectSpread({},normalizedLevel),{},{status,isCurrentLevel:isCurrent,paired:levelPairing[level.activeId],isLocked:locked,teacherFeedbackReviewState,sublevels:null===(_level$sublevels=level.sublevels)||void 0===_level$sublevels?void 0:_level$sublevels.map((function(sublevel){return levelWithProgress({levelResults,unitProgress,levelPairing,currentLevelId},sublevel,isLockable,normalizedLevel.id)}))})}),levelsByLesson=exports.levelsByLesson=function levelsByLesson(_ref2){var lessons=_ref2.lessons,levelResults=_ref2.levelResults,unitProgress=_ref2.unitProgress,levelPairing=_ref2.levelPairing,currentLevelId=_ref2.currentLevelId;return lessons.map((function(lesson){return lesson.levels.map((function(level){return levelWithProgress({levelResults,unitProgress,levelPairing,currentLevelId},level,lesson.lockable)}))}))},levelsForLessonId=exports.levelsForLessonId=function levelsForLessonId(state,lessonId){var _state$lessons,lesson=null===(_state$lessons=state.lessons)||void 0===_state$lessons?void 0:_state$lessons.find((function(lesson){return lesson.id===lessonId}));return null==lesson?void 0:lesson.levels.map((function(level){return levelWithProgress(state,level,lesson.lockable)}))},levelById=exports.levelById=function levelById(state,lessonId,levelId){var _levelsForLessonId,_levelsForLessonId$fl;return null===(_levelsForLessonId=levelsForLessonId(state,lessonId))||void 0===_levelsForLessonId||null===(_levelsForLessonId$fl=_levelsForLessonId.flatMap((function(level){return[level].concat(_toConsumableArray((null==level?void 0:level.sublevels)||[]))})))||void 0===_levelsForLessonId$fl?void 0:_levelsForLessonId$fl.find((function(level){return level.id===levelId}))},getCurrentLevel=exports.getCurrentLevel=function getCurrentLevel(state){var _getCurrentLevels,_getCurrentLevels$fla;return null===(_getCurrentLevels=getCurrentLevels(state))||void 0===_getCurrentLevels||null===(_getCurrentLevels$fla=_getCurrentLevels.flatMap((function(level){return[level].concat(_toConsumableArray((null==level?void 0:level.sublevels)||[]))})))||void 0===_getCurrentLevels$fla?void 0:_getCurrentLevels$fla.find((function(level){return level.isCurrentLevel}))},getCurrentLevels=exports.getCurrentLevels=function getCurrentLevels(state){return levelsForLessonId(state.progress,state.progress.currentLessonId)},groupedLessons=(exports.getCurrentScriptLevelId=function getCurrentScriptLevelId(state){var _levelById,currentLevel=getCurrentLevel(state);if(currentLevel)return currentLevel.parentLevelId?null===(_levelById=levelById(state.progress,state.progress.currentLessonId,currentLevel.parentLevelId))||void 0===_levelById?void 0:_levelById.scriptLevelId:currentLevel.scriptLevelId},exports.nextLevelId=function nextLevelId(state){if(getProgressLevelType(state)===ProgressLevelType.SCRIPT_LEVEL){var levels=levelsForLessonId(state.progress,state.progress.currentLessonId),currentLevel=getCurrentLevel(state);if(currentLevel.parentLevelId)return currentLevel.parentLevelId;var currentLevelIndex=currentLevel.levelNumber-1;if(currentLevelIndex!==levels.length-1)return levels[currentLevelIndex+1].id}},exports.levelCount=function levelCount(state){return getProgressLevelType(state)===ProgressLevelType.LEVEL?1:getProgressLevelType(state)===ProgressLevelType.SCRIPT_LEVEL?getCurrentLevels(state).length:0},exports.lessonExtrasUrl=function lessonExtrasUrl(state,lessonId){return state.lessonExtrasEnabled?state.lessons.find((function(lesson){return lesson.id===lessonId})).lesson_extras_level_url:""},exports.isPerfect=function isPerfect(state,levelId){return!!state.levelResults&&state.levelResults[levelId]>=_constants.TestResults.MINIMUM_OPTIMAL_RESULT},exports.groupedLessons=function groupedLessons(state){var includeBonusLevels=arguments.length>1&&void 0!==arguments[1]&&arguments[1],byGroup={},allLevels=levelsByLesson(state);return state.lessonGroups.forEach((function(lessonGroup){byGroup[lessonGroup.display_name]={lessonGroup:{id:lessonGroup.id,userFacing:lessonGroup.user_facing,displayName:lessonGroup.display_name,description:lessonGroup.description,bigQuestions:lessonGroup.big_questions},lessons:[],levelsByLesson:[]}})),state.lessons.forEach((function(lesson,index){var group=lesson.lesson_group_display_name,lessonAtIndex=lessonFromLessonAtIndex(state,index),lessonLevels=allLevels[index];includeBonusLevels||(lessonLevels=lessonLevels.filter((function(level){return!level.bonus}))),byGroup[group]&&(byGroup[group].lessons.push(lessonAtIndex),byGroup[group].levelsByLesson.push(lessonLevels))})),state.peerReviewLessonInfo&&(byGroup[state.peerReviewLessonInfo.lesson_group_display_name]={group:state.peerReviewLessonInfo.lesson_group_display_name,lessonGroup:{id:null,displayName:state.peerReviewLessonInfo.lesson_group_display_name,description:null,bigQuestions:null},lessons:[peerReviewLesson(state)],levelsByLesson:[peerReviewLevels(state)]}),_lodash.default.values(byGroup)});exports.progressionsFromLevels=function progressionsFromLevels(levels){var progressions=[];if(0===levels.length)return progressions;var currentProgression={start:0,name:levels[0].progression||levels[0].name,displayName:levels[0].progressionDisplayName||levels[0].name,levels:[levels[0]]};return levels.slice(1).forEach((function(level,index){(level.progression||level.name)===currentProgression.name?currentProgression.levels.push(level):(progressions.push(currentProgression),currentProgression={start:index+1,name:level.progression||level.name,displayName:level.progressionDisplayName||level.name,levels:[level]})})),progressions.push(currentProgression),progressions};exports.__testonly__={}},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_constants=__webpack_require__("./src/constants.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/templates/progress/GoogleClassroomShareButton.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_browserDetector=__webpack_require__("./src/util/browser-detector.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var componentCount=0,GoogleClassroomShareButton=exports.default=function(_React$PureComponent){function GoogleClassroomShareButton(props){var _this;return _defineProperty(_this=_React$PureComponent.call(this,props)||this,"instanceId",componentCount++),_defineProperty(_this,"buttonRef",null),_defineProperty(_this,"iframeMouseOver",!1),_defineProperty(_this,"state",{buttonMounted:!1}),_this.onShareStart=_this.onShareStart.bind(_this),_this.onShareComplete=_this.onShareComplete.bind(_this),_this.logEvent=_this.logEvent.bind(_this),_this.blur=_this.blur.bind(_this),_this.mouseOver=_this.mouseOver.bind(_this),_this.mouseOut=_this.mouseOut.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(GoogleClassroomShareButton,_React$PureComponent);var _proto=GoogleClassroomShareButton.prototype;return _proto.componentDidMount=function componentDidMount(){this.renderButton(),this.setState({buttonMounted:!0}),window[this.onShareStartName()]=this.onShareStart,window[this.onShareCompleteName()]=this.onShareComplete,_browserDetector.isIE11&&window.addEventListener("blur",this.blur)},_proto.componentDidUpdate=function componentDidUpdate(prevProps){_lodash.default.isEqual(this.props,prevProps)||this.renderButton()},_proto.onShareStartName=function onShareStartName(){return"onShareStart_"+this.instanceId},_proto.onShareCompleteName=function onShareCompleteName(){return"onShareComplete_"+this.instanceId},_proto.onShareStart=function onShareStart(){this.logEvent("share_started")},_proto.onShareComplete=function onShareComplete(){this.logEvent("share_completed")},_proto.blur=function blur(){this.iframeMouseOver&&this.logEvent("button_clicked")},_proto.mouseOver=function mouseOver(){this.iframeMouseOver=!0},_proto.mouseOut=function mouseOut(){this.iframeMouseOver=!1},_proto.logEvent=function logEvent(event){_firehose.default.putRecord({study:"google-classroom-share-button",study_group:"v0",event,data_json:this.props.analyticsData},{includeUserId:!0})},_proto.renderButton=function renderButton(){window.gapi.sharetoclassroom.render(this.buttonRef,{theme:this.props.theme,url:this.props.url,itemtype:this.props.itemtype,title:this.props.title,size:this.props.height,courseid:this.props.courseid,onsharestart:"".concat(this.onShareStartName()),onsharecomplete:"".concat(this.onShareCompleteName())})},_proto.render=function render(){var _this2=this;return _react.default.createElement("span",{style:styles.container},_react.default.createElement("span",{ref:function ref(elem){return _this2.buttonRef=elem},onMouseOver:this.mouseOver,onMouseOut:this.mouseOut}),this.state.buttonMounted&&_react.default.createElement("span",{style:styles.label},_locale.default.shareToGoogleClassroom()))},GoogleClassroomShareButton}(_react.default.PureComponent);_defineProperty(GoogleClassroomShareButton,"propTypes",{url:_propTypes.default.string.isRequired,itemtype:_propTypes.default.string.isRequired,title:_propTypes.default.string,theme:_propTypes.default.string,height:_propTypes.default.number,courseid:_propTypes.default.number,analyticsData:_propTypes.default.string}),_defineProperty(GoogleClassroomShareButton,"defaultProps",{itemtype:"assignment",theme:"light",height:_Button.default.ButtonHeight.default});var styles={label:{paddingLeft:16,textAlign:"left"},container:{display:"flex",alignItems:"center",justifyContent:"start"}};module.exports=exports.default},"./src/templates/progress/HiddenForSectionToggle.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedHiddenForSectionToggle=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var HiddenForSectionToggle=function(_React$Component){function HiddenForSectionToggle(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(HiddenForSectionToggle,_React$Component),HiddenForSectionToggle.prototype.render=function render(){var _this$props=this.props,hidden=_this$props.hidden,disabled=_this$props.disabled,onChange=_this$props.onChange,isRtl=_this$props.isRtl,mainStyle=_objectSpread(_objectSpread(_objectSpread({},styles.main),disabled&&styles.disabled),isRtl?styles.reverseButtons:null);return _react.default.createElement("div",{style:mainStyle,className:"uitest-togglehidden"},_react.default.createElement(_Button.default,{onClick:function onClick(){return!disabled&&onChange("visible")},text:_locale.default.visible(),color:_Button.default.ButtonColor.gray,disabled:!hidden,icon:"eye",style:_objectSpread(_objectSpread({},styles.button),styles.leftButton)}),_react.default.createElement(_Button.default,{onClick:function onClick(){return!disabled&&onChange("hidden")},text:_locale.default.hidden(),color:_Button.default.ButtonColor.gray,disabled:hidden,icon:"eye-slash",style:_objectSpread(_objectSpread({},styles.button),styles.rightButton)}))},HiddenForSectionToggle}(_react.default.Component);_defineProperty(HiddenForSectionToggle,"propTypes",{hidden:_propTypes.default.bool.isRequired,disabled:_propTypes.default.bool,onChange:_propTypes.default.func.isRequired,isRtl:_propTypes.default.bool});var styles={main:{wrap:"nowrap",margin:"5px 15px"},disabled:{opacity:.5},button:{display:"inline-block",paddingLeft:0,paddingRight:0,boxSizing:"border-box",width:"50%",margin:"5px 0px"},leftButton:{borderTopRightRadius:0,borderBottomRightRadius:0},rightButton:{borderTopLeftRadius:0,borderBottomLeftRadius:0},reverseButtons:{display:"flex",flexDirection:"row-reverse"}};exports.UnconnectedHiddenForSectionToggle=HiddenForSectionToggle,exports.default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))(HiddenForSectionToggle)},"./src/templates/progress/LessonLock.jsx":(module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_LessonLockDialog=_interopRequireDefault(__webpack_require__("./src/code-studio/components/progress/lessonLockDialog/LessonLockDialog.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var LessonLock=function LessonLock(_ref){var unitId=_ref.unitId,lessonId=_ref.lessonId,isHidden=_ref.isHidden,_useState2=_slicedToArray((0,_react.useState)(!1),2),dialogOpen=_useState2[0],setDialogOpen=_useState2[1];return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.buttonContainer,className:"uitest-locksettings"},_react.default.createElement(_Button.default,{onClick:function onClick(){return setDialogOpen(!0)},color:_Button.default.ButtonColor.gray,text:_locale.default.lockSettings(),icon:"lock",style:styles.button})),dialogOpen&&_react.default.createElement(_LessonLockDialog.default,{unitId,lessonId,lessonIsHidden:isHidden,handleClose:function handleClose(){return setDialogOpen(!1)}}))};LessonLock.propTypes={unitId:_propTypes.default.number.isRequired,lessonId:_propTypes.default.number.isRequired,isHidden:_propTypes.default.bool};var styles={main:{marginTop:5},buttonContainer:{marginLeft:15,marginRight:15},button:{paddingLeft:0,paddingRight:0,width:"100%",margin:"5px 0px 0px 0px"}};exports.default=LessonLock;module.exports=exports.default},"./src/templates/progress/ProgressLessonTeacherInfo.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressLessonTeacherInfo=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_hiddenLessonRedux=__webpack_require__("./src/code-studio/hiddenLessonRedux.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_shapes=__webpack_require__("./src/templates/teacherDashboard/shapes.jsx"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_HiddenForSectionToggle=_interopRequireDefault(__webpack_require__("./src/templates/progress/HiddenForSectionToggle.jsx")),_LessonLock=_interopRequireDefault(__webpack_require__("./src/templates/progress/LessonLock.jsx")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_SendLesson=_interopRequireDefault(__webpack_require__("./src/templates/progress/SendLesson.jsx")),_TeacherInfoBox=_interopRequireDefault(__webpack_require__("./src/templates/progress/TeacherInfoBox.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressLessonTeacherInfo=function(_React$Component){function ProgressLessonTeacherInfo(props){var _this;return(_this=_React$Component.call(this,props)||this).onClickHiddenToggle=_this.onClickHiddenToggle.bind(_this),_this.firehoseData=_this.firehoseData.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressLessonTeacherInfo,_React$Component);var _proto=ProgressLessonTeacherInfo.prototype;return _proto.onClickHiddenToggle=function onClickHiddenToggle(value){var _this$props=this.props,unitName=_this$props.unitName,section=_this$props.section,lesson=_this$props.lesson;(0,_this$props.toggleHiddenLesson)(unitName,section&&section.id.toString()||"",lesson.id,"hidden"===value),_firehose.default.putRecord({study:"hidden-lessons",study_group:"v0",event:value,data_json:JSON.stringify(this.firehoseData())},{includeUserId:!0})},_proto.firehoseData=function firehoseData(){var _this$props2=this.props,unitName=_this$props2.unitName,section=_this$props2.section,lesson=_this$props2.lesson;return{script_name:unitName,section_id:section&&section.id,lesson_id:lesson.id,lesson_name:lesson.name}},_proto.render=function render(){var _this$props3=this.props,section=_this$props3.section,unitAllowsHiddenLessons=_this$props3.unitAllowsHiddenLessons,hiddenLessonState=_this$props3.hiddenLessonState,hasNoSections=_this$props3.hasNoSections,lockableAuthorized=_this$props3.lockableAuthorized,unitId=_this$props3.unitId,lesson=_this$props3.lesson,sectionId=section&&section.id.toString()||"",showHiddenForSectionToggle=section&&unitAllowsHiddenLessons&&!hasNoSections,isHidden=unitAllowsHiddenLessons&&(0,_hiddenLessonRedux.isLessonHiddenForSection)(hiddenLessonState,sectionId,lesson.id),courseId=section&&section.code&&parseInt(section.code.substring(2))||null,loginRequiredLessonStartUrl=lesson.lessonStartUrl+"?login_required=true";return lesson.lesson_plan_html_url||lesson.lockable&&!hasNoSections||loginRequiredLessonStartUrl||showHiddenForSectionToggle?_react.default.createElement(_TeacherInfoBox.default,null,lesson.lesson_plan_html_url&&_react.default.createElement("div",{style:styles.buttonContainer},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,id:"uitest-lesson-plan",href:lesson.lesson_plan_html_url,text:_locale.default.viewLessonPlan(),icon:"file-text",color:"blue",target:"_blank",style:styles.button})),lesson.student_lesson_plan_html_url&&_react.default.createElement("div",{style:styles.buttonContainer},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,id:"uitest-student-resources",href:lesson.student_lesson_plan_html_url,text:_locale.default.studentResources(),icon:"file-text",color:"purple",target:"_blank",style:styles.button,onClick:this.props.onClickStudentLessonPlan})),lesson.lockable&&lockableAuthorized&&!hasNoSections&&_react.default.createElement(_LessonLock.default,{unitId,lessonId:lesson.id,isHidden:!!isHidden}),lesson.lessonStartUrl&&!(lesson.lockable&&!lockableAuthorized)&&_react.default.createElement("div",{style:styles.buttonContainer},_react.default.createElement(_SendLesson.default,{lessonUrl:loginRequiredLessonStartUrl,lessonTitle:lesson.name,courseid:courseId,analyticsData:JSON.stringify(this.firehoseData()),buttonStyle:styles.button})),lesson.lesson_feedback_url&&_react.default.createElement("div",{style:_objectSpread({marginBottom:showHiddenForSectionToggle?"0px":"10px"},styles.buttonContainer)},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,href:lesson.lesson_feedback_url,text:_locale.default.rateThisLesson(),icon:"bar-chart",color:_Button.default.ButtonColor.gray,target:"_blank",style:styles.button,className:"rate-lesson-button"})),showHiddenForSectionToggle&&_react.default.createElement(_HiddenForSectionToggle.default,{hidden:!!isHidden,onChange:this.onClickHiddenToggle})):null},ProgressLessonTeacherInfo}(_react.default.Component);_defineProperty(ProgressLessonTeacherInfo,"propTypes",{lesson:_progressTypes.lessonType.isRequired,onClickStudentLessonPlan:_propTypes.default.func,section:_shapes.sectionShape,unitAllowsHiddenLessons:_propTypes.default.bool.isRequired,hiddenLessonState:_propTypes.default.object.isRequired,unitId:_propTypes.default.number.isRequired,unitName:_propTypes.default.string.isRequired,hasNoSections:_propTypes.default.bool.isRequired,toggleHiddenLesson:_propTypes.default.func.isRequired,lockableAuthorized:_propTypes.default.bool});var styles={buttonContainer:{marginTop:"10px",marginRight:"15px",marginLeft:"15px",lineHeight:"0px"},button:{width:"100%",margin:"0px",paddingLeft:0,paddingRight:0,boxShadow:"none"}};exports.UnconnectedProgressLessonTeacherInfo=ProgressLessonTeacherInfo,exports.default=(0,_reactRedux.connect)((function(state){return{section:state.teacherSections.sections[state.teacherSections.selectedSectionId],unitAllowsHiddenLessons:state.hiddenLesson.hideableLessonsAllowed||!1,hiddenLessonState:state.hiddenLesson,unitId:state.progress.scriptId,unitName:state.progress.scriptName,lockableAuthorized:state.lessonLock.lockableAuthorized,hasNoSections:state.teacherSections.sectionsAreLoaded&&0===state.teacherSections.sectionIds.length}}),(function(dispatch){return{toggleHiddenLesson:function toggleHiddenLesson(unitName,sectionId,lessonId,hidden){dispatch((0,_hiddenLessonRedux.toggleHiddenLesson)(unitName,sectionId,lessonId,hidden))}}}))(ProgressLessonTeacherInfo)},"./src/templates/progress/SendLesson.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_SendLessonDialog=_interopRequireDefault(__webpack_require__("./src/templates/progress/SendLessonDialog.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_React$Component){function SendLesson(props){var _this;return(_this=_React$Component.call(this,props)||this).openDialog=_this.openDialog.bind(_this),_this.closeDialog=_this.closeDialog.bind(_this),_this.state={isDialogOpen:!1},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SendLesson,_React$Component);var _proto=SendLesson.prototype;return _proto.openDialog=function openDialog(){this.setState({isDialogOpen:!0}),_firehose.default.putRecord({study:"send-to-students-button",study_group:"v0",event,data_json:this.props.analyticsData},{includeUserId:!0})},_proto.closeDialog=function closeDialog(){this.setState({isDialogOpen:!1})},_proto.render=function render(){return _react.default.createElement("div",{className:"uitest-sendlesson"},_react.default.createElement(_Button.default,{onClick:this.openDialog,text:_locale.default.sendLessonButton(),icon:"share-square-o",color:_Button.default.ButtonColor.gray,style:this.props.buttonStyle}),this.state.isDialogOpen&&_react.default.createElement(_SendLessonDialog.default,{isOpen:!0,handleClose:this.closeDialog,lessonUrl:this.props.lessonUrl,lessonTitle:this.props.lessonTitle,courseid:this.props.courseid,analyticsData:this.props.analyticsData}))},SendLesson}(_react.default.Component),"propTypes",{lessonUrl:_propTypes.default.string.isRequired,lessonTitle:_propTypes.default.string,courseid:_propTypes.default.number,analyticsData:_propTypes.default.string,buttonStyle:_propTypes.default.object}),module.exports=exports.default},"./src/templates/progress/SendLessonDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedSendLessonDialog=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_copyToClipboard=_interopRequireDefault(__webpack_require__("./src/util/copyToClipboard.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_GoogleClassroomShareButton=_interopRequireDefault(__webpack_require__("./src/templates/progress/GoogleClassroomShareButton.jsx")),_googlePlatformApiRedux=__webpack_require__("./src/templates/progress/googlePlatformApiRedux.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SendLessonDialog=function(_Component){function SendLessonDialog(props){var _this;return(_this=_Component.call(this,props)||this).onCopyLink=_this.onCopyLink.bind(_this),_this.state={showLinkCopied:!1},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SendLessonDialog,_Component);var _proto=SendLessonDialog.prototype;return _proto.onCopyLink=function onCopyLink(){var _this2=this;(0,_copyToClipboard.default)(this.props.lessonUrl),this.setState({showLinkCopied:!0}),setTimeout((function(){_this2.setState({showLinkCopied:!1})}),4e3),_firehose.default.putRecord({study:"copy-lesson-link-button",study_group:"v0",event,data_json:this.props.analyticsData},{includeUserId:!0})},_proto.renderCopyToClipboardRow=function renderCopyToClipboardRow(){return _react.default.createElement("div",{style:styles.row},_react.default.createElement(_Button.default,{id:"uitest-copy-button",text:"",icon:"link",iconStyle:styles.buttonIcon,color:_Button.default.ButtonColor.blue,style:styles.button,onClick:this.onCopyLink}),_react.default.createElement("span",{style:styles.buttonLabel},this.state.showLinkCopied?_locale.default.sendLessonLinkCopied():_locale.default.sendLessonCopyLink()))},_proto.renderShareToGoogleRow=function renderShareToGoogleRow(){return _react.default.createElement("div",{style:styles.row},_react.default.createElement(_GoogleClassroomShareButton.default,{theme:"classic",height:styles.button.height,url:this.props.lessonUrl,itemtype:"assignment",title:this.props.lessonTitle,courseid:this.props.courseid,analyticsData:this.props.analyticsData}))},_proto.render=function render(){return _react.default.createElement(_BaseDialog.default,{isOpen:this.props.isOpen,handleClose:this.props.handleClose,style:styles.dialog,useUpdatedStyles:!0},_react.default.createElement("h2",null,_locale.default.sendLessonTitle()),_react.default.createElement("div",{style:styles.detailsLine},_locale.default.sendLessonDetails()," ",_react.default.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://support.code.org/hc/en-us/articles/360051654691"},_locale.default.learnMore())),this.renderCopyToClipboardRow(),this.props.showGoogleButton&&this.renderShareToGoogleRow(),_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_Button.default,{text:_locale.default.done(),onClick:this.props.handleClose,color:_Button.default.ButtonColor.gray})))},SendLessonDialog}(_react.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SendLessonDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,lessonUrl:_propTypes.default.string.isRequired,lessonTitle:_propTypes.default.string,courseid:_propTypes.default.number,analyticsData:_propTypes.default.string,showGoogleButton:_propTypes.default.bool});var styles={dialog:{textAlign:"left",paddingLeft:20,paddingRight:20,paddingBottom:20},detailsLine:{marginBottom:32},row:{marginTop:8,marginBottom:8},button:{width:48,height:48,margin:0,borderTopLeftRadius:0,borderTopRightRadius:0,borderBottomLeftRadius:0,borderBottomRightRadius:0,paddingLeft:0,paddingRight:0},buttonIcon:{margin:0,fontSize:24},buttonLabel:{paddingLeft:16}};exports.UnconnectedSendLessonDialog=SendLessonDialog,exports.default=(0,_reactRedux.connect)((function(state){return{showGoogleButton:(0,_googlePlatformApiRedux.canShowGoogleShareButton)(state)}}))(SendLessonDialog)},"./src/templates/progress/TeacherInfoBox.js":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var styles={outer:{display:"table-cell",verticalAlign:"top",width:200,height:"100%",borderRadius:2},inner:{backgroundColor:_color.default.lightest_cyan,height:"100%",borderWidth:1,borderColor:_color.default.cyan,borderStyle:"solid",textAlign:"center"}},TeacherInfoBox=function TeacherInfoBox(_ref){var children=_ref.children;return 0===children.length?null:_react.default.createElement("div",{style:styles.outer,className:"teacher-info-box"},_react.default.createElement("div",{style:styles.inner},children))};TeacherInfoBox.propTypes={children:_propTypes.default.node.isRequired};exports.default=TeacherInfoBox;module.exports=exports.default},"./src/templates/progress/googlePlatformApiRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GOOGLE_PLATFORM_API_ID=void 0,exports.canShowGoogleShareButton=function canShowGoogleShareButton(state){return!!state.googlePlatformApi&&state.googlePlatformApi.loaded},exports.default=function googlePlatformApi(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===START_LOADING_GAPI)return _objectSpread(_objectSpread({},state),{},{loading:!0,loadStartTime:action.startTime});if(action.type===FINISH_LOADING_GAPI)return _objectSpread(_objectSpread({},state),{},{loading:!1,loaded:action.success});return state},exports.loadGooglePlatformApi=function loadGooglePlatformApi(){return function(dispatch,getState){return gapiReady()?(dispatch(finishLoadingGapi(!0)),Promise.resolve()):(dispatch(startLoadingGapi(Date.now())),new Promise((function(resolve,reject){!function loadApi(dispatch,getState,promise){if(document.getElementById(GOOGLE_PLATFORM_API_ID))waitForGapi(dispatch,getState,promise);else{window.___gcfg={parsetags:"explicit"};var gapi=document.createElement("script");gapi.src="https://apis.google.com/js/platform.js",gapi.id=GOOGLE_PLATFORM_API_ID,gapi.onload=function(){return waitForGapi(dispatch,getState,promise)},gapi.onerror=function(){return dispatch(onLoadFinished(!1,promise))},document.body.appendChild(gapi)}}(dispatch,getState,{resolve,reject})})))}};var _firehose=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/lib/util/firehose.js"));function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var START_LOADING_GAPI="googlePlatformApi/START_LOADING_GAPI",FINISH_LOADING_GAPI="googlePlatformApi/FINISH_LOADING_GAPI",startLoadingGapi=function startLoadingGapi(startTime){return{type:START_LOADING_GAPI,startTime}},finishLoadingGapi=function finishLoadingGapi(success){return{type:FINISH_LOADING_GAPI,success}},GOOGLE_PLATFORM_API_ID=exports.GOOGLE_PLATFORM_API_ID="GooglePlatformApiId",LOAD_TIMEOUT_MILLIS=15e3,initialState={loading:!1,loaded:!1,loadStartTime:null};function onLoadFinished(success,promise){return function(dispatch,getState){dispatch(finishLoadingGapi(success)),success?promise.resolve():promise.reject("Google Platform API failed to load.");var data={success,load_time:elapsedLoadTimeSeconds(getState)};_firehose.default.putRecord({study:"google-classroom-share-button",study_group:"v0",event:"api_load_finished",data_json:JSON.stringify(data)},{includeUserId:!0})}}function waitForGapi(dispatch,getState,promise){gapiReady()?dispatch(onLoadFinished(!0,promise)):elapsedLoadTimeMillis(getState)>=LOAD_TIMEOUT_MILLIS?dispatch(onLoadFinished(!1,promise)):function isLoading(getState){return getState().googlePlatformApi.loading}(getState)&&setTimeout((function(){waitForGapi(dispatch,getState,promise)}),100)}function gapiReady(){return!!window.gapi&&void 0!==window.gapi.sharetoclassroom}function elapsedLoadTimeMillis(getState){var startTime=getState().googlePlatformApi.loadStartTime;return startTime?Date.now()-startTime:-1}function elapsedLoadTimeSeconds(getState){var millis=elapsedLoadTimeMillis(getState);return millis>=0?Math.round(millis/1e3):null}},"./src/templates/teacherDashboard/DialogFooter.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var style={aboveFooter:{height:"90px"},footer:{position:"absolute",height:"100px",padding:"0 20px",left:"0",right:"0",bottom:"0",background:"white",zIndex:"500"},buttonRow:{display:"flex",flexFlow:"row",justifyContent:"space-between"},rightAlign:{justifyContent:"flex-end"}};_defineProperty(exports.default=function(_Component){function DialogFooter(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(DialogFooter,_Component),DialogFooter.prototype.render=function render(){var buttonRowStyle=this.props.rightAlign?_objectSpread(_objectSpread({},style.buttonRow),style.rightAlign):style.buttonRow;return _react.default.createElement("div",null,_react.default.createElement("div",{style:style.aboveFooter}),_react.default.createElement("div",{style:style.footer},_react.default.createElement("hr",null),_react.default.createElement("div",{style:buttonRowStyle},this.props.children)))},DialogFooter}(_react.Component),"propTypes",{rightAlign:_propTypes.default.bool,children:_propTypes.default.any}),module.exports=exports.default},"./src/templates/teacherDashboard/shapes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.sortableSectionShape=exports.sectionShape=exports.sectionForDropdownShape=exports.loadErrorShape=exports.classroomShape=exports.assignmentUnitShape=exports.assignmentCourseVersionShape=exports.assignmentCourseOfferingShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");exports.sectionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,createdAt:_propTypes.default.string,loginType:_propTypes.default.oneOf(Object.keys(_sharedConstants.SectionLoginType)),lessonExtras:_propTypes.default.bool.isRequired,pairingAllowed:_propTypes.default.bool.isRequired,ttsAutoplayEnabled:_propTypes.default.bool.isRequired,studentCount:_propTypes.default.number.isRequired,code:_propTypes.default.string.isRequired,courseOfferingId:_propTypes.default.number,courseVersionId:_propTypes.default.number,unitId:_propTypes.default.number,courseId:_propTypes.default.number,scriptId:_propTypes.default.number,grades:_propTypes.default.arrayOf(_propTypes.default.string),providerManaged:_propTypes.default.bool.isRequired,restrictSection:_propTypes.default.bool,postMilestoneDisabled:_propTypes.default.bool,syncEnabled:_propTypes.default.bool}),exports.assignmentUnitShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,path:_propTypes.default.string.isRequired,lesson_extras_available:_propTypes.default.bool.isRequired,text_to_speech_enabled:_propTypes.default.bool.isRequired,position:_propTypes.default.number}),exports.assignmentCourseVersionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,version_year:_propTypes.default.string.isRequired,content_root_id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,path:_propTypes.default.string.isRequired,type:_propTypes.default.string.isRequired,is_stable:_propTypes.default.bool.isRequired,is_recommended:_propTypes.default.bool.isRequired,locales:_propTypes.default.array,units:_propTypes.default.object.isRequired}),exports.assignmentCourseOfferingShape=_propTypes.default.shape({elementary:_propTypes.default.object,high:_propTypes.default.object,hoc:_propTypes.default.object,middle:_propTypes.default.object}),exports.classroomShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,section:_propTypes.default.string,enrollment_code:_propTypes.default.string.isRequired}),exports.loadErrorShape=_propTypes.default.shape({status:_propTypes.default.number.isRequired,message:_propTypes.default.string.isRequired}),exports.sortableSectionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,courseVersionName:_propTypes.default.string,loginType:_propTypes.default.oneOf(Object.keys(_sharedConstants.SectionLoginType)).isRequired,studentCount:_propTypes.default.number.isRequired,code:_propTypes.default.string.isRequired,grades:_propTypes.default.arrayOf(_propTypes.default.string),providerManaged:_propTypes.default.bool.isRequired,hidden:_propTypes.default.bool.isRequired,assignmentName:_propTypes.default.arrayOf(_propTypes.default.string),assignmentPath:_propTypes.default.arrayOf(_propTypes.default.string)}),exports.sectionForDropdownShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,isAssigned:_propTypes.default.bool.isRequired})},"./src/templates/teacherDashboard/urlHelpers.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.teacherDashboardUrl=exports.scriptUrlForStudent=void 0;exports.teacherDashboardUrl=function teacherDashboardUrl(sectionId){var path=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return path&&"/"!==path.charAt(0)&&(path="/${path}"),"/teacher_dashboard/sections/"+sectionId+path},exports.scriptUrlForStudent=function scriptUrlForStudent(sectionId,scriptName,studentId){return scriptName?"/s/".concat(scriptName,"?section_id=").concat(sectionId,"&user_id=").concat(studentId,"&viewAs=Instructor"):null}},"./src/util/browser-detector.js":(__unused_webpack_module,exports)=>{function isIE(){return-1!==navigator.userAgent.indexOf("MSIE")||isIE11()}function IEVersion(){return isIE11()?"11":navigator.userAgent.substring(navigator.userAgent.lastIndexOf("MSIE")+5).split(".")[0]}function isChrome(){return-1!==navigator.userAgent.lastIndexOf("Chrome/")}function chromeVersion(){return navigator.userAgent.substring(navigator.userAgent.lastIndexOf("Chrome/")+7).split(".")[0]}function isSafari(){return-1!==navigator.userAgent.indexOf("Safari/")}function safariVersion(){return navigator.userAgent.substring(navigator.userAgent.lastIndexOf("Version/")+8).split(".")[0]}function isFirefox(){return-1!==navigator.userAgent.indexOf("Firefox")}function firefoxVersion(){return navigator.userAgent.substring(navigator.userAgent.lastIndexOf("Firefox/")+8).split(".")[0]}function isIE11(){return!!window.MSInputMethodContext&&!!document.documentMode}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getBrowserName=function getBrowserName(){var includeVersion=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(isChrome())return"Chrome"+(includeVersion?" ".concat(chromeVersion()):"");if(isIE())return"Internet Explorer"+(includeVersion?" ".concat(IEVersion()):"");if(isFirefox())return"Firefox"+(includeVersion?" ".concat(firefoxVersion()):"");if(isSafari())return"Safari"+(includeVersion?" ".concat(safariVersion()):"");return navigator.userAgent},exports.isIE11=isIE11,exports.isMobileDevice=function isMobileDevice(){var check=!1;return function(a){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))&&(check=!0)}(navigator.userAgent||navigator.vendor||window.opera),check},exports.isStorageAvailable=function isStorageAvailable(type){try{var storage=window[type],x="__storage_test__";return storage.setItem(x,x),storage.removeItem(x),!0}catch(e){return!1}},exports.isUnsupportedBrowser=function isUnsupportedBrowser(){return function isUnsupportedIE(){return isIE()&&IEVersion()<11}()||function isUnsupportedChrome(){return isChrome()&&chromeVersion()<33}()||function isUnsupportedSafari(){return isSafari()&&safariVersion()<7}()||function isUnsupportedFirefox(){return isFirefox()&&firefoxVersion()<25}()}},"./src/util/copyToClipboard.js":(module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function copyToClipboard(str){var onSuccess=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,onFailure=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(navigator.clipboard&&window.isSecureContext)navigator.clipboard.writeText(str).then(onSuccess,onFailure);else{window.getSelection().removeAllRanges();var tempDiv=document.createElement("pre");tempDiv.innerText=str,document.body.appendChild(tempDiv);var errorOccurred=!1;try{window.getSelection().selectAllChildren(tempDiv),document.execCommand("copy"),window.getSelection().removeAllRanges()}catch(_unused){onFailure&&onFailure(),errorOccurred=!0}finally{document.body.removeChild(tempDiv),!errorOccurred&&onSuccess&&onSuccess()}}},module.exports=exports.default},"./src/util/loadingSkeleton.js":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _index=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react-loading-skeleton/dist/index.js"));__webpack_require__("./node_modules/react-loading-skeleton/dist/skeleton.css");exports.default=_index.default;module.exports=exports.default},"./src/util/useFetch.js":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.useFetch=void 0;var _react=__webpack_require__("./node_modules/react/index.js");function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function define(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{define({},"")}catch(t){define=function define(t,e,r){return t[e]=r}}function wrap(t,e,r,n){var i=e&&e.prototype instanceof Generator?e:Generator,a=Object.create(i.prototype),c=new Context(n||[]);return o(a,"_invoke",{value:makeInvokeMethod(t,r,c)}),a}function tryCatch(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=wrap;var h="suspendedStart",l="suspendedYield",f="executing",s="completed",y={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var p={};define(p,a,(function(){return this}));var d=Object.getPrototypeOf,v=d&&d(d(values([])));v&&v!==r&&n.call(v,a)&&(p=v);var g=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(p);function defineIteratorMethods(t){["next","throw","return"].forEach((function(e){define(t,e,(function(t){return this._invoke(e,t)}))}))}function AsyncIterator(t,e){function invoke(r,o,i,a){var c=tryCatch(t[r],t,o);if("throw"!==c.type){var u=c.arg,h=u.value;return h&&"object"==_typeof(h)&&n.call(h,"__await")?e.resolve(h.__await).then((function(t){invoke("next",t,i,a)}),(function(t){invoke("throw",t,i,a)})):e.resolve(h).then((function(t){u.value=t,i(u)}),(function(t){return invoke("throw",t,i,a)}))}a(c.arg)}var r;o(this,"_invoke",{value:function value(t,n){function callInvokeWithMethodAndArg(){return new e((function(e,r){invoke(t,n,e,r)}))}return r=r?r.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(e,r,n){var o=h;return function(i,a){if(o===f)throw Error("Generator is already running");if(o===s){if("throw"===i)throw a;return{value:t,done:!0}}for(n.method=i,n.arg=a;;){var c=n.delegate;if(c){var u=maybeInvokeDelegate(c,n);if(u){if(u===y)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===h)throw o=s,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=f;var p=tryCatch(e,r,n);if("normal"===p.type){if(o=n.done?s:l,p.arg===y)continue;return{value:p.arg,done:n.done}}"throw"===p.type&&(o=s,n.method="throw",n.arg=p.arg)}}}function maybeInvokeDelegate(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,maybeInvokeDelegate(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),y;var i=tryCatch(o,e.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,y;var a=i.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,y):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,y)}function pushTryEntry(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function resetTryEntry(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function Context(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(pushTryEntry,this),this.reset(!0)}function values(e){if(e||""===e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function next(){for(;++o<e.length;)if(n.call(e,o))return next.value=e[o],next.done=!1,next;return next.value=t,next.done=!0,next};return i.next=i}}throw new TypeError(_typeof(e)+" is not iterable")}return GeneratorFunction.prototype=GeneratorFunctionPrototype,o(g,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),o(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===GeneratorFunction||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,GeneratorFunctionPrototype):(t.__proto__=GeneratorFunctionPrototype,define(t,u,"GeneratorFunction")),t.prototype=Object.create(g),t},e.awrap=function(t){return{__await:t}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,c,(function(){return this})),e.AsyncIterator=AsyncIterator,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new AsyncIterator(wrap(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},defineIteratorMethods(g),define(g,u,"Generator"),define(g,a,(function(){return this})),define(g,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function next(){for(;r.length;){var t=r.pop();if(t in e)return next.value=t,next.done=!1,next}return next.done=!0,next}},e.values=values,Context.prototype={constructor:Context,reset:function reset(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(resetTryEntry),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function stop(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function dispatchException(e){if(this.done)throw e;var r=this;function handle(n,o){return a.type="throw",a.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return handle("end");if(i.tryLoc<=this.prev){var c=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(c&&u){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0);if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}}}},abrupt:function abrupt(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,y):this.complete(a)},complete:function complete(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),y},finish:function finish(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),resetTryEntry(r),y}},catch:function _catch(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;resetTryEntry(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function delegateYield(e,r,n){return this.delegate={iterator:values(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),y}},e}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var baseFetchState={loading:!1,data:null,response:null,error:null,status:null},EMPTY_OPTIONS={};exports.useFetch=function useFetch(url){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:EMPTY_OPTIONS,_useState2=_slicedToArray((0,_react.useState)(baseFetchState),2),fetchState=_useState2[0],setFetchState=_useState2[1];return(0,_react.useEffect)((function(){var abortController,canceled=!1;window.AbortController&&(abortController=new AbortController);var calculatedOptions=_objectSpread({credentials:"same-origin",signal:abortController?abortController.signal:void 0},options);return function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(_regeneratorRuntime().mark((function _callee(){var status,response,data;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return setFetchState(_objectSpread(_objectSpread({},baseFetchState),{},{loading:!0})),status=null,_context.prev=2,_context.next=5,fetch(url,calculatedOptions);case 5:if((response=_context.sent).ok){_context.next=9;break}throw status=response.status,new Error("fetch request to ".concat(url," failed with status code ").concat(response.status));case 9:return _context.next=11,response.json();case 11:data=_context.sent,canceled||setFetchState(_objectSpread(_objectSpread({},baseFetchState),{},{data,response,status:response.status})),_context.next=19;break;case 15:_context.prev=15,_context.t0=_context.catch(2),console.error(_context.t0),canceled||setFetchState(_objectSpread(_objectSpread({},baseFetchState),{},{error:_context.t0,status}));case 19:case"end":return _context.stop()}}),_callee,null,[[2,15]])})))(),function(){abortController&&(canceled=!0,abortController.abort())}}),[url,options]),{loading:fetchState.loading,data:fetchState.data,response:fetchState.response,error:fetchState.error,status:fetchState.status}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,