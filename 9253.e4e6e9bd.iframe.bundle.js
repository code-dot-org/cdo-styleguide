/*! For license information please see 9253.e4e6e9bd.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[9253],{"./node_modules/@mapbox/hast-util-table-cell-style/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var visit=__webpack_require__("./node_modules/unist-util-visit/index.js"),hasOwnProperty=Object.prototype.hasOwnProperty,hastCssPropertyMap={align:"text-align",valign:"vertical-align",height:"height",width:"width"};function visitor(node){var hastName;if("tr"===node.tagName||"td"===node.tagName||"th"===node.tagName)for(hastName in hastCssPropertyMap)hasOwnProperty.call(hastCssPropertyMap,hastName)&&void 0!==node.properties[hastName]&&(appendStyle(node,hastCssPropertyMap[hastName],node.properties[hastName]),delete node.properties[hastName])}function appendStyle(node,property,value){var prevStyle=(node.properties.style||"").trim();prevStyle&&!/;\s*/.test(prevStyle)&&(prevStyle+=";"),prevStyle&&(prevStyle+=" ");var nextStyle=prevStyle+property+": "+value+";";node.properties.style=nextStyle}module.exports=function tableCellStyle(node){return visit(node,"element",visitor),node}},"./node_modules/ccount/index.js":module=>{"use strict";module.exports=function ccount(value,character){var index,count=0;if(value=String(value),"string"!=typeof character||1!==character.length)throw new Error("Expected character");index=value.indexOf(character);for(;-1!==index;)count++,index=value.indexOf(character,index+1);return count}},"./node_modules/comma-separated-tokens/index.js":(__unused_webpack_module,exports)=>{"use strict";exports.parse=function parse(value){var val,values=[],input=String(value||empty),index=input.indexOf(comma),lastIndex=0,end=!1;for(;!end;)-1===index&&(index=input.length,end=!0),!(val=input.slice(lastIndex,index).trim())&&end||values.push(val),lastIndex=index+1,index=input.indexOf(comma,lastIndex);return values},exports.stringify=function stringify(values,options){var settings=options||{},left=!1===settings.padLeft?empty:space,right=settings.padRight?space:empty;values[values.length-1]===empty&&(values=values.concat(empty));return values.join(right+comma+left).trim()};var comma=",",space=" ",empty=""},"./node_modules/css/lib/parse/index.js":module=>{var commentre=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;function trim(str){return str?str.replace(/^\s+|\s+$/g,""):""}function addParent(obj,parent){var isNode=obj&&"string"==typeof obj.type,childParent=isNode?obj:parent;for(var k in obj){var value=obj[k];Array.isArray(value)?value.forEach((function(v){addParent(v,childParent)})):value&&"object"==typeof value&&addParent(value,childParent)}return isNode&&Object.defineProperty(obj,"parent",{configurable:!0,writable:!0,enumerable:!1,value:parent||null}),obj}module.exports=function(css,options){options=options||{};var lineno=1,column=1;function updatePosition(str){var lines=str.match(/\n/g);lines&&(lineno+=lines.length);var i=str.lastIndexOf("\n");column=~i?str.length-i:column+str.length}function position(){var start={line:lineno,column};return function(node){return node.position=new Position(start),whitespace(),node}}function Position(start){this.start=start,this.end={line:lineno,column},this.source=options.source}Position.prototype.content=css;var errorsList=[];function error(msg){var err=new Error(options.source+":"+lineno+":"+column+": "+msg);if(err.reason=msg,err.filename=options.source,err.line=lineno,err.column=column,err.source=css,!options.silent)throw err;errorsList.push(err)}function open(){return match(/^{\s*/)}function close(){return match(/^}/)}function rules(){var node,rules=[];for(whitespace(),comments(rules);css.length&&"}"!=css.charAt(0)&&(node=atrule()||rule());)!1!==node&&(rules.push(node),comments(rules));return rules}function match(re){var m=re.exec(css);if(m){var str=m[0];return updatePosition(str),css=css.slice(str.length),m}}function whitespace(){match(/^\s*/)}function comments(rules){var c;for(rules=rules||[];c=comment();)!1!==c&&rules.push(c);return rules}function comment(){var pos=position();if("/"==css.charAt(0)&&"*"==css.charAt(1)){for(var i=2;""!=css.charAt(i)&&("*"!=css.charAt(i)||"/"!=css.charAt(i+1));)++i;if(i+=2,""===css.charAt(i-1))return error("End of comment missing");var str=css.slice(2,i-2);return column+=2,updatePosition(str),css=css.slice(i),column+=2,pos({type:"comment",comment:str})}}function selector(){var m=match(/^([^{]+)/);if(m)return trim(m[0]).replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g,"").replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g,(function(m){return m.replace(/,/g,"â€Œ")})).split(/\s*(?![^(]*\)),\s*/).map((function(s){return s.replace(/\u200C/g,",")}))}function declaration(){var pos=position(),prop=match(/^(\*?[-#\/\*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);if(prop){if(prop=trim(prop[0]),!match(/^:\s*/))return error("property missing ':'");var val=match(/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^\)]*?\)|[^};])+)/),ret=pos({type:"declaration",property:prop.replace(commentre,""),value:val?trim(val[0]).replace(commentre,""):""});return match(/^[;\s]*/),ret}}function declarations(){var decl,decls=[];if(!open())return error("missing '{'");for(comments(decls);decl=declaration();)!1!==decl&&(decls.push(decl),comments(decls));return close()?decls:error("missing '}'")}function keyframe(){for(var m,vals=[],pos=position();m=match(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/);)vals.push(m[1]),match(/^,\s*/);if(vals.length)return pos({type:"keyframe",values:vals,declarations:declarations()})}var atimport=_compileAtrule("import"),atcharset=_compileAtrule("charset"),atnamespace=_compileAtrule("namespace");function _compileAtrule(name){var re=new RegExp("^@"+name+"\\s*([^;]+);");return function(){var pos=position(),m=match(re);if(m){var ret={type:name};return ret[name]=m[1].trim(),pos(ret)}}}function atrule(){if("@"==css[0])return function atkeyframes(){var pos=position();if(m=match(/^@([-\w]+)?keyframes\s*/)){var m,vendor=m[1];if(!(m=match(/^([-\w]+)\s*/)))return error("@keyframes missing name");var frame,name=m[1];if(!open())return error("@keyframes missing '{'");for(var frames=comments();frame=keyframe();)frames.push(frame),frames=frames.concat(comments());return close()?pos({type:"keyframes",name,vendor,keyframes:frames}):error("@keyframes missing '}'")}}()||function atmedia(){var pos=position(),m=match(/^@media *([^{]+)/);if(m){var media=trim(m[1]);if(!open())return error("@media missing '{'");var style=comments().concat(rules());return close()?pos({type:"media",media,rules:style}):error("@media missing '}'")}}()||function atcustommedia(){var pos=position(),m=match(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);if(m)return pos({type:"custom-media",name:trim(m[1]),media:trim(m[2])})}()||function atsupports(){var pos=position(),m=match(/^@supports *([^{]+)/);if(m){var supports=trim(m[1]);if(!open())return error("@supports missing '{'");var style=comments().concat(rules());return close()?pos({type:"supports",supports,rules:style}):error("@supports missing '}'")}}()||atimport()||atcharset()||atnamespace()||function atdocument(){var pos=position(),m=match(/^@([-\w]+)?document *([^{]+)/);if(m){var vendor=trim(m[1]),doc=trim(m[2]);if(!open())return error("@document missing '{'");var style=comments().concat(rules());return close()?pos({type:"document",document:doc,vendor,rules:style}):error("@document missing '}'")}}()||function atpage(){var pos=position();if(match(/^@page */)){var sel=selector()||[];if(!open())return error("@page missing '{'");for(var decl,decls=comments();decl=declaration();)decls.push(decl),decls=decls.concat(comments());return close()?pos({type:"page",selectors:sel,declarations:decls}):error("@page missing '}'")}}()||function athost(){var pos=position();if(match(/^@host\s*/)){if(!open())return error("@host missing '{'");var style=comments().concat(rules());return close()?pos({type:"host",rules:style}):error("@host missing '}'")}}()||function atfontface(){var pos=position();if(match(/^@font-face\s*/)){if(!open())return error("@font-face missing '{'");for(var decl,decls=comments();decl=declaration();)decls.push(decl),decls=decls.concat(comments());return close()?pos({type:"font-face",declarations:decls}):error("@font-face missing '}'")}}()}function rule(){var pos=position(),sel=selector();return sel?(comments(),pos({type:"rule",selectors:sel,declarations:declarations()})):error("selector missing")}return addParent(function stylesheet(){var rulesList=rules();return{type:"stylesheet",stylesheet:{source:options.source,rules:rulesList,parsingErrors:errorsList}}}())}},"./node_modules/detab/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function detab(value,size){var code,add,string="string"==typeof value,length=string&&value.length,start=0,index=-1,column=-1,tabSize=size||4,results=[];if(!string)throw new Error("detab expected string");for(;++index<length;)(code=value.charCodeAt(index))===TAB?(column+=add=tabSize-(column+1)%tabSize,results.push(value.slice(start,index)+repeat(" ",add)),start=index+1):code===LF||code===CR?column=-1:column++;return results.push(value.slice(start)),results.join("")};var repeat=__webpack_require__("./node_modules/repeat-string/index.js"),TAB=9,LF=10,CR=13},"./node_modules/mdast-util-definitions/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var visit=__webpack_require__("./node_modules/unist-util-visit/index.js");module.exports=function getDefinitionFactory(node,options){return function getterFactory(cache){return getter;function getter(identifier){var id=identifier&&normalise(identifier);return id&&own.call(cache,id)?cache[id]:null}}(function gather(node,options){var cache={};if(!node||!node.type)throw new Error("mdast-util-definitions expected node");return visit(node,"definition",options&&options.commonmark?commonmark:normal),cache;function commonmark(definition){var id=normalise(definition.identifier);own.call(cache,id)||(cache[id]=definition)}function normal(definition){cache[normalise(definition.identifier)]=definition}}(node,options))};var own={}.hasOwnProperty;function normalise(identifier){return identifier.toUpperCase()}},"./node_modules/mdast-util-to-hast/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/mdast-util-to-hast/lib/index.js")},"./node_modules/mdast-util-to-hast/lib/all.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function all(h,parent){var result,head,nodes=parent.children||[],length=nodes.length,values=[],index=-1;for(;++index<length;)(result=one(h,nodes[index],parent))&&(index&&"break"===nodes[index-1].type&&(result.value&&(result.value=trim.left(result.value)),(head=result.children&&result.children[0])&&head.value&&(head.value=trim.left(head.value))),values=values.concat(result));return values};var trim=__webpack_require__("./node_modules/trim/index.js"),one=__webpack_require__("./node_modules/mdast-util-to-hast/lib/one.js")},"./node_modules/mdast-util-to-hast/lib/footer.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function generateFootnotes(h){var def,backReference,content,tail,footnotes=h.footnotes,length=footnotes.length,index=-1,listItems=[];if(!length)return null;for(;++index<length;)tail=(content=(def=footnotes[index]).children.concat())[content.length-1],backReference={type:"link",url:"#fnref-"+def.identifier,data:{hProperties:{className:["footnote-backref"]}},children:[{type:"text",value:"â†©"}]},tail&&"paragraph"===tail.type||(tail={type:"paragraph",children:[]},content.push(tail)),tail.children.push(backReference),listItems[index]={type:"listItem",data:{hProperties:{id:"fn-"+def.identifier}},children:content,position:def.position};return h(null,"div",{className:["footnotes"]},wrap([thematicBreak(h),list(h,{type:"list",ordered:!0,children:listItems})],!0))};var thematicBreak=__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js"),list=__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/list.js"),wrap=__webpack_require__("./node_modules/mdast-util-to-hast/lib/wrap.js")},"./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function blockquote(h,node){return h(node,"blockquote",wrap(all(h,node),!0))};var wrap=__webpack_require__("./node_modules/mdast-util-to-hast/lib/wrap.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/break.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function hardBreak(h,node){return[h(node,"br"),u("text","\n")]};var u=__webpack_require__("./node_modules/unist-builder/index.js")},"./node_modules/mdast-util-to-hast/lib/handlers/code.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function code(h,node){var value=node.value?detab(node.value+"\n"):"",lang=node.lang&&node.lang.match(/^[^ \t]+(?=[ \t]|$)/),props={};lang&&(props.className=["language-"+lang]);return h(node.position,"pre",[h(node,"code",props,[u("text",value)])])};var detab=__webpack_require__("./node_modules/detab/index.js"),u=__webpack_require__("./node_modules/unist-builder/index.js")},"./node_modules/mdast-util-to-hast/lib/handlers/delete.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function strikethrough(h,node){return h(node,"del",all(h,node))};var all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function emphasis(h,node){return h(node,"em",all(h,node))};var all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function footnoteReference(h,node){var identifier=node.identifier;return h(node.position,"sup",{id:"fnref-"+identifier},[h(node,"a",{href:"#fn-"+identifier,className:["footnote-ref"]},[u("text",identifier)])])};var u=__webpack_require__("./node_modules/unist-builder/index.js")},"./node_modules/mdast-util-to-hast/lib/handlers/footnote.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function footnote(h,node){var identifiers=[],identifier=1,footnotes=h.footnotes,length=footnotes.length,index=-1;for(;++index<length;)identifiers[index]=footnotes[index].identifier;for(;-1!==identifiers.indexOf(String(identifier));)identifier++;return identifier=String(identifier),footnotes.push({type:"footnoteDefinition",identifier,children:[{type:"paragraph",children:node.children}],position:node.position}),footnoteReference(h,{type:"footnoteReference",identifier,position:node.position})};var footnoteReference=__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js")},"./node_modules/mdast-util-to-hast/lib/handlers/heading.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function heading(h,node){return h(node,"h"+node.depth,all(h,node))};var all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/html.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function html(h,node){return h.dangerous?h.augment(node,u("raw",node.value)):null};var u=__webpack_require__("./node_modules/unist-builder/index.js")},"./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function imageReference(h,node){var props,def=h.definition(node.identifier);if(!def)return revert(h,node);props={src:normalize(def.url||""),alt:node.alt},null!==def.title&&void 0!==def.title&&(props.title=def.title);return h(node,"img",props)};var normalize=__webpack_require__("./node_modules/mdurl/encode.js"),revert=__webpack_require__("./node_modules/mdast-util-to-hast/lib/revert.js")},"./node_modules/mdast-util-to-hast/lib/handlers/image.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var normalize=__webpack_require__("./node_modules/mdurl/encode.js");module.exports=function image(h,node){var props={src:normalize(node.url),alt:node.alt};null!==node.title&&void 0!==node.title&&(props.title=node.title);return h(node,"img",props)}},"./node_modules/mdast-util-to-hast/lib/handlers/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";function ignore(){return null}module.exports={blockquote:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js"),break:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/break.js"),code:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/code.js"),delete:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/delete.js"),emphasis:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js"),footnoteReference:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js"),footnote:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/footnote.js"),heading:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/heading.js"),html:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/html.js"),imageReference:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js"),image:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/image.js"),inlineCode:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js"),linkReference:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js"),link:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/link.js"),listItem:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/list-item.js"),list:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/list.js"),paragraph:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js"),root:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/root.js"),strong:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/strong.js"),table:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/table.js"),text:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/text.js"),thematicBreak:__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js"),toml:ignore,yaml:ignore,definition:ignore,footnoteDefinition:ignore}},"./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function inlineCode(h,node){return h(node,"code",[u("text",collapse(node.value))])};var collapse=__webpack_require__("./node_modules/mdast-util-to-hast/node_modules/collapse-white-space/index.js"),u=__webpack_require__("./node_modules/unist-builder/index.js")},"./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function linkReference(h,node){var props,def=h.definition(node.identifier);if(!def)return revert(h,node);props={href:normalize(def.url||"")},null!==def.title&&void 0!==def.title&&(props.title=def.title);return h(node,"a",props,all(h,node))};var normalize=__webpack_require__("./node_modules/mdurl/encode.js"),revert=__webpack_require__("./node_modules/mdast-util-to-hast/lib/revert.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/link.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var normalize=__webpack_require__("./node_modules/mdurl/encode.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js");module.exports=function link(h,node){var props={href:normalize(node.url)};null!==node.title&&void 0!==node.title&&(props.title=node.title);return h(node,"a",props,all(h,node))}},"./node_modules/mdast-util-to-hast/lib/handlers/list-item.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function listItem(h,node,parent){var result,container,index,length,child,head=node.children[0],raw=all(h,node),loose=parent?function listLoose(node){var loose=node.spread,children=node.children,length=children.length,index=-1;for(;!loose&&++index<length;)loose=listItemLoose(children[index]);return loose}(parent):listItemLoose(node),props={};if(loose)result=raw;else for(result=[],length=raw.length,index=-1;++index<length;)"p"===(child=raw[index]).tagName?result=result.concat(child.children):result.push(child);"boolean"==typeof node.checked&&(!loose||head&&"paragraph"===head.type||result.unshift(h(null,"p",[])),0!==(container=loose?result[0].children:result).length&&container.unshift(u("text"," ")),container.unshift(h(null,"input",{type:"checkbox",checked:node.checked,disabled:!0})),props.className=["task-list-item"]);loose&&0!==result.length&&(result=wrap(result,!0));return h(node,"li",props,result)};var u=__webpack_require__("./node_modules/unist-builder/index.js"),wrap=__webpack_require__("./node_modules/mdast-util-to-hast/lib/wrap.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js");function listItemLoose(node){var spread=node.spread;return null==spread?node.children.length>1:spread}},"./node_modules/mdast-util-to-hast/lib/handlers/list.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function list(h,node){var props={},name=node.ordered?"ol":"ul";"number"==typeof node.start&&1!==node.start&&(props.start=node.start);return h(node,name,props,wrap(all(h,node),!0))};var wrap=__webpack_require__("./node_modules/mdast-util-to-hast/lib/wrap.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function paragraph(h,node){return h(node,"p",all(h,node))};var all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/root.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function root(h,node){return h.augment(node,u("root",wrap(all(h,node))))};var u=__webpack_require__("./node_modules/unist-builder/index.js"),wrap=__webpack_require__("./node_modules/mdast-util-to-hast/lib/wrap.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/strong.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function strong(h,node){return h(node,"strong",all(h,node))};var all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/table.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function table(h,node){var pos,row,out,name,cell,rows=node.children,index=rows.length,align=node.align,alignLength=align.length,result=[];for(;index--;){for(row=rows[index].children,name=0===index?"th":"td",pos=alignLength,out=[];pos--;)cell=row[pos],out[pos]=h(cell,name,{align:align[pos]},cell?all(h,cell):[]);result[index]=h(rows[index],"tr",wrap(out,!0))}return h(node,"table",wrap([h(result[0].position,"thead",wrap([result[0]],!0)),h({start:position.start(result[1]),end:position.end(result[result.length-1])},"tbody",wrap(result.slice(1),!0))],!0))};var position=__webpack_require__("./node_modules/unist-util-position/index.js"),wrap=__webpack_require__("./node_modules/mdast-util-to-hast/lib/wrap.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/handlers/text.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function text(h,node){return h.augment(node,u("text",trimLines(node.value)))};var u=__webpack_require__("./node_modules/unist-builder/index.js"),trimLines=__webpack_require__("./node_modules/trim-lines/index.js")},"./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js":module=>{"use strict";module.exports=function thematicBreak(h,node){return h(node,"hr")}},"./node_modules/mdast-util-to-hast/lib/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function toHast(tree,options){var h=function factory(tree,options){var settings=options||{},dangerous=settings.allowDangerousHTML;return h.dangerous=dangerous,h.definition=definitions(tree,settings),h.footnotes=[],h.augment=augment,h.handlers=xtend(handlers,settings.handlers||{}),visit(tree,"footnoteDefinition",visitor),h;function augment(left,right){var data,ctx;return left&&"data"in left&&(data=left.data,"element"===right.type&&data.hName&&(right.tagName=data.hName),"element"===right.type&&data.hProperties&&(right.properties=xtend(right.properties,data.hProperties)),right.children&&data.hChildren&&(right.children=data.hChildren)),ctx=left&&left.position?left:{position:left},generated(ctx)||(right.position={start:position.start(ctx),end:position.end(ctx)}),right}function h(node,tagName,props,children){return null==children&&"object"==typeof props&&"length"in props&&(children=props,props={}),augment(node,{type:"element",tagName,properties:props||{},children:children||[]})}function visitor(definition){h.footnotes.push(definition)}}(tree,options),node=one(h,tree),footnotes=footer(h);node&&node.children&&footnotes&&(node.children=node.children.concat(u("text","\n"),footnotes));return node};var xtend=__webpack_require__("./node_modules/xtend/immutable.js"),u=__webpack_require__("./node_modules/unist-builder/index.js"),visit=__webpack_require__("./node_modules/unist-util-visit/index.js"),position=__webpack_require__("./node_modules/unist-util-position/index.js"),generated=__webpack_require__("./node_modules/unist-util-generated/index.js"),definitions=__webpack_require__("./node_modules/mdast-util-definitions/index.js"),one=__webpack_require__("./node_modules/mdast-util-to-hast/lib/one.js"),footer=__webpack_require__("./node_modules/mdast-util-to-hast/lib/footer.js"),handlers=__webpack_require__("./node_modules/mdast-util-to-hast/lib/handlers/index.js")},"./node_modules/mdast-util-to-hast/lib/one.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function one(h,node,parent){var type=node&&node.type,fn=own.call(h.handlers,type)?h.handlers[type]:null;if(!type)throw new Error("Expected node, got `"+node+"`");return("function"==typeof fn?fn:unknown)(h,node,parent)};var u=__webpack_require__("./node_modules/unist-builder/index.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js"),own={}.hasOwnProperty;function unknown(h,node){return function text(node){var data=node.data||{};if(own.call(data,"hName")||own.call(data,"hProperties")||own.call(data,"hChildren"))return!1;return"value"in node}(node)?h.augment(node,u("text",node.value)):h(node,"div",all(h,node))}},"./node_modules/mdast-util-to-hast/lib/revert.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function revert(h,node){var contents,head,tail,subtype=node.referenceType,suffix="]";"collapsed"===subtype?suffix+="[]":"full"===subtype&&(suffix+="["+(node.label||node.identifier)+"]");if("imageReference"===node.type)return u("text","!["+node.alt+suffix);contents=all(h,node),(head=contents[0])&&"text"===head.type?head.value="["+head.value:contents.unshift(u("text","["));(tail=contents[contents.length-1])&&"text"===tail.type?tail.value+=suffix:contents.push(u("text",suffix));return contents};var u=__webpack_require__("./node_modules/unist-builder/index.js"),all=__webpack_require__("./node_modules/mdast-util-to-hast/lib/all.js")},"./node_modules/mdast-util-to-hast/lib/wrap.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function wrap(nodes,loose){var result=[],index=-1,length=nodes.length;loose&&result.push(u("text","\n"));for(;++index<length;)index&&result.push(u("text","\n")),result.push(nodes[index]);loose&&0!==nodes.length&&result.push(u("text","\n"));return result};var u=__webpack_require__("./node_modules/unist-builder/index.js")},"./node_modules/mdast-util-to-hast/node_modules/collapse-white-space/index.js":module=>{"use strict";module.exports=function collapse(value){return String(value).replace(/\s+/g," ")}},"./node_modules/mdurl/encode.js":module=>{"use strict";var encodeCache={};function encode(string,exclude,keepEscaped){var i,l,code,nextCode,cache,result="";for("string"!=typeof exclude&&(keepEscaped=exclude,exclude=encode.defaultChars),void 0===keepEscaped&&(keepEscaped=!0),cache=function getEncodeCache(exclude){var i,ch,cache=encodeCache[exclude];if(cache)return cache;for(cache=encodeCache[exclude]=[],i=0;i<128;i++)ch=String.fromCharCode(i),/^[0-9a-z]$/i.test(ch)?cache.push(ch):cache.push("%"+("0"+i.toString(16).toUpperCase()).slice(-2));for(i=0;i<exclude.length;i++)cache[exclude.charCodeAt(i)]=exclude[i];return cache}(exclude),i=0,l=string.length;i<l;i++)if(code=string.charCodeAt(i),keepEscaped&&37===code&&i+2<l&&/^[0-9a-f]{2}$/i.test(string.slice(i+1,i+3)))result+=string.slice(i,i+3),i+=2;else if(code<128)result+=cache[code];else if(code>=55296&&code<=57343){if(code>=55296&&code<=56319&&i+1<l&&(nextCode=string.charCodeAt(i+1))>=56320&&nextCode<=57343){result+=encodeURIComponent(string[i]+string[i+1]),i++;continue}result+="%EF%BF%BD"}else result+=encodeURIComponent(string[i]);return result}encode.defaultChars=";/?:@&=+$,-_.!~*'()#",encode.componentChars="-_.!~*'()",module.exports=encode},"./node_modules/rehype-react/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var has=__webpack_require__("./node_modules/rehype-react/node_modules/has/src/index.js"),toH=__webpack_require__("./node_modules/rehype-react/node_modules/hast-to-hyperscript/index.js"),tableCellStyle=__webpack_require__("./node_modules/@mapbox/hast-util-table-cell-style/index.js");module.exports=function rehype2react(options){var settings=options||{},createElement=settings.createElement,components=settings.components||{};function h(name,props,children){var component=has(components,name)?components[name]:name;return createElement(component,props,children)}this.Compiler=function compiler(node){return"root"===node.type&&(node=1===node.children.length&&"element"===node.children[0].type?node.children[0]:{type:"element",tagName:"div",properties:node.properties||{},children:node.children}),toH(h,tableCellStyle(node),settings.prefix)}}},"./node_modules/rehype-react/node_modules/has/src/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{var bind=__webpack_require__("./node_modules/function-bind/index.js");module.exports=bind.call(Function.call,Object.prototype.hasOwnProperty)},"./node_modules/rehype-react/node_modules/hast-to-hyperscript/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var html=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/html.js"),svg=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/svg.js"),find=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/find.js"),spaces=__webpack_require__("./node_modules/space-separated-tokens/index.js"),commas=__webpack_require__("./node_modules/comma-separated-tokens/index.js"),style=__webpack_require__("./node_modules/style-to-object/index.js"),ns=__webpack_require__("./node_modules/web-namespaces/index.json"),is=__webpack_require__("./node_modules/unist-util-is/index.js"),dashes=/-([a-z])/g;function toH(h,node,ctx){var properties,attributes,children,property,elements,length,index,value,result,parentSchema=ctx.schema,schema=parentSchema,name=node.tagName;for(property in"html"===parentSchema.space&&"svg"===name.toLowerCase()&&(schema=svg,ctx.schema=schema),!0===ctx.vdom&&"html"===schema.space&&(name=name.toUpperCase()),attributes={},properties=node.properties)addAttribute(attributes,property,properties[property],ctx);for("string"!=typeof attributes.style||!0!==ctx.vdom&&!0!==ctx.react||(attributes.style=function parseStyle(value,tagName){var result={};try{style(value,iterator)}catch(err){throw err.message=tagName+"[style]"+err.message.slice(9),err}return result;function iterator(name,value){result[function styleCase(val){"-ms-"===val.slice(0,4)&&(val="ms-"+val.slice(4));return val.replace(dashes,styleReplacer)}(name)]=value}}(attributes.style,name)),ctx.prefix&&(ctx.key++,attributes.key=ctx.prefix+ctx.key),ctx.vdom&&"html"!==schema.space&&(attributes.namespace=ns[schema.space]),elements=[],length=(children=node.children)?children.length:0,index=-1;++index<length;)value=children[index],is("element",value)?elements.push(toH(h,value,ctx)):is("text",value)&&elements.push(value.value);return result=0===elements.length?h(name,attributes):h(name,attributes,elements),ctx.schema=parentSchema,result}function addAttribute(props,prop,value,ctx){var subprop,schema=ctx.schema,info=find(schema,prop);null==value||!1===value||value!=value||info.boolean&&!value||(null!==value&&"object"==typeof value&&"length"in value&&(value=(info.commaSeparated?commas:spaces).stringify(value)),info.boolean&&!0===ctx.hyperscript&&(value=""),info.mustUseProperty||(!0===ctx.vdom?subprop="attributes":!0===ctx.hyperscript&&(subprop="attrs")),subprop?(void 0===props[subprop]&&(props[subprop]={}),props[subprop][info.attribute]=value):props[ctx.react&&info.space?info.property:info.attribute]=value)}function hyperscript(h){return Boolean(h&&h.context&&h.cleanup)}function styleReplacer($0,$1){return $1.toUpperCase()}module.exports=function wrapper(h,node,options){var prefix,r,v,settings=options||{};if("function"!=typeof h)throw new Error("h is not a function");"string"==typeof settings||"boolean"==typeof settings?(prefix=settings,settings={}):prefix=settings.prefix;r=function react(h){var node=h&&h("div");return Boolean(node&&("_owner"in node||"_store"in node)&&null===node.key)}(h),v=function vdom(h){return h&&"VirtualNode"===h("div").type}(h),null==prefix&&(prefix=(!0===r||!0===v)&&"h-");if(is("root",node))node=1===node.children.length&&is("element",node.children[0])?node.children[0]:{type:"element",tagName:"div",properties:{},children:node.children};else if(!is("element",node))throw new Error("Expected root or element, not `"+(node&&node.type||node)+"`");return toH(h,node,{schema:"svg"===settings.space?svg:html,prefix,key:0,react:r,vdom:v,hyperscript:hyperscript(h)})}},"./node_modules/rehype-react/node_modules/property-information/find.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var normalize=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/normalize.js"),DefinedInfo=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/defined-info.js"),Info=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/info.js"),data="data";module.exports=function find(schema,value){var normal=normalize(value),prop=value,Type=Info;if(normal in schema.normal)return schema.property[schema.normal[normal]];normal.length>4&&normal.slice(0,4)===data&&valid.test(value)&&("-"===value.charAt(4)?prop=function datasetToProperty(attribute){var value=attribute.slice(5).replace(dash,camelcase);return data+value.charAt(0).toUpperCase()+value.slice(1)}(value):value=function datasetToAttribute(property){var value=property.slice(4);if(dash.test(value))return property;value=value.replace(cap,kebab),"-"!==value.charAt(0)&&(value="-"+value);return data+value}(value),Type=DefinedInfo);return new Type(prop,value)};var valid=/^data[-a-z0-9.:_]+$/i,dash=/-[a-z]/g,cap=/[A-Z]/g;function kebab($0){return"-"+$0.toLowerCase()}function camelcase($0){return $0.charAt(1).toUpperCase()}},"./node_modules/rehype-react/node_modules/property-information/html.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var merge=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/merge.js"),xlink=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/xlink.js"),xml=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/xml.js"),xmlns=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/xmlns.js"),aria=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/aria.js"),html=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/html.js");module.exports=merge([xml,xlink,xmlns,aria,html])},"./node_modules/rehype-react/node_modules/property-information/lib/aria.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var types=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/types.js"),create=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/create.js"),booleanish=types.booleanish,number=types.number,spaceSeparated=types.spaceSeparated;module.exports=create({transform:function ariaTransform(_,prop){return"role"===prop?prop:"aria-"+prop.slice(4).toLowerCase()},properties:{ariaActiveDescendant:null,ariaAtomic:booleanish,ariaAutoComplete:null,ariaBusy:booleanish,ariaChecked:booleanish,ariaColCount:number,ariaColIndex:number,ariaColSpan:number,ariaControls:spaceSeparated,ariaCurrent:null,ariaDescribedBy:spaceSeparated,ariaDetails:null,ariaDisabled:booleanish,ariaDropEffect:spaceSeparated,ariaErrorMessage:null,ariaExpanded:booleanish,ariaFlowTo:spaceSeparated,ariaGrabbed:booleanish,ariaHasPopup:null,ariaHidden:booleanish,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:spaceSeparated,ariaLevel:number,ariaLive:null,ariaModal:booleanish,ariaMultiLine:booleanish,ariaMultiSelectable:booleanish,ariaOrientation:null,ariaOwns:spaceSeparated,ariaPlaceholder:null,ariaPosInSet:number,ariaPressed:booleanish,ariaReadOnly:booleanish,ariaRelevant:null,ariaRequired:booleanish,ariaRoleDescription:spaceSeparated,ariaRowCount:number,ariaRowIndex:number,ariaRowSpan:number,ariaSelected:booleanish,ariaSetSize:number,ariaSort:null,ariaValueMax:number,ariaValueMin:number,ariaValueNow:number,ariaValueText:null,role:null}})},"./node_modules/rehype-react/node_modules/property-information/lib/html.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var types=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/types.js"),create=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/create.js"),caseInsensitiveTransform=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/case-insensitive-transform.js"),boolean=types.boolean,overloadedBoolean=types.overloadedBoolean,booleanish=types.booleanish,number=types.number,spaceSeparated=types.spaceSeparated,commaSeparated=types.commaSeparated;module.exports=create({space:"html",attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},transform:caseInsensitiveTransform,mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:commaSeparated,acceptCharset:spaceSeparated,accessKey:spaceSeparated,action:null,allowFullScreen:boolean,allowPaymentRequest:boolean,allowUserMedia:boolean,alt:null,as:null,async:boolean,autoCapitalize:null,autoComplete:spaceSeparated,autoFocus:boolean,autoPlay:boolean,capture:boolean,charSet:null,checked:boolean,cite:null,className:spaceSeparated,cols:number,colSpan:null,content:null,contentEditable:booleanish,controls:boolean,controlsList:spaceSeparated,coords:number|commaSeparated,crossOrigin:null,data:null,dateTime:null,decoding:null,default:boolean,defer:boolean,dir:null,dirName:null,disabled:boolean,download:overloadedBoolean,draggable:booleanish,encType:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:boolean,formTarget:null,headers:spaceSeparated,height:number,hidden:boolean,high:number,href:null,hrefLang:null,htmlFor:spaceSeparated,httpEquiv:spaceSeparated,id:null,inputMode:null,integrity:null,is:null,isMap:boolean,itemId:null,itemProp:spaceSeparated,itemRef:spaceSeparated,itemScope:boolean,itemType:spaceSeparated,kind:null,label:null,lang:null,language:null,list:null,loop:boolean,low:number,manifest:null,max:null,maxLength:number,media:null,method:null,min:null,minLength:number,multiple:boolean,muted:boolean,name:null,nonce:null,noModule:boolean,noValidate:boolean,open:boolean,optimum:number,pattern:null,ping:spaceSeparated,placeholder:null,playsInline:boolean,poster:null,preload:null,readOnly:boolean,referrerPolicy:null,rel:spaceSeparated,required:boolean,reversed:boolean,rows:number,rowSpan:number,sandbox:spaceSeparated,scope:null,scoped:boolean,seamless:boolean,selected:boolean,shape:null,size:number,sizes:spaceSeparated,slot:null,span:number,spellCheck:booleanish,src:null,srcDoc:null,srcLang:null,srcSet:commaSeparated,start:number,step:null,style:null,tabIndex:number,target:null,title:null,translate:null,type:null,typeMustMatch:boolean,useMap:null,value:booleanish,width:number,wrap:null,align:null,aLink:null,archive:spaceSeparated,axis:null,background:null,bgColor:null,border:number,borderColor:null,bottomMargin:number,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:boolean,declare:boolean,event:null,face:null,frame:null,frameBorder:null,hSpace:number,leftMargin:number,link:null,longDesc:null,lowSrc:null,marginHeight:number,marginWidth:number,noResize:boolean,noHref:boolean,noShade:boolean,noWrap:boolean,object:null,profile:null,prompt:null,rev:null,rightMargin:number,rules:null,scheme:null,scrolling:booleanish,standby:null,summary:null,text:null,topMargin:number,valueType:null,version:null,vAlign:null,vLink:null,vSpace:number,allowTransparency:null,autoCorrect:null,autoSave:null,prefix:null,property:null,results:number,security:null,unselectable:null}})},"./node_modules/rehype-react/node_modules/property-information/lib/svg.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var types=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/types.js"),create=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/create.js"),caseSensitiveTransform=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/case-sensitive-transform.js"),boolean=types.boolean,number=types.number,spaceSeparated=types.spaceSeparated,commaSeparated=types.commaSeparated,commaOrSpaceSeparated=types.commaOrSpaceSeparated;module.exports=create({space:"svg",attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},transform:caseSensitiveTransform,properties:{about:commaOrSpaceSeparated,accentHeight:number,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:number,amplitude:number,arabicForm:null,ascent:number,attributeName:null,attributeType:null,azimuth:number,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:number,by:null,calcMode:null,capHeight:number,className:spaceSeparated,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:number,diffuseConstant:number,direction:null,display:null,dur:null,divisor:number,dominantBaseline:null,download:boolean,dx:null,dy:null,edgeMode:null,editable:null,elevation:number,enableBackground:null,end:null,event:null,exponent:number,externalResourcesRequired:null,fill:null,fillOpacity:number,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:commaSeparated,g2:commaSeparated,glyphName:commaSeparated,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:number,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:number,horizOriginX:number,horizOriginY:number,id:null,ideographic:number,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:number,k:number,k1:number,k2:number,k3:number,k4:number,kernelMatrix:commaOrSpaceSeparated,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:number,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:number,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:number,overlineThickness:number,paintOrder:null,panose1:null,path:null,pathLength:number,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:number,pointsAtY:number,pointsAtZ:number,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:commaOrSpaceSeparated,r:null,radius:null,refX:null,refY:null,rel:commaOrSpaceSeparated,rev:commaOrSpaceSeparated,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:commaOrSpaceSeparated,requiredFeatures:commaOrSpaceSeparated,requiredFonts:commaOrSpaceSeparated,requiredFormats:commaOrSpaceSeparated,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:number,specularExponent:number,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:number,strikethroughThickness:number,string:null,stroke:null,strokeDashArray:commaOrSpaceSeparated,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:number,strokeOpacity:number,strokeWidth:null,style:null,surfaceScale:number,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:commaOrSpaceSeparated,tabIndex:number,tableValues:null,target:null,targetX:number,targetY:number,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:commaOrSpaceSeparated,to:null,transform:null,u1:null,u2:null,underlinePosition:number,underlineThickness:number,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:number,values:null,vAlphabetic:number,vMathematical:number,vectorEffect:null,vHanging:number,vIdeographic:number,version:null,vertAdvY:number,vertOriginX:number,vertOriginY:number,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:number,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null}})},"./node_modules/rehype-react/node_modules/property-information/lib/util/case-insensitive-transform.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var caseSensitiveTransform=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/case-sensitive-transform.js");module.exports=function caseInsensitiveTransform(attributes,property){return caseSensitiveTransform(attributes,property.toLowerCase())}},"./node_modules/rehype-react/node_modules/property-information/lib/util/case-sensitive-transform.js":module=>{"use strict";module.exports=function caseSensitiveTransform(attributes,attribute){return attribute in attributes?attributes[attribute]:attribute}},"./node_modules/rehype-react/node_modules/property-information/lib/util/create.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var normalize=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/normalize.js"),Schema=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/schema.js"),DefinedInfo=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/defined-info.js");module.exports=function create(definition){var prop,info,space=definition.space,mustUseProperty=definition.mustUseProperty||[],attributes=definition.attributes||{},props=definition.properties,transform=definition.transform,property={},normal={};for(prop in props)info=new DefinedInfo(prop,transform(attributes,prop),props[prop],space),-1!==mustUseProperty.indexOf(prop)&&(info.mustUseProperty=!0),property[prop]=info,normal[normalize(prop)]=prop,normal[normalize(info.attribute)]=prop;return new Schema(property,normal,space)}},"./node_modules/rehype-react/node_modules/property-information/lib/util/defined-info.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var Info=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/info.js"),types=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/types.js");function DefinedInfo(property,attribute,mask,space){mark(this,"space",space),Info.call(this,property,attribute),mark(this,"boolean",check(mask,types.boolean)),mark(this,"booleanish",check(mask,types.booleanish)),mark(this,"overloadedBoolean",check(mask,types.overloadedBoolean)),mark(this,"number",check(mask,types.number)),mark(this,"commaSeparated",check(mask,types.commaSeparated)),mark(this,"spaceSeparated",check(mask,types.spaceSeparated)),mark(this,"commaOrSpaceSeparated",check(mask,types.commaOrSpaceSeparated))}function mark(values,key,value){value&&(values[key]=value)}function check(value,mask){return(value&mask)===mask}module.exports=DefinedInfo,DefinedInfo.prototype=new Info,DefinedInfo.prototype.defined=!0},"./node_modules/rehype-react/node_modules/property-information/lib/util/info.js":module=>{"use strict";module.exports=Info;var proto=Info.prototype;function Info(property,attribute){this.property=property,this.attribute=attribute}proto.space=null,proto.attribute=null,proto.property=null,proto.boolean=!1,proto.booleanish=!1,proto.overloadedBoolean=!1,proto.number=!1,proto.commaSeparated=!1,proto.spaceSeparated=!1,proto.commaOrSpaceSeparated=!1,proto.mustUseProperty=!1,proto.defined=!1},"./node_modules/rehype-react/node_modules/property-information/lib/util/merge.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var xtend=__webpack_require__("./node_modules/xtend/immutable.js"),Schema=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/schema.js");module.exports=function merge(definitions){var info,space,length=definitions.length,property=[],normal=[],index=-1;for(;++index<length;)info=definitions[index],property.push(info.property),normal.push(info.normal),space=info.space;return new Schema(xtend.apply(null,property),xtend.apply(null,normal),space)}},"./node_modules/rehype-react/node_modules/property-information/lib/util/schema.js":module=>{"use strict";module.exports=Schema;var proto=Schema.prototype;function Schema(property,normal,space){this.property=property,this.normal=normal,space&&(this.space=space)}proto.space=null,proto.normal={},proto.property={}},"./node_modules/rehype-react/node_modules/property-information/lib/util/types.js":(__unused_webpack_module,exports)=>{"use strict";var powers=0;function increment(){return Math.pow(2,++powers)}exports.boolean=increment(),exports.booleanish=increment(),exports.overloadedBoolean=increment(),exports.number=increment(),exports.spaceSeparated=increment(),exports.commaSeparated=increment(),exports.commaOrSpaceSeparated=increment()},"./node_modules/rehype-react/node_modules/property-information/lib/xlink.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var create=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/create.js");module.exports=create({space:"xlink",transform:function xlinkTransform(_,prop){return"xlink:"+prop.slice(5).toLowerCase()},properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}})},"./node_modules/rehype-react/node_modules/property-information/lib/xml.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var create=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/create.js");module.exports=create({space:"xml",transform:function xmlTransform(_,prop){return"xml:"+prop.slice(3).toLowerCase()},properties:{xmlLang:null,xmlBase:null,xmlSpace:null}})},"./node_modules/rehype-react/node_modules/property-information/lib/xmlns.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var create=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/create.js"),caseInsensitiveTransform=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/case-insensitive-transform.js");module.exports=create({space:"xmlns",attributes:{xmlnsxlink:"xmlns:xlink"},transform:caseInsensitiveTransform,properties:{xmlns:null,xmlnsXLink:null}})},"./node_modules/rehype-react/node_modules/property-information/normalize.js":module=>{"use strict";module.exports=function normalize(value){return value.toLowerCase().replace(/\b[:-]\b/g,"")}},"./node_modules/rehype-react/node_modules/property-information/svg.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var merge=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/util/merge.js"),xlink=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/xlink.js"),xml=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/xml.js"),xmlns=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/xmlns.js"),aria=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/aria.js"),svg=__webpack_require__("./node_modules/rehype-react/node_modules/property-information/lib/svg.js");module.exports=merge([xml,xlink,xmlns,aria,svg])},"./node_modules/remark-parse/lib/util/get-indentation.js":module=>{"use strict";module.exports=function indentation(value){var size,index=0,indent=0,character=value.charAt(index),stops={},lastIndent=0;for(;character===tab||character===space;){for(indent+=size=character===tab?tabSize:spaceSize,size>1&&(indent=Math.floor(indent/size)*size);lastIndent<indent;)stops[++lastIndent]=index;character=value.charAt(++index)}return{indent,stops}};var tab="\t",space=" ",spaceSize=1,tabSize=4},"./node_modules/remark-parse/lib/util/remove-indentation.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var trim=__webpack_require__("./node_modules/trim/index.js"),repeat=__webpack_require__("./node_modules/repeat-string/index.js"),getIndent=__webpack_require__("./node_modules/remark-parse/lib/util/get-indentation.js");module.exports=function indentation(value,maximum){var index,indentation,stops,values=value.split(lineFeed),position=values.length+1,minIndent=1/0,matrix=[];values.unshift(repeat(space,maximum)+exclamationMark);for(;position--;)if(indentation=getIndent(values[position]),matrix[position]=indentation.stops,0!==trim(values[position]).length){if(!indentation.indent){minIndent=1/0;break}indentation.indent>0&&indentation.indent<minIndent&&(minIndent=indentation.indent)}if(minIndent!==1/0)for(position=values.length;position--;){for(stops=matrix[position],index=minIndent;index&&!(index in stops);)index--;values[position]=values[position].slice(stops[index]+1)}return values.shift(),values.join(lineFeed)};var lineFeed="\n",space=" ",exclamationMark="!"},"./node_modules/remark-rehype/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var mdast2hast=__webpack_require__("./node_modules/mdast-util-to-hast/index.js");module.exports=function remark2rehype(destination,options){destination&&!destination.process&&(options=destination,destination=null);return destination?function bridge(destination,options){return transformer;function transformer(node,file,next){function done(err){next(err)}destination.run(mdast2hast(node,options),file,done)}}(destination,options):function mutate(options){return transformer;function transformer(node){return mdast2hast(node,options)}}(options)}},"./node_modules/repeat-string/index.js":module=>{"use strict";var cache,res="";module.exports=function repeat(str,num){if("string"!=typeof str)throw new TypeError("expected a string");if(1===num)return str;if(2===num)return str+str;var max=str.length*num;if(cache!==str||void 0===cache)cache=str,res="";else if(res.length>=max)return res.substr(0,max);for(;max>res.length&&num>1;)1&num&&(res+=str),num>>=1,str+=str;return res=(res+=str).substr(0,max)}},"./node_modules/space-separated-tokens/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var trim=__webpack_require__("./node_modules/trim/index.js");exports.parse=function parse(value){var input=trim(String(value||empty));return input===empty?[]:input.split(whiteSpace)},exports.stringify=function stringify(values){return trim(values.join(space))};var empty="",space=" ",whiteSpace=/[ \t\n\r\f]+/g},"./node_modules/style-to-object/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{var parse=__webpack_require__("./node_modules/css/lib/parse/index.js");module.exports=function parseInlineStyle(style,iterator){if(!style||"string"!=typeof style)return null;for(var declaration,property,value,declarations=parse("p{"+style+"}").stylesheet.rules[0].declarations,output=null,hasIterator="function"==typeof iterator,i=0,len=declarations.length;i<len;i++)property=(declaration=declarations[i]).property,value=declaration.value,hasIterator?iterator(property,value,declaration):value&&(output||(output={}),output[property]=value);return output}},"./node_modules/trim-lines/index.js":module=>{"use strict";module.exports=function trimLines(value){return String(value).replace(ws,newline)};var ws=/[ \t]*\n+[ \t]*/g,newline="\n"},"./node_modules/trim/index.js":(module,exports)=>{(exports=module.exports=function trim(str){return str.replace(/^\s*|\s*$/g,"")}).left=function(str){return str.replace(/^\s*/,"")},exports.right=function(str){return str.replace(/\s*$/,"")}},"./node_modules/unist-builder/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var assign=__webpack_require__("./node_modules/object-assign/index.js");module.exports=function u(type,props,value){var node;null!=value||"object"==typeof props&&!Array.isArray(props)||(value=props,props={});node=assign({type:String(type)},props),Array.isArray(value)?node.children=value:null!=value&&(node.value=String(value));return node}},"./node_modules/unist-util-generated/index.js":module=>{"use strict";function optional(value){return value&&"object"==typeof value?value:{}}module.exports=function generated(node){var position=optional(optional(node).position),start=optional(position.start),end=optional(position.end);return!(start.line&&start.column&&end.line&&end.column)}},"./node_modules/unist-util-is/index.js":module=>{"use strict";function convert(test){if("string"==typeof test)return function typeFactory(test){return type;function type(node){return Boolean(node&&node.type===test)}}(test);if(null==test)return ok;if("object"==typeof test)return("length"in test?anyFactory:matchesFactory)(test);if("function"==typeof test)return test;throw new Error("Expected function, string, or object as test")}function matchesFactory(test){return function matches(node){var key;for(key in test)if(node[key]!==test[key])return!1;return!0}}function anyFactory(tests){var checks=function convertAll(tests){for(var results=[],length=tests.length,index=-1;++index<length;)results[index]=convert(tests[index]);return results}(tests),length=checks.length;return function matches(){var index=-1;for(;++index<length;)if(checks[index].apply(this,arguments))return!0;return!1}}function ok(){return!0}module.exports=function is(test,node,index,parent,context){var hasParent=null!=parent,hasIndex=null!=index,check=convert(test);if(hasIndex&&("number"!=typeof index||index<0||index===1/0))throw new Error("Expected positive finite index or child node");if(hasParent&&(!is(null,parent)||!parent.children))throw new Error("Expected parent node");if(!node||!node.type||"string"!=typeof node.type)return!1;if(hasParent!==hasIndex)throw new Error("Expected both parent and index");return Boolean(check.call(context,node,index,parent))}},"./node_modules/unist-util-position/index.js":(__unused_webpack_module,exports)=>{"use strict";var position=exports;function factory(type){return point.displayName=type,point;function point(node){var point=node&&node.position&&node.position[type]||{};return{line:point.line||null,column:point.column||null,offset:isNaN(point.offset)?null:point.offset}}}position.start=factory("start"),position.end=factory("end")},"./node_modules/unist-util-visit-parents/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=visitParents;var is=__webpack_require__("./node_modules/unist-util-is/index.js"),SKIP="skip",EXIT=!1;function visitParents(tree,test,visitor,reverse){function one(node,index,parents){var result;return(test&&!is(test,node,index,parents[parents.length-1]||null)||(result=visitor(node,parents))!==EXIT)&&node.children&&result!==SKIP&&function all(children,parents){var child,result,min=-1,step=reverse?-1:1,index=(reverse?children.length:min)+step;for(;index>min&&index<children.length;){if((result=(child=children[index])&&one(child,index,parents))===EXIT)return result;index="number"==typeof result?result:index+step}}(node.children,parents.concat(node))===EXIT?EXIT:result}"function"==typeof test&&"function"!=typeof visitor&&(reverse=visitor,visitor=test,test=null),one(tree,null,[])}visitParents.CONTINUE=!0,visitParents.SKIP=SKIP,visitParents.EXIT=EXIT},"./node_modules/unist-util-visit/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=visit;var visitParents=__webpack_require__("./node_modules/unist-util-visit-parents/index.js"),CONTINUE=visitParents.CONTINUE,SKIP=visitParents.SKIP,EXIT=visitParents.EXIT;function visit(tree,test,visitor,reverse){"function"==typeof test&&"function"!=typeof visitor&&(reverse=visitor,visitor=test,test=null),visitParents(tree,test,(function overload(node,parents){var parent=parents[parents.length-1],index=parent?parent.children.indexOf(node):null;return visitor(node,index,parent)}),reverse)}visit.CONTINUE=CONTINUE,visit.SKIP=SKIP,visit.EXIT=EXIT},"./node_modules/xtend/immutable.js":module=>{module.exports=function extend(){for(var target={},i=0;i<arguments.length;i++){var source=arguments[i];for(var key in source)hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};var hasOwnProperty=Object.prototype.hasOwnProperty},"./node_modules/web-namespaces/index.json":module=>{"use strict";module.exports=JSON.parse('{"html":"http://www.w3.org/1999/xhtml","mathml":"http://www.w3.org/1998/Math/MathML","svg":"http://www.w3.org/2000/svg","xlink":"http://www.w3.org/1999/xlink","xml":"http://www.w3.org/XML/1998/namespace","xmlns":"http://www.w3.org/2000/xmlns/"}')}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,