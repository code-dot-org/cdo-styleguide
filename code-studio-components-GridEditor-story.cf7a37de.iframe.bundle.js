(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1834],{"./src/bounce/tiles.js":(__unused_webpack_module,exports)=>{exports.Direction={NORTH:0,EAST:1,SOUTH:2,WEST:3},exports.PADDLE_BALL_COLLIDE_DISTANCE=.7,exports.FINISH_COLLIDE_DISTANCE=.5,exports.DEFAULT_BALL_SPEED=.1,exports.DEFAULT_BALL_DIRECTION=1.25*Math.PI,exports.DEFAULT_PADDLE_SPEED=.1,exports.DEFAULT_BALL_START_Y=2,exports.Y_TOP_BOUNDARY=-.2,exports.SquareType={OPEN:0,WALL:1,GOAL:2,BALLSTART:4,PADDLEFINISH:8,PADDLESTART:16,BALLFINISH:32,OBSTACLE:64}},"./src/code-studio/components/BeeCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var BeeCell=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js").cells.BeeCell,BeeCellEditor=function(_CellEditor){function BeeCellEditor(){return _CellEditor.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BeeCellEditor,_CellEditor);var _proto=BeeCellEditor.prototype;return _proto.getSelectFieldNames=function getSelectFieldNames(){return _CellEditor.prototype.getSelectFieldNames.call(this).concat(["featureType","cloudType","flowerColor"])},_proto.getSanitizedValues=function getSanitizedValues(){var values=_CellEditor.prototype.getSanitizedValues.call(this);return this.props.cell.isVariableCloud()&&(values.featureType=BeeCell.FeatureType.VARIABLE),"undefined"===values.featureType&&(values.value="",values.range=""),this.props.cell.isFlower()||(values.flowerColor=""),values},_proto.renderFields=function renderFields(values){return _react.default.createElement("div",null,_CellEditor.prototype.renderFields.call(this,values),_react.default.createElement("label",{htmlFor:"featureType"},"Feature Type:"),_react.default.createElement("select",{name:"featureType",value:values.featureType,disabled:this.props.cell.isVariableCloud(),onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"none"),_react.default.createElement("option",{value:BeeCell.FeatureType.HIVE},"hive"),_react.default.createElement("option",{value:BeeCell.FeatureType.FLOWER},"flower"),_react.default.createElement("option",{value:BeeCell.FeatureType.VARIABLE},"variable")),_react.default.createElement("label",{htmlFor:"cloudType"},"Cloud Type:"),_react.default.createElement("select",{name:"cloudType",value:values.cloudType,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"none"),_react.default.createElement("option",{value:BeeCell.CloudType.STATIC},"classic"),_react.default.createElement("option",{value:BeeCell.CloudType.HIVE_OR_FLOWER},"hive or flower"),_react.default.createElement("option",{value:BeeCell.CloudType.FLOWER_OR_NOTHING},"flower or nothing"),_react.default.createElement("option",{value:BeeCell.CloudType.HIVE_OR_NOTHING},"hive or nothing"),_react.default.createElement("option",{value:BeeCell.CloudType.ANY},"any")),_react.default.createElement("label",{htmlFor:"flowerColor"},"Flower Color:"),_react.default.createElement("select",{name:"flowerColor",value:values.flowerColor,disabled:!this.props.cell.isFlower(),onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),_react.default.createElement("option",{value:BeeCell.FlowerColor.RED},"red"),_react.default.createElement("option",{value:BeeCell.FlowerColor.PURPLE},"purple")))},BeeCellEditor}(_CellEditor2.default);exports.default=BeeCellEditor,module.exports=exports.default},"./src/code-studio/components/BounceCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx")),_tiles=__webpack_require__("./src/bounce/tiles.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var BounceCellEditor=function(_CellEditor){function BounceCellEditor(){return _CellEditor.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BounceCellEditor,_CellEditor),BounceCellEditor.prototype.renderFields=function renderFields(values){return _react.default.createElement("div",null,_CellEditor.prototype.renderTileTypes.call(this,values,_tiles.SquareType))},BounceCellEditor}(_CellEditor2.default);exports.default=BounceCellEditor,module.exports=exports.default},"./src/code-studio/components/CellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SquareType=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js").tiles.SquareType,CellEditor=function(_React$Component){function CellEditor(props){var _this;return(_this=_React$Component.call(this,props)||this).handleChange=_this.handleChange.bind(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this)),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CellEditor,_React$Component);var _proto=CellEditor.prototype;return _proto.handleChange=function handleChange(){var formData=new FormData(this.form),values=Array.from(formData).reduce((function(serialized,_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],value=_ref2[1];return value="undefined"===value?void 0:isNaN(value)?"":Number(value),name in serialized?Array.isArray(serialized[name])?serialized[name].push(value):serialized[name]=[serialized[name],value]:serialized[name]=value,serialized}),{});this.props.onUpdate(values)},_proto.getSelectFieldNames=function getSelectFieldNames(){return["tileType"]},_proto.getSanitizedValues=function getSanitizedValues(){var values=this.props.cell.serialize();return this.getSelectFieldNames().forEach((function(value){void 0===values[value]&&(values[value]="undefined")})),values},_proto.renderTileTypes=function renderTileTypes(values){var squareTypes=arguments.length>1&&void 0!==arguments[1]?arguments[1]:SquareType;return _react.default.createElement("div",null,_react.default.createElement("label",{htmlFor:"tileType"},"Tile Type (required):"),_react.default.createElement("select",{name:"tileType",value:values.tileType,onChange:this.handleChange},Object.keys(squareTypes).map((function(key){return _react.default.createElement("option",{key,value:squareTypes[key]},key.toLowerCase())}))))},_proto.renderFields=function renderFields(values){return _react.default.createElement("div",null,this.renderTileTypes(values),_react.default.createElement("label",{htmlFor:"value"},"Value:"),_react.default.createElement("input",{type:"number",name:"value",value:values.value,onChange:this.handleChange}),_react.default.createElement("label",{htmlFor:"range"},"Range (defaults to value):"),_react.default.createElement("input",{type:"number",name:"range",value:values.range,disabled:"undefined"===values.featureType,onChange:this.handleChange}))},_proto.render=function render(){var _this2=this;return _react.default.createElement("form",{className:"span4 offset1",ref:function ref(form){_this2.form=form}},_react.default.createElement("header",null,_react.default.createElement("strong",null,"Editing Cell (",this.props.row,", ",this.props.col,")")),this.renderFields(this.getSanitizedValues()))},CellEditor}(_react.default.Component);exports.default=CellEditor,function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(CellEditor,"propTypes",{cell:_propTypes.default.object.isRequired,row:_propTypes.default.number.isRequired,col:_propTypes.default.number.isRequired,onUpdate:_propTypes.default.func.isRequired}),module.exports=exports.default},"./src/code-studio/components/Grid.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _studioTiles,_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/studio/constants.js"),_maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var studioTiles=(_defineProperty(_studioTiles={},_constants.SquareType.OPEN,"none"),_defineProperty(_studioTiles,_constants.SquareType.SPRITEFINISH,"goal"),_defineProperty(_studioTiles,_constants.SquareType.SPRITESTART,"sprite"),_studioTiles),studioAvatarList=["dog","cat","penguin","dinosaur","octopus","witch","bat","bird","dragon","squirrel","wizard","alien","ghost","monster","robot","unicorn","zombie","knight","ninja","pirate","caveboy","cavegirl","princess","spacebot","soccergirl","soccerboy","tennisgirl","tennisboy"],karelTiles=["border","path","start","end","obstacle"],beeConditions=["","flower-or-hive","flower-or-nothing","hive-or-nothing","flower-hive-or-nothing"],beeFeatures=["hive","flower"],Cell=function(_React$Component){function Cell(){return _React$Component.apply(this,arguments)||this}return _inheritsLoose(Cell,_React$Component),Cell.prototype.render=function render(){var text,cell=this.props.cell,classNames=[],tdStyle={};if(this.props.selected&&classNames.push("selected"),this.props.highlighted&&classNames.push("highlighted"),"playlab"===this.props.skin)classNames.push("playlab",studioTiles[cell.getTileType()]),cell.getTileType()===_constants.SquareType.SPRITESTART&&void 0!==cell.sprite_&&(tdStyle.backgroundImage="url('/blockly/media/skins/studio/"+studioAvatarList[cell.sprite_]+"_spritesheet_200px.png')");else if("starwarsgrid"===this.props.skin)if(1===cell.tileType_)tdStyle.backgroundImage="url('/blockly/media/skins/hoc2015x/goal.png')";else if(16===cell.tileType_)tdStyle.backgroundImage="url('/blockly/media/skins/hoc2015x/instructions_bb8.png')",tdStyle.backgroundSize="cover";else{text=_constants.WallTypeMask&cell.tileType_?"2x":"";var x=(_constants.WallCoordColMask&cell.tileType_)>>_constants.WallCoordColShift,y=(_constants.WallCoordRowMask&cell.tileType_)>>_constants.WallCoordRowShift;tdStyle.backgroundImage="url('/blockly/media/skins/hoc2015x/tiles_background1.png')",tdStyle.backgroundSize="800% 800%",tdStyle.backgroundPosition="-".concat(48*x,"px -").concat(38*y,"px")}else if("bounce"===this.props.skin){if(cell.tileType_){var image=["tiles_wall","goal","ball","paddle","paddle","ball","obstacle"][Math.log2(cell.tileType_)];tdStyle.backgroundImage="url('/blockly/media/skins/bounce/".concat(image,".png')")}}else{if(classNames.push(karelTiles[cell.tileType_]),_maze.utils.isBeeSkin(this.props.skin))cell.isVariableCloud()?(classNames.push("conditional"),classNames.push(beeConditions[cell.cloudType_])):void 0!==cell.featureType_&&classNames.push(beeFeatures[cell.featureType_]);else if(cell.isDirt()){classNames.push("dirt");var dirtValue=cell.getCurrentValue(),dirtIndex=10+dirtValue+(dirtValue<0?1:0);tdStyle.backgroundPosition=50*-dirtIndex}void 0!==cell.originalValue_&&null!==cell.originalValue_&&(text=cell.originalValue_.toString(),cell.range_&&cell.range_>cell.originalValue_&&(text+=" - "+cell.range_.toString()))}return _react.default.createElement("td",{className:classNames.join(" "),onClick:this.props.onClick.bind(null,this.props.row,this.props.col),onMouseDown:this.props.onMouseDown.bind(null,this.props.row,this.props.col),onMouseOver:this.props.onMouseOver.bind(null,this.props.row,this.props.col),onMouseUp:this.props.onMouseUp.bind(null,this.props.row,this.props.col),style:tdStyle},text)},Cell}(_react.default.Component);_defineProperty(Cell,"propTypes",{cell:_propTypes.default.object.isRequired,row:_propTypes.default.number.isRequired,col:_propTypes.default.number.isRequired,selected:_propTypes.default.bool.isRequired,onClick:_propTypes.default.func.isRequired,onMouseDown:_propTypes.default.func.isRequired,onMouseOver:_propTypes.default.func.isRequired,onMouseUp:_propTypes.default.func.isRequired,skin:_propTypes.default.string.isRequired,highlighted:_propTypes.default.bool});var Grid=function(_React$Component2){function Grid(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_assertThisInitialized(_this=_React$Component2.call.apply(_React$Component2,[this].concat(args))||this),"state",{}),_defineProperty(_assertThisInitialized(_this),"beginDrag",(function(row,col){_this.setState({dragging:!0,dragStart:{row,col}})})),_defineProperty(_assertThisInitialized(_this),"moveDrag",(function(row,col){_this.state.dragging&&_this.setState({dragCurrent:{row,col}})})),_defineProperty(_assertThisInitialized(_this),"endDrag",(function(row,col){var dragStart=_this.state.dragStart;if(_this.setState({dragging:!1,dragStart:null,dragCurrent:null}),dragStart&&(dragStart.row!==row||dragStart.col!==col)){var top=Math.min(dragStart.row,row),left=Math.min(dragStart.col,col),bottom=Math.max(dragStart.row,row),right=Math.max(dragStart.col,col),cells=_this.props.cells.slice(top,bottom+1).map((function(row){return row.slice(left,right+1).map((function(cell){return cell.serialize()}))}));_this.props.setCopiedCells(cells)}})),_this}_inheritsLoose(Grid,_React$Component2);var _proto2=Grid.prototype;return _proto2.isHighlighting=function isHighlighting(row,col){return!(!this.state.dragging||!this.state.dragCurrent)&&(row>=Math.min(this.state.dragStart.row,this.state.dragCurrent.row)&&row<=Math.max(this.state.dragStart.row,this.state.dragCurrent.row)&&col>=Math.min(this.state.dragStart.col,this.state.dragCurrent.col)&&col<=Math.max(this.state.dragStart.col,this.state.dragCurrent.col))},_proto2.render=function render(){var _this2=this,tableRows=this.props.cells.map((function(row,x){var tableDatas=row.map((function(cell,y){var selected=_this2.props.selectedRow===x&&_this2.props.selectedCol===y;return _react.default.createElement(Cell,{key:"cell-"+x+"-"+y,cell,row:x,col:y,selected,highlighted:_this2.isHighlighting(x,y),onClick:_this2.props.onSelectionChange,onMouseDown:_this2.beginDrag,onMouseOver:_this2.moveDrag,onMouseUp:_this2.endDrag,skin:_this2.props.skin})}));return _react.default.createElement("tr",{key:"row-"+x},tableDatas)}));return _react.default.createElement("table",null,_react.default.createElement("tbody",null,tableRows))},Grid}(_react.default.Component);exports.default=Grid,_defineProperty(Grid,"propTypes",{cells:_propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.object)).isRequired,selectedRow:_propTypes.default.number,selectedCol:_propTypes.default.number,skin:_propTypes.default.string.isRequired,onSelectionChange:_propTypes.default.func.isRequired,setCopiedCells:_propTypes.default.func.isRequired}),module.exports=exports.default},"./src/code-studio/components/GridEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var StudioCell=__webpack_require__("./src/studio/cell.js"),HarvesterCellEditor=__webpack_require__("./src/code-studio/components/HarvesterCellEditor.jsx"),PlanterCellEditor=__webpack_require__("./src/code-studio/components/PlanterCellEditor.jsx"),BeeCellEditor=__webpack_require__("./src/code-studio/components/BeeCellEditor.jsx"),CellEditor=__webpack_require__("./src/code-studio/components/CellEditor.jsx"),StudioCellEditor=__webpack_require__("./src/code-studio/components/StudioCellEditor.jsx"),StarWarsGridCellEditor=__webpack_require__("./src/code-studio/components/StarWarsGridCellEditor.jsx"),BounceCellEditor=__webpack_require__("./src/code-studio/components/BounceCellEditor.jsx"),Grid=__webpack_require__("./src/code-studio/components/Grid.jsx"),CellJSON=function(_React$Component){function CellJSON(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_assertThisInitialized(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"handleChange",(function(event){_this.props.onChange(JSON.parse(event.target.value))})),_this}_inheritsLoose(CellJSON,_React$Component);var _proto=CellJSON.prototype;return _proto.componentDidUpdate=function componentDidUpdate(){var node=this.refs.serializedInput;node.focus(),node.select()},_proto.render=function render(){return _react.default.createElement("label",null,"Cell JSON (for copy/pasting):",_react.default.createElement("input",{type:"text",value:JSON.stringify(this.props.serialization),ref:"serializedInput",onChange:this.handleChange}))},CellJSON}(_react.default.Component);_defineProperty(CellJSON,"propTypes",{serialization:_propTypes.default.object.isRequired,onChange:_propTypes.default.func.isRequired});var GridEditor=function(_React$Component2){function GridEditor(props){var _this2,_cells;_defineProperty(_assertThisInitialized(_this2=_React$Component2.call(this,props)||this),"changeSelection",(function(row,col){_this2.setState({selectedRow:row,selectedCol:col})})),_defineProperty(_assertThisInitialized(_this2),"handleCellChange",(function(newSerializedCellData){var row=_this2.state.selectedRow,col=_this2.state.selectedCol;_this2.updateCells(row,col,[[newSerializedCellData]])})),_defineProperty(_assertThisInitialized(_this2),"pasteCopiedCells",(function(){var copiedCells=_this2.state.copiedCells,row=_this2.state.selectedRow,col=_this2.state.selectedCol;_this2.updateCells(row,col,copiedCells)})),_defineProperty(_assertThisInitialized(_this2),"setCopiedCells",(function(cells){_this2.setState({copiedCells:cells})})),_defineProperty(_assertThisInitialized(_this2),"computeNumMaps",(function(grid){if("playlab"===_this2.props.skin||"starwarsgrid"===_this2.props.skin)return 1;var numMaps=1;return grid.forEach((function(row){row.forEach((function(cell){var numPossibilitiesForCell=cell.getPossibleGridAssets().length;numMaps*=numPossibilitiesForCell}))})),numMaps}));var cellClass=_this2.getCellClass();return _cells=props.serializedMaze?props.serializedMaze.map((function(row){return row.map(cellClass.deserialize)})):props.maze.map((function(row,x){return row.map((function(mazeCell,y){var initialDirtCell=props.initialDirt[x][y];return cellClass.parseFromOldValues(mazeCell,initialDirtCell)}))})),_this2.state={cells:_cells},_this2}_inheritsLoose(GridEditor,_React$Component2);var _proto2=GridEditor.prototype;return _proto2.getCellClass=function getCellClass(){return"playlab"===this.props.skin||"starwarsgrid"===this.props.skin?StudioCell:_maze.utils.isBeeSkin(this.props.skin)?_maze.cells.BeeCell:_maze.utils.isHarvesterSkin(this.props.skin)?_maze.cells.HarvesterCell:_maze.utils.isPlanterSkin(this.props.skin)?_maze.cells.PlanterCell:_maze.cells.Cell},_proto2.getEditorClass=function getEditorClass(){return"bounce"===this.props.skin?BounceCellEditor:"playlab"===this.props.skin?StudioCellEditor:"starwarsgrid"===this.props.skin?StarWarsGridCellEditor:_maze.utils.isBeeSkin(this.props.skin)?BeeCellEditor:_maze.utils.isHarvesterSkin(this.props.skin)?HarvesterCellEditor:_maze.utils.isPlanterSkin(this.props.skin)?PlanterCellEditor:CellEditor},_proto2.updateCells=function updateCells(row,col,newCells){var _this3=this;if(void 0!==newCells&&void 0!==row&&void 0!==col){var cells=this.state.cells;newCells.forEach((function(newRow,i){newRow.forEach((function(cell,j){cells[row+i]&&cells[row+i][col+j]&&(cells[row+i][col+j]=_this3.getCellClass().deserialize(cell))}))}));var serializedData=cells.map((function(row){return row.map((function(cell){return cell.serialize()}))}));this.props.onUpdate(serializedData),this.setState({cells})}},_proto2.render=function render(){var cellEditor,selectedCellJson,pasteButton,cells=this.state.cells,row=this.state.selectedRow,col=this.state.selectedCol;if(cells[row]&&cells[row][col]){var cell=cells[row][col],EditorClass=this.getEditorClass();cellEditor=_react.default.createElement(EditorClass,{cell,row,col,onUpdate:this.handleCellChange}),selectedCellJson=_react.default.createElement(CellJSON,{serialization:cell.serialize(),onChange:this.handleCellChange}),this.state.copiedCells&&(pasteButton=_react.default.createElement("button",{type:"button",onClick:this.pasteCopiedCells},"Paste Selected "+this.state.copiedCells.length+"x"+this.state.copiedCells[0].length+" Cells"))}var numMaps=this.computeNumMaps(cells);return _react.default.createElement("div",{className:"row"},_react.default.createElement("div",{className:"span5"},_react.default.createElement(Grid,{cells,selectedRow:this.state.selectedRow,selectedCol:this.state.selectedCol,skin:this.props.skin,setCopiedCells:this.setCopiedCells,onSelectionChange:this.changeSelection}),numMaps>1&&_react.default.createElement("p",null,"This configuration will generate ".concat(numMaps," maps.\n            We run student code against each possible map, so if this number is large,\n            performance will suffer.")),selectedCellJson,pasteButton),cellEditor)},GridEditor}(_react.default.Component);exports.default=GridEditor,_defineProperty(GridEditor,"propTypes",{serializedMaze:_propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.object)),maze:_propTypes.default.arrayOf(_propTypes.default.array),initialDirt:_propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.number)),skin:_propTypes.default.string.isRequired,onUpdate:_propTypes.default.func.isRequired}),window.dashboard=window.dashboard||{},window.dashboard.GridEditor=GridEditor,module.exports=exports.default},"./src/code-studio/components/HarvesterCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var HarvesterCell=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js").cells.HarvesterCell,PlanterCellEditor=function(_CellEditor){function PlanterCellEditor(){return _CellEditor.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(PlanterCellEditor,_CellEditor),PlanterCellEditor.prototype.renderFields=function renderFields(values){return _react.default.createElement("div",null,_CellEditor.prototype.renderFields.call(this,values),_react.default.createElement("label",{htmlFor:"possibleFeatures"},"Possible Features:"),Object.keys(HarvesterCell.FeatureType).map((function(type){var value=HarvesterCell.FeatureType[type];return _react.default.createElement("label",{className:"checkbox",key:type},_react.default.createElement("input",{type:"checkbox",name:"possibleFeatures",value,checked:values.possibleFeatures.includes(value),onChange:this.handleChange}),type)}),this),_react.default.createElement("label",{htmlFor:"startsHidden"},"Starts Hidden:"),_react.default.createElement("input",{style:{margin:0},type:"checkbox",name:"startsHidden",checked:values.startsHidden,value:1,onChange:this.handleChange}))},PlanterCellEditor}(_CellEditor2.default);exports.default=PlanterCellEditor,module.exports=exports.default},"./src/code-studio/components/PlanterCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx")),_maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var PlanterCell=_maze.cells.PlanterCell,SquareType=_maze.tiles.SquareType,PlanterCellEditor=function(_CellEditor){function PlanterCellEditor(){return _CellEditor.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(PlanterCellEditor,_CellEditor);var _proto=PlanterCellEditor.prototype;return _proto.getSelectFieldNames=function getSelectFieldNames(){return["tileType","featureType"]},_proto.renderFields=function renderFields(values){return _react.default.createElement("div",null,this.renderTileTypes(values),_react.default.createElement("label",{htmlFor:"featureType"},"Feature Type:"),_react.default.createElement("select",{name:"featureType",value:values.featureType,disabled:this.props.cell.getTile()!==SquareType.OPEN,onChange:this.handleChange},Object.keys(PlanterCell.FeatureType).map((function(type){return _react.default.createElement("option",{key:type,value:PlanterCell.FeatureType[type]},type.toLowerCase())}))))},PlanterCellEditor}(_CellEditor2.default);exports.default=PlanterCellEditor,module.exports=exports.default},"./src/code-studio/components/StarWarsGridCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/studio/constants.js"),_tileGuide=_interopRequireDefault(__webpack_require__("./static/code_studio/tile-guide.png")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var options={empty:0,start:16,goal:1,crate_1:65536,crate_2:1048576,crate_3:131072,canister:1179648,covered_crates_1a:262144,covered_crates_1b:1310720,covered_crates_2a:2359296,covered_crates_2b:2424832,covered_crates_3a:3407872,covered_crates_3b:3473408},startDirections={"-":_constants.Direction.NONE,East:_constants.Direction.EAST,West:_constants.Direction.WEST,North:_constants.Direction.NORTH,South:_constants.Direction.SOUTH},StarWarsGridCellEditor=function(_CellEditor){function StarWarsGridCellEditor(){return _CellEditor.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(StarWarsGridCellEditor,_CellEditor);var _proto=StarWarsGridCellEditor.prototype;return _proto.handleChange=function handleChange(){var zoom=this.zoom&&this.zoom.checked,direction=this.direction?+this.direction.value:void 0;this.props.onUpdate({tileType:zoom<<_constants.WallTypeShift|this.type.value,direction})},_proto.render=function render(){var _this=this,type=~_constants.WallTypeMask&this.props.cell.tileType_,zoom=_constants.WallTypeMask&this.props.cell.tileType_;return _react.default.createElement("form",{className:"span4 offset1"},_react.default.createElement("img",{src:_tileGuide.default,alt:""}),_react.default.createElement("header",null,_react.default.createElement("strong",null,"Editing Cell (",this.props.row,", ",this.props.col,")")),_react.default.createElement("label",{htmlFor:"tileType"},"Tile Type (required):"),_react.default.createElement("select",{ref:function ref(c){_this.type=c},name:"tileType",value:type,onChange:this.handleChange},Object.entries(options).map((function(_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],value=_ref2[1];return _react.default.createElement("option",{value,key:value},name)}))),type>65535&&_react.default.createElement("span",null,_react.default.createElement("label",{htmlFor:"zoom"},"Double size:"),_react.default.createElement("input",{ref:function ref(c){_this.zoom=c},name:"zoom",type:"checkbox",checked:zoom,onChange:this.handleChange})),type===_constants.SquareType.SPRITESTART&&_react.default.createElement("span",null,_react.default.createElement("label",{htmlFor:"direction"},"Start direction:"),_react.default.createElement("select",{ref:function ref(c){_this.direction=c},name:"direction",value:this.props.cell.direction_,onChange:this.handleChange},Object.entries(startDirections).map((function(_ref3){var _ref4=_slicedToArray(_ref3,2),name=_ref4[0],value=_ref4[1];return _react.default.createElement("option",{value,key:value},name)})))))},StarWarsGridCellEditor}(_CellEditor2.default);exports.default=StarWarsGridCellEditor,module.exports=exports.default},"./src/code-studio/components/StudioCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _constants=__webpack_require__("./src/studio/constants.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var avatarList=["dog","cat","penguin","dinosaur","octopus","witch","bat","bird","dragon","squirrel","wizard","alien","ghost","monster","robot","unicorn","zombie","knight","ninja","pirate","caveboy","cavegirl","princess","spacebot","soccergirl","soccerboy","tennisgirl","tennisboy"],usedSquareTypes={OPEN:_constants.SquareType.OPEN,GOAL:_constants.SquareType.SPRITEFINISH,START:_constants.SquareType.SPRITESTART},StudioCellEditor=function(_CellEditor){function StudioCellEditor(){return _CellEditor.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(StudioCellEditor,_CellEditor);var _proto=StudioCellEditor.prototype;return _proto.getSelectFieldNames=function getSelectFieldNames(){return _CellEditor.prototype.getSelectFieldNames.call(this).concat(["speed","size","direction","emotion","sprite"])},_proto.renderFields=function renderFields(values){return _react.default.createElement("div",null,_CellEditor.prototype.renderTileTypes.call(this,values,usedSquareTypes),values.tileType===_constants.SquareType.SPRITESTART&&_react.default.createElement("div",null,_react.default.createElement("label",{htmlFor:"sprite"},"Sprite:"),_react.default.createElement("select",{name:"sprite",value:values.sprite,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),avatarList.map((function(sprite,i){return _react.default.createElement("option",{key:sprite,value:i},sprite)}))),_react.default.createElement("label",{htmlFor:"speed"},"Speed: "),_react.default.createElement("select",{name:"speed",value:values.speed,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),Object.keys(_constants.SpriteSpeed).map((function(type){return _react.default.createElement("option",{key:type,value:_constants.SpriteSpeed[type]},type.replace(/_/g," ").toLowerCase())}))),_react.default.createElement("label",{htmlFor:"size"},"Size: "),_react.default.createElement("select",{name:"size",value:values.size,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),Object.keys(_constants.SpriteSize).map((function(type){return _react.default.createElement("option",{key:type,value:_constants.SpriteSize[type]},type.replace(/_/g," ").toLowerCase())}))),_react.default.createElement("label",{htmlFor:"direction"},"Direction: "),_react.default.createElement("select",{name:"direction",value:values.direction,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),Object.keys(_constants.Direction).map((function(type){return _react.default.createElement("option",{key:type,value:_constants.Direction[type]},type.replace(/_/g," ").toLowerCase())}))),_react.default.createElement("label",{htmlFor:"emotion"},"Emotion: "),_react.default.createElement("select",{name:"emotion",value:values.emotion,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),Object.keys(_constants.Emotions).map((function(type){return _react.default.createElement("option",{key:type,value:_constants.Emotions[type]},type.replace(/_/g," ").toLowerCase())})))))},StudioCellEditor}(_CellEditor2.default);exports.default=StudioCellEditor,module.exports=exports.default},"./src/studio/cell.js":module=>{var Cell=function Cell(tileType,speed,size,direction,emotion,sprite){this.tileType_=tileType,this.speed_=speed,this.size_=size,this.direction_=direction,this.emotion_=emotion,this.sprite_=sprite};module.exports=Cell,Cell.prototype.getTileType=function(){return this.tileType_},Cell.prototype.clone=function(){return new Cell(this.tileType_,this.speed_,this.size_,this.direction_,this.emotion_,this.sprite_)},Cell.prototype.serialize=function(){return{tileType:this.tileType_,speed:this.speed_,size:this.size_,direction:this.direction_,emotion:this.emotion_,sprite:this.sprite_}},Cell.deserialize=function(serialized){return new Cell(serialized.tileType,serialized.speed,serialized.size,serialized.direction,serialized.emotion,serialized.sprite)}},"./src/studio/constants.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getClosestDirection=exports.frameDirTableWalkingWithIdleCounterclockwise=exports.frameDirTableWalkingWithIdleClockwise=exports.frameDirTableWalking=exports.frameDirTable=exports.floatingScoreChangeY=exports.floatingScoreChangeOpacity=exports.WallTypeShift=exports.WallTypeMask=exports.WallType=exports.WallRandomCoordMax=exports.WallCoordsShift=exports.WallCoordsMask=exports.WallCoordRowShift=exports.WallCoordRowMask=exports.WallCoordMax=exports.WallCoordColShift=exports.WallCoordColMask=exports.WallAnyMask=exports.VISIBLE_VALUE=exports.UNIT_VECTOR=exports.TOUCH_OBSTACLE_THROTTLE_TIME=exports.TOUCH_HAZARD_EFFECT_TIME=exports.SquareType=exports.SquareItemClassShift=exports.SquareItemClassMask=exports.SpriteSpeed=exports.SpriteSize=exports.SPRITE_COLLIDE_DISTANCE_SCALING=exports.SOUND_THROTTLE_TIME=exports.SHAKE_DEFAULT_DURATION=exports.SHAKE_DEFAULT_DISTANCE=exports.SHAKE_DEFAULT_CYCLES=exports.RANDOM_VALUE=exports.Position=exports.NextTurn=exports.MAX_NUM_CLOUDS=exports.ITEM_FADE_TIME=exports.IDLE_TICKS_BEFORE_FACE_SOUTH=exports.HIDDEN_VALUE=exports.GOAL_FADE_TIME=exports.FINISH_COLLIDE_DISTANCE_SCALING=exports.Emotions=exports.EMPTY_QUOTES=exports.Direction=exports.DEFAULT_SPRITE_SPEED=exports.DEFAULT_SPRITE_SIZE=exports.DEFAULT_SPRITE_ANIMATION_FRAME_DURATION=exports.DEFAULT_PROJECTILE_SPEED=exports.DEFAULT_PROJECTILE_ANIMATION_FRAME_DURATION=exports.DEFAULT_ITEM_SPEED=exports.DEFAULT_ITEM_ANIMATION_FRAME_DURATION=exports.DEFAULT_ANIMATION_RATE=exports.DEFAULT_ACTOR_FADE_TIME=exports.ClockwiseDirectionsFromNorth=exports.CardinalDirections=exports.CLOUD_SIZE=exports.CLOUD_OPACITY=exports.CLICK_VALUE=exports.CAPTURE_TICK_COUNT=exports.BEHAVIOR_WATCH_ACTOR=exports.BEHAVIOR_WANDER=exports.BEHAVIOR_STOP=exports.BEHAVIOR_GRID_ALIGNED=exports.BEHAVIOR_FLEE=exports.BEHAVIOR_CHASE=void 0,exports.squareHasItemClass=function squareHasItemClass(itemClassIndex,squareValue){var classesEnabled=(squareValue&SquareItemClassMask)>>>SquareItemClassShift;return Math.pow(2,itemClassIndex)&classesEnabled},exports.turnRight90=exports.turnLeft90=void 0;var SpriteSpeed={VERY_SLOW:2,SLOW:3,LITTLE_SLOW:4,NORMAL:5,LITTLE_FAST:6,FAST:8,VERY_FAST:12};exports.SpriteSpeed=SpriteSpeed;exports.SpriteSize={VERY_SMALL:.5,SMALL:.75,NORMAL:1,LARGE:1.5,VERY_LARGE:2};var Direction={NONE:0,NORTH:1,EAST:2,SOUTH:4,WEST:8,NORTHEAST:3,SOUTHEAST:6,SOUTHWEST:12,NORTHWEST:9};exports.Direction=Direction;exports.turnLeft90=function turnLeft90(direction){return direction>>1||Direction.WEST};exports.turnRight90=function turnRight90(direction){return direction<<1&15||Direction.NORTH};var Dir=Direction,ClockwiseDirectionsFromNorth=[Dir.NORTH,Dir.NORTHEAST,Dir.EAST,Dir.SOUTHEAST,Dir.SOUTH,Dir.SOUTHWEST,Dir.WEST,Dir.NORTHWEST];exports.ClockwiseDirectionsFromNorth=ClockwiseDirectionsFromNorth;var CardinalDirections=[Dir.NORTH,Dir.SOUTH,Dir.EAST,Dir.WEST];exports.CardinalDirections=CardinalDirections;exports.getClosestDirection=function getClosestDirection(x,y){var radiansFromNorth=Math.atan2(x,-y),stepRadians=Math.PI/4,stepsFromNorth=(Math.round(radiansFromNorth/stepRadians)+8)%8;return ClockwiseDirectionsFromNorth[stepsFromNorth]};var frameDirTable={};exports.frameDirTable=frameDirTable,frameDirTable[Dir.SOUTHEAST]=0,frameDirTable[Dir.EAST]=1,frameDirTable[Dir.NORTHEAST]=2,frameDirTable[Dir.NORTH]=3,frameDirTable[Dir.NORTHWEST]=4,frameDirTable[Dir.WEST]=5,frameDirTable[Dir.SOUTHWEST]=6;var frameDirTableWalking={};exports.frameDirTableWalking=frameDirTableWalking,frameDirTableWalking[Dir.NONE]=0,frameDirTableWalking[Dir.SOUTH]=0,frameDirTableWalking[Dir.SOUTHEAST]=1,frameDirTableWalking[Dir.EAST]=2,frameDirTableWalking[Dir.NORTHEAST]=3,frameDirTableWalking[Dir.NORTH]=4,frameDirTableWalking[Dir.NORTHWEST]=5,frameDirTableWalking[Dir.WEST]=6,frameDirTableWalking[Dir.SOUTHWEST]=7;var frameDirTableWalkingWithIdleClockwise={};exports.frameDirTableWalkingWithIdleClockwise=frameDirTableWalkingWithIdleClockwise,frameDirTableWalkingWithIdleClockwise[Dir.NONE]=8,frameDirTableWalkingWithIdleClockwise[Dir.SOUTH]=0,frameDirTableWalkingWithIdleClockwise[Dir.SOUTHEAST]=1,frameDirTableWalkingWithIdleClockwise[Dir.EAST]=2,frameDirTableWalkingWithIdleClockwise[Dir.NORTHEAST]=3,frameDirTableWalkingWithIdleClockwise[Dir.NORTH]=4,frameDirTableWalkingWithIdleClockwise[Dir.NORTHWEST]=5,frameDirTableWalkingWithIdleClockwise[Dir.WEST]=6,frameDirTableWalkingWithIdleClockwise[Dir.SOUTHWEST]=7;var frameDirTableWalkingWithIdleCounterclockwise={};exports.frameDirTableWalkingWithIdleCounterclockwise=frameDirTableWalkingWithIdleCounterclockwise,frameDirTableWalkingWithIdleCounterclockwise[Dir.NONE]=8,frameDirTableWalkingWithIdleCounterclockwise[Dir.SOUTH]=0,frameDirTableWalkingWithIdleCounterclockwise[Dir.SOUTHEAST]=7,frameDirTableWalkingWithIdleCounterclockwise[Dir.EAST]=6,frameDirTableWalkingWithIdleCounterclockwise[Dir.NORTHEAST]=5,frameDirTableWalkingWithIdleCounterclockwise[Dir.NORTH]=4,frameDirTableWalkingWithIdleCounterclockwise[Dir.NORTHWEST]=3,frameDirTableWalkingWithIdleCounterclockwise[Dir.WEST]=2,frameDirTableWalkingWithIdleCounterclockwise[Dir.SOUTHWEST]=1;var UNIT_VECTOR={};exports.UNIT_VECTOR=UNIT_VECTOR,UNIT_VECTOR[Dir.NONE]={x:0,y:0},UNIT_VECTOR[Dir.NORTH]={x:0,y:-1},UNIT_VECTOR[Dir.EAST]={x:1,y:0},UNIT_VECTOR[Dir.SOUTH]={x:0,y:1},UNIT_VECTOR[Dir.WEST]={x:-1,y:0},UNIT_VECTOR[Dir.NORTHEAST]={x:1,y:-1},UNIT_VECTOR[Dir.SOUTHEAST]={x:1,y:1},UNIT_VECTOR[Dir.SOUTHWEST]={x:-1,y:1},UNIT_VECTOR[Dir.NORTHWEST]={x:-1,y:-1},Dir.getUnitVector=function(dir){return UNIT_VECTOR[dir]};exports.Position={OUTTOPOUTLEFT:1,OUTTOPLEFT:2,OUTTOPCENTER:3,OUTTOPRIGHT:4,OUTTOPOUTRIGHT:5,TOPOUTLEFT:6,TOPLEFT:7,TOPCENTER:8,TOPRIGHT:9,TOPOUTRIGHT:10,MIDDLEOUTLEFT:11,MIDDLELEFT:12,MIDDLECENTER:13,MIDDLERIGHT:14,MIDDLEOUTRIGHT:15,BOTTOMOUTLEFT:16,BOTTOMLEFT:17,BOTTOMCENTER:18,BOTTOMRIGHT:19,BOTTOMOUTRIGHT:20,OUTBOTTOMOUTLEFT:21,OUTBOTTOMLEFT:22,OUTBOTTOMCENTER:23,OUTBOTTOMRIGHT:24,OUTBOTTOMOUTRIGHT:25};var NextTurn={};exports.NextTurn=NextTurn,NextTurn[Dir.NORTH]={},NextTurn[Dir.NORTH][Dir.NORTH]=Dir.NORTH,NextTurn[Dir.NORTH][Dir.EAST]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.SOUTH]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.NONE]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.WEST]=Dir.NORTHWEST,NextTurn[Dir.NORTH][Dir.NORTHEAST]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.SOUTHEAST]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.SOUTHWEST]=Dir.NORTHWEST,NextTurn[Dir.NORTH][Dir.NORTHWEST]=Dir.NORTHWEST,NextTurn[Dir.EAST]={},NextTurn[Dir.EAST][Dir.NORTH]=Dir.NORTHEAST,NextTurn[Dir.EAST][Dir.EAST]=Dir.EAST,NextTurn[Dir.EAST][Dir.SOUTH]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.NONE]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.WEST]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.NORTHEAST]=Dir.NORTHEAST,NextTurn[Dir.EAST][Dir.SOUTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.SOUTHWEST]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.NORTHWEST]=Dir.NORTHEAST,NextTurn[Dir.SOUTH]={},NextTurn[Dir.SOUTH][Dir.NORTH]=Dir.SOUTHEAST,NextTurn[Dir.SOUTH][Dir.EAST]=Dir.SOUTHEAST,NextTurn[Dir.SOUTH][Dir.SOUTH]=Dir.SOUTH,NextTurn[Dir.SOUTH][Dir.NONE]=Dir.NONE,NextTurn[Dir.SOUTH][Dir.WEST]=Dir.SOUTHWEST,NextTurn[Dir.SOUTH][Dir.NORTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.SOUTH][Dir.SOUTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.SOUTH][Dir.SOUTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.SOUTH][Dir.NORTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.WEST]={},NextTurn[Dir.WEST][Dir.NORTH]=Dir.NORTHWEST,NextTurn[Dir.WEST][Dir.EAST]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.SOUTH]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.NONE]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.WEST]=Dir.WEST,NextTurn[Dir.WEST][Dir.NORTHEAST]=Dir.NORTHWEST,NextTurn[Dir.WEST][Dir.SOUTHEAST]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.SOUTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.NORTHWEST]=Dir.NORTHWEST,NextTurn[Dir.NORTHEAST]={},NextTurn[Dir.NORTHEAST][Dir.NORTH]=Dir.NORTH,NextTurn[Dir.NORTHEAST][Dir.EAST]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.SOUTH]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.NONE]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.WEST]=Dir.NORTH,NextTurn[Dir.NORTHEAST][Dir.NORTHEAST]=Dir.NORTHEAST,NextTurn[Dir.NORTHEAST][Dir.SOUTHEAST]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.SOUTHWEST]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.NORTHWEST]=Dir.NORTH,NextTurn[Dir.SOUTHEAST]={},NextTurn[Dir.SOUTHEAST][Dir.NORTH]=Dir.EAST,NextTurn[Dir.SOUTHEAST][Dir.EAST]=Dir.EAST,NextTurn[Dir.SOUTHEAST][Dir.SOUTH]=Dir.SOUTH,NextTurn[Dir.SOUTHEAST][Dir.NONE]=Dir.SOUTH,NextTurn[Dir.SOUTHEAST][Dir.WEST]=Dir.SOUTH,NextTurn[Dir.SOUTHEAST][Dir.NORTHEAST]=Dir.EAST,NextTurn[Dir.SOUTHEAST][Dir.SOUTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.SOUTHEAST][Dir.SOUTHWEST]=Dir.SOUTH,NextTurn[Dir.SOUTHEAST][Dir.NORTHWEST]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST]={},NextTurn[Dir.SOUTHWEST][Dir.NORTH]=Dir.WEST,NextTurn[Dir.SOUTHWEST][Dir.EAST]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.SOUTH]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.NONE]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.WEST]=Dir.WEST,NextTurn[Dir.SOUTHWEST][Dir.NORTHEAST]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.SOUTHEAST]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.SOUTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.SOUTHWEST][Dir.NORTHWEST]=Dir.WEST,NextTurn[Dir.NORTHWEST]={},NextTurn[Dir.NORTHWEST][Dir.NORTH]=Dir.NORTH,NextTurn[Dir.NORTHWEST][Dir.EAST]=Dir.NORTH,NextTurn[Dir.NORTHWEST][Dir.SOUTH]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.NONE]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.WEST]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.NORTHEAST]=Dir.NORTH,NextTurn[Dir.NORTHWEST][Dir.SOUTHEAST]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.SOUTHWEST]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.NORTHWEST]=Dir.NORTHWEST,NextTurn[Dir.NONE]={},NextTurn[Dir.NONE][Dir.NORTH]=Dir.SOUTHEAST,NextTurn[Dir.NONE][Dir.EAST]=Dir.SOUTHEAST,NextTurn[Dir.NONE][Dir.SOUTH]=Dir.SOUTH,NextTurn[Dir.NONE][Dir.NONE]=Dir.NONE,NextTurn[Dir.NONE][Dir.WEST]=Dir.SOUTHWEST,NextTurn[Dir.NONE][Dir.NORTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.NONE][Dir.SOUTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.NONE][Dir.SOUTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.NONE][Dir.NORTHWEST]=Dir.SOUTHWEST;exports.Emotions={NORMAL:0,HAPPY:1,ANGRY:2,SAD:3};exports.FINISH_COLLIDE_DISTANCE_SCALING=.75;exports.SPRITE_COLLIDE_DISTANCE_SCALING=.9;var DEFAULT_SPRITE_SPEED=SpriteSpeed.NORMAL;exports.DEFAULT_SPRITE_SPEED=DEFAULT_SPRITE_SPEED;exports.DEFAULT_SPRITE_SIZE=1;exports.DEFAULT_SPRITE_ANIMATION_FRAME_DURATION=6;var DEFAULT_PROJECTILE_SPEED=SpriteSpeed.SLOW;exports.DEFAULT_PROJECTILE_SPEED=DEFAULT_PROJECTILE_SPEED;exports.DEFAULT_PROJECTILE_ANIMATION_FRAME_DURATION=1.5;var DEFAULT_ITEM_SPEED=SpriteSpeed.SLOW;exports.DEFAULT_ITEM_SPEED=DEFAULT_ITEM_SPEED;exports.DEFAULT_ITEM_ANIMATION_FRAME_DURATION=1.5;var SquareType={OPEN:0,SPRITEFINISH:1,NOT_USED_2:2,WALL:4,NOT_USED_8:8,SPRITESTART:16,ITEM_CLASS_0:32,ITEM_CLASS_1:64,ITEM_CLASS_2:128,ITEM_CLASS_3:256,ITEM_CLASS_4:512,ITEM_CLASS_5:1024,ITEM_CLASS_6:2048,ITEM_CLASS_7:4096,NOT_USED_8K:8192,NOT_USED_16K:16384,NOT_USED_32K:32768};exports.SquareType=SquareType;var SquareItemClassMask=SquareType.ITEM_CLASS_0|SquareType.ITEM_CLASS_1|SquareType.ITEM_CLASS_2|SquareType.ITEM_CLASS_3|SquareType.ITEM_CLASS_4|SquareType.ITEM_CLASS_5|SquareType.ITEM_CLASS_6|SquareType.ITEM_CLASS_7;exports.SquareItemClassMask=SquareItemClassMask;var SquareItemClassShift=5;exports.SquareItemClassShift=SquareItemClassShift;exports.WallType={NORMAL_SIZE:0,DOUBLE_SIZE:1,JUMBO_SIZE:2};exports.WallTypeMask=251658240;exports.WallCoordRowMask=15728640;exports.WallCoordColMask=983040;exports.WallCoordsMask=268369920;exports.WallCoordsShift=16;exports.WallCoordColShift=16;exports.WallCoordRowShift=20;exports.WallTypeShift=24;exports.WallCoordMax=16;exports.WallRandomCoordMax=2;var WallAnyMask=268369920|SquareType.WALL;exports.WallAnyMask=WallAnyMask;exports.floatingScoreChangeOpacity=-.025;exports.floatingScoreChangeY=-1;exports.RANDOM_VALUE="random";exports.HIDDEN_VALUE='"hidden"';exports.CLICK_VALUE='"click"';exports.VISIBLE_VALUE='"visible"';exports.EMPTY_QUOTES='""';exports.IDLE_TICKS_BEFORE_FACE_SOUTH=4;exports.DEFAULT_ANIMATION_RATE=20;exports.GOAL_FADE_TIME=200;exports.ITEM_FADE_TIME=200;exports.DEFAULT_ACTOR_FADE_TIME=1e3;exports.TOUCH_HAZARD_EFFECT_TIME=1500;exports.SHAKE_DEFAULT_DURATION=1e3;exports.SHAKE_DEFAULT_CYCLES=6;exports.SHAKE_DEFAULT_DISTANCE=5;exports.MAX_NUM_CLOUDS=2;exports.CLOUD_SIZE=300;exports.CLOUD_OPACITY=.7;exports.SOUND_THROTTLE_TIME=200;exports.TOUCH_OBSTACLE_THROTTLE_TIME=330;exports.BEHAVIOR_CHASE="chase";exports.BEHAVIOR_FLEE="flee";exports.BEHAVIOR_STOP="none";exports.BEHAVIOR_WANDER="roam";exports.BEHAVIOR_WATCH_ACTOR="watchActor";exports.BEHAVIOR_GRID_ALIGNED="grid";exports.CAPTURE_TICK_COUNT=20},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/code-studio/components/GridEditor.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.StarWarsBB8Editor=exports.KarelFarmerBeeCollectorEditor=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_GridEditor=_interopRequireDefault(__webpack_require__("./src/code-studio/components/GridEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var _default={component:_GridEditor.default};exports.default=_default;var serializedMaze=[[16908288,16908288,0,0,0,0,0,0],[16908288,16908288,0,65536,131072,1048576,0,0],[0,0,0,0,0,0,0,0],[0,0,0,16,0,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,1048576,65536,1179648,0,0],[0,17956864,17956864,0,0,0,0,1048576],[0,17956864,17956864,0,0,0,0,0]].map((function(row){return row.map((function(cell){return{tileType:cell}}))})),Template=function Template(args){return _react.default.createElement("div",{id:"grid"},_react.default.createElement(_GridEditor.default,_extends({onUpdate:function onUpdate(){}},args)))},KarelFarmerBeeCollectorEditor=Template.bind({});exports.KarelFarmerBeeCollectorEditor=KarelFarmerBeeCollectorEditor,KarelFarmerBeeCollectorEditor.args={skin:"bee",maze:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,1,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]};var StarWarsBB8Editor=Template.bind({});exports.StarWarsBB8Editor=StarWarsBB8Editor,StarWarsBB8Editor.args={skin:"starwarsgrid",serializedMaze}},"./static/code_studio/tile-guide.png":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"tile-guidewpf903a96701bfacefdeb3365f59572b89.png"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,