/*! For license information please see templates-progress-ProgressBubble-dynamicStory.ea2ba10f.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1773],{"./src/templates/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/progress/BubbleBadge.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AssessmentBadge=AssessmentBadge,exports.BadgeType=void 0,exports.KeepWorkingBadge=KeepWorkingBadge,exports.default=BubbleBadge;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_utils=__webpack_require__("./src/utils.js"),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BadgeType=(0,_utils.makeEnum)("assessment","keepWorking");function BubbleBadge(_ref){var badgeType=_ref.badgeType,bubbleSize=_ref.bubbleSize,bubbleShape=_ref.bubbleShape;return[_BubbleFactory.BubbleSize.full,_BubbleFactory.BubbleSize.letter].includes(bubbleSize)?badgeType===BadgeType.assessment?AssessmentBubbleBadge(bubbleShape):badgeType===BadgeType.keepWorking?KeepWorkingBubbleBadge(bubbleSize):null:null}function AssessmentBubbleBadge(bubbleShape){var bubblePositioning=bubbleShape===_BubbleFactory.BubbleShape.diamond?styles.diamondBubblePosition:styles.bubblePosition;return _react.default.createElement("div",{style:bubblePositioning},_react.default.createElement(AssessmentBadge,null))}function KeepWorkingBubbleBadge(bubbleSize){var isSmall=bubbleSize===_BubbleFactory.BubbleSize.letter,bubblePositioning=isSmall?styles.keepWorkingSmallBadgePosition:styles.keepWorkingBadgePosition;return _react.default.createElement("div",{style:bubblePositioning},_react.default.createElement(KeepWorkingBadge,{isSmall}))}function KeepWorkingBadge(_ref2){var isSmall=_ref2.isSmall,style=_ref2.style,badgeSize=isSmall?styles.keepWorkingBadgeSmallSize:styles.keepWorkingBadgeFullSize;return _react.default.createElement("div",{style:_objectSpread(_objectSpread(_objectSpread({},styles.keepWorkingBadge),badgeSize),style)})}function AssessmentBadge(){return _react.default.createElement("span",{className:"fa-stack",style:styles.container},_react.default.createElement(_FontAwesome.default,{icon:"circle",className:"fa-stack-2x",style:styles.purple}),_react.default.createElement(_FontAwesome.default,{icon:"circle-thin",className:"fa-stack-2x",style:styles.white}),_react.default.createElement(_FontAwesome.default,{icon:"check",className:"fa-stack-1x",style:styles.white}))}exports.BadgeType=BadgeType,BubbleBadge.propTypes={badgeType:_propTypes.default.oneOf(Object.values(BadgeType)).isRequired,bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired,bubbleShape:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleShape)).isRequired},AssessmentBubbleBadge.propTypes={bubbleShape:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleShape)).isRequired},KeepWorkingBubbleBadge.propTypes={bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired},KeepWorkingBadge.propTypes={isSmall:_propTypes.default.bool,style:_propTypes.default.object},AssessmentBadge.propTypes={hasWhiteBorder:_propTypes.default.bool,style:_propTypes.default.object};var styles={container:{fontSize:10},bubblePosition:{position:"absolute",top:-7,right:-7},diamondBubblePosition:{position:"absolute",top:-13,right:-17},purple:{color:_color.default.purple},white:{color:_color.default.white},keepWorkingSmallBadgePosition:{position:"absolute",top:-2,right:-2},keepWorkingBadgePosition:{position:"absolute",top:0,right:-2},keepWorkingBadge:{borderRadius:"50%",backgroundColor:_color.default.red},keepWorkingBadgeFullSize:{width:10,height:10},keepWorkingBadgeSmallSize:{width:7,height:7}}},"./src/templates/progress/ProgressBubble.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_types=__webpack_require__("./src/templates/feedback/types.js"),_BubbleBadge=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./src/templates/progress/BubbleBadge.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBubble=function(_React$Component){function ProgressBubble(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"onClickLevel",(function(){_this.props.onClick&&_this.props.onClick(_this.props.level)})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBubble,_React$Component);var _proto=ProgressBubble.prototype;return _proto.isClickable=function isClickable(){var _this$props=this.props,disabled=_this$props.disabled,level=_this$props.level,onClick=_this$props.onClick;return!(disabled||!level.url&&!onClick)},_proto.getUrl=function getUrl(){var _this$props2=this.props,onClick=_this$props2.onClick,level=_this$props2.level,selectedSectionId=_this$props2.selectedSectionId,selectedStudentId=_this$props2.selectedStudentId;return onClick?null:(0,_BubbleFactory.getBubbleUrl)(level.url,selectedStudentId,selectedSectionId,!0)},_proto.renderBubbleBadge=function renderBubbleBadge(bubbleShape,bubbleSize){var _this$props3=this.props,level=_this$props3.level,smallBubble=_this$props3.smallBubble,hideAssessmentBadge=_this$props3.hideAssessmentBadge,hasKeepWorkingFeedback=level.teacherFeedbackReviewState===_types.ReviewStates.keepWorking;if(((0,_progressHelpers.isLevelAssessment)(level)&&!hideAssessmentBadge||hasKeepWorkingFeedback)&&!smallBubble)return _react.default.createElement(_BubbleBadge.default,{badgeType:hasKeepWorkingFeedback?_BubbleBadge.BadgeType.keepWorking:_BubbleBadge.BadgeType.assessment,bubbleSize,bubbleShape})},_proto.createBubbleElement=function createBubbleElement(){var _this$props4=this.props,level=_this$props4.level,smallBubble=_this$props4.smallBubble,hideToolTips=_this$props4.hideToolTips,bubbleSize=smallBubble?_BubbleFactory.BubbleSize.dot:_BubbleFactory.BubbleSize.full,content=(0,_BubbleFactory.getBubbleContent)(level.isLocked,level.isUnplugged,level.bonus,level.paired,level.bubbleText||level.letter||level.levelNumber,bubbleSize),bubbleShape=(0,_BubbleFactory.getBubbleShape)(level.isUnplugged&&!smallBubble,level.isConceptLevel),bubble=_react.default.createElement(_BubbleFactory.BasicBubble,{shape:bubbleShape,size:bubbleSize,progressStyle:(0,_progressStyles.levelProgressStyle)(level.status,level.kind),classNames:(0,_BubbleFactory.getBubbleClassNames)(this.isClickable())},content,this.renderBubbleBadge(bubbleShape,bubbleSize));return hideToolTips?bubble:_react.default.createElement(_BubbleFactory.BubbleTooltip,{level},bubble)},_proto.render=function render(){var level=this.props.level,levelID=level.bubbleText||level.letter||level.levelNumber,lessonName=this.props.lessonName,description=_locale.default.progressBubbleDescription({levelID});return lessonName&&(description=_locale.default.progressBubbleDescriptionWithLesson({levelID,lessonName})),this.isClickable()?_react.default.createElement(_BubbleFactory.BubbleLink,{url:this.getUrl(),onClick:this.onClickLevel,a11y_description:description},this.createBubbleElement()):this.createBubbleElement()},ProgressBubble}(_react.default.Component);exports.default=ProgressBubble,_defineProperty(ProgressBubble,"propTypes",{level:_progressTypes.levelWithProgressType.isRequired,disabled:_propTypes.default.bool.isRequired,smallBubble:_propTypes.default.bool,selectedSectionId:_propTypes.default.number,selectedStudentId:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),hideToolTips:_propTypes.default.bool,onClick:_propTypes.default.func,hideAssessmentBadge:_propTypes.default.bool,lessonName:_propTypes.default.string}),module.exports=exports.default},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/progress/ProgressBubble.dynamicStory.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BubbleNoUrl:()=>BubbleNoUrl,BubbleStatus_attempted:()=>BubbleStatus_attempted,BubbleStatus_completed_assessment:()=>BubbleStatus_completed_assessment,BubbleStatus_dots_disabled:()=>BubbleStatus_dots_disabled,BubbleStatus_free_play_complete:()=>BubbleStatus_free_play_complete,BubbleStatus_not_tried:()=>BubbleStatus_not_tried,BubbleStatus_passed:()=>BubbleStatus_passed,BubbleStatus_perfect:()=>BubbleStatus_perfect,BubbleStatus_review_accepted:()=>BubbleStatus_review_accepted,BubbleStatus_review_rejected:()=>BubbleStatus_review_rejected,BubbleStatus_submitted:()=>BubbleStatus_submitted,ConceptAssessmentNotTried:()=>ConceptAssessmentNotTried,ConceptAssessmentSubmitted:()=>ConceptAssessmentSubmitted,DisabledBubble:()=>DisabledBubble,HiddenTooltipsBubble:()=>HiddenTooltipsBubble,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _ProgressBubble__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/templates/progress/ProgressBubble.jsx");const __WEBPACK_DEFAULT_EXPORT__={component:__webpack_require__.n(_ProgressBubble__WEBPACK_IMPORTED_MODULE_0__)()},BubbleStatus_not_tried={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"puzzle",status:"not_tried",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_submitted={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"assessment",status:"submitted",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_perfect={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"puzzle",status:"perfect",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_passed={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"puzzle",status:"passed",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_attempted={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"puzzle",status:"attempted",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_review_accepted={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"puzzle",status:"review_accepted",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_review_rejected={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"puzzle",status:"review_rejected",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_dots_disabled={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"puzzle",status:"dots_disabled",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_free_play_complete={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"puzzle",status:"free_play_complete",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleStatus_completed_assessment={args:{level:{id:"1",levelNumber:3,bubbleText:"3",kind:"assessment",status:"completed_assessment",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},ConceptAssessmentNotTried={args:{level:{id:"0",levelNumber:2,bubbleText:"0",status:"not_tried",kind:"assessment",isConceptLevel:!0,isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},ConceptAssessmentSubmitted={args:{level:{id:"1",levelNumber:3,bubbleText:"1",status:"submitted",kind:"assessment",isConceptLevel:!0,isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!1}},BubbleNoUrl={args:{level:{id:"1",levelNumber:1,bubbleText:"1",status:"perfect",isLocked:!1,icon:"fa-document"},disabled:!1}},DisabledBubble={args:{level:{id:"1",levelNumber:3,bubbleText:"1",status:"perfect",isLocked:!1,url:"/foo/bar",icon:"fa-document"},disabled:!0}},HiddenTooltipsBubble={args:{level:{id:"1",levelNumber:3,bubbleText:"3",status:"perfect",isLocked:!1,url:"/foo/bar",icon:"fa-document"},hideToolTips:!0,disabled:!1}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,