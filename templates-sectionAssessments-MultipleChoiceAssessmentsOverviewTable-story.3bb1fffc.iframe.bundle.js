(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[6897],{"./src/templates/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/sectionAssessments/MultipleChoiceAssessmentsOverviewTable.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedMultipleChoiceAssessmentsOverviewTable=exports.COLUMNS=void 0;var _orderBy=_interopRequireDefault(__webpack_require__("./node_modules/lodash/orderBy.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),sort=_interopRequireWildcard(__webpack_require__("./node_modules/sortabular/dist/index.js")),_styleConstants=_interopRequireDefault(__webpack_require__("./src/styleConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_tableConstants=__webpack_require__("./src/templates/tables/tableConstants.js"),_wrapped_sortable=_interopRequireDefault(__webpack_require__("./src/templates/tables/wrapped_sortable.js")),_assessmentDataShapes=__webpack_require__("./src/templates/sectionAssessments/assessmentDataShapes.js"),_PercentAnsweredCell=_interopRequireDefault(__webpack_require__("./src/templates/sectionAssessments/PercentAnsweredCell.jsx")),_sectionAssessmentsRedux=__webpack_require__("./src/templates/sectionAssessments/sectionAssessmentsRedux.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var COLUMNS=exports.COLUMNS={QUESTION:0},answerColumnsFormatter=function answerColumnsFormatter(percentAnswered,_ref){var rowData=_ref.rowData,columnIndex=_ref.columnIndex,property=(_ref.rowIndex,_ref.property),percentValue=0,answerResults=rowData.answers[columnIndex-1]||{};return percentValue="notAnswered"===property?Math.round(rowData.notAnswered/rowData.totalAnswered*100):Math.round(answerResults.numAnswered/rowData.totalAnswered*100),_react.default.createElement(_PercentAnsweredCell.default,{id:rowData.id,percentValue,isCorrectAnswer:!!answerResults.isCorrect})},MultipleChoiceAssessmentsOverviewTable=function(_Component){function MultipleChoiceAssessmentsOverviewTable(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",_defineProperty({},COLUMNS.QUESTION,{direction:"desc",position:0})),_defineProperty(_this,"getSortingColumns",(function(){return _this.state.sortingColumns||{}})),_defineProperty(_this,"onSort",(function(selectedColumn){_this.setState({sortingColumns:sort.byColumn({sortingColumns:_this.state.sortingColumns,sortingOrder:{FIRST:"asc",asc:"desc",desc:"asc"},selectedColumn})})})),_defineProperty(_this,"selectQuestion",(function(index){_this.props.setQuestionIndex(index),_this.props.openDialog()})),_defineProperty(_this,"questionFormatter",(function(question,_ref2){var rowData=_ref2.rowData;_ref2.columnIndex,_ref2.rowIndex,_ref2.property;return _react.default.createElement("div",null,_react.default.createElement("a",{style:styles.link,onClick:function onClick(){return _this.selectQuestion(rowData.questionNumber-1)}},"".concat(rowData.questionNumber,". ").concat(question)))})),_defineProperty(_this,"getNotAnsweredColumn",(function(){return{property:"notAnswered",header:{label:_locale.default.notAnswered(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.answerColumnHeader)}},cell:{formatters:[answerColumnsFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.notAnsweredCell)}}}})),_defineProperty(_this,"getAnswerColumn",(function(columnLabel){return{property:"percentAnswered",header:{label:columnLabel,props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.answerColumnHeader)}},cell:{formatters:[answerColumnsFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.answerColumnCell)}}}})),_defineProperty(_this,"getQuestionColumn",(function(sortable,numAnswers){return{property:"question",header:{label:_locale.default.question(),props:{style:_tableConstants.tableLayoutStyles.headerCell}},cell:{formatters:[_this.questionFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),{},{maxWidth:_styleConstants.default["content-width"]-90*numAnswers})}}}})),_defineProperty(_this,"getColumns",(function(sortable){var columnLabelNames=_toConsumableArray(_this.props.questionAnswerData).sort((function(question1,question2){return question1.answers.length-question2.answers.length})).pop().answers.map((function(answer){return _this.getAnswerColumn(answer.multipleChoiceOption)})),numAnswerColumns=columnLabelNames.length+1;return[_this.getQuestionColumn(sortable,numAnswerColumns)].concat(_toConsumableArray(columnLabelNames),[_this.getNotAnsweredColumn()])})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MultipleChoiceAssessmentsOverviewTable,_Component),MultipleChoiceAssessmentsOverviewTable.prototype.render=function render(){var sortable=(0,_wrapped_sortable.default)(this.getSortingColumns,this.onSort,_tableConstants.sortableOptions),columns=this.getColumns(sortable),sortingColumns=this.getSortingColumns(),sortedRows=sort.sorter({columns,sortingColumns,sort:_orderBy.default})(this.props.questionAnswerData);return _react.default.createElement(Table.Provider,{columns,style:_tableConstants.tableLayoutStyles.table},_react.default.createElement(Table.Header,null),_react.default.createElement(Table.Body,{rows:sortedRows,rowKey:"id"}))},MultipleChoiceAssessmentsOverviewTable}(_react.Component);_defineProperty(MultipleChoiceAssessmentsOverviewTable,"propTypes",{questionAnswerData:_propTypes.default.arrayOf(_assessmentDataShapes.multipleChoiceDataPropType),openDialog:_propTypes.default.func.isRequired,setQuestionIndex:_propTypes.default.func.isRequired});var styles={answerColumnHeader:{width:70,textAlign:"center"},answerColumnCell:{width:70,padding:0,height:40},notAnsweredCell:{padding:0,height:40},link:{color:_color.default.teal,display:"block",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"}};exports.UnconnectedMultipleChoiceAssessmentsOverviewTable=MultipleChoiceAssessmentsOverviewTable,exports.default=(0,_reactRedux.connect)((function(state){return{}}),(function(dispatch){return{setQuestionIndex:function setQuestionIndex(questionIndex){dispatch((0,_sectionAssessmentsRedux.setQuestionIndex)(questionIndex))}}}))(MultipleChoiceAssessmentsOverviewTable)},"./src/templates/sectionAssessments/PercentAnsweredCell.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var PercentAnsweredCell=function(_Component){function PercentAnsweredCell(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"getBackgroundColor",(function(percentValue){var _this$props=_this.props,isCorrectAnswer=_this$props.isCorrectAnswer,isSurvey=_this$props.isSurvey,opacity=function calculateOpacity(answered){return(answered+10)/100}(percentValue);return isCorrectAnswer||isSurvey?"rgba(159, 212, 159, ".concat(opacity,")"):"rgba(255, 99, 71, ".concat(opacity,")")})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(PercentAnsweredCell,_Component),PercentAnsweredCell.prototype.render=function render(){var _this$props2=this.props,percentValue=_this$props2.percentValue,isCorrectAnswer=_this$props2.isCorrectAnswer,displayAnswer=_this$props2.displayAnswer;if(displayAnswer)return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.value},displayAnswer),_react.default.createElement("div",{style:styles.icon},isCorrectAnswer&&_react.default.createElement(_FontAwesome.default,{icon:"check-circle",style:styles.icon})));var backgroundCSS={backgroundColor:this.getBackgroundColor(percentValue)};return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},this.props.mainLayoutStyle),backgroundCSS)},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.value),this.props.valueLayoutStyle)},percentValue>=0&&_react.default.createElement("span",null,"".concat(percentValue,"%")),percentValue<0&&_react.default.createElement("span",null,"-")),_react.default.createElement("div",{style:styles.icon},isCorrectAnswer&&_react.default.createElement(_FontAwesome.default,{icon:"check-circle",style:styles.icon})))},PercentAnsweredCell}(_react.Component);_defineProperty(PercentAnsweredCell,"propTypes",{percentValue:_propTypes.default.number.isRequired,isCorrectAnswer:_propTypes.default.bool,displayAnswer:_propTypes.default.string,isSurvey:_propTypes.default.bool,mainLayoutStyle:_propTypes.default.object,valueLayoutStyle:_propTypes.default.object});var styles={main:{border:"none",display:"flex",justifyContent:"space-between",flexDirection:"row",alignItems:"center",boxSizing:"border-box",height:"100%",padding:10},icon:{color:_color.default.level_perfect},value:_objectSpread({color:_color.default.charcoal},_fontConstants.default["main-font-semi-bold"])};PercentAnsweredCell.defaultProps={percentValue:-1,mainLayoutStyle:styles.main,valueLayoutStyle:{marginRight:10}};exports.default=PercentAnsweredCell;module.exports=exports.default},"./src/templates/sectionAssessments/assessmentDataShapes.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.studentWithMatchResponsesPropType=exports.studentWithMCResponsesPropType=exports.studentOverviewDataPropType=exports.studentMatchResponsePropType=exports.studentMCResponsePropType=exports.optionDataPropTypeMatch=exports.multipleChoiceQuestionPropType=exports.multipleChoiceDataPropType=exports.matchQuestionPropType=exports.matchDetailsQuestionPropType=exports.matchDataPropType=exports.freeResponsesDataPropType=exports.QUESTION_CHARACTER_LIMIT=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));exports.freeResponsesDataPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,response:_propTypes.default.string});var multipleChoiceAnswerDataPropType=_propTypes.default.shape({multipleChoiceOption:_propTypes.default.string,numAnswered:_propTypes.default.number,isCorrect:_propTypes.default.bool,percentAnswered:_propTypes.default.number,text:_propTypes.default.string}),studentMCResponsePropType=(exports.multipleChoiceDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number,answers:_propTypes.default.arrayOf(multipleChoiceAnswerDataPropType),totalAnswered:_propTypes.default.number.isRequired,notAnswered:_propTypes.default.number.isRequired}),exports.studentMCResponsePropType=_propTypes.default.shape({isCorrect:_propTypes.default.bool,responses:_propTypes.default.string})),answerMatchDataPropType=(exports.studentWithMCResponsesPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,studentResponses:_propTypes.default.arrayOf(studentMCResponsePropType)}),exports.multipleChoiceQuestionPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,correctAnswer:_propTypes.default.string.isRequired}),exports.studentOverviewDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,numMultipleChoiceCorrect:_propTypes.default.number,numMultipleChoice:_propTypes.default.number,numMatchCorrect:_propTypes.default.number,numMatch:_propTypes.default.number,submissionTimeStamp:_propTypes.default.instanceOf(Date).isRequired,isSubmitted:_propTypes.default.bool.isRequired,inProgress:_propTypes.default.bool.isRequired,url:_propTypes.default.string}),_propTypes.default.shape({answer:_propTypes.default.string,isCorrect:_propTypes.default.bool,numAnswered:_propTypes.default.number})),optionDataPropTypeMatch=exports.optionDataPropTypeMatch=_propTypes.default.shape({option:_propTypes.default.string,totalAnswered:_propTypes.default.number,notAnswered:_propTypes.default.number,id:_propTypes.default.number,answers:_propTypes.default.arrayOf(answerMatchDataPropType)}),studentMatchResponsePropType=(exports.matchDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number,options:_propTypes.default.arrayOf(optionDataPropTypeMatch)}),exports.matchDetailsQuestionPropType=_propTypes.default.shape({question:_propTypes.default.string.isRequired,questionType:_propTypes.default.string,answers:_propTypes.default.array,options:_propTypes.default.array}),exports.studentMatchResponsePropType=_propTypes.default.shape({responses:_propTypes.default.array}));exports.studentWithMatchResponsesPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,studentResponses:_propTypes.default.arrayOf(studentMatchResponsePropType)}),exports.matchQuestionPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number.isRequired,answers:_propTypes.default.array,options:_propTypes.default.array}),exports.QUESTION_CHARACTER_LIMIT=110},"./src/templates/tables/wrapped_sortable.js":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),sort=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/sortabular/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_excluded=["className"];function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}exports.default=function wrappedSortable(getSortingColumns,onSort){var styles=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},basicSortable=sort.sort({getSortingColumns,onSort});return function(label,columnInfo){var _basicSortable=basicSortable(label,columnInfo),newClassName=_basicSortable.className,newProps=_objectWithoutProperties(_basicSortable,_excluded),sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort",className:"fa-fw",style:styles.default});/sort-asc/.test(newClassName)?sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-asc",className:"fa-fw",style:styles.sortAsc}):/sort-desc/.test(newClassName)&&(sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-desc",className:"fa-fw",style:styles.sortDesc}));return _objectSpread(_objectSpread({},newProps),{},{style:Object.assign({},{cursor:"pointer"}),children:_react.default.createElement("span",{style:styles.container},_react.default.createElement("span",{key:"icon",style:{whiteSpace:"nowrap"}},sortIcon),_react.default.createElement("span",{key:"label"},label))})}};module.exports=exports.default},"./node_modules/lodash/_baseEach.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseForOwn=__webpack_require__("./node_modules/lodash/_baseForOwn.js"),baseEach=__webpack_require__("./node_modules/lodash/_createBaseEach.js")(baseForOwn);module.exports=baseEach},"./node_modules/lodash/_baseMap.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseEach=__webpack_require__("./node_modules/lodash/_baseEach.js"),isArrayLike=__webpack_require__("./node_modules/lodash/isArrayLike.js");module.exports=function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];return baseEach(collection,(function(value,key,collection){result[++index]=iteratee(value,key,collection)})),result}},"./node_modules/lodash/_baseOrderBy.js":(module,__unused_webpack_exports,__webpack_require__)=>{var arrayMap=__webpack_require__("./node_modules/lodash/_arrayMap.js"),baseGet=__webpack_require__("./node_modules/lodash/_baseGet.js"),baseIteratee=__webpack_require__("./node_modules/lodash/_baseIteratee.js"),baseMap=__webpack_require__("./node_modules/lodash/_baseMap.js"),baseSortBy=__webpack_require__("./node_modules/lodash/_baseSortBy.js"),baseUnary=__webpack_require__("./node_modules/lodash/_baseUnary.js"),compareMultiple=__webpack_require__("./node_modules/lodash/_compareMultiple.js"),identity=__webpack_require__("./node_modules/lodash/identity.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js");module.exports=function baseOrderBy(collection,iteratees,orders){iteratees=iteratees.length?arrayMap(iteratees,(function(iteratee){return isArray(iteratee)?function(value){return baseGet(value,1===iteratee.length?iteratee[0]:iteratee)}:iteratee})):[identity];var index=-1;iteratees=arrayMap(iteratees,baseUnary(baseIteratee));var result=baseMap(collection,(function(value,key,collection){return{criteria:arrayMap(iteratees,(function(iteratee){return iteratee(value)})),index:++index,value}}));return baseSortBy(result,(function(object,other){return compareMultiple(object,other,orders)}))}},"./node_modules/lodash/_baseSortBy.js":module=>{module.exports=function baseSortBy(array,comparer){var length=array.length;for(array.sort(comparer);length--;)array[length]=array[length].value;return array}},"./node_modules/lodash/_compareAscending.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isSymbol=__webpack_require__("./node_modules/lodash/isSymbol.js");module.exports=function compareAscending(value,other){if(value!==other){var valIsDefined=void 0!==value,valIsNull=null===value,valIsReflexive=value==value,valIsSymbol=isSymbol(value),othIsDefined=void 0!==other,othIsNull=null===other,othIsReflexive=other==other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive)return 1;if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive)return-1}return 0}},"./node_modules/lodash/_compareMultiple.js":(module,__unused_webpack_exports,__webpack_require__)=>{var compareAscending=__webpack_require__("./node_modules/lodash/_compareAscending.js");module.exports=function compareMultiple(object,other,orders){for(var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;++index<length;){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result)return index>=ordersLength?result:result*("desc"==orders[index]?-1:1)}return object.index-other.index}},"./node_modules/lodash/_createBaseEach.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isArrayLike=__webpack_require__("./node_modules/lodash/isArrayLike.js");module.exports=function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(null==collection)return collection;if(!isArrayLike(collection))return eachFunc(collection,iteratee);for(var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);(fromRight?index--:++index<length)&&!1!==iteratee(iterable[index],index,iterable););return collection}}},"./node_modules/lodash/orderBy.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseOrderBy=__webpack_require__("./node_modules/lodash/_baseOrderBy.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js");module.exports=function orderBy(collection,iteratees,orders,guard){return null==collection?[]:(isArray(iteratees)||(iteratees=null==iteratees?[]:[iteratees]),isArray(orders=guard?void 0:orders)||(orders=null==orders?[]:[orders]),baseOrderBy(collection,iteratees,orders))}},"./src/templates/sectionAssessments/MultipleChoiceAssessmentsOverviewTable.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.OverviewWith7Answers=exports.OverviewWith3Answers=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_MultipleChoiceAssessmentsOverviewTable=__webpack_require__("./src/templates/sectionAssessments/MultipleChoiceAssessmentsOverviewTable.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var multipleChoiceData=[{id:1,questionNumber:1,question:"What is a variable?",answers:[{multipleChoiceOption:_locale.default.answerOptionA(),numAnswered:2,isCorrect:!0},{multipleChoiceOption:_locale.default.answerOptionB(),numAnswered:4,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionC(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionD(),numAnswered:2,isCorrect:!1}],notAnswered:1,totalAnswered:10},{id:2,questionNumber:2,question:"What is a 4-bit number for the decimal number Ten(10)?",answers:[{multipleChoiceOption:_locale.default.answerOptionA(),numAnswered:3,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionB(),numAnswered:1,isCorrect:!0},{multipleChoiceOption:_locale.default.answerOptionC(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionD(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionE(),numAnswered:2,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionF(),numAnswered:1,isCorrect:!1}],notAnswered:2,totalAnswered:10},{id:3,questionNumber:3,question:"What is the minimum number of bits you will need to encode the 26 letters of the alphabet?",answers:[{multipleChoiceOption:_locale.default.answerOptionA(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionB(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionC(),numAnswered:2,isCorrect:!0},{multipleChoiceOption:_locale.default.answerOptionD(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionE(),numAnswered:3,isCorrect:!1}],notAnswered:5,totalAnswered:10},{id:4,questionNumber:4,question:"What is a function?",answers:[{multipleChoiceOption:_locale.default.answerOptionA(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionB(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionC(),numAnswered:1,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionD(),numAnswered:4,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionE(),numAnswered:5,isCorrect:!1},{multipleChoiceOption:_locale.default.answerOptionF(),numAnswered:3,isCorrect:!0},{multipleChoiceOption:_locale.default.answerOptionG(),numAnswered:1,isCorrect:!1}],notAnswered:0,totalAnswered:10}],Template=(exports.default={component:_MultipleChoiceAssessmentsOverviewTable.UnconnectedMultipleChoiceAssessmentsOverviewTable},function Template(args){return _react.default.createElement(_MultipleChoiceAssessmentsOverviewTable.UnconnectedMultipleChoiceAssessmentsOverviewTable,_extends({openDialog:function openDialog(){},setQuestionIndex:function setQuestionIndex(){}},args))});(exports.OverviewWith7Answers=Template.bind({})).args={questionAnswerData:multipleChoiceData};var reducedMultipleChoiceData=multipleChoiceData.map((function(question){return _objectSpread(_objectSpread({},question),{},{answers:question.answers.slice(0,2)})}));(exports.OverviewWith3Answers=Template.bind({})).args={questionAnswerData:reducedMultipleChoiceData}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLXNlY3Rpb25Bc3Nlc3NtZW50cy1NdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZS1zdG9yeS4wMmIxZjk2NS5pZnJhbWUuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ5UEFFQSxJQUFBQSxRQUFBQyx1QkFBQUMsb0JBQUEsb0NBQ0FDLFdBQUFGLHVCQUFBQyxvQkFBQSx1Q0FDQUUsT0FBQUgsdUJBQUFDLG9CQUFBLGtDQUEwQkcsVUFBQSw2QkFKMUIsU0FBQUosdUJBQUFLLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLFVBQUFFLFdBQUEsT0FBQUEsU0FBQUMsT0FBQUMsT0FBQUQsT0FBQUMsT0FBQUMsT0FBQSxTQUFBQyxRQUFBLFFBQUFDLEVBQUEsRUFBQUEsRUFBQUMsVUFBQUMsT0FBQUYsSUFBQSxLQUFBRyxPQUFBRixVQUFBRCxHQUFBLFFBQUFJLE9BQUFELE9BQUFQLE9BQUFTLFVBQUFDLGVBQUFDLEtBQUFKLE9BQUFDLE9BQUFMLE9BQUFLLEtBQUFELE9BQUFDLEtBQUEsUUFBQUwsTUFBQSxFQUFBSixTQUFBYSxNQUFBLEtBQUFQLFVBQUEsVUFBQVEseUJBQUFOLE9BQUFPLFVBQUEsU0FBQVAsT0FBQSxhQUFBQyxJQUFBSixFQUFBRCxPQUFBLFNBQUFZLDhCQUFBUixPQUFBTyxVQUFBLFNBQUFQLE9BQUEsYUFBQUMsSUFBQUosRUFBQUQsT0FBQSxHQUFBYSxXQUFBaEIsT0FBQWlCLEtBQUFWLFFBQUEsSUFBQUgsRUFBQSxFQUFBQSxFQUFBWSxXQUFBVixPQUFBRixJQUFBSSxJQUFBUSxXQUFBWixHQUFBVSxTQUFBSSxRQUFBVixNQUFBLElBQUFMLE9BQUFLLEtBQUFELE9BQUFDLE1BQUEsT0FBQUwsTUFBQSxDQUFBWSxDQUFBUixPQUFBTyxVQUFBLEdBQUFkLE9BQUFtQixzQkFBQSxLQUFBQyxpQkFBQXBCLE9BQUFtQixzQkFBQVosUUFBQSxJQUFBSCxFQUFBLEVBQUFBLEVBQUFnQixp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RCxPQUFBdkQsY0FBQUEsY0FBQSxHQUNLdUQsVUFBUSxJQUNYN0IsUUFBUzZCLFNBQVM3QixRQUFRckMsTUFBTSxFQUFHLElBRXZDLEtBRWlDN0MsUUFBQUEscUJBQUd5UyxTQUFTNVUsS0FBSyxDQUFDLElBQzlCa0ksS0FBTyxDQUFDeUMsbUJBQW9Cb0ssMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL0ZvbnRBd2Vzb21lLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3NlY3Rpb25Bc3Nlc3NtZW50cy9NdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZS5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uQXNzZXNzbWVudHMvUGVyY2VudEFuc3dlcmVkQ2VsbC5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uQXNzZXNzbWVudHMvYXNzZXNzbWVudERhdGFTaGFwZXMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy90YWJsZXMvd3JhcHBlZF9zb3J0YWJsZS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRWFjaC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWFwLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VPcmRlckJ5LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VTb3J0QnkuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29tcGFyZUFzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb21wYXJlTXVsdGlwbGUuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY3JlYXRlQmFzZUVhY2guanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9vcmRlckJ5LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvc2VjdGlvbkFzc2Vzc21lbnRzL011bHRpcGxlQ2hvaWNlQXNzZXNzbWVudHNPdmVydmlld1RhYmxlLnN0b3J5LmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGZpbGUgZm9udC1hd2Vzb21lIGhlbHBlciBjb21wb25lbnQuICovXG5cbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBHaXZlbiBhbiBpY29uIG5hbWUsIHJlbmRlciB0aGUgaWNvbiB1c2luZyBhbiA8aT4gdGFnIGluIHR5cGljYWwgZm9udC1hd2Vzb21lXG4gKiBmYXNoaW9uLiAgUmVxdWlyZXMgZm9udC1hd2Vzb21lIHRvIGJlIGF2YWlsYWJsZSBvbiB0aGUgcGFnZS5cbiAqIFNlZSBodHRwOi8vZm9udGF3ZXNvbWUuaW8vaWNvbnMvIHRvIGxvb2sgdXAgc3VwcG9ydGVkIGljb24gbmFtZXMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZvbnRBd2Vzb21lKHtpY29uLCBjbGFzc05hbWUsIHRpdGxlLCAuLi5wcm9wc30pIHtcbiAgY29uc3QgbmV3UHJvcHMgPSBfLmFzc2lnbih7fSwgcHJvcHMsIHtcbiAgICBjbGFzc05hbWU6IGBmYSBmYS0ke2ljb259ICR7Y2xhc3NOYW1lID8gY2xhc3NOYW1lIDogJyd9YCxcbiAgfSk7XG4gIHJldHVybiA8aSB7Li4ubmV3UHJvcHN9IHRpdGxlPXt0aXRsZX0gLz47XG59XG5cbkZvbnRBd2Vzb21lLnByb3BUeXBlcyA9IHtcbiAgaWNvbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAvLyBUaXRsZSBzaG91bGQgYmUgdXNlZCBmb3Igc2VtYW50aWMgaWNvbnMuIElmIG5vdCBnaXZlbiwgdGhlIHNjcmVlbnJlYWRlciB3aWxsIG5vdCByZWFkIHRoZSBpY29uXG4gIC8vIFNlZSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9kb2NzL3dlYi9kaWctZGVlcGVyL2FjY2Vzc2liaWxpdHkjaWNvbnMtdXNlZC1hcy1zZW1hbnRpYy1lbGVtZW50c1xufTtcbiIsImltcG9ydCBvcmRlckJ5IGZyb20gJ2xvZGFzaC9vcmRlckJ5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Y29ubmVjdH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0ICogYXMgVGFibGUgZnJvbSAncmVhY3RhYnVsYXItdGFibGUnO1xuaW1wb3J0ICogYXMgc29ydCBmcm9tICdzb3J0YWJ1bGFyJztcblxuaW1wb3J0IHN0eWxlQ29uc3RhbnRzIGZyb20gJ0BjZG8vYXBwcy9zdHlsZUNvbnN0YW50cyc7XG5pbXBvcnQgY29sb3IgZnJvbSAnQGNkby9hcHBzL3V0aWwvY29sb3InO1xuaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuXG5pbXBvcnQge3RhYmxlTGF5b3V0U3R5bGVzLCBzb3J0YWJsZU9wdGlvbnN9IGZyb20gJy4uL3RhYmxlcy90YWJsZUNvbnN0YW50cyc7XG5pbXBvcnQgd3JhcHBlZFNvcnRhYmxlIGZyb20gJy4uL3RhYmxlcy93cmFwcGVkX3NvcnRhYmxlJztcblxuaW1wb3J0IHttdWx0aXBsZUNob2ljZURhdGFQcm9wVHlwZX0gZnJvbSAnLi9hc3Nlc3NtZW50RGF0YVNoYXBlcyc7XG5pbXBvcnQgUGVyY2VudEFuc3dlcmVkQ2VsbCBmcm9tICcuL1BlcmNlbnRBbnN3ZXJlZENlbGwnO1xuaW1wb3J0IHtzZXRRdWVzdGlvbkluZGV4fSBmcm9tICcuL3NlY3Rpb25Bc3Nlc3NtZW50c1JlZHV4JztcblxuZXhwb3J0IGNvbnN0IENPTFVNTlMgPSB7XG4gIFFVRVNUSU9OOiAwLFxufTtcblxuY29uc3QgQU5TV0VSX0NPTFVNTl9XSURUSCA9IDcwO1xuY29uc3QgUEFERElORyA9IDIwO1xuXG5jb25zdCBOT1RfQU5TV0VSRUQgPSAnbm90QW5zd2VyZWQnO1xuXG5jb25zdCBhbnN3ZXJDb2x1bW5zRm9ybWF0dGVyID0gKFxuICBwZXJjZW50QW5zd2VyZWQsXG4gIHtyb3dEYXRhLCBjb2x1bW5JbmRleCwgcm93SW5kZXgsIHByb3BlcnR5fVxuKSA9PiB7XG4gIGxldCBwZXJjZW50VmFsdWUgPSAwO1xuICBjb25zdCBhbnN3ZXJSZXN1bHRzID0gcm93RGF0YS5hbnN3ZXJzW2NvbHVtbkluZGV4IC0gMV0gfHwge307XG5cbiAgaWYgKHByb3BlcnR5ID09PSBOT1RfQU5TV0VSRUQpIHtcbiAgICBwZXJjZW50VmFsdWUgPSBNYXRoLnJvdW5kKFxuICAgICAgKHJvd0RhdGEubm90QW5zd2VyZWQgLyByb3dEYXRhLnRvdGFsQW5zd2VyZWQpICogMTAwXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBwZXJjZW50VmFsdWUgPSBNYXRoLnJvdW5kKFxuICAgICAgKGFuc3dlclJlc3VsdHMubnVtQW5zd2VyZWQgLyByb3dEYXRhLnRvdGFsQW5zd2VyZWQpICogMTAwXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPFBlcmNlbnRBbnN3ZXJlZENlbGxcbiAgICAgIGlkPXtyb3dEYXRhLmlkfVxuICAgICAgcGVyY2VudFZhbHVlPXtwZXJjZW50VmFsdWV9XG4gICAgICBpc0NvcnJlY3RBbnN3ZXI9eyEhYW5zd2VyUmVzdWx0cy5pc0NvcnJlY3R9XG4gICAgLz5cbiAgKTtcbn07XG5cbi8qKlxuICogIEEgc2luZ2xlIHRhYmxlIHRoYXQgc2hvd3Mgc3R1ZGVudHMnIHJlc3BvbnNlcyB0byBlYWNoIG11bHRpcGxlIGNob2ljZSBxdWVzdGlvbi5cbiAqIFRoZSB0YWJsZSBkaXNwbGF5cyB0aGUgcGVyY2VudCBvZiBzdHVkZW50cyB0aGF0IHNlbGVjdCBhbiBhbnN3ZXIgY2hvaWNlIGFuZFxuICogcGVyY2VudCBvZiBzdHVkZW50cyB0aGF0IGRpZCBub3QgYW5zd2VyIHRoZSBxdWVzdGlvbi5cbiAqL1xuY2xhc3MgTXVsdGlwbGVDaG9pY2VBc3Nlc3NtZW50c092ZXJ2aWV3VGFibGUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHF1ZXN0aW9uQW5zd2VyRGF0YTogUHJvcFR5cGVzLmFycmF5T2YobXVsdGlwbGVDaG9pY2VEYXRhUHJvcFR5cGUpLFxuICAgIG9wZW5EaWFsb2c6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgc2V0UXVlc3Rpb25JbmRleDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgfTtcblxuICBzdGF0ZSA9IHtcbiAgICBbQ09MVU1OUy5RVUVTVElPTl06IHtcbiAgICAgIGRpcmVjdGlvbjogJ2Rlc2MnLFxuICAgICAgcG9zaXRpb246IDAsXG4gICAgfSxcbiAgfTtcblxuICBnZXRTb3J0aW5nQ29sdW1ucyA9ICgpID0+IHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5zb3J0aW5nQ29sdW1ucyB8fCB7fTtcbiAgfTtcblxuICBvblNvcnQgPSBzZWxlY3RlZENvbHVtbiA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzb3J0aW5nQ29sdW1uczogc29ydC5ieUNvbHVtbih7XG4gICAgICAgIHNvcnRpbmdDb2x1bW5zOiB0aGlzLnN0YXRlLnNvcnRpbmdDb2x1bW5zLFxuICAgICAgICAvLyBDdXN0b20gc29ydGluZ09yZGVyIHJlbW92ZXMgJ25vLXNvcnQnIGZyb20gdGhlIGN5Y2xlXG4gICAgICAgIHNvcnRpbmdPcmRlcjoge1xuICAgICAgICAgIEZJUlNUOiAnYXNjJyxcbiAgICAgICAgICBhc2M6ICdkZXNjJyxcbiAgICAgICAgICBkZXNjOiAnYXNjJyxcbiAgICAgICAgfSxcbiAgICAgICAgc2VsZWN0ZWRDb2x1bW4sXG4gICAgICB9KSxcbiAgICB9KTtcbiAgfTtcblxuICBzZWxlY3RRdWVzdGlvbiA9IGluZGV4ID0+IHtcbiAgICB0aGlzLnByb3BzLnNldFF1ZXN0aW9uSW5kZXgoaW5kZXgpO1xuICAgIHRoaXMucHJvcHMub3BlbkRpYWxvZygpO1xuICB9O1xuXG4gIHF1ZXN0aW9uRm9ybWF0dGVyID0gKFxuICAgIHF1ZXN0aW9uLFxuICAgIHtyb3dEYXRhLCBjb2x1bW5JbmRleCwgcm93SW5kZXgsIHByb3BlcnR5fVxuICApID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGFcbiAgICAgICAgICBzdHlsZT17c3R5bGVzLmxpbmt9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5zZWxlY3RRdWVzdGlvbihyb3dEYXRhLnF1ZXN0aW9uTnVtYmVyIC0gMSl9XG4gICAgICAgID5cbiAgICAgICAgICB7YCR7cm93RGF0YS5xdWVzdGlvbk51bWJlcn0uICR7cXVlc3Rpb259YH1cbiAgICAgICAgPC9hPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfTtcblxuICBnZXROb3RBbnN3ZXJlZENvbHVtbiA9ICgpID0+ICh7XG4gICAgcHJvcGVydHk6IE5PVF9BTlNXRVJFRCxcbiAgICBoZWFkZXI6IHtcbiAgICAgIGxhYmVsOiBpMThuLm5vdEFuc3dlcmVkKCksXG4gICAgICBwcm9wczoge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIC4uLnRhYmxlTGF5b3V0U3R5bGVzLmhlYWRlckNlbGwsXG4gICAgICAgICAgLi4uc3R5bGVzLmFuc3dlckNvbHVtbkhlYWRlcixcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBjZWxsOiB7XG4gICAgICBmb3JtYXR0ZXJzOiBbYW5zd2VyQ29sdW1uc0Zvcm1hdHRlcl0sXG4gICAgICBwcm9wczoge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIC4uLnRhYmxlTGF5b3V0U3R5bGVzLmNlbGwsXG4gICAgICAgICAgLi4uc3R5bGVzLm5vdEFuc3dlcmVkQ2VsbCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG5cbiAgZ2V0QW5zd2VyQ29sdW1uID0gY29sdW1uTGFiZWwgPT4gKHtcbiAgICBwcm9wZXJ0eTogJ3BlcmNlbnRBbnN3ZXJlZCcsXG4gICAgaGVhZGVyOiB7XG4gICAgICBsYWJlbDogY29sdW1uTGFiZWwsXG4gICAgICBwcm9wczoge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIC4uLnRhYmxlTGF5b3V0U3R5bGVzLmhlYWRlckNlbGwsXG4gICAgICAgICAgLi4uc3R5bGVzLmFuc3dlckNvbHVtbkhlYWRlcixcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBjZWxsOiB7XG4gICAgICBmb3JtYXR0ZXJzOiBbYW5zd2VyQ29sdW1uc0Zvcm1hdHRlcl0sXG4gICAgICBwcm9wczoge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIC4uLnRhYmxlTGF5b3V0U3R5bGVzLmNlbGwsXG4gICAgICAgICAgLi4uc3R5bGVzLmFuc3dlckNvbHVtbkNlbGwsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0pO1xuXG4gIGdldFF1ZXN0aW9uQ29sdW1uID0gKHNvcnRhYmxlLCBudW1BbnN3ZXJzKSA9PiAoe1xuICAgIHByb3BlcnR5OiAncXVlc3Rpb24nLFxuICAgIGhlYWRlcjoge1xuICAgICAgbGFiZWw6IGkxOG4ucXVlc3Rpb24oKSxcbiAgICAgIHByb3BzOiB7c3R5bGU6IHRhYmxlTGF5b3V0U3R5bGVzLmhlYWRlckNlbGx9LFxuICAgIH0sXG4gICAgY2VsbDoge1xuICAgICAgZm9ybWF0dGVyczogW3RoaXMucXVlc3Rpb25Gb3JtYXR0ZXJdLFxuICAgICAgcHJvcHM6IHtcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAuLi50YWJsZUxheW91dFN0eWxlcy5jZWxsLFxuICAgICAgICAgIG1heFdpZHRoOlxuICAgICAgICAgICAgc3R5bGVDb25zdGFudHNbJ2NvbnRlbnQtd2lkdGgnXSAtXG4gICAgICAgICAgICBudW1BbnN3ZXJzICogKEFOU1dFUl9DT0xVTU5fV0lEVEggKyBQQURESU5HKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG5cbiAgZ2V0Q29sdW1ucyA9IHNvcnRhYmxlID0+IHtcbiAgICBjb25zdCBtYXhPcHRpb25zUXVlc3Rpb24gPSBbLi4udGhpcy5wcm9wcy5xdWVzdGlvbkFuc3dlckRhdGFdXG4gICAgICAuc29ydChcbiAgICAgICAgKHF1ZXN0aW9uMSwgcXVlc3Rpb24yKSA9PlxuICAgICAgICAgIHF1ZXN0aW9uMS5hbnN3ZXJzLmxlbmd0aCAtIHF1ZXN0aW9uMi5hbnN3ZXJzLmxlbmd0aFxuICAgICAgKVxuICAgICAgLnBvcCgpO1xuXG4gICAgY29uc3QgY29sdW1uTGFiZWxOYW1lcyA9IG1heE9wdGlvbnNRdWVzdGlvbi5hbnN3ZXJzLm1hcChhbnN3ZXIgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0QW5zd2VyQ29sdW1uKGFuc3dlci5tdWx0aXBsZUNob2ljZU9wdGlvbik7XG4gICAgfSk7XG5cbiAgICBjb25zdCBudW1BbnN3ZXJDb2x1bW5zID0gY29sdW1uTGFiZWxOYW1lcy5sZW5ndGggKyAxO1xuICAgIHJldHVybiBbXG4gICAgICB0aGlzLmdldFF1ZXN0aW9uQ29sdW1uKHNvcnRhYmxlLCBudW1BbnN3ZXJDb2x1bW5zKSxcbiAgICAgIC4uLmNvbHVtbkxhYmVsTmFtZXMsXG4gICAgICB0aGlzLmdldE5vdEFuc3dlcmVkQ29sdW1uKCksXG4gICAgXTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgLy8gRGVmaW5lIGEgc29ydGluZyB0cmFuc2Zvcm0gdGhhdCBjYW4gYmUgYXBwbGllZCB0byBlYWNoIGNvbHVtblxuICAgIGNvbnN0IHNvcnRhYmxlID0gd3JhcHBlZFNvcnRhYmxlKFxuICAgICAgdGhpcy5nZXRTb3J0aW5nQ29sdW1ucyxcbiAgICAgIHRoaXMub25Tb3J0LFxuICAgICAgc29ydGFibGVPcHRpb25zXG4gICAgKTtcbiAgICBjb25zdCBjb2x1bW5zID0gdGhpcy5nZXRDb2x1bW5zKHNvcnRhYmxlKTtcbiAgICBjb25zdCBzb3J0aW5nQ29sdW1ucyA9IHRoaXMuZ2V0U29ydGluZ0NvbHVtbnMoKTtcblxuICAgIGNvbnN0IHNvcnRlZFJvd3MgPSBzb3J0LnNvcnRlcih7XG4gICAgICBjb2x1bW5zLFxuICAgICAgc29ydGluZ0NvbHVtbnMsXG4gICAgICBzb3J0OiBvcmRlckJ5LFxuICAgIH0pKHRoaXMucHJvcHMucXVlc3Rpb25BbnN3ZXJEYXRhKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8VGFibGUuUHJvdmlkZXIgY29sdW1ucz17Y29sdW1uc30gc3R5bGU9e3RhYmxlTGF5b3V0U3R5bGVzLnRhYmxlfT5cbiAgICAgICAgPFRhYmxlLkhlYWRlciAvPlxuICAgICAgICA8VGFibGUuQm9keSByb3dzPXtzb3J0ZWRSb3dzfSByb3dLZXk9XCJpZFwiIC8+XG4gICAgICA8L1RhYmxlLlByb3ZpZGVyPlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBhbnN3ZXJDb2x1bW5IZWFkZXI6IHtcbiAgICB3aWR0aDogQU5TV0VSX0NPTFVNTl9XSURUSCxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICB9LFxuICBhbnN3ZXJDb2x1bW5DZWxsOiB7XG4gICAgd2lkdGg6IEFOU1dFUl9DT0xVTU5fV0lEVEgsXG4gICAgcGFkZGluZzogMCxcbiAgICBoZWlnaHQ6IDQwLFxuICB9LFxuICBub3RBbnN3ZXJlZENlbGw6IHtcbiAgICBwYWRkaW5nOiAwLFxuICAgIGhlaWdodDogNDAsXG4gIH0sXG4gIGxpbms6IHtcbiAgICBjb2xvcjogY29sb3IudGVhbCxcbiAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgVW5jb25uZWN0ZWRNdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZSA9XG4gIE11bHRpcGxlQ2hvaWNlQXNzZXNzbWVudHNPdmVydmlld1RhYmxlO1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICBzdGF0ZSA9PiAoe30pLFxuICBkaXNwYXRjaCA9PiAoe1xuICAgIHNldFF1ZXN0aW9uSW5kZXgocXVlc3Rpb25JbmRleCkge1xuICAgICAgZGlzcGF0Y2goc2V0UXVlc3Rpb25JbmRleChxdWVzdGlvbkluZGV4KSk7XG4gICAgfSxcbiAgfSlcbikoTXVsdGlwbGVDaG9pY2VBc3Nlc3NtZW50c092ZXJ2aWV3VGFibGUpO1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgZm9udENvbnN0YW50cyBmcm9tICdAY2RvL2FwcHMvZm9udENvbnN0YW50cyc7XG5pbXBvcnQgRm9udEF3ZXNvbWUgZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9Gb250QXdlc29tZSc7XG5pbXBvcnQgY29sb3IgZnJvbSAnQGNkby9hcHBzL3V0aWwvY29sb3InO1xuXG5mdW5jdGlvbiBjYWxjdWxhdGVPcGFjaXR5KGFuc3dlcmVkKSB7XG4gIHJldHVybiAoYW5zd2VyZWQgKyAxMCkgLyAxMDA7XG59XG5cbmNsYXNzIFBlcmNlbnRBbnN3ZXJlZENlbGwgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHBlcmNlbnRWYWx1ZTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIGlzQ29ycmVjdEFuc3dlcjogUHJvcFR5cGVzLmJvb2wsXG4gICAgZGlzcGxheUFuc3dlcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBpc1N1cnZleTogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWFpbkxheW91dFN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHZhbHVlTGF5b3V0U3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIH07XG5cbiAgZ2V0QmFja2dyb3VuZENvbG9yID0gcGVyY2VudFZhbHVlID0+IHtcbiAgICBjb25zdCB7aXNDb3JyZWN0QW5zd2VyLCBpc1N1cnZleX0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IG9wYWNpdHkgPSBjYWxjdWxhdGVPcGFjaXR5KHBlcmNlbnRWYWx1ZSk7XG4gICAgcmV0dXJuIGlzQ29ycmVjdEFuc3dlciB8fCBpc1N1cnZleVxuICAgICAgPyBgcmdiYSgxNTksIDIxMiwgMTU5LCAke29wYWNpdHl9KWBcbiAgICAgIDogYHJnYmEoMjU1LCA5OSwgNzEsICR7b3BhY2l0eX0pYDtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge3BlcmNlbnRWYWx1ZSwgaXNDb3JyZWN0QW5zd2VyLCBkaXNwbGF5QW5zd2VyfSA9IHRoaXMucHJvcHM7XG5cbiAgICAvLyBEaXNwbGF5IGEgY2VsbCB3aXRoIGxldHRlcnMgZm9yIGFuc3dlcnMuXG4gICAgaWYgKGRpc3BsYXlBbnN3ZXIpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5tYWlufT5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMudmFsdWV9PntkaXNwbGF5QW5zd2VyfTwvZGl2PlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5pY29ufT5cbiAgICAgICAgICAgIHtpc0NvcnJlY3RBbnN3ZXIgJiYgKFxuICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWUgaWNvbj1cImNoZWNrLWNpcmNsZVwiIHN0eWxlPXtzdHlsZXMuaWNvbn0gLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBEaXNwbGF5IGEgY2VsbCBzaG93aW5nIHRoZSBwZXJjZW50IGFuc3dlcmVkLlxuICAgIGNvbnN0IGJhY2tncm91bmRDU1MgPSB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMuZ2V0QmFja2dyb3VuZENvbG9yKHBlcmNlbnRWYWx1ZSksXG4gICAgfTtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17ey4uLnRoaXMucHJvcHMubWFpbkxheW91dFN0eWxlLCAuLi5iYWNrZ3JvdW5kQ1NTfX0+XG4gICAgICAgIDxkaXYgc3R5bGU9e3suLi5zdHlsZXMudmFsdWUsIC4uLnRoaXMucHJvcHMudmFsdWVMYXlvdXRTdHlsZX19PlxuICAgICAgICAgIHtwZXJjZW50VmFsdWUgPj0gMCAmJiA8c3Bhbj57YCR7cGVyY2VudFZhbHVlfSVgfTwvc3Bhbj59XG4gICAgICAgICAge3BlcmNlbnRWYWx1ZSA8IDAgJiYgPHNwYW4+eyctJ308L3NwYW4+fVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmljb259PlxuICAgICAgICAgIHtpc0NvcnJlY3RBbnN3ZXIgJiYgKFxuICAgICAgICAgICAgPEZvbnRBd2Vzb21lIGljb249XCJjaGVjay1jaXJjbGVcIiBzdHlsZT17c3R5bGVzLmljb259IC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgbWFpbjoge1xuICAgIGJvcmRlcjogJ25vbmUnLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxuICAgIGhlaWdodDogJzEwMCUnLFxuICAgIHBhZGRpbmc6IDEwLFxuICB9LFxuICBpY29uOiB7XG4gICAgY29sb3I6IGNvbG9yLmxldmVsX3BlcmZlY3QsXG4gIH0sXG4gIHZhbHVlOiB7XG4gICAgY29sb3I6IGNvbG9yLmNoYXJjb2FsLFxuICAgIC4uLmZvbnRDb25zdGFudHNbJ21haW4tZm9udC1zZW1pLWJvbGQnXSxcbiAgfSxcbn07XG5cblBlcmNlbnRBbnN3ZXJlZENlbGwuZGVmYXVsdFByb3BzID0ge1xuICBwZXJjZW50VmFsdWU6IC0xLFxuICBtYWluTGF5b3V0U3R5bGU6IHN0eWxlcy5tYWluLFxuICB2YWx1ZUxheW91dFN0eWxlOiB7bWFyZ2luUmlnaHQ6IDEwfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBlcmNlbnRBbnN3ZXJlZENlbGw7XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuLyoqXG4gKiBJZiBjdXN0b20gUHJvcFR5cGUgc2hhcGVzIGFyZSByZXF1aXJlZCBpbiBtb3JlIHRoYW4gb25lIGZpbGUsXG4gKiB3ZSBkZWZpbmUgdGhlbSBoZXJlLlxuICovXG5cbi8vIFJlcHJlc2VudHMgYSBzaW5nbGUgc3R1ZGVudCdzIGZyZWUgcmVzcG9uc2UgdG8gYSBmcmVlIHJlc3BvbnNlXG4vLyBhc3Nlc3NtZW50IHF1ZXN0aW9uLlxuZXhwb3J0IGNvbnN0IGZyZWVSZXNwb25zZXNEYXRhUHJvcFR5cGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBpZDogUHJvcFR5cGVzLm51bWJlcixcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmVzcG9uc2U6IFByb3BUeXBlcy5zdHJpbmcsXG59KTtcblxuLy8gU2hhcGVzIGZvciBtdWx0aXBsZSBjaG9pY2Ugb3ZlcnZpZXdcblxuLy8gUmVwcmVzZW50cyBhIHNpbmdsZSBhbnN3ZXIgYW5kIHRoZSBudW1iZXIgb2Zcbi8vIHN0dWRlbnRzIHdobyBjaG9vc2UgdGhhdCBhbnN3ZXJcbmNvbnN0IG11bHRpcGxlQ2hvaWNlQW5zd2VyRGF0YVByb3BUeXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgbXVsdGlwbGVDaG9pY2VPcHRpb246IFByb3BUeXBlcy5zdHJpbmcsXG4gIG51bUFuc3dlcmVkOiBQcm9wVHlwZXMubnVtYmVyLFxuICBpc0NvcnJlY3Q6IFByb3BUeXBlcy5ib29sLFxuICBwZXJjZW50QW5zd2VyZWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHRleHQ6IFByb3BUeXBlcy5zdHJpbmcsXG59KTtcblxuLy8gUmVwcmVzZW50cyBhIHNpbmdsZSBxdWVzdGlvbiBhbmQgYSBzZWN0aW9uIHN1bW1hcnkgb2YgYW5zd2Vyc1xuZXhwb3J0IGNvbnN0IG11bHRpcGxlQ2hvaWNlRGF0YVByb3BUeXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgcXVlc3Rpb246IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgcXVlc3Rpb25OdW1iZXI6IFByb3BUeXBlcy5udW1iZXIsXG4gIGFuc3dlcnM6IFByb3BUeXBlcy5hcnJheU9mKG11bHRpcGxlQ2hvaWNlQW5zd2VyRGF0YVByb3BUeXBlKSxcbiAgdG90YWxBbnN3ZXJlZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBub3RBbnN3ZXJlZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxufSk7XG5cbi8vIFNoYXBlcyBmb3Igc2luZ2xlIHN0dWRlbnQgbXVsdGlwbGUgY2hvaWNlIHRhYmxlc1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYW4gaW5kaXZpZHVhbCBzdHVkZW50J3MgcmVzcG9uc2UgdG8gYSBzaW5nbGVcbiAqIG11bHRpcGxlIGNob2ljZSBxdWVzdGlvbi5cbiAqIHJlc3BvbnNlczogcmV0dXJucyBzdHJpbmdzIHN1Y2ggYXMgJ0EnLCBvciAnQSwgQydcbiAqL1xuZXhwb3J0IGNvbnN0IHN0dWRlbnRNQ1Jlc3BvbnNlUHJvcFR5cGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBpc0NvcnJlY3Q6IFByb3BUeXBlcy5ib29sLFxuICByZXNwb25zZXM6IFByb3BUeXBlcy5zdHJpbmcsXG59KTtcblxuLy8gUmVwcmVzZW50cyBhIHNpbmdsZSBzdHVkZW50IGFuZCBhIHNldCBvZiB0aGUgc3R1ZGVudCdzIGFuc3dlcnMgZm9yXG4vLyBhIHNpbmdsZSBhc3Nlc3NtZW50J3MgbXVsdGlwbGUgY2hvaWNlIHF1ZXN0aW9uc1xuZXhwb3J0IGNvbnN0IHN0dWRlbnRXaXRoTUNSZXNwb25zZXNQcm9wVHlwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIGlkOiBQcm9wVHlwZXMubnVtYmVyLFxuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzdHVkZW50UmVzcG9uc2VzOiBQcm9wVHlwZXMuYXJyYXlPZihzdHVkZW50TUNSZXNwb25zZVByb3BUeXBlKSxcbn0pO1xuXG4vLyBSZXByZXNlbnRzIGEgc2luZ2xlIG11bHRpcGxlIGNob2ljZSBxdWVzdGlvbiBzdHJ1Y3R1cmVcbmV4cG9ydCBjb25zdCBtdWx0aXBsZUNob2ljZVF1ZXN0aW9uUHJvcFR5cGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBpZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBxdWVzdGlvbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBjb3JyZWN0QW5zd2VyOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG59KTtcblxuLy8gU3VtbWFyeSBvZiBzdHVkZW50IGFuc3dlcnMgZm9yIG1hdGNoIGFuZCBtdWx0aXBsZSBjaG9pY2UgcXVlc3Rpb25zXG5leHBvcnQgY29uc3Qgc3R1ZGVudE92ZXJ2aWV3RGF0YVByb3BUeXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBudW1NdWx0aXBsZUNob2ljZUNvcnJlY3Q6IFByb3BUeXBlcy5udW1iZXIsXG4gIG51bU11bHRpcGxlQ2hvaWNlOiBQcm9wVHlwZXMubnVtYmVyLFxuICBudW1NYXRjaENvcnJlY3Q6IFByb3BUeXBlcy5udW1iZXIsXG4gIG51bU1hdGNoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAvKiB0aW1lc3RhbXAgaXMgcGFzc2VkIGluIGFzIGEgRGF0ZSBzbyB0aGUgY29sdW1uIGNhbiBiZSBzb3J0ZWQgYWNjdXJhdGVseS4gU2VlIG5vdGUgaW4gc2VjdGlvbkFzc2Vzc21lbnRzUmVkdXggZm9yIGRldGFpbHMqL1xuICBzdWJtaXNzaW9uVGltZVN0YW1wOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKS5pc1JlcXVpcmVkLFxuICBpc1N1Ym1pdHRlZDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgaW5Qcm9ncmVzczogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgdXJsOiBQcm9wVHlwZXMuc3RyaW5nLFxufSk7XG5cbi8vIFNoYXBlcyBmb3IgbWF0Y2ggb3ZlcnZpZXdcblxuLy8gUmVwcmVzZW50cyBhIHNpbmdsZSBhbnN3ZXIgZm9yIGEgc2luZ2xlIG9wdGlvbiBvZiBhIG1hdGNoIHF1ZXN0aW9uIGFuZCBhIHNlY3Rpb24gc3VtbWFyeSBvZiBhbnN3ZXJzXG5jb25zdCBhbnN3ZXJNYXRjaERhdGFQcm9wVHlwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIGFuc3dlcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgaXNDb3JyZWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgbnVtQW5zd2VyZWQ6IFByb3BUeXBlcy5udW1iZXIsXG59KTtcblxuLy8gUmVwcmVzZW50cyBhIHNpbmdsZSBvcHRpb24gb2YgYSBtYXRjaCBxdWVzdGlvbiBhbmQgYSBzZWN0aW9uIHN1bW1hcnkgb2YgYW5zd2Vyc1xuZXhwb3J0IGNvbnN0IG9wdGlvbkRhdGFQcm9wVHlwZU1hdGNoID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgb3B0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0b3RhbEFuc3dlcmVkOiBQcm9wVHlwZXMubnVtYmVyLFxuICBub3RBbnN3ZXJlZDogUHJvcFR5cGVzLm51bWJlcixcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIGFuc3dlcnM6IFByb3BUeXBlcy5hcnJheU9mKGFuc3dlck1hdGNoRGF0YVByb3BUeXBlKSxcbn0pO1xuXG4vLyBSZXByZXNlbnRzIGEgc2luZ2xlIG1hdGNoIHF1ZXN0aW9uIGFuZCBhIHNlY3Rpb24gc3VtbWFyeSBvZiBhbnN3ZXJzXG5leHBvcnQgY29uc3QgbWF0Y2hEYXRhUHJvcFR5cGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBpZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBxdWVzdGlvbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBxdWVzdGlvbk51bWJlcjogUHJvcFR5cGVzLm51bWJlcixcbiAgb3B0aW9uczogUHJvcFR5cGVzLmFycmF5T2Yob3B0aW9uRGF0YVByb3BUeXBlTWF0Y2gpLFxufSk7XG5cbi8vIFJlcHJlc2VudHMgYSBzaW5nbGUgbWF0Y2ggcXVlc3Rpb24gc3RydWN0dXJlXG5leHBvcnQgY29uc3QgbWF0Y2hEZXRhaWxzUXVlc3Rpb25Qcm9wVHlwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIHF1ZXN0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHF1ZXN0aW9uVHlwZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgYW5zd2VyczogUHJvcFR5cGVzLmFycmF5LFxuICBvcHRpb25zOiBQcm9wVHlwZXMuYXJyYXksXG59KTtcblxuLy8gU2hhcGVzIGZvciBzaW5nbGUgc3R1ZGVudCBtYXRjaCB0YWJsZXNcblxuLyoqXG4gKiBSZXByZXNlbnRzIGFuIGluZGl2aWR1YWwgc3R1ZGVudCdzIHJlc3BvbnNlIHRvIGEgc2luZ2xlXG4gKiBtYXRjaCBxdWVzdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IHN0dWRlbnRNYXRjaFJlc3BvbnNlUHJvcFR5cGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICByZXNwb25zZXM6IFByb3BUeXBlcy5hcnJheSxcbn0pO1xuXG4vLyBSZXByZXNlbnRzIGEgc2luZ2xlIHN0dWRlbnQgYW5kIGEgc2V0IG9mIHRoZSBzdHVkZW50J3MgYW5zd2VycyBmb3Jcbi8vIGEgc2luZ2xlIGFzc2Vzc21lbnQncyBtYXRjaCBxdWVzdGlvbnNcbmV4cG9ydCBjb25zdCBzdHVkZW50V2l0aE1hdGNoUmVzcG9uc2VzUHJvcFR5cGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBpZDogUHJvcFR5cGVzLm51bWJlcixcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgc3R1ZGVudFJlc3BvbnNlczogUHJvcFR5cGVzLmFycmF5T2Yoc3R1ZGVudE1hdGNoUmVzcG9uc2VQcm9wVHlwZSksXG59KTtcblxuLy8gUmVwcmVzZW50cyBhIHNpbmdsZSBtYXRjaCBxdWVzdGlvbiBzdHJ1Y3R1cmVcbmV4cG9ydCBjb25zdCBtYXRjaFF1ZXN0aW9uUHJvcFR5cGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBpZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBxdWVzdGlvbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBxdWVzdGlvbk51bWJlcjogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBhbnN3ZXJzOiBQcm9wVHlwZXMuYXJyYXksXG4gIG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheSxcbn0pO1xuXG5leHBvcnQgY29uc3QgUVVFU1RJT05fQ0hBUkFDVEVSX0xJTUlUID0gMTEwO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIHNvcnQgZnJvbSAnc29ydGFidWxhcic7XG5cbmltcG9ydCBGb250QXdlc29tZSBmcm9tICcuLi9Gb250QXdlc29tZSc7XG5cbi8qKlxuICogU29ydGFibGUgdHJhbnNmb3JtIHRoYXQgd3JhcHMgYSBSZWFjdGFidWxhciB0cmFuc2Zvcm0gZ2VuZXJhdGVkIGJ5IHNvcnQuc29ydCBzbyB0aGF0XG4gKiBpbnN0ZWFkIG9mIGFwcGx5aW5nIHNvcnQgY2xhc3NlcyB0byB0aGUgaGVhZGVyIGNlbGwgaXQgYWRkcyB0aGUgYXBwcm9wcmlhdGUgRm9udEF3ZXNvbWVcbiAqIGNvbXBvbmVudCB0byB0aGUgY2VsbCBjb250ZW50cy5cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oKTogb2JqZWN0W119IGdldFNvcnRpbmdDb2x1bW5zXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKG51bWJlcik6IG9iamVjdH0gb25Tb3J0XG4gKiBAcGFyYW0ge29iamVjdH0gc3R5bGVzIC0gb3B0aW9uYWwgc3R5bGVzIHRvIGFwcGx5IHRvIHRoZSBzb3J0IGljb25zLCBpbiBzdGF0ZXMge2RlZmF1bHQsIHNvcnRBc2MsIHNvcnREZXNjfVxuICogICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCB0aGUgY29udGFpbmVyIGRpdiB7Y29udGFpbmVyfVxuICogQHJldHVybnMge2Z1bmN0aW9uKHN0cmluZywgb2JqZWN0KTogb2JqZWN0fSBhIG5ldyBjZWxsIHRyYW5zZm9ybSBmdW5jdGlvblxuICogQHNlZSBodHRwOi8vcmVhY3RhYnVsYXIuanMub3JnLyMvY29sdW1uLWRlZmluaXRpb24vdHJhbnNmb3Jtc1xuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVhY3RhYnVsYXIvcmVhY3RhYnVsYXIvYmxvYi9tYXN0ZXIvcGFja2FnZXMvcmVhY3RhYnVsYXItc29ydC9zcmMvc29ydC5qc1xuICovXG5mdW5jdGlvbiB3cmFwcGVkU29ydGFibGUoZ2V0U29ydGluZ0NvbHVtbnMsIG9uU29ydCwgc3R5bGVzID0ge30pIHtcbiAgY29uc3QgYmFzaWNTb3J0YWJsZSA9IHNvcnQuc29ydCh7Z2V0U29ydGluZ0NvbHVtbnMsIG9uU29ydH0pO1xuXG4gIHJldHVybiAobGFiZWwsIGNvbHVtbkluZm8pID0+IHtcbiAgICBjb25zdCB7Y2xhc3NOYW1lOiBuZXdDbGFzc05hbWUsIC4uLm5ld1Byb3BzfSA9IGJhc2ljU29ydGFibGUoXG4gICAgICBsYWJlbCxcbiAgICAgIGNvbHVtbkluZm9cbiAgICApO1xuXG4gICAgLy8gRGV0ZWN0IG5ldyBjbGFzc2VzIGFwcGxpZWQgYnkgc29ydCB0cmFuc2Zvcm06IHNvcnQtbm9uZSwgc29ydC1hc2MsIHNvcnQtZGVzY1xuICAgIC8vIEluc3RlYWQgb2YgYXBwbHlpbmcgdGhvc2UgY2xhc3NlcywgYWRkIGRpZmZlcmVudCBGb250QXdlc29tZSBpY29uc1xuICAgIGxldCBzb3J0SWNvbiA9IChcbiAgICAgIDxGb250QXdlc29tZSBpY29uPVwic29ydFwiIGNsYXNzTmFtZT1cImZhLWZ3XCIgc3R5bGU9e3N0eWxlcy5kZWZhdWx0fSAvPlxuICAgICk7XG4gICAgaWYgKC9zb3J0LWFzYy8udGVzdChuZXdDbGFzc05hbWUpKSB7XG4gICAgICBzb3J0SWNvbiA9IChcbiAgICAgICAgPEZvbnRBd2Vzb21lIGljb249XCJzb3J0LWFzY1wiIGNsYXNzTmFtZT1cImZhLWZ3XCIgc3R5bGU9e3N0eWxlcy5zb3J0QXNjfSAvPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKC9zb3J0LWRlc2MvLnRlc3QobmV3Q2xhc3NOYW1lKSkge1xuICAgICAgc29ydEljb24gPSAoXG4gICAgICAgIDxGb250QXdlc29tZVxuICAgICAgICAgIGljb249XCJzb3J0LWRlc2NcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cImZhLWZ3XCJcbiAgICAgICAgICBzdHlsZT17c3R5bGVzLnNvcnREZXNjfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBEaXNhYmxlIHdyYXBwaW5nIG9uIHRoZSBzb3J0aW5nIGljb24gdG8gZW5zdXJlIHRoYXQgdGhlIGhlYWRlciB3aWxsXG4gICAgLy8gbmV2ZXIgd3JhcCBzdWNoIHRoYXQgdGhlIHNvcnRpbmcgaWNvbiBpcyBvbiBhIHJvdyBhbGwgb24gaXRzIG93bi5cbiAgICAvL1xuICAgIC8vIE5vdGUgdGhhdCB3ZSBjb3VsZCBhcHBseSB0aGlzIHN0eWxlIHRvIHRoZSB3aG9sZSBoZWFkZXIgY2VsbCwgYnV0IHRoYXRcbiAgICAvLyB3b3VsZCBwcmV2ZW50IGFueSB3cmFwcGluZyBmcm9tIGhhcHBlbmluZyBhdCBhbGw7IGJlY2F1c2Ugd2Ugd2FudCB0b1xuICAgIC8vIGFsbG93IGZvciB0aGUgcG9zc2liaWxpdHkgb2YgbG9uZyBoZWFkZXIgbmFtZXMgdGhhdCBfc2hvdWxkXyB3cmFwLCB0aGlzXG4gICAgLy8gcHJvdmlkZXMgYSBuaWNlIGNvbXByb21pc2UuXG4gICAgY29uc3Qgc29ydEljb25TcGFuU3R5bGUgPSB7d2hpdGVTcGFjZTogJ25vd3JhcCd9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLm5ld1Byb3BzLFxuICAgICAgc3R5bGU6IE9iamVjdC5hc3NpZ24oe30sIHtjdXJzb3I6ICdwb2ludGVyJ30pLFxuICAgICAgY2hpbGRyZW46IChcbiAgICAgICAgPHNwYW4gc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgICAgIDxzcGFuIGtleT1cImljb25cIiBzdHlsZT17c29ydEljb25TcGFuU3R5bGV9PlxuICAgICAgICAgICAge3NvcnRJY29ufVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBrZXk9XCJsYWJlbFwiPntsYWJlbH08L3NwYW4+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICksXG4gICAgfTtcbiAgfTtcbn1cbmV4cG9ydCBkZWZhdWx0IHdyYXBwZWRTb3J0YWJsZTtcbiIsInZhciBiYXNlRm9yT3duID0gcmVxdWlyZSgnLi9fYmFzZUZvck93bicpLFxuICAgIGNyZWF0ZUJhc2VFYWNoID0gcmVxdWlyZSgnLi9fY3JlYXRlQmFzZUVhY2gnKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5mb3JFYWNoYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl8T2JqZWN0fSBSZXR1cm5zIGBjb2xsZWN0aW9uYC5cbiAqL1xudmFyIGJhc2VFYWNoID0gY3JlYXRlQmFzZUVhY2goYmFzZUZvck93bik7XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUVhY2g7XG4iLCJ2YXIgYmFzZUVhY2ggPSByZXF1aXJlKCcuL19iYXNlRWFjaCcpLFxuICAgIGlzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hcGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgbWFwcGVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBiYXNlTWFwKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gaXNBcnJheUxpa2UoY29sbGVjdGlvbikgPyBBcnJheShjb2xsZWN0aW9uLmxlbmd0aCkgOiBbXTtcblxuICBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgcmVzdWx0WysraW5kZXhdID0gaXRlcmF0ZWUodmFsdWUsIGtleSwgY29sbGVjdGlvbik7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VNYXA7XG4iLCJ2YXIgYXJyYXlNYXAgPSByZXF1aXJlKCcuL19hcnJheU1hcCcpLFxuICAgIGJhc2VHZXQgPSByZXF1aXJlKCcuL19iYXNlR2V0JyksXG4gICAgYmFzZUl0ZXJhdGVlID0gcmVxdWlyZSgnLi9fYmFzZUl0ZXJhdGVlJyksXG4gICAgYmFzZU1hcCA9IHJlcXVpcmUoJy4vX2Jhc2VNYXAnKSxcbiAgICBiYXNlU29ydEJ5ID0gcmVxdWlyZSgnLi9fYmFzZVNvcnRCeScpLFxuICAgIGJhc2VVbmFyeSA9IHJlcXVpcmUoJy4vX2Jhc2VVbmFyeScpLFxuICAgIGNvbXBhcmVNdWx0aXBsZSA9IHJlcXVpcmUoJy4vX2NvbXBhcmVNdWx0aXBsZScpLFxuICAgIGlkZW50aXR5ID0gcmVxdWlyZSgnLi9pZGVudGl0eScpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5vcmRlckJ5YCB3aXRob3V0IHBhcmFtIGd1YXJkcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbltdfE9iamVjdFtdfHN0cmluZ1tdfSBpdGVyYXRlZXMgVGhlIGl0ZXJhdGVlcyB0byBzb3J0IGJ5LlxuICogQHBhcmFtIHtzdHJpbmdbXX0gb3JkZXJzIFRoZSBzb3J0IG9yZGVycyBvZiBgaXRlcmF0ZWVzYC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IHNvcnRlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYmFzZU9yZGVyQnkoY29sbGVjdGlvbiwgaXRlcmF0ZWVzLCBvcmRlcnMpIHtcbiAgaWYgKGl0ZXJhdGVlcy5sZW5ndGgpIHtcbiAgICBpdGVyYXRlZXMgPSBhcnJheU1hcChpdGVyYXRlZXMsIGZ1bmN0aW9uKGl0ZXJhdGVlKSB7XG4gICAgICBpZiAoaXNBcnJheShpdGVyYXRlZSkpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VHZXQodmFsdWUsIGl0ZXJhdGVlLmxlbmd0aCA9PT0gMSA/IGl0ZXJhdGVlWzBdIDogaXRlcmF0ZWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gaXRlcmF0ZWU7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgaXRlcmF0ZWVzID0gW2lkZW50aXR5XTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IC0xO1xuICBpdGVyYXRlZXMgPSBhcnJheU1hcChpdGVyYXRlZXMsIGJhc2VVbmFyeShiYXNlSXRlcmF0ZWUpKTtcblxuICB2YXIgcmVzdWx0ID0gYmFzZU1hcChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgdmFyIGNyaXRlcmlhID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBmdW5jdGlvbihpdGVyYXRlZSkge1xuICAgICAgcmV0dXJuIGl0ZXJhdGVlKHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4geyAnY3JpdGVyaWEnOiBjcml0ZXJpYSwgJ2luZGV4JzogKytpbmRleCwgJ3ZhbHVlJzogdmFsdWUgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIGJhc2VTb3J0QnkocmVzdWx0LCBmdW5jdGlvbihvYmplY3QsIG90aGVyKSB7XG4gICAgcmV0dXJuIGNvbXBhcmVNdWx0aXBsZShvYmplY3QsIG90aGVyLCBvcmRlcnMpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlT3JkZXJCeTtcbiIsIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uc29ydEJ5YCB3aGljaCB1c2VzIGBjb21wYXJlcmAgdG8gZGVmaW5lIHRoZVxuICogc29ydCBvcmRlciBvZiBgYXJyYXlgIGFuZCByZXBsYWNlcyBjcml0ZXJpYSBvYmplY3RzIHdpdGggdGhlaXIgY29ycmVzcG9uZGluZ1xuICogdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gc29ydC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNvbXBhcmVyIFRoZSBmdW5jdGlvbiB0byBkZWZpbmUgc29ydCBvcmRlci5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBgYXJyYXlgLlxuICovXG5mdW5jdGlvbiBiYXNlU29ydEJ5KGFycmF5LCBjb21wYXJlcikge1xuICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuXG4gIGFycmF5LnNvcnQoY29tcGFyZXIpO1xuICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICBhcnJheVtsZW5ndGhdID0gYXJyYXlbbGVuZ3RoXS52YWx1ZTtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVNvcnRCeTtcbiIsInZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXNTeW1ib2wnKTtcblxuLyoqXG4gKiBDb21wYXJlcyB2YWx1ZXMgdG8gc29ydCB0aGVtIGluIGFzY2VuZGluZyBvcmRlci5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBzb3J0IG9yZGVyIGluZGljYXRvciBmb3IgYHZhbHVlYC5cbiAqL1xuZnVuY3Rpb24gY29tcGFyZUFzY2VuZGluZyh2YWx1ZSwgb3RoZXIpIHtcbiAgaWYgKHZhbHVlICE9PSBvdGhlcikge1xuICAgIHZhciB2YWxJc0RlZmluZWQgPSB2YWx1ZSAhPT0gdW5kZWZpbmVkLFxuICAgICAgICB2YWxJc051bGwgPSB2YWx1ZSA9PT0gbnVsbCxcbiAgICAgICAgdmFsSXNSZWZsZXhpdmUgPSB2YWx1ZSA9PT0gdmFsdWUsXG4gICAgICAgIHZhbElzU3ltYm9sID0gaXNTeW1ib2wodmFsdWUpO1xuXG4gICAgdmFyIG90aElzRGVmaW5lZCA9IG90aGVyICE9PSB1bmRlZmluZWQsXG4gICAgICAgIG90aElzTnVsbCA9IG90aGVyID09PSBudWxsLFxuICAgICAgICBvdGhJc1JlZmxleGl2ZSA9IG90aGVyID09PSBvdGhlcixcbiAgICAgICAgb3RoSXNTeW1ib2wgPSBpc1N5bWJvbChvdGhlcik7XG5cbiAgICBpZiAoKCFvdGhJc051bGwgJiYgIW90aElzU3ltYm9sICYmICF2YWxJc1N5bWJvbCAmJiB2YWx1ZSA+IG90aGVyKSB8fFxuICAgICAgICAodmFsSXNTeW1ib2wgJiYgb3RoSXNEZWZpbmVkICYmIG90aElzUmVmbGV4aXZlICYmICFvdGhJc051bGwgJiYgIW90aElzU3ltYm9sKSB8fFxuICAgICAgICAodmFsSXNOdWxsICYmIG90aElzRGVmaW5lZCAmJiBvdGhJc1JlZmxleGl2ZSkgfHxcbiAgICAgICAgKCF2YWxJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICF2YWxJc1JlZmxleGl2ZSkge1xuICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIGlmICgoIXZhbElzTnVsbCAmJiAhdmFsSXNTeW1ib2wgJiYgIW90aElzU3ltYm9sICYmIHZhbHVlIDwgb3RoZXIpIHx8XG4gICAgICAgIChvdGhJc1N5bWJvbCAmJiB2YWxJc0RlZmluZWQgJiYgdmFsSXNSZWZsZXhpdmUgJiYgIXZhbElzTnVsbCAmJiAhdmFsSXNTeW1ib2wpIHx8XG4gICAgICAgIChvdGhJc051bGwgJiYgdmFsSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlKSB8fFxuICAgICAgICAoIW90aElzRGVmaW5lZCAmJiB2YWxJc1JlZmxleGl2ZSkgfHxcbiAgICAgICAgIW90aElzUmVmbGV4aXZlKSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICB9XG4gIHJldHVybiAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbXBhcmVBc2NlbmRpbmc7XG4iLCJ2YXIgY29tcGFyZUFzY2VuZGluZyA9IHJlcXVpcmUoJy4vX2NvbXBhcmVBc2NlbmRpbmcnKTtcblxuLyoqXG4gKiBVc2VkIGJ5IGBfLm9yZGVyQnlgIHRvIGNvbXBhcmUgbXVsdGlwbGUgcHJvcGVydGllcyBvZiBhIHZhbHVlIHRvIGFub3RoZXJcbiAqIGFuZCBzdGFibGUgc29ydCB0aGVtLlxuICpcbiAqIElmIGBvcmRlcnNgIGlzIHVuc3BlY2lmaWVkLCBhbGwgdmFsdWVzIGFyZSBzb3J0ZWQgaW4gYXNjZW5kaW5nIG9yZGVyLiBPdGhlcndpc2UsXG4gKiBzcGVjaWZ5IGFuIG9yZGVyIG9mIFwiZGVzY1wiIGZvciBkZXNjZW5kaW5nIG9yIFwiYXNjXCIgZm9yIGFzY2VuZGluZyBzb3J0IG9yZGVyXG4gKiBvZiBjb3JyZXNwb25kaW5nIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtib29sZWFuW118c3RyaW5nW119IG9yZGVycyBUaGUgb3JkZXIgdG8gc29ydCBieSBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIHNvcnQgb3JkZXIgaW5kaWNhdG9yIGZvciBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gY29tcGFyZU11bHRpcGxlKG9iamVjdCwgb3RoZXIsIG9yZGVycykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIG9iakNyaXRlcmlhID0gb2JqZWN0LmNyaXRlcmlhLFxuICAgICAgb3RoQ3JpdGVyaWEgPSBvdGhlci5jcml0ZXJpYSxcbiAgICAgIGxlbmd0aCA9IG9iakNyaXRlcmlhLmxlbmd0aCxcbiAgICAgIG9yZGVyc0xlbmd0aCA9IG9yZGVycy5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgcmVzdWx0ID0gY29tcGFyZUFzY2VuZGluZyhvYmpDcml0ZXJpYVtpbmRleF0sIG90aENyaXRlcmlhW2luZGV4XSk7XG4gICAgaWYgKHJlc3VsdCkge1xuICAgICAgaWYgKGluZGV4ID49IG9yZGVyc0xlbmd0aCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgdmFyIG9yZGVyID0gb3JkZXJzW2luZGV4XTtcbiAgICAgIHJldHVybiByZXN1bHQgKiAob3JkZXIgPT0gJ2Rlc2MnID8gLTEgOiAxKTtcbiAgICB9XG4gIH1cbiAgLy8gRml4ZXMgYW4gYEFycmF5I3NvcnRgIGJ1ZyBpbiB0aGUgSlMgZW5naW5lIGVtYmVkZGVkIGluIEFkb2JlIGFwcGxpY2F0aW9uc1xuICAvLyB0aGF0IGNhdXNlcyBpdCwgdW5kZXIgY2VydGFpbiBjaXJjdW1zdGFuY2VzLCB0byBwcm92aWRlIHRoZSBzYW1lIHZhbHVlIGZvclxuICAvLyBgb2JqZWN0YCBhbmQgYG90aGVyYC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qYXNoa2VuYXMvdW5kZXJzY29yZS9wdWxsLzEyNDdcbiAgLy8gZm9yIG1vcmUgZGV0YWlscy5cbiAgLy9cbiAgLy8gVGhpcyBhbHNvIGVuc3VyZXMgYSBzdGFibGUgc29ydCBpbiBWOCBhbmQgb3RoZXIgZW5naW5lcy5cbiAgLy8gU2VlIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTkwIGZvciBtb3JlIGRldGFpbHMuXG4gIHJldHVybiBvYmplY3QuaW5kZXggLSBvdGhlci5pbmRleDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb21wYXJlTXVsdGlwbGU7XG4iLCJ2YXIgaXNBcnJheUxpa2UgPSByZXF1aXJlKCcuL2lzQXJyYXlMaWtlJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGBiYXNlRWFjaGAgb3IgYGJhc2VFYWNoUmlnaHRgIGZ1bmN0aW9uLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlYWNoRnVuYyBUaGUgZnVuY3Rpb24gdG8gaXRlcmF0ZSBvdmVyIGEgY29sbGVjdGlvbi5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYmFzZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQmFzZUVhY2goZWFjaEZ1bmMsIGZyb21SaWdodCkge1xuICByZXR1cm4gZnVuY3Rpb24oY29sbGVjdGlvbiwgaXRlcmF0ZWUpIHtcbiAgICBpZiAoY29sbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gY29sbGVjdGlvbjtcbiAgICB9XG4gICAgaWYgKCFpc0FycmF5TGlrZShjb2xsZWN0aW9uKSkge1xuICAgICAgcmV0dXJuIGVhY2hGdW5jKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKTtcbiAgICB9XG4gICAgdmFyIGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuICAgICAgICBpbmRleCA9IGZyb21SaWdodCA/IGxlbmd0aCA6IC0xLFxuICAgICAgICBpdGVyYWJsZSA9IE9iamVjdChjb2xsZWN0aW9uKTtcblxuICAgIHdoaWxlICgoZnJvbVJpZ2h0ID8gaW5kZXgtLSA6ICsraW5kZXggPCBsZW5ndGgpKSB7XG4gICAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVbaW5kZXhdLCBpbmRleCwgaXRlcmFibGUpID09PSBmYWxzZSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvbGxlY3Rpb247XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQmFzZUVhY2g7XG4iLCJ2YXIgYmFzZU9yZGVyQnkgPSByZXF1aXJlKCcuL19iYXNlT3JkZXJCeScpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKTtcblxuLyoqXG4gKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLnNvcnRCeWAgZXhjZXB0IHRoYXQgaXQgYWxsb3dzIHNwZWNpZnlpbmcgdGhlIHNvcnRcbiAqIG9yZGVycyBvZiB0aGUgaXRlcmF0ZWVzIHRvIHNvcnQgYnkuIElmIGBvcmRlcnNgIGlzIHVuc3BlY2lmaWVkLCBhbGwgdmFsdWVzXG4gKiBhcmUgc29ydGVkIGluIGFzY2VuZGluZyBvcmRlci4gT3RoZXJ3aXNlLCBzcGVjaWZ5IGFuIG9yZGVyIG9mIFwiZGVzY1wiIGZvclxuICogZGVzY2VuZGluZyBvciBcImFzY1wiIGZvciBhc2NlbmRpbmcgc29ydCBvcmRlciBvZiBjb3JyZXNwb25kaW5nIHZhbHVlcy5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtBcnJheVtdfEZ1bmN0aW9uW118T2JqZWN0W118c3RyaW5nW119IFtpdGVyYXRlZXM9W18uaWRlbnRpdHldXVxuICogIFRoZSBpdGVyYXRlZXMgdG8gc29ydCBieS5cbiAqIEBwYXJhbSB7c3RyaW5nW119IFtvcmRlcnNdIFRoZSBzb3J0IG9yZGVycyBvZiBgaXRlcmF0ZWVzYC5cbiAqIEBwYXJhbS0ge09iamVjdH0gW2d1YXJkXSBFbmFibGVzIHVzZSBhcyBhbiBpdGVyYXRlZSBmb3IgbWV0aG9kcyBsaWtlIGBfLnJlZHVjZWAuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBzb3J0ZWQgYXJyYXkuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciB1c2VycyA9IFtcbiAqICAgeyAndXNlcic6ICdmcmVkJywgICAnYWdlJzogNDggfSxcbiAqICAgeyAndXNlcic6ICdiYXJuZXknLCAnYWdlJzogMzQgfSxcbiAqICAgeyAndXNlcic6ICdmcmVkJywgICAnYWdlJzogNDAgfSxcbiAqICAgeyAndXNlcic6ICdiYXJuZXknLCAnYWdlJzogMzYgfVxuICogXTtcbiAqXG4gKiAvLyBTb3J0IGJ5IGB1c2VyYCBpbiBhc2NlbmRpbmcgb3JkZXIgYW5kIGJ5IGBhZ2VgIGluIGRlc2NlbmRpbmcgb3JkZXIuXG4gKiBfLm9yZGVyQnkodXNlcnMsIFsndXNlcicsICdhZ2UnXSwgWydhc2MnLCAnZGVzYyddKTtcbiAqIC8vID0+IG9iamVjdHMgZm9yIFtbJ2Jhcm5leScsIDM2XSwgWydiYXJuZXknLCAzNF0sIFsnZnJlZCcsIDQ4XSwgWydmcmVkJywgNDBdXVxuICovXG5mdW5jdGlvbiBvcmRlckJ5KGNvbGxlY3Rpb24sIGl0ZXJhdGVlcywgb3JkZXJzLCBndWFyZCkge1xuICBpZiAoY29sbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGlmICghaXNBcnJheShpdGVyYXRlZXMpKSB7XG4gICAgaXRlcmF0ZWVzID0gaXRlcmF0ZWVzID09IG51bGwgPyBbXSA6IFtpdGVyYXRlZXNdO1xuICB9XG4gIG9yZGVycyA9IGd1YXJkID8gdW5kZWZpbmVkIDogb3JkZXJzO1xuICBpZiAoIWlzQXJyYXkob3JkZXJzKSkge1xuICAgIG9yZGVycyA9IG9yZGVycyA9PSBudWxsID8gW10gOiBbb3JkZXJzXTtcbiAgfVxuICByZXR1cm4gYmFzZU9yZGVyQnkoY29sbGVjdGlvbiwgaXRlcmF0ZWVzLCBvcmRlcnMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG9yZGVyQnk7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5cbmltcG9ydCB7VW5jb25uZWN0ZWRNdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZSBhcyBNdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZX0gZnJvbSAnLi9NdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZSc7XG5cbmNvbnN0IG11bHRpcGxlQ2hvaWNlRGF0YSA9IFtcbiAge1xuICAgIGlkOiAxLFxuICAgIHF1ZXN0aW9uTnVtYmVyOiAxLFxuICAgIHF1ZXN0aW9uOiAnV2hhdCBpcyBhIHZhcmlhYmxlPycsXG4gICAgYW5zd2VyczogW1xuICAgICAge1xuICAgICAgICBtdWx0aXBsZUNob2ljZU9wdGlvbjogaTE4bi5hbnN3ZXJPcHRpb25BKCksXG4gICAgICAgIG51bUFuc3dlcmVkOiAyLFxuICAgICAgICBpc0NvcnJlY3Q6IHRydWUsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBtdWx0aXBsZUNob2ljZU9wdGlvbjogaTE4bi5hbnN3ZXJPcHRpb25CKCksXG4gICAgICAgIG51bUFuc3dlcmVkOiA0LFxuICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGVDaG9pY2VPcHRpb246IGkxOG4uYW5zd2VyT3B0aW9uQygpLFxuICAgICAgICBudW1BbnN3ZXJlZDogMSxcbiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG11bHRpcGxlQ2hvaWNlT3B0aW9uOiBpMThuLmFuc3dlck9wdGlvbkQoKSxcbiAgICAgICAgbnVtQW5zd2VyZWQ6IDIsXG4gICAgICAgIGlzQ29ycmVjdDogZmFsc2UsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbm90QW5zd2VyZWQ6IDEsXG4gICAgdG90YWxBbnN3ZXJlZDogMTAsXG4gIH0sXG4gIHtcbiAgICBpZDogMixcbiAgICBxdWVzdGlvbk51bWJlcjogMixcbiAgICBxdWVzdGlvbjogJ1doYXQgaXMgYSA0LWJpdCBudW1iZXIgZm9yIHRoZSBkZWNpbWFsIG51bWJlciBUZW4oMTApPycsXG4gICAgYW5zd2VyczogW1xuICAgICAge1xuICAgICAgICBtdWx0aXBsZUNob2ljZU9wdGlvbjogaTE4bi5hbnN3ZXJPcHRpb25BKCksXG4gICAgICAgIG51bUFuc3dlcmVkOiAzLFxuICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGVDaG9pY2VPcHRpb246IGkxOG4uYW5zd2VyT3B0aW9uQigpLFxuICAgICAgICBudW1BbnN3ZXJlZDogMSxcbiAgICAgICAgaXNDb3JyZWN0OiB0cnVlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGVDaG9pY2VPcHRpb246IGkxOG4uYW5zd2VyT3B0aW9uQygpLFxuICAgICAgICBudW1BbnN3ZXJlZDogMSxcbiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG11bHRpcGxlQ2hvaWNlT3B0aW9uOiBpMThuLmFuc3dlck9wdGlvbkQoKSxcbiAgICAgICAgbnVtQW5zd2VyZWQ6IDEsXG4gICAgICAgIGlzQ29ycmVjdDogZmFsc2UsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBtdWx0aXBsZUNob2ljZU9wdGlvbjogaTE4bi5hbnN3ZXJPcHRpb25FKCksXG4gICAgICAgIG51bUFuc3dlcmVkOiAyLFxuICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGVDaG9pY2VPcHRpb246IGkxOG4uYW5zd2VyT3B0aW9uRigpLFxuICAgICAgICBudW1BbnN3ZXJlZDogMSxcbiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSxcbiAgICAgIH0sXG4gICAgXSxcbiAgICBub3RBbnN3ZXJlZDogMixcbiAgICB0b3RhbEFuc3dlcmVkOiAxMCxcbiAgfSxcbiAge1xuICAgIGlkOiAzLFxuICAgIHF1ZXN0aW9uTnVtYmVyOiAzLFxuICAgIHF1ZXN0aW9uOlxuICAgICAgJ1doYXQgaXMgdGhlIG1pbmltdW0gbnVtYmVyIG9mIGJpdHMgeW91IHdpbGwgbmVlZCB0byBlbmNvZGUgdGhlIDI2IGxldHRlcnMgb2YgdGhlIGFscGhhYmV0PycsXG4gICAgYW5zd2VyczogW1xuICAgICAge1xuICAgICAgICBtdWx0aXBsZUNob2ljZU9wdGlvbjogaTE4bi5hbnN3ZXJPcHRpb25BKCksXG4gICAgICAgIG51bUFuc3dlcmVkOiAxLFxuICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGVDaG9pY2VPcHRpb246IGkxOG4uYW5zd2VyT3B0aW9uQigpLFxuICAgICAgICBudW1BbnN3ZXJlZDogMSxcbiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG11bHRpcGxlQ2hvaWNlT3B0aW9uOiBpMThuLmFuc3dlck9wdGlvbkMoKSxcbiAgICAgICAgbnVtQW5zd2VyZWQ6IDIsXG4gICAgICAgIGlzQ29ycmVjdDogdHJ1ZSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG11bHRpcGxlQ2hvaWNlT3B0aW9uOiBpMThuLmFuc3dlck9wdGlvbkQoKSxcbiAgICAgICAgbnVtQW5zd2VyZWQ6IDEsXG4gICAgICAgIGlzQ29ycmVjdDogZmFsc2UsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBtdWx0aXBsZUNob2ljZU9wdGlvbjogaTE4bi5hbnN3ZXJPcHRpb25FKCksXG4gICAgICAgIG51bUFuc3dlcmVkOiAzLFxuICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgfSxcbiAgICBdLFxuICAgIG5vdEFuc3dlcmVkOiA1LFxuICAgIHRvdGFsQW5zd2VyZWQ6IDEwLFxuICB9LFxuICB7XG4gICAgaWQ6IDQsXG4gICAgcXVlc3Rpb25OdW1iZXI6IDQsXG4gICAgcXVlc3Rpb246ICdXaGF0IGlzIGEgZnVuY3Rpb24/JyxcbiAgICBhbnN3ZXJzOiBbXG4gICAgICB7XG4gICAgICAgIG11bHRpcGxlQ2hvaWNlT3B0aW9uOiBpMThuLmFuc3dlck9wdGlvbkEoKSxcbiAgICAgICAgbnVtQW5zd2VyZWQ6IDEsXG4gICAgICAgIGlzQ29ycmVjdDogZmFsc2UsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBtdWx0aXBsZUNob2ljZU9wdGlvbjogaTE4bi5hbnN3ZXJPcHRpb25CKCksXG4gICAgICAgIG51bUFuc3dlcmVkOiAxLFxuICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGVDaG9pY2VPcHRpb246IGkxOG4uYW5zd2VyT3B0aW9uQygpLFxuICAgICAgICBudW1BbnN3ZXJlZDogMSxcbiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG11bHRpcGxlQ2hvaWNlT3B0aW9uOiBpMThuLmFuc3dlck9wdGlvbkQoKSxcbiAgICAgICAgbnVtQW5zd2VyZWQ6IDQsXG4gICAgICAgIGlzQ29ycmVjdDogZmFsc2UsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBtdWx0aXBsZUNob2ljZU9wdGlvbjogaTE4bi5hbnN3ZXJPcHRpb25FKCksXG4gICAgICAgIG51bUFuc3dlcmVkOiA1LFxuICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGVDaG9pY2VPcHRpb246IGkxOG4uYW5zd2VyT3B0aW9uRigpLFxuICAgICAgICBudW1BbnN3ZXJlZDogMyxcbiAgICAgICAgaXNDb3JyZWN0OiB0cnVlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbXVsdGlwbGVDaG9pY2VPcHRpb246IGkxOG4uYW5zd2VyT3B0aW9uRygpLFxuICAgICAgICBudW1BbnN3ZXJlZDogMSxcbiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSxcbiAgICAgIH0sXG4gICAgXSxcbiAgICBub3RBbnN3ZXJlZDogMCxcbiAgICB0b3RhbEFuc3dlcmVkOiAxMCxcbiAgfSxcbl07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBNdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZSxcbn07XG5cbmNvbnN0IFRlbXBsYXRlID0gYXJncyA9PiAoXG4gIDxNdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZVxuICAgIG9wZW5EaWFsb2c9eygpID0+IHt9fVxuICAgIHNldFF1ZXN0aW9uSW5kZXg9eygpID0+IHt9fVxuICAgIHsuLi5hcmdzfVxuICAvPlxuKTtcblxuZXhwb3J0IGNvbnN0IE92ZXJ2aWV3V2l0aDdBbnN3ZXJzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5PdmVydmlld1dpdGg3QW5zd2Vycy5hcmdzID0ge3F1ZXN0aW9uQW5zd2VyRGF0YTogbXVsdGlwbGVDaG9pY2VEYXRhfTtcblxuY29uc3QgcmVkdWNlZE11bHRpcGxlQ2hvaWNlRGF0YSA9IG11bHRpcGxlQ2hvaWNlRGF0YS5tYXAocXVlc3Rpb24gPT4ge1xuICByZXR1cm4ge1xuICAgIC4uLnF1ZXN0aW9uLFxuICAgIGFuc3dlcnM6IHF1ZXN0aW9uLmFuc3dlcnMuc2xpY2UoMCwgMiksXG4gIH07XG59KTtcblxuZXhwb3J0IGNvbnN0IE92ZXJ2aWV3V2l0aDNBbnN3ZXJzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5PdmVydmlld1dpdGgzQW5zd2Vycy5hcmdzID0ge3F1ZXN0aW9uQW5zd2VyRGF0YTogcmVkdWNlZE11bHRpcGxlQ2hvaWNlRGF0YX07XG4iXSwibmFtZXMiOlsiX2xvZGFzaCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3Byb3BUeXBlcyIsIl9yZWFjdCIsIl9leGNsdWRlZCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJleGNsdWRlZCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwic291cmNlS2V5cyIsImtleXMiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic291cmNlU3ltYm9sS2V5cyIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiRm9udEF3ZXNvbWUiLCJfcmVmIiwiaWNvbiIsImNsYXNzTmFtZSIsInRpdGxlIiwicHJvcHMiLCJuZXdQcm9wcyIsIl8iLCJjb25jYXQiLCJjcmVhdGVFbGVtZW50IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJfb3JkZXJCeSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX3JlYWN0UmVkdXgiLCJUYWJsZSIsInNvcnQiLCJfc3R5bGVDb25zdGFudHMiLCJfY29sb3IiLCJfbG9jYWxlIiwiX3RhYmxlQ29uc3RhbnRzIiwiX3dyYXBwZWRfc29ydGFibGUiLCJfYXNzZXNzbWVudERhdGFTaGFwZXMiLCJfUGVyY2VudEFuc3dlcmVkQ2VsbCIsIl9zZWN0aW9uQXNzZXNzbWVudHNSZWR1eCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJzZXQiLCJvIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsIl90b0NvbnN1bWFibGVBcnJheSIsImFyciIsIl9hcnJheVdpdGhvdXRIb2xlcyIsIkFycmF5IiwiaXNBcnJheSIsIl9hcnJheUxpa2VUb0FycmF5IiwiX2l0ZXJhYmxlVG9BcnJheSIsIml0ZXIiLCJmcm9tIiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwibWluTGVuIiwidG9TdHJpbmciLCJzbGljZSIsIm5hbWUiLCJ0ZXN0IiwiX25vbkl0ZXJhYmxlU3ByZWFkIiwiVHlwZUVycm9yIiwibGVuIiwiYXJyMiIsIm93bktleXMiLCJmaWx0ZXIiLCJlbnVtZXJhYmxlIiwicHVzaCIsIl9vYmplY3RTcHJlYWQiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJfc2V0UHJvdG90eXBlT2YiLCJwIiwic2V0UHJvdG90eXBlT2YiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiX3RvUHJpbWl0aXZlIiwidG9QcmltaXRpdmUiLCJTdHJpbmciLCJOdW1iZXIiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIkNPTFVNTlMiLCJRVUVTVElPTiIsImFuc3dlckNvbHVtbnNGb3JtYXR0ZXIiLCJwZXJjZW50QW5zd2VyZWQiLCJyb3dEYXRhIiwiY29sdW1uSW5kZXgiLCJwcm9wZXJ0eSIsInJvd0luZGV4IiwicGVyY2VudFZhbHVlIiwiYW5zd2VyUmVzdWx0cyIsImFuc3dlcnMiLCJNYXRoIiwicm91bmQiLCJub3RBbnN3ZXJlZCIsInRvdGFsQW5zd2VyZWQiLCJudW1BbnN3ZXJlZCIsImlkIiwiaXNDb3JyZWN0QW5zd2VyIiwiaXNDb3JyZWN0IiwiTXVsdGlwbGVDaG9pY2VBc3Nlc3NtZW50c092ZXJ2aWV3VGFibGUiLCJfQ29tcG9uZW50IiwiX3RoaXMiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJkaXJlY3Rpb24iLCJwb3NpdGlvbiIsInN0YXRlIiwic29ydGluZ0NvbHVtbnMiLCJzZWxlY3RlZENvbHVtbiIsInNldFN0YXRlIiwiYnlDb2x1bW4iLCJzb3J0aW5nT3JkZXIiLCJGSVJTVCIsImFzYyIsImRlc2MiLCJpbmRleCIsInNldFF1ZXN0aW9uSW5kZXgiLCJvcGVuRGlhbG9nIiwicXVlc3Rpb24iLCJfcmVmMiIsInN0eWxlIiwic3R5bGVzIiwibGluayIsIm9uQ2xpY2siLCJzZWxlY3RRdWVzdGlvbiIsInF1ZXN0aW9uTnVtYmVyIiwiaGVhZGVyIiwibGFiZWwiLCJpMThuIiwidGFibGVMYXlvdXRTdHlsZXMiLCJoZWFkZXJDZWxsIiwiYW5zd2VyQ29sdW1uSGVhZGVyIiwiY2VsbCIsImZvcm1hdHRlcnMiLCJub3RBbnN3ZXJlZENlbGwiLCJjb2x1bW5MYWJlbCIsImFuc3dlckNvbHVtbkNlbGwiLCJzb3J0YWJsZSIsIm51bUFuc3dlcnMiLCJxdWVzdGlvbkZvcm1hdHRlciIsIm1heFdpZHRoIiwic3R5bGVDb25zdGFudHMiLCJjb2x1bW5MYWJlbE5hbWVzIiwicXVlc3Rpb25BbnN3ZXJEYXRhIiwicXVlc3Rpb24xIiwicXVlc3Rpb24yIiwicG9wIiwibWFwIiwiYW5zd2VyIiwiZ2V0QW5zd2VyQ29sdW1uIiwibXVsdGlwbGVDaG9pY2VPcHRpb24iLCJudW1BbnN3ZXJDb2x1bW5zIiwiZ2V0UXVlc3Rpb25Db2x1bW4iLCJnZXROb3RBbnN3ZXJlZENvbHVtbiIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwicmVuZGVyIiwid3JhcHBlZFNvcnRhYmxlIiwidGhpcyIsImdldFNvcnRpbmdDb2x1bW5zIiwib25Tb3J0Iiwic29ydGFibGVPcHRpb25zIiwiY29sdW1ucyIsImdldENvbHVtbnMiLCJzb3J0ZWRSb3dzIiwic29ydGVyIiwib3JkZXJCeSIsIlByb3ZpZGVyIiwidGFibGUiLCJIZWFkZXIiLCJCb2R5Iiwicm93cyIsInJvd0tleSIsIkNvbXBvbmVudCIsImFycmF5T2YiLCJtdWx0aXBsZUNob2ljZURhdGFQcm9wVHlwZSIsImZ1bmMiLCJ3aWR0aCIsInRleHRBbGlnbiIsInBhZGRpbmciLCJoZWlnaHQiLCJjb2xvciIsInRlYWwiLCJkaXNwbGF5Iiwib3ZlcmZsb3ciLCJ0ZXh0T3ZlcmZsb3ciLCJ3aGl0ZVNwYWNlIiwiY29ubmVjdCIsImRpc3BhdGNoIiwicXVlc3Rpb25JbmRleCIsIl9mb250Q29uc3RhbnRzIiwiX0ZvbnRBd2Vzb21lIiwiUGVyY2VudEFuc3dlcmVkQ2VsbCIsIl90aGlzJHByb3BzIiwiaXNTdXJ2ZXkiLCJvcGFjaXR5IiwiY2FsY3VsYXRlT3BhY2l0eSIsImFuc3dlcmVkIiwiX3RoaXMkcHJvcHMyIiwiZGlzcGxheUFuc3dlciIsIm1haW4iLCJiYWNrZ3JvdW5kQ1NTIiwiYmFja2dyb3VuZENvbG9yIiwiZ2V0QmFja2dyb3VuZENvbG9yIiwibWFpbkxheW91dFN0eWxlIiwidmFsdWVMYXlvdXRTdHlsZSIsIm51bWJlciIsImJvb2wiLCJvYmplY3QiLCJib3JkZXIiLCJqdXN0aWZ5Q29udGVudCIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwiYm94U2l6aW5nIiwibGV2ZWxfcGVyZmVjdCIsImNoYXJjb2FsIiwiZm9udENvbnN0YW50cyIsImRlZmF1bHRQcm9wcyIsIm1hcmdpblJpZ2h0Iiwic2hhcGUiLCJyZXNwb25zZSIsIm11bHRpcGxlQ2hvaWNlQW5zd2VyRGF0YVByb3BUeXBlIiwidGV4dCIsInN0dWRlbnRNQ1Jlc3BvbnNlUHJvcFR5cGUiLCJyZXNwb25zZXMiLCJhbnN3ZXJNYXRjaERhdGFQcm9wVHlwZSIsInN0dWRlbnRSZXNwb25zZXMiLCJjb3JyZWN0QW5zd2VyIiwibnVtTXVsdGlwbGVDaG9pY2VDb3JyZWN0IiwibnVtTXVsdGlwbGVDaG9pY2UiLCJudW1NYXRjaENvcnJlY3QiLCJudW1NYXRjaCIsInN1Ym1pc3Npb25UaW1lU3RhbXAiLCJpbnN0YW5jZU9mIiwiRGF0ZSIsImlzU3VibWl0dGVkIiwiaW5Qcm9ncmVzcyIsInVybCIsIm9wdGlvbkRhdGFQcm9wVHlwZU1hdGNoIiwib3B0aW9uIiwic3R1ZGVudE1hdGNoUmVzcG9uc2VQcm9wVHlwZSIsIm9wdGlvbnMiLCJxdWVzdGlvblR5cGUiLCJhcnJheSIsInVuZGVmaW5lZCIsImJhc2ljU29ydGFibGUiLCJjb2x1bW5JbmZvIiwiX2Jhc2ljU29ydGFibGUiLCJuZXdDbGFzc05hbWUiLCJzb3J0SWNvbiIsInNvcnRBc2MiLCJzb3J0RGVzYyIsImN1cnNvciIsImNoaWxkcmVuIiwiY29udGFpbmVyIiwiYmFzZUZvck93biIsImJhc2VFYWNoIiwiY3JlYXRlQmFzZUVhY2giLCJpc0FycmF5TGlrZSIsImJhc2VNYXAiLCJjb2xsZWN0aW9uIiwiaXRlcmF0ZWUiLCJyZXN1bHQiLCJhcnJheU1hcCIsImJhc2VHZXQiLCJiYXNlSXRlcmF0ZWUiLCJiYXNlU29ydEJ5IiwiYmFzZVVuYXJ5IiwiY29tcGFyZU11bHRpcGxlIiwiaWRlbnRpdHkiLCJiYXNlT3JkZXJCeSIsIml0ZXJhdGVlcyIsIm9yZGVycyIsIm90aGVyIiwiY29tcGFyZXIiLCJpc1N5bWJvbCIsImNvbXBhcmVBc2NlbmRpbmciLCJ2YWxJc0RlZmluZWQiLCJ2YWxJc051bGwiLCJ2YWxJc1JlZmxleGl2ZSIsInZhbElzU3ltYm9sIiwib3RoSXNEZWZpbmVkIiwib3RoSXNOdWxsIiwib3RoSXNSZWZsZXhpdmUiLCJvdGhJc1N5bWJvbCIsIm9iakNyaXRlcmlhIiwiY3JpdGVyaWEiLCJvdGhDcml0ZXJpYSIsIm9yZGVyc0xlbmd0aCIsImVhY2hGdW5jIiwiZnJvbVJpZ2h0IiwiaXRlcmFibGUiLCJndWFyZCIsIl9NdWx0aXBsZUNob2ljZUFzc2Vzc21lbnRzT3ZlcnZpZXdUYWJsZSIsIm11bHRpcGxlQ2hvaWNlRGF0YSIsImFuc3dlck9wdGlvbkEiLCJhbnN3ZXJPcHRpb25CIiwiYW5zd2VyT3B0aW9uQyIsImFuc3dlck9wdGlvbkQiLCJhbnN3ZXJPcHRpb25FIiwiYW5zd2VyT3B0aW9uRiIsImFuc3dlck9wdGlvbkciLCJUZW1wbGF0ZSIsImNvbXBvbmVudCIsIlVuY29ubmVjdGVkTXVsdGlwbGVDaG9pY2VBc3Nlc3NtZW50c092ZXJ2aWV3VGFibGUiLCJyZWR1Y2VkTXVsdGlwbGVDaG9pY2VEYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==