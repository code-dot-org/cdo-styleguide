var en_us = function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);
  if (ord) return (n10 == 1 && n100 != 11) ? 'one'
      : (n10 == 2 && n100 != 12) ? 'two'
      : (n10 == 3 && n100 != 13) ? 'few'
      : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
};
var number = function (value, name, offset) {
  if (!offset) return value;
  if (isNaN(value)) throw new Error("Can't apply offset:" + offset + ' to argument `' + name + '` with non-numerical value ' + JSON.stringify(value) + '.');
  return value - offset;
};
var plural = function (value, offset, lcfunc, data, isOrdinal) {
  if ({}.hasOwnProperty.call(data, value)) return data[value];
  if (offset) value -= offset;
  var key = lcfunc(value, isOrdinal);
  return key in data ? data[key] : data.other;
};
var select = function (value, data) {
  return {}.hasOwnProperty.call(data, value) ? data[value] : data.other;
};

(window.locales = window.locales || {}).common_locale = {
  abuseDetail: function(d) { return "Please provide details regarding the content you are reporting"; },
  abuseFormDetail: function(d) { return "Please provide as much detail as possible regarding the content you are reporting."; },
  abuseFormAcknowledge: function(d) { return "By submitting this information, you acknowledge it will be handled in accordance with the terms of the [Privacy Policy](" + d.privacy_url + ") and the [Terms of Service](" + d.tos_url + ")."; },
  abuseType: function(d) { return "Please answer how this content violates the Terms of Service"; },
  abuseTypes: function(d) { return "Abuse types"; },
  abuseTypeHarassment: function(d) { return "Threats, cyberbullying, harassment"; },
  abuseTypeCyberbullying: function(d) { return "Cyberbullying"; },
  abuseTypeInfringement: function(d) { return "Copyright Infringement"; },
  abuseTypeOffensive: function(d) { return "Offensive content"; },
  abuseTypeOffensiveCapital: function(d) { return "Offensive Content"; },
  abuseTypeOther: function(d) { return "Other"; },
  abuseTypeQuestion: function(d) { return "How does this content violate the [Terms of Service](" + d.url + ")?"; },
  abusiveUrl: function(d) { return "URL of the content being reported"; },
  achievements: function(d) { return "Achievements"; },
  activity: function(d) { return "Activity"; },
  activityGuides: function(d) { return "Activity Guides"; },
  activityHeaderName: function(d) { return d.activityName; },
  activityHeaderTime: function(d) { return " (" + d.activityDuration + " minutes)"; },
  actions: function(d) { return "Actions"; },
  add: function(d) { return "Add"; },
  addAnotherClassSection: function(d) { return "Save and add another class section"; },
  addingToTable: function(d) { return "Adding..."; },
  additionalInformationHeader: function(d) { return "Additional Information"; },
  additionalInformationText: function(d) { return "For more information, see " + d.externalDocumentationUrl + "."; },
  additionalOptions: function(d) { return "Additional options"; },
  addNewSection: function(d) { return "Add New Section"; },
  addNewAnimation: function(d) { return "Add a new animation on the left to begin"; },
  addPairToTable: function(d) { return "Add pair"; },
  addParentEmailModal_confirmedParentEmail_label: function(d) { return "Confirm parent/guardian email address"; },
  addParentEmailModal_confirmedParentEmail_mustMatch: function(d) { return "Email addresses must match."; },
  addParentEmailModal_parentEmail_invalid: function(d) { return "The email address you provided is not valid."; },
  addParentEmailModal_parentEmail_isRequired: function(d) { return "An email address is required."; },
  addParentEmailModal_parentEmail_label: function(d) { return "Parent/guardian email address"; },
  addParentEmailModal_parentEmail_mustBeDifferent: function(d) { return "New email address must not match old email address."; },
  addParentEmailModal_emailOptIn_label: function(d) { return "For parent/guardian only"; },
  addParentEmailModal_emailOptIn_sublabel: function(d) { return "Only fill out the following question if the email address above belongs to you."; },
  addParentEmailModal_emailOptIn_description: function(d) { return "Can we email you with occasional updates on your child’s progress and projects, and updates about their course and computer science?"; },
  addParentEmailModal_emailOptIn_isRequired: function(d) { return "This field is required."; },
  addParentEmailModal_save: function(d) { return "Update"; },
  addParentEmailModal_subtitle: function(d) { return "This email address will have the ability to recover/reset the password of this account."; },
  addParentEmailModal_title: function(d) { return "Update parent/guardian email address"; },
  addPartners: function(d) { return "Add Partners"; },
  addPassword: function(d) { return "Add a password"; },
  addPasswordHint: function(d) { return "By creating a password below, you will be able to sign in with your username or email address and password. It will also help keep your account safer because then we will prompt you for the password before any updates are made."; },
  addRemoveCleverClassrooms: function(d) { return "Visit https://clever.com/ and confirm your classroom is connected to Code.org."; },
  addRemoveGoogleClassrooms: function(d) { return "Visit https://classroom.google.com/ to add and remove classrooms."; },
  addRowToTable: function(d) { return "Add Row"; },
  addSectionName: function(d) { return "Enter a name for your section that will help you remember which classroom it is for. Your students will also be able to see this name."; },
  addSectionNameHint: function(d) { return "e.g., Intro to CS - Period 2"; },
  addStudents: function(d) { return "Add students"; },
  addStudentsToCurrentSection: function(d) { return "Add students to the current section"; },
  addStudentsMultiple: function(d) { return "Add multiple students"; },
  addStudentsMultipleInstructions: function(d) { return "Type or paste the names of your students, one per line."; },
  addStudentsMultipleWithFamilyNameInstructions: function(d) { return "Type or paste the display names of your students, one per line. Optionally, you can include their family name after a comma on the same line."; },
  addStudentsManageMyOwn: function(d) { return "Create and manage my own list of students"; },
  addStudentsSyncThirdParty: function(d) { return "Sync my list of students from an existing classroom section in a third party tool"; },
  addStudentsToSectionInstructions: function(d) { return "Choose how you want to add your students:"; },
  addStudentsToSectionInstructionsUpdated: function(d) { return "How do you want your students to sign in?"; },
  addStudentsToSectionPermissionHeader: function(d) { return "If students in your class are under 13 years old:"; },
  addStudentsToSectionPermissionWarning: function(d) { return "We strongly recommend that you do not use personal logins. Using personal logins may require parental consent for security and privacy reasons."; },
  addStudentsToSectionPermissionExplanation: function(d) { return "For classes that have any children under 13, we strongly recommend that you create accounts for students using picture passwords or secret words for the entire class. This approach does not require the collection of any personal information by Code.org from or about the student.  The creation by students under 13 of personal logins may require a separate parental consent step (i.e., an email to parent/guardian and an affirmative response) that could delay or prevent account creation and interfere with classroom participation."; },
  addToProjects: function(d) { return "Add to Projects"; },
  addedToProjects: function(d) { return "Added"; },
  addingToProjects: function(d) { return "Adding..."; },
  adminAccountDeletionDialog_header: function(d) { return "Delete Admin Account"; },
  adminAccountDeletionDialog_body: function(d) { return "You are about to delete an admin account. Are you sure you would like to continue?"; },
  administrator: function(d) { return "Administrator"; },
  administratorResourcesDescription: function(d) { return "View these resources to get started on expanding computer science opportunities."; },
  administratorResourcesHeading: function(d) { return "Expand computer science in your school or district"; },
  administrators: function(d) { return "Administrators"; },
  advancedShare: function(d) { return "Show advanced options"; },
  advancedSettings: function(d) { return "Advanced Settings"; },
  afeCompleteTheFormBelow: function(d) { return "Please complete the form below to access free and relevant resources for you and your students"; },
  afeContinueMessage: function(d) { return "By continuing, you'll get emails from Amazon Future Engineer to claim benefits and updates on scholarships, grants, and more. You can change preferences or unsubscribe at any time."; },
  afeFirstName: function(d) { return "First name"; },
  afeGradeBands: function(d) { return "Grade bands"; },
  afeInspirationKit: function(d) { return "Send me a Thank You Kit with Amazon Future Engineer-branded gear (t-shirts, drinkware, stickers, and more!)."; },
  afeLastName: function(d) { return "Last name"; },
  afeSupport: function(d) { return "How can Amazon Future Engineer support you and your students?"; },
  afeWhatGradeBands: function(d) { return "What grade bands do you teach?"; },
  afeWhatIsYourRole: function(d) { return "What is your role?"; },
  afeBannerCongrats: function(d) { return "Congratulations! You’re eligible for resources from Amazon Future Engineer at no cost."; },
  afeBannerParagraph: function(d) { return "Amazon Future Engineer offers support for Code.org classrooms, including posters, CSTA+ membership, internship and scholarship opportunities, and access to cloud computing resources at no cost."; },
  afeFreeResources: function(d) { return "Would you like free resources from "; },
  age: function(d) { return "Age"; },
  agenda: function(d) { return "Agenda"; },
  aiAssessment: function(d) { return "AI Assessment"; },
  aiAssessmentAll: function(d) { return "AI Assessment for All Unsubmitted Projects"; },
  aiAssessmentDoesMeet: function(d) { return "Extensive or Convincing Evidence"; },
  aiAssessmentDoesNotMeet: function(d) { return "Limited or No Evidence"; },
  aiAssessmentFeedbackAsk: function(d) { return "Is AI accurate?"; },
  aiAssessmentScore: function(d) { return "Score:"; },
  aiAssessmentEvidence: function(d) { return "Evidence:"; },
  aiAssessmentEvidenceLine: function(d) { return "Line " + d.lineNumber + ": " + d.feedbackForLine; },
  aiAssessmentEvidenceLines: function(d) { return "Lines " + d.firstLineNumber + "-" + d.lastLineNumber + ": " + d.feedbackForLines; },
  aiFeedbackNegativeWhy: function(d) { return "Why is the AI Assessment inaccurate? (Check all that apply.)"; },
  aiFeedbackFalsePos: function(d) { return "Incorrectly scored too high"; },
  aiFeedbackFalseNeg: function(d) { return "Incorrectly scored too low"; },
  aiFeedbackVague: function(d) { return "Not specific enough to be helpful"; },
  aiFeedbackOtherDetails: function(d) { return "Please provide more details."; },
  aiFeedbackSubmit: function(d) { return "Submit Feedback"; },
  aiFeedbackReceived: function(d) { return "Feedback received!"; },
  aiBot: function(d) { return "AI Bot"; },
  aiCannotAssess: function(d) { return "This learning goal is too subjective for AI to evaluate."; },
  aiConfidence: function(d) { return "AI Confidence: " + d.aiConfidence; },
  aiConfidenceTooltip: function(d) { return "The confidence score is calculated from how well the AI assessment worked for this learning goal on our training set of student projects. Pay extra attention to projects with medium or low confidence."; },
  aiEvaluationStatus_initial_load: function(d) { return "Gathering AI Analysis"; },
  aiEvaluationStatus_not_attempted: function(d) { return "Student has not attempted this level. No AI analysis available."; },
  aiEvaluationStatus_already_evaluated: function(d) { return "AI analysis already completed for this project."; },
  aiEvaluationStatus_success: function(d) { return "AI analysis complete."; },
  aiEvaluationStatus_pending: function(d) { return "AI analysis is in the queue"; },
  aiEvaluationStatus_in_progress: function(d) { return "Generating AI analysis"; },
  aiEvaluationStatus_error: function(d) { return "AI analysis cannot be completed due to an error.  Please try again later or contact support."; },
  aiEvaluationStatus_pii_error: function(d) { return "AI analysis cannot be completed due to the presence of potential personal information in the student's code."; },
  aiEvaluationStatus_profanity_error: function(d) { return "AI analysis cannot be completed due to profanity in the student's code."; },
  aiEvaluationStatus_request_too_large: function(d) { return "The AI analysis failed due to lengthy student code. Our team is addressing the issue. Please manually grade this student's project in the meantime."; },
  aiEvaluationStatusAll_not_attempted: function(d) { return "No students have attempted this level. No AI analysis available."; },
  aiEvaluationStatusAll_already_evaluated: function(d) { return "AI analysis already completed for all available student projects."; },
  aiEvaluationStatusAll_ready: function(d) { return "AI analysis can be generated for " + d.unevaluatedCount + " student projects."; },
  aiEvaluationStatusAll_summary: function(d) { return "The AI assessment has successfully run for " + d.evaluatedCount + "/" + d.totalCount + " student projects."; },
  aiEvaluationDetails: function(d) { return "The AI Assessment runs automatically when a student presses \"submit\" for their project. If students forget to submit, you can run the AI Assessment for the entire class using the button above, or run it for an individual student while viewing their rubric."; },
  aiSettings: function(d) { return "AI Settings"; },
  aiStudentAssessment: function(d) { return d.studentName + " has achieved " + d.understandingLevel + " for this learning goal."; },
  aiSubmitShouldKeepWorking: function(d) { return "Student should keep working"; },
  aiTrainedModels: function(d) { return "AI Trained Models"; },
  aiTrainedModelsNoModels: function(d) { return "You have not trained any AI models yet."; },
  aiTrainedModelsDeleteModelConfirm: function(d) { return "Are you sure you would like to delete this model?"; },
  aiTrainedModelsDeleteModelMessage: function(d) { return "This model will be permanently deleted, and you will not be able to use this model in any App Lab projects."; },
  aiTrainedModelsDeleteModelFailed: function(d) { return "Model with id " + d.id + " could not be deleted."; },
  aiTutor: function(d) { return "AI Tutor"; },
  all: function(d) { return "All"; },
  allHandouts: function(d) { return "All Handouts"; },
  allowEditing: function(d) { return "Allow editing"; },
  allowEditingInstructions: function(d) { return "\"Allow editing\" while students should be taking the assessment."; },
  allStudents: function(d) { return "All students"; },
  amazonFutureEngineer: function(d) { return "Amazon Future Engineer?"; },
  and: function(d) { return "and"; },
  animation: function(d) { return "animation"; },
  animationCategory_all: function(d) { return "All"; },
  animationCategory_animals: function(d) { return "Animals"; },
  animationCategory_aquatic_objects: function(d) { return "Aquatic Objects"; },
  animationCategory_backgrounds: function(d) { return "Backgrounds"; },
  animationCategory_board_games_and_cards: function(d) { return "Cards and Games"; },
  animationCategory_buildings: function(d) { return "Buildings"; },
  animationCategory_buttons_and_text: function(d) { return "Buttons and Text"; },
  animationCategory_emoji: function(d) { return "Emoji"; },
  animationCategory_faces: function(d) { return "Faces"; },
  animationCategory_fantasy: function(d) { return "Fantasy"; },
  animationCategory_characters: function(d) { return "Characters"; },
  animationCategory_environment: function(d) { return "Environment"; },
  animationCategory_food: function(d) { return "Food"; },
  animationCategory_game_text: function(d) { return "Game Text"; },
  animationCategory_games: function(d) { return "Games"; },
  animationCategory_gameplay: function(d) { return "Gameplay"; },
  animationCategory_generic_items: function(d) { return "Generic Items"; },
  animationCategory_germs: function(d) { return "Germs"; },
  animationCategory_household_objects: function(d) { return "Household Objects"; },
  animationCategory_icons: function(d) { return "Icons"; },
  animationCategory_level_costumes: function(d) { return "Costumes"; },
  animationCategory_music: function(d) { return "Music"; },
  animationCategory_obstacles: function(d) { return "Obstacles"; },
  animationCategory_people: function(d) { return "People"; },
  animationCategory_retro: function(d) { return "Retro"; },
  animationCategory_robots: function(d) { return "Robots"; },
  animationCategory_school_objects: function(d) { return "School Objects"; },
  animationCategory_space: function(d) { return "Space"; },
  animationCategory_sports: function(d) { return "Sports"; },
  animationCategory_stickers: function(d) { return "Stickers"; },
  animationCategory_tools: function(d) { return "Tools"; },
  animationCategory_vehicles: function(d) { return "Vehicles"; },
  animationCategory_video_games: function(d) { return "Video Games"; },
  animationMode: function(d) { return "Animation"; },
  animationPicker_allCategories: function(d) { return "All categories"; },
  animationPicker_cannotUploadHeader: function(d) { return "Cannot Upload Images"; },
  animationPicker_cannotUploadIfPublished: function(d) { return "Your project is published. In order to upload images you must unpublish your project."; },
  animationPicker_confirmNoPII: function(d) { return "I will not upload images with personal information."; },
  animationPicker_confirmRestrictedShare: function(d) { return "This project can not be published or remixed."; },
  animationPicker_discardSelection: function(d) { return "Discard selection"; },
  animationPicker_drawYourOwn: function(d) { return "Draw your own"; },
  animationPicker_error: function(d) { return "Error: " + d.message; },
  animationPicker_failedToParseImage: function(d) { return "The image could not be parsed"; },
  animationPicker_leaveSelectionText: function(d) { return "Any selected " + d.contextName + "s will not be added to your project."; },
  animationPicker_leaveSelectionTitle: function(d) { return "Leave the Library?"; },
  animationPicker_noResultsFound: function(d) { return "Sorry, no results found."; },
  animationPicker_restrictedShareRulesHeader: function(d) { return "To upload images, you must agree to these rules:"; },
  animationPicker_returnToLibrary: function(d) { return "Return to library"; },
  animationPicker_title: function(d) { return d.assetType + " Library"; },
  animationPicker_undoRestrictedShareInstructions: function(d) { return "You can use Version History to undo this change."; },
  animationPicker_unsupportedType: function(d) { return "Sorry, this file type is not supported."; },
  animationPicker_unsupportedSize: function(d) { return "Please make sure the image you are trying to upload is smaller than 100 KB."; },
  animationPicker_uploadImage: function(d) { return "Upload image"; },
  animationPicker_uploading: function(d) { return "Uploading..."; },
  animationPicker_warning: function(d) { return "Warning: Do not upload anything that contains personal information."; },
  animationPicker_warnNoPublishShare: function(d) { return "Note: projects with images uploaded by students cannot be published or remixed."; },
  animationSearchPlaceholder: function(d) { return "Search for images..."; },
  announcements: function(d) { return "Announcements"; },
  announcementHeadingBackToSchool: function(d) { return "Get set up for the new school year"; },
  announcementHeadingBackToSchoolRemote: function(d) { return "Teaching in Virtual and Socially-Distanced Classrooms?"; },
  announcementDescriptionBackToSchool: function(d) { return "View our frequently asked questions on how to manage your classroom(s) and start teaching."; },
  announcementDescriptionBackToSchoolRemote: function(d) { return "View our frequently asked questions on how to start teaching and managing your virtual, hybrid, or in-person classroom(s)."; },
  announcementButtonBackToSchool: function(d) { return "Read the FAQ"; },
  announcementHeadingFacilitatorApp: function(d) { return "Join our Facilitator Development Program"; },
  announcementDescriptionFacilitatorApp: function(d) { return "Help teachers by delivering professional learning workshops on Code.org's curriculum."; },
  announcementHeadingPrivacyGdpr: function(d) { return "We are updating our privacy policy"; },
  announcementDescriptionPrivacyGdpr: function(d) { return "We care about your privacy and are making some updates to our privacy policy, effective May 25."; },
  announcementHeadingYouTubeNoCookie: function(d) { return "Updated IT requirements for viewing captions on Code.org videos"; },
  announcementDescriptionYouTubeNoCookie: function(d) { return "We are updating our IT requirements for the upcoming school year which may affect some schools' ability to access closed captioning and translations on videos. This change will go into effect in late July."; },
  anotherHoCButton: function(d) { return "Continue learning"; },
  anotherHoCDesc: function(d) { return "Keep it up! Try your next Hour of Code activity."; },
  anotherHoCTitle: function(d) { return "Try another Hour of Code"; },
  answer: function(d) { return "Answer"; },
  answerKeysExemplars: function(d) { return "Answer Keys/Exemplars"; },
  answerOptionA: function(d) { return "A"; },
  answerOptionB: function(d) { return "B"; },
  answerOptionC: function(d) { return "C"; },
  answerOptionD: function(d) { return "D"; },
  answerOptionE: function(d) { return "E"; },
  answerOptionF: function(d) { return "F"; },
  answerOptionG: function(d) { return "G"; },
  answersVisible: function(d) { return "Answers visible (read-only)"; },
  applabMarketingButton: function(d) { return "Learn more"; },
  applabMarketingDesc: function(d) { return "See sample projects, watch demos, and learn more about what you can do with App Lab."; },
  applabMarketingTitle: function(d) { return "Learn about App Lab"; },
  applabProjectButton: function(d) { return "Create a project"; },
  applabProjectDesc: function(d) { return "Now that you’ve gotten an introduction to App Lab, create your own app - try making a quiz, a story, or a simple game."; },
  applabProjectTitle: function(d) { return "Create a new App"; },
  applabTutorialButton: function(d) { return "Start"; },
  applabTutorialDesc: function(d) { return "Ready to try JavaScript? Design an app, code in JavaScript with either blocks or text, then share your app in seconds. For Ages 13+."; },
  applabTutorialTitle: function(d) { return "App Lab Hour of Code"; },
  approve: function(d) { return "Approve"; },
  archiveSection: function(d) { return "Archive Section"; },
  archivedSections: function(d) { return "Archived Sections"; },
  archivedSectionsStudentDescription: function(d) { return "Archived sections are past sections that have been hidden by your teachers. You won’t be redirected to archived sections’ course assignments."; },
  archivedSectionsTeacherDescription: function(d) { return "Archived sections are hidden on your students’ My Dashboard. Students are not redirected to archived sections’ course assignments."; },
  artificialIntelligenceFeatures: function(d) { return "Artificial Intelligence (AI) features"; },
  assessment: function(d) { return "Assessment"; },
  assessmentAndSurvey: function(d) { return "Assessments / Surveys"; },
  assessmentLevel: function(d) { return "Assessment level"; },
  assessmentOpportunity: function(d) { return "Assessment Opportunity"; },
  assessmentOpportunities: function(d) { return "Assessment Opportunities"; },
  assessmentSteps: function(d) { return "Steps to give assessment for"; },
  assessmentSettings: function(d) { return "Assessment Settings"; },
  assign: function(d) { return "Assign"; },
  assignACourse: function(d) { return "Assign a course to your classroom or start your own course."; },
  assignARubricScore: function(d) { return "Assign a Rubric Score"; },
  assignCourse: function(d) { return "Assign Course"; },
  assignConfirm: function(d) { return "Are you sure you want to assign \"" + d.assignmentName + "\" to \"" + d.sectionName + "\"?"; },
  assignCurriculum: function(d) { return "Assign Curriculum"; },
  assignDescription: function(d) { return "Assign " + d.course_name + " to your classroom"; },
  assignHiddenUnitConfirm: function(d) { return "It looks like you previously hid \"" + d.assignmentName + "\" from section \"" + d.sectionName + "\". Do you still want to assign this unit and make it visible?"; },
  assigned: function(d) { return "Assigned"; },
  assignedTo: function(d) { return "Assigned to"; },
  assignedToWithColon: function(d) { return "Assigned to:"; },
  assignToSection: function(d) { return "Assign to section"; },
  assignToClassSections: function(d) { return "Assign to class sections"; },
  assignToMultipleSections: function(d) { return "Assign to sections"; },
  assignUnit: function(d) { return "Assign Unit"; },
  assignSuccess: function(d) { return "Success! Assignment updated!"; },
  assignedToNewerVersion: function(d) { return "Your teacher assigned you to a newer version of this course."; },
  assignmentCompletionStates: function(d) { return "Assignment Completion States"; },
  assignmentSelectorCourse: function(d) { return "Select course"; },
  assignmentSelectorVersion: function(d) { return "Version"; },
  assignmentSelectorUnit: function(d) { return "Select current unit"; },
  audioInitializeError: function(d) { return "Your computer is not set-up to record audio. Please ensure you have a microphone with permission to access audio on this website."; },
  audioSaveError: function(d) { return "There's been an error saving your recording. Please re-record and try again. If this issue persists, please refresh the page and try again."; },
  authorizeGoogleClassrooms: function(d) { return "To authorize Google Classroom, click here."; },
  authorizeGoogleClassroomsText: function(d) { return "In order to sync with Google Classroom, Code.org must have up-to-date authorization to access your Google Classroom account."; },
  authorName: function(d) { return "**Author:** " + d.name; },
  autoGenerated: function(d) { return "Auto-generated"; },
  autolock: function(d) { return "Note: Lesson auto-locks after 24 hours."; },
  autosaveVersionLabel: function(d) { return "Autosave from " + d.timestamp; },
  availableLessons: function(d) { return " Available in " + plural(d.numLessons, 0, en_us, { one: "1 Lesson", other: number(d.numLessons, "numLessons") + " Lessons" }) + ":"; },
  availableResources: function(d) { return "Available Resources"; },
  azureTtsTooManyRequests: function(d) { return "The app has made too many requests to convert text to speech. Please wait before trying again."; },
  azureTtsDefaultError: function(d) { return "There's been an error converting text to speech. If this issue persists, please refresh the page and try again."; },
  back: function(d) { return "Back"; },
  background: function(d) { return "background"; },
  backgroundMode: function(d) { return "Backgrounds"; },
  backgroundMusicOff: function(d) { return "Background Music: Off"; },
  backgroundMusicOn: function(d) { return "Background Music: On"; },
  backToActivity: function(d) { return "Back to activity"; },
  backToData: function(d) { return "Back to data"; },
  backToLevel: function(d) { return "Back to level"; },
  backToPreviousLevel: function(d) { return "Back to previous level"; },
  backToTop: function(d) { return "Back to top"; },
  barChart: function(d) { return "Bar Chart"; },
  behaviorEditorHeader: function(d) { return "Behavior"; },
  behaviorEditorLabel: function(d) { return "Name your behavior:"; },
  behaviorEditorDescription: function(d) { return "What is your behavior supposed to do?"; },
  behaviorsNotFound: function(d) { return "No behaviors found"; },
  beta: function(d) { return "beta"; },
  betterThanPerfectDescription: function(d) { return "WOW!"; },
  bigQuestions: function(d) { return "Big questions"; },
  blocklyClear: function(d) { return "Clear"; },
  blocklyDeuteranopiaTheme: function(d) { return "Deuteranopia Theme"; },
  blocklyHighContrastTheme: function(d) { return "High Contrast Theme"; },
  blocklyProtanopiaTheme: function(d) { return "Protanopia Theme"; },
  blocklyKBNavOn: function(d) { return "Enable Keyboard Navigation"; },
  blocklyKBNavOff: function(d) { return "Disable Keyboard Navigation"; },
  blocklyMessage: function(d) { return "Blockly"; },
  blocklyModernTheme: function(d) { return "Modern Theme"; },
  blocklyTritanopiaTheme: function(d) { return "Tritanopia Theme"; },
  blocklyTurnOffDarkMode: function(d) { return "Turn off dark mode"; },
  blocklyTurnOnDarkMode: function(d) { return "Turn on dark mode"; },
  block: function(d) { return "Block"; },
  blocks: function(d) { return "blocks"; },
  booleanFalse: function(d) { return "false"; },
  booleanTrue: function(d) { return "true"; },
  bothSectionsQuestion: function(d) { return "Would you like the student(s) to be in both sections?"; },
  bottomCenter: function(d) { return "bottom center"; },
  bottomLeft: function(d) { return "bottom left"; },
  bottomRight: function(d) { return "bottom right"; },
  "break": function(d) { return "Break"; },
  browseCurriculum: function(d) { return "Browse curriculum catalog"; },
  builtOnCodeStudio: function(d) { return "Built on Code Studio"; },
  bulkLessonVisibilityToggleTip: function(d) { return "Make all lessons in this Unit visible or hidden for your students."; },
  by: function(d) { return "By"; },
  cancel: function(d) { return "Cancel"; },
  cannotDeleteLibrary: function(d) { return "You cannot delete preset libraries"; },
  cannotDeleteUsedImage: function(d) { return "You cannot delete images that are currently used in your project"; },
  catActions: function(d) { return "Actions"; },
  catColour: function(d) { return "Color"; },
  category: function(d) { return "Category"; },
  catLists: function(d) { return "Lists"; },
  catLogic: function(d) { return "Logic"; },
  catLoops: function(d) { return "Loops"; },
  catMath: function(d) { return "Math"; },
  catProcedures: function(d) { return "Functions"; },
  catText: function(d) { return "Text"; },
  catVariables: function(d) { return "Variables"; },
  celebrityChallenge: function(d) { return "Celebrity challenge"; },
  censusBlockBased: function(d) { return "Block-based programming"; },
  censusConnection: function(d) { return "What is your connection to this school?"; },
  censusCybersecurity: function(d) { return "Cybersecurity"; },
  censusDataAnalysis: function(d) { return "Data analysis"; },
  censusEmail: function(d) { return "What is your email address?"; },
  censusExistingInaccuracy: function(d) { return "I believe that the computer science categorization for this school is inaccurate"; },
  censusExistingInaccuracyReason: function(d) { return "Explain why you think that the categorization for this school is inaccurate:"; },
  censusExistingInaccuracyTip: function(d) { return "If you think that we've incorrectly categorized the school as teaching or not teaching CS, please check this box. We will review your request."; },
  censusExistingInaccuracyTipLink: function(d) { return "Read more about how we define computer science and categorize schools."; },
  censusEthicalSocial: function(d) { return "Ethical and social issues in computing"; },
  censusFollowUpFrequency: function(d) { return "How often per week does this class meet?"; },
  censusFollowUp: function(d) { return "Your school offers a semester or year long computer science class! What topics does this course include?"; },
  censusFollowUpTellUsMore: function(d) { return "Please tell us more about this course. For example, name of the class, how often it meets, description of what is taught."; },
  censusFrequency1: function(d) { return "< 1 hour per week"; },
  censusFrequency1to3: function(d) { return "1-3 hours per week"; },
  censusFrequency3plus: function(d) { return "3+ hours per week"; },
  censusHeading: function(d) { return "Tell us about your school"; },
  censusGameDesign: function(d) { return "Game design using game layout tools without coding or computer programming"; },
  censusHowManyAfterSchool: function(d) { return "How many students do computer programming in an after-school program?"; },
  censusHowManyHoC: function(d) { return "How many students do an Hour of Code?"; },
  censusHowManyTenHours: function(d) { return "How many students take at least 10 hours of computer programming integrated into a non-Computer Science course (such as TechEd, Math, Science, Art, Library or general classroom/homeroom)?"; },
  censusHowManyTwentyHours: function(d) { return "How many students take a semester or year-long computer science course that includes at least 20 hours of coding/computer programming?"; },
  censusInternet: function(d) { return "Internet and networking"; },
  censusInvalidEmail: function(d) { return "Please enter a valid email address"; },
  censusOtherCourse: function(d) { return "This school teaches other computing classes that do not include at least 20 hours of coding/computer programming. (For example, learning to use applications, computer literacy, web design, HTML/CSS, or other)"; },
  censusOtherDescribe: function(d) { return "Other (please describe below)"; },
  censusOtherDescribeHere: function(d) { return "Other (please describe):"; },
  censusPhysicalComputing: function(d) { return "Robotics / Physical Computing"; },
  censusPledge: function(d) { return "I pledge to expand computer science offerings at my school, and to engage a diverse group of students, to bring opportunity to all."; },
  censusRequired: function(d) { return "You are missing one or more required fields."; },
  censusRequiredEmail: function(d) { return "Required. Please enter your email."; },
  censusRequiredExistingInaccuracyReason: function(d) { return "Required. Please enter a reason."; },
  censusRequiredSchool: function(d) { return "Required. Please enter your school information."; },
  censusRequiredShare: function(d) { return "Required. Please let us know if we can share your information."; },
  censusRequiredSelect: function(d) { return "Required. Please select an option."; },
  censusTextBased: function(d) { return "Text-based programming in a language such as Java, JavaScript, Python, C++, etc. (Excluding HTML or CSS)"; },
  censusWebDesign: function(d) { return "Web design using HTML or CSS"; },
  certificateAltTextNoName: function(d) { return "Certificate for completion of " + d.courseTitle; },
  certificateAltTextWithName: function(d) { return "Certificate for " + d.studentName + " for completion of " + d.courseTitle; },
  challengeLevelIntro: function(d) { return "Challenge Puzzles are lessons designed to stretch your brain! Just do the best that you can!"; },
  challengeLevelPassTitle: function(d) { return "You did it!"; },
  challengeLevelPassText: function(d) { return "However, you could've done it with only " + plural(d.idealBlocks, 0, en_us, { one: "1 block", other: number(d.idealBlocks, "idealBlocks") + " blocks" }) + ". Can you make your program even better?"; },
  challengeLevelPerfectTitle: function(d) { return "Challenge Complete!"; },
  challengeLevelSkip: function(d) { return "Skip for now"; },
  challengeLevelStart: function(d) { return "I'm ready!"; },
  challengeLevelTitle: function(d) { return "Challenge Puzzle!"; },
  changeEmailModal_currentPassword_isRequired: function(d) { return "Current password is required."; },
  changeEmailModal_currentPassword_label: function(d) { return "Current password"; },
  changeEmailModal_emailOptIn_description: function(d) { return "Can we email you about updates to our courses, local opportunities, or other computer science news?"; },
  changeEmailModal_emailOptIn_isRequired: function(d) { return "This field is required."; },
  changeEmailModal_emailOptIn_privacyPolicy: function(d) { return "(See our privacy policy)"; },
  changeEmailModal_newEmail_invalid: function(d) { return "The email address you provided is not valid."; },
  changeEmailModal_newEmail_isRequired: function(d) { return "A new email address is required."; },
  changeEmailModal_newEmail_mustBeDifferent: function(d) { return "New email address must not match old email address."; },
  changeEmailModal_newEmail_label: function(d) { return "New email address"; },
  changeEmailModal_save: function(d) { return "Update email address"; },
  changeEmailModal_title: function(d) { return "Update email address"; },
  changeEmailModal_unexpectedError: function(d) { return "An unexpected error has occurred.  Please wait a moment and try again."; },
  checkCorrectAnswer: function(d) { return "Correct answer"; },
  changeUserTypeModal_email_invalid: function(d) { return "The email address you provided is not valid."; },
  changeUserTypeModal_email_isRequired: function(d) { return "An email address is required."; },
  changeUserTypeModal_email_label: function(d) { return "Primary email address"; },
  changeUserTypeModal_email_labelDetails: function(d) { return "(Make sure you can receive emails to this email address.)"; },
  changeUserTypeModal_email_mustMatch: function(d) { return "Email must match an existing email associated with your account."; },
  changeUserTypeModal_emailOptIn_description: function(d) { return "Can we email you about updates to our courses, local opportunities, or other computer science news?"; },
  changeUserTypeModal_emailOptIn_isRequired: function(d) { return "This field is required."; },
  changeUserTypeModal_emailOptIn_privacyPolicy: function(d) { return "(See our privacy policy)"; },
  changeUserTypeModal_description_toTeacher: function(d) { return "You must provide the following information before we can convert your account into a teacher account.  Once you convert to a teacher account, any parent/guardian email address currently linked to your account will be removed."; },
  changeUserTypeModal_save_teacher: function(d) { return "Update to teacher account"; },
  changeUserTypeModal_title: function(d) { return "Update account type"; },
  changeUserTypeModal_unexpectedError: function(d) { return "An unexpected error has occurred.  Please wait a moment and try again."; },
  changeYourMind: function(d) { return "If you change your mind, you can sign up later at the bottom of this page."; },
  cheeringInstructorAltText: function(d) { return "The instructor, cheering for you!"; },
  childAccountConsentEmailUnknown: function(d) { return "We do not store student email addresses in a retrievable format—so we can’t reach out to them directly."; },
  childAccountConsentExpiredHeader: function(d) { return "Sorry! That link has expired."; },
  childAccountConsentExpiredMessage: function(d) { return "It looks like you’ve clicked an old approval link. Please ask your child to re-enter or re-send the parental approval email. You should receive an approval email within 24 hours of the new attempt."; },
  childAccountConsentValidHeader: function(d) { return "Thank you for your approval!"; },
  childAccountConsentValidPermission: function(d) { return "Permission:"; },
  childAccountConsentValidPermissionGranted: function(d) { return "Granted on " + d.date; },
  childAccountConsentValidMessage: function(d) { return "Thank you for approving your child’s Code.org account! You will receive a confirmation email within 24–48 hours. Please let your child know you’ve approved their account so they can get started learning and coding today!"; },
  childAccountPolicy_CreateSectionsWarning: function(d) { return "If you have students under 13, they may require parental consent to use a personal login. Please go back and use picture password, secret word, or school-managed sections to avoid any interruptions for students under 13."; },
  childAccountPolicy_LearnMore: function(d) { return "Learn more about parental consent"; },
  choiceLevel: function(d) { return "Choice level"; },
  choose: function(d) { return "Choose"; },
  chooseActivity: function(d) { return "Choose from the following activities:"; },
  chooseAssets: function(d) { return "Choose Assets"; },
  chooseAtLeastOne: function(d) { return "Please choose at least one option"; },
  chooseColumn: function(d) { return "Choose a column from \"" + d.table + "\""; },
  chooseGrades: function(d) { return "Grade (choose all that apply)"; },
  choosePrefix: function(d) { return "Choose..."; },
  chooseSection: function(d) { return "Choose Section"; },
  chooseSectionsPrompt: function(d) { return "Which section(s) do you want to assign \"" + d.assignmentName + "\" to?"; },
  chooseSectionsDirections: function(d) { return "When you assign a curriculum to a section, that curriculum will be the first thing students see upon signing in. Changing the assigned curriculum will never affect students progress on other curriculum."; },
  chooseSectionsDirectionsOnCatalog: function(d) { return "When you assign a curriculum to a section, that curriculum will be the first thing students see upon signing in. Changing the assigned curriculum will never affect students progress on other curriculum. Note: The most recent recommended version of the curriculum will be assigned to your section when you assign from the Curriculum Catalog."; },
  chooseTable: function(d) { return "Choose a table"; },
  chromebook: function(d) { return "Chromebook"; },
  className: function(d) { return "Class Name"; },
  classProgress: function(d) { return "Class Progress"; },
  classSection: function(d) { return "Class Section"; },
  classSectionNum: function(d) { return "Class Section #" + d.num; },
  clearAll: function(d) { return "Clear all"; },
  clearAssignedCurriculum: function(d) { return "Clear assigned curriculum"; },
  clearFilters: function(d) { return "Clear filters"; },
  clearTable: function(d) { return "Clear table"; },
  clearPuzzle: function(d) { return "Start Over"; },
  clearPuzzleConfirm: function(d) { return "This will reset the puzzle to its start state and delete all the blocks you've added or changed."; },
  clearPuzzleConfirmHeader: function(d) { return "Are you sure you want to start over?"; },
  clearResponse: function(d) { return "Clear Response"; },
  clickHere: function(d) { return "click here"; },
  clickToRemix: function(d) { return "Click \"Remix\" to spin-off your own version!"; },
  closeAndSave: function(d) { return "Close and save"; },
  closeDialog: function(d) { return "Close"; },
  chooseSounds: function(d) { return "Choose Sounds"; },
  code: function(d) { return "Code:"; },
  codeIntroduced: function(d) { return "Code Introduced"; },
  codeLogo: function(d) { return "Code.org logo"; },
  codeLogoClever: function(d) { return "Example of Code.org logo on Clever"; },
  codeMode: function(d) { return "Code"; },
  codeReviewAutoDisableMessage: function(d) { return "Code review will be automatically disabled in " + d.daysLeft + " days. To reset this time, disable and re-enable code review."; },
  codeReviewGroups: function(d) { return "Code Review Groups"; },
  codeReviewGroupsLoadError: function(d) { return "Error loading code review groups. Please close this dialog and reopen to try again."; },
  codeReviewGroupsSaveError: function(d) { return "Error saving code review groups. Please try again."; },
  codeReviewGroupsSaveSuccess: function(d) { return "Changes have been saved!"; },
  codeReviewToggleEnableError: function(d) { return "Error enabling code review. Please try again."; },
  codeReviewToggleDisableError: function(d) { return "Error disabling code review. Please try again."; },
  codeToEmbed: function(d) { return "Code that will be embedded."; },
  codeTooltip: function(d) { return "See generated JavaScript code."; },
  commentPrefix: function(d) { return "comment:"; },
  commentTooltip: function(d) { return "Leave a message for yourself, or anyone else reading your code."; },
  committedVersionLabel: function(d) { return "Commit from " + d.timestamp; },
  completed: function(d) { return "Completed"; },
  completedLevels: function(d) { return "Completed Levels"; },
  completedLessons: function(d) { return "Completed Lessons"; },
  completedStudentPercent: function(d) { return d.percentComplete + "% of students completed"; },
  completedUnpluggedLessons: function(d) { return "Tell us which unplugged lessons* your class has completed"; },
  completedWithoutRecommendedBlock: function(d) { return "Congratulations! You completed Puzzle " + d.puzzleNumber + ". (But you could use a different block for stronger code.)"; },
  completionStatus: function(d) { return "Completion Status"; },
  concept: function(d) { return "Concept"; },
  confirmAssignment: function(d) { return "Confirm section assignments"; },
  confirmChanges: function(d) { return "Confirm Changes"; },
  confirmClearTable: function(d) { return "Do you really want to delete all data from this table? You cannot undo this action."; },
  confirmDeleteExplanation: function(d) { return "Deleting this file will remove it everywhere in your project"; },
  confirmDeleteFunctionWarning: function(d) { return "Warning! Are you sure you want to delete " + d.functionName + "?"; },
  confirmImportOverwrite: function(d) { return "Importing this file will overwrite the existing data in this table. Are you sure you want to continue?"; },
  confirmImportOverwriteTitle: function(d) { return "Overwrite existing data"; },
  confirming: function(d) { return "Confirming..."; },
  confirmSchool: function(d) { return "Confirm School"; },
  congratsCertificateHeading: function(d) { return "You Earned a Certificate of Completion"; },
  congratsCertificatePersonalize: function(d) { return "Personalize your certificate"; },
  congratsCertificateShare: function(d) { return "Share your achievement"; },
  congratsCertificateShareMessage: function(d) { return "Share your achievement with others and encourage them to participate."; },
  congratsCertificateThanks: function(d) { return "Thanks for submitting!"; },
  congratsCertificateContinue: function(d) { return "Now, see options below to keep going with our other courses."; },
  congratsNextLevelHeading: function(d) { return "Graduate to the next level"; },
  congratsProjectSelected: function(d) { return "Congratulations! This project has been selected to be a featured project!"; },
  congratsSelfPacedPlTitle: function(d) { return "Explore more self-paced professional learning modules"; },
  congratsSelfPacedPlDescription: function(d) { return "Keep learning with our robust selection of self-paced professional learning modules. Our self-paced learning works in tandem with our curriculum so you can empower yourself and your students at the pace that’s best for you."; },
  congratsStudentHeading: function(d) { return "Students: Continue Learning Beyond an Hour"; },
  congratsStudentHeadingNonEng: function(d) { return "Continue Learning Beyond an Hour"; },
  congratsTeacherCodeOrgButton: function(d) { return "Explore Code.org Courses"; },
  congratsTeacherCodeOrgDesc: function(d) { return "Code.org offers courses across K-12 at no cost to schools. And, if you’d like help getting started, we have hands-on professional learning workshops around the country."; },
  congratsTeacherCodeOrgTitle: function(d) { return "Teach courses by Code.org"; },
  congratsTeacherExternalButton: function(d) { return "Explore 3rd party Options"; },
  congratsTeacherExternalDesc: function(d) { return "Compare options by different partners, organized by grade band."; },
  congratsTeacherExternalTitle: function(d) { return "Teach courses by other providers"; },
  congratsTeacherExternalTitleShort: function(d) { return "Other providers' courses"; },
  congratsTeacherHeading: function(d) { return "Teachers: Bring Computer Science to Your Classroom"; },
  congratulations: function(d) { return "Congratulations!"; },
  connectAccountThirdPartyProviders: function(d) { return "to connect your Code.org account to these providers."; },
  connectToday: function(d) { return "Connect Today"; },
  contactGeneralSupport: function(d) { return "Still having trouble? You can contact us at [support@code.org](mailto:support@code.org) with any additional questions."; },
  contactSupport: function(d) { return "Please contact teacher@code.org for any questions or concerns."; },
  contactToContinue: function(d) { return "Please contact teacher@code.org to continue."; },
  contactUs: function(d) { return "If you believe this to be an error, please [contact us](" + d.url + ")."; },
  contactWithoutEmail: function(d) { return "If you have any questions, please contact us: "; },
  containedLevelRunDisabledTooltip: function(d) { return "You need to answer the question before you can run the code"; },
  contentCorner: function(d) { return "Content Corner"; },
  "continue": function(d) { return "Continue"; },
  continueBeyondHourOfCode: function(d) { return "Continue Beyond an Hour of Code"; },
  continueLesson: function(d) { return "Continue lesson"; },
  continueToActivity: function(d) { return "Continue to activity"; },
  continueWithoutGuide: function(d) { return "Continue without guide"; },
  contractMatchBadDomainName: function(d) { return "One or more of your domain items has the wrong name."; },
  contractMatchBadDomainSize: function(d) { return "Your contract doesn't have the right number of items in the domain."; },
  contractMatchBadDomainType: function(d) { return "One or more of your domain items has the wrong type, or they are in the wrong order."; },
  contractMatchBadName: function(d) { return "Your contract has the wrong name."; },
  contractMatchBadNameCase: function(d) { return "Function names are case-sensitive. Try changing the case of your contract's name."; },
  contractMatchBadRange: function(d) { return "Your contract has the wrong range."; },
  controlProjectSharing: function(d) { return "Control project sharing"; },
  convincing: function(d) { return "Convincing"; },
  convincingEvidence: function(d) { return "Convincing Evidence"; },
  cookieNotice: function(d) { return "Cookie Notice"; },
  copied: function(d) { return "Copied!"; },
  copy: function(d) { return "Copy"; },
  copyId: function(d) { return "Copy ID"; },
  copyLinkToProject: function(d) { return "Copy link to project"; },
  copyResourcesWarning: function(d) { return "**Heads Up!** Please make a copy of any documents you plan to share with students."; },
  copySectionCodeSuccess: function(d) { return "Link copied!"; },
  copySectionCodeTooltip: function(d) { return "Click here to copy the link students need to join the section"; },
  copyStudentsConfirm: function(d) { return "Yes, I want to copy student(s) to be in this current section AND the new section."; },
  copyright: function(d) { return "Copyright"; },
  correct: function(d) { return "Correct"; },
  correctAnswer: function(d) { return "That is the correct answer."; },
  costume: function(d) { return "costume"; },
  costumeCategoryAll: function(d) { return "All"; },
  costumeCategoryAnimals: function(d) { return "Animals"; },
  costumeCategoryCharacters: function(d) { return "Characters"; },
  costumeCategoryEnvironment: function(d) { return "Environment"; },
  costumeCategoryFood: function(d) { return "Food"; },
  costumeCategoryGameplay: function(d) { return "Gameplay"; },
  costumeCategoryGenericItems: function(d) { return "Generic items"; },
  costumeCategoryObstacles: function(d) { return "Obstacles"; },
  costumeCategoryTools: function(d) { return "Tools"; },
  costumeCategoryVehicles: function(d) { return "Vehicles"; },
  costumeMode: function(d) { return "Costumes"; },
  coteacherInvite: function(d) { return d.invitedByName + " invited you to be a co-teacher"; },
  coteacherInviteDescription: function(d) { return d.invitedByEmail + " has invited you to co-teach"; },
  coteacherTooltip: function(d) { return "As a co-teacher, you will be able to manage students in the section, view their work, and track their progress."; },
  coteacherAdd: function(d) { return "Add Co-Teachers"; },
  coteacherLabel: function(d) { return "Co-teachers"; },
  coteacherPrimaryTeacher: function(d) { return "Primary Teacher"; },
  coteacherAddTooltip: function(d) { return "Co-teachers have the same access as you in managing this section and viewing student work. Co-teachers will see the invitation on their teacher dashboard."; },
  coteacherAddInfo: function(d) { return "Add co-teachers by entering the email address associated with their Code.org account in the field below. Each section can have up to five co-teachers."; },
  coteacherAddNoEmail: function(d) { return "Please enter an email address."; },
  coteacherAddInvalidEmail: function(d) { return d.email + " is not a valid email address."; },
  coteacherAddAlreadyExists: function(d) { return "Oops! You already invited " + d.email + "."; },
  coteacherAddSectionFull: function(d) { return "You can only add up to 5 co-teachers per section."; },
  coteacherCannotInviteSelf: function(d) { return "Unable to invite yourself as a co-teacher"; },
  coteacherUnableToEditCoteachers: function(d) { return "You are not able to edit co-teachers for this section."; },
  coteacherAddNoAccount: function(d) { return d.email + " is not associated with a Code.org teacher account."; },
  coteacherAddButton: function(d) { return "Add co-teacher"; },
  coteacherCount: function(d) { return d.count + "/5 co-teachers added"; },
  coteacherEmailAddress: function(d) { return "Email address"; },
  coteacherLtiAddInfo: function(d) { return "To add or remove co-teachers, please update your roster on the LMS and re-sync the section."; },
  coteacherRemoveDialogHeader: function(d) { return "Remove " + d.email + " as a co-teacher?"; },
  coteacherRemoveDialogDescription: function(d) { return "This teacher will lose their ability to manage or view student work for this section."; },
  coteacherNoCoteachers: function(d) { return "You haven't added any co-teachers yet"; },
  coteacherUnknownSaveError: function(d) { return "An unknown error occured when adding " + d.email + " as a coteacher."; },
  coteacherAlreadyInCourse: function(d) { return "Participants in this section cannot be added as co-teachers."; },
  coteacherAccepted: function(d) { return "ACCEPTED"; },
  coteacherPending: function(d) { return "PENDING"; },
  coteacherDeclined: function(d) { return "DECLINED"; },
  coteacherError: function(d) { return "ERROR"; },
  coteacherPendingTooltip: function(d) { return "To accept a pending invitation, your co-teacher must click \"Accept\" on the invitation banner on their homepage"; },
  count: function(d) { return "Count"; },
  country: function(d) { return "Country"; },
  course: function(d) { return "Course"; },
  courseBlocksCsfExpressHeading: function(d) { return "Computer Science Fundamentals Express Courses"; },
  courseBlocksCsfExpressDescription: function(d) { return "A great option for students getting started on their own.  You'll learn the fundamentals of computer science with drag & drop blocks.  Create your own drawings and games."; },
  courseBlocksCsfYoungHeading: function(d) { return "Computer Science Fundamentals for Elementary Schools"; },
  courseBlocksCsfYoungDescription: function(d) { return "For pre-readers in elementary school classrooms"; },
  courseBlocksCsfOlderHeading: function(d) { return ""; },
  courseBlocksCsfOlderDescription: function(d) { return "For older students in elementary school classrooms"; },
  courseBlocksGradeBands612: function(d) { return "Grades 6-12"; },
  courseBlocksGradeBands612Description: function(d) { return "Build real working apps, games and websites using blocks, JavaScript, CSS, HTML and more."; },
  courseBlocksGradeBands612Button: function(d) { return "6-12 Courses"; },
  courseBlocksGradeBandsContainerDescription: function(d) { return "Browse our catalog of courses from Code Studio and 3rd party partners."; },
  courseBlocksGradeBandsContainerHeading: function(d) { return "Full course catalog"; },
  courseBlocksGradeBandsElementary: function(d) { return "Elementary School"; },
  courseBlocksGradeBandsElementaryDescription: function(d) { return "Teachers say our elementary courses are \"totally awesome sauce\" and fun for all students, even pre-readers."; },
  courseBlocksGradeBandsElementaryButton: function(d) { return "Elementary School Courses"; },
  courseBlocksGradeBandsHigh: function(d) { return "High School"; },
  courseBlocksGradeBandsHighDescription: function(d) { return "We offer two year-long courses for high school: an intro course and an AP course. Both are designed to broaden participation in computer science."; },
  courseBlocksGradeBandsHighButton: function(d) { return "High School Courses"; },
  courseBlocksGradeBandsK5: function(d) { return "Grades K-5"; },
  courseBlocksGradeBandsK5Description: function(d) { return "Learn to make your own game, app, or computer drawing."; },
  courseBlocksGradeBandsK5Button: function(d) { return "K-5 Courses"; },
  courseBlocksGradeBandsMiddle: function(d) { return "Middle School"; },
  courseBlocksGradeBandsMiddleDescription: function(d) { return "Our new middle school course can be offered as a semester or year-long introduction to computer science for all students."; },
  courseBlocksGradeBandsMiddleButton: function(d) { return "Middle School Courses"; },
  courseBlocksGradeBandsUniversity: function(d) { return "Beyond K-12"; },
  courseBlocksGradeBandsUniversityDescription: function(d) { return "Take the next step on your CS Journey. Explore career paths, extended learning, scholarships, internships, and more."; },
  courseBlocksGradeBandsUniversityButton: function(d) { return "Opportunities Beyond K-12"; },
  courseBlocksInternationalGradeBandsContainerDescription: function(d) { return "Below is the catalog of all of our courses and great options from third parties. Please note that some of these are only in English. Don't worry -- we're working on getting these courses translated into your language. Thanks for your patience!"; },
  courseBlocksInternationalGradeBandsContainerHeading: function(d) { return "Full course catalog (English only)"; },
  courseBlocksInternationalGradeBandsElementary: function(d) { return "Ages 4-11"; },
  courseBlocksInternationalGradeBandsElementaryDescription: function(d) { return "CS Fundamentals offers a variety of courses for students to explore programming concepts, computational thinking, digital citizenship, and to develop interactive games and stories."; },
  courseBlocksInternationalGradeBandsElementaryButton: function(d) { return "Courses for Ages 4-11"; },
  courseBlocksInternationalGradeBandsHigh: function(d) { return "Ages 14-18+"; },
  courseBlocksInternationalGradeBandsHighDescription: function(d) { return "We offer two courses for secondary school: CS Discoveries and CS Principles. Both are designed to broaden participation in computer science."; },
  courseBlocksInternationalGradeBandsHighButton: function(d) { return "Courses for Ages 14-18+"; },
  courseBlocksInternationalGradeBandsMiddle: function(d) { return "Ages 10-16"; },
  courseBlocksInternationalGradeBandsMiddleDescription: function(d) { return "As flexible courses that can be taught in a unit, semester, or full year, CS Discoveries and CS Fundamentals Express introduce students to app design, JavaScript programming, physical computing, and more."; },
  courseBlocksInternationalGradeBandsMiddleButton: function(d) { return "Courses for Ages 10-16"; },
  courseBlocksLegacyNotificationHeading: function(d) { return "CS Fundamentals Courses 1-4 & the Accelerated Course"; },
  courseBlocksLegacyNotificationBody: function(d) { return "Were you using Courses 1-4 or the Accelerated Course? They’re still available! Our transition guide will help you find the right course for your classroom."; },
  courseBlocksLegacyNotificationSupportEndedHeading: function(d) { return "Courses 1-4 & the Accelerated Course are outdated!"; },
  courseBlocksLegacyNotificationSupportEndedBody: function(d) { return "Courses 1-4 and the Accelerated Course are still available, but we have better options now. Our transition guide will help you get started with Courses A-F, which teach the same concepts more effectively, are actively supported, and have full translation into over 30 languages."; },
  courseBlocksLegacyNotificationButtonCourses14: function(d) { return "Courses 1-4"; },
  courseBlocksLegacyNotificationButtonCoursesAccelerated: function(d) { return "Accelerated Course"; },
  courseBlocksLegacyNotificationDetailsLinkText: function(d) { return "Review the transition guide."; },
  courseBlocksToolsTitleTeacher: function(d) { return "Tools and resources for your classroom"; },
  courseBlocksToolsTitleNonEn: function(d) { return "Tools for middle and high school (English only)"; },
  courseBlocksToolsDescription: function(d) { return "In addition to our courses, teachers can use tools to teach students how to create apps, animations, games, or websites. We also have lessons and widgets to teach encryption, text compression, and other computer science concepts. Browse our other resources to inspire students with posters, videos, or by inviting guest speakers."; },
  courseBlocksToolsAi: function(d) { return "AI Module"; },
  courseBlocksToolsAiDescription: function(d) { return "Students will learn the fundamentals of artificial intelligence and machine learning and discuss their implications. Suitable for grades 6-12."; },
  courseBlocksToolsAppLab: function(d) { return "App Lab"; },
  courseBlocksToolsAppLabDescription: function(d) { return "App Lab is a programming environment where you can make simple apps. Design an app, code with blocks or JavaScript to make it work, then share your app in seconds."; },
  courseBlocksToolsGameLab: function(d) { return "Game Lab"; },
  courseBlocksToolsGameLabDescription: function(d) { return "Game Lab is a programming environment where you can make simple animations and games with objects and characters that interact with each other."; },
  courseBlocksToolsWebLab: function(d) { return "Web Lab"; },
  courseBlocksToolsWebLabDescription: function(d) { return "Web Lab is a programming environment where you can make simple web pages using HTML and CSS. Design your web pages and share your site in seconds."; },
  courseBlocksToolsWidgets: function(d) { return "Widgets"; },
  courseBlocksToolsWidgetsDescription: function(d) { return "Students can explore concepts from our CS Principles course hands-on using these digital tools. Use the widgets on their own, or create a single-concept lesson for your class."; },
  courseBlocksToolsInspire: function(d) { return "Inspire a student"; },
  courseBlocksToolsInspireDescription: function(d) { return "Find a volunteer guest speaker or use these videos, posters, and how-to resources to inspire students to try computer science."; },
  courseBlocksToolsVideo: function(d) { return "Video Library"; },
  courseBlocksToolsVideoDescription: function(d) { return "These videos can be used in any computer science course to support learning."; },
  courseCatalogButton: function(d) { return "View Course Catalog"; },
  courseCatalogDescription: function(d) { return "Code.org offers courses across K-12 at no cost to schools. And, if you’d like help getting started, we also offer online professional learning at no cost."; },
  courseCatalogTitle: function(d) { return "Course Catalog"; },
  courseExplorerHeading: function(d) { return "Recommended Code.org courses"; },
  courseExplorerDescription: function(d) { return "Courses from Code.org for students in grades K-12 and professional learning for teachers."; },
  courseInfoCscHeading: function(d) { return "CS Connections - Cross curricular learning "; },
  courseInfoCscDescription: function(d) { return "This curriculum makes the connections between learning computer science and traditional subjects like math, language arts, science, and social studies. Through CS Connections, any classroom can explore its usual subjects in exciting new ways!"; },
  courseInYourLanguage: function(d) { return "Curriculum is available in your language"; },
  courses: function(d) { return "Courses"; },
  coursesCardAction: function(d) { return "Find a course"; },
  coursesCardDescription: function(d) { return "Find a new course to keep challenging yourself."; },
  coursesLearnHeroButton: function(d) { return "Get started"; },
  coursesLearnHeroDescription: function(d) { return "Get started coding today. Our courses and activities are free! It’s easier - and way more fun - than you ever thought. Create an account to save your projects."; },
  coursesLearnHeroHeading: function(d) { return "Anyone can learn computer science"; },
  coursesLearnHeroSubHeading: function(d) { return "Over " + d.studentsCount + " million students have learned on Code.org!"; },
  courseOfferingCsTopicArtAndDesign: function(d) { return "Art and Design"; },
  courseOfferingCsTopicAppDesign: function(d) { return "App Design"; },
  courseOfferingCsTopicAI: function(d) { return "Artificial Intelligence"; },
  courseOfferingCsTopicCybersecurity: function(d) { return "Cybersecurity"; },
  courseOfferingCsTopicData: function(d) { return "Data"; },
  courseOfferingCsTopicDigitalLiteracy: function(d) { return "Digital Literacy"; },
  courseOfferingCsTopicGamesAndAnimations: function(d) { return "Games and Animations"; },
  courseOfferingCsTopicInternet: function(d) { return "Internet"; },
  courseOfferingCsTopicPhysicalComputing: function(d) { return "Physical Computing"; },
  courseOfferingCsTopicWebDesign: function(d) { return "Web Design"; },
  courseOfferingCsTopicProgramming: function(d) { return "Programming"; },
  courseOfferingInterdisciplinary: function(d) { return "Interdisciplinary"; },
  courseOfferingSchoolSubjectMath: function(d) { return "Math"; },
  courseOfferingSchoolSubjectScience: function(d) { return "Science"; },
  courseOfferingSchoolSubjectEnglishLanguageArts: function(d) { return "English Language Arts"; },
  courseOfferingSchoolSubjectHistory: function(d) { return "History"; },
  courseOfferingDeviceTypeComputer: function(d) { return "Computer"; },
  courseOfferingDeviceTypeChromebook: function(d) { return "Chromebook"; },
  courseOfferingDeviceTypeTablet: function(d) { return "Tablet"; },
  courseOfferingDeviceTypeMobile: function(d) { return "Mobile"; },
  courseOfferingDeviceTypeNoDevice: function(d) { return "No Device"; },
  courseOfferingDeviceCompatibilityLevelIdeal: function(d) { return "Ideal"; },
  courseOfferingDeviceCompatibilityLevelNotRecommended: function(d) { return "Not recommended"; },
  courseOfferingDeviceCompatibilityLevelIncompatible: function(d) { return "Incompatible"; },
  courseOfferingSelfPacedPl: function(d) { return "Self-Paced Professional Learning"; },
  courseOfferingVirtualPl: function(d) { return "Virtual Professional Learning"; },
  courseOfferingOtherPl: function(d) { return "Other Professional Learning"; },
  courseOfferingFullCourse: function(d) { return "Full Courses"; },
  courseOfferingCSF: function(d) { return "CS Fundamentals"; },
  courseOfferingCSC: function(d) { return "CS Connections"; },
  courseOfferingAIML: function(d) { return "AI/ML"; },
  courseOfferingHOC: function(d) { return "Hour of Code"; },
  courseOfferingCSFInternational: function(d) { return "CS Fundamentals International"; },
  courseOfferingMaker: function(d) { return "Maker"; },
  courseOfferingMath: function(d) { return "Math"; },
  courseOfferingTwentyHour: function(d) { return "20-hour"; },
  courseOfferingOther: function(d) { return "Other"; },
  coursesTeachHeroButton: function(d) { return "Get started"; },
  coursesTeachHeroDescription: function(d) { return "More than one million teachers have brought CS to their students using Code.org. We make it easy, no matter your background. "; },
  coursesTeachHeroHeading: function(d) { return "You can teach computer science"; },
  coursesTeachHeroSubHeading: function(d) { return "You don't have to be a software developer to teach computer science."; },
  courseOverviewVersionLabel: function(d) { return "Version:"; },
  create: function(d) { return "Create"; },
  createAccount: function(d) { return "Create an account"; },
  createAccountApplabDesc: function(d) { return "With an account, you can save your progress. You can work on your App Lab project later, play it on your phone, or share it with friends."; },
  createAccountDesc: function(d) { return "Join Code.org! With an account you’ll be able to save your course progress, keep your apps and games, and share your favorites in the public gallery."; },
  createAccountToShare: function(d) { return "Create a Code.org account to share your project"; },
  createAccountToShareDescription: function(d) { return "You must create a Code.org account before you can share your project. Creating an account will also let you save your progress and continue to work on your project later."; },
  createBlocklyBehavior: function(d) { return "Create a Behavior"; },
  createBlocklyFunction: function(d) { return "Create a Function"; },
  createBlocklyVariable: function(d) { return "Create a Variable"; },
  createClassSections: function(d) { return "Create class sections"; },
  createClassSectionsToAssign: function(d) { return "Create class section to assign a curriculum"; },
  createClassSectionToAssignButton: function(d) { return "Create Section"; },
  createClassSectionsToAssignHelpText: function(d) { return "You have not created any class sections yet. Create a class section to assign this curriculum."; },
  createGroup: function(d) { return "Create Group"; },
  createNewClassroom: function(d) { return "Create a new classroom section to start assigning courses and seeing your student progress."; },
  createNewPlSection: function(d) { return "Create a new professional learning section to start assigning courses and seeing your participants progress."; },
  createPassword: function(d) { return "Create a password"; },
  createSection: function(d) { return "Create a section"; },
  createSectionsInfo: function(d) { return "Create new sections and add students to them. Sections help you organize students into smaller groups so you can track their progress and manage their accounts."; },
  createReport: function(d) { return "Create report"; },
  createStandardsReport: function(d) { return "Generate a PDF copy of this report"; },
  createStandardsReportPage1Body: function(d) { return "This report can be easily printed or emailed to administrators, parents, or other teachers. Before we generate it, let's make sure it contains the most up-to-date information."; },
  createStandardsReportSampleNoteText: function(d) { return "This note will appear in the report."; },
  createStandardsReportStep1: function(d) { return "Step 1:"; },
  createStandardsReportStep2: function(d) { return "Step 2: Add a personalized note to your report"; },
  createStandardsReportPrompt: function(d) { return "Say more about what’s happening in your classroom. "; },
  createStandardsReportSuggestion: function(d) { return "**Suggestions:**"; },
  createStandardsReportSuggestion1: function(d) { return "Describe what your class is working on"; },
  createStandardsReportSuggestion2: function(d) { return "Explain how your computer science lessons relate to other subjects or standards"; },
  createStandardsReportSuggestion2Link: function(d) { return "Explain how your computer science lessons relate to [other subjects or standards](" + d.standardsOverviewLink + ")"; },
  createStandardsReportSuggestion4: function(d) { return "[Add a link to a student project](" + d.projectsLink + ")"; },
  createTableHeader: function(d) { return "Create data tables to store rows of data with multiple columns for different fields."; },
  createYourCertificate: function(d) { return "Create Your Certificates"; },
  crossTab: function(d) { return "Cross Tab"; },
  crossTabTooMuchXData: function(d) { return "We're unable to render your chart because the X value contains too much data."; },
  crossTabTooMuchYData: function(d) { return "We're unable to render your chart because the Y value contains too much data."; },
  crossTabTooManyCellsData: function(d) { return "We're unable to render your chart because the X and Y values contains too much data."; },
  crossCurricularOpportunities: function(d) { return "Cross-Curricular Opportunities"; },
  cscHeading: function(d) { return "CS Connections - Cross-curricular learning"; },
  cscDescription: function(d) { return "This curriculum makes the connections between learning computer science and traditional subjects like math, language arts, science, and social studies. Through CS Connections, any classroom can explore its usual subjects in exciting new ways!"; },
  csf: function(d) { return "Computer Science Fundamentals"; },
  csfDescription: function(d) { return "Start learning an introduction to computer science on Code Studio with these 20 hour courses for all ages."; },
  csfDescriptionTeacher: function(d) { return "Free set of elementary curricula that introduces students to the foundational concepts of computer science and challenges them to explore how computing and technology can impact the world."; },
  csfAcceleratedDesc: function(d) { return "Keep going with our intro course! Learn the fundamentals of computer science with drag & drop blocks. Create your own drawings and games."; },
  csfAcceleratedTitle: function(d) { return "CS Fundamentals"; },
  csfButton: function(d) { return "Try the course "; },
  csfExpressDesc: function(d) { return "Keep going with our intro course! Learn the fundamentals of computer science with drag & drop blocks. Create your own drawings and games."; },
  csfExpressTitle: function(d) { return "CS Fundamentals Express"; },
  csJourneys: function(d) { return "CS Journeys"; },
  csJourneysDescription: function(d) { return "Bring CS to life and help students make real world connections to what they're learning. Empower them to continue their CS journeys with these resources."; },
  CSTALogo: function(d) { return "Computer Science Teachers Association (CSTA) logo"; },
  CSTAStandards: function(d) { return "Computer Science Teachers Association’s (CSTA) standards"; },
  CSTAStandardsIn: function(d) { return "CSTA Standards in"; },
  CSTAStandardsPracticed: function(d) { return "CSTA standards practiced"; },
  current: function(d) { return "Current"; },
  currentCourse: function(d) { return "Current course"; },
  currentSection: function(d) { return "Active section:"; },
  currentUnit: function(d) { return "Current unit:"; },
  currentVersion: function(d) { return "Current Version"; },
  curriculum: function(d) { return "Curriculum"; },
  curriculumCatalogHeaderTitle: function(d) { return "Curriculum Catalog"; },
  curriculumCatalogHeaderSubtitle: function(d) { return "Find the perfect fit for your learning environment: Code.org courses, tutorials, and more designed for all ages and experience levels."; },
  curriculumCatalogDescription: function(d) { return "Explore Code.org's diverse set of curricula offerings."; },
  curriculumGuide: function(d) { return "Curriculum Guide"; },
  danceAfterPartyButton: function(d) { return "Go Beyond"; },
  danceAfterPartyDesc: function(d) { return "Go beyond the first hour with extended Dance Party project ideas."; },
  danceAfterPartyTitle: function(d) { return "Keep Dancing"; },
  dancePartyButton: function(d) { return "Start"; },
  dancePartyDesc: function(d) { return "Code a Dance Party to share with your friends!"; },
  dancePartyTitle: function(d) { return "Dance Party"; },
  dataLimitAlert: function(d) { return "The app has been reading or writing to the database too frequently, which may result in unexpected failures.  Please let the app owner know if you keep experiencing issues."; },
  dataMode: function(d) { return "Data"; },
  dataTabExplanation: function(d) { return "Your app can store data (like high scores and survey results) that gets saved even after you reset your app. Before you run your app, use this tab to plan out your key/value pairs or your data tables. You can enter, edit, and delete data directly from this tab or by using the data blocks within your app."; },
  dataTableCaption: function(d) { return "Create data tables to store rows of data with multiple columns for different fields."; },
  dataTableConvertToString: function(d) { return "Convert to string"; },
  dataTableConvertToNumber: function(d) { return "Convert to number"; },
  dataTableConvertToBoolean: function(d) { return "Convert to boolean"; },
  dataTableDebugView: function(d) { return "Debug view"; },
  dataTableTableView: function(d) { return "Table view"; },
  dataTableHeader: function(d) { return "DATA TABLES"; },
  dataTableKey: function(d) { return "Key"; },
  dataTableNamePlaceholder: function(d) { return "Table name"; },
  dataTableValue: function(d) { return "Value"; },
  dataLibraryHeader: function(d) { return "Data Library"; },
  dataLibraryDescription: function(d) { return "Want to use a dataset not listed here? [Help us add more datasets](https://support.code.org/hc/en-us/articles/360044953271-Help-us-add-new-data-sets-into-App-Lab-)."; },
  dataLibrarySearchPlacholder: function(d) { return "Search"; },
  dataSource: function(d) { return "Data Source"; },
  dataVisualizerAltText: function(d) { return "The " + d.chartType + " of " + d.values + " titled " + d.title; },
  dataVisualizerPlaceholderText: function(d) { return "Select values to generate a visualization"; },
  dataVisualizerBucketSize: function(d) { return "Bucket Size"; },
  dataVisualizerCreateChart: function(d) { return "Create chart on screen"; },
  dataVisualizerChartTitle: function(d) { return "Chart Title"; },
  dataVisualizerChartType: function(d) { return "Chart Type"; },
  dataVisualizerFilterDescription: function(d) { return "Filtered " + d.column + " to " + d.value; },
  dataVisualizerValues: function(d) { return "Values"; },
  dataVisualizerXValues: function(d) { return "X Values"; },
  dataVisualizerYValues: function(d) { return "Y Values"; },
  dataVisualizerViewSnapshot: function(d) { return "View Snapshot"; },
  dataVisualizerSnapshotDescription: function(d) { return "Created using Code.org App Lab on " + d.date + " from the " + d.table + " table in project " + d.project; },
  dataWorkspaceHeader: function(d) { return "Data Browser"; },
  dateSeenByStudent: function(d) { return "Date Seen By Student"; },
  dateUpdatedByTeacher: function(d) { return "Date Updated By Teacher"; },
  dateWithColon: function(d) { return "Date:"; },
  debugArea: function(d) { return "Debug Area"; },
  debugConsoleHeader: function(d) { return "Debug Console"; },
  debugCommandsHeaderWhenOpen: function(d) { return "Debug Commands"; },
  debugCommandsHeaderWhenClosed: function(d) { return "Show Debug Commands"; },
  debugWatchHeader: function(d) { return "Watchers"; },
  debugShowWatchHeader: function(d) { return "Show Watchers"; },
  debugWatchNotAvailable: function(d) { return "<not available>"; },
  debugClearButton: function(d) { return "Clear"; },
  debugSpritesOff: function(d) { return "Debug Sprites: Off"; },
  debugSpritesOn: function(d) { return "Debug Sprites: On"; },
  debugWatchersPlaceholder: function(d) { return "Variable / Property"; },
  decideLater: function(d) { return "Decide later"; },
  defaultTwitterText: function(d) { return "Check out what I made"; },
  defaultProjectNameAppLab: function(d) { return "App Lab Project"; },
  defaultProjectNameDance: function(d) { return "Dance Project"; },
  defaultProjectNameGameLab: function(d) { return "Game Lab Project"; },
  defaultProjectNameSpriteLab: function(d) { return "Sprite Lab Project"; },
  defaultProjectNameWebLab: function(d) { return "Web Lab Project"; },
  defaultProjectNameArtist: function(d) { return "Artist Project"; },
  defaultProjectNameFrozen: function(d) { return "Frozen Project"; },
  defaultProjectNameBigGame: function(d) { return "Big Game"; },
  defaultProjectNamePlayLab: function(d) { return "Play Lab Project"; },
  defaultProjectNameInfinity: function(d) { return "Infinity Project"; },
  defaultProjectNameGumball: function(d) { return "Gumball Project"; },
  defaultProjectNameIceAge: function(d) { return "Ice Age Project"; },
  defaultProjectNameMinecraft: function(d) { return "Minecraft Project"; },
  defaultProjectNameStarWars: function(d) { return "Star Wars Project"; },
  defaultProjectNameFlappy: function(d) { return "Flappy Project"; },
  defaultProjectNameBounce: function(d) { return "Bounce Project"; },
  defaultProjectNameSports: function(d) { return "Sports Project"; },
  defaultProjectNameBasketball: function(d) { return "Basketball Project"; },
  defaultProjectName: function(d) { return "My Project"; },
  "delete": function(d) { return "Delete"; },
  deleteAccount: function(d) { return "Delete Account"; },
  deleteAccount_studentWarning: function(d) { return "Deleting your account will permanently erase all personal information, coursework, and projects connected to this account."; },
  deleteAccount_teacherWarning: function(d) { return "Deleting your account will permanently erase all personal information, coursework, projects, and professional learning information connected to this account after 28 days. **It will also delete your sections and your students’ accounts** that don’t have a personal login or aren’t in another teacher’s section. Please make sure you have the authority to delete these students’ education records before deleting your own account. "; },
  deleteAccount_personalLoginInstructions: function(d) { return "Give these students a chance to keep using their Code.org accounts by [sending home instructions for creating personal logins.](" + d.explanationUrl + ") Give them at least a few days to follow these instructions BEFORE you delete your account."; },
  deleteAccountDialog_header: function(d) { return "Are you sure you want to delete your account?"; },
  deleteAccountDialog_body1: function(d) { return "**WARNING**: Deleting your account will **permanently erase** "; },
  deleteAccountDialog_body2_student: function(d) { return "all your personal information, coursework, and projects linked to this account after 28 days. "; },
  deleteAccountDialog_body2_teacher: function(d) { return "all your personal information, coursework, projects, and professional learning information linked to this account after 28 days. "; },
  deleteAccountDialog_body3: function(d) { return "It will also **permanently delete your students’ accounts** unless they created a personal login."; },
  deleteAccountDialog_button: function(d) { return "Delete my Account"; },
  deleteAccountDialog_button_studentWarning: function(d) { return "Delete my and my students' accounts"; },
  deleteAccountDialog_checkboxTitle: function(d) { return "Please verify the following " + plural(d.numCheckboxes, 0, en_us, { one: "statement", other: "statements" }) + " before you can delete your account:"; },
  deleteAccountDialog_checkbox1_1: function(d) { return "I have the authority to delete the education records "; },
  deleteAccountDialog_checkbox1_2: function(d) { return "of the students in my sections (or release it to them, if they have a personal login). "; },
  deleteAccountDialog_checkbox2_1: function(d) { return "I am aware of the "; },
  deleteAccountDialog_checkbox2_2: function(d) { return "message to send to parents "; },
  deleteAccountDialog_checkbox2_3: function(d) { return "to warn them that their children’s coding projects will be deleted unless they act to preserve it by creating a personal login for their children."; },
  deleteAccountDialog_checkbox3: function(d) { return "I understand that by deleting my account, **my students’ accounts may also be permanently deleted.**"; },
  deleteAccountDialog_checkbox4: function(d) { return "I understand that by deleting my account, **my students may not be able to access their accounts anymore.**"; },
  deleteAccountDialog_checkbox5: function(d) { return "I understand that by deleting my account, **the projects and creations of my students may also be deleted.**"; },
  deleteAccountDialog_currentPassword: function(d) { return "Current password:"; },
  deleteAccountDialog_emailUs: function(d) { return "If you delete your account and change your mind, you can email us at support@code.org within 3 weeks to recover your account."; },
  deleteAccountDialog_verification: function(d) { return "To verify, type " + d.verificationString + " below:"; },
  deleteAccountDialog_verificationString: function(d) { return "DELETE MY ACCOUNT"; },
  deleteAnswer: function(d) { return "Delete Answer"; },
  deleteAnswerHelpTip: function(d) { return "Clear your answer and reset the lesson. This is an instructor-only feature."; },
  deleteAsset: function(d) { return "Delete " + d.assetType; },
  deleteAssetConfirm: function(d) { return "Are you sure you want to delete this " + d.assetType + "? You cannot undo this action."; },
  deleteConfirm: function(d) { return "Delete?"; },
  deleteGroup: function(d) { return "Delete group"; },
  deleteTable: function(d) { return "Delete table"; },
  deleteTableConfirm: function(d) { return "Do you really want to delete this entire table? You cannot undo this action."; },
  deleteProject: function(d) { return "Delete Project"; },
  deleteProjectConfirm: function(d) { return "Do you really want to delete your project? You cannot undo this action."; },
  deleteSection: function(d) { return "Delete Section"; },
  deleteSectionConfirm: function(d) { return "Are you sure you want to delete this section? You will not be able to undo this."; },
  deleteSectionArchiveSuggestion: function(d) { return "If you simply want to remove this section from your list of sections, consider using the 'Archive section' option instead."; },
  deleteUsedImage: function(d) { return d.name + " is used in " + plural(d.value, 0, en_us, { one: "1 place", other: number(d.value, "value") + " places" }) + " in this app. If you delete it, the image will not appear in any of those places. Are you sure you want to delete it?"; },
  deleting: function(d) { return "Deleting"; },
  deletingWithEllipsis: function(d) { return "Deleting..."; },
  description: function(d) { return "Description"; },
  designMode: function(d) { return "Design"; },
  detailView: function(d) { return "Detail View"; },
  device: function(d) { return "Device"; },
  dialogAnnouncement: function(d) { return "Monitor student progress with new progress tracking layout"; },
  dialogCancel: function(d) { return "Cancel"; },
  dialogConfirmEmail: function(d) { return "Confirm email"; },
  dialogOK: function(d) { return "OK"; },
  dialogRemove: function(d) { return "Remove"; },
  directionEastLetter: function(d) { return "E"; },
  directionNorthLetter: function(d) { return "N"; },
  directionSouthLetter: function(d) { return "S"; },
  directionWestLetter: function(d) { return "W"; },
  directionNorthwestLetter: function(d) { return "NW"; },
  directionNortheastLetter: function(d) { return "NE"; },
  directionSouthwestLetter: function(d) { return "SW"; },
  directionSoutheastLetter: function(d) { return "SE"; },
  directionsForAssigningSections: function(d) { return "Directions for assigning sections content and list of available sections"; },
  disabledButtonsInfo: function(d) { return "Your progress and code is not being saved due to unexpectedly high Hour of Code traffic."; },
  disabledButtonsWarning: function(d) { return "Warning:"; },
  disabledButtonsWhy: function(d) { return "Why are my bubbles gray?"; },
  disabledForTeacherAccountsTooltip: function(d) { return "Disabled for teacher accounts in your section"; },
  disabledProgress1: function(d) { return "Yikes! This week is Hour of Code and we are experiencing even more traffic than we anticipated."; },
  disabledProgress2: function(d) { return "Unfortunately, we are not able to save the progress that you make on your course while we are dealing with this issue. Don't worry, your progress from before this week is still safe."; },
  disabledProgress3: function(d) { return "You can still try Hour of Code tutorials even though your progress won't save."; },
  disabledProgressTeacherDashboard1: function(d) { return "Warning: Progress not saving"; },
  disabledProgressTeacherDashboard2: function(d) { return "Unfortunately, we are not able to save the progress that your students make on their course while we are dealing with this issue. Don't worry, their progress from before this week is still safe. They can still try Hour of Code tutorials even though their progress won't save."; },
  disableMaker: function(d) { return "Disable Maker Toolkit"; },
  discussionGoal: function(d) { return "Discussion Goal"; },
  discountCodeSchoolConfirm: function(d) { return "Before you can receive your code, please verify the school at which you teach:"; },
  discoverFacilitatorLedWorkshops: function(d) { return "Discover facilitator-led workshops"; },
  discoverMore: function(d) { return "Discover More"; },
  discoverMoreCatalogText: function(d) { return "Don’t see what you’re looking for? Explore all of our courses in the Curriculum Catalog"; },
  dismiss: function(d) { return "Dismiss"; },
  displayName: function(d) { return "Display name"; },
  documentation: function(d) { return "Documentation"; },
  documentationBug: function(d) { return "Found a bug in the documentation? Let us know at [support@code.org](mailto:support@code.org)."; },
  done: function(d) { return "Done"; },
  dontForget: function(d) { return "Don't forget"; },
  doSomething: function(d) { return "do something"; },
  download: function(d) { return "Download"; },
  downloadCSV: function(d) { return "Download CSV"; },
  downloadAssessmentCSV: function(d) { return "Download CSV of student responses"; },
  downloadFeedbackCSV: function(d) { return "Download CSV of Feedback"; },
  downloadParentLetter: function(d) { return "Download parent letter"; },
  downloadReplayVideoButtonDownload: function(d) { return "Animation"; },
  downloadReplayVideoButtonError: function(d) { return "Sorry, we were unable to download your animation. Please try re-running your project and trying again."; },
  dragBlocksToMatch: function(d) { return "Drag the blocks to match"; },
  draw: function(d) { return "Draw"; },
  dropletBlock_addOperator_description: function(d) { return "Add two numbers"; },
  dropletBlock_addOperator_signatureOverride: function(d) { return "Add operator"; },
  dropletBlock_andOperator_description: function(d) { return "Returns true only when both expressions are true and false otherwise"; },
  dropletBlock_andOperator_signatureOverride: function(d) { return "AND boolean operator"; },
  dropletBlock_assign_x_description: function(d) { return "Assigns a value to a previously declared variable."; },
  dropletBlock_assign_x_signatureOverride: function(d) { return "Assign a variable"; },
  dropletBlock_callMyFunction_description: function(d) { return "Calls a named function that takes no parameters."; },
  dropletBlock_callMyFunction_n_description: function(d) { return "Calls a user defined function that takes one or more parameters."; },
  dropletBlock_callMyFunction_n_signatureOverride: function(d) { return "Call a function with parameters"; },
  dropletBlock_callMyFunction_signatureOverride: function(d) { return "Call a function"; },
  dropletBlock_comment_description: function(d) { return "Write a description of some code"; },
  dropletBlock_comment_signatureOverride: function(d) { return "comment"; },
  dropletBlock_declareAssign_x_array_1_4_description: function(d) { return "Declares a variable and assigns it to an array with the given initial values"; },
  dropletBlock_declareAssign_x_array_1_4_signatureOverride: function(d) { return "Declare a variable assigned to an array"; },
  dropletBlock_declareAssign_x_description: function(d) { return "Declares and assigns an initial value to a variable."; },
  dropletBlock_declareAssign_x_signatureOverride: function(d) { return "Declare a variable"; },
  dropletBlock_declareAssign_x_prompt_description: function(d) { return "Declares that the code will now use a variable and assign it an initial value provided by the user"; },
  dropletBlock_declareAssign_x_prompt_signatureOverride: function(d) { return "Prompt the user for a value and store it"; },
  dropletBlock_declareAssign_x_promptNum_description: function(d) { return "Declares that the code will now use a variable and assign it an initial numerical value provided by the user"; },
  dropletBlock_declareAssign_x_promptNum_signatureOverride: function(d) { return "Prompt the user for a numerical value and store it"; },
  dropletBlock_declareNoAssign_x_description: function(d) { return "Declares a variable with the given name."; },
  dropletBlock_declareNoAssign_x_signatureOverride: function(d) { return "Declare a variable"; },
  dropletBlock_divideOperator_description: function(d) { return "Divide two numbers"; },
  dropletBlock_divideOperator_signatureOverride: function(d) { return "Divide operator"; },
  dropletBlock_equalityOperator_description: function(d) { return "Test whether two values are equal. Returns true if the value on the left-hand side of the expression equals the value on the right-hand side of the expression, and false otherwise."; },
  dropletBlock_equalityOperator_signatureOverride: function(d) { return "Equality operator"; },
  dropletBlock_forLoop_i_0_4_description: function(d) { return "Creates a loop consisting of an initialization expression, a conditional expression, an incrementing expression, and a block of statements executed for each iteration of the loop."; },
  dropletBlock_forLoop_i_0_4_signatureOverride: function(d) { return "for loop"; },
  dropletBlock_functionParams_n_description: function(d) { return "Gives a name to a set of parameter driven actions for the computer to perform."; },
  dropletBlock_functionParams_n_signatureOverride: function(d) { return "Define a function with parameters"; },
  dropletBlock_functionParams_none_description: function(d) { return "Gives a name to a set of actions you want the computer to perform."; },
  dropletBlock_functionParams_none_signatureOverride: function(d) { return "Define a function"; },
  dropletBlock_getTime_description: function(d) { return "Get the current time in milliseconds."; },
  dropletBlock_greaterThanOperator_description: function(d) { return "Tests whether a number is greater than another number. Returns true if the value on the left-hand side of the expression is strictly greater than the value on the right-hand side of the expression."; },
  dropletBlock_greaterThanOperator_signatureOverride: function(d) { return "Greater than operator"; },
  dropletBlock_greaterThanOrEqualOperator_description: function(d) { return "Tests whether a value is greater than or equal to another value. Returns true if the value on the left-hand side of the expression is greater than or equal to the value on the right-hand side of the expression."; },
  dropletBlock_greaterThanOrEqualOperator_signatureOverride: function(d) { return "Greater than or equal operator"; },
  dropletBlock_ifBlock_description: function(d) { return "Executes a block of statements if the specified condition is true"; },
  dropletBlock_ifBlock_signatureOverride: function(d) { return "if statement"; },
  dropletBlock_ifElseBlock_description: function(d) { return "Executes a block of statements if the specified condition is true; otherwise, the block of statements in the else clause are executed"; },
  dropletBlock_ifElseBlock_signatureOverride: function(d) { return "if/else statement"; },
  dropletBlock_inequalityOperator_description: function(d) { return "Tests whether two values are not equal. Returns true if the value on the left-hand side of the expression does not equal the value on the right-hand side of the expression"; },
  dropletBlock_inequalityOperator_signatureOverride: function(d) { return "Inequality operator"; },
  dropletBlock_lessThanOperator_description: function(d) { return "Tests whether a value is less than another value. Returns true if the value on the left-hand side of the expression is strictly less than the value on the right-hand side of the expression"; },
  dropletBlock_lessThanOperator_signatureOverride: function(d) { return "Less than operator"; },
  dropletBlock_lessThanOrEqualOperator_description: function(d) { return "Tests whether a value is less than or equal to another value. Returns true if the value on the left-hand side of the expression is less than or equal to the value on the right-hand side of the expression."; },
  dropletBlock_lessThanOrEqualOperator_signatureOverride: function(d) { return "Less than or equal operator"; },
  dropletBlock_mathAbs_description: function(d) { return "Takes the absolute value of x"; },
  dropletBlock_mathAbs_param0: function(d) { return "x"; },
  dropletBlock_mathAbs_param0_description: function(d) { return "An arbitrary number."; },
  dropletBlock_mathAbs_signatureOverride: function(d) { return "Math.abs(x)"; },
  dropletBlock_mathIncrement_description: function(d) { return "Adds one to x"; },
  dropletBlock_mathIncrement_param0: function(d) { return "x"; },
  dropletBlock_mathIncrement_param0_description: function(d) { return "An arbitrary number."; },
  dropletBlock_mathIncrement_signatureOverride: function(d) { return "x++"; },
  dropletBlock_mathDecrement_description: function(d) { return "Subtracts one from x"; },
  dropletBlock_mathDecrement_param0: function(d) { return "x"; },
  dropletBlock_mathDecrement_param0_description: function(d) { return "An arbitrary number."; },
  dropletBlock_mathDecrement_signatureOverride: function(d) { return "x--"; },
  dropletBlock_mathMax_description: function(d) { return "Takes the maximum value among one or more values n1, n2, ..., nX"; },
  dropletBlock_mathMax_param0: function(d) { return "n1, n2,..., nX"; },
  dropletBlock_mathMax_param0_description: function(d) { return "One or more numbers to compare."; },
  dropletBlock_mathMax_signatureOverride: function(d) { return "Math.max(n1, n2, ..., nX)"; },
  dropletBlock_mathMin_description: function(d) { return "Takes the minimum value among one or more values n1, n2, ..., nX"; },
  dropletBlock_mathMin_param0: function(d) { return "n1, n2,..., nX"; },
  dropletBlock_mathMin_param0_description: function(d) { return "One or more numbers to compare."; },
  dropletBlock_mathMin_signatureOverride: function(d) { return "Math.min(n1, n2, ..., nX)"; },
  dropletBlock_mathPow_description: function(d) { return "Takes x to the power of y"; },
  dropletBlock_mathPow_param0: function(d) { return "x"; },
  dropletBlock_mathPow_param0_description: function(d) { return "The base number."; },
  dropletBlock_mathPow_param1: function(d) { return "y"; },
  dropletBlock_mathPow_param1_description: function(d) { return "The exponent number."; },
  dropletBlock_mathPow_signatureOverride: function(d) { return "Math.pow(x, y)"; },
  dropletBlock_mathRandom_description: function(d) { return "Returns a random number ranging from 0 (inclusive) up to but not including 1 (exclusive)"; },
  dropletBlock_mathRandom_signatureOverride: function(d) { return "Math.random()"; },
  dropletBlock_mathRound_description: function(d) { return "Rounds a number to the nearest integer"; },
  dropletBlock_mathRound_param0: function(d) { return "x"; },
  dropletBlock_mathRound_param0_description: function(d) { return "An arbitrary number."; },
  dropletBlock_mathRound_signatureOverride: function(d) { return "Math.round(x)"; },
  dropletBlock_mathSqrt_description: function(d) { return "Returns the square root of x"; },
  dropletBlock_mathSqrt_param0: function(d) { return "x"; },
  dropletBlock_mathSqrt_param0_description: function(d) { return "An arbitrary number."; },
  dropletBlock_mathSqrt_signatureOverride: function(d) { return "Math.sqrt(x)"; },
  dropletBlock_moduloOperator_description: function(d) { return "Returns the remainder of a division problem"; },
  dropletBlock_moduloOperator_signatureOverride: function(d) { return "Modulo Operator"; },
  dropletBlock_multiplyOperator_description: function(d) { return "Multiply two numbers"; },
  dropletBlock_multiplyOperator_signatureOverride: function(d) { return "Multiply operator"; },
  dropletBlock_notOperator_description: function(d) { return "Returns false if the expression can be converted to true; otherwise, returns true"; },
  dropletBlock_notOperator_signatureOverride: function(d) { return "NOT boolean operator"; },
  dropletBlock_orOperator_description: function(d) { return "Returns true when either expression is true and false otherwise"; },
  dropletBlock_orOperator_signatureOverride: function(d) { return "OR boolean operator"; },
  dropletBlock_playSound_description: function(d) { return "Plays the MP3 sound file from the specified URL."; },
  dropletBlock_playSound_param0_description: function(d) { return "The URL to a sound file. Can be a project asset name or external URL."; },
  dropletBlock_playSound_param1_description: function(d) { return "If true, loop the sound until asked to stop."; },
  dropletBlock_playSpeech_description: function(d) { return "Plays the specified text as speech with a voice in the specified gender. Powered by Microsoft Azure AI."; },
  dropletBlock_randomNumber_description: function(d) { return "Returns a random number in the closed range from min to max."; },
  dropletBlock_randomNumber_param0: function(d) { return "min"; },
  dropletBlock_randomNumber_param0_description: function(d) { return "The minimum number returned"; },
  dropletBlock_randomNumber_param1: function(d) { return "max"; },
  dropletBlock_randomNumber_param1_description: function(d) { return "The maximum number returned"; },
  dropletBlock_return_description: function(d) { return "Return a value from a function"; },
  dropletBlock_return_signatureOverride: function(d) { return "return"; },
  dropletBlock_setAttribute_description: function(d) { return "Sets the given value"; },
  dropletBlock_stopSound_description: function(d) { return "Stops playing the sound file from the specified URL, or all sounds if no URL is given."; },
  dropletBlock_stopSound_param0_description: function(d) { return "The URL to a sound file. Can be an project asset name or external URL."; },
  dropletBlock_subtractOperator_description: function(d) { return "Subtract two numbers"; },
  dropletBlock_subtractOperator_signatureOverride: function(d) { return "Subtract operator"; },
  dropletBlock_whileBlock_description: function(d) { return "Creates a loop consisting of a conditional expression and a block of statements executed for each iteration of the loop. The loop continues to execute as long as the condition evaluates to true"; },
  dropletBlock_whileBlock_signatureOverride: function(d) { return "while loop"; },
  duplicate: function(d) { return "Duplicate"; },
  duration: function(d) { return "Duration"; },
  durationLabel: function(d) { return "Duration: " + d.duration; },
  edit: function(d) { return "Edit"; },
  editAll: function(d) { return "Edit all"; },
  editProject: function(d) { return "Edit Project"; },
  editDuringRunMessage: function(d) { return "Your code may have changed. Click \"Reset\" and then \"Run\" to run your code again."; },
  editSectionDetails: function(d) { return "Edit Section Details"; },
  editSectionLoginTypeCleverDesc: function(d) { return "Students sign in through Clever."; },
  editSectionLoginTypeEmailDesc: function(d) { return "Students sign in with their personal email login information."; },
  editSectionLoginTypeGoogleDesc: function(d) { return "Students sign in through Google Classroom."; },
  editSectionLoginTypePicDesc: function(d) { return "Students sign in with a secret picture that was selected for them by Code.org."; },
  editSectionLoginTypeWordDesc: function(d) { return "Students sign in with two secret words that were selected for them by Code.org."; },
  editable: function(d) { return "Editable"; },
  educator: function(d) { return "Educator"; },
  eligibilityExplanation: function(d) { return "In order to be eligible to receive a code for a subsidized Circuit Playground kit, you must meet the following requirements:"; },
  eligibilityReqPD: function(d) { return "You attended a 5-day summer workshop for CS Discoveries in 2019 or are participating in the 2019-20 Facilitator Development Program as a new CS Discoveries facilitator."; },
  eligibilityReqStudentCount: function(d) { return "Ten students in one of your sections have completed the first three units of CS Discoveries."; },
  eligibilityReqStudentCountFail: function(d) { return "Sorry, it doesn't look like you have enough students in your sections that have made progress in Units 2 and 3. Please check back here once your students have finished the first semester of CS Discoveries. If you are using a different account to track the progress of students or if you think there has been an error in detecting how much progress your students have made in Units 2 and 3, please contact us at teacher@code.org."; },
  eligibilityReqYear: function(d) { return "You plan to teach Unit 6 by the end of the 2020-21 school year."; },
  eligibilityReqYearConfirmInstructions: function(d) { return "Please confirm that you will be teaching Unit 6 of CS Discoveries with your students and when you will be teaching it:"; },
  eligibilityReqYearFail: function(d) { return "The subsidy for classroom kits of the Adafruit Circuit Playground is available thanks to the generosity of Code.org's donors such as Microsoft, Facebook, Infosys Foundation, Omidyar Network, and Google. Additionally, Adafruit and DHL are helping to lower the cost of these kits directly. Our intention is that these subsidized kits are going to teachers who are teaching all units of CS Discoveries to their students (whether over 1 or 2 years), as we want to lower the barrier to teaching a hardware-based unit."; },
  eligibilityRequirements: function(d) { return "Eligibility Requirements"; },
  eligibilitySchoolUnknown: function(d) { return "Because your school isn't listed, we were not able to look up the data on what percent of your students are eligible for free/reduced-price lunches."; },
  eligibilityYearDecline: function(d) { return "Unfortunately, we can only offer codes for subsidized kits for teachers who know they will be teaching Unit 6 of CS Discoveries by the '20-'21 school year. For any questions or concerns, please contact us at teacher@code.org."; },
  eligibilityYearNo: function(d) { return "No, I am not planning on teaching Unit 6 of CS Discoveries."; },
  eligibilityYearUnknown: function(d) { return "I am not sure."; },
  eligibilityYearYesSpring2020: function(d) { return "Yes, I plan on teaching it during spring 2020."; },
  eligibilityYearYesFall2020: function(d) { return "Yes, I plan on teaching it during fall 2020."; },
  eligibilityYearYesSpring2021: function(d) { return "Yes, I plan on teaching it during spring 2021."; },
  email: function(d) { return "Email"; },
  emailConfirmationText: function(d) { return "You must confirm the email address you use to sign into this account before we can convert your account to a teacher account."; },
  emailConfirmationTitle: function(d) { return "Please confirm your email"; },
  emailAddressPolicy: function(d) { return "Code.org will not store student email addresses in a retrievable format, for privacy reasons."; },
  emailLabel: function(d) { return "Email: "; },
  emailMeAGuide: function(d) { return "Email me a guide"; },
  emailRequestSubmitted: function(d) { return "Email request submitted"; },
  embed: function(d) { return "Embed"; },
  embeddedExampleFor: function(d) { return "Embedded Example for " + d.name; },
  emptyBlockInFunction: function(d) { return "The function " + d.name + " has an unfilled input."; },
  emptyBlockInVariable: function(d) { return "The variable " + d.name + " has an unfilled input."; },
  emptyBlocksErrorMsg: function(d) { return "The \"Repeat\" or \"If\" block needs to have other blocks inside it to work. Make sure the inner block fits properly inside the containing block."; },
  emptyBrambleContainer: function(d) { return "Empty Bramble Container"; },
  emptyExampleBlockErrorMsg: function(d) { return "You need at least two examples in function " + d.functionName + ". Make sure each example has a call and a result."; },
  emptyFreeResponse: function(d) { return "No response given for this question."; },
  emptyFunctionBlocksErrorMsg: function(d) { return "The function block needs to have other blocks inside it to work."; },
  emptyFunctionalBlock: function(d) { return "You have a block with an unfilled input."; },
  emptySection: function(d) { return "Your section doesn't have any students! Go to the [Manage Students](" + d.url + ") tab to add some."; },
  emptySectionHeadline: function(d) { return "It's a bit empty here..."; },
  emptySectionDescription: function(d) { return "You haven't added students to this class section yet. Add some students to start tracking their progress."; },
  emptySurveyOverviewTable: function(d) { return "Because this survey is anonymous, we can only show aggregated results once at least 5 students have submitted their survey and answered the first question of the survey. \n\nIf you have given this survey to your class and are still not seeing responses here, please give the survey to your class again and encourage your students to answer the first question of the survey before they submit the survey. [Learn more about surveys and assessments.](https://support.code.org/hc/articles/115001331951-Using-lock-settings-for-assessments-and-surveys)"; },
  emptyAssessmentSubmissions: function(d) { return "There are currently no submissions for this assessment."; },
  emptyTextResponsesTable: function(d) { return "Most of our classes are designed to work for younger ages and do not require students to type text responses to questions, so you will not see any text responses here. For older students in middle and high school courses, you can see their submissions to open-ended text response questions by choosing the assigned course from the drop down above."; },
  emptyTopLevelBlock: function(d) { return "There are no blocks to run. You must attach a block to the " + d.topLevelBlockName + " block."; },
  enable: function(d) { return "Enable"; },
  enableAITutor: function(d) { return "Enable AI Tutor"; },
  enableAITutorTooltip: function(d) { return "Turning this on will give students in your section access to AI Tutor on certain AP CSA levels."; },
  enableCodeReview: function(d) { return "Enable Code Review"; },
  enableTtsAutoplay: function(d) { return "Automatically read instructions aloud to students? (Only certain courses and web browsers)"; },
  enableTtsAutoplayToggle: function(d) { return "Automatically read instructions aloud to students"; },
  enableLessonExtras: function(d) { return "Turn on Lesson Extras? (Only certain courses and units)"; },
  enableLessonExtrasToggle: function(d) { return "Turn on Lesson Extras"; },
  enableMaker: function(d) { return "Enable Maker Toolkit"; },
  enableMakerDialogTitle: function(d) { return "Enable Maker Toolkit?"; },
  enableMakerDialogWarningOnlyCP: function(d) { return "Warning: Your app will NOT work unless you have an Adafruit Circuit Playground board."; },
  enableMakerDialogWarning: function(d) { return "Warning: Your app will NOT work unless you have an Adafruit Circuit Playground or micro:bit board."; },
  enableMakerDialogDescription: function(d) { return "Maker Toolkit is a feature used in our physical computing curriculum. See the setup page for more details:"; },
  enableMakerDialogSetupPageLinkText: function(d) { return "Maker Toolkit Setup"; },
  enablePairProgramming: function(d) { return "Allow students to Pair Program?"; },
  encrypted: function(d) { return "encrypted"; },
  end: function(d) { return "end"; },
  endOfLesson: function(d) { return "Congratulations! You've reached the end of the lesson."; },
  endOfLessonDialogDetails: function(d) { return "Check in with your teacher for the next activity."; },
  endOfLessonDialogHeading: function(d) { return "You finished Lesson " + d.lessonNumber + "!"; },
  englishOnly: function(d) { return "English-only"; },
  englishOnlyWarning: function(d) { return "Sorry! This lesson is not available in your language. The levels in this lesson use a mix of English words and characters that can’t be translated right now. You can move on to Lesson " + d.nextStage + "."; },
  enterCountry: function(d) { return "Enter country if outside the United States"; },
  enterGroupName: function(d) { return "Enter a group name (optional)"; },
  enterSectionCode: function(d) { return "Enter section code"; },
  enterCertificateNames: function(d) { return "Enter up to 30 names, **one per line**. A printable page with personalized " + d.courseTitle + " certificates will be generated."; },
  enterText: function(d) { return "enter text"; },
  enterYourAnswerHere: function(d) { return "Enter your answer here"; },
  enterYourName: function(d) { return "Enter Your Name"; },
  enterYourSchoolZip: function(d) { return "Enter your school's zip code:"; },
  enrollmentDescription: function(d) { return "Join your teacher's classroom by entering their section code below. Teachers will be able to see your course progress, projects, and reset your password in case you forget it."; },
  equalTo: function(d) { return "Equal to"; },
  errorDeleting: function(d) { return "Error deleting file."; },
  errorEmptyFunctionBlockModal: function(d) { return "There need to be blocks inside your function definition. Click \"edit\" and drag blocks inside the green block."; },
  errorExceededLimitedBlocks: function(d) { return "You did it! Now go find the pattern in your code and take out the extra blocks. You can only use " + d.limit + " of these blocks:"; },
  errorFindingClassLibraries: function(d) { return "Unable to load your class libraries at this time. Please check your internet connection and try again."; },
  errorGenericLintError: function(d) { return "Your program contains an editor warning that needs to be corrected. Hover over the icons near the line numbers in the editor to learn more."; },
  errorIncompleteBlockInFunction: function(d) { return "Click \"edit\" to make sure you don't have any blocks missing inside your function definition."; },
  errorLoadingAnimation: function(d) { return "It looks like we are having trouble loading your animation \"" + d.animationName + "\". Make sure you have a good internet connection and try reloading the page. If this problem persists, it is possible that this animation is broken. In this case, you may need to continue by removing the animation."; },
  errorLoadingDocumentation: function(d) { return "An error occurred while loading documentation."; },
  errorLoadingRosteredSections: function(d) { return "Oops, there was a problem grabbing your sections from " + d.type + "."; },
  errorLoadingRosteredSectionsSupport: function(d) { return "If the problem persists, click here for troubleshooting tips."; },
  errorOccurredTitle: function(d) { return "An Error Occurred"; },
  errorParamInputUnattached: function(d) { return "Remember to attach a block to each parameter input on the function block in your workspace."; },
  errorParsingLibrary: function(d) { return "There is an error in your imported library (" + d.libraryName + "). Try deleting and re-importing this library. " + d.errorMessage; },
  errorQuestionMarksInNumberField: function(d) { return "Try replacing \"???\" with a value."; },
  errorRequiredParamsMissing: function(d) { return "Create a parameter for your function by clicking \"edit\" and adding the necessary parameters. Drag the new parameter blocks into your function definition."; },
  errorResettingAnswer: function(d) { return "There was an error deleting your answer. You may not have permissions to delete this answer."; },
  errorSavingLockStatus: function(d) { return "An error has occurred. Changes may not have saved."; },
  errorSavingLockStatusWithMessage: function(d) { return "An error has occurred: " + d.errorMessage; },
  errorSubmittingFeedback: function(d) { return "Error submitting feedback to student."; },
  errorUnusedFunction: function(d) { return "You created a function, but never used it on your workspace! Click on \"Functions\" in the toolbox and make sure you use it in your program."; },
  errorUnusedParam: function(d) { return "You added a parameter block, but didn't use it in the definition. Make sure to use your parameter by clicking \"edit\" and placing the parameter block inside the green block."; },
  evaluate: function(d) { return "Evaluate"; },
  exactNumberOfBlocks: function(d) { return "Only " + plural(d.numBlocks, 0, en_us, { one: "1 block", other: number(d.numBlocks, "numBlocks") + " blocks" }) + " used!"; },
  exampleErrorMessage: function(d) { return "The function " + d.functionName + " has one or more examples that need adjusting. Make sure they match your definition and answer the question."; },
  examples: function(d) { return "Examples"; },
  examplesFailedOnClose: function(d) { return "One or more of your examples do not match your definition. Check your examples before closing"; },
  exampleSolution: function(d) { return "Example Solution " + d.number; },
  expand: function(d) { return "Expand"; },
  explainCourseAssignmentsLearnMore: function(d) { return " Learn what happens when you assign a course."; },
  explainTtsAutoplay: function(d) { return "For Chrome, Internet Explorer, and Edge browsers only: When this setting is on, level instructions will be automatically read aloud to students using text-to-speech each time they open a level. This makes it easier for students who are not yet fluent readers to complete lessons."; },
  explainTtsAutoplayToolTip: function(d) { return "For Chrome, Internet Explorer, and Edge browsers only: When this setting is on, level instructions will be automatically read aloud to students using text-to-speech each time they open a level. This makes it easier for students who are not yet fluent readers to complete lessons. Not available in all courses."; },
  explainLessonExtras: function(d) { return "When Lesson Extras is on, students will end each lesson with some bonus challenges and creative projects rather than being automatically advanced to the next lesson. This feature gives students the opportunity to expand their knowledge and further practice, without getting ahead of their classmates."; },
  explainLessonExtrasToolsTip: function(d) { return "When Lesson Extras is on, students will end each lesson with some bonus challenges and creative projects rather than being automatically advanced to the next lesson. This feature gives students the opportunity to expand their knowledge and further practice, without getting ahead of their classmates.  Not available in all courses and units."; },
  explainLessonExtrasLearnMore: function(d) { return "Learn more about Lesson Extras."; },
  explainPairProgramming: function(d) { return "When pair programming is turned on, students can choose to work with a classmate at the same computer. Turn this setting on if you want students to be able to work together while sharing progress."; },
  explainPairProgrammingLearnMore: function(d) { return " Learn more about pair programming."; },
  explainRestrictedSectionEmail: function(d) { return "If set to ‘yes,’ students will not be able to join this section using the section code. You can still add students to the section manually by moving or copying them from another section."; },
  explainRestrictedSectionEmailToolTip: function(d) { return "If set to ‘yes,’ students will not be able to join this section using the section code. You can still add students to the section manually by moving or copying them from another section."; },
  explainRestrictedSectionWordAndPicture: function(d) { return "If set to ‘yes,’ students will not be able to join this section using the section code. You can still add students to the section manually on the Manage Students tab."; },
  explainRestrictedSectionLearnMore: function(d) { return "Learn More"; },
  exploreCsConnections: function(d) { return "Explore CS Connections"; },
  exploreCsFundamentals: function(d) { return "Explore CS Fundamentals"; },
  exploreLessons: function(d) { return "Explore lessons"; },
  exploreCurriculumCatalog: function(d) { return "Explore Curriculum Catalog"; },
  exploreDataset: function(d) { return "Visualize " + d.datasetName; },
  exploreProfessionalLearning: function(d) { return "Explore Professional Learning"; },
  exploreSelfPacedLearning: function(d) { return "Explore self-paced learning"; },
  export: function(d) { return "Export"; },
  exportForWeb: function(d) { return "Export for web"; },
  expressCourse: function(d) { return "Express Course"; },
  expressCourseDescription: function(d) { return "Learn computer science at your own pace! Learn to create computer programs, develop problem-solving skills, and work through fun challenges! Make games and creative projects to share with friends, family, and teachers."; },
  extensive: function(d) { return "Extensive"; },
  extensiveEvidence: function(d) { return "Extensive Evidence"; },
  extrasStageNChallenges: function(d) { return "Lesson " + d.lessonNumber + " Challenges"; },
  extrasStageNumberCompleted: function(d) { return "You Completed Lesson " + d.number + "!"; },
  exportToCSV: function(d) { return "Export to csv"; },
  extrasTryAChallenge: function(d) { return "Try a Challenge"; },
  extrasCreateSomething: function(d) { return "Create Something"; },
  extrasNextLesson: function(d) { return "Go on to Lesson " + d.number; },
  extrasNextFinish: function(d) { return "Finish the Unit"; },
  extrasNextUnitOverview: function(d) { return "View the Unit"; },
  extrasNoBonusLevels: function(d) { return "There are no bonus levels for this lesson."; },
  extraTopBlocks: function(d) { return "You have unattached blocks."; },
  extraTopBlocksWhenRun: function(d) { return "You have unattached blocks. Did you mean to attach these to the \"when run\" block?"; },
  facilitatorLedWorkshops: function(d) { return "Facilitator led workshops"; },
  failedToGenerateBlocklyCode: function(d) { return "Uh oh! We can’t run your code. We are investigating this issue. In the meantime, you may need to start over or skip to another level."; },
  fallbackVideoClosedCaptioningLink: function(d) { return "Closed Captioning and Translations"; },
  fallbackVideoClosedCaptioningDialogHeading: function(d) { return "Closed captioning and translations available on YouTube"; },
  fallbackVideoClosedCaptioningDialogBody: function(d) { return "Please ask your IT department to allow access to https://www.youtube-nocookie.com/*, *.googlevideo.com/*, and *.ytimg.com/* in order to get closed captioning and translations.  Note that this version of YouTube will not collect any data from you other than what is required to play the video."; },
  fallbackVideoClosedCaptioningDialogBodyLink: function(d) { return "See IT requirements"; },
  fallbackVideoClosedCaptioningDialogClose: function(d) { return "Close"; },
  familyName: function(d) { return "Family name"; },
  familyNameHelpTip: function(d) { return "Optional. If provided, allows you to sort by this name instead of the display name when viewing student work."; },
  familyNameToolTip: function(d) { return "Family names can be edited on the Manage Students tab of this section's teacher dashboard."; },
  featureAgain: function(d) { return "Feature again"; },
  featured: function(d) { return "Featured"; },
  featuredProject: function(d) { return "Featured Project"; },
  featuredProjects: function(d) { return "Featured Projects"; },
  featureUnpublishedWarning: function(d) { return "This project is currently unpublished. It can still be marked as featured, but it will not show in the gallery until the owner publishes it."; },
  feedback: function(d) { return "Feedback"; },
  feedbackAll: function(d) { return "All Teacher Feedback"; },
  feedbackAvailableOnLevel: function(d) { return "Feedback will be available on Level " + d.levelPosition; },
  feedbackCommentAreaHeader: function(d) { return "Teacher Feedback"; },
  feedbackDownloadFileName: function(d) { return "Feedback for " + d.sectionName + " in " + d.scriptName + " on " + d.date + ".csv"; },
  feedbackDownloadOverview: function(d) { return "This CSV file contains all feedback you’ve completed for your section " + d.sectionName + " in levels within **" + d.scriptName + "**. You can leave feedback for your students by going to a level in this unit, viewing a student's work, and clicking the \"Feedback\" tab."; },
  feedbackDownloadRecommendation: function(d) { return "We recommend checking student progress and giving feedback on levels marked as assessment opportunities."; },
  feedbackFrom: function(d) { return "Feedback from " + d.teacher; },
  feedbackGiven: function(d) { return "Feedback given"; },
  feedbackHeader: function(d) { return "Give Feedback"; },
  feedbackLoadError: function(d) { return "There's been an error establishing a connection to our servers. Please refresh the page and try again."; },
  feedbackNoneYet: function(d) { return "You do not have any feedback on any lessons from your teacher(s) yet."; },
  feedbackNotSavedWarning: function(d) { return "Are you sure? Your feedback may not be saved."; },
  feedbackNotification: function(d) { return "Your teacher left you feedback"; },
  feedbackNotificationButton: function(d) { return "View feedback"; },
  feedbackNotificationDetails: function(d) { return "You have " + plural(d.numFeedbackLevels, 0, en_us, { one: "1 level", other: number(d.numFeedbackLevels, "numFeedbackLevels") + " levels" }) + " with unread feedback."; },
  feedbackNotificationInstructor: function(d) { return "Your instructor left you feedback"; },
  feedbackNotificationLesson: function(d) { return d.lessonName + " " + d.lessonNum + ": Level " + d.levelNum; },
  feedbackNotificationUnit: function(d) { return d.unitName; },
  feedbackPlaceholder: function(d) { return "Please enter feedback for your student here. This will become visible to the student when you click 'Save and share'."; },
  feedbackPlaceholderNonVerified: function(d) { return "You must be a verified teacher to leave feedback."; },
  feedbackPlaceholderShort: function(d) { return "Write feedback for your student"; },
  feedbackRubricEvaluation: function(d) { return "Evaluation Rubric:"; },
  feedbackSaveError: function(d) { return "There's been an error saving your feedback. Please try to save again."; },
  feedbackShareBannerTitle: function(d) { return "Share your feedback"; },
  feedbackShareBannerDesc: function(d) { return "Help us improve this feature by answering a few short questions."; },
  feedbackShareBannerButton: function(d) { return "Share feedback"; },
  feedbackSubmittedAt: function(d) { return "Feedback submitted at " + d.timestamp; },
  fewerNumberOfBlocks: function(d) { return "Fewer than " + plural(d.numBlocks, 0, en_us, { one: "1 block", other: number(d.numBlocks, "numBlocks") + " blocks" }) + " used!"; },
  fields: function(d) { return "Fields"; },
  fileExplorer: function(d) { return "File explorer"; },
  fileOptions: function(d) { return "File options"; },
  filter: function(d) { return "Filter"; },
  filterBy: function(d) { return "Filter by:"; },
  filterByStudent: function(d) { return "Filter by student:"; },
  filterByStage: function(d) { return "Filter by lesson:"; },
  filterCheckIconTitle: function(d) { return d.filter_label + " filter applied"; },
  finalStage: function(d) { return "Congratulations! You have completed the final puzzle."; },
  finalStageTrophies: function(d) { return "Congratulations! You have completed the final puzzle and won " + plural(d.numTrophies, 0, en_us, { one: "a trophy", other: number(d.numTrophies, "numTrophies") + " trophies" }) + "."; },
  findCourse: function(d) { return "Find a course"; },
  findCourseDescription: function(d) { return "Try new courses to add them to your homepage."; },
  findGuestSpeaker: function(d) { return "Guest Speakers"; },
  findGuestSpeakerDescription: function(d) { return "Invite a local volunteer to visit your classroom or inspire your students remotely via video chat."; },
  findLocalClassHeading: function(d) { return "Find a local computer science class"; },
  findLocalClassSubheading: function(d) { return "Local classes"; },
  findLocalClassDescription: function(d) { return "Find a local after-school program, summer camp, or school to learn in person."; },
  findLocalClassButton: function(d) { return "Find a class"; },
  findYourSchool: function(d) { return "Find your school or provide details if it's not listed."; },
  finish: function(d) { return "Finish"; },
  finishCreatingSections: function(d) { return "Finish creating sections"; },
  fixZoomHelperZoomOut: function(d) { return "Zoom out"; },
  fixZoomHelperPinch: function(d) { return "Pinch in to zoom out."; },
  fixZoomHelperDismiss: function(d) { return "Or tap to dismiss."; },
  forAll: function(d) { return "For all"; },
  formErrorBelow: function(d) { return "Please correct the error below."; },
  formErrorsBelow: function(d) { return "Please correct the errors below."; },
  formServerError: function(d) { return "Something went wrong on our end; please try again later."; },
  forTheStudents: function(d) { return "For the students"; },
  forTheTeachers: function(d) { return "For the teachers"; },
  forTeachersOnly: function(d) { return "For Teachers Only"; },
  freePlayUnchangedFail: function(d) { return "Are you sure you're finished? It looks like you have more work to do on this level. If you choose to continue, this level will be marked as \"In progress\" so you can come back to finish it later."; },
  freePlayUnchangedFailInline: function(d) { return "It looks like you haven't finished working on this level yet. Try adding some more blocks!"; },
  fromWhen: function(d) { return "(From " + d.when + "):"; },
  "function": function(d) { return "Function"; },
  fullCourseAlignment: function(d) { return "Full Course Alignment"; },
  gdprDialogHeaderUpdated: function(d) { return "Do you agree that Code.org may transfer data (including personal data) from your use of this site to the United States for the purpose of hosting and processing such data?"; },
  gdprDialogDetailsUpdated: function(d) { return "Code.org is a US-based not-for-profit website and the laws governing data collection in the U.S. may differ from the laws in your country."; },
  gdprDialogVisitPrivacyPolicy: function(d) { return "Visit Code.org’s Privacy Policy to learn more."; },
  gdprDialogLogout: function(d) { return "Log out"; },
  gdprDialogYes: function(d) { return "Yes"; },
  getBlockDocs: function(d) { return "Get help with this block"; },
  getVerifiedTitle: function(d) { return "Get Verified!"; },
  getVerifiedInfo: function(d) { return "To teach " + d.courseName + ", you must be a verified teacher. To get verified, [fill out this form](verificationFormUrl). For more details, please read this [article on teacher verification](verificationInfoUrl)."; },
  gender: function(d) { return "Gender"; },
  genderMale: function(d) { return "Male"; },
  genderFemale: function(d) { return "Female"; },
  genderNonBinary: function(d) { return "Non-binary"; },
  genderNotListed: function(d) { return "Preferred term not listed"; },
  generateCertificates: function(d) { return "Generate Certificates"; },
  generatedCodeInfo: function(d) { return "Even top universities teach block-based coding (e.g., " + d.berkeleyLink + ", " + d.harvardLink + "). But under the hood, the blocks you have assembled can also be shown in JavaScript, the world's most widely used coding language:"; },
  generatePDFReport: function(d) { return "Generate PDF report"; },
  shortGeneratedCodeInfo: function(d) { return "Even top universities teach block-based coding (e.g., " + d.berkeleyLink + ", " + d.harvardLink + "). The blocks you use can also be shown in JavaScript, the most widely used coding language:"; },
  getDiscountCode: function(d) { return "Get discount code"; },
  getCode: function(d) { return "Get Code"; },
  getCodePrice: function(d) { return "Get Code for " + d.price + " kit"; },
  getGuideContinue: function(d) { return "Get your guide and continue"; },
  getHelp: function(d) { return "Get Help"; },
  goBack: function(d) { return "Go Back"; },
  googleClassroomAttribution: function(d) { return "© Google Inc. used with permission. Google Classroom is a trademark of Google Inc."; },
  gotIt: function(d) { return "Got it!"; },
  goToAssignedVersion: function(d) { return "Go to assigned version"; },
  goToCodeStudio: function(d) { return "Go to Code Studio"; },
  goToDashboard: function(d) { return "Go to dashboard"; },
  goToMyDashboard: function(d) { return "Go to my Dashboard"; },
  goToUnit: function(d) { return "Go to Unit"; },
  grade: function(d) { return "Grade"; },
  gradeLevel: function(d) { return "Grade " + d.number; },
  gradeRange: function(d) { return plural(d.numGrades, 0, en_us, { one: "Grade: " + d.youngestGrade, other: "Grades: " + d.youngestGrade + "-" + d.oldestGrade }); },
  greaterThan: function(d) { return "Greater than"; },
  greaterThanOrEqualTo: function(d) { return "Greater than or equal to"; },
  groups: function(d) { return "Groups"; },
  hashError: function(d) { return "Sorry, '%1' doesn't correspond with any saved program."; },
  help: function(d) { return "Help"; },
  helpTips: function(d) { return "Help & Tips"; },
  hidden: function(d) { return "Hidden"; },
  hiddenAssessmentWarning: function(d) { return "Note: This assessment is hidden for this section; unlocking it will not show it to students yet. To unhide, click the 'Visible' button on the lesson's tile."; },
  hiddenScriptTooltip: function(d) { return "Please select a section before trying to toggle whether or not the unit is visible to your students."; },
  hiddenUnitWarningNotice: function(d) { return "The unit is hidden for this section"; },
  hiddenUnitWarningDetails: function(d) { return "Go to the course overview page to update which units are visible to your students by clicking \"View all units.\""; },
  hide: function(d) { return "Hide"; },
  hideAbilityToViewCode: function(d) { return "Hide ability to view code"; },
  hideAllLessons: function(d) { return "Hide All Lessons"; },
  hideArchivedSections: function(d) { return "Hide archived sections"; },
  hideDetails: function(d) { return "Hide Details"; },
  hideFullList: function(d) { return "Hide full list"; },
  hideGeneratedCode: function(d) { return "Hide Code"; },
  hideHiddenSections: function(d) { return "Hide hidden sections"; },
  hideOlderComments: function(d) { return "Hide older comments"; },
  hidePicture: function(d) { return "Hide picture"; },
  hidePreview: function(d) { return "Hide preview"; },
  hideProjectSharingColumn: function(d) { return "Hide project sharing column"; },
  hideSection: function(d) { return "Hide Section"; },
  hideWords: function(d) { return "Hide words"; },
  hideToolbarHelper: function(d) { return "Press **_A_A** and choose **Hide Toolbar** to see the full screen."; },
  hideToolbox: function(d) { return "(Hide)"; },
  high: function(d) { return "high"; },
  hintHeader: function(d) { return "Here's a tip:"; },
  hintPrompt: function(d) { return "Need help?"; },
  hintPromptInline: function(d) { return "Do you want a hint?"; },
  hintRequest: function(d) { return "See hint"; },
  hintReviewTitle: function(d) { return "Review Your Hints"; },
  hintSelectInstructions: function(d) { return "Instructions and old hints"; },
  hintSelectNewHint: function(d) { return "Get a new hint"; },
  hintTitle: function(d) { return "Hint"; },
  histogram: function(d) { return "Histogram"; },
  homepageHeading: function(d) { return "My Dashboard"; },
  hourOfCodeCertificatesHeading: function(d) { return "Hour of Code Certificates"; },
  howItWorks: function(d) { return "How it Works (View Code)"; },
  howAiWorks: function(d) { return "How AI Works"; },
  howAiWorksDescription: function(d) { return "These lessons supplement the video series. Each lesson is paired with a single video from the series, diving-deeper into the concepts introduced in the videos."; },
  iAgree: function(d) { return "I agree"; },
  iAmA: function(d) { return "I am a ..."; },
  icons: function(d) { return "Icons"; },
  iconKey: function(d) { return "Icon Key"; },
  iconSearchPlaceholder: function(d) { return "Search for an icon..."; },
  ideDescription: function(d) { return "Our labs are integrated development environments (IDE) that were developed specifically to allow our students to create Code.org projects. Blocks are defined per IDE."; },
  ides: function(d) { return "IDEs"; },
  iDontKnow: function(d) { return "I don't know"; },
  ifCode: function(d) { return "if"; },
  ignore: function(d) { return "Ignore"; },
  imageURLInputExample: function(d) { return "Need an example? Paste in the following: https://code.org/images/logo.png"; },
  imageURLInputInvalid: function(d) { return "Please provide a valid URL."; },
  imageURLInputDescription: function(d) { return "Don't have a file downloaded? Provide the link to an image on the web. This works for URLs that end with *.GIF*, *.PNG*, or *.JPG*."; },
  imageURLInputPrompt: function(d) { return "Image URL:"; },
  import: function(d) { return "Import"; },
  importCSV: function(d) { return "Import csv"; },
  importingWithEllipsis: function(d) { return "Importing..."; },
  importFromGoogleClassroom: function(d) { return "Import section from Google Classroom"; },
  importFromClever: function(d) { return "Import section from Clever"; },
  inDevelopment: function(d) { return "In Development"; },
  incorrectAnswer: function(d) { return "Incorrect answer"; },
  incorrectAnswerBody: function(d) { return "The answer you've entered is not correct.  Please try again!"; },
  incorrectAnswerUnmutableBody: function(d) { return "The answer you've entered is not correct."; },
  incorrectSolution: function(d) { return "Incorrect solution"; },
  incorrectSolutionBody: function(d) { return "The solution you've entered is not correct.  Please try again!"; },
  incubator_canvasIntegration_earlyAccess_title: function(d) { return "Canvas Integration Early Access"; },
  incubator_canvasIntegration_earlyAccess_desc: function(d) { return "Try out our one-click Single Sign-On (SSO) and Roster Syncing integrations for Canvas now!"; },
  incubator_canvasIntegration_earlyAccess_signUp_button: function(d) { return "Sign-up now"; },
  incubator_canvasIntegration_earlyAccess_guides_button: function(d) { return "Guides"; },
  incubator_aiRubric_title: function(d) { return "AI Teaching Assistant Pilot"; },
  incubator_aiRubric_desc1: function(d) { return "Check out the AI Teaching Assistant - featured in Education Week"; },
  incubator_aiRubric_descLink: function(d) { return "\"This AI Grading Tool Cut One Teacher's Grading Time in Half. Here's How it Works\"."; },
  incubator_aiRubric_desc2: function(d) { return "Apply for the pilot and get help assessing student projects with our new AI Teaching Assistant. Available in CSD Unit 3 - Interactive Games and Animations."; },
  incubator_aiRubricLearnMore_button: function(d) { return "Learn More"; },
  infinity: function(d) { return "Infinity"; },
  inProgress: function(d) { return "In progress"; },
  inStartBlocksMode: function(d) { return "You are editing start blocks."; },
  inspireStudents: function(d) { return "Inspire students"; },
  instructionalLesson: function(d) { return "Instructional Lesson"; },
  instructionalMinutesPerWeek: function(d) { return "Instructional minutes per week"; },
  instructions: function(d) { return "Instructions"; },
  instructionsWithColon: function(d) { return "Instructions:"; },
  intlAnnouncementSpecial2020Body: function(d) { return "Take a Code Break with us, or see resources for students, parents, and teachers - including videos, fun tutorials, and projects! Most options only available in English."; },
  intlAnnouncementSpecial2020Heading: function(d) { return "More resources for learning at home"; },
  introToAppLabTitle: function(d) { return "Intro to App Lab"; },
  introToAppLabDesc: function(d) { return "Create your own app in JavaScript using either block based programming or text. If you've already done some programming with blocks, take your skills to the next level."; },
  introductionToGameLab: function(d) { return "Introduction to Game Lab"; },
  introductionToGameLabDescription: function(d) { return "Move at your own pace in this introduction to our Game Lab environment as you program animations, interactive art, and games."; },
  introducedCode: function(d) { return "Introduced Code"; },
  invalidCharactersErrorMessage: function(d) { return "There was an error saving your project, please remove any invalid characters to resolve."; },
  invalidDataEntryTypeError: function(d) { return "Value must be boolean, number, string, `undefined`, or `null`. Make sure to include quotes for strings like \"this\". "; },
  invalidRecordTypeError: function(d) { return "You attempted to add a record to the table that included a list or object. The data table can only store booleans, numbers, strings, null, and undefined."; },
  joinASection: function(d) { return "Join a section"; },
  joinedProfessionalLearningSectionsHomepageTitle: function(d) { return "Joined Professional Learning Sections"; },
  joinedProfessionalLearningSectionsHomepageDesc: function(d) { return "Your participant professional learning sections have moved! Find them on the My Professional Learning page."; },
  joinInstructions: function(d) { return "Joining Instructions"; },
  joinSection: function(d) { return "Join section"; },
  joinSectionExplanation: function(d) { return "Ask your students to join your section by going to this link and entering the section code (above): "; },
  joinSectionAsk: function(d) { return "Tell your students to create their own accounts and join your section at: "; },
  joinSectionDescription: function(d) { return "Join a teacher's section by entering their Section Code."; },
  joinSectionPlaceholder: function(d) { return "Section Code (ABCDEF)"; },
  joinSectionTeacherDescription: function(d) { return "Join an instructor's section by entering their Section Code."; },
  joinCommunity: function(d) { return "Visit the forum"; },
  joinText: function(d) { return "join"; },
  joinTextTooltip: function(d) { return "Create a piece of text by joining together multiple items."; },
  joinUs: function(d) { return "Join us"; },
  jsonInCdoBlockly: function(d) { return "Due to a system upgrade, your code could not be loaded. Please use Version History to recover a working version of this project, or to start over."; },
  jump: function(d) { return "jump"; },
  jumpToLesson: function(d) { return "Jump to lesson"; },
  justDidHourOfCode: function(d) { return "I just did the #HourOfCode - check it out! @codeorg"; },
  justDidHourOfCodeDonor: function(d) { return "I just did the #HourOfCode - check it out! (Thanks " + d.donor_twitter + " for supporting @codeorg)"; },
  keep: function(d) { return "Keep"; },
  keepPlaying: function(d) { return "Keep playing"; },
  keepWorking: function(d) { return "Keep working"; },
  keyWithColon: function(d) { return "Key: "; },
  keyConcept: function(d) { return "Key Concept"; },
  keyValueCaption: function(d) { return "Use key/value pairs to store a list of unique keys that map to values."; },
  keyValuePairsHeader: function(d) { return "KEY/VALUE PAIRS"; },
  keyValuePairLink: function(d) { return "Key/value pairs"; },
  kindergarten: function(d) { return "Kindergarten"; },
  landscapeRecommendedCertificates: function(d) { return "It is recommended that you choose **Landscape** when you print the certificates."; },
  languages: function(d) { return "Languages"; },
  lastEdited: function(d) { return "Last Edited"; },
  lastProgress: function(d) { return "Last Progress:"; },
  lastPublished: function(d) { return "Last Published"; },
  lastUpdated: function(d) { return "Last updated"; },
  lastUpdatedByStudent: function(d) { return "Last updated by student"; },
  lastUpdatedTitle: function(d) { return "Last Updated"; },
  lastUpdatedDifferentTeacher: function(d) { return "Updated by another teacher"; },
  lastUpdatedCurrentTeacher: function(d) { return "Updated by you"; },
  seenByStudent: function(d) { return "Seen by student"; },
  lastUpdatedNoTime: function(d) { return "Last Updated:"; },
  lastUpdatedWithTime: function(d) { return "Last updated " + d.time; },
  latestVersion: function(d) { return "Latest Version"; },
  learningForAgesRange: function(d) { return "Learning for ages " + d.youngestAge + "-" + d.oldestAge; },
  learningForAgesPlus: function(d) { return "Learning for ages " + d.age + "+"; },
  learnAboutFacilitatorLeadProfessionalWorkshops: function(d) { return "Learn about facilitator-led professional learning workshops"; },
  learnAboutFacilitatorLeadProfessionalWorkshopsDescription: function(d) { return "Looking for a more hands-on experience? Our facilitator-led workshops are an excellent opportunity to immerse yourself in the curriculum while connecting and sharing insights with educators like you."; },
  learnHow: function(d) { return "Learn how"; },
  learnHowToHost: function(d) { return "Learn how to host your Hour of Code"; },
  learnMore: function(d) { return "Learn more"; },
  learnMoreAilab: function(d) { return "Learn about AI Lab"; },
  learnMoreApplab: function(d) { return "Learn about App Lab"; },
  learnMoreCsJourneys: function(d) { return "Learn about CS Journeys"; },
  learnMoreDescription: function(d) { return "Learn more about " + d.course_name; },
  learnMoreGamelab: function(d) { return "Learn about Game Lab"; },
  learnMoreToolsVideos: function(d) { return "Learn about Video Tools"; },
  learnMoreWeblab: function(d) { return "Learn about Web Lab"; },
  learnMoreWidgets: function(d) { return "Learn about Widgets"; },
  learnMoreWithPeriod: function(d) { return "Learn more."; },
  leaveSection: function(d) { return "Leave section"; },
  less: function(d) { return "Less"; },
  lessThan: function(d) { return "Less than"; },
  lessThanOrEqualTo: function(d) { return "Less than or equal to"; },
  lessAllCaps: function(d) { return "LESS"; },
  lesson: function(d) { return "Lesson"; },
  lessonDuration: function(d) { return "0-1.5 hours"; },
  lessons: function(d) { return "Lessons"; },
  lessonContainsNoLevels: function(d) { return "This lesson contains no levels."; },
  lessonExtras: function(d) { return "Lesson Extras are turned off for the selected section"; },
  lessonExtrasButton: function(d) { return "Go to Teacher Dashboard"; },
  lessonExtrasDetails: function(d) { return "Your students won’t see this page unless you turn them on. You can turn Lesson Extras on by editing section details from your Teacher Dashboard."; },
  lessonName: function(d) { return "Lesson Name"; },
  lessonNumber: function(d) { return "Lesson Number"; },
  lessonNumbered: function(d) { return "Lesson " + d.lessonNumber + ": " + d.lessonName; },
  lessonPlans: function(d) { return "Lesson Plans"; },
  lessonsAttempted: function(d) { return "Lessons attempted in"; },
  lessonsAvailableWithColon: function(d) { return "Lessons available: "; },
  lessonsCompleted: function(d) { return "Lessons completed"; },
  lessonsCompletedWithColon: function(d) { return "Lessons completed: "; },
  lessonResources: function(d) { return "Lesson Resources"; },
  lessonStatus: function(d) { return "Lesson Status"; },
  lessonsIn: function(d) { return "Lessons in"; },
  level: function(d) { return "Level,"; },
  levels: function(d) { return "Levels"; },
  levelDetails: function(d) { return "Level Details"; },
  levelGroupDetailsDialogText: function(d) { return "This level is an assessment or survey with multiple questions. To view this level click \"" + d.buttonText + "\"."; },
  levelHeader: function(d) { return "Level"; },
  levelIncompleteError: function(d) { return "Keep coding! Something's not quite right yet."; },
  levelLastUpdated: function(d) { return "last updated " + d.lastUpdatedDate; },
  levelN: function(d) { return "LEVEL " + d.levelNumber; },
  levelNotStartedWarning: function(d) { return "This student has not started the level."; },
  levelsAttempted: function(d) { return "Levels attempted in"; },
  levelStatus: function(d) { return "Level Status"; },
  levelType: function(d) { return "Level Type"; },
  levelTypes: function(d) { return "Level Types"; },
  library: function(d) { return "Library"; },
  libraryClassImport: function(d) { return "Import library from my class"; },
  libraryCodeError: function(d) { return "We can't publish your library because there is an error in the code. Go look for the square red error indicator and fix the errors."; },
  libraryCodeProfanity: function(d) { return "It appears that your project contains inappropriate language. Please update your project to remove the " + plural(d.profanityCount, 0, en_us, { one: "word", other: "words" }) + " \"" + d.profaneWords + "\"."; },
  libraryCreatorError: function(d) { return "There was an error creating your library. Contact support@code.org to resolve the issue."; },
  libraryDetailsPII: function(d) { return "It appears your library contains personally identifiable information. Please remove the " + plural(d.pIICount, 0, en_us, { one: "word", other: "words" }) + " \"" + d.pIIWords + "\"."; },
  libraryDetailsProfanity: function(d) { return "It appears your library name or description contains inappropriate language. Please update your name or description to remove the " + plural(d.profanityCount, 0, en_us, { one: "word", other: "words" }) + " \"" + d.profaneWords + "\"."; },
  libraryDescriptionPlaceholder: function(d) { return "Write a description of your library"; },
  libraryExportDuplicationFunctionError: function(d) { return "This function cannot be exported because there are multiple functions with this name."; },
  libraryExportId: function(d) { return "Your library/project ID is **" + d.channelId + "**"; },
  libraryExportNoCommentError: function(d) { return "This function cannot be exported until you add a comment to it."; },
  libraryExportSubtitle: function(d) { return "Share functions in your project with others in your class or anyone with the project's ID. Others can import your functions into their projects by going to \"Manage Libraries\" in the gear icon at the top of the toolbox."; },
  libraryExportTitle: function(d) { return "Export Functions as a Library"; },
  libraryFunctionRequirements: function(d) { return "Select the functions you want to add to the library. To help understand what the function is for, you may only export functions that have a comment directly above them in your code."; },
  libraryIdImport: function(d) { return "Import library from ID"; },
  libraryImportError: function(d) { return "An error occurred while importing your library. Please make sure you have a valid ID and an internet connection."; },
  libraryLoadError: function(d) { return "There was an error loading your library. Check to make sure there are no errors when running your program. Then, check your internet connection and try again."; },
  libraryManage: function(d) { return "Manage libraries in this project"; },
  libraryName: function(d) { return "Library Name"; },
  libraryNameRequirements: function(d) { return "Your library's name must start with a capital letter and use only letters, numbers, and underscores."; },
  libraryNoFunctionsError: function(d) { return "We can't publish your library because it doesn't have any functions. Try writing a function to include in your library."; },
  libraryNotShared: function(d) { return "This library isn't assigned to any class sections."; },
  libraryPublishExplanation: function(d) { return "Share this ID with others so they can use your library in their project:"; },
  libraryPublishInvalid: function(d) { return "Your library must include a description and at least one function."; },
  libraryPublishFail: function(d) { return "There was an error publishing your library. Please check your internet connection and try again."; },
  libraryPublishTitle: function(d) { return "Successfully published your library: "; },
  libraryTooLongFail: function(d) { return "Your library is too long. Please make it shorter and try again."; },
  librarySharedSections: function(d) { return "This library is assigned to the following sections:"; },
  libraryUnPublishExplanation: function(d) { return "No one will be able to import or update your library. However, people who have already imported your library will be able to keep using it. You can re-publish your library at any time."; },
  libraryUnPublishFail: function(d) { return "There was an error unpublishing your library. Please check your internet connection and try again."; },
  libraryUnPublishTitle: function(d) { return "Successfully unpublished your library"; },
  licenseInformation: function(d) { return "This work is available under a [Creative Commons License (CC BY-NC-SA 4.0)](" + d.link + ")."; },
  licenseMaterials: function(d) { return "If you are interested in licensing Code.org materials for commercial purposes [contact us](" + d.link + ")."; },
  limited: function(d) { return "Limited"; },
  limitedEvidence: function(d) { return "Limited Evidence"; },
  links: function(d) { return "Links"; },
  linkToImage: function(d) { return "Link to Image"; },
  linux: function(d) { return "Linux"; },
  listVariable: function(d) { return "list"; },
  loading: function(d) { return "Loading..."; },
  loadingLesson: function(d) { return "Loading lesson"; },
  loadingError: function(d) { return "An error occurred. Please reload the page and try again."; },
  locked: function(d) { return "Locked"; },
  lockFollowing: function(d) { return "Lock the following lessons that are currently unlocked:"; },
  lockAssessment: function(d) { return "Lock assessment"; },
  lockAssessmentLong: function(d) { return "Lock assessment when students finish using the \"Lock Settings\" button."; },
  lockoutManageLinkedAccountsPrompt: function(d) { return "Our records indicate that your account requires parental permission to use a personal login and password. Please supply your parent's details below."; },
  lockoutManageLinkedAccountsHeader: function(d) { return "Edit Personal Login Parent Permission"; },
  lockSettings: function(d) { return "Lock Settings"; },
  lockStage: function(d) { return "Lock lesson"; },
  lockStageInstructions: function(d) { return "Once time is up, \"Lock lesson\" to hide questions."; },
  lockWhenDone: function(d) { return "Lock when students finish"; },
  loggedIn: function(d) { return "Logged in: " + d.partner; },
  loginCardForPrint1: function(d) { return "1.) Go to [" + d.directLink + "](" + d.directLink + ") or to [" + d.joinLink + "](" + d.joinLink + ") and type in your 6-letter section code: **" + d.sectionCode + "**"; },
  loginCardForPrint2: function(d) { return "2.) Choose your name: **" + d.studentName + "**"; },
  loginCardForPrint3Picture: function(d) { return "3.) Choose your secret picture:"; },
  loginCardForPrint3Word: function(d) { return "3.) Type in your secret words: **" + d.secretWords + "**"; },
  loginCardForPrint4: function(d) { return "4.) Click the sign in button."; },
  loginCardSectionName: function(d) { return "Section name: **" + d.sectionName + "**"; },
  loginCard_directUrl: function(d) { return "Direct URL:"; },
  loginCard_name: function(d) { return "Name:"; },
  loginCard_instructions: function(d) { return "Visit " + d.url + " and enter " + d.code; },
  loginCard_secretPicture: function(d) { return "Secret Picture:"; },
  loginCard_secretWords: function(d) { return "Secret Words:"; },
  loginCard_sectionName: function(d) { return "Section Name:"; },
  loginExportLink: function(d) { return "Download CSV"; },
  loginExportFilename: function(d) { return "logins"; },
  loginExportHeader_sectionCode: function(d) { return "Section Code"; },
  loginExportHeader_sectionName: function(d) { return "Section Name"; },
  loginExportHeader_sectionLoginType: function(d) { return "Section Login Type"; },
  loginExportHeader_studentName: function(d) { return "Student Name"; },
  loginExportHeader_studentLoginSecret: function(d) { return "Student Login Secret"; },
  loginExportInstructions: function(d) { return "**Teaching remotely?** Download a CSV of student login information so you can do a mail merge or easily copy and paste each student's username and password into emails."; },
  loginInfo: function(d) { return "Login Info"; },
  loginInfo_joinTitle: function(d) { return "Joining Your Section (one-time only)"; },
  loginInfo_joinBody: function(d) { return "If a student has not yet joined your section, please ask them to perform the following steps. Note that they only need to do this once. By joining your section, students will be able see the course assigned to them and you will be able to track the progress of the work they complete while they are signed in."; },
  loginInfo_joinStep1: function(d) { return "Create a Code.org account if they haven’t already done so. They can do this at " + d.url + ". Note that they can either sign up with an email address and password, or sign up through Google, Facebook, or Microsoft by clicking on one of these buttons:"; },
  loginInfo_joinStep1Buttons: function(d) { return "Screenshot of three buttons, reading 'Continue with Google', 'Continue with Facebook', and 'Continue with Microsoft'"; },
  loginInfo_joinStep2: function(d) { return "Sign in to their Code.org account."; },
  loginInfo_joinStep3: function(d) { return "Navigate to " + d.url + " and type in their section code: " + d.code + "."; },
  loginInfo_joinStep4: function(d) { return "Once they press the \"Go\" button, they should be added to your section."; },
  loginInfo_noStudents: function(d) { return "*It looks like you don't have any students in this section! Add some students in the [Manage Students](" + d.url + ") tab for this section.*"; },
  loginInfo_oauthSectionCodes: function(d) { return d.provider + " sections do not have 6-digit section codes, so your student will not need to use a section code to login."; },
  loginInfo_resetTitle: function(d) { return "Resetting Student Passwords"; },
  loginInfo_resetPasswordBody: function(d) { return "If your student created a Code.org account using their email address and password (rather than signing in through Google, Facebook, Microsoft, or Clever), you can reset their password by going to the [Manage Students](" + d.url + ") tab of your section and clicking the \"Reset password\" button in the \"Password\" column."; },
  loginInfoResetSecretPicDesc: function(d) { return "You can reset the picture password for any of your students by going to the [Manage Students](" + d.url + ") tab for the section, clicking the \"Show picture\" button under the \" Picture password\" column, and clicking the \"Reset\" button."; },
  loginInfoResetSecretWordDesc: function(d) { return "You can reset the secret words for any of your students by going to the [Manage Students](" + d.url + ") tab for the section, clicking the \"Show words\" button under the \"Secret words\" column, and clicking the \"Reset\" button."; },
  loginInfo_signingIn: function(d) { return "Signing In"; },
  loginInfo_signingInDescription: function(d) { return "Your students can sign in to their Code.org accounts by going to https://code.org and clicking the \"Sign in\" button in the top right corner."; },
  loginInfo_signingInClever: function(d) { return "Your students should sign in to their Code.org accounts by going to their Clever dashboard and clicking the Code.org logo."; },
  loginInfo_signingInGoogle: function(d) { return "From there, they should choose the \"Continue with Google\" option:"; },
  loginInfo_signinSteps: function(d) { return "Your students can sign in to their Code.org accounts by following these steps:"; },
  loginInfoWordPicMoreBelow: function(d) { return "Students can find all of this information, including their secret " + d.wordOrPicture + ", in the login cards below."; },
  loginInfo_signinStep1: function(d) { return "Go to " + d.joinUrl + "."; },
  loginInfo_signinStep2: function(d) { return "Type in their section code: " + d.code + "."; },
  loginInfo_signinStep3: function(d) { return "Choose their display name."; },
  loginInfo_signinStep4_secretPicture: function(d) { return "Choose their secret picture."; },
  loginInfo_signinStep4_secretWords: function(d) { return "Type in their secret words."; },
  loginInfo_signinStep5: function(d) { return "Click the \"Sign in\" button."; },
  loginInfoLtiSetupHeader: function(d) { return "Set up your class"; },
  loginInfoLtiSetupBody: function(d) { return "To get a class set up with " + d.providerName + ", please do the following:\n1. Ensure your class is set up the way you want it to be in " + d.providerName + " (e.g. the students are rostered in the sections you desire).\n1. Click the \"Sync students & sections\" button above to copy " + d.providerName + " students & sections into Code.org.\n\nYou're finished! If you ever need to add or remove sections & students later, do that in " + d.providerName + " first, then re-sync your classroom again with the \"Sync students & sections\" button above."; },
  loginInfoLtiUpdateHeader: function(d) { return "Update your class"; },
  loginInfoLtiUpdateBody: function(d) { return "In order to update your sections, please do the following:\n1. Ensure your class is set up the way you want it to be in " + d.providerName + "\n1. Click \"Launch Code.org\" or\nClick \"Sync sections & students\" from the Manage Students tab"; },
  loginType: function(d) { return "Login Type"; },
  loginTypeClever: function(d) { return "Clever"; },
  loginTypeCleverButton: function(d) { return "Use Clever"; },
  loginTypeCleverDescription: function(d) { return "Sync your Code.org section with an existing Clever section. Students must log in with their Clever account."; },
  loginTypeCleverDescriptionUpdated: function(d) { return "Import a roster from Clever to create student accounts."; },
  loginTypeEmail: function(d) { return "Email logins"; },
  loginTypeEmailAgeGroup: function(d) { return "Recommended for ages 13+"; },
  loginTypeEmailButton: function(d) { return "Use email logins"; },
  loginTypeEmailDescription: function(d) { return "Each student will create their own Code.org account using their email address (kept 100% private*)."; },
  loginTypeGoogleClassroom: function(d) { return "Google Classroom"; },
  loginTypeGoogleClassroomButton: function(d) { return "Use Google Classroom"; },
  loginTypeGoogleClassroomDescription: function(d) { return "Sync your Code.org section with an existing Google Classroom. Students must log in with their Google account."; },
  loginTypeGoogleClassroomDescriptionUpdated: function(d) { return "Import a roster from one of your Google Classrooms to create student accounts."; },
  loginTypeMicrosoftClassroom: function(d) { return "Microsoft Classroom"; },
  loginTypeMicrosoftClassroomButton: function(d) { return "Use Microsoft Classroom"; },
  loginTypeMicrosoftClassroomDescription: function(d) { return "Sync your Code.org section with an existing Microsoft Classroom."; },
  loginTypeMicrosoftClassroomDescriptionUpdated: function(d) { return "Import a roster from one of your Microsoft Classrooms to create student accounts."; },
  loginTypeOauthLongDescription: function(d) { return "This section is a \"" + d.provider + "\" section type, meaning it is synced with your " + d.provider + " roster. If you want to add or remove students from this section, you must first make sure they are added to or removed from your section in " + d.provider + ", and then click the \"Sync students from " + d.provider + "\" button at the top of this page."; },
  loginTypePersonal: function(d) { return "Personal logins"; },
  loginTypePicture: function(d) { return "Picture logins"; },
  loginTypePictureUpdated: function(d) { return "Picture password"; },
  loginTypePictureAgeGroup: function(d) { return "Recommended for ages 4 - 8"; },
  loginTypePictureDescription: function(d) { return "You will create accounts for your students. Students will log in with a secret picture."; },
  loginTypeSyncButton: function(d) { return "Sync students from " + d.providerName; },
  loginTypeSyncButtonLti: function(d) { return "Sync students & sections from " + d.providerName; },
  loginTypeSyncButton_failure: function(d) { return "An error occurred. Click here to try again."; },
  loginTypeSyncButton_failure_more_info: function(d) { return "An error occurred. Click here for more info."; },
  loginTypeSyncButton_inProgress: function(d) { return "Connecting to " + d.providerName + "..."; },
  loginTypeSyncButton_success: function(d) { return "Sync complete!"; },
  loginTypeSyncButtonDialogHeader: function(d) { return "Sync error"; },
  loginTypeSyncButtonDialogHeaderSub: function(d) { return "Syncing students failed. This is the information we have on the error:"; },
  loginTypeSyncButtonDialogTroubleshooting: function(d) { return "[Troubleshooting common issues with Google Classroom or Clever sections.](" + d.syncFailureSupportArticle + ")"; },
  loginTypeWord: function(d) { return "Word logins"; },
  loginTypeWordUpdated: function(d) { return "Secret words"; },
  loginTypeWordAgeGroup: function(d) { return "Recommended for ages 9 - 12"; },
  loginTypeWordButton: function(d) { return "Use word logins"; },
  loginTypeWordDescription: function(d) { return "You will create accounts for your students. Students will log in with a secret pair of words."; },
  low: function(d) { return "low"; },
  ltiDynamicRegistrationDescription: function(d) { return "Please provide your administrator email address to install Code.org"; },
  ltiDynamicRegistrationSubmit: function(d) { return "Create Registration"; },
  ltiIframeDescription: function(d) { return "Please click the button below to continue to Code.org"; },
  ltiIframeCallToAction: function(d) { return "Continue to Code.org"; },
  ltiIframeRefresh: function(d) { return "Code.org was successfully launched in a new tab. Please refresh the page to access Code.org again."; },
  ltiLinkAccountExistingAccountCardHeaderLabel: function(d) { return "I have an existing Code.org account"; },
  ltiLinkAccountExistingAccountCardContent: function(d) { return "You'll need to sign in to connect your existing Code.org account with " + d.providerName; },
  ltiLinkAccountExistingAccountCardActionLabel: function(d) { return "Sign in with my account"; },
  ltiLinkAccountNewAccountCardHeaderLabel: function(d) { return "I am new to Code.org"; },
  ltiLinkAccountNewAccountCardContent: function(d) { return "You'll need to finish creating an account on Code.org to connect with " + d.providerName; },
  ltiLinkAccountNewAccountCardActionLabel: function(d) { return "Finish creating my account"; },
  ltiLinkAccountWelcomeBannerHeaderLabel: function(d) { return "Welcome to Code.org!"; },
  ltiLinkAccountWelcomeBannerContent: function(d) { return "Looks like this is your first time logging in from " + d.providerName + ", select one of the options below to continue."; },
  ltiSectionSyncButtonDisabledAltText: function(d) { return "Roster sync is disabled. To re-enable, go to your account settings."; },
  ltiSectionSyncDialogCourseLabel: function(d) { return "Course"; },
  ltiSectionSyncDialogDescription: function(d) { return "New to Code.org? A [section](" + d.aboutSectionsUrl + ") is used to manage your classroom and assign curricula. We've identified the following sections & students associated with your course.\n\nNot seeing all of your sections? Make sure you are enrolled as a teacher in each section you want to sync. Learn more [about syncing here](" + d.aboutSyncingUrl + ")."; },
  ltiSectionSyncDialogDescriptionNoChange: function(d) { return "You're all set! Your sections & students are already up to date.\n\nYou can re-sync your sections at any time. Learn more [about syncing here](" + d.aboutSyncingUrl + ")"; },
  ltiSectionSyncDialogError: function(d) { return "We encountered an error when trying to sync with your LMS."; },
  ltiSectionSyncDialogErrorNoIntegration: function(d) { return "LTI Integration not found"; },
  ltiSectionSyncDialogErrorNoSectionFound: function(d) { return "We couldn't find the given section."; },
  ltiSectionSyncDialogErrorWrongContext: function(d) { return "Sorry, looks like you are attempting to sync a course or section from the wrong place. Please launch the Code.org Integration from inside the course or section you would like to sync. Read more about supported placements [here](" + d.url + ")."; },
  ltiSectionSyncDialogHeaderInstructors: function(d) { return "Teachers"; },
  ltiSectionSyncDialogHeaderPrimaryInstructor: function(d) { return "Primary Teacher"; },
  ltiSectionSyncDialogHeaderSectionName: function(d) { return "Section Name"; },
  ltiSectionSyncDialogHeaderStudents: function(d) { return "Students"; },
  ltiSectionSyncDialogStudentCount: function(d) { return d.numberOfStudents + " students"; },
  ltiSectionSyncDialogTitle: function(d) { return "Your sections & students have been synced!"; },
  ltiSectionSyncDisableRosterSyncHeading: function(d) { return "Are you sure you wish to disable Roster Sync?"; },
  ltiSectionSyncDisableRosterSyncButtonLabel: function(d) { return "Turn off Roster Sync"; },
  ltiSectionSyncDisableRosterSyncDescription: function(d) { return "You can re-enable this feature at any time in your account settings."; },
  ltiSectionSyncDisabled: function(d) { return "Sync for LMS rosters is disabled"; },
  ltiSectionSyncEnabled: function(d) { return "Sync for LMS rosters is enabled"; },
  ltiSectionSyncSettingsButtonText: function(d) { return "Update Sync Settings"; },
  ltiSectionSyncSettingsDescription: function(d) { return "Your LMS integration is configured to sync your course rosters every time you launch from your LMS. To disable this feature, please use the toggle below. You can learn more about [roster syncing here](" + d.syncDocsUrl + ")."; },
  ltiSectionSyncSettingsTitle: function(d) { return "LMS Sync Settings"; },
  ltiUpgradeAccountDialogTitle: function(d) { return "Finish creating your teacher account"; },
  ltiUpgradeAccountDialogInvalidEmail: function(d) { return "Please enter a valid e-mail address."; },
  ltiUpgradeAccountDialogDescription: function(d) { return "Looks like you are logging in as a teacher. Please fill out the following information to finish creating your teacher account. Code.org will never rent, sell, or share this information with any third parties."; },
  lti_feedbackBanner_question: function(d) { return "Hi there! Are you enjoying the Code.org Integration for your LMS?"; },
  lti_feedbackBanner_answer_positive: function(d) { return "Yes, definitely!"; },
  lti_feedbackBanner_answer_negative: function(d) { return "No, struggling"; },
  lti_feedbackBanner_shareMore_text: function(d) { return "Are you open to telling us more? Just a few minutes will help us improve!"; },
  lti_feedbackBanner_shareMore_link: function(d) { return "Share More Feedback"; },
  mac: function(d) { return "Mac"; },
  makeACopy: function(d) { return "Make a Copy"; },
  makeMyOwn: function(d) { return "Make my own"; },
  makeNewSounds: function(d) { return "Make new sounds"; },
  makerAppDeprecationNoticeTitle: function(d) { return "The Maker App is now deprecated and no longer supported"; },
  makerAppDeprecationNoticeDetails: function(d) { return "You can now connect your board directly to the Maker Toolkit through your web browser. Therefore, Code.org no longer supports the Maker App. For more information, please refer to"; },
  makerAppPageTitle: function(d) { return "Code.org Maker App"; },
  makerConnectExplanation: function(d) { return "If you're having issues connecting to a Circuit Playground board, click the button below to run some connectivity checks."; },
  makerDeprecationNoticeLinkText: function(d) { return "Deprecating the Maker App and Chrome Serial Extension"; },
  makerNewProjectButton: function(d) { return "Create a project"; },
  makerNewProjectDesc: function(d) { return "Create a new App Lab app with Maker Toolkit enabled"; },
  makerNewProjectTitle: function(d) { return "Create a new app"; },
  makerSetupDeprecationNoticeOldChromeTitle: function(d) { return "Maker Toolkit requires a newer version of Chrome"; },
  makerSetupDeprecationNoticeOldChromeDetails: function(d) { return "The Maker Toolkit does not support your current version of Chrome. Please update to a version greater than or equal to " + d.minChromeVersion + " to continue using the Maker Toolkit. To learn more, please refer to"; },
  makerSetupButton: function(d) { return "Go to setup page"; },
  makerSetupDesc: function(d) { return "Having issues connecting to the Circuit Playground? Visit the setup page to better debug your issue."; },
  makerSetupTitle: function(d) { return "Visit the setup page"; },
  makerViewProjectsButton: function(d) { return "Go to projects"; },
  makerViewProjectsDesc: function(d) { return "Go to your project list to view all of your existing projects and continue working on them."; },
  makerViewProjectsTitle: function(d) { return "View your project list"; },
  makeYourOwnFlappy: function(d) { return "Make Your Own Flappy Game"; },
  manageAIModels: function(d) { return "Manage AI Models"; },
  manageAssets: function(d) { return "Manage Assets"; },
  manageAssetsDefaultMessage: function(d) { return "Your assets will appear here. Click \"" + d.assetUploaderButtonText + "\" to add a new asset for this project."; },
  manageAssetsSoundLibraryMessage: function(d) { return "Go to the \"" + d.soundLibraryButtonText + "\" to find sounds for your project."; },
  manageAssetsSoundUploadMessage: function(d) { return "To upload your own sound, click \"" + d.assetUploaderButtonText + "\" Your uploaded assets will appear here."; },
  manageCodeReviewGroups: function(d) { return "Manage Code Review Groups"; },
  manageLibraries: function(d) { return "Manage Libraries"; },
  manageLinkedAccounts: function(d) { return "Manage Linked Accounts"; },
  manageLinkedAccounts_actions: function(d) { return "Actions"; },
  manageLinkedAccounts_noLoginTooltip: function(d) { return "To make sure you can still sign in to your account, please add a password or another linked account first."; },
  manageLinkedAccounts_clever: function(d) { return "Clever Account"; },
  manageLinkedAccounts_connect: function(d) { return "Connect"; },
  manageLinkedAccounts_disconnect: function(d) { return "Disconnect"; },
  manageLinkedAccounts_emailAddress: function(d) { return "Email Address"; },
  manageLinkedAccounts_facebook: function(d) { return "Facebook Account"; },
  manageLinkedAccounts_google_oauth2: function(d) { return "Google Account"; },
  manageLinkedAccounts_loginType: function(d) { return "Login Type"; },
  manageLinkedAccounts_microsoft: function(d) { return "Microsoft Account"; },
  manageLinkedAccounts_notConnected: function(d) { return "Not Connected"; },
  manageLinkedAccounts_rosteredSectionTooltip: function(d) { return "You cannot disconnect from this linked account because it is tied to one of your sections."; },
  manageLinkedAccounts_makerAuthError: function(d) { return "This action cannot be done from the Maker App. Please return to your default browser and try again."; },
  manageStudents: function(d) { return "Manage Students"; },
  manageStudentsAriaLabel: function(d) { return d.numStudents + " students in this section. Manage students"; },
  manageStudentsNotificationFailure: function(d) { return "Something went wrong."; },
  manageStudentsNotificationCannotAdd: function(d) { return "You could not add " + plural(d.numStudents, 0, en_us, { one: "1 student", other: number(d.numStudents, "numStudents") + " students" }) + " to your section. Please try again or refresh the page."; },
  manageStudentsNotificationCannotVerb: function(d) { return "The " + plural(d.numStudents, 0, en_us, { one: "student", other: "students" }) + " couldn't be " + select(d.verb, { copy: "copied", move: "moved", other: "added" }) + " to this section"; },
  manageStudentsNotificationFull: function(d) { return "You can’t have more than " + d.studentLimit + " students in a section. Section " + d.sectionCode + " already has " + d.currentStudentCount + " students in it."; },
  manageStudentsNotificationWillBecomeFull: function(d) { return "You can’t have more than " + d.studentLimit + " students in a section. Section " + d.sectionCode + " already has " + d.currentStudentCount + " students in it, so you only can add up to " + d.availableSpace + " more student(s) to it."; },
  contactSupportFullSection: function(d) { return "Questions about this limit? [Contact support](" + d.supportLink + ")"; },
  manageStudentsNotificationAddSuccess: function(d) { return "You added " + plural(d.numStudents, 0, en_us, { one: "1 student", other: number(d.numStudents, "numStudents") + " students" }) + " to your section."; },
  manageStudentsNotificationSuccess: function(d) { return "Success!"; },
  manageStudentsNotificationLocked: function(d) { return "You have locked this section"; },
  manageStudentsNotificationLockedDetails: function(d) { return "Students cannot join this section using the section code. You can still add students " + select(d.loginType, { google_classroom: "by syncing with Google Classroom", clever: "by syncing with Clever", email: "manually by moving or copying them from another section", other: "manually on the Manage Students tab" }) + ". You can unlock this section by clicking \"Edit Section Details\"."; },
  manageYourLibraries: function(d) { return "Manage Your Libraries"; },
  map: function(d) { return "Map"; },
  mapsToCSTAStandards: function(d) { return "Maps to [CSTA Standards](" + d.cstaLink + ")"; },
  markedAsKeepWorking: function(d) { return "Marked as 'keep working'"; },
  marketingInitiativeCSA: function(d) { return "AP CSA"; },
  marketingInitiativeCSC: function(d) { return "CS Connections"; },
  marketingInitiativeCSD: function(d) { return "CS Discoveries"; },
  marketingInitiativeCSF: function(d) { return "CS Fundamentals"; },
  marketingInitiativeCSP: function(d) { return "CS Principles"; },
  marketingInitiativeHOC: function(d) { return "Hour of Code"; },
  matchQuestionsOverview: function(d) { return "Match questions overview (" + d.numSubmissions + " / " + d.numStudents + " students)"; },
  matchStudentOverview: function(d) { return "Match questions overview (" + d.studentName + ")"; },
  medium: function(d) { return "medium"; },
  methodDetails: function(d) { return "Method Details"; },
  methods: function(d) { return "Methods"; },
  middleCenter: function(d) { return "middle center"; },
  middleLeft: function(d) { return "middle left"; },
  middleRight: function(d) { return "middle right"; },
  migrateToMutiAuth_buttonText_v2: function(d) { return "Enable"; },
  migrateToMultiAuth_details_v2: function(d) { return "You can enable single sign-on with additional identity providers like Google, Microsoft, Facebook, and Clever."; },
  migrateToMultiAuth_notice_v2: function(d) { return "Connect other accounts"; },
  minecraft2017Button: function(d) { return "Go to Minecraft Education"; },
  minecraft2017Desc: function(d) { return "Take your code to Minecraft: Education Edition! Copy or write down your share link."; },
  minecraft2017Title: function(d) { return "Keep Coding in Minecraft"; },
  minecraftAquaticButton: function(d) { return "Go to Minecraft Education"; },
  minecraftAquaticDesc: function(d) { return "You can learn and practice coding in Minecraft with Code Builder."; },
  minecraftAquaticTitle: function(d) { return "Minecraft Education"; },
  minecraftAquaticPromoButton: function(d) { return "Start"; },
  minecraftAquaticPromoDesc: function(d) { return "Minecraft is back for the Hour of Code with a brand new activity! Use your creativity and problem solving skills to explore and build underwater worlds with code."; },
  minecraftAquaticPromoTitle: function(d) { return "Minecraft: Voyage Aquatic"; },
  minutes: function(d) { return "minutes"; },
  minutesLabel: function(d) { return d.number + " minutes"; },
  missingRecommendedBlocksErrorMsg: function(d) { return "Not quite. Try using a block you aren’t using yet."; },
  missingRequiredBlocksErrorMsg: function(d) { return "Not quite. You have to use a block you aren’t using yet."; },
  missionStatement: function(d) { return "**Code.org®** is a nonprofit dedicated to expanding access to computer science in schools and increasing participation by women and underrepresented minorities. Our vision is that every student in every school has the opportunity to learn computer science, just like biology, chemistry or algebra. Code.org provides the leading curriculum for K-12 computer science in the largest school districts in the United States and Code.org also organizes the annual Hour of Code campaign which has engaged 15% of all students in the world. Code.org is supported by generous donors including Amazon, Facebook, Google, the Infosys Foundation, Microsoft, and many more."; },
  modules: function(d) { return "Modules"; },
  month: function(d) { return "Month"; },
  monthDuration: function(d) { return "4-16 hours"; },
  more: function(d) { return "More"; },
  moreAllCaps: function(d) { return "MORE"; },
  moreDetails: function(d) { return "More Details"; },
  moreInfo: function(d) { return "More info."; },
  moveStudents: function(d) { return "Move students"; },
  moveStudentsConfirm: function(d) { return "No, I want to move student(s) to be in the new section only."; },
  movingStudents: function(d) { return "Moving students..."; },
  moveToSection: function(d) { return "Move to section"; },
  multiple: function(d) { return "Multiple"; },
  multipleChoiceQuestionsOverview: function(d) { return "Multiple choice questions overview (" + d.numSubmissions + " / " + d.numStudents + " students)"; },
  multipleChoiceStudentOverview: function(d) { return "Multiple choice questions overview (" + d.studentName + ")"; },
  myCourses: function(d) { return "My Courses"; },
  myFiles: function(d) { return "My Files"; },
  myLibraries: function(d) { return "My Libraries"; },
  myProjects: function(d) { return "My Projects"; },
  myProfessionalLearningCourses: function(d) { return "My Professional Learning Courses"; },
  myProfessionalLearningCoursesHomepageDesc: function(d) { return "You can now see the professional learning courses you've started or completed on the Professional Learning page."; },
  myProfessionalLearningCoursesHomepageButton: function(d) { return "View my Professional Learning courses"; },
  myProfessionalLearningSectionsHomepageDesc: function(d) { return "Your instructor professional learning sections have moved! Find them on the My Professional Learning page."; },
  myProfessionalLearningSectionsHomepageButton: function(d) { return "View my Professional Learning sections"; },
  name: function(d) { return "Name"; },
  nameRequired: function(d) { return "Student name (required)"; },
  nameFailureDialogTitle: function(d) { return "Unable to rename project"; },
  nameFailureDialogBody: function(d) { return "It appears that your project name contains inappropriate language or personally identifiable information like your address, email, or phone number. Please pick a new name that doesn't contain \"" + d.text + ".\""; },
  needsApproval: function(d) { return "Needs approval"; },
  needsFeedback: function(d) { return "Needs feedback"; },
  needsReview: function(d) { return "Needs review"; },
  nestedForSameVariable: function(d) { return "You're using the same variable inside two or more nested loops. Use unique variable names to avoid infinite loops."; },
  newExclame: function(d) { return "New!"; },
  newAnimation: function(d) { return "new animation"; },
  newBackground: function(d) { return "New Background"; },
  newCostume: function(d) { return "New Costume"; },
  newPassword: function(d) { return "new password"; },
  newSection: function(d) { return "New section"; },
  newSectionUpdated: function(d) { return "Create a new section"; },
  newSectionEllipsis: function(d) { return "New section..."; },
  newSectionAdd: function(d) { return "Add a new classroom section"; },
  newSectionCreate: function(d) { return "Create a new section"; },
  newSectionPlAdd: function(d) { return "Add a new professional learning section"; },
  newSectionMyPlAdd: function(d) { return "Create a new professional section to start managing professional learning."; },
  next: function(d) { return "Next"; },
  nextLevel: function(d) { return "Congratulations! You completed Puzzle " + d.puzzleNumber + "."; },
  nextLevelLink: function(d) { return "Next level"; },
  nextLevelTrophies: function(d) { return "Congratulations! You completed Puzzle " + d.puzzleNumber + " and won " + plural(d.numTrophies, 0, en_us, { one: "a trophy", other: number(d.numTrophies, "numTrophies") + " trophies" }) + "."; },
  nextPuzzle: function(d) { return "Next puzzle"; },
  nextStage: function(d) { return "Congratulations! You completed " + d.stageName + "."; },
  nextStageTrophies: function(d) { return "Congratulations! You completed " + d.stageName + " and won " + plural(d.numTrophies, 0, en_us, { one: "a trophy", other: number(d.numTrophies, "numTrophies") + " trophies" }) + "."; },
  no: function(d) { return "No"; },
  pdNotApplicable: function(d) { return "Not applicable"; },
  noAssessments: function(d) { return "It looks like there are no multi-question assessments or surveys in this course. Instead, you can measure the students’ progress using the 'Progress' tab. If you are interested in giving your students additional assessments, you can find recommended questions and areas in the lesson plans."; },
  noCertificateReturnToCourse: function(d) { return "You must complete the course to earn a certificate. [Return to the course](" + d.curriculumUrl + ") and keep working."; },
  noClassroomsFound: function(d) { return "No classrooms found."; },
  noColumnsInTable: function(d) { return "We couldn't find any columns in \"" + d.table + "\". Make sure this table is imported in your project."; },
  noCurriculumAssigned: function(d) { return "You haven't assigned curriculum to this class section yet. Assign curriculum to start tracking your class's progress."; },
  noCurriculumSearchResultsBody: function(d) { return "None of our curricula match your exact criteria, but many of our offerings are flexible! Try broadening your search or consider building a custom curriculum from our more modular options (e.g. teaching two quarter-long curricula for a semester)."; },
  noCurriculumSearchResultsHeader: function(d) { return "No matching curricula"; },
  noEvidence: function(d) { return "No Evidence"; },
  noIconsFound: function(d) { return "No icons found"; },
  noLevelPreviewAvailable: function(d) { return "No preview is available for this level. To view this level click \"" + d.buttonText + "\"."; },
  noLibraries: function(d) { return "You currently have no libraries."; },
  noLibrariesInProject: function(d) { return "You have no libraries in your project. Try adding one from your class list or from an ID."; },
  noLibrariesInClass: function(d) { return "No one in your class has published a library. Try adding one from an ID."; },
  noMenuItemsAvailable: function(d) { return "No menu items available."; },
  nominateATeacher: function(d) { return "Nominate a Teacher"; },
  noOnlineWork: function(d) { return "No online work"; },
  noSchoolSetting: function(d) { return "I don't teach CS in a school setting"; },
  noStudentsInSection: function(d) { return "There are no other students in this section."; },
  exceededPairProgrammingMax: function(d) { return "You cannot pair with more than 4 people."; },
  noPersonalProjects: function(d) { return "You currently have no projects. Click on one of the buttons above to start a project."; },
  noProgress: function(d) { return "No progress"; },
  noProgressSection: function(d) { return "Your section doesn't have any student progress! Click **Edit Section Details** above to assign a course to your section."; },
  noSavedProjects: function(d) { return "You don't have any saved projects. [Sign in or create an account](" + d.signInUrl + ") to save your project."; },
  noSectionDialogHeader: function(d) { return "Why don't " + d.classroom + " sections have Section Codes?"; },
  noSectionDialogBody: function(d) { return d.classroom + " sections' lists of students reflect your externally-managed " + d.classroom + " roster. In order to add or remove a student from this section, please first add or remove them from the corresponding classroom in " + d.classroom + ", then click the \"Sync Students from " + d.classroom + "\" button in the top left corner of the Manage Students tab."; },
  noTablesInProject: function(d) { return "You have no tables in your project. Try adding one from the Data Library."; },
  noThanksMaybeLater: function(d) { return "No thanks, maybe later"; },
  none: function(d) { return "None"; },
  noneOfTheAbove: function(d) { return "None of the Above"; },
  note: function(d) { return "*Note:"; },
  notInRightPlace: function(d) { return "It looks like you're not in the right place"; },
  notAnswered: function(d) { return "Not Answered"; },
  notApplicable: function(d) { return "N/A"; },
  notCompleted: function(d) { return "Not completed"; },
  notSaved: function(d) { return "Not saved"; },
  notSignedInHeader: function(d) { return "You are not signed in"; },
  notSignedInBody: function(d) { return "You don't need an account to work on this lesson, but if you want to save your work, remember to sign in or create an account before you get started."; },
  notStarted: function(d) { return "Not started"; },
  nPoints: function(d) { return plural(d.numPoints, 0, en_us, { one: "1 point", other: number(d.numPoints, "numPoints") + " points" }); },
  numAttempts: function(d) { return plural(d.numAttempts, 0, en_us, { one: "1 attempt", other: number(d.numAttempts, "numAttempts") + " attempts" }); },
  numCurriculaAvailableInLanguage: function(d) { return plural(d.numCurricula, 0, en_us, { one: "1 curriculum", other: number(d.numCurricula, "numCurricula") + " curricula" }) + " available in " + d.language; },
  numMatchCorrect: function(d) { return "# match correct"; },
  numMatch: function(d) { return "# match"; },
  numMultipleChoiceCorrect: function(d) { return "# multiple choice correct"; },
  numMultipleChoice: function(d) { return "# multiple choice"; },
  numBlocksNeeded: function(d) { return "Congratulations! You completed Puzzle " + d.puzzleNumber + ". (However, you could have used only " + plural(d.numBlocks, 0, en_us, { one: "1 block", other: number(d.numBlocks, "numBlocks") + " blocks" }) + ".)"; },
  numBlocksUsedLabel: function(d) { return "Blocks"; },
  numLanguages: function(d) { return d.numLanguages + " Languages"; },
  numLinesOfCodeWritten: function(d) { return "You just wrote " + plural(d.numLines, 0, en_us, { one: "1 line", other: number(d.numLines, "numLines") + " lines" }) + " of code!"; },
  objectives: function(d) { return "Objectives"; },
  objectivesSubheading: function(d) { return "Students will be able to:"; },
  of: function(d) { return "of"; },
  offline: function(d) { return "Offline"; },
  ok: function(d) { return "OK"; },
  okay: function(d) { return "Okay"; },
  oldVersionWarning: function(d) { return "This is not the latest version."; },
  online: function(d) { return "Online"; },
  onlyShowCurriculaInLanguage: function(d) { return "Only show curricula available in " + d.language; },
  openWorkspace: function(d) { return "How It Works"; },
  or: function(d) { return "or"; },
  option: function(d) { return "Option"; },
  optional: function(d) { return "(optional)"; },
  orientationLock: function(d) { return "Turn off orientation lock in device settings."; },
  onetimeHintPromptMessage: function(d) { return "Click the lightbulb for a hint"; },
  onetimeHintPromptTitle: function(d) { return "Feeling Stuck?"; },
  other: function(d) { return "Other"; },
  otherLessonsInUnit: function(d) { return "Other Lessons in this Unit"; },
  otherStudents: function(d) { return d.count + " other student(s)"; },
  otherTeacher: function(d) { return "Other teacher"; },
  outdatedCourseWarningTitle: function(d) { return "This course is outdated!"; },
  outdatedCourseWarningDescCourses1To4: function(d) { return "Use [CS Fundamentals Courses A-F](" + d.csFundCourseLink + ") instead. These teach the same concepts more effectively, are actively supported, and have full translation into over 30 languages."; },
  outdatedCourseWarningDescCoursesAccelCourse: function(d) { return "We recommend our [Express course](" + d.expressCourseLink + ") instead, which teaches the same concepts more effectively, is actively supported, and has full translation into over 30 languages."; },
  overloads: function(d) { return "Overloads"; },
  overview: function(d) { return "Overview"; },
  paginationLabel: function(d) { return "Page:"; },
  pairingNavigatorWarning: function(d) { return "This puzzle was completed while pairing with " + d.driver + "."; },
  pairingNavigatorLink: function(d) { return "Click here to view the solution you created as a team."; },
  pairingNavigatorUnknownDriver: function(d) { return "This puzzle was completed while pairing with another student but the code you wrote together is no longer available. The other student may have deleted their Code.org account or reset their progress on this level."; },
  pairingUnknownPartnerName: function(d) { return "n/a"; },
  pairProgramming: function(d) { return "Pair Programming"; },
  pairProgrammingChosePartners: function(d) { return "Choose partners:"; },
  pairProgrammingStop: function(d) { return "Stop Pair Programming"; },
  pairProgrammingWith: function(d) { return "You are Pair Programming with:"; },
  parametersHeader: function(d) { return "Parameters"; },
  parent: function(d) { return "Parent"; },
  parents: function(d) { return "Parents"; },
  parentsAndStudents: function(d) { return "Parents and Students"; },
  parentLetterClever1: function(d) { return "Have your students log in to their Clever account at [www.clever.com](" + d.cleverLink + ") (click \"Sign in as a student\" at the top right)"; },
  parentLetterClever2: function(d) { return "Click on the Code.org logo on the Clever dashboard. The logo looks like this:"; },
  parentLetterClosing: function(d) { return "Please let me know if you have any questions and thank you for your continued support of your child and of our classroom!"; },
  parentLetterForgotPassword: function(d) { return "If your student does not remember their password, please email me and I will provide it"; },
  parentLetterForgotPasswordEmail: function(d) { return "If your student does not remember their password, they can reset it from the sign in screen"; },
  parentLetterForgotPicturePassword: function(d) { return "If your student does not remember their picture password, please email me and I will provide it"; },
  parentLetterGoogle1: function(d) { return "Choose 'Continue with Google'"; },
  parentLetterGoogle2: function(d) { return "Sign in via the Google sign-in dialog"; },
  parentLetterHello: function(d) { return "Hello!"; },
  parentLetterIntro: function(d) { return "In my class, " + d.studentName + " is learning computer science on [Code.org](" + d.homeLink + "), a fun, creative platform for learning computer science and basic coding to create interactive animations, games, or apps. Your interest in what your child is learning is critical, and Code.org makes it easy to stay involved."; },
  parentLetterLoginType: function(d) { return "Our class uses **" + d.loginTypeName + "** to sign in. To have your student sign in to Code.org at home, do the following:"; },
  parentLetterPicturePassword: function(d) { return "Click on their picture password and then click 'Sign in'"; },
  parentLetterPicturePasswordImg: function(d) { return "Picture passoword image for your student."; },
  parentLetterSectionSignIn: function(d) { return "Go to [" + d.sectionLink + "](" + d.sectionLink + ") and click on their name"; },
  parentLetterSecretWords: function(d) { return "Type in their secret words " + d.secretWords + " and then click 'Sign in'"; },
  parentLetterSignIn: function(d) { return "Go to [" + d.studioLink + "](" + d.studioLink + ") and click 'Sign In'"; },
  parentLetterSignInEmail: function(d) { return "Have them enter their email and password and then click 'Sign In'"; },
  parentLetterStep1: function(d) { return "Step 1 - Encourage your child, show interest in computer science"; },
  parentLetterStep1Details: function(d) { return "One of the best ways is to ask your child to explain what they’re learning and show you a project they are proud of, [see details](" + d.engagementLink + "). Or watch one of these [videos](" + d.videosLink + ") together."; },
  parentLetterStep2: function(d) { return "Step 2 - Get your child set up to use Code.org at home"; },
  parentLetterStep2Details: function(d) { return "At the top of their homepage, " + d.studentName + " can continue the course they are doing with their classroom at school. They can also create their own [games or artwork in the Project Gallery](" + d.projectsLink + ") or check out [code.org/athome](" + d.atHomeLink + ") for ideas for things to work on at home."; },
  parentLetterStep3: function(d) { return "Step 3 - Connect your email to your student's account"; },
  parentLetterStep3Details: function(d) { return "Keep up to date with what your student is working on and receive updates from Code.org. Have your child sign in to Code.org and then enter your email in Account Settings or [click here](" + d.accountEditLink + ")."; },
  parentLetterStudentPrivacy: function(d) { return "Code.org's commitment to student privacy"; },
  parentLetterStudentPrivacyDetails: function(d) { return "Code.org assigns utmost importance to student safety and security. As a not-for-profit organization, they are transparent about the limited data they collect and how they use it.  They do not sell data or exploit it for financial gain. They do not sell ads. Code.org has signed the [Student Privacy Pledge](" + d.pledgeLink + ") and their privacy practices are highly rated by [Common Sense Media](" + d.commonSenseLink + "). You can find further details by viewing Code.org's [Privacy Policy](" + d.privacyPolicyLink + ")."; },
  parentLetterWhy: function(d) { return "Why computer science"; },
  parentLetterWhyDetails: function(d) { return "[Six different studies show](" + d.researchLink + "): children who study computer science perform better in other subjects, excel at problem solving, and are 17% more likely to attend college. Computer science teaches students critical thinking, problem solving, and digital citizenship, and benefits all students, no matter what opportunities they pursue in the future. And learning to make interactive animations, code-art, games, and apps on Code.org encourages creativity and makes learning fun."; },
  participantTypeStudentDescription: function(d) { return "Section For Students"; },
  participantTypeStudentTitle: function(d) { return "Students"; },
  participantTypeTeacherDescription: function(d) { return "Section For Teachers"; },
  participantTypeTeacherTitle: function(d) { return "Teachers"; },
  participantTypeFacilitatorDescription: function(d) { return "Section For Facilitators"; },
  participantTypeFacilitatorTitle: function(d) { return "Facilitators"; },
  participants: function(d) { return "Participants"; },
  partner: function(d) { return "Partner: " + d.partner; },
  password: function(d) { return "Password"; },
  passwordConfirmation: function(d) { return "Password confirmation"; },
  passwordTooShort: function(d) { return "Password too short (minimum is 6 characters)"; },
  passwordUpdateFailed: function(d) { return "Password update failed. Please try again."; },
  passwordsMustBeSixChars: function(d) { return "Passwords must be six (6) characters or longer."; },
  passwordsMustMatch: function(d) { return "Passwords must match"; },
  paste: function(d) { return "Paste"; },
  pause: function(d) { return "Break"; },
  percentCorrect: function(d) { return "% correct"; },
  perfect: function(d) { return "perfect"; },
  perfectDescription: function(d) { return "PERFECT!"; },
  performanceLevel: function(d) { return "Performance Level"; },
  performanceLevelDetails: function(d) { return "Performance Level Details"; },
  personalLoginDialog_body1: function(d) { return "You have " + d.numStudents + " or more students that log into Code.org via secret words, secret pictures, or a third-party service and might not have set up a personal login. "; },
  personalLoginDialog_body2: function(d) { return "Deleting your account may also delete the accounts of many of those students unless they create a personal login for their " + plural(d.numStudents, 0, en_us, { one: "account", other: "accounts" }) + " first:"; },
  personalLoginDialog_body3: function(d) { return "Please give your students a chance to keep using their Code.org accounts by "; },
  personalLoginDialog_body4: function(d) { return "sending these instructions home with them "; },
  personalLoginDialog_body5: function(d) { return "on how they can create a personal login. Give them at least a few days to follow these instructions BEFORE you delete your account."; },
  personalLoginDialog_body6: function(d) { return "If you have already done this, click “Next” to continue with account deletion."; },
  personalLoginDialog_button: function(d) { return "Next"; },
  petitionMessage: function(d) { return "Every student in every school should have the opportunity to learn computer science"; },
  petitionSignMessage: function(d) { return "If you agree, sign your name and join our mailing list."; },
  play: function(d) { return "play"; },
  playzoneArtistDescription: function(d) { return "Draw cool pictures and designs with the Artist!"; },
  playzoneArtistTitle: function(d) { return "New Drawing"; },
  playzoneContinueButton: function(d) { return "Go on to the next Lesson"; },
  playzonePlaylabDescription: function(d) { return "Create a story or make a game with Play Lab!"; },
  playzonePlaylabTitle: function(d) { return "New App"; },
  playzonePrimaryHeader: function(d) { return "Congratulations! You finished " + d.stageName + "!"; },
  playzoneProjectsDescription: function(d) { return "Revisit one of your existing projects."; },
  playzoneProjectsTitle: function(d) { return "Open a Project"; },
  playzoneSecondaryHeader: function(d) { return "Ask your teacher what to do next"; },
  plLandingDescription: function(d) { return "Thank you for completing a " + d.course + " workshop. Please complete this survey about your experience to help us improve future professional development workshops!"; },
  plLandingSubheading: function(d) { return "Submit your feedback"; },
  plLandingStartSurvey: function(d) { return "Start survey"; },
  plLandingTabFacilitatorCenter: function(d) { return "Facilitator Center"; },
  plLandingTabRPCenter: function(d) { return "Regional Partner Center"; },
  plLandingTabWorkshopOrganizerCenter: function(d) { return "Workshop Organizer Center"; },
  plLandingTabInstructorCenter: function(d) { return "Instructor Center"; },
  plLandingSelfPacedProgressHeading: function(d) { return "Self-Paced Professional Learning Courses"; },
  plLandingGettingStartedHeading: function(d) { return "Getting started with Professional Learning"; },
  plLandingGettingStartedSubHeading: function(d) { return "Code.org Professional Learning"; },
  plLandingGettingStartedDescription: function(d) { return "Help today's students become tomorrow's superheroes with professional learning that meets your needs. We offer different kinds of professional learning to meet your needs."; },
  plLandingGettingStartedButton: function(d) { return "Learn about professional learning"; },
  plLandingRecommendedHeading: function(d) { return "Recommended for you"; },
  plSectionsFacilitatorResources: function(d) { return "Facilitator Resources"; },
  plSectionsFacilitatorResourcesTitle: function(d) { return d.course_name + " Facilitator Landing Page"; },
  plSectionsFacilitatorResourcesDesc: function(d) { return "Resources for running " + d.course_name + " workshops"; },
  plSectionsFacilitatorResourcesButton: function(d) { return "View " + d.course_name + " Facilitator Landing page"; },
  plSectionsOnboardingTitle: function(d) { return "Facilitator Onboarding"; },
  plSectionsOnboardingDesc: function(d) { return "Onboarding courses for new facilitators"; },
  plSectionsOnboardingButton: function(d) { return "View facilitator onboarding"; },
  plSectionsRegionalPartnerResources: function(d) { return "Regional Partner Resources"; },
  plSectionsRegionalPartnerApplicationTitle: function(d) { return "Application Dashboard"; },
  plSectionsRegionalPartnerApplicationDesc: function(d) { return "Manage applications for the current application season."; },
  plSectionsRegionalPartnerApplicationButton: function(d) { return "Manage applications"; },
  plSectionsRegionalPartnerPlaybookTitle: function(d) { return "Regional Partner Playbook"; },
  plSectionsRegionalPartnerPlaybookDesc: function(d) { return "Find all regional partner resources here."; },
  plSectionsRegionalPartnerPlaybookButton: function(d) { return "View playbook"; },
  plSectionsWorkshopResources: function(d) { return "Workshop Resources"; },
  plSectionsWorkshopTitle: function(d) { return "Workshop Dashboard"; },
  plSectionsWorkshopDesc: function(d) { return "Manage upcoming, in progress, and past workshops."; },
  plSectionsWorkshopButton: function(d) { return "View workshop dashboard"; },
  plLandingStaticPLMidHighOverline: function(d) { return "Facilitator-led"; },
  plLandingStaticPLMidHighHeading: function(d) { return "6-12 Teacher Workshops"; },
  plLandingStaticPLMidHighDesc: function(d) { return "Our engaging workshops are for new and experienced computer science teachers! In this program, you will explore the curriculum and learning tools, experience the course as a teacher and a learner and collaborate with fellow teachers."; },
  plLandingStaticPLMidHighButton: function(d) { return "Learn more about workshops"; },
  plLandingStaticPLSelfPacedOverline: function(d) { return "Self-paced / Online"; },
  plLandingStaticPLSelfPacedHeading: function(d) { return "Self-Paced Professional Learning"; },
  plLandingStaticPLSelfPacedDesc: function(d) { return "Through reading, viewing videos, completing interactive puzzles, and reflecting on your learning, you will develop your own understanding while preparing to teach computer science in your classroom."; },
  plLandingStaticPLSelfPacedButton: function(d) { return "Start professional learning courses"; },
  plSectionsJoined: function(d) { return "Professional Learning Sections I've Joined"; },
  plSectionsTitle: function(d) { return "Professional Learning Sections"; },
  plSectionsInstructorTitle: function(d) { return "Instructor Professional Learning Sections"; },
  plugged: function(d) { return "Plugged"; },
  pluggedLessonsNote: function(d) { return "*Online or ‘plugged’ lessons are automatically marked as complete on your behalf once 80% of your class has completed 60% of the available lesson."; },
  picturePassword: function(d) { return "Picture password"; },
  policyCompliance_parentalPermissionBanner_title: function(d) { return "Heads up!"; },
  policyCompliance_parentalPermissionBanner_desc: function(d) { return "You will need your parent or guardian’s permission by " + d.lockoutDate + " to keep using your Code.org account."; },
  policyCompliance_parentalPermissionBanner_button: function(d) { return "Get permission"; },
  policyCompliance_parentalPermissionModal_newRequestForm_title: function(d) { return "Heads up! Your account may soon be locked."; },
  policyCompliance_parentalPermissionModal_newRequestForm_text1: function(d) { return "Starting on " + d.lockoutDate + ", **you will need your parent or guardian’s permission to keep your personal login** with Code.org."; },
  policyCompliance_parentalPermissionModal_newRequestForm_text2: function(d) { return "To avoid having your account locked, please share your parent or guardian’s email address so they can grant you permission."; },
  policyCompliance_parentalPermissionModal_updateRequestForm_title: function(d) { return "Thanks! We’ve contacted your parent or guardian."; },
  policyCompliance_parentalPermissionModal_updateRequestForm_text1: function(d) { return "Didn’t receive anything? Update your parent or guardian’s email below or send another request. Note, your account will be locked if we do not receive your parent/guardian’s permission by " + d.lockoutDate + "."; },
  policyCompliance_parentalPermissionModal_updateRequestForm_text2: function(d) { return "You can also provide this email address at any time from [your profile](" + d.profileUrl + ")."; },
  policyCompliance_parentalPermissionModal_lastEmailSentAt: function(d) { return "Last email sent at " + d.sendingTime; },
  policyViolation: function(d) { return "This project contains information that cannot be shared with others. Please contact the app owner to fix the contents of their app."; },
  positionAbsoluteDown: function(d) { return "down"; },
  positionAbsoluteOver: function(d) { return "over"; },
  positionAbsoluteUp: function(d) { return "up"; },
  pre2017MinecraftButton: function(d) { return "Go to Minecraft Education"; },
  pre2017MinecraftDesc: function(d) { return "Continue learning with Minecraft."; },
  pre2017MinecraftTitle: function(d) { return "Minecraft Education"; },
  preparation: function(d) { return "Preparation"; },
  predictionInstructions: function(d) { return "Make a prediction before you run the program."; },
  preview: function(d) { return "Preview"; },
  print: function(d) { return "Print"; },
  printBatchCertificates: function(d) { return "Print a batch of certificates"; },
  printCertificate: function(d) { return "Print Certificate"; },
  printCertificates: function(d) { return "Print Certificates"; },
  printHandouts: function(d) { return "Print Handouts"; },
  printLandscape: function(d) { return "**IMPORTANT:** Make sure you print in Landscape orientation (sideways, not regular), so the certificates fill a full page."; },
  printingOptions: function(d) { return "Printing Options"; },
  printLessonPlan: function(d) { return "Print Lesson Plan"; },
  printLessonPlans: function(d) { return "Print Lesson Plans"; },
  printLoginCard: function(d) { return "Print login card"; },
  printLoginCardExplanation: function(d) { return "Print out cards with your students' login information."; },
  printLoginCards: function(d) { return "Print Login Cards"; },
  printLoginCards_button: function(d) { return "Print login cards"; },
  printLoginCards_title: function(d) { return "Login Cards"; },
  printLoginCards_windowTitle: function(d) { return "Login Cards for " + d.sectionName; },
  printOneCertificateHere: function(d) { return "Print one here."; },
  printReport: function(d) { return "Print report"; },
  printReportWindowTitle: function(d) { return "Standards Report for " + d.sectionName; },
  privacyDocExplanation: function(d) { return "We encourage you to share this letter with parents to introduce them to Code.org, share student sign-in information, and allow them to review our policies on student privacy."; },
  privacyHeading: function(d) { return "Parent Letter and Student Privacy"; },
  privacyLinkToPolicy: function(d) { return "Just looking for a letter about Code.org's privacy policy for families? [Check here](" + d.privacyPolicyLink + ")."; },
  professionalLearning: function(d) { return "Professional Learning"; },
  professionalLearningDescription: function(d) { return "Our highly-rated professional learning prepares you for your next computer science class."; },
  professionalLearningParticipantQuestion: function(d) { return "Who will be the participants in this section?"; },
  programmingEnvironmentDocumentation: function(d) { return d.programmingEnvironmentTitle + " Documentation"; },
  progress: function(d) { return "Progress"; },
  progressBeta: function(d) { return "Progress (beta)"; },
  progressForLesson: function(d) { return "Progress for " + d.lessonName; },
  progressLegendDetailsNotStarted: function(d) { return "The student has not done any work on this lesson or level."; },
  progressLegendDetailsNoOnlineWork: function(d) { return "This level is an activity that doesn't require online work."; },
  progressLegendDetailsInProgress: function(d) { return "The student has begun working on this level."; },
  progressLegendDetailsSubmittedForLessons: function(d) { return "*For lessons:* The student has submitted work for all levels within this lesson."; },
  progressLegendDetailsSubmittedForLevels: function(d) { return "*For levels:* The student has finished working on this level and clicked the \"Finish\" button to submit their work."; },
  progressLegendDetailsKeepGoing: function(d) { return "You have reviewed the student's work and marked the status of the level as \"keep working\""; },
  progressLegendDetailsNeedsFeedback: function(d) { return "The student has submitted work on an assessment level that is now ready for you to review."; },
  progressLegendDetailsValidated: function(d) { return "This level has validation tests. The student's code has passed all of them."; },
  progressLegendDetailsViewed: function(d) { return "You have viewed the student's work on this level."; },
  progressLegendDetailsFeedbackGiven: function(d) { return "You have left feedback for the student on this level."; },
  progressLegendDetailsAssessmentLevels: function(d) { return "Code.org recommends that you review student work on these levels. Assessment levels are marked with a star next to the level number in the column header."; },
  progressLegendDetailsChoiceLevels: function(d) { return "To submit work on these levels, students choose to complete at least one task from multiple options."; },
  progressBubbleDescription: function(d) { return "Level " + d.levelID; },
  progressBubbleDescriptionWithLesson: function(d) { return "Level " + d.levelID + " Lesson " + d.lessonName; },
  progressLegendAssessment: function(d) { return "Assessment"; },
  progressOnCSTAStandards: function(d) { return "Progress on CSTA Standards"; },
  progressOnCSTAStandardsDescription: function(d) { return "This view shows you how the lessons your class has completed map to the **[Computer Science Teachers Association's (CSTA) standards](" + d.cstaLink + ")**."; },
  progressTrackingIconKey: function(d) { return "Progress Tracking Icon Key"; },
  progressTrackingAnnouncement: function(d) { return "Progress tracking just leveled up!"; },
  progressTrackingInvite: function(d) { return "Effortlessly monitor student progress and provide feedback with a streamlined, teacher-tested interface optimized for speed."; },
  projectsContinueWorking: function(d) { return "Continue working on a recent project"; },
  projectDescriptionApplab: function(d) { return "Start with App Lab:  an introductory programming environment where you can design an app, code with blocks or JavaScript to make it work, then share your app in seconds."; },
  projectDescriptionGamelab: function(d) { return "Ready to go further? Game Lab is a more complex programming environment where you can make animations and games with characters that run, jump, fly and more."; },
  projectDescriptionWeblab: function(d) { return "Web Lab is a programming environment where you can make simple web pages using HTML and CSS. Design your web pages and share your site in seconds."; },
  projectFrozenNotice: function(d) { return "This project is now view-only and is unable to be edited. However, you can remix this project and edit the remixed version."; },
  projectGalleryCardAction: function(d) { return "See the gallery"; },
  projectGalleryCardDescription: function(d) { return "Share your own creations or find inspiration from creations made by students all around the world."; },
  projectGroupAdvancedTools: function(d) { return "Beyond Blocks"; },
  projectGroupArtist: function(d) { return "Drawing"; },
  projectGroupArtistAllProjects: function(d) { return "All Drawing Projects"; },
  projectGroupArtistViewMore: function(d) { return "View more drawing projects"; },
  projectGroupEvents: function(d) { return "Games with Events"; },
  projectGroupEventsAllProjects: function(d) { return "All Games with Events"; },
  projectGroupEventsViewMore: function(d) { return "View more games with events"; },
  projectGroupMinecraft: function(d) { return "Minecraft"; },
  projectGroupMinecraftAllProjects: function(d) { return "All Minecraft Projects"; },
  projectGroupMinecraftViewMore: function(d) { return "View more Minecraft projects"; },
  projectGroupOpenEnded: function(d) { return "Open-Ended Creativity"; },
  projectGroupPreReader: function(d) { return "Pre-reader"; },
  projectGroupPreReaderAllProjects: function(d) { return "All Pre-reader Projects"; },
  projectGroupPreReaderViewMore: function(d) { return "View more pre-reader projects"; },
  projectGroupPlaylab: function(d) { return "Stories and Games with Play Lab"; },
  projectGroupPlaylabAllProjects: function(d) { return "All Play Lab Projects"; },
  projectGroupPlaylabViewMore: function(d) { return "View more Play Lab projects"; },
  projectInfo: function(d) { return "Project Info"; },
  projectLastUpdated: function(d) { return "Last updated"; },
  projectName: function(d) { return "Project Name"; },
  projectNotFound: function(d) { return "This project cannot be found. It could have been deleted or removed from the gallery."; },
  projectPromoButton: function(d) { return "View Project Ideas"; },
  projectPromoDescription: function(d) { return "Take a look at our Project Ideas page for starter projects in Sprite Lab, Game Lab, App Lab, and Web Lab. These include project descriptions, tips, and demo projects you can remix to make your own!"; },
  projectPromoHeading: function(d) { return "Project Inspiration"; },
  projectRubrics: function(d) { return "Project Rubrics"; },
  projectSaveError: function(d) { return "Error saving project"; },
  projectSaveErrorTooltip: function(d) { return "It looks like we couldn't save your progress. Make sure you have a good internet connection and try running the project again to save it."; },
  projectShareLinkImportBadLinkHeader: function(d) { return "Share link not recognized"; },
  projectShareLinkImportBadLinkBody: function(d) { return "We couldn't import that share link. Make sure you are using a link from a Minecraft: Agent puzzle, and that you have copied the full link."; },
  projectShareLinkImportErrorHeader: function(d) { return "Something went wrong."; },
  projectShareLinkImportErrorBody: function(d) { return "There was a problem importing that share link. Please try again."; },
  projectSharingColumnHeader: function(d) { return "Sharing"; },
  projectSharingDialogButton: function(d) { return "Show project sharing column"; },
  projectSharingDialogHeader: function(d) { return "Control sharing for App Lab / Game Lab / Web Lab projects"; },
  projectSharingDialogInstructions: function(d) { return "App Lab, Game Lab and Web Lab are programming environments that allow students to personalize and customize their creations through writing free-form text, uploading images and sounds, etc. By default, students under the age of 13 are not able to share their projects with others, but students aged 13 and over are.\n\n If you want to be able to manage exactly which students can and can not share these project types, you can show the project sharing column by clicking the button below."; },
  projectSharingDisableAll: function(d) { return "Disable all"; },
  projectSharingEnableAll: function(d) { return "Enable all"; },
  projectStartNew: function(d) { return "Start a new project"; },
  projectThumbnail: function(d) { return "Project thumbnail image."; },
  projectType: function(d) { return "Type"; },
  projectTypeAdaptations: function(d) { return "Adaptations"; },
  projectTypeAllProjectsApplab: function(d) { return "All App Lab Projects"; },
  projectTypeAllProjectsArtist: function(d) { return "All Artist Projects"; },
  projectTypeAllProjectsGamelab: function(d) { return "All Game Lab Projects"; },
  projectTypeAllProjectsGamelabBeta: function(d) { return "All Game Lab (beta) Projects"; },
  projectTypeAlgebra: function(d) { return "Algebra"; },
  projectTypeApplab: function(d) { return "App Lab"; },
  projectTypeArtist: function(d) { return "Artist"; },
  projectTypeArtistPreReader: function(d) { return "Artist (Pre-reader)"; },
  projectTypeBasketball: function(d) { return "Basketball"; },
  projectTypeBounce: function(d) { return "Bounce"; },
  projectTypeCalc: function(d) { return "Calc"; },
  projectTypeDance: function(d) { return "Dance Party"; },
  projectTypeDrawing: function(d) { return "Drawing"; },
  projectTypeEcosystems: function(d) { return "Ecosystems"; },
  projectTypeEval: function(d) { return "Eval"; },
  projectTypeEvents: function(d) { return "Events"; },
  projectTypeFlappy: function(d) { return "Flappy"; },
  projectTypeFrozen: function(d) { return "Frozen"; },
  projectTypeGameDesign: function(d) { return "Sprite Lab (Game Design)"; },
  projectTypeGamelab: function(d) { return "Game Lab"; },
  projectTypeGamelabBeta: function(d) { return "Game Lab (beta)"; },
  projectTypeGumball: function(d) { return "The Amazing World of Gumball"; },
  projectTypeIceage: function(d) { return "Ice Age"; },
  projectTypeJavalab: function(d) { return "Java Lab"; },
  projectTypeInfinity: function(d) { return "Infinity"; },
  projectTypeK1: function(d) { return "Pre-reader"; },
  projectTypeMinecraft: function(d) { return "Minecraft"; },
  projectTypeMinecraftAdventurer: function(d) { return "Minecraft Adventurer"; },
  projectTypeMinecraftAquatic: function(d) { return "Minecraft Aquatic"; },
  projectTypeMinecraftDesigner: function(d) { return "Minecraft Designer"; },
  projectTypeMinecraftHero: function(d) { return "Minecraft Hero"; },
  projectTypeMusic: function(d) { return "Music Lab"; },
  projectTypePlaylab: function(d) { return "Play Lab"; },
  projectTypePlaylabPreReader: function(d) { return "Play Lab (Pre-reader)"; },
  projectTypePoetry: function(d) { return "Poetry"; },
  projectTypePythonlab: function(d) { return "Python Lab"; },
  projectTypeScience: function(d) { return "Science"; },
  projectTypeStarwars: function(d) { return "Star Wars"; },
  projectTypeStarwarsBlocks: function(d) { return "Star Wars (Blocks)"; },
  projectTypeSpecialTopic: function(d) { return "Featured Topics"; },
  projectTypeSpecialTopicViewMore: function(d) { return "View more Featured Topics projects"; },
  projectTypeSpriteLab: function(d) { return "Sprite Lab"; },
  projectTypeSports: function(d) { return "Sports"; },
  projectTypeStory: function(d) { return "Story"; },
  projectTypeTable: function(d) { return "Project Type"; },
  projectTypeThebadguys: function(d) { return "The Bad Guys"; },
  projectTypeTimeCapsule: function(d) { return "Time Capsule"; },
  projectTypeWeblab: function(d) { return "Web Lab"; },
  projectTypeApplabViewMore: function(d) { return "View more App Lab projects"; },
  projectTypeGamelabViewMore: function(d) { return "View more Game Lab projects"; },
  projectTypeSpriteLabViewMore: function(d) { return "View more Sprite Lab projects"; },
  projectTypeDanceViewMore: function(d) { return "View more Dance Party projects"; },
  projectTypePoetryViewMore: function(d) { return "View more Poetry projects"; },
  projectsViewAll: function(d) { return "View all projects"; },
  projectsViewProjectGallery: function(d) { return "View projects"; },
  projects: function(d) { return "Projects"; },
  projectsSubHeading: function(d) { return d.project_count + " projects created"; },
  projectsSubHeadingMillions: function(d) { return "Over " + d.project_count + " million projects created"; },
  privacyPolicy: function(d) { return "Privacy Policy"; },
  privacyPracticesForChildren: function(d) { return "See our privacy practices for children"; },
  projectWarning: function(d) { return "Note: You are on a level that is part of a longer project. Changes made on this level will also appear in other levels in the project."; },
  promptIconAndLightbulbInstructionHints: function(d) { return "A friendly character with lightbulb image - click to display instruction hints prompt (Do you want a hint? yes or no) if hints are available"; },
  provideAge: function(d) { return "Provide your age below and click OK to continue."; },
  provideAgeReportAbuse: function(d) { return "Please specify an age"; },
  provideEmail: function(d) { return "Please provide an email address"; },
  providerManagedSection: function(d) { return "This section is managed by " + d.provider + ". Add students there, then re-sync this section."; },
  publish: function(d) { return "Publish"; },
  publishFailed: function(d) { return "Publish failed"; },
  publishFailedNotAllowed: function(d) { return "You are not allowed to publish this project."; },
  publishFailedError: function(d) { return "We could not publish your project. Please try again."; },
  publishFailedForbidden: function(d) { return "You are not allowed to publish your project. Please check with your teacher."; },
  publishFailedRestrictedShare: function(d) { return "Publish failed. Projects with uploaded images cannot be published."; },
  publishFailedAccountTooNew: function(d) { return "Project publishing is disabled until your account is at least a week old."; },
  publishFailedProjectTooNew: function(d) { return "Project publishing is disabled for the first 30 minutes after a project is created."; },
  publishPending: function(d) { return "Publishing..."; },
  publishToClassGallery: function(d) { return "Publish to Class Gallery"; },
  publishToPublicGallery: function(d) { return "Publish to Public Gallery"; },
  publishToPublicGalleryWarning: function(d) { return "You are about to publish your project to the public gallery, meaning anyone in the world can view your project. Make sure your project does not contain any inappropriate content or personal information."; },
  published: function(d) { return "Published"; },
  publicGallery: function(d) { return "Public Gallery"; },
  publicProjects: function(d) { return "Public Projects"; },
  purpose: function(d) { return "Purpose"; },
  puzzle: function(d) { return "Puzzle"; },
  puzzleCompleted: function(d) { return "Puzzle completed!"; },
  puzzleRatingQuestion: function(d) { return "Did you like this puzzle?"; },
  puzzleTitle: function(d) { return "Puzzle " + d.puzzle_number + " of " + d.stage_total; },
  quarter: function(d) { return "Quarter"; },
  quarterDuration: function(d) { return "16-42 hours"; },
  question: function(d) { return "Question"; },
  questionDetails: function(d) { return "Question details"; },
  questionText: function(d) { return "Question text"; },
  quickActions: function(d) { return "Quick Actions"; },
  quickView: function(d) { return "Quick View"; },
  quickViewDescription: function(d) { return "View details about " + d.course_name; },
  random: function(d) { return "random"; },
  rateButtonsLabel: function(d) { return "Rate:"; },
  rateThisLesson: function(d) { return "Rate this Lesson"; },
  readonlyWorkspaceHeader: function(d) { return "View only"; },
  readyToPrint: function(d) { return "Ready to print?"; },
  receiveFutureUpdates: function(d) { return "Receive future updates from Code.org"; },
  recommended: function(d) { return "Recommended"; },
  recommendedBlockContextualHintTitle: function(d) { return "Try using a block like this to solve the puzzle."; },
  record: function(d) { return "Record"; },
  recording: function(d) { return "Recording"; },
  recordAudio: function(d) { return "Record Audio"; },
  redirectConfirmation: function(d) { return "Do you want to open this website?"; },
  redirectCourseVersionWarningDetails: function(d) { return "It looks like you accidentally went to a different version of the course. You've been redirected to the recommended version or the version assigned by your teacher."; },
  redirectExplanation: function(d) { return "This is a link to an external website not operated or reviewed by Code.org and it does not follow the Code.org privacy policy. Please report this app if it is linking to content that is inappropriate or unsafe: "; },
  redirectRejectExplanation: function(d) { return "This app is trying to open a website that appears to be unsafe."; },
  redirectRejectTitle: function(d) { return "Navigation to Unsafe Site Detected"; },
  redirectTitle: function(d) { return "You are leaving this app"; },
  redirectUnsupportedTitle: function(d) { return "Navigation Type Unsupported"; },
  redirectUnsupportedExplanation: function(d) { return "Mailto: links are not supported in App Lab. Please try using a different URL"; },
  relatedCurricula: function(d) { return "Related Curricula"; },
  reloadPage: function(d) { return "Reload Page"; },
  relockStage: function(d) { return "Re-lock lesson"; },
  relockStageInstructions: function(d) { return "\"Re-lock lesson\" to prevent sharing of answers with other classes/schools."; },
  remarks: function(d) { return "Remarks"; },
  remix: function(d) { return "Remix"; },
  remindMeLater: function(d) { return "Remind me later"; },
  removeFromClassGallery: function(d) { return "Remove from Class Gallery"; },
  removeFromPublicGallery: function(d) { return "Remove from Public Gallery"; },
  removeFromProject: function(d) { return "Remove from project"; },
  removeStudent: function(d) { return "Remove student"; },
  removeStudentAndRecordsHeader: function(d) { return "Remove " + d.studentName + " and release the education records to the student?"; },
  removeStudentBody1: function(d) { return "**Make sure you have authority from the school to release this student’s education records to them** before removing them from your section. If the student is not in a teacher’s section, they will be in full control of their data and have the ability to delete their account, including their course progress and projects."; },
  removeStudentBody2: function(d) { return "This student will no longer be able to sign in to their account once you remove them. Please give your student a chance to keep using their Code.org account by allowing them to create a personal login. Give them at least a few days to follow these instructions before you remove them."; },
  removeStudentConfirm1: function(d) { return "If your student currently logs in through a secret picture or secret pair of words, the student may no longer be able to log into their account if you remove them from your section. If this is the case, please give your student a chance to keep using their Code.org account by letting them create a personal login."; },
  removeStudentConfirm2: function(d) { return "Send home these instructions on how to create a personal login."; },
  removeStudentConfirm3: function(d) { return "Give them at least a few days to follow these instructions before you remove them."; },
  removeStudentSendHomeInstructions: function(d) { return "Send home instructions for creating a personal login"; },
  removeStudentHeader: function(d) { return "Are you sure you want to remove this student?"; },
  removeUnusedStudentHeader: function(d) { return "Are you sure you want to remove " + d.studentName + "?"; },
  rename: function(d) { return "Rename"; },
  renameAll: function(d) { return "Rename all " + d.variableName; },
  renameAllPromptTitle: function(d) { return "Rename all " + d.variableName + " variables to:"; },
  renameThis: function(d) { return "Rename this variable"; },
  renameThisPromptTitle: function(d) { return "New variable name:"; },
  repeat: function(d) { return "repeat"; },
  replayButton: function(d) { return "Replay"; },
  reportAbuse: function(d) { return "Report Abuse"; },
  reportAbuseIntro: function(d) { return "If you have encountered offensive content, threats, cyberbullying, harassment, or an instance of copyright infringement for content you own while using apps built on Code Studio, please fill out the form below. We will take your report very seriously, investigate accordingly, and take appropriate action."; },
  requestProjectUnfeatured: function(d) { return "If you have any questions or if you would like to request that your project no longer be displayed in the [featured gallery](" + d.url + "), please reach out to us at support@code.org. "; },
  requiredQuestion: function(d) { return "Required?"; },
  reset: function(d) { return "Reset"; },
  resetProgram: function(d) { return "Reset"; },
  resetPassword: function(d) { return "Reset password"; },
  resetTeacherPasswordTooltip: function(d) { return "You cannot reset passwords for teacher accounts in your section."; },
  secretLoginTooltip: function(d) { return "Disabled for teacher accounts in your section"; },
  reported: function(d) { return "Reported"; },
  resources: function(d) { return "Resources"; },
  response: function(d) { return "Response"; },
  responsesForClassSection: function(d) { return "Responses shown for class section:"; },
  restoreSection: function(d) { return "Restore Section"; },
  restore: function(d) { return "Restore"; },
  restoreThisVersion: function(d) { return "Restore this Version"; },
  restrictedShareInfo: function(d) { return "Remix is disabled on this project because you have chosen to upload images. You can undo this change using Version History."; },
  restrictSectionAccess: function(d) { return "Lock this section"; },
  retryProjectSaveDialogHeader: function(d) { return "Error saving your project"; },
  retryProjectSaveDialogBody: function(d) { return "We can't save your project right now. Please check your internet connection and then click 'Try again' to keep working."; },
  retryProjectSaveDialogButton: function(d) { return "Try again"; },
  retryProjectSavePending: function(d) { return "saving..."; },
  returnsHeader: function(d) { return "Returns"; },
  returnToCdo: function(d) { return "Return to Code.org"; },
  returnToResults: function(d) { return "Return to results list"; },
  review: function(d) { return "Review"; },
  reviewCode: function(d) { return "Review Code"; },
  reviewDocuments: function(d) { return "Review documents"; },
  reviewedComplete: function(d) { return "Reviewed - complete"; },
  reviewResponses: function(d) { return "Go to the assessment/survey tab for your section to review student responses."; },
  reviewState: function(d) { return "Review State"; },
  rollupNoCode: function(d) { return "There is no introduced code for this lesson."; },
  rollupNoPrep: function(d) { return "There is no prep for this lesson."; },
  rollupNoResources: function(d) { return "There are no resources for this lesson."; },
  rollupNoStandards: function(d) { return "There are no standards for this lesson."; },
  rollupNoVocab: function(d) { return "There is no vocabulary for this lesson."; },
  rollupTitleCode: function(d) { return d.title + " Introduced Code"; },
  rollupTitleResources: function(d) { return d.title + " Resources"; },
  rollupTitleStandards: function(d) { return d.title + " Standards"; },
  rollupTitleVocab: function(d) { return d.title + " Vocabulary"; },
  rotateText: function(d) { return "Rotate your device."; },
  rubric: function(d) { return "Rubric"; },
  rubrics: function(d) { return "Rubrics"; },
  rubricCanOnlyBeEvaluatedOnProjectLevelAlert: function(d) { return "Rubrics can only be evaluated on project levels."; },
  rubricLevelThreeHeader: function(d) { return "Limited Evidence"; },
  rubricLevelOneHeader: function(d) { return "Extensive Evidence"; },
  rubricKeyConceptHeader: function(d) { return "Key Concept"; },
  rubricLevelTwoHeader: function(d) { return "Convincing Evidence"; },
  rubricLevelFourHeader: function(d) { return "No Evidence"; },
  rubricScores: function(d) { return "Rubric Scores"; },
  rubricNextLearningGoal: function(d) { return "Go to next learning goal"; },
  rubricPreviousLearningGoal: function(d) { return "Go to previous learning goal"; },
  rubricAiHeaderText: function(d) { return "AI Teaching Assistant"; },
  rubricTourNextButtonText: function(d) { return "Next Tip"; },
  rubricTourStepOneTitle: function(d) { return "Getting Started with Your AI Teaching Assistant"; },
  rubricTourStepOneText: function(d) { return "Launch your AI Teaching Assistant from the bottom left corner of the screen."; },
  rubricTourStepTwoTitle: function(d) { return "Understanding the AI Assessment"; },
  rubricTourStepTwoText: function(d) { return "Your AI Teaching Assistant analyzes students’ code for each learning goal, then suggests one or two rubric scores. It will suggest one score for learning goals where it has trained extensively and two scores where more training data is needed. The final score is always up to you. In each case, your AI Teaching Assistant will provide evidence for its suggestion."; },
  rubricTourStepThreeTitle: function(d) { return "Using Evidence"; },
  rubricTourStepThreeText: function(d) { return "Where possible, your AI Teaching Assistant will highlight the relevant lines of code in the student’s project so it is easy for you to double-check."; },
  rubricTourStepFourTitle: function(d) { return "Understanding AI Confidence"; },
  rubricTourStepFourText: function(d) { return "The confidence rating gives you an idea of how often your AI Teaching Assistant agreed with other teachers when scoring this learning goal. Just like humans, your AI Teaching Assistant isn't perfect."; },
  rubricTourStepFiveTitle: function(d) { return "Assigning a Rubric Score"; },
  rubricTourStepFiveText: function(d) { return "Once you have reviewed the AI Assessment and the student's code, assign a rubric score for the learning goal."; },
  rubricTourStepSixTitle: function(d) { return "How did Your AI Teaching Assistant do?"; },
  rubricTourStepSixText: function(d) { return "Your feedback helps us make your AI Teaching Assistant more helpful to you – let us know how it did."; },
  rubricTabStudent: function(d) { return "Assess a Student"; },
  rubricTabClassManagement: function(d) { return "Class Data"; },
  rubricNoStudentEvals: function(d) { return "You haven't evaluated any student work yet. Switch to the 'Assess a Student' tab and then use the dropdown menu to choose a student to evaluate."; },
  rubricNumberStudentEvals: function(d) { return "You have evaluated this lesson for " + d.teacherEvalCount + " students."; },
  rubricViewStudentRubric: function(d) { return "View Student Rubric"; },
  rubricSummaryClassScore: function(d) { return "Summary of Class Scores"; },
  rubricLearningGoalSummary: function(d) { return "Summary"; },
  runAiAssessment: function(d) { return "Run AI Assessment for Project"; },
  runAiAssessmentAll: function(d) { return "Run AI Assessment for all unsubmitted"; },
  runAiAssessmentClass: function(d) { return "Run AI Assessment for Class"; },
  runAiAssessmentDescription: function(d) { return "Manually run the AI Assessment if a student forgot to press Submit on their project"; },
  runAiAssessmentDescriptionAll: function(d) { return "Manually run the AI Assessment for all students who forgot to press Submit on their project"; },
  runNatively: function(d) { return "Run natively (Beta)"; },
  runProgram: function(d) { return "Run"; },
  runTooltip: function(d) { return "Run the program defined by the blocks in the workspace."; },
  runtimeErrorMsg: function(d) { return "Your program did not run successfully. Please remove line " + d.lineNumber + " and try again."; },
  save: function(d) { return "Save"; },
  saveAll: function(d) { return "Save all"; },
  saveAndClose: function(d) { return "Save and close"; },
  saveAndPublish: function(d) { return "Save & Publish"; },
  saveAndShare: function(d) { return "Save and share"; },
  savedToGallery: function(d) { return "Saved"; },
  saving: function(d) { return "Saving..."; },
  scanQRCode: function(d) { return "Scan this code with your phone camera:"; },
  scatterPlot: function(d) { return "Scatter Plot"; },
  searchForCountry: function(d) { return "Search for your country."; },
  searchForSchool: function(d) { return "Enter your zip code to search"; },
  searchForSchoolPrompt: function(d) { return "e.g. \"Lincoln Elementary\" or \"Lincoln Elementary Lynwood\" or \"Lynwood\""; },
  seeFullLevel: function(d) { return "See Full Level"; },
  seeFullQuestion: function(d) { return " ...see full question"; },
  seeFullResponse: function(d) { return " ...see full response"; },
  seeIncubatorProjects: function(d) { return "See Incubator projects"; },
  sessionLockoutNewAccountHeader: function(d) { return "Just one more thing!"; },
  sessionLockoutPendingHeader: function(d) { return "Thanks! We've contacted your parent/guardian."; },
  sessionLockoutPrompt: function(d) { return "We need your parent or guardian to approve your account before you can get started. Please supply us with your parent or guardian's email address so they can grant you permission."; },
  sessionLockoutHeaderDescription: function(d) { return "An image of a penguin gleefully shouting."; },
  sessionLockoutHeaderThanksDescription: function(d) { return "An image of a penguin happily dancing."; },
  sessionLockoutPendingPrompt: function(d) { return "We sent an email to " + d.pendingEmail + ". Didn't receive anything? Update your parent or guardian's email below or send another request."; },
  sessionLockoutNote: function(d) { return "Note: Your account will be deleted if we do not receive your parent or guardian's permission by " + d.deleteDate + "."; },
  sessionLockoutLastEmailSent: function(d) { return "Last email sent:"; },
  sessionLockoutParentEmailField: function(d) { return "Parent/Guardian Email:"; },
  sessionLockoutParentStatusField: function(d) { return "Permission Request:"; },
  sessionLockoutSubmit: function(d) { return "Send permission request"; },
  sessionLockoutStatusPending: function(d) { return "Pending"; },
  sessionLockoutStatusNotSubmitted: function(d) { return "Not Submitted"; },
  sessionLockoutStatusGranted: function(d) { return "Granted"; },
  sessionLockoutResendEmail: function(d) { return "Resend permission email"; },
  sessionLockoutUpdateSubmit: function(d) { return "Update and send"; },
  school: function(d) { return "School"; },
  schools: function(d) { return "Schools"; },
  schoolCity: function(d) { return "School City"; },
  schoolCityTown: function(d) { return "City / Town"; },
  schoolClickToAdd: function(d) { return "Not listed here - add my school"; },
  schoolCountry: function(d) { return "School Country"; },
  schoolInfoDialogDescription: function(d) { return "Welcome back!  Are you still teaching at "; },
  schoolInfoDialogDescriptionSchoolName: function(d) { return d.schoolName + "?"; },
  schoolInfoDialogUpdate: function(d) { return "No, update my info"; },
  schoolInfoInterstitialDescription: function(d) { return "Please enter your school information below."; },
  schoolInfoInterstitialTitle: function(d) { return "We want to bring Computer Science to every student - help us track our progress!"; },
  schoolInfoInterstitialUnknownError: function(d) { return "We encountered an error with your submission. Please try again."; },
  schoolInfoRequired: function(d) { return "School information is required."; },
  schoolInformationHeader: function(d) { return "School / Organization Information"; },
  schoolLocationSearchPlaceholder: function(d) { return "Search for your city / town location"; },
  schoolName: function(d) { return "School Name"; },
  schoolState: function(d) { return "School State"; },
  schoolType: function(d) { return "School Type"; },
  schoolTypeCharter: function(d) { return "Charter"; },
  schoolTypePrivate: function(d) { return "Private"; },
  schoolTypePublic: function(d) { return "Public"; },
  schoolTypeHomeschool: function(d) { return "Homeschool"; },
  schoolTypeAfter: function(d) { return "After School"; },
  schoolTypeOrganization: function(d) { return "Organization"; },
  schoolTypeOther: function(d) { return "Other"; },
  schoolYear: function(d) { return "School Year"; },
  schoolYearDuration: function(d) { return "84+ hours"; },
  schoolZip: function(d) { return "School Postal Code"; },
  schoolNotFound: function(d) { return "Other school not listed below (click here to provide details)"; },
  schoolNotFoundCheckboxLabel: function(d) { return "I cannot find my school above"; },
  schoolNotFoundDescription: function(d) { return "Sorry, we couldn't find your school. Please enter information below."; },
  schoolNotListed: function(d) { return "I don't see my school"; },
  schoolOrganizationQuestion: function(d) { return "What is the school/organization name?"; },
  score: function(d) { return "score"; },
  secretWords: function(d) { return "Secret words"; },
  section: function(d) { return "Section"; },
  sectionWithColon: function(d) { return "Section:"; },
  sectionCode: function(d) { return "Section Code"; },
  sectionCodeWithColon: function(d) { return "Section Code:"; },
  sectionCodePlaceholder: function(d) { return "6-character code (ABCDEF)"; },
  sectionCreationCelebrationDialogMessage: function(d) { return "Your class sections have been saved. Next, use the teacher dashboard to add students to your class sections."; },
  sectionName: function(d) { return "Section Name"; },
  sectionSignInInfo: function(d) { return "Alternatively, share this section's sign in page with your students: "; },
  sectionsJoined: function(d) { return "Classroom Sections I've Joined"; },
  sectionsTitle: function(d) { return "Classroom Sections"; },
  sectionsNotificationAlreadyOwned: function(d) { return "You are already an instructor for section " + d.sectionId + "."; },
  sectionsNotificationCantBeParticipant: function(d) { return "You do not have the permissions to join section " + d.sectionId + ". If you think this is a mistake please reach out to support@code.org for assistance."; },
  sectionsNotificationFailure: function(d) { return "Couldn't join section"; },
  sectionsNotificationJoinExists: function(d) { return "You have already joined section " + d.sectionName + "."; },
  sectionsNotificationJoinFail: function(d) { return "An error occurred attempting to join section " + d.sectionId + "."; },
  sectionsNotificationJoinFull: function(d) { return "We couldn't add you to section " + d.sectionId + " because there are already " + d.sectionCapacity + " students in it. Please contact your teacher for help."; },
  sectionsNotificationJoinNotFound: function(d) { return "Section " + d.sectionId + " doesn't exist."; },
  sectionsNotificationJoinSuccess: function(d) { return "You joined section " + d.sectionName + "."; },
  sectionsNotificationJoinSuccessForNonPlWrongPage: function(d) { return "You joined section " + d.sectionName + ". This is not a Professional Learning section so it will be visible on the [Teacher Homepage](" + d.teacherHomepageUrl + ")."; },
  sectionsNotificationJoinSuccessForPlWrongPage: function(d) { return "You joined section " + d.sectionName + ". This is a Professional Learning section so it will be visible on the [Professional Learning page](" + d.myPlUrl + ")."; },
  sectionsNotificationJoinRestricted: function(d) { return "We couldn't add you to section " + d.sectionId + " because it is locked. Please contact your teacher for help."; },
  sectionsNotificationLeaveSuccess: function(d) { return "You left section " + d.sectionName + ". If you left by mistake, you can join again with section code " + d.sectionId + "."; },
  sectionsNotificationSuccess: function(d) { return "Success!"; },
  sectionSetupFirstStep: function(d) { return "The first step is to create your classroom sections. Classroom sections are the visual representation of your classroom in Code.org.  Sections allow you to start assigning courses and seeing your students' progress."; },
  sectionSetupOnInitialAccountCreation: function(d) { return "Let's get you started teaching with Code.org!"; },
  sectionViewProgress: function(d) { return "View Progress"; },
  secret: function(d) { return "Secret"; },
  seeAllTutorials: function(d) { return "See all tutorials"; },
  seeCurriculumDetails: function(d) { return "See curriculum details"; },
  seePrivacyPolicy: function(d) { return "(See our privacy policy)"; },
  select: function(d) { return "Select"; },
  selectACourse: function(d) { return "Select a course or unit"; },
  selectAStudentToEvaluateAlert: function(d) { return "Select a student from the dropdown menu to view and evaluate their work."; },
  selectASectionToEvaluateAlert: function(d) { return "Select a section from the dropdown menu to evaluate student work."; },
  selectAll: function(d) { return "Select all"; },
  selectAllFunctions: function(d) { return "Select all functions"; },
  selectAnOption: function(d) { return "Please select an option..."; },
  selectAssessment: function(d) { return "Select an assessment or survey"; },
  selectAssignedLibrarySections: function(d) { return "Select one or more sections to assign this library to"; },
  selectCityFirst: function(d) { return "Please select a city first."; },
  selectCleverSection: function(d) { return "Select a Clever section"; },
  selectCommuneFirst: function(d) { return "Please select a commune first."; },
  selectCountryFirst: function(d) { return "Please select a country first."; },
  selectCountry: function(d) { return "Select a country"; },
  selectDepartmentFirst: function(d) { return "Please select a department/region first."; },
  selectDistrictFirst: function(d) { return "Please select a city/district first."; },
  selectGoogleClassroom: function(d) { return "Select a Google Classroom"; },
  selectLibraryForOptions: function(d) { return "Select a library for more options"; },
  selectMunicipalityFirst: function(d) { return "Please select a municipality first."; },
  selectNameFirst: function(d) { return "Please select a school name first."; },
  selectASchool: function(d) { return "Select a school"; },
  selectSection: function(d) { return "Select Section"; },
  selectSectionInstructions: function(d) { return "Select a section to be able to lock and unlock assessments or surveys. Click the lock settings button in the lesson to the left."; },
  selectSectionLabel: function(d) { return "Select section:"; },
  selectSectionOption: function(d) { return "Select a section"; },
  selectSong: function(d) { return "Select song:"; },
  selectStudent: function(d) { return "Filter by student"; },
  selectStudentOption: function(d) { return "Select a student"; },
  selectStudentsToMove: function(d) { return "Select students to move to a new section in the table. Select which section you want to move your students to in the dropdown below. Choose \"Other teacher\" if you want to move students to a different teacher's section. Moving students will not clear their progress."; },
  selectYourSchool: function(d) { return "Select your school from the list"; },
  selfPacedPl: function(d) { return "Self-paced PL"; },
  selfPacedPlDescription: function(d) { return "Volunteers have translated our tutorials in over 45 languages. Help us continue to expand our tutorials for students around the world!"; },
  selfPacedPlCourseName: function(d) { return "Course Name"; },
  selfPacedPlCurrentLesson: function(d) { return "Current Lesson"; },
  selfPacedPlCourseCompletion: function(d) { return "Course Completion"; },
  selfPacedPlActions: function(d) { return "Actions"; },
  selfPacedPlContinueCourse: function(d) { return "Continue course"; },
  selfPacedPlPrintCertificates: function(d) { return "Print certificate(s)"; },
  selfPacedPlCompleted: function(d) { return "Completed"; },
  semester: function(d) { return "Semester"; },
  semesterDuration: function(d) { return "42-84 hours"; },
  sendLessonButton: function(d) { return "Send to students"; },
  sendLessonTitle: function(d) { return "Send lesson to students"; },
  sendLessonDetails: function(d) { return "Students will be required to sign in before working on the lesson."; },
  sendLessonCopyLink: function(d) { return "Copy lesson link to your clipboard"; },
  sendLessonLinkCopied: function(d) { return "Link copied!"; },
  sendToPhone: function(d) { return "Send to phone"; },
  settings: function(d) { return "Settings"; },
  setUpClass: function(d) { return "Set up your class"; },
  setUpClass_childAccountPolicyNotice: function(d) { return "By registering an account for a student under the age of 13, you represent that you or your school has obtained appropriate parental/guardian consent for the use of Code.org’s platform for the benefit of the school and for no other commercial purpose."; },
  setUpClassCleverIntro: function(d) { return "To get your class set up with Clever, do the following:"; },
  setUpClassClever1: function(d) { return "1. Make sure your class is set up the way you want it to be in Clever."; },
  setUpClassClever2: function(d) { return "2. Hit the 'sync classroom' button above to copy your Clever students to Code.org."; },
  setUpClassCleverFinished: function(d) { return "You're finished! If you need to add or remove students later, do that in Clever first, and then sync your classroom again with Code.org."; },
  setUpClassGoogleIntro: function(d) { return "To get your class set up with Google Classroom, do the following:"; },
  setUpClassGoogle1: function(d) { return "1. Make sure your class is set up the way you it to be in Google Classroom."; },
  setUpClassGoogle2: function(d) { return "2. Hit the 'sync classroom' button above to copy your Google Classroom students to Code.org."; },
  setUpClassGoogleFinished: function(d) { return "You're finished! If you need to add or remove students later, do that in Google Classroom first, and then sync your classroom again with Code.org."; },
  setUpClassPicIntro: function(d) { return "To get your class set up with picture password accounts, do the following:"; },
  setUpClassSectionsHeader: function(d) { return "Set up your class sections"; },
  setUpClassSectionsSubheader: function(d) { return "To start teaching with Code.org, first create one or more class sections. You can always create more later."; },
  setUpClassSectionsSubheaderLink: function(d) { return "Why should I create a class section?"; },
  setUpClassWordIntro: function(d) { return "To get your class set up with secret words accounts, do the following:"; },
  setUpClassWordPic1: function(d) { return "1. Add each of your students in the table above. To enhance privacy and security, we recommend using only first name (or first name and last initial)."; },
  setUpClassWord2: function(d) { return "2. [Print login cards](" + d.printLoginCardLink + ") that show each student's name and 'secret words'. Share these with your students."; },
  setUpClassPic2: function(d) { return "2. [Print login cards](" + d.printLoginCardLink + ") that show each student's name and picture password. Share these with your students."; },
  setUpClassEmailIntro: function(d) { return "To get your class set up with personal logins, do the following:"; },
  setUpClassEmail1: function(d) { return "1. Have your students [create Code.org accounts](" + d.createAccountLink + ") with their own email addresses. Note: The creation by students under 13 of personal logins requires a separate parental consent step (i.e., an email to parent/guardian and an affirmative response) that may delay or prevent account creation and interfere with classroom participation. We therefore strongly recommend the use of picture password or secret word accounts for classes with students under 13. If they already have a Code.org account associated with their email address, they can skip this step."; },
  setUpClassEmail2: function(d) { return "2. Have your students visit this link to join your section: [" + d.joinLink + "](" + d.joinLink + ")"; },
  setUpClass3: function(d) { return "3. [Share our privacy letter](" + d.parentLetterLink + ") with parents to introduce them to Code.org and allow them to review our policies on student privacy."; },
  setUpClass4: function(d) { return "4. Have your students follow the instructions below to sign in."; },
  setUpClassroom: function(d) { return "Set up your classroom"; },
  setupCoursesTeacher: function(d) { return "Assign a course to your classroom or start your own course."; },
  setupCoursesStudent: function(d) { return "Browse Code.org's courses to find your next challenge."; },
  setUpProfessionalLearning: function(d) { return "Set up your professional learning section"; },
  share: function(d) { return "Share"; },
  shareCopyLink: function(d) { return "Copy the link:"; },
  shareEmbedDescription: function(d) { return "You can paste the embed code into an HTML page to display the project on a webpage."; },
  shareEmbedWarning: function(d) { return "Some functionality, such as the playSpeech function, will not work on embedded projects."; },
  shareLibraryButton: function(d) { return "Assign library"; },
  shareLibrary: function(d) { return "Share as library"; },
  shareLibraryAccess: function(d) { return "Sharing an ID directly gives permanent access to your library"; },
  shareLibraryWithClassmate: function(d) { return "Share the functions in your project with a friend or classmate."; },
  shareFailure: function(d) { return "Sorry, we can't share this program."; },
  shareSettingEnableButton: function(d) { return "Enable sharing advanced projects for all students"; },
  shareSettingDisableButton: function(d) { return "Disable sharing advanced projects for all students"; },
  shareSettingEnableButtonDescription: function(d) { return "Sharing projects created through Code.org's advanced programming tools (App Lab, Game Lab, and Web Lab) is currently disabled for all of your students. If you would like to re-enable sharing, please click on the 'Enable sharing advanced projects for all students' button below."; },
  shareSettingDisableButtonDescription: function(d) { return "If you need to block your students from sharing projects created through Code.org's advanced tools (App Lab, Game Lab, and Web Lab) that allow students to write free-form text, upload their own images and sounds, etc., you can do so by clicking on the 'Disable sharing advanced projects for all students' button below."; },
  shareSettingSupportArticle: function(d) { return "Learn more."; },
  shareSettingEnableTitle: function(d) { return "Are you sure you want to enable sharing?"; },
  shareSettingDisableTitle: function(d) { return "Are you sure you want to disable sharing?"; },
  shareSettingEnableAction: function(d) { return "Enable sharing"; },
  shareSettingDisableAction: function(d) { return "Disable sharing"; },
  shareSettingEnableDialog: function(d) { return "By enabling sharing, your students will be allowed to share their projects created through Code.org’s advanced programming tools (App Lab, Game Lab, and Web Lab) with anyone by sharing their project link."; },
  shareSettingDisableDialog: function(d) { return "An important part of the student experience of using Code.org is the ability to share their projects and creations with others. With sharing disabled, students will not be able to share their creations created with our advanced programming tools (App Lab, Game Lab, and Web Lab) with anyone else besides their Code.org teachers. These advanced tools are designed for students that are over 13 or being used under a teacher or parent’s guidance."; },
  shareSettingDisableDialogNote: function(d) { return "Note that students will still be able to share projects created using the programming tools designed for younger students like Play Lab and Artist. These tools limit what students can create and do not allow for uploading any of their own assets. To protect students’ privacy, shared creations in the project gallery are labeled only with the first letter of a student’s name and an age range."; },
  shareSettingMoreDetailsTooltip: function(d) { return "App Lab / Game Lab / Web Lab sharing enabled?"; },
  shareTeacherLibraryDescription: function(d) { return "Assign and unassign your published libraries to your sections or copy the ID and share your library with others to use in their projects."; },
  shareTitle: function(d) { return "Share your project"; },
  shareToFacebook: function(d) { return "Share to Facebook"; },
  shareToGoogleClassroom: function(d) { return "Share to Google Classroom"; },
  shareToLinkedIn: function(d) { return "Share to LinkedIn"; },
  shareToTwitter: function(d) { return "Share to Twitter"; },
  shareU13Warning: function(d) { return "Ask your teacher before sharing. Only share with others in your school."; },
  shareWarningsAge: function(d) { return "Please provide your age below and click OK to continue."; },
  shareWarningsMoreInfo: function(d) { return "Code.org Privacy Policy"; },
  shareWarningsStoreDataBeforeHighlight: function(d) { return "This app built on Code Studio stores data that can be viewed by anyone with access to this project, so "; },
  shareWarningsStoreDataHighlight: function(d) { return "avoid providing personal information about yourself or others"; },
  shareWarningsStoreDataAfterHighlight: function(d) { return "."; },
  sharingAgePrompt: function(d) { return "Please select an age."; },
  sharingBlockedByTeacher: function(d) { return "Sorry, you do not have permissions to share this project. If you want to be able to share your project, please ask your teacher to enable sharing of App Lab / Game Lab / Web Lab projects for your section from the 'Manage students' tab in their dashboard. They can do this by adding the project sharing column from the Actions settings menu."; },
  sharingDisabled: function(d) { return "Sorry, this project is not available for sharing. If this is your project or the project of one of your students, please [sign in](" + d.sign_in_url + ") to your account to view the project."; },
  show: function(d) { return "Show"; },
  showAllLessons: function(d) { return "Show All Lessons"; },
  showAnswer: function(d) { return "Show answer"; },
  showAnswers: function(d) { return "Show answers"; },
  showAnswersInstructions: function(d) { return "\"Show answers\" to put the assessment into a read-only mode."; },
  showBlock: function(d) { return "Get a block"; },
  showBlocksHeader: function(d) { return "Show Blocks"; },
  showCodeHeader: function(d) { return "Show Code"; },
  showDetails: function(d) { return "Show Details"; },
  showGeneratedCode: function(d) { return "Show code"; },
  showGrid: function(d) { return "Show grid"; },
  showOlderComments: function(d) { return "Show older comments"; },
  showPicture: function(d) { return "Show picture"; },
  showPreview: function(d) { return "Show preview"; },
  showSection: function(d) { return "Show Section"; },
  showTextHeader: function(d) { return "Show Text"; },
  showToolbox: function(d) { return "Show Toolbox"; },
  showVersionsHeader: function(d) { return "Version History"; },
  showWords: function(d) { return "Show words"; },
  showingLibrariesFromSection: function(d) { return "Showing libraries from section: "; },
  signInOrCreateAccount: function(d) { return "Sign in or create account"; },
  signInToAssign: function(d) { return "Sign in or create account to assign a curriculum"; },
  signInToAssignHelpText: function(d) { return "You need to be signed in and have class sections created to assign curriculum. Sign in or create an account and your first class section to get started."; },
  signup: function(d) { return "Sign up for the intro course"; },
  signOutButton: function(d) { return "Sign out"; },
  signUpButton: function(d) { return "Sign up"; },
  signupFormSchoolOrOrganization: function(d) { return "School / Organization"; },
  signupFormSchoolType: function(d) { return "Type"; },
  signUpToReceiveGuide: function(d) { return "Sign up to receive our guide on everything you need to know to get started with Hour of Code in your classroom."; },
  signinCodeOrg: function(d) { return "Sign in to Code.org"; },
  signinForProgress: function(d) { return "Already have a Code.org account? Sign in so we can save your progress."; },
  signinOrAge: function(d) { return "Sign in or provide your age to continue"; },
  signinDanceParty: function(d) { return "Provide your age to continue"; },
  signingInClever: function(d) { return "Signing in with Clever"; },
  signingInCleverIntro: function(d) { return "Students must log in with their Clever account. Have your students do the following:"; },
  signingInClever1: function(d) { return "1. Have your students log in to their Clever account:"; },
  signingInClever1a: function(d) { return "a. Go to [www.clever.com](https://www.clever.com)."; },
  signingInClever1b: function(d) { return "b. Click on 'Sign in as a student' at the top right."; },
  signingInClever2: function(d) { return "2. Click on the Code.org logo on the Clever dashboard. The logo looks like this:"; },
  signingInGoogle: function(d) { return "Signing in with Google Classroom"; },
  signingInGoogleIntro: function(d) { return "Students must sign in with their Google Classroom account. Have your students do the following:"; },
  signingInGoogle2: function(d) { return "2. Choose 'Continue with Google'."; },
  signingInGoogle3: function(d) { return "3. Sign in via the Google sign-in dialog."; },
  signingInEmail: function(d) { return "Signing in with Personal Logins"; },
  signingInEmailIntro: function(d) { return "Have your students do the following to sign in with their personal logins:"; },
  signingInEmailGoogle1: function(d) { return "1. Go to [www.code.org](" + d.codeOrgLink + ") and click the 'sign in' button."; },
  signingInEmail2: function(d) { return "2. Sign in using the email and password they created."; },
  signingInLtiLoginHeader: function(d) { return "Signing in with " + d.providerName; },
  signingInLtiLoginBody: function(d) { return "Students must sign in with their " + d.providerName + " account. Have your students navigate to the module on " + d.providerName + " where you have installed the Code.org LTI Tool. Have your students click \"Launch Code.org\" to navigate to your created section."; },
  signingInPic: function(d) { return "Signing in with Picture passwords"; },
  signingInPicIntro: function(d) { return "Have your students do the following to sign in with their picture passwords:"; },
  signingInPic3: function(d) { return "3. Click on their picture password."; },
  signingInWord: function(d) { return "Signing in with Secret Word passwords"; },
  signingInWordIntro: function(d) { return "Have your students do the following to sign in with their secret words:"; },
  signingInWordPic1: function(d) { return "1. Go to [" + d.joinLink + "](" + d.joinLink + ") OR go to [www.code.org](" + d.codeOrgLink + "), click the 'sign in' button and enter the section code " + d.sectionCode + " in the section box."; },
  signingInWordPic2: function(d) { return "2. Click on their name."; },
  signingInWord3: function(d) { return "3. Type in their secret words and hit 'sign in'."; },
  skipPuzzle: function(d) { return "Skip puzzle"; },
  skipTitle: function(d) { return "Are you sure you want to skip the tutorial?"; },
  skipBody: function(d) { return "This will skip the tutorial and take you to the project."; },
  skipToProject: function(d) { return "Skip to project"; },
  slideDecks: function(d) { return "Slide Decks"; },
  slowLoading: function(d) { return "This is taking longer than usual..."; },
  softwareEngineer: function(d) { return "Software Engineer"; },
  some: function(d) { return "Some"; },
  sortBy: function(d) { return "Sort by:"; },
  soundLibrary: function(d) { return "Sound Library"; },
  soundName: function(d) { return "Sound Name"; },
  soundSearchPlaceholder: function(d) { return "Search for a sound..."; },
  specialAnnouncementHeadingPostHoc2019: function(d) { return "Go beyond an Hour of Code"; },
  specialAnnouncementDescriptionPostHoc2019: function(d) { return "An hour is just the beginning. We offer comprehensive curriculum for grades K-12, professional learning programs including local workshops, and resources to help you and your school get started."; },
  sprite: function(d) { return "sprite"; },
  spriteLimitReached: function(d) { return "The maximum possible number of sprites in Sprite Lab is " + d.limit + ". No additional sprites can be created."; },
  stageExtras: function(d) { return "Lesson Extras"; },
  standaloneToolsDescription: function(d) { return "In addition to our courses, teachers can use App Lab and Game Lab in any course to teach students how to create apps, animations, and games in JavaScript. And, we have lessons and widgets to teach encryption, text compression, and other computer science concepts."; },
  standaloneToolsHeading: function(d) { return "Tools for Middle and High School"; },
  standaloneUnits: function(d) { return "Standalone Units"; },
  standards: function(d) { return "Standards"; },
  standardConcept: function(d) { return "Concept"; },
  standardIdentifier: function(d) { return "Identifier"; },
  standardMappings: function(d) { return "Standard Mappings"; },
  standardsAndFramework: function(d) { return "Curriculum Standards"; },
  standardsAndFrameworkDescription: function(d) { return "Information about curriculum standards alignment for Code.org courses."; },
  standardsGetInvolved: function(d) { return "Get others involved in CS education"; },
  standardsGetInvolvedDetails: function(d) { return "Learn how to get your [administrators](" + d.adminLink + "), [parents](" + d.parentLink + "), and [fellow teachers](" + d.teacherLink + ") involved in CS education."; },
  standardsGetInvolvedDetailsForPrint: function(d) { return "Learn more about how you can support computer science education as an [administrator](" + d.adminLink + "), [parent](" + d.parentLink + "), or [teacher](" + d.teacherLink + ")."; },
  standardsHowTo: function(d) { return "How to use this information"; },
  standardsHowToForPrint: function(d) { return "How to use this report"; },
  standardsHowToDetails: function(d) { return "This report shows how Code.org's [" + d.courseName + "](" + d.courseLink + ") maps to [CSTA Standards](" + d.cstaLink + ") and how many lessons in " + d.courseName + " this class has completed. Completing all lessons for a standards does not automatically indicate mastery of that standard - please use your best judgement to determine how well the class or individual students have learned the course material. For reference, a Code.org lesson is approximately 45 - 65 minutes of instructional time. A \"plugged\" online lesson is considered \"in progress\" when at least 20% of the enrolled students have completed 20% of the lesson.  A \"plugged\" online lesson is considered \"complete\" when 80% of the enrolled students have finished 60% of the lesson. Unplugged lessons can be marked \"complete\" or \"incomplete\" by the teacher."; },
  standardsHowToDetailsForPrint: function(d) { return "This report shows how Code.org's [" + d.courseName + "](" + d.courseLink + ") maps to [CSTA Standards](" + d.cstaLink + ") and how many lessons in " + d.courseName + " this class has completed. Completing all lessons for a standard does not automatically indicate mastery of that standard - please check with your teacher to get specific information about how well the class or individual students have learned the course material. For reference, a Code.org lesson is approximately 45 - 65 minutes of instructional time. A \"plugged\" online lesson is considered \"in progress\" when at least 20% of the enrolled students have completed 20% of the lesson.  A \"plugged\" online lesson is considered \"complete\" when 80% of the enrolled students have finished 60% of the lesson. Unplugged lessons can be marked \"complete\" or \"incomplete\" by the teacher."; },
  standardsReminder: function(d) { return "**Remember:** Completing all lessons for a standard **does not automatically indicate mastery** of that standard - please use your best judgement to determine how well your students have learned course material."; },
  standardsReportHeader: function(d) { return "Class Standards Report"; },
  standardsReportNoUnpluggedLessons: function(d) { return "There are no unplugged lessons in this course."; },
  standardsReportLessonLengthInfo: function(d) { return "*Lessons in this course offer between 45 and 65 minutes of instruction"; },
  startBlocksTemplateWarning: function(d) { return "WARNING: You are editing start blocks for a level with a template. Start blocks should be defined in the template level."; },
  startCourse: function(d) { return "Start Course"; },
  startLearning: function(d) { return "Start learning"; },
  startOver: function(d) { return "Start Over"; },
  startOverTitle: function(d) { return "Are you sure you want to start over?"; },
  startOverBody: function(d) { return "This will reset the puzzle to its start state and reset all the data you've added or changed."; },
  startOverWorkspace: function(d) { return "This will reset the workspace to its start state and remove all the blocks you've added or changed."; },
  startOverWorkspaceText: function(d) { return "This will reset the workspace to its start state and remove all the code you've added or changed."; },
  startWithUnit: function(d) { return "Start with unit:"; },
  statsTableFailure: function(d) { return "Sorry, something went wrong. Please reload the page to try again."; },
  stayHere: function(d) { return "Stay here"; },
  stepIn: function(d) { return "Step in"; },
  stepOut: function(d) { return "Step out"; },
  stepOver: function(d) { return "Step over"; },
  stop: function(d) { return "Stop"; },
  stopFeaturing: function(d) { return "Stop featuring"; },
  stopTests: function(d) { return "Stop Tests"; },
  stringEquals: function(d) { return "string=?"; },
  student: function(d) { return "Student"; },
  studentAnnouncementSpecial2020Heading: function(d) { return "Learn computer science at home"; },
  studentAnnouncementSpecial2020Body: function(d) { return "Tune in to a CodeBytes mini-lesson, or see resources for students, parents, and teachers - including videos, fun tutorials, and projects!"; },
  studentAnnouncementSpecial2020Button: function(d) { return "Get started"; },
  studentAnnouncementSpecial2022HocHeading: function(d) { return "Hour of Code: Explore, Play, Create"; },
  studentAnnouncementSpecial2022HocBody: function(d) { return "Explore the universe, score a goal, bust a move — there are so many ways to try computer science!"; },
  studentAnnouncementSpecial2023AiLaunchHeading: function(d) { return "Explore Artificial Intelligence (AI)"; },
  studentAnnouncementSpecial2023AiLaunchBody: function(d) { return "AI is changing everything. Learn more about this technology and how it works."; },
  studentAnnouncementHoc2023Heading: function(d) { return "Hour of Code: Creativity with AI"; },
  studentAnnouncementHoc2023Body: function(d) { return "Join millions across the globe in organizing an hour of coding, with or without AI and learning how AI works. Anyone, anywhere can do it. No experience needed."; },
  announcementHoc2023DanceAIHeading: function(d) { return "Dance Party: AI Edition"; },
  announcementHoc2023DanceAIBody: function(d) { return "Learn about artificial intelligence (AI) concepts to create your own virtual dance party showcasing today's top artists. With dozens of songs to choose from, reach every student no matter their music taste. It's time to strut your stuff!"; },
  studentAsVerifiedTeacherWarning: function(d) { return "Your account is currently a student account - you will need to update this account to a teacher account to keep verified teacher access."; },
  studentAsVerifiedTeacherDetails: function(d) { return "Click on the link and follow the instructions to upgrade your account. If you do not see the option to upgrade your account, you will need to be removed from all teacher sections."; },
  students: function(d) { return "Students"; },
  studentFreeResponseAnswers: function(d) { return "Student free response answers"; },
  studentsInSection: function(d) { return "Students in section: "; },
  studentNames: function(d) { return "Student names"; },
  studentOverviewTableHeader: function(d) { return "Submission status"; },
  studentsAnswered: function(d) { return "students answered"; },
  studentsSuccessfullyMovedNotice: function(d) { return "Students successfully moved"; },
  studentsSuccessfullyMovedDetails: function(d) { return d.numStudents + " student(s) were successfully moved from this section to section \"" + d.section + ".\""; },
  studentsSuccessfullyCopiedNotice: function(d) { return "Students successfully copied"; },
  studentsSuccessfullyCopiedDetails: function(d) { return d.numStudents + " student(s) were successfully copied from this section to section \"" + d.section + ".\""; },
  studentAccountsAndProgress: function(d) { return "Student Accounts and Progress"; },
  studentControl: function(d) { return "Individual student control"; },
  studentLockStateInstructions: function(d) { return "Use the table below to control the state for each individual student."; },
  studentName: function(d) { return "Student Name"; },
  studentNameHeader: function(d) { return "Student name"; },
  studentAnswer: function(d) { return "Student answer"; },
  studentResources: function(d) { return "Student Resources"; },
  studentResponses: function(d) { return "Student Responses"; },
  studentTableTeacherDemo: function(d) { return "Me"; },
  submissionTimestamp: function(d) { return "Submission timestamp"; },
  submit: function(d) { return "Submit"; },
  submitAssessment: function(d) { return "Submit your assessment"; },
  submitSurvey: function(d) { return "Submit your survey"; },
  submittableComplete: function(d) { return "You cannot edit your assessment after submitting it.  Are you sure?"; },
  submittableIncomplete: function(d) { return "You left some questions incomplete.  You cannot edit your assessment after submitting it.  Are you sure?"; },
  submittableSurveyComplete: function(d) { return "You cannot edit your survey after submitting it. To preserve anonymity, your responses will also be cleared from this page. Are you sure you want to Submit?"; },
  submittableSurveyIncomplete: function(d) { return "You left some questions incomplete. You cannot edit your survey after submitting it. To preserve anonymity, your responses will also be cleared from this page. Are you sure you want to Submit?"; },
  submittableUnsubmit: function(d) { return "Unsubmitting your assessment will reset the submitted time and date.  Are you sure?"; },
  submitted: function(d) { return "Submitted"; },
  submitting: function(d) { return "Submitting..."; },
  submittedOn: function(d) { return "Submitted On:"; },
  submitToStudent: function(d) { return "Submit to student"; },
  submitYourProject: function(d) { return "Submit your project"; },
  submitYourProjectConfirm: function(d) { return "You cannot edit your project after submitting it, really submit?"; },
  subtitle: function(d) { return "a visual programming environment"; },
  success: function(d) { return "Success!"; },
  successAssigningCurriculum: function(d) { return "You have successfully assigned " + d.curriculum + " to your section(s)."; },
  summaryAssessmentsOverview: function(d) { return "Multiple choice questions overview"; },
  summaryView: function(d) { return "Summary View"; },
  support: function(d) { return "Support"; },
  switchSection: function(d) { return "Switch section:"; },
  switchToNewProgressView: function(d) { return "Try out new progress view (beta)"; },
  switchToOldProgressView: function(d) { return "Switch to old progress view"; },
  progressV2_feedback_question: function(d) { return "Hi there! Overall, how satisfied are you with the new progress view?"; },
  progressV2_feedback_shareMore: function(d) { return "Are you willing to share more? Just a few minutes will help us improve!"; },
  progressV2_feedback_shareMoreLinkText: function(d) { return "Share more feedback"; },
  progressV2_feedback_thumbsUp: function(d) { return "I like it!"; },
  progressV2_feedback_thumbsDown: function(d) { return "I don't like it"; },
  progressV2_comingSoon: function(d) { return "Coming Soon!"; },
  progressV2_comingSoonBanner: function(d) { return "Our next update will add information about students' time spent and most recent activity date."; },
  syncClever: function(d) { return "Sync students from Clever"; },
  syncGoogleClassroom: function(d) { return "Sync students from Google Classroom"; },
  syncingYourStudents: function(d) { return "Syncing Your Students"; },
  syncingYourStudentsDescription: function(d) { return "If your Code.org section is ever out of date with your list of students in " + d.loginType + ", click on the \"Sync students from " + d.loginType + "\" button on the [Manage Students](" + d.url + ") tab: "; },
  syntaxHeader: function(d) { return "Syntax"; },
  syntaxErrorMsg: function(d) { return "Your program contains a typo. Please remove line " + d.lineNumber + " and try again."; },
  teacher: function(d) { return "Teacher"; },
  teacherActions: function(d) { return "Teacher Actions"; },
  teacherWithColon: function(d) { return "Teacher:"; },
  teachers: function(d) { return "Teachers"; },
  teacherAnnouncementSpecial2020Body: function(d) { return "Take a Code Break with us, or see resources for students, parents, and teachers - including videos, fun tutorials, and projects!"; },
  teacherAnnouncementSpecial2020Heading: function(d) { return "Continued learning when schools are closed"; },
  teacherAnnouncementSpecialFall2020Body: function(d) { return "See recommended adjustments to Code.org's courses and get answers to frequently asked questions about how to run a virtual or socially-distanced classroom with Code.org materials."; },
  teacherAnnouncementSpecialFall2020Heading: function(d) { return "Teaching in a Virtual or Socially-Distanced Classroom?"; },
  teacherAnnouncementSpecialWinter2021Body: function(d) { return "Join us to explore AI in a new video series, train AI for Oceans in 25+ languages, discuss ethics, and more!"; },
  teacherAnnouncementSpecialWinter2021Heading: function(d) { return "Explore Artificial Intelligence and Machine Learning"; },
  teacherComments: function(d) { return "Teacher comments"; },
  teacherCommunity: function(d) { return "Teacher Community"; },
  teacherCommunityDescription: function(d) { return "Connect with other teachers on the forum to ask curriculum questions, share ideas from your lessons, and get help from the Code.org community."; },
  teacherCourseHoc: function(d) { return "Hour of Code"; },
  teacherCourseHocDescription: function(d) { return "If you don’t have time for a full length course, try a one-hour tutorial designed for all ages. Join millions of students and teachers in over 180 countries by starting with an Hour of Code."; },
  teacherCourseHocLinkText: function(d) { return "View more Hour of Code tutorials"; },
  teacherDashboard: function(d) { return "View Teacher Dashboard"; },
  teacherFeedbackAwaitingReviewTooltip: function(d) { return "This level is awaiting your review. Check the box again to tell your student they need to keep working on this level. Uncheck it to let them know that the level is complete and they should move on."; },
  teacherFeedbackKeepWorkingTooltip: function(d) { return "Check this box if you want this student to continue working on this level. The student will be notified of this and their level will show as 'in progress' instead of 'completed' when you save your feedback."; },
  teacherForum: function(d) { return "Teacher Forum"; },
  teacherHomePage: function(d) { return "Teacher home page"; },
  teacherOnly: function(d) { return "For Teachers Only"; },
  teacherPanel: function(d) { return "Teacher Panel"; },
  teacherResources: function(d) { return "Teacher resources"; },
  teacherTabAssessments: function(d) { return "Assessments/Surveys"; },
  teacherTabManageStudents: function(d) { return "Manage Students"; },
  teacherTabProgress: function(d) { return "Progress"; },
  teacherTabProjects: function(d) { return "Projects"; },
  teacherTabStats: function(d) { return "Stats"; },
  teacherTabStatsTextResponses: function(d) { return "Text Responses"; },
  teachingGuide: function(d) { return "Teaching Guide"; },
  teachingTip: function(d) { return "Teaching Tip"; },
  teachWithCodeOrg: function(d) { return "Teach with Code.org"; },
  teachWithCodeOrgDescription: function(d) { return "Volunteer to teach the Hour of Code or be a guest speaker in a local classroom. Sign up to hear about opportunities near you."; },
  tellUsAboutYourself: function(d) { return "Tell us about yourself"; },
  tellUsAboutWorkshop: function(d) { return "Tell us about the workshop you're attending"; },
  organizerNotListed: function(d) { return "My organizer is not listed"; },
  facilitatorNotListed: function(d) { return "My facilitator is not listed"; },
  test: function(d) { return "Test"; },
  text: function(d) { return "Text"; },
  textToSpeech: function(d) { return "Text to speech"; },
  textVariable: function(d) { return "text"; },
  textToSpeechProfanity: function(d) { return "Your text contains inappropriate language so it will not be played. Please update your project to remove the " + plural(d.profanityCount, 0, en_us, { one: "word", other: "words" }) + " \"" + d.profaneWords + "\".\n"; },
  textToSpeechTruncation: function(d) { return "Your text exceeds our 750 character limit so we have shortened it for you."; },
  thanksForYourResponse: function(d) { return "Thanks for your response!"; },
  thankyou: function(d) { return "Thank you"; },
  thankyouForAnswer: function(d) { return "Thank you for submitting an answer."; },
  thankYouForReport: function(d) { return "Thanks for helping us to keep Code.org safe!"; },
  thankYouForResponse: function(d) { return "Thank you for your response.  If you are not redirected to the form in a few moments,"; },
  thirdPartyProviderUpsell: function(d) { return "Do you use Google Classroom or Clever?"; },
  thisSprite: function(d) { return "this sprite"; },
  thisUnit: function(d) { return "this unit"; },
  thumbnailWarning: function(d) { return "Note: You must finish running your app to create a thumbnail, before you can publish your app."; },
  times: function(d) { return "times"; },
  timeSpent: function(d) { return "time spent " + d.minutes + "m " + d.seconds + "s"; },
  timeSpentMins: function(d) { return "Time Spent (mins)"; },
  timestamp: function(d) { return "Time stamp"; },
  tipsForEvaluation: function(d) { return "Tips for Evaluation"; },
  tipsHeader: function(d) { return "Tips"; },
  today: function(d) { return "today"; },
  toggleBlocksErrorMsg: function(d) { return "You need to correct an error in your program before it can be shown as blocks."; },
  tooFewBody: function(d) { return "Please select two answers before submitting."; },
  tooFewTitle: function(d) { return "Too few answers."; },
  tooManyBlocks: function(d) { return "too many blocks"; },
  tooManyBlocksMsg: function(d) { return "This puzzle can be solved with <x id='START_SPAN'/><x id='END_SPAN'/> blocks."; },
  tooManyBlocksDescription: function(d) { return "Too Many!"; },
  tooMuchWork: function(d) { return "You made me do a lot of work!  Could you try repeating fewer times?"; },
  toolboxHeader: function(d) { return "Blocks"; },
  toolboxHeaderDroplet: function(d) { return "Toolbox"; },
  too_young: function(d) { return "This content has age restrictions in place and is not available for younger students."; },
  topCenter: function(d) { return "top center"; },
  topCourseExplanation: function(d) { return "Continue lesson to jump to where you left off or view the whole course to see an overview of your progress."; },
  topCourseLessonIntro: function(d) { return "You are currently working on " + d.lessonName + "."; },
  topic: function(d) { return "Topic"; },
  topLeft: function(d) { return "top left"; },
  topRight: function(d) { return "top right"; },
  tos: function(d) { return "Terms of Service"; },
  tosLong: function(d) { return "This project has been reported for violating Code.org's [Terms of Service](" + d.url + ") and cannot be shared with others."; },
  tryAgain: function(d) { return "Try again"; },
  tryBlocksBelowFeedback: function(d) { return "Try using one of the blocks below:"; },
  tryHOC: function(d) { return "Try the Hour of Code"; },
  tryHourOfCode: function(d) { return "Try an Hour of Code!"; },
  tryIt: function(d) { return "Try it"; },
  tryItNow: function(d) { return "Try it now"; },
  tryItOut: function(d) { return "Try it out"; },
  tryNow: function(d) { return "Try Now"; },
  tryCourseNow: function(d) { return "Try " + d.course_name + " now"; },
  turtleProgrammingInAppLab: function(d) { return "Turtle Programming in App Lab"; },
  turtleProgrammingInAppLabDescription: function(d) { return "Unlock the ability to make rich, interactive apps with JavaScript in the App Lab!"; },
  tutorialUnavailable: function(d) { return "Tutorial unavailable for younger students"; },
  tutorialUnavailableExplanation: function(d) { return "Sorry, this tutorial is not available for younger students unless they signed in as part of a classroom with a teacher. We have many more tutorials for all ages."; },
  type: function(d) { return "Type"; },
  typeName: function(d) { return "(Type your first and last name below):"; },
  unassign: function(d) { return "Unassign"; },
  unattachedBlockTipTitle: function(d) { return "Unattached blocks"; },
  unattachedBlockTipBody: function(d) { return "Blocks that are not attached will not do anything. If you want these blocks in your program, try connecting them to other blocks."; },
  unexpand: function(d) { return "Unexpand"; },
  unexpectedError: function(d) { return "An unexpected error occurred, please try again. If this keeps happening, try reloading the page."; },
  unfeatured: function(d) { return "Unfeatured"; },
  unhideAndAssignHeader: function(d) { return "This unit is currently hidden from the section"; },
  unhideUnitAndAssign: function(d) { return "Unhide unit and assign"; },
  unnamedFunction: function(d) { return "You have a variable or function that does not have a name. Don't forget to give everything a descriptive name."; },
  unplugged: function(d) { return "Unplugged"; },
  unpluggedActivity: function(d) { return "Unplugged Activity"; },
  unpluggedLesson: function(d) { return "Unplugged Lesson"; },
  unpublish: function(d) { return "Unpublish"; },
  unpublishPending: function(d) { return "Unpublishing..."; },
  unpublishFailureTitle: function(d) { return "Unpublish Failed"; },
  unpublishFailureBody: function(d) { return "We failed to unpublish your library, \"" + d.libraryName + ".\" Please check your internet connection and try again."; },
  unusedCode: function(d) { return "Unused code"; },
  updateFirmware: function(d) { return "Update Firmware"; },
  updating: function(d) { return "updating"; },
  updateLibraryConfirmation: function(d) { return "Are you sure you want to update " + d.libraryName + "?"; },
  updateUnpluggedLessonProgress: function(d) { return "Update unplugged lesson progress"; },
  updateUnpluggedLessonProgressSubHeading: function(d) { return "Make sure your report accurately reflects the unplugged lessons* your class has worked on."; },
  updateUnpluggedProgress: function(d) { return "Update unplugged progress"; },
  upgradeAccountToAssign: function(d) { return "Use a teacher account to assign a curriculum"; },
  upgradeAccountToAssignButtonText: function(d) { return "Learn how to update account type"; },
  upgradeAccountToAssignHelpText: function(d) { return "You need a teacher account to assign a curriculum. Please switch to a teacher account or update your account type."; },
  useCursorType: function(d) { return "Use " + d.type + " cursor"; },
  usingCursorType: function(d) { return "Using " + d.type + " cursor"; },
  useAiFeatures: function(d) { return "Use AI features"; },
  useAiFeaturesOnCodeOrg: function(d) { return "Use AI Features on Code.org"; },
  useCircuitPlayground: function(d) { return "Use Circuit Playground"; },
  useMicroBit: function(d) { return "Use micro:bit"; },
  usernameLabel: function(d) { return "Username: "; },
  usesAi: function(d) { return "USES AI"; },
  useToView: function(d) { return "You can use this view to:"; },
  useToViewList1: function(d) { return "Keep track of your class’s **progress on standards**"; },
  useToViewList2: function(d) { return "Update your **progress on unplugged lessons** so your report is accurate and up-to-date"; },
  useToViewList3: function(d) { return "**Generate a PDF report** to save or share with administrators or parents"; },
  usingHints: function(d) { return "Using hints"; },
  usingTooManyBlocks: function(d) { return "Using too many blocks"; },
  unassignAll: function(d) { return "Unassign All"; },
  unassignConfirm: function(d) { return "Unassign"; },
  unassignSection: function(d) { return "Unassign " + d.courseName + "?"; },
  unassignSectionConfirm: function(d) { return "Your students in " + d.sectionName + " will no longer be taken to " + d.courseName + " when they sign in."; },
  unassignedStudents: function(d) { return "Unassigned Students"; },
  uncompletedLessons: function(d) { return "Lesson not completed"; },
  unitedStates: function(d) { return "United States"; },
  unsubmit: function(d) { return "Unsubmit"; },
  unsubmitAssessment: function(d) { return "Unsubmit your assessment"; },
  unsubmitYourProject: function(d) { return "Unsubmit your project"; },
  unsubmitYourProjectConfirm: function(d) { return "Unsubmitting your project will reset the submitted date, really unsubmit?"; },
  unverifiedTeacherLockWarning: function(d) { return "This lesson is locked - you need to become a verified teacher to unlock it."; },
  unversionedRedirectWarning_June2022: function(d) { return "You've been redirected here from a link to a CSP or CSD unit that does not have a version year (e.g. /s/csp2 or /s/csd3). These links will be going away in June 2022. Please update your bookmarks to match the url you currently see in the address bar."; },
  update: function(d) { return "Update"; },
  uploadFile: function(d) { return "Upload File"; },
  useDropdownMessage: function(d) { return "Use the dropdowns below to see menus of curriculum options."; },
  usedForInfrequentUpdates: function(d) { return "Only used for infrequent updates"; },
  usingOneHint: function(d) { return "Using just one hint!"; },
  validated: function(d) { return "Validated"; },
  validationStepBoardPluggedIn: function(d) { return "Board plugged in"; },
  validationStepBoardConnectable: function(d) { return "Board connectable"; },
  validationStepBoardComponentsUsable: function(d) { return "Board components usable"; },
  validationStepUpdateMicroBitSoftware: function(d) { return "Updating micro:bit"; },
  verifyCertificates: function(d) { return "Look at your certificates first to make sure they're correct before you waste a lot of paper."; },
  verifyNotBot: function(d) { return "Are you a bot?"; },
  verifiedResourcesDetails: function(d) { return "This course provides extra resources which are only available to verified teachers."; },
  verifiedResourcesLessonDetails: function(d) { return "This lesson contains extra resources or levels which are only available to verified teachers."; },
  verifiedResourcesNotice: function(d) { return "Accessing locked lessons and answer keys"; },
  verifyStatementsforCode: function(d) { return "Please verify the following statements before you can receive a code."; },
  verifySignature: function(d) { return "By signing below you commit to teach the second semester of CS Discoveries, including Unit 6, by the '20-'21 school year."; },
  verifySingleCode: function(d) { return "I have not received or used another discount code from Code.org to purchase a Circuit Playground kit."; },
  verifyStudentCount: function(d) { return "I taught Units 1, 2, and 3 of Code.org's CS Discoveries curriculum to a classroom of at least 10 students."; },
  verifyYear: function(d) { return "I plan on teaching Unit 6 (Physical Computing) of CS Discoveries to a classroom of at least 10 students by the end of the '20-'21 school year."; },
  version: function(d) { return "Version"; },
  versionHistory_ajaxFailure: function(d) { return "An error occurred."; },
  versionHistory_clearProgress_header: function(d) { return "Clear your code and start over?"; },
  versionHistory_clearProgress_prompt: function(d) { return "Are you sure you want to restart this level? This will clear all of your code."; },
  versionHistory_clearProgress_templateLevelWarning: function(d) { return "Please note - this level shares code with other levels, so starting over here will also clear your code on the other levels."; },
  versionHistory_clearProgress_confirm: function(d) { return "Start over"; },
  versionHistory_clearProgress_cancel: function(d) { return "Cancel"; },
  versionHistory_initialVersion_label: function(d) { return "Initial version"; },
  versionHistory_header: function(d) { return "Version History"; },
  versionHistory_versionLabel: function(d) { return "Version from " + d.timestamp; },
  versionNotFound: function(d) { return "This version of this project cannot be found or is no longer available."; },
  video: function(d) { return "Video"; },
  videos: function(d) { return "Videos"; },
  view: function(d) { return "View"; },
  viewed: function(d) { return "Viewed"; },
  viewAllAnnouncements: function(d) { return "View all announcements"; },
  viewAllCourses: function(d) { return "View all courses"; },
  viewAllSections: function(d) { return "View all sections"; },
  viewArchivedSections: function(d) { return "View archived sections"; },
  viewBy: function(d) { return "View By"; },
  viewCalendarButton: function(d) { return "View calendar"; },
  viewCode: function(d) { return "View code"; },
  viewCodeDocs: function(d) { return "View Code Docs"; },
  viewCourse: function(d) { return "View course"; },
  viewCourses: function(d) { return "View courses"; },
  viewCurriculumCatalog: function(d) { return "View the curriculum catalog"; },
  viewFeedback: function(d) { return "Review feedback from your teacher"; },
  viewFeedbackButton: function(d) { return "Go to feedback"; },
  viewFeedbackDescription: function(d) { return "See all the feedback your teacher has left for you on your Code.org coursework."; },
  viewFeedbackInstructor: function(d) { return "Review feedback from your instructor"; },
  viewFeedbackInstructorDescription: function(d) { return "See all the feedback your instructor has left for you on your Code.org professional learning coursework."; },
  viewFullList: function(d) { return "View full list"; },
  viewHiddenSections: function(d) { return "View hidden sections"; },
  viewingSection: function(d) { return "Viewing section:"; },
  viewMyRecentCourses: function(d) { return "View my recent courses"; },
  viewLessonPlan: function(d) { return "View Lesson Plan"; },
  viewMyProjects: function(d) { return "View my projects"; },
  viewMore: function(d) { return "View more"; },
  viewPageAs: function(d) { return "View page as:"; },
  viewParentLetter: function(d) { return "View parent letter"; },
  viewSection: function(d) { return "View section"; },
  viewStudentResponses: function(d) { return "View student responses"; },
  viewUnitOverview: function(d) { return "View Unit Overview"; },
  visible: function(d) { return "Visible"; },
  visualizeData: function(d) { return "Visualize Data"; },
  vocabulary: function(d) { return "Vocabulary"; },
  volunteer: function(d) { return "Volunteer/Community Advocate"; },
  waitingForTeacherReview: function(d) { return "Waiting for teacher review"; },
  waitingForTeacherReviewLabel: function(d) { return "- waiting for teacher review"; },
  wantBlankCertificateTemplate: function(d) { return "Want a blank certificate template to write in your students' names?"; },
  wantToLearn: function(d) { return "Want to learn to code?"; },
  warning: function(d) { return "Warning"; },
  warningUploadingPersonalInformation: function(d) { return "Warning: Do not upload anything that contains personal information."; },
  watchVideo: function(d) { return "Watch the Video"; },
  weHaveEverything: function(d) { return "We have everything you need to know to get started with Hour of Code in your classroom!"; },
  week: function(d) { return "Week"; },
  weekDuration: function(d) { return "1.5-4 hours"; },
  weekLabel: function(d) { return "Week " + d.number; },
  weeklyLessonLayout: function(d) { return "Weekly Lesson Layout"; },
  welcomeToDanceParty: function(d) { return "Welcome to Dance Party!"; },
  whatCountry: function(d) { return "What country are you located in?"; },
  when: function(d) { return "when"; },
  whenRun: function(d) { return "when run"; },
  whenYouAreReady: function(d) { return "When you're ready..."; },
  whichCourse: function(d) { return "Assign a course so that your students go directly to the right course after signing in. Don't know which course to teach? Find a course from the courses page to assign a course to your section later."; },
  whyReport: function(d) { return "Why are you reporting this content?"; },
  whyWithQuestionMark: function(d) { return "Why?"; },
  windows: function(d) { return "Windows"; },
  withThisSprite: function(d) { return "with: this sprite"; },
  withoutHints: function(d) { return "Without using any hints!"; },
  workedWith: function(d) { return "Worked With:"; },
  workshopDate: function(d) { return "Workshop Date"; },
  workspaceHeaderShort: function(d) { return "Workspace"; },
  workspaceProjectTemplateLevel: function(d) { return "This icon means that this level is part of a larger project. Changes will be saved across these levels."; },
  wrongCourseVersionWarningNotice: function(d) { return "You’re in a newer version of this course"; },
  wrongCourseVersionWarningDetails: function(d) { return "We noticed you have progress in an older version of this course. You can go back to that version any time by using the dropdown below to select the version of the course you want."; },
  wrongUnitVersionWarningDetails: function(d) { return "We noticed you have progress in an older version of this course. You can go back to that version any time by going to the course page and selecting the version of the course you want."; },
  yes: function(d) { return "Yes"; },
  yesExcited: function(d) { return "Yes!"; },
  yesNo: function(d) { return "Yes / No"; },
  yesSure: function(d) { return "Yes, I'm sure"; },
  yesterday: function(d) { return "yesterday"; },
  you: function(d) { return "You"; },
  youCannotUndoThisAction: function(d) { return "You cannot undo this action."; },
  yourAnswer: function(d) { return "Your answer"; },
  yourEmail: function(d) { return "Private contact email"; },
  yourEmailCaps: function(d) { return "Your Email"; },
  yourEmailPlaceholder: function(d) { return "you@example.com"; },
  yourName: function(d) { return "Your name"; },
  yourNameCaps: function(d) { return "Your Name"; },
  yourResponseSubmitted: function(d) { return "Your response has been submitted!"; },
  yourSchoolAdminButton: function(d) { return "View administrator guide"; },
  yourSchoolAdminDesc: function(d) { return "View resources on how to get started or expand opportunities"; },
  yourSchoolProfessionalLearningProgramsButton: function(d) { return "View professional learning programs"; },
  yourSchoolDescription: function(d) { return "Join the thousands of schools who have already incorporated high quality computer science education into their curriculum and provide opportunities for the students in your local area."; },
  yourSchoolHeading: function(d) { return "Expand computer science at your school or district"; },
  yourSchoolMapDesc: function(d) { return "Tell us what computer science offerings are available at your local school and, if you're an educator, make a pledge to help expand that access even further! "; },
  yourSchoolParentButton: function(d) { return "Take action"; },
  yourSchoolParentDesc: function(d) { return "Take action to expand computer science in your school or district"; },
  yourSchoolTeacherButton: function(d) { return "Start teaching"; },
  yourSchoolTeacherDesc: function(d) { return "Start teaching today, no computer science experience necessary"; },
  yourSchoolTellUs: function(d) { return "Tell us about your school"; },
  yourSectionsList: function(d) { return "Your Sections"; },
  zipOrCountry: function(d) { return "ZIP code or country"; },
  zipInvalidMessage: function(d) { return "Please enter a 5 digit zip code"; }
};