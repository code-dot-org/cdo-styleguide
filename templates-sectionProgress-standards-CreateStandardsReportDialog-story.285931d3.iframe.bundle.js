/*! For license information please see templates-sectionProgress-standards-CreateStandardsReportDialog-story.285931d3.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[7629],{"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_constants=__webpack_require__("./src/constants.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/templates/MultiCheckboxSelector.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.styles=exports.default=void 0;var _immutable=_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var styles=exports.styles={header:{color:_color.default.purple,fontWeight:"normal",borderBottomWidth:1,borderBottomStyle:"solid",borderBottomColor:_color.default.purple},checkbox:{marginRight:10,marginTop:0},selectAllCheckbox:{position:"relative",bottom:4},list:{marginLeft:0},listItem:{listStyleType:"none",display:"flex",alignItems:"center",marginBottom:10}},MultiCheckboxSelector=function(_Component){function MultiCheckboxSelector(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"areAllSelected",(function(){return _immutable.default.Set(_this.props.selected).isSuperset(_this.props.items)})),_defineProperty(_this,"toggleSelectAll",(function(){_this.areAllSelected()?_this.props.onChange([]):_this.props.onChange(_this.props.items.slice())})),_defineProperty(_this,"toggle",(function(item){if(_this.props.checkById){var selectedItems=[];selectedItems=_lodash.default.map(_this.props.selected,"id").includes(item.id)?_lodash.default.remove(_this.props.selected,(function(selection){return selection.id!==item.id})):_lodash.default.concat(_this.props.selected,item),_this.props.onChange(selectedItems,item)}else{var index=_this.props.selected.indexOf(item);index>=0?_this.props.onChange([].concat(_toConsumableArray(_this.props.selected.slice(0,index)),_toConsumableArray(_this.props.selected.slice(index+1)))):_this.props.onChange(_this.props.selected.concat([item]))}})),_defineProperty(_this,"checked",(function(item){return _this.props.checkById?_lodash.default.map(_this.props.selected,"id").includes(item.id):_this.props.selected.includes(item)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MultiCheckboxSelector,_Component),MultiCheckboxSelector.prototype.render=function render(){var _this2=this;return _react.default.createElement("div",{style:this.props.style},!this.props.noHeader&&_react.default.createElement("h2",{style:styles.header},_react.default.createElement("input",{type:"checkbox",style:_objectSpread(_objectSpread({},styles.checkbox),styles.selectAllCheckbox),checked:this.areAllSelected(),onChange:this.toggleSelectAll,disabled:this.props.disabled}),this.props.header),_react.default.createElement("ul",{style:styles.list},this.props.items.map((function(item,index){return _react.default.createElement("li",{style:styles.listItem,key:index},_react.default.createElement("input",{style:styles.checkbox,type:"checkbox",checked:_this2.checked(item),onChange:function onChange(){return _this2.toggle(item)},disabled:_this2.props.disabled}),_react.default.cloneElement(_this2.props.children,_defineProperty({},_this2.props.itemPropName,item)))}))))},MultiCheckboxSelector}(_react.Component);_defineProperty(MultiCheckboxSelector,"propTypes",{header:_propTypes.default.node,selected:_propTypes.default.array,items:_propTypes.default.array,onChange:_propTypes.default.func,children:_propTypes.default.element,itemPropName:_propTypes.default.string,style:_propTypes.default.any,disabled:_propTypes.default.bool,noHeader:_propTypes.default.bool,checkById:_propTypes.default.bool}),_defineProperty(MultiCheckboxSelector,"defaultProps",{itemPropName:"item",selected:[],items:[],onChange:function onChange(){},disabled:!1});exports.default=MultiCheckboxSelector},"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var rendered=(this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact).processSync(this.props.markdown).contents,markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=_redactableMarkdown.default.create().getParser().use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHTML:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"});exports.default=SafeMarkdown;module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{"use strict";function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/templates/sectionProgress/standards/CreateStandardsReportDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UnconnectedCreateStandardsReportDialog=exports.CreateStandardsReportDialog=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_CreateStandardsReportStep=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/CreateStandardsReportStep1.jsx")),_CreateStandardsReportStep2=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/CreateStandardsReportStep2.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var CreateStandardsReportDialog=exports.CreateStandardsReportDialog=function(_Component){function CreateStandardsReportDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",{currentPage:1}),_defineProperty(_this,"handleNext",(function(){_this.setState({currentPage:_this.state.currentPage+1},_this.props.handleNext)})),_defineProperty(_this,"handleBack",(function(){_this.setState({currentPage:_this.state.currentPage-1})})),_defineProperty(_this,"handleClose",(function(){_this.setState({currentPage:1},_this.props.handleClose)})),_defineProperty(_this,"handleConfirm",(function(){_this.setState({currentPage:1},_this.props.handleConfirm)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CreateStandardsReportDialog,_Component),CreateStandardsReportDialog.prototype.render=function render(){return _react.default.createElement(_BaseDialog.default,{isOpen:this.props.isOpen,handleClose:this.handleClose,useUpdatedStyles:!0,style:styles.dialog},_react.default.createElement("h2",null,_locale.default.createStandardsReport()),1===this.state.currentPage&&_react.default.createElement(_CreateStandardsReportStep.default,{onNext:this.handleNext}),2===this.state.currentPage&&_react.default.createElement(_CreateStandardsReportStep2.default,{onBack:this.handleBack,handleConfirm:this.handleConfirm,onCommentChange:this.props.onCommentChange,sectionId:this.props.sectionId}))},CreateStandardsReportDialog}(_react.Component);_defineProperty(CreateStandardsReportDialog,"propTypes",{sectionId:_propTypes.default.number,isOpen:_propTypes.default.bool.isRequired,handleConfirm:_propTypes.default.func.isRequired,handleNext:_propTypes.default.func.isRequired,handleClose:_propTypes.default.func.isRequired,onCommentChange:_propTypes.default.func.isRequired});var styles={description:{color:_color.default.dark_charcoal},boldText:_objectSpread({},_fontConstants.default["main-font-bold"]),dialog:_objectSpread({paddingLeft:20,paddingRight:20,paddingBottom:20},_fontConstants.default["main-font-regular"])};exports.UnconnectedCreateStandardsReportDialog=CreateStandardsReportDialog},"./src/templates/sectionProgress/standards/CreateStandardsReportStep1.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedCreateStandardsReportStep1=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_sectionStandardsProgressRedux=__webpack_require__("./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_LessonStatusList=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/LessonStatusList.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var CreateStandardsReportStep1=function(_Component){function CreateStandardsReportStep1(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CreateStandardsReportStep1,_Component),CreateStandardsReportStep1.prototype.render=function render(){return _react.default.createElement("div",null,_react.default.createElement("p",null,_locale.default.createStandardsReportPage1Body()),_react.default.createElement("h3",null,_locale.default.createStandardsReportStep1()+" ",_locale.default.completedUnpluggedLessons()),this.props.unpluggedLessons.length>0&&_react.default.createElement(_LessonStatusList.default,{dialog:"CreateStandardsReportDialog"}),0===this.props.unpluggedLessons.length&&_react.default.createElement("p",{style:styles.noUnplugged},_locale.default.standardsReportNoUnpluggedLessons()),_react.default.createElement("p",null,_locale.default.pluggedLessonsNote()),_react.default.createElement(_DialogFooter.default,{rightAlign:!0},_react.default.createElement(_Button.default,{text:_locale.default.next(),onClick:this.props.onNext,color:_Button.default.ButtonColor.brandSecondaryDefault,className:"uitest-standards-generate-report-next",style:styles.button})))},CreateStandardsReportStep1}(_react.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(CreateStandardsReportStep1,"propTypes",{onNext:_propTypes.default.func.isRequired,unpluggedLessons:_propTypes.default.array.isRequired});var styles={noUnplugged:{fontStyle:"italic",fontWeight:"bold",marginTop:20,marginBottom:30},button:{margin:0}};exports.UnconnectedCreateStandardsReportStep1=CreateStandardsReportStep1,exports.default=(0,_reactRedux.connect)((function(state){return{unpluggedLessons:(0,_sectionStandardsProgressRedux.getUnpluggedLessonsForScript)(state)}}))(CreateStandardsReportStep1)},"./src/templates/sectionProgress/standards/CreateStandardsReportStep2.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedCreateStandardsReportStep2=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_sectionProgressRedux=__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js"),_urlHelpers=__webpack_require__("./src/templates/teacherDashboard/urlHelpers.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var CreateStandardsReportStep2=function(_Component){function CreateStandardsReportStep2(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"commentChanged",(function(event){var cursorPosition=event.target.selectionStart,commentBox=event.target;window.requestAnimationFrame((function(){commentBox.selectionStart=cursorPosition,commentBox.selectionEnd=cursorPosition})),_this.props.onCommentChange(event.target.value)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CreateStandardsReportStep2,_Component),CreateStandardsReportStep2.prototype.render=function render(){var _this$props=this.props,versionYear=_this$props.versionYear,familyName=_this$props.familyName,showLinkToStandardsOverview=versionYear>=2020;return _react.default.createElement("div",null,_react.default.createElement("div",{style:styles.header},_react.default.createElement("h3",null,_locale.default.createStandardsReportStep2()),_react.default.createElement("span",{style:styles.optionalText},_locale.default.optional())),_react.default.createElement(_SafeMarkdown.default,{markdown:_locale.default.createStandardsReportPrompt()}),_react.default.createElement(_SafeMarkdown.default,{markdown:_locale.default.createStandardsReportSuggestion()}),_react.default.createElement("ul",null,_react.default.createElement("li",null,_react.default.createElement(_SafeMarkdown.default,{markdown:_locale.default.createStandardsReportSuggestion1()})),_react.default.createElement("li",null,showLinkToStandardsOverview&&_react.default.createElement(_SafeMarkdown.default,{openExternalLinksInNewTab:!0,markdown:_locale.default.createStandardsReportSuggestion2Link({standardsOverviewLink:"http://curriculum.code.org/csf-".concat(versionYear.slice(-2),"/").concat(familyName,"/standards")})}),!showLinkToStandardsOverview&&_react.default.createElement(_SafeMarkdown.default,{markdown:_locale.default.createStandardsReportSuggestion2()})),_react.default.createElement("li",null,_react.default.createElement(_SafeMarkdown.default,{openExternalLinksInNewTab:!0,markdown:_locale.default.createStandardsReportSuggestion4({projectsLink:(0,_urlHelpers.teacherDashboardUrl)(this.props.sectionId,"/projects")})}))),_react.default.createElement("textarea",{type:"text",placeholder:_locale.default.createStandardsReportSampleNoteText(),value:this.props.teacherComment?this.props.teacherComment:void 0,onChange:this.commentChanged,style:styles.textArea,"aria-label":_locale.default.createStandardsReportStep2()}),_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_Button.default,{text:_locale.default.back(),onClick:this.props.onBack,color:_Button.default.ButtonColor.gray,style:styles.backButton}),_react.default.createElement(_Button.default,{text:_locale.default.createReport(),onClick:this.props.handleConfirm,color:_Button.default.ButtonColor.brandSecondaryDefault,className:"uitest-standards-generate-report-finish",style:styles.createButton})))},CreateStandardsReportStep2}(_react.Component);_defineProperty(CreateStandardsReportStep2,"propTypes",{sectionId:_propTypes.default.number,onBack:_propTypes.default.func.isRequired,handleConfirm:_propTypes.default.func.isRequired,onCommentChange:_propTypes.default.func.isRequired,teacherComment:_propTypes.default.string,versionYear:_propTypes.default.string,familyName:_propTypes.default.string});var styles={textArea:{minHeight:100,width:"95%"},header:{display:"flex",flexDirection:"row",alignItems:"center"},optionalText:{paddingLeft:10},createButton:{margin:0},backButton:{margin:0,boxShadow:"inset 0 2px 0 0 rgb(255 255 255 / 40%)"}};exports.UnconnectedCreateStandardsReportStep2=CreateStandardsReportStep2,exports.default=(0,_reactRedux.connect)((function(state){return{teacherComment:state.sectionStandardsProgress.teacherComment,versionYear:(0,_sectionProgressRedux.getCurrentUnitData)(state).version_year,familyName:(0,_sectionProgressRedux.getCurrentUnitData)(state).family_name}}))(CreateStandardsReportStep2)},"./src/templates/sectionProgress/standards/LessonStatusList.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedLessonStatusList=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_MultiCheckboxSelector=_interopRequireDefault(__webpack_require__("./src/templates/MultiCheckboxSelector.jsx")),_ProgressBoxForLessonNumber=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/ProgressBoxForLessonNumber.jsx")),_sectionStandardsProgressRedux=__webpack_require__("./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var LessonStatusList=function(_Component){function LessonStatusList(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"handleChange",(function(selectedLessons,changedLesson){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"standards",event:"update_unplugged_lesson_list",data_json:JSON.stringify({section_id:_this.props.sectionId,script_id:_this.props.scriptId,changed_lesson_id:changedLesson.id,lesson_selected:!changedLesson.completed,dialog:_this.props.dialog})},{includeUserId:!0}),_this.props.setSelectedLessons(selectedLessons)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LessonStatusList,_Component),LessonStatusList.prototype.render=function render(){var _this2=this;return this.props.unpluggedLessonList.forEach((function(lesson){return Object.assign(lesson,{sectionId:_this2.props.sectionId,scriptId:_this2.props.scriptId})})),_react.default.createElement(_MultiCheckboxSelector.default,{noHeader:!0,items:this.props.unpluggedLessonList,itemPropName:"lesson",selected:this.props.selectedLessons,checkById:!0,onChange:this.handleChange},_react.default.createElement(ComplexLessonComponent,null))},LessonStatusList}(_react.Component);_defineProperty(LessonStatusList,"propTypes",{dialog:_propTypes.default.string,unpluggedLessonList:_propTypes.default.array,setSelectedLessons:_propTypes.default.func.isRequired,selectedLessons:_propTypes.default.array.isRequired,sectionId:_propTypes.default.number,scriptId:_propTypes.default.number});var styles={lessonListItem:{display:"flex",flexDirection:"row"},links:{paddingLeft:10,color:_color.default.teal}},ComplexLessonComponent=function ComplexLessonComponent(_ref){var lesson=_ref.lesson;return _react.default.createElement("div",{style:styles.lessonListItem},_react.default.createElement("div",null,_react.default.createElement(_ProgressBoxForLessonNumber.default,{completed:lesson.completed,inProgress:lesson.inProgress,lessonNumber:lesson.number,linkToLessonPlan:lesson.url})),_react.default.createElement("a",{style:styles.links,href:lesson.url,target:"_blank",onClick:function onClick(){return function handleLessonLinkClick(lesson){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"standards",event:"click_unplugged_lesson_link",data_json:JSON.stringify({link:lesson.url,section_id:lesson.sectionId,script_id:lesson.scriptId})},{includeUserId:!0})}(lesson)}},lesson.name))};ComplexLessonComponent.propTypes={lesson:_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,number:_propTypes.default.number,url:_propTypes.default.string,completed:_propTypes.default.bool,inProgress:_propTypes.default.bool}),sectionId:_propTypes.default.number,scriptId:_propTypes.default.number};exports.UnconnectedLessonStatusList=LessonStatusList,exports.default=(0,_reactRedux.connect)((function(state){return{unpluggedLessonList:(0,_sectionStandardsProgressRedux.getUnpluggedLessonsForScript)(state),selectedLessons:state.sectionStandardsProgress.selectedLessons,sectionId:state.teacherSections.selectedSectionId,scriptId:state.unitSelection.scriptId}}),(function(dispatch){return{setSelectedLessons:function setSelectedLessons(selected){dispatch((0,_sectionStandardsProgressRedux.setSelectedLessons)(selected))}}}))(LessonStatusList)},"./src/templates/teacherDashboard/DialogFooter.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var style={aboveFooter:{height:"90px"},footer:{position:"absolute",height:"100px",padding:"0 20px",left:"0",right:"0",bottom:"0",background:"white",zIndex:"500"},buttonRow:{display:"flex",flexFlow:"row",justifyContent:"space-between"},rightAlign:{justifyContent:"flex-end"}};_defineProperty(exports.default=function(_Component){function DialogFooter(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(DialogFooter,_Component),DialogFooter.prototype.render=function render(){var buttonRowStyle=this.props.rightAlign?_objectSpread(_objectSpread({},style.buttonRow),style.rightAlign):style.buttonRow;return _react.default.createElement("div",null,_react.default.createElement("div",{style:style.aboveFooter}),_react.default.createElement("div",{style:style.footer},_react.default.createElement("hr",null),_react.default.createElement("div",{style:buttonRowStyle},this.props.children)))},DialogFooter}(_react.Component),"propTypes",{rightAlign:_propTypes.default.bool,children:_propTypes.default.any}),module.exports=exports.default},"./src/templates/teacherDashboard/urlHelpers.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.teacherDashboardUrl=exports.scriptUrlForStudent=void 0;exports.teacherDashboardUrl=function teacherDashboardUrl(sectionId){var path=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return path&&"/"!==path.charAt(0)&&(path="/${path}"),"/teacher_dashboard/sections/"+sectionId+path},exports.scriptUrlForStudent=function scriptUrlForStudent(sectionId,scriptName,studentId){return scriptName?"/s/".concat(scriptName,"?section_id=").concat(sectionId,"&user_id=").concat(studentId,"&viewAs=Instructor"):null}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/sectionProgress/standards/CreateStandardsReportDialog.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Overview=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_unitSelectionRedux=_interopRequireDefault(__webpack_require__("./src/redux/unitSelectionRedux.js")),_sectionProgressRedux=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js")),_CreateStandardsReportDialog=__webpack_require__("./src/templates/sectionProgress/standards/CreateStandardsReportDialog.jsx"),_sectionStandardsProgressRedux=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_CreateStandardsReportDialog.UnconnectedCreateStandardsReportDialog},exports.Overview=function Overview(){var store=(0,_redux.createStore)((0,_redux.combineReducers)({sectionStandardsProgress:_sectionStandardsProgressRedux.default,sectionProgress:_sectionProgressRedux.default,unitSelection:_unitSelectionRedux.default}));return _react.default.createElement(_reactRedux.Provider,{store},_react.default.createElement(_CreateStandardsReportDialog.UnconnectedCreateStandardsReportDialog,{isOpen:!0,handleConfirm:(0,_addonActions.action)("Confirm"),handleClose:(0,_addonActions.action)("Close"),handleNext:(0,_addonActions.action)("Next"),onCommentChange:(0,_addonActions.action)("Comment")}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLXNlY3Rpb25Qcm9ncmVzcy1zdGFuZGFyZHMtQ3JlYXRlU3RhbmRhcmRzUmVwb3J0RGlhbG9nLXN0b3J5LjY3YjMzMTY2LmlmcmFtZS5idW5kbGUuanMiLCJtYXBwaW5ncyI6IjttUEFBQSxJQUFBQSxXQUFBQyx1QkFBQUMsb0JBQUEsdUNBQ0FDLE9BQUFGLHVCQUFBQyxvQkFBQSxrQ0FFQUUsUUFBQUgsdUJBQUFDLG9CQUFBLHVDQUVBRyxXQUFBSCxvQkFBQSxzQkFDQUksT0FBQUwsdUJBQUFDLG9CQUFBLHdCQUVBSyxRQUFBTix1QkFBQUMsb0JBQUEsK0JBQThCLFNBQUFELHVCQUFBTyxLQUFBLE9BQUFBLEtBQUFBLElBQUFDLFdBQUFELElBQUEsU0FBQUEsSUFBQSxVQUFBRSxRQUFBQyxHQUFBLE9BQUFELFFBQUEsbUJBQUFFLFFBQUEsaUJBQUFBLE9BQUFDLFNBQUEsU0FBQUYsR0FBQSxjQUFBQSxDQUFBLFdBQUFBLEdBQUEsT0FBQUEsR0FBQSxtQkFBQUMsUUFBQUQsRUFBQUcsY0FBQUYsUUFBQUQsSUFBQUMsT0FBQUcsVUFBQSxnQkFBQUosQ0FBQSxFQUFBRCxRQUFBQyxFQUFBLFVBQUFLLFFBQUFDLEVBQUFDLEdBQUEsSUFBQUMsRUFBQUMsT0FBQUMsS0FBQUosR0FBQSxHQUFBRyxPQUFBRSxzQkFBQSxLQUFBWCxFQUFBUyxPQUFBRSxzQkFBQUwsR0FBQUMsSUFBQVAsRUFBQUEsRUFBQVksUUFBQSxTQUFBTCxHQUFBLE9BQUFFLE9BQUFJLHlCQUFBUCxFQUFBQyxHQUFBTyxVQUFBLEtBQUFOLEVBQUFPLEtBQUFDLE1BQUFSLEVBQUFSLEVBQUEsUUFBQVEsQ0FBQSxVQUFBUyxjQUFBWCxHQUFBLFFBQUFDLEVBQUEsRUFBQUEsRUFBQVcsVUFBQUMsT0FBQVosSUFBQSxLQUFBQyxFQUFBLE1BQUFVLFVBQUFYLEdBQUFXLFVBQUFYLEdBQUEsR0FBQUEsRUFBQSxFQUFBRixRQUFBSSxPQUFBRCxJQUFBLEdBQUFZLFNBQUEsU0FBQWIsR0FBQWMs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QkFBQXBnQixvQkFBQSw2RUFDQWdVLCtCQUFBalUsdUJBQUFDLG9CQUFBLCtFQUF1RSxTQUFBRCx1QkFBQU8sS0FBQSxPQUFBQSxLQUFBQSxJQUFBQyxXQUFBRCxJQUFBLFNBQUFBLElBQUEsQ0FBQThDLFFBQUFBLFFBRXhELENBQ2JpZCxVQUFXek4sNkJBQUFBLHdDQUdReFAsUUFBQUEsU0FBRyxTQUFYa2QsV0FDWCxJQUFNQyxPQUFRLEVBQUFDLE9BQUFBLGNBQ1osRUFBQUMsT0FBQUEsaUJBQWdCLENBQ2Q3SSx5QkFBQUEsK0JBQUFBLFFBQ0E4SSxnQkFBQUEsc0JBQUFBLFFBQ0F0RyxjQUFBQSxvQkFBQUEsV0FJSixPQUNFbmEsT0FBQSxRQUFBeUYsY0FBQ3FPLFlBQUE0TSxTQUFRLENBQUNKLE9BQ1J0Z0IsT0FBQSxRQUFBeUYsY0FBQzBhLDZCQUFBUSx1Q0FBMkIsQ0FDMUJ0YixRQUFNLEVBQ04yTixlQUFlLEVBQUE0TixjQUFBQSxRQUFPLFdBQ3RCNWMsYUFBYSxFQUFBNGMsY0FBQUEsUUFBTyxTQUNwQjdOLFlBQVksRUFBQTZOLGNBQUFBLFFBQU8sUUFDbkJ2TixpQkFBaUIsRUFBQXVOLGNBQUFBLFFBQU8sYUFJaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL0Jhc2VEaWFsb2cuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvTXVsdGlDaGVja2JveFNlbGVjdG9yLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL1NhZmVNYXJrZG93bi5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wbHVnaW5zL2V4dGVybmFsTGlua3MuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uUHJvZ3Jlc3Mvc3RhbmRhcmRzL0NyZWF0ZVN0YW5kYXJkc1JlcG9ydERpYWxvZy5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uUHJvZ3Jlc3Mvc3RhbmRhcmRzL0NyZWF0ZVN0YW5kYXJkc1JlcG9ydFN0ZXAxLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3NlY3Rpb25Qcm9ncmVzcy9zdGFuZGFyZHMvQ3JlYXRlU3RhbmRhcmRzUmVwb3J0U3RlcDIuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvc2VjdGlvblByb2dyZXNzL3N0YW5kYXJkcy9MZXNzb25TdGF0dXNMaXN0LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3RlYWNoZXJEYXNoYm9hcmQvRGlhbG9nRm9vdGVyLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3RlYWNoZXJEYXNoYm9hcmQvdXJsSGVscGVycy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uUHJvZ3Jlc3Mvc3RhbmRhcmRzL0NyZWF0ZVN0YW5kYXJkc1JlcG9ydERpYWxvZy5zdG9yeS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBpMThuIGZyb20gJ0BjZG8vbG9jYWxlJztcblxuaW1wb3J0IHtCQVNFX0RJQUxPR19XSURUSH0gZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCBjb2xvciBmcm9tICcuLi91dGlsL2NvbG9yJztcblxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbic7XG5cbi8qKlxuICogQmFzZURpYWxvZ1xuICogQSBnZW5lcmljIG1vZGFsIGRpYWxvZyB0aGF0IGhhcyBhbiB4LWNsb3NlIGluIHRoZSB1cHBlciByaWdodCwgYW5kIGFcbiAqIHNlbWktdHJhbnNwYXJlbnQgYmFja2Ryb3AuIENhbiBiZSBjbG9zZWQgYnkgY2xpY2tpbmcgdGhlIHgsIGNsaWNraW5nIHRoZVxuICogYmFja2Ryb3AsIG9yIHByZXNzaW5nIGVzYy5cbiAqXG4gKiBUbyB1c2UgYSBzdHlsZWQgdmVyc2lvbiBvZiB0aGlzIGNvbXBvbmVudCB0aGF0IGZvbGxvd3Mgb3VyIHN0eWxlIGd1aWRlLFxuICogdXNlIFN0eWxpemVkQmFzZURpYWxvZy5qc3guXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VEaWFsb2cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGlzT3BlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgaGFuZGxlQ2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIHVuY2xvc2VhYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBoaWRlQ2xvc2VCdXR0b246IFByb3BUeXBlcy5ib29sLFxuICAgIGhhbmRsZUtleURvd246IFByb3BUeXBlcy5mdW5jLFxuICAgIC8vIEZvciB1c2UgaW4gcmVhY3Qtc3Rvcnlib29rOyBhbGxvd3MgcmVuZGVyaW5nIGRpYWxvZyBpbmxpbmUgaW4gc3RvcnkgdGFibGVzLlxuICAgIGhpZGVCYWNrZHJvcDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnVsbFdpZHRoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmdWxsSGVpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICB1c2VVcGRhdGVkU3R5bGVzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBub01vZGFsU3R5bGVzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZml4ZWRXaWR0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBmaXhlZEhlaWdodDogUHJvcFR5cGVzLm51bWJlcixcbiAgICB1c2VGbGV4Ym94OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBib2R5SWQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYm9keUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzb3VuZFBsYXllcjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBvdmVyZmxvdzogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAvLyBUZW1wb3JhcnkgcHJvcCB1bnRpbCBBbmltYXRpb25QaWNrZXJCb2R5IGlzIHJlZGVzaWduZWRcbiAgICBiYWNrZHJvcFN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICB9O1xuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuZm9jdXNEaWFsb2coKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICB0aGlzLmZvY3VzRGlhbG9nKCk7XG4gIH1cblxuICBoYW5kbGVLZXlEb3duID0gZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICB0aGlzLmNsb3NlRGlhbG9nKCk7XG4gICAgfVxuICAgIHRoaXMucHJvcHMuaGFuZGxlS2V5RG93biAmJiB0aGlzLnByb3BzLmhhbmRsZUtleURvd24oZXZlbnQpO1xuICB9O1xuXG4gIGNsb3NlRGlhbG9nID0gKCkgPT4ge1xuICAgIGlmICghdGhpcy5wcm9wcy51bmNsb3NlYWJsZSAmJiB0aGlzLnByb3BzLmhhbmRsZUNsb3NlKSB7XG4gICAgICB0aGlzLnByb3BzLmhhbmRsZUNsb3NlKCk7XG4gICAgICBpZiAodGhpcy5wcm9wcy5zb3VuZFBsYXllcikge1xuICAgICAgICB0aGlzLnByb3BzLnNvdW5kUGxheWVyLnN0b3BBbGxBdWRpbygpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICAvKiogQHJldHVybnMge0FycmF5LjxFbGVtZW50Pn0gKi9cbiAgZ2V0VGFiYmFibGVFbGVtZW50cygpIHtcbiAgICByZXR1cm4gW10uc2xpY2UuY2FsbCh0aGlzLnJlZnMuZGlhbG9nLnF1ZXJ5U2VsZWN0b3JBbGwoJ2EsYnV0dG9uLGlucHV0JykpO1xuICB9XG5cbiAgZm9jdXNEaWFsb2coKSB7XG4gICAgLy8gRG9uJ3Qgc3RlYWwgZm9jdXMgaWYgdGhlIGFjdGl2ZSBlbGVtZW50IGlzIGFscmVhZHkgYSBkZXNjZW5kYW50IG9mIHRoZVxuICAgIC8vIGRpYWxvZyAtIHByZXZlbnRzIGZvY3VzIGxvc3Mgb24gdXBkYXRlcyBvZiBvcGVuIEJhc2VEaWFsb2cgY29tcG9uZW50cy5cbiAgICBjb25zdCBkZXNjZW5kYW50SXNBY3RpdmUgPVxuICAgICAgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJlxuICAgICAgdGhpcy5yZWZzLmRpYWxvZyAmJlxuICAgICAgdGhpcy5yZWZzLmRpYWxvZy5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KTtcbiAgICBpZiAodGhpcy5wcm9wcy5pc09wZW4gJiYgIWRlc2NlbmRhbnRJc0FjdGl2ZSkge1xuICAgICAgdGhpcy5yZWZzLmRpYWxvZy5mb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBpZiAoIXRoaXMucHJvcHMuaXNPcGVuICYmICF0aGlzLnByb3BzLmhpZGVCYWNrZHJvcCkge1xuICAgICAgcmV0dXJuIDxkaXYgLz47XG4gICAgfVxuXG4gICAgbGV0IGJvZHlTdHlsZSwgbW9kYWxCb2R5U3R5bGUsIHhDbG9zZVN0eWxlO1xuICAgIGlmICh0aGlzLnByb3BzLmZ1bGxXaWR0aCkge1xuICAgICAgYm9keVN0eWxlID0ge1xuICAgICAgICAuLi5ib2R5U3R5bGUsXG4gICAgICAgIHdpZHRoOiAnOTAlJyxcbiAgICAgICAgbWFyZ2luTGVmdDogJy00NSUnLFxuICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHRoaXMucHJvcHMuZnVsbEhlaWdodCkge1xuICAgICAgYm9keVN0eWxlID0ge1xuICAgICAgICAuLi5ib2R5U3R5bGUsXG4gICAgICAgIGhlaWdodDogJzgwJScsXG4gICAgICB9O1xuICAgICAgbW9kYWxCb2R5U3R5bGUgPSB7XG4gICAgICAgIC4uLm1vZGFsQm9keVN0eWxlLFxuICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgbGV0IHdyYXBwZXJDbGFzc05hbWVzID0gJyc7XG4gICAgbGV0IG1vZGFsQ2xhc3NOYW1lcyA9ICdtb2RhbCc7XG4gICAgbGV0IG1vZGFsQm9keUNsYXNzTmFtZXMgPSAnbW9kYWwtYm9keSc7XG4gICAgbGV0IG1vZGFsQmFja2Ryb3BDbGFzc05hbWVzID0gJ21vZGFsLWJhY2tkcm9wJztcbiAgICBjb25zdCBvdmVyZmxvd1ggPSB0aGlzLnByb3BzLm92ZXJmbG93IHx8ICdoaWRkZW4nO1xuICAgIGNvbnN0IG92ZXJmbG93WSA9XG4gICAgICB0aGlzLnByb3BzLm92ZXJmbG93IHx8XG4gICAgICAodGhpcy5wcm9wcy5maXhlZEhlaWdodCB8fCB0aGlzLnByb3BzLmZ1bGxIZWlnaHQgPyAnaGlkZGVuJyA6ICdhdXRvJyk7XG5cbiAgICBpZiAodGhpcy5wcm9wcy51c2VVcGRhdGVkU3R5bGVzKSB7XG4gICAgICB3cmFwcGVyQ2xhc3NOYW1lcyA9ICdkYXNoYm9hcmQtc3R5bGVzJztcbiAgICAgIG1vZGFsQm9keUNsYXNzTmFtZXMgPSAnJztcbiAgICAgIG1vZGFsQm9keVN0eWxlID0ge1xuICAgICAgICBiYWNrZ3JvdW5kOiAnI2ZmZicsXG4gICAgICAgIGhlaWdodDogdGhpcy5wcm9wcy5maXhlZEhlaWdodCxcbiAgICAgICAgbWF4SGVpZ2h0OiAhdGhpcy5wcm9wcy5maXhlZEhlaWdodCAmJiAnODB2aCcsXG4gICAgICAgIG92ZXJmbG93WDogb3ZlcmZsb3dYLFxuICAgICAgICBvdmVyZmxvd1k6IG92ZXJmbG93WSxcbiAgICAgICAgYm9yZGVyUmFkaXVzOiA0LFxuICAgICAgfTtcbiAgICAgIGlmICh0aGlzLnByb3BzLnVzZUZsZXhib3gpIHtcbiAgICAgICAgbW9kYWxCb2R5U3R5bGUgPSB7XG4gICAgICAgICAgLi4ubW9kYWxCb2R5U3R5bGUsXG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgYm9keVN0eWxlID0ge1xuICAgICAgICAuLi5ib2R5U3R5bGUsXG4gICAgICAgIHdpZHRoOiB0aGlzLnByb3BzLmZpeGVkV2lkdGggfHwgQkFTRV9ESUFMT0dfV0lEVEgsXG4gICAgICAgIG1hcmdpbkxlZnQ6IC10aGlzLnByb3BzLmZpeGVkV2lkdGggLyAyIHx8IC0zNTAsXG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAodGhpcy5wcm9wcy5ub01vZGFsU3R5bGVzKSB7XG4gICAgICBtb2RhbENsYXNzTmFtZXMgPSAnJztcbiAgICAgIG1vZGFsQm9keUNsYXNzTmFtZXMgPSAnJztcbiAgICB9XG5cbiAgICBib2R5U3R5bGUgPSB7XG4gICAgICAuLi5ib2R5U3R5bGUsXG4gICAgICAuLi4odGhpcy5wcm9wcy5oaWRlQmFja2Ryb3AgJiYge1xuICAgICAgICBwb3NpdGlvbjogJ2luaXRpYWwnLFxuICAgICAgICBtYXJnaW5MZWZ0OiAwLFxuICAgICAgfSksXG4gICAgICAuLi50aGlzLnByb3BzLnN0eWxlLFxuICAgIH07XG4gICAgeENsb3NlU3R5bGUgPSB7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHRvcDogMCxcbiAgICAgIHJpZ2h0OiAwLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIGNvbG9yOiBjb2xvci5uZXV0cmFsX2RhcmszMCxcbiAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgZm9udFNpemU6IDI0LFxuICAgICAgYm9yZGVyOiAnbm9uZScsXG4gICAgfTtcblxuICAgIG1vZGFsQm9keUNsYXNzTmFtZXMgPSBbbW9kYWxCb2R5Q2xhc3NOYW1lcywgdGhpcy5wcm9wcy5ib2R5Q2xhc3NOYW1lXVxuICAgICAgLmZpbHRlcihjbGFzc05hbWUgPT4gISFjbGFzc05hbWUpXG4gICAgICAuam9pbignICcpO1xuXG4gICAgbGV0IGJvZHkgPSAoXG4gICAgICA8ZGl2XG4gICAgICAgIHN0eWxlPXtib2R5U3R5bGV9XG4gICAgICAgIHRhYkluZGV4PVwiLTFcIlxuICAgICAgICBjbGFzc05hbWU9e21vZGFsQ2xhc3NOYW1lc31cbiAgICAgICAgcmVmPVwiZGlhbG9nXCJcbiAgICAgICAgb25LZXlEb3duPXt0aGlzLmhhbmRsZUtleURvd259XG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBzdHlsZT17bW9kYWxCb2R5U3R5bGV9XG4gICAgICAgICAgaWQ9e3RoaXMucHJvcHMuYm9keUlkfVxuICAgICAgICAgIGNsYXNzTmFtZT17bW9kYWxCb2R5Q2xhc3NOYW1lc31cbiAgICAgICAgPlxuICAgICAgICAgIHshdGhpcy5wcm9wcy51bmNsb3NlYWJsZSAmJiAhdGhpcy5wcm9wcy5oaWRlQ2xvc2VCdXR0b24gJiYgKFxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICBpZD1cIngtY2xvc2VcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmNsb3NlRGlhbG9nfVxuICAgICAgICAgICAgICBpY29uPVwiZmEtc29saWQgZmEteG1hcmtcIlxuICAgICAgICAgICAgICBzdHlsZT17eENsb3NlU3R5bGV9XG4gICAgICAgICAgICAgIGNvbG9yPVwid2hpdGVcIlxuICAgICAgICAgICAgICBhcmlhLWxhYmVsPXtpMThuLmNsb3NlRGlhbG9nKCl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcblxuICAgIGlmICh0aGlzLnByb3BzLmhpZGVCYWNrZHJvcCkge1xuICAgICAgcmV0dXJuIGJvZHk7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXt3cmFwcGVyQ2xhc3NOYW1lc30+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9e21vZGFsQmFja2Ryb3BDbGFzc05hbWVzfVxuICAgICAgICAgIHN0eWxlPXt0aGlzLnByb3BzLmJhY2tkcm9wU3R5bGV9XG4gICAgICAgICAgb25DbGljaz17dGhpcy5jbG9zZURpYWxvZ31cbiAgICAgICAgLz5cbiAgICAgICAge2JvZHl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iLCJpbXBvcnQgSW1tdXRhYmxlIGZyb20gJ2ltbXV0YWJsZSc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgY29sb3IgZnJvbSAnLi4vdXRpbC9jb2xvcic7XG5cbmNvbnN0IE1BUkdJTiA9IDEwO1xuZXhwb3J0IGNvbnN0IHN0eWxlcyA9IHtcbiAgaGVhZGVyOiB7XG4gICAgY29sb3I6IGNvbG9yLnB1cnBsZSxcbiAgICBmb250V2VpZ2h0OiAnbm9ybWFsJyxcbiAgICBib3JkZXJCb3R0b21XaWR0aDogMSxcbiAgICBib3JkZXJCb3R0b21TdHlsZTogJ3NvbGlkJyxcbiAgICBib3JkZXJCb3R0b21Db2xvcjogY29sb3IucHVycGxlLFxuICB9LFxuICBjaGVja2JveDoge1xuICAgIG1hcmdpblJpZ2h0OiBNQVJHSU4sXG4gICAgbWFyZ2luVG9wOiAwLFxuICB9LFxuICBzZWxlY3RBbGxDaGVja2JveDoge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIGJvdHRvbTogNCxcbiAgfSxcbiAgbGlzdDoge1xuICAgIG1hcmdpbkxlZnQ6IDAsXG4gIH0sXG4gIGxpc3RJdGVtOiB7XG4gICAgbGlzdFN0eWxlVHlwZTogJ25vbmUnLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBtYXJnaW5Cb3R0b206IE1BUkdJTixcbiAgfSxcbn07XG5cbmNsYXNzIE11bHRpQ2hlY2tib3hTZWxlY3RvciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgaGVhZGVyOiBQcm9wVHlwZXMubm9kZSxcbiAgICBzZWxlY3RlZDogUHJvcFR5cGVzLmFycmF5LFxuICAgIGl0ZW1zOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuZWxlbWVudCxcbiAgICBpdGVtUHJvcE5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5hbnksXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIG5vSGVhZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAvLyBGb3IgY2FzZXMgd2hlcmUgaXRlbXMgYXJlIG9iamVjdHMgYW5kIHdlIG5lZWQgdG8gZG8gYSBkZWVwIGNvbXBhcmlzb24gdG9cbiAgICAvLyBkZXRlcm1pbmUgaWYgdGhleSdyZSBzZWxlY3RlZC5cbiAgICBjaGVja0J5SWQ6IFByb3BUeXBlcy5ib29sLFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaXRlbVByb3BOYW1lOiAnaXRlbScsXG4gICAgc2VsZWN0ZWQ6IFtdLFxuICAgIGl0ZW1zOiBbXSxcbiAgICBvbkNoYW5nZTogKCkgPT4ge30sXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICB9O1xuXG4gIGFyZUFsbFNlbGVjdGVkID0gKCkgPT4ge1xuICAgIHJldHVybiBJbW11dGFibGUuU2V0KHRoaXMucHJvcHMuc2VsZWN0ZWQpLmlzU3VwZXJzZXQodGhpcy5wcm9wcy5pdGVtcyk7XG4gIH07XG5cbiAgdG9nZ2xlU2VsZWN0QWxsID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLmFyZUFsbFNlbGVjdGVkKCkpIHtcbiAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoW10pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKHRoaXMucHJvcHMuaXRlbXMuc2xpY2UoKSk7XG4gICAgfVxuICB9O1xuXG4gIHRvZ2dsZSA9IGl0ZW0gPT4ge1xuICAgIGlmICh0aGlzLnByb3BzLmNoZWNrQnlJZCkge1xuICAgICAgbGV0IHNlbGVjdGVkSXRlbXMgPSBbXTtcbiAgICAgIGlmIChfLm1hcCh0aGlzLnByb3BzLnNlbGVjdGVkLCAnaWQnKS5pbmNsdWRlcyhpdGVtLmlkKSkge1xuICAgICAgICBzZWxlY3RlZEl0ZW1zID0gXy5yZW1vdmUodGhpcy5wcm9wcy5zZWxlY3RlZCwgZnVuY3Rpb24gKHNlbGVjdGlvbikge1xuICAgICAgICAgIHJldHVybiBzZWxlY3Rpb24uaWQgIT09IGl0ZW0uaWQ7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZWN0ZWRJdGVtcyA9IF8uY29uY2F0KHRoaXMucHJvcHMuc2VsZWN0ZWQsIGl0ZW0pO1xuICAgICAgfVxuICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZShzZWxlY3RlZEl0ZW1zLCBpdGVtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnByb3BzLnNlbGVjdGVkLmluZGV4T2YoaXRlbSk7XG4gICAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgICAvLyByZW1vdmUgaXRcbiAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZShbXG4gICAgICAgICAgLi4udGhpcy5wcm9wcy5zZWxlY3RlZC5zbGljZSgwLCBpbmRleCksXG4gICAgICAgICAgLi4udGhpcy5wcm9wcy5zZWxlY3RlZC5zbGljZShpbmRleCArIDEpLFxuICAgICAgICBdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGFkZCBpdFxuICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKHRoaXMucHJvcHMuc2VsZWN0ZWQuY29uY2F0KFtpdGVtXSkpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBjaGVja2VkID0gaXRlbSA9PiB7XG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY2hlY2tCeUlkXG4gICAgICA/IF8ubWFwKHRoaXMucHJvcHMuc2VsZWN0ZWQsICdpZCcpLmluY2x1ZGVzKGl0ZW0uaWQpXG4gICAgICA6IHRoaXMucHJvcHMuc2VsZWN0ZWQuaW5jbHVkZXMoaXRlbSk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXt0aGlzLnByb3BzLnN0eWxlfT5cbiAgICAgICAgeyF0aGlzLnByb3BzLm5vSGVhZGVyICYmIChcbiAgICAgICAgICA8aDIgc3R5bGU9e3N0eWxlcy5oZWFkZXJ9PlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICAgIHN0eWxlPXt7Li4uc3R5bGVzLmNoZWNrYm94LCAuLi5zdHlsZXMuc2VsZWN0QWxsQ2hlY2tib3h9fVxuICAgICAgICAgICAgICBjaGVja2VkPXt0aGlzLmFyZUFsbFNlbGVjdGVkKCl9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnRvZ2dsZVNlbGVjdEFsbH1cbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e3RoaXMucHJvcHMuZGlzYWJsZWR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAge3RoaXMucHJvcHMuaGVhZGVyfVxuICAgICAgICAgIDwvaDI+XG4gICAgICAgICl9XG4gICAgICAgIDx1bCBzdHlsZT17c3R5bGVzLmxpc3R9PlxuICAgICAgICAgIHt0aGlzLnByb3BzLml0ZW1zLm1hcCgoaXRlbSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgIDxsaSBzdHlsZT17c3R5bGVzLmxpc3RJdGVtfSBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5jaGVja2JveH1cbiAgICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuY2hlY2tlZChpdGVtKX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4gdGhpcy50b2dnbGUoaXRlbSl9XG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3RoaXMucHJvcHMuZGlzYWJsZWR9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIHtSZWFjdC5jbG9uZUVsZW1lbnQodGhpcy5wcm9wcy5jaGlsZHJlbiwge1xuICAgICAgICAgICAgICAgIFt0aGlzLnByb3BzLml0ZW1Qcm9wTmFtZV06IGl0ZW0sXG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTXVsdGlDaGVja2JveFNlbGVjdG9yO1xuIiwiaW1wb3J0IFBhcnNlciBmcm9tICdAY29kZS1kb3Qtb3JnL3JlZGFjdGFibGUtbWFya2Rvd24nO1xuaW1wb3J0IHtcbiAgZGV0YWlscyxcbiAgY2xpY2thYmxlVGV4dCxcbiAgZXhwYW5kYWJsZUltYWdlcyxcbiAgdmlzdWFsQ29kZUJsb2NrLFxuICB4bWxBc1RvcExldmVsQmxvY2ssXG59IGZyb20gJ0Bjb2RlLWRvdC1vcmcvcmVtYXJrLXBsdWdpbnMnO1xuaW1wb3J0IGRlZmF1bHRTYW5pdGl6YXRpb25TY2hlbWEgZnJvbSAnaGFzdC11dGlsLXNhbml0aXplL2xpYi9naXRodWIuanNvbic7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCByZWh5cGVSYXcgZnJvbSAncmVoeXBlLXJhdyc7XG5pbXBvcnQgcmVoeXBlUmVhY3QgZnJvbSAncmVoeXBlLXJlYWN0JztcbmltcG9ydCByZWh5cGVTYW5pdGl6ZSBmcm9tICdyZWh5cGUtc2FuaXRpemUnO1xuaW1wb3J0IHJlbWFya1JlaHlwZSBmcm9tICdyZW1hcmstcmVoeXBlJztcblxuaW1wb3J0IGV4dGVybmFsTGlua3MgZnJvbSAnLi9wbHVnaW5zL2V4dGVybmFsTGlua3MnO1xuXG4vKipcbiAqIEJhc2ljIGNvbXBvbmVudCBmb3IgcmVuZGVyaW5nIGEgbWFya2Rvd24gc3RyaW5nIGFzIEhUTUwsIHdpdGggc2FuaXRpemF0aW9uLlxuICogQ2FuIHNhZmVseSByZW5kZXIgbWFya2Rvd24gZXZlbiBmcm9tIHVudHJ1c3RlZCBzb3VyY2VzLCB3aXRob3V0IHBvdGVudGlhbGx5XG4gKiBleHBvc2luZyB1cyB0byBhbiBYU1MgaW5qZWN0aW9uLlxuICovXG5jbGFzcyBTYWZlTWFya2Rvd24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIG1hcmtkb3duOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgb3BlbkV4dGVybmFsTGlua3NJbk5ld1RhYjogUHJvcFR5cGVzLmJvb2wsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICAvLyBXZSBvbmx5IG9wZW4gZXh0ZXJuYWwgbGlua3MgaW4gYSBuZXcgdGFiIGlmIGl0J3MgZXhwbGljaXRseSBzcGVjaWZpZWRcbiAgICAvLyB0aGF0IHdlIGRvIHNvOyB0aGlzIGlzIGFic29sdXRlbHkgbm90IHNvbWV0aGluZyB3ZSB3YW50IHRvIGRvIGFzIGFcbiAgICAvLyBnZW5lcmFsIHByYWN0aWNlLCBidXQgdW5mb3J0dW5hdGVseSB0aGVyZSBhcmUgc29tZSBzaXR1YXRpb25zIGluIHdoaWNoXG4gICAgLy8gaXQgaXMgY3VycmVudGx5IGEgcmVxdWlyZW1lbnQuXG4gICAgY29uc3QgcGFyc2VyID0gdGhpcy5wcm9wcy5vcGVuRXh0ZXJuYWxMaW5rc0luTmV3VGFiXG4gICAgICA/IG1hcmtkb3duVG9SZWFjdEV4dGVybmFsTGlua3NcbiAgICAgIDogbWFya2Rvd25Ub1JlYWN0O1xuXG4gICAgY29uc3QgcmVuZGVyZWQgPSBwYXJzZXIucHJvY2Vzc1N5bmModGhpcy5wcm9wcy5tYXJrZG93bikuY29udGVudHM7XG5cbiAgICBjb25zdCBtYXJrZG93blByb3BzID0ge307XG4gICAgaWYgKHRoaXMucHJvcHMuY2xhc3NOYW1lKSB7XG4gICAgICBtYXJrZG93blByb3BzLmNsYXNzTmFtZSA9IHRoaXMucHJvcHMuY2xhc3NOYW1lO1xuICAgIH1cbiAgICAvLyByZWh5cGUtcmVhY3Qgd2lsbCBvbmx5IHdyYXAgdGhlIGNvbXBpbGVkIG1hcmtkb3duIGluIGEgPGRpdj4gdGFnXG4gICAgLy8gaWYgaXQgbmVlZHMgdG8gKGllLCBpZiB0aGVyZSB3b3VsZCBvdGhlcndpc2UgYmUgbXVsdGlwbGUgZWxlbWVudHNcbiAgICAvLyByZXR1cm5lZCkgb3Igd2UncmUgYXNzaWduaW5nIHByb3BzLiBXZSBwcmVmZXIgY29uc2lzdGVuY3kgb3ZlciBmbGV4aWJpbGl0eSxcbiAgICAvLyBzbyBoZXJlIHdlIHdyYXAgdGhlIHJlc3VsdCBpbiBhIGRpdiBpZiBpdCB3YXNuJ3QgYWxyZWFkeVxuICAgIGlmIChcbiAgICAgIHJlbmRlcmVkICYmXG4gICAgICByZW5kZXJlZC50eXBlID09PSAnZGl2JyAmJlxuICAgICAgIU9iamVjdC5rZXlzKG1hcmtkb3duUHJvcHMpLmxlbmd0aFxuICAgICkge1xuICAgICAgcmV0dXJuIHJlbmRlcmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gPGRpdiB7Li4ubWFya2Rvd25Qcm9wc30+e3JlbmRlcmVkfTwvZGl2PjtcbiAgICB9XG4gIH1cbn1cblxuLy8gY3JlYXRlIGN1c3RvbSBzYW5pdGl6YXRpb24gc2NoZW1hIGFzIHBlclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3N5bnRheC10cmVlL2hhc3QtdXRpbC1zYW5pdGl6ZSNzY2hlbWFcbi8vIHRvIHN1cHBvcnQgb3VyIGN1c3RvbSBzeW50YXhlc1xuY29uc3Qgc2NoZW1hID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdFNhbml0aXphdGlvblNjaGVtYSk7XG5cbi8vIFdlIHVzZSBhIF9sb3RfIG9mIGltYWdlIGZvcm1hdHRpbmcgc3R1ZmYgaW4gb3VyXG4vLyBpbnN0cnVjdGlvbnMsIHBhcnRpY3VsYXJseSBpbiBDU1BcbnNjaGVtYS5hdHRyaWJ1dGVzLmltZy5wdXNoKCdoZWlnaHQnLCAnd2lkdGgnKTtcblxuLy8gQWRkIHN1cHBvcnQgZm9yIGV4cGFuZGFibGVJbWFnZXNcbnNjaGVtYS50YWdOYW1lcy5wdXNoKCdzcGFuJyk7XG5zY2hlbWEuYXR0cmlidXRlcy5zcGFuID0gWydkYXRhVXJsJywgJ2NsYXNzTmFtZSddO1xuXG4vLyBBZGQgc3VwcG9ydCBmb3IgaW5saW5lIHN0eWxlcyAoZ3Jvc3MpXG4vLyBUT0RPIHJlcGxhY2UgYWxsIGlubGluZSBzdHlsZXMgaW4gb3VyIGN1cnJpY3VsdW0gY29udGVudCB3aXRoXG4vLyBzZW1hbnRpY2FsbHktc2lnbmlmaWNhbnQgY29udGVudFxuc2NoZW1hLmF0dHJpYnV0ZXNbJyonXS5wdXNoKCdzdHlsZScsICdjbGFzc05hbWUnKTtcblxuLy8gQ2xpY2thYmxlVGV4dCB1c2VzIGRhdGEtaWQgb24gYSBib2xkIHRhZy5cbnNjaGVtYS5hdHRyaWJ1dGVzWydiJ10gPSBbJ2RhdGFJZCddO1xuXG4vLyBBZGQgc3VwcG9ydCBmb3IgQmxvY2tseSBYTUxcbnNjaGVtYS5jbG9iYmVyID0gW107XG5jb25zdCBibG9ja2x5VGFncyA9IFtcbiAgJ2Jsb2NrJyxcbiAgJ2Z1bmN0aW9uYWxfaW5wdXQnLFxuICAnbXV0YXRpb24nLFxuICAnbmV4dCcsXG4gICdzdGF0ZW1lbnQnLFxuICAndGl0bGUnLFxuICAnZmllbGQnLFxuICAndmFsdWUnLFxuICAneG1sJyxcbl07XG5zY2hlbWEudGFnTmFtZXMgPSBzY2hlbWEudGFnTmFtZXMuY29uY2F0KGJsb2NrbHlUYWdzKTtcbmxldCBibG9ja2x5Q29tcG9uZW50V3JhcHBlcnMgPSB7fTtcbmJsb2NrbHlUYWdzLmZvckVhY2godGFnID0+IHtcbiAgc2NoZW1hLmF0dHJpYnV0ZXNbdGFnXSA9IFsnYmxvY2tfdGV4dCcsICdpZCcsICdpbmxpbmUnLCAnbmFtZScsICd0eXBlJ107XG5cbiAgLy8gQ3JlYXRlIGEgUmVhY3QgY29tcG9uZW50IHRvIHdyYXAgZWFjaCBCbG9ja2x5IHRhZy4gU2luY2UgdGhlc2UgZWxlbWVudHMgdWx0aW1hdGVseVxuICAvLyByZW5kZXIgYXMgUmVhY3QgY29tcG9uZW50cywgY3JlYXRpbmcgYSB3cmFwcGVyIG1ha2VzIHRoZW0gdmFsaWQgKHdoZXJlYXMgPHhtbD5cbiAgLy8gaXMgbm90IGEgdmFsaWQgUmVhY3QgdGFnKS5cbiAgYmxvY2tseUNvbXBvbmVudFdyYXBwZXJzW3RhZ10gPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICBjb25zdCBCbG9ja2x5RWxlbWVudCA9IHRhZztcbiAgICAvLyBUaGUgXCJpc1wiIGF0dHJpYnV0ZSBwcmV2ZW50cyBSZWFjdCBmcm9tIHdhcm5pbmcgYWJvdXQgdW5yZWNvZ25pemVkIHRhZ3M6XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xMTE4NCNpc3N1ZWNvbW1lbnQtMzM1OTQyNDM5XG4gICAgcmV0dXJuIDxCbG9ja2x5RWxlbWVudCBpcz17dGFnfSB7Li4ucHJvcHN9IC8+O1xuICB9O1xufSk7XG5cbmNvbnN0IG1hcmtkb3duVG9SZWFjdCA9IFBhcnNlci5jcmVhdGUoKVxuICAuZ2V0UGFyc2VyKClcbiAgLy8gaW5jbHVkZSBjdXN0b20gcGx1Z2luc1xuICAudXNlKFtcbiAgICBjbGlja2FibGVUZXh0LFxuICAgIGV4cGFuZGFibGVJbWFnZXMsXG4gICAgdmlzdWFsQ29kZUJsb2NrLFxuICAgIHhtbEFzVG9wTGV2ZWxCbG9jayxcbiAgICBkZXRhaWxzLFxuICBdKVxuICAvLyBjb252ZXJ0IG1hcmtkb3duIHRvIGFuIEhUTUwgQWJzdHJhY3QgU3ludGF4IFRyZWUgKEhBU1QpXG4gIC51c2UocmVtYXJrUmVoeXBlLCB7XG4gICAgLy8gaW5jbHVkZSBhbnkgcmF3IEhUTUwgaW4gdGhlIG1hcmtkb3duIGFzIHJhdyBIVE1MIG5vZGVzIGluIHRoZSBIQVNUXG4gICAgYWxsb3dEYW5nZXJvdXNIVE1MOiB0cnVlLFxuICB9KVxuICAvLyBwYXJzZSB0aGUgcmF3IEhUTUwgbm9kZXMgaW4gdGhlIEhBU1QgdG8gYWN0dWFsIEhBU1Qgbm9kZXNcbiAgLnVzZShyZWh5cGVSYXcpXG4gIC8vIHNhbml0aXplIHRoZSBIQVNUXG4gIC51c2UocmVoeXBlU2FuaXRpemUsIHNjaGVtYSlcbiAgLy8gY29udmVydCB0aGUgSEFTVCB0byBSZWFjdFxuICAudXNlKHJlaHlwZVJlYWN0LCB7XG4gICAgY3JlYXRlRWxlbWVudDogUmVhY3QuY3JlYXRlRWxlbWVudCxcbiAgICAvLyBVc2UgUmVhY3QgY29tcG9uZW50IHdyYXBwZXJzIGZvciBCbG9ja2x5IFhNTCBlbGVtZW50cyB0byBwcmV2ZW50XG4gICAgLy8gUmVhY3QgZnJvbSB3YXJuaW5nIHVzIGFib3V0IGludmFsaWQgY29tcG9uZW50cy5cbiAgICBjb21wb25lbnRzOiBibG9ja2x5Q29tcG9uZW50V3JhcHBlcnMsXG4gIH0pO1xuXG5jb25zdCBtYXJrZG93blRvUmVhY3RFeHRlcm5hbExpbmtzID0gbWFya2Rvd25Ub1JlYWN0KCkudXNlKGV4dGVybmFsTGlua3MsIHtcbiAgbGlua3M6ICdhbGwnLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFNhZmVNYXJrZG93bjtcbiIsIi8qKlxuICogT3BlbiBleHRlcm5hbCBsaW5rcyBpbiBhIG5ldyB0YWIuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGV4dGVybmFsTGlua3Mob3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IFBhcnNlciA9IHRoaXMuUGFyc2VyO1xuICBjb25zdCB0b2tlbml6ZXJzID0gUGFyc2VyLnByb3RvdHlwZS5pbmxpbmVUb2tlbml6ZXJzO1xuICBjb25zdCBvcmlnaW5hbCA9IHRva2VuaXplcnMubGluaztcbiAgY29uc3QgYWxsID0gb3B0aW9ucy5saW5rcyA9PT0gJ2FsbCc7XG5cbiAgdG9rZW5pemVycy5saW5rID0gZnVuY3Rpb24gKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICAgIGNvbnN0IGxpbmsgPSBvcmlnaW5hbC5jYWxsKHRoaXMsIGVhdCwgdmFsdWUsIHNpbGVudCk7XG4gICAgaWYgKGxpbmsgJiYgbGluay50eXBlID09PSAnbGluaycgJiYgKGFsbCB8fCBpc0V4dGVybmFsTGluayhsaW5rLnVybCkpKSB7XG4gICAgICBsaW5rLmRhdGEgPSBsaW5rLmRhdGEgfHwge307XG4gICAgICBsaW5rLmRhdGEuaFByb3BlcnRpZXMgPSBsaW5rLmRhdGEuaFByb3BlcnRpZXMgfHwge307XG5cbiAgICAgIGNvbnN0IHByb3BzID0gbGluay5kYXRhLmhQcm9wZXJ0aWVzO1xuICAgICAgcHJvcHMudGFyZ2V0ID0gcHJvcHMudGFyZ2V0IHx8ICdfYmxhbmsnO1xuICAgICAgcHJvcHMucmVsID0gJ25vcmVmZXJyZXIgbm9vcGVuZXInO1xuICAgIH1cblxuICAgIHJldHVybiBsaW5rO1xuICB9O1xuICB0b2tlbml6ZXJzLmxpbmsubG9jYXRvciA9IG9yaWdpbmFsLmxvY2F0b3I7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0V4dGVybmFsTGluayh1cmwpIHtcbiAgcmV0dXJuICEvaHR0cHM/OlxcL1xcLyhbXi5dK1xcLikqY29kZS5vcmcoOlswLTldKyk/XFwvLy50ZXN0KGZ1bGx5UXVhbGlmaWVkKHVybCkpO1xufVxuXG5sZXQgYTtcbmZ1bmN0aW9uIGZ1bGx5UXVhbGlmaWVkKHBhdGgpIHtcbiAgYSA9IGEgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICBhLmhyZWYgPSBwYXRoO1xuICByZXR1cm4gYS5ocmVmO1xufVxuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgZm9udENvbnN0YW50cyBmcm9tICdAY2RvL2FwcHMvZm9udENvbnN0YW50cyc7XG5pbXBvcnQgY29sb3IgZnJvbSAnQGNkby9hcHBzL3V0aWwvY29sb3InO1xuaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuXG5pbXBvcnQgQmFzZURpYWxvZyBmcm9tICcuLi8uLi9CYXNlRGlhbG9nJztcblxuaW1wb3J0IENyZWF0ZVN0YW5kYXJkc1JlcG9ydFN0ZXAxIGZyb20gJy4vQ3JlYXRlU3RhbmRhcmRzUmVwb3J0U3RlcDEnO1xuaW1wb3J0IENyZWF0ZVN0YW5kYXJkc1JlcG9ydFN0ZXAyIGZyb20gJy4vQ3JlYXRlU3RhbmRhcmRzUmVwb3J0U3RlcDInO1xuXG5leHBvcnQgY2xhc3MgQ3JlYXRlU3RhbmRhcmRzUmVwb3J0RGlhbG9nIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBzZWN0aW9uSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgaXNPcGVuOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIGhhbmRsZUNvbmZpcm06IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgaGFuZGxlTmV4dDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBoYW5kbGVDbG9zZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBvbkNvbW1lbnRDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIH07XG5cbiAgc3RhdGUgPSB7XG4gICAgY3VycmVudFBhZ2U6IDEsXG4gIH07XG5cbiAgaGFuZGxlTmV4dCA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKFxuICAgICAge2N1cnJlbnRQYWdlOiB0aGlzLnN0YXRlLmN1cnJlbnRQYWdlICsgMX0sXG4gICAgICB0aGlzLnByb3BzLmhhbmRsZU5leHRcbiAgICApO1xuICB9O1xuXG4gIGhhbmRsZUJhY2sgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7Y3VycmVudFBhZ2U6IHRoaXMuc3RhdGUuY3VycmVudFBhZ2UgLSAxfSk7XG4gIH07XG5cbiAgaGFuZGxlQ2xvc2UgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7Y3VycmVudFBhZ2U6IDF9LCB0aGlzLnByb3BzLmhhbmRsZUNsb3NlKTtcbiAgfTtcblxuICBoYW5kbGVDb25maXJtID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe2N1cnJlbnRQYWdlOiAxfSwgdGhpcy5wcm9wcy5oYW5kbGVDb25maXJtKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCYXNlRGlhbG9nXG4gICAgICAgIGlzT3Blbj17dGhpcy5wcm9wcy5pc09wZW59XG4gICAgICAgIGhhbmRsZUNsb3NlPXt0aGlzLmhhbmRsZUNsb3NlfVxuICAgICAgICB1c2VVcGRhdGVkU3R5bGVzXG4gICAgICAgIHN0eWxlPXtzdHlsZXMuZGlhbG9nfVxuICAgICAgPlxuICAgICAgICA8aDI+e2kxOG4uY3JlYXRlU3RhbmRhcmRzUmVwb3J0KCl9PC9oMj5cbiAgICAgICAge3RoaXMuc3RhdGUuY3VycmVudFBhZ2UgPT09IDEgJiYgKFxuICAgICAgICAgIDxDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMSBvbk5leHQ9e3RoaXMuaGFuZGxlTmV4dH0gLz5cbiAgICAgICAgKX1cbiAgICAgICAge3RoaXMuc3RhdGUuY3VycmVudFBhZ2UgPT09IDIgJiYgKFxuICAgICAgICAgIDxDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMlxuICAgICAgICAgICAgb25CYWNrPXt0aGlzLmhhbmRsZUJhY2t9XG4gICAgICAgICAgICBoYW5kbGVDb25maXJtPXt0aGlzLmhhbmRsZUNvbmZpcm19XG4gICAgICAgICAgICBvbkNvbW1lbnRDaGFuZ2U9e3RoaXMucHJvcHMub25Db21tZW50Q2hhbmdlfVxuICAgICAgICAgICAgc2VjdGlvbklkPXt0aGlzLnByb3BzLnNlY3Rpb25JZH1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgPC9CYXNlRGlhbG9nPlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBkZXNjcmlwdGlvbjoge1xuICAgIGNvbG9yOiBjb2xvci5kYXJrX2NoYXJjb2FsLFxuICB9LFxuICBib2xkVGV4dDoge1xuICAgIC4uLmZvbnRDb25zdGFudHNbJ21haW4tZm9udC1ib2xkJ10sXG4gIH0sXG4gIGRpYWxvZzoge1xuICAgIHBhZGRpbmdMZWZ0OiAyMCxcbiAgICBwYWRkaW5nUmlnaHQ6IDIwLFxuICAgIHBhZGRpbmdCb3R0b206IDIwLFxuICAgIC4uLmZvbnRDb25zdGFudHNbJ21haW4tZm9udC1yZWd1bGFyJ10sXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgVW5jb25uZWN0ZWRDcmVhdGVTdGFuZGFyZHNSZXBvcnREaWFsb2cgPVxuICBDcmVhdGVTdGFuZGFyZHNSZXBvcnREaWFsb2c7XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4JztcblxuaW1wb3J0IHtnZXRVbnBsdWdnZWRMZXNzb25zRm9yU2NyaXB0fSBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL3NlY3Rpb25Qcm9ncmVzcy9zdGFuZGFyZHMvc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzUmVkdXgnO1xuaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuXG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uLy4uL0J1dHRvbic7XG5pbXBvcnQgRGlhbG9nRm9vdGVyIGZyb20gJy4uLy4uL3RlYWNoZXJEYXNoYm9hcmQvRGlhbG9nRm9vdGVyJztcblxuaW1wb3J0IExlc3NvblN0YXR1c0xpc3QgZnJvbSAnLi9MZXNzb25TdGF0dXNMaXN0JztcblxuY2xhc3MgQ3JlYXRlU3RhbmRhcmRzUmVwb3J0U3RlcDEgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIG9uTmV4dDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB1bnBsdWdnZWRMZXNzb25zOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxwPntpMThuLmNyZWF0ZVN0YW5kYXJkc1JlcG9ydFBhZ2UxQm9keSgpfTwvcD5cbiAgICAgICAgPGgzPlxuICAgICAgICAgIHtpMThuLmNyZWF0ZVN0YW5kYXJkc1JlcG9ydFN0ZXAxKCkgKyAnICd9XG4gICAgICAgICAge2kxOG4uY29tcGxldGVkVW5wbHVnZ2VkTGVzc29ucygpfVxuICAgICAgICA8L2gzPlxuICAgICAgICB7dGhpcy5wcm9wcy51bnBsdWdnZWRMZXNzb25zLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxMZXNzb25TdGF0dXNMaXN0IGRpYWxvZz17J0NyZWF0ZVN0YW5kYXJkc1JlcG9ydERpYWxvZyd9IC8+XG4gICAgICAgICl9XG4gICAgICAgIHt0aGlzLnByb3BzLnVucGx1Z2dlZExlc3NvbnMubGVuZ3RoID09PSAwICYmIChcbiAgICAgICAgICA8cCBzdHlsZT17c3R5bGVzLm5vVW5wbHVnZ2VkfT5cbiAgICAgICAgICAgIHtpMThuLnN0YW5kYXJkc1JlcG9ydE5vVW5wbHVnZ2VkTGVzc29ucygpfVxuICAgICAgICAgIDwvcD5cbiAgICAgICAgKX1cbiAgICAgICAgPHA+e2kxOG4ucGx1Z2dlZExlc3NvbnNOb3RlKCl9PC9wPlxuICAgICAgICA8RGlhbG9nRm9vdGVyIHJpZ2h0QWxpZ24+XG4gICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgdGV4dD17aTE4bi5uZXh0KCl9XG4gICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnByb3BzLm9uTmV4dH1cbiAgICAgICAgICAgIGNvbG9yPXtCdXR0b24uQnV0dG9uQ29sb3IuYnJhbmRTZWNvbmRhcnlEZWZhdWx0fVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidWl0ZXN0LXN0YW5kYXJkcy1nZW5lcmF0ZS1yZXBvcnQtbmV4dFwiXG4gICAgICAgICAgICBzdHlsZT17c3R5bGVzLmJ1dHRvbn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L0RpYWxvZ0Zvb3Rlcj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBub1VucGx1Z2dlZDoge1xuICAgIGZvbnRTdHlsZTogJ2l0YWxpYycsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIG1hcmdpblRvcDogMjAsXG4gICAgbWFyZ2luQm90dG9tOiAzMCxcbiAgfSxcbiAgYnV0dG9uOiB7XG4gICAgbWFyZ2luOiAwLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IFVuY29ubmVjdGVkQ3JlYXRlU3RhbmRhcmRzUmVwb3J0U3RlcDEgPSBDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChzdGF0ZSA9PiAoe1xuICB1bnBsdWdnZWRMZXNzb25zOiBnZXRVbnBsdWdnZWRMZXNzb25zRm9yU2NyaXB0KHN0YXRlKSxcbn0pKShDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMSk7XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4JztcblxuaW1wb3J0IFNhZmVNYXJrZG93biBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL1NhZmVNYXJrZG93bic7XG5pbXBvcnQge2dldEN1cnJlbnRVbml0RGF0YX0gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9zZWN0aW9uUHJvZ3Jlc3Mvc2VjdGlvblByb2dyZXNzUmVkdXgnO1xuaW1wb3J0IHt0ZWFjaGVyRGFzaGJvYXJkVXJsfSBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL3RlYWNoZXJEYXNoYm9hcmQvdXJsSGVscGVycyc7XG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5cbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vLi4vQnV0dG9uJztcbmltcG9ydCBEaWFsb2dGb290ZXIgZnJvbSAnLi4vLi4vdGVhY2hlckRhc2hib2FyZC9EaWFsb2dGb290ZXInO1xuXG5jbGFzcyBDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMiBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgc2VjdGlvbklkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIG9uQmFjazogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBoYW5kbGVDb25maXJtOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIG9uQ29tbWVudENoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAvL3JlZHV4XG4gICAgdGVhY2hlckNvbW1lbnQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdmVyc2lvblllYXI6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZmFtaWx5TmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgfTtcblxuICBjb21tZW50Q2hhbmdlZCA9IGV2ZW50ID0+IHtcbiAgICBjb25zdCBjdXJzb3JQb3NpdGlvbiA9IGV2ZW50LnRhcmdldC5zZWxlY3Rpb25TdGFydDtcbiAgICBjb25zdCBjb21tZW50Qm94ID0gZXZlbnQudGFyZ2V0O1xuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgY29tbWVudEJveC5zZWxlY3Rpb25TdGFydCA9IGN1cnNvclBvc2l0aW9uO1xuICAgICAgY29tbWVudEJveC5zZWxlY3Rpb25FbmQgPSBjdXJzb3JQb3NpdGlvbjtcbiAgICB9KTtcbiAgICB0aGlzLnByb3BzLm9uQ29tbWVudENoYW5nZShldmVudC50YXJnZXQudmFsdWUpO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7dmVyc2lvblllYXIsIGZhbWlseU5hbWV9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzaG93TGlua1RvU3RhbmRhcmRzT3ZlcnZpZXcgPSB2ZXJzaW9uWWVhciA+PSAyMDIwO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuaGVhZGVyfT5cbiAgICAgICAgICA8aDM+e2kxOG4uY3JlYXRlU3RhbmRhcmRzUmVwb3J0U3RlcDIoKX08L2gzPlxuICAgICAgICAgIDxzcGFuIHN0eWxlPXtzdHlsZXMub3B0aW9uYWxUZXh0fT57aTE4bi5vcHRpb25hbCgpfTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxTYWZlTWFya2Rvd24gbWFya2Rvd249e2kxOG4uY3JlYXRlU3RhbmRhcmRzUmVwb3J0UHJvbXB0KCl9IC8+XG4gICAgICAgIDxTYWZlTWFya2Rvd24gbWFya2Rvd249e2kxOG4uY3JlYXRlU3RhbmRhcmRzUmVwb3J0U3VnZ2VzdGlvbigpfSAvPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgPFNhZmVNYXJrZG93biBtYXJrZG93bj17aTE4bi5jcmVhdGVTdGFuZGFyZHNSZXBvcnRTdWdnZXN0aW9uMSgpfSAvPlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAge3Nob3dMaW5rVG9TdGFuZGFyZHNPdmVydmlldyAmJiAoXG4gICAgICAgICAgICAgIDxTYWZlTWFya2Rvd25cbiAgICAgICAgICAgICAgICBvcGVuRXh0ZXJuYWxMaW5rc0luTmV3VGFiPXt0cnVlfVxuICAgICAgICAgICAgICAgIG1hcmtkb3duPXtpMThuLmNyZWF0ZVN0YW5kYXJkc1JlcG9ydFN1Z2dlc3Rpb24yTGluayh7XG4gICAgICAgICAgICAgICAgICBzdGFuZGFyZHNPdmVydmlld0xpbms6IGBodHRwOi8vY3VycmljdWx1bS5jb2RlLm9yZy9jc2YtJHt2ZXJzaW9uWWVhci5zbGljZShcbiAgICAgICAgICAgICAgICAgICAgLTJcbiAgICAgICAgICAgICAgICAgICl9LyR7ZmFtaWx5TmFtZX0vc3RhbmRhcmRzYCxcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICB7IXNob3dMaW5rVG9TdGFuZGFyZHNPdmVydmlldyAmJiAoXG4gICAgICAgICAgICAgIDxTYWZlTWFya2Rvd25cbiAgICAgICAgICAgICAgICBtYXJrZG93bj17aTE4bi5jcmVhdGVTdGFuZGFyZHNSZXBvcnRTdWdnZXN0aW9uMigpfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIDxTYWZlTWFya2Rvd25cbiAgICAgICAgICAgICAgb3BlbkV4dGVybmFsTGlua3NJbk5ld1RhYj17dHJ1ZX1cbiAgICAgICAgICAgICAgbWFya2Rvd249e2kxOG4uY3JlYXRlU3RhbmRhcmRzUmVwb3J0U3VnZ2VzdGlvbjQoe1xuICAgICAgICAgICAgICAgIHByb2plY3RzTGluazogdGVhY2hlckRhc2hib2FyZFVybChcbiAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuc2VjdGlvbklkLFxuICAgICAgICAgICAgICAgICAgJy9wcm9qZWN0cydcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtpMThuLmNyZWF0ZVN0YW5kYXJkc1JlcG9ydFNhbXBsZU5vdGVUZXh0KCl9XG4gICAgICAgICAgdmFsdWU9e1xuICAgICAgICAgICAgdGhpcy5wcm9wcy50ZWFjaGVyQ29tbWVudCA/IHRoaXMucHJvcHMudGVhY2hlckNvbW1lbnQgOiB1bmRlZmluZWRcbiAgICAgICAgICB9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuY29tbWVudENoYW5nZWR9XG4gICAgICAgICAgc3R5bGU9e3N0eWxlcy50ZXh0QXJlYX1cbiAgICAgICAgICBhcmlhLWxhYmVsPXtpMThuLmNyZWF0ZVN0YW5kYXJkc1JlcG9ydFN0ZXAyKCl9XG4gICAgICAgIC8+XG4gICAgICAgIDxEaWFsb2dGb290ZXI+XG4gICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgdGV4dD17aTE4bi5iYWNrKCl9XG4gICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnByb3BzLm9uQmFja31cbiAgICAgICAgICAgIGNvbG9yPXtCdXR0b24uQnV0dG9uQ29sb3IuZ3JheX1cbiAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuYmFja0J1dHRvbn1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgIHRleHQ9e2kxOG4uY3JlYXRlUmVwb3J0KCl9XG4gICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnByb3BzLmhhbmRsZUNvbmZpcm19XG4gICAgICAgICAgICBjb2xvcj17QnV0dG9uLkJ1dHRvbkNvbG9yLmJyYW5kU2Vjb25kYXJ5RGVmYXVsdH1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInVpdGVzdC1zdGFuZGFyZHMtZ2VuZXJhdGUtcmVwb3J0LWZpbmlzaFwiXG4gICAgICAgICAgICBzdHlsZT17c3R5bGVzLmNyZWF0ZUJ1dHRvbn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L0RpYWxvZ0Zvb3Rlcj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICB0ZXh0QXJlYToge1xuICAgIG1pbkhlaWdodDogMTAwLFxuICAgIHdpZHRoOiAnOTUlJyxcbiAgfSxcbiAgaGVhZGVyOiB7XG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxuICBvcHRpb25hbFRleHQ6IHtcbiAgICBwYWRkaW5nTGVmdDogMTAsXG4gIH0sXG4gIGNyZWF0ZUJ1dHRvbjoge1xuICAgIG1hcmdpbjogMCxcbiAgfSxcbiAgYmFja0J1dHRvbjoge1xuICAgIG1hcmdpbjogMCxcbiAgICBib3hTaGFkb3c6ICdpbnNldCAwIDJweCAwIDAgcmdiKDI1NSAyNTUgMjU1IC8gNDAlKScsXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgVW5jb25uZWN0ZWRDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMiA9IENyZWF0ZVN0YW5kYXJkc1JlcG9ydFN0ZXAyO1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KHN0YXRlID0+ICh7XG4gIHRlYWNoZXJDb21tZW50OiBzdGF0ZS5zZWN0aW9uU3RhbmRhcmRzUHJvZ3Jlc3MudGVhY2hlckNvbW1lbnQsXG4gIHZlcnNpb25ZZWFyOiBnZXRDdXJyZW50VW5pdERhdGEoc3RhdGUpLnZlcnNpb25feWVhcixcbiAgZmFtaWx5TmFtZTogZ2V0Q3VycmVudFVuaXREYXRhKHN0YXRlKS5mYW1pbHlfbmFtZSxcbn0pKShDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMik7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9qc3gtbm8tdGFyZ2V0LWJsYW5rICovXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4JztcblxuaW1wb3J0IGNvbG9yIGZyb20gJ0BjZG8vYXBwcy91dGlsL2NvbG9yJztcblxuaW1wb3J0IGZpcmVob3NlQ2xpZW50IGZyb20gJy4uLy4uLy4uL2xpYi91dGlsL2ZpcmVob3NlJztcbmltcG9ydCBNdWx0aUNoZWNrYm94U2VsZWN0b3IgZnJvbSAnLi4vLi4vTXVsdGlDaGVja2JveFNlbGVjdG9yJztcblxuaW1wb3J0IFByb2dyZXNzQm94Rm9yTGVzc29uTnVtYmVyIGZyb20gJy4vUHJvZ3Jlc3NCb3hGb3JMZXNzb25OdW1iZXInO1xuaW1wb3J0IHtcbiAgZ2V0VW5wbHVnZ2VkTGVzc29uc0ZvclNjcmlwdCxcbiAgc2V0U2VsZWN0ZWRMZXNzb25zLFxufSBmcm9tICcuL3NlY3Rpb25TdGFuZGFyZHNQcm9ncmVzc1JlZHV4JztcblxuY2xhc3MgTGVzc29uU3RhdHVzTGlzdCBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZGlhbG9nOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIC8vIHJlZHV4XG4gICAgdW5wbHVnZ2VkTGVzc29uTGlzdDogUHJvcFR5cGVzLmFycmF5LFxuICAgIHNldFNlbGVjdGVkTGVzc29uczogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBzZWxlY3RlZExlc3NvbnM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICAgIHNlY3Rpb25JZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBzY3JpcHRJZDogUHJvcFR5cGVzLm51bWJlcixcbiAgfTtcblxuICBoYW5kbGVDaGFuZ2UgPSAoc2VsZWN0ZWRMZXNzb25zLCBjaGFuZ2VkTGVzc29uKSA9PiB7XG4gICAgZmlyZWhvc2VDbGllbnQucHV0UmVjb3JkKFxuICAgICAge1xuICAgICAgICBzdHVkeTogJ3RlYWNoZXJfZGFzaGJvYXJkX2FjdGlvbnMnLFxuICAgICAgICBzdHVkeV9ncm91cDogJ3N0YW5kYXJkcycsXG4gICAgICAgIGV2ZW50OiAndXBkYXRlX3VucGx1Z2dlZF9sZXNzb25fbGlzdCcsXG4gICAgICAgIGRhdGFfanNvbjogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHNlY3Rpb25faWQ6IHRoaXMucHJvcHMuc2VjdGlvbklkLFxuICAgICAgICAgIHNjcmlwdF9pZDogdGhpcy5wcm9wcy5zY3JpcHRJZCxcbiAgICAgICAgICBjaGFuZ2VkX2xlc3Nvbl9pZDogY2hhbmdlZExlc3Nvbi5pZCxcbiAgICAgICAgICBsZXNzb25fc2VsZWN0ZWQ6ICFjaGFuZ2VkTGVzc29uLmNvbXBsZXRlZCxcbiAgICAgICAgICBkaWFsb2c6IHRoaXMucHJvcHMuZGlhbG9nLFxuICAgICAgICB9KSxcbiAgICAgIH0sXG4gICAgICB7aW5jbHVkZVVzZXJJZDogdHJ1ZX1cbiAgICApO1xuICAgIHRoaXMucHJvcHMuc2V0U2VsZWN0ZWRMZXNzb25zKHNlbGVjdGVkTGVzc29ucyk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIC8vIEFkZCB0aGUgc2NyaXB0SWQgYW5kIHNlY3Rpb25JZCBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSB0byBsb2cgbWV0cmljc1xuICAgIHRoaXMucHJvcHMudW5wbHVnZ2VkTGVzc29uTGlzdC5mb3JFYWNoKGxlc3NvbiA9PlxuICAgICAgT2JqZWN0LmFzc2lnbihsZXNzb24sIHtcbiAgICAgICAgc2VjdGlvbklkOiB0aGlzLnByb3BzLnNlY3Rpb25JZCxcbiAgICAgICAgc2NyaXB0SWQ6IHRoaXMucHJvcHMuc2NyaXB0SWQsXG4gICAgICB9KVxuICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPE11bHRpQ2hlY2tib3hTZWxlY3RvclxuICAgICAgICBub0hlYWRlcj17dHJ1ZX1cbiAgICAgICAgaXRlbXM9e3RoaXMucHJvcHMudW5wbHVnZ2VkTGVzc29uTGlzdH1cbiAgICAgICAgaXRlbVByb3BOYW1lPVwibGVzc29uXCJcbiAgICAgICAgc2VsZWN0ZWQ9e3RoaXMucHJvcHMuc2VsZWN0ZWRMZXNzb25zfVxuICAgICAgICBjaGVja0J5SWQ9e3RydWV9XG4gICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cbiAgICAgID5cbiAgICAgICAgPENvbXBsZXhMZXNzb25Db21wb25lbnQgLz5cbiAgICAgIDwvTXVsdGlDaGVja2JveFNlbGVjdG9yPlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBsZXNzb25MaXN0SXRlbToge1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgfSxcbiAgbGlua3M6IHtcbiAgICBwYWRkaW5nTGVmdDogMTAsXG4gICAgY29sb3I6IGNvbG9yLnRlYWwsXG4gIH0sXG59O1xuXG5jb25zdCBoYW5kbGVMZXNzb25MaW5rQ2xpY2sgPSBmdW5jdGlvbiAobGVzc29uKSB7XG4gIGZpcmVob3NlQ2xpZW50LnB1dFJlY29yZChcbiAgICB7XG4gICAgICBzdHVkeTogJ3RlYWNoZXJfZGFzaGJvYXJkX2FjdGlvbnMnLFxuICAgICAgc3R1ZHlfZ3JvdXA6ICdzdGFuZGFyZHMnLFxuICAgICAgZXZlbnQ6ICdjbGlja191bnBsdWdnZWRfbGVzc29uX2xpbmsnLFxuICAgICAgZGF0YV9qc29uOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGxpbms6IGxlc3Nvbi51cmwsXG4gICAgICAgIHNlY3Rpb25faWQ6IGxlc3Nvbi5zZWN0aW9uSWQsXG4gICAgICAgIHNjcmlwdF9pZDogbGVzc29uLnNjcmlwdElkLFxuICAgICAgfSksXG4gICAgfSxcbiAgICB7aW5jbHVkZVVzZXJJZDogdHJ1ZX1cbiAgKTtcbn07XG5cbmNvbnN0IENvbXBsZXhMZXNzb25Db21wb25lbnQgPSBmdW5jdGlvbiAoe2xlc3Nvbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IHN0eWxlPXtzdHlsZXMubGVzc29uTGlzdEl0ZW19PlxuICAgICAgPGRpdj5cbiAgICAgICAgPFByb2dyZXNzQm94Rm9yTGVzc29uTnVtYmVyXG4gICAgICAgICAgY29tcGxldGVkPXtsZXNzb24uY29tcGxldGVkfVxuICAgICAgICAgIGluUHJvZ3Jlc3M9e2xlc3Nvbi5pblByb2dyZXNzfVxuICAgICAgICAgIGxlc3Nvbk51bWJlcj17bGVzc29uLm51bWJlcn1cbiAgICAgICAgICBsaW5rVG9MZXNzb25QbGFuPXtsZXNzb24udXJsfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8YVxuICAgICAgICBzdHlsZT17c3R5bGVzLmxpbmtzfVxuICAgICAgICBocmVmPXtsZXNzb24udXJsfVxuICAgICAgICB0YXJnZXQ9eydfYmxhbmsnfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVMZXNzb25MaW5rQ2xpY2sobGVzc29uKX1cbiAgICAgID5cbiAgICAgICAge2xlc3Nvbi5uYW1lfVxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICApO1xufTtcbkNvbXBsZXhMZXNzb25Db21wb25lbnQucHJvcFR5cGVzID0ge1xuICBsZXNzb246IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBudW1iZXI6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgdXJsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbXBsZXRlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaW5Qcm9ncmVzczogUHJvcFR5cGVzLmJvb2wsXG4gIH0pLFxuICBzZWN0aW9uSWQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNjcmlwdElkOiBQcm9wVHlwZXMubnVtYmVyLFxufTtcblxuZXhwb3J0IGNvbnN0IFVuY29ubmVjdGVkTGVzc29uU3RhdHVzTGlzdCA9IExlc3NvblN0YXR1c0xpc3Q7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gIHN0YXRlID0+ICh7XG4gICAgdW5wbHVnZ2VkTGVzc29uTGlzdDogZ2V0VW5wbHVnZ2VkTGVzc29uc0ZvclNjcmlwdChzdGF0ZSksXG4gICAgc2VsZWN0ZWRMZXNzb25zOiBzdGF0ZS5zZWN0aW9uU3RhbmRhcmRzUHJvZ3Jlc3Muc2VsZWN0ZWRMZXNzb25zLFxuICAgIHNlY3Rpb25JZDogc3RhdGUudGVhY2hlclNlY3Rpb25zLnNlbGVjdGVkU2VjdGlvbklkLFxuICAgIHNjcmlwdElkOiBzdGF0ZS51bml0U2VsZWN0aW9uLnNjcmlwdElkLFxuICB9KSxcbiAgZGlzcGF0Y2ggPT4gKHtcbiAgICBzZXRTZWxlY3RlZExlc3NvbnMoc2VsZWN0ZWQpIHtcbiAgICAgIGRpc3BhdGNoKHNldFNlbGVjdGVkTGVzc29ucyhzZWxlY3RlZCkpO1xuICAgIH0sXG4gIH0pXG4pKExlc3NvblN0YXR1c0xpc3QpO1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuXG5jb25zdCBzdHlsZSA9IHtcbiAgYWJvdmVGb290ZXI6IHtcbiAgICBoZWlnaHQ6ICc5MHB4JyxcbiAgfSxcbiAgZm9vdGVyOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgaGVpZ2h0OiAnMTAwcHgnLFxuICAgIHBhZGRpbmc6ICcwIDIwcHgnLFxuICAgIGxlZnQ6ICcwJyxcbiAgICByaWdodDogJzAnLFxuICAgIGJvdHRvbTogJzAnLFxuICAgIGJhY2tncm91bmQ6ICd3aGl0ZScsXG4gICAgekluZGV4OiAnNTAwJyxcbiAgfSxcbiAgYnV0dG9uUm93OiB7XG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIGZsZXhGbG93OiAncm93JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICB9LFxuICByaWdodEFsaWduOiB7XG4gICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LWVuZCcsXG4gIH0sXG59O1xuXG4vKipcbiAqIEV4dHJlbWVseSBzaW1wbGUgZm9vdGVyIGV4cGVjdGluZyB0d28gY2hpbGRyZW4gdG8gYWxpZ24gdG8gdGhlIGxlZnQgYW5kXG4gKiByaWdodCBzaWRlcyBvZiB0aGUgZGlhbG9nLCByZXNwZWN0aXZlbHkuXG4gKiBTZWUgRGlhbG9nRm9vdGVyLnN0b3J5LmpzeCBmb3IgdXNhZ2UgZXhhbXBsZXMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERpYWxvZ0Zvb3RlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgcmlnaHRBbGlnbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnksXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGxldCBidXR0b25Sb3dTdHlsZSA9IHRoaXMucHJvcHMucmlnaHRBbGlnblxuICAgICAgPyB7Li4uc3R5bGUuYnV0dG9uUm93LCAuLi5zdHlsZS5yaWdodEFsaWdufVxuICAgICAgOiBzdHlsZS5idXR0b25Sb3c7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlLmFib3ZlRm9vdGVyfSAvPlxuICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZS5mb290ZXJ9PlxuICAgICAgICAgIDxociAvPlxuICAgICAgICAgIDxkaXYgc3R5bGU9e2J1dHRvblJvd1N0eWxlfT57dGhpcy5wcm9wcy5jaGlsZHJlbn08L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iLCJjb25zdCBkYXNoYm9hcmRQcmVmaXggPSAnL3RlYWNoZXJfZGFzaGJvYXJkL3NlY3Rpb25zLyc7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgVVJMIGluIHRlYWNoZXIgZGFzaGJvYXJkIGdpdmVuIGEgc2VjdGlvbiBpZCBhbmQgKG9wdGlvbmFsKSBwYXRoLlxuICovXG5leHBvcnQgY29uc3QgdGVhY2hlckRhc2hib2FyZFVybCA9IChzZWN0aW9uSWQsIHBhdGggPSAnJykgPT4ge1xuICAvLyBQcmVwZW5kIGEgZm9yd2FyZCBzbGFzaCB0byBwYXRoIGlmIG9uZSBpcyBub3Qgc3VwcGxpZWQuXG4gIGlmIChwYXRoICYmIHBhdGguY2hhckF0KDApICE9PSAnLycpIHtcbiAgICBwYXRoID0gJy8ke3BhdGh9JztcbiAgfVxuXG4gIHJldHVybiBkYXNoYm9hcmRQcmVmaXggKyBzZWN0aW9uSWQgKyBwYXRoO1xufTtcblxuZXhwb3J0IGNvbnN0IHNjcmlwdFVybEZvclN0dWRlbnQgPSAoc2VjdGlvbklkLCBzY3JpcHROYW1lLCBzdHVkZW50SWQpID0+IHtcbiAgaWYgKCFzY3JpcHROYW1lKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gYC9zLyR7c2NyaXB0TmFtZX0/c2VjdGlvbl9pZD0ke3NlY3Rpb25JZH0mdXNlcl9pZD0ke3N0dWRlbnRJZH0mdmlld0FzPUluc3RydWN0b3JgO1xufTtcbiIsIi8qIVxuXHRDb3B5cmlnaHQgKGMpIDIwMTggSmVkIFdhdHNvbi5cblx0TGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcblx0aHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblx0dmFyIG5hdGl2ZUNvZGVTdHJpbmcgPSAnW25hdGl2ZSBjb2RlXSc7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcygpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdFx0aWYgKGFyZy5sZW5ndGgpIHtcblx0XHRcdFx0XHR2YXIgaW5uZXIgPSBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goaW5uZXIpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRpZiAoYXJnLnRvU3RyaW5nICE9PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nICYmICFhcmcudG9TdHJpbmcudG9TdHJpbmcoKS5pbmNsdWRlcygnW25hdGl2ZSBjb2RlXScpKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZy50b1N0cmluZygpKTtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRjbGFzc05hbWVzLmRlZmF1bHQgPSBjbGFzc05hbWVzO1xuXHRcdG1vZHVsZS5leHBvcnRzID0gY2xhc3NOYW1lcztcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gcmVnaXN0ZXIgYXMgJ2NsYXNzbmFtZXMnLCBjb25zaXN0ZW50IHdpdGggbnBtIHBhY2thZ2UgbmFtZVxuXHRcdGRlZmluZSgnY2xhc3NuYW1lcycsIFtdLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG5cdH1cbn0oKSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiaW1wb3J0IHthY3Rpb259IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tYWN0aW9ucyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHtjcmVhdGVTdG9yZSwgY29tYmluZVJlZHVjZXJzfSBmcm9tICdyZWR1eCc7XG5cbmltcG9ydCB1bml0U2VsZWN0aW9uIGZyb20gJ0BjZG8vYXBwcy9yZWR1eC91bml0U2VsZWN0aW9uUmVkdXgnO1xuaW1wb3J0IHNlY3Rpb25Qcm9ncmVzcyBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL3NlY3Rpb25Qcm9ncmVzcy9zZWN0aW9uUHJvZ3Jlc3NSZWR1eCc7XG5cbmltcG9ydCB7VW5jb25uZWN0ZWRDcmVhdGVTdGFuZGFyZHNSZXBvcnREaWFsb2cgYXMgQ3JlYXRlU3RhbmRhcmRzUmVwb3J0RGlhbG9nfSBmcm9tICcuL0NyZWF0ZVN0YW5kYXJkc1JlcG9ydERpYWxvZyc7XG5pbXBvcnQgc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzIGZyb20gJy4vc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzUmVkdXgnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudDogQ3JlYXRlU3RhbmRhcmRzUmVwb3J0RGlhbG9nLFxufTtcblxuZXhwb3J0IGNvbnN0IE92ZXJ2aWV3ID0gKCkgPT4ge1xuICBjb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKFxuICAgIGNvbWJpbmVSZWR1Y2Vycyh7XG4gICAgICBzZWN0aW9uU3RhbmRhcmRzUHJvZ3Jlc3MsXG4gICAgICBzZWN0aW9uUHJvZ3Jlc3MsXG4gICAgICB1bml0U2VsZWN0aW9uLFxuICAgIH0pXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cbiAgICAgIDxDcmVhdGVTdGFuZGFyZHNSZXBvcnREaWFsb2dcbiAgICAgICAgaXNPcGVuXG4gICAgICAgIGhhbmRsZUNvbmZpcm09e2FjdGlvbignQ29uZmlybScpfVxuICAgICAgICBoYW5kbGVDbG9zZT17YWN0aW9uKCdDbG9zZScpfVxuICAgICAgICBoYW5kbGVOZXh0PXthY3Rpb24oJ05leHQnKX1cbiAgICAgICAgb25Db21tZW50Q2hhbmdlPXthY3Rpb24oJ0NvbW1lbnQnKX1cbiAgICAgIC8+XG4gICAgPC9Qcm92aWRlcj5cbiAgKTtcbn07XG4iXSwibmFtZXMiOlsiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2xvY2FsZSIsIl9jb25zdGFudHMiLCJfY29sb3IiLCJfQnV0dG9uIiwib2JqIiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJvIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl9zZXRQcm90b3R5cGVPZiIsInAiLCJzZXRQcm90b3R5cGVPZiIsImJpbmQiLCJfX3Byb3RvX18iLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiaSIsIl90b1ByaW1pdGl2ZSIsInRvUHJpbWl0aXZlIiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiQmFzZURpYWxvZyIsImV4cG9ydHMiLCJfUmVhY3QkQ29tcG9uZW50IiwiX3RoaXMiLCJfbGVuIiwiYXJncyIsIkFycmF5IiwiX2tleSIsImNvbmNhdCIsImV2ZW50IiwiY2xvc2VEaWFsb2ciLCJwcm9wcyIsImhhbmRsZUtleURvd24iLCJ1bmNsb3NlYWJsZSIsImhhbmRsZUNsb3NlIiwic291bmRQbGF5ZXIiLCJzdG9wQWxsQXVkaW8iLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsIl9wcm90byIsImNvbXBvbmVudERpZE1vdW50IiwidGhpcyIsImZvY3VzRGlhbG9nIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2V0VGFiYmFibGVFbGVtZW50cyIsInNsaWNlIiwicmVmcyIsImRpYWxvZyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJkZXNjZW5kYW50SXNBY3RpdmUiLCJkb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJjb250YWlucyIsImlzT3BlbiIsImZvY3VzIiwicmVuZGVyIiwiaGlkZUJhY2tkcm9wIiwiY3JlYXRlRWxlbWVudCIsImJvZHlTdHlsZSIsIm1vZGFsQm9keVN0eWxlIiwieENsb3NlU3R5bGUiLCJmdWxsV2lkdGgiLCJ3aWR0aCIsIm1hcmdpbkxlZnQiLCJmdWxsSGVpZ2h0IiwiaGVpZ2h0IiwiYm94U2l6aW5nIiwid3JhcHBlckNsYXNzTmFtZXMiLCJtb2RhbENsYXNzTmFtZXMiLCJtb2RhbEJvZHlDbGFzc05hbWVzIiwib3ZlcmZsb3dYIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1kiLCJmaXhlZEhlaWdodCIsInVzZVVwZGF0ZWRTdHlsZXMiLCJiYWNrZ3JvdW5kIiwibWF4SGVpZ2h0IiwiYm9yZGVyUmFkaXVzIiwidXNlRmxleGJveCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiZml4ZWRXaWR0aCIsIkJBU0VfRElBTE9HX1dJRFRIIiwibm9Nb2RhbFN0eWxlcyIsInBvc2l0aW9uIiwic3R5bGUiLCJ0b3AiLCJyaWdodCIsInBhZGRpbmciLCJjb2xvciIsIm5ldXRyYWxfZGFyazMwIiwiY3Vyc29yIiwiZm9udFNpemUiLCJib3JkZXIiLCJib2R5Q2xhc3NOYW1lIiwiY2xhc3NOYW1lIiwiam9pbiIsImJvZHkiLCJ0YWJJbmRleCIsInJlZiIsIm9uS2V5RG93biIsImlkIiwiYm9keUlkIiwiaGlkZUNsb3NlQnV0dG9uIiwib25DbGljayIsImljb24iLCJpMThuIiwiY2hpbGRyZW4iLCJiYWNrZHJvcFN0eWxlIiwiUmVhY3QiLCJDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJib29sIiwiZnVuYyIsIm5vZGUiLCJudW1iZXIiLCJzdHJpbmciLCJvYmplY3QiLCJtb2R1bGUiLCJfaW1tdXRhYmxlIiwiX2xvZGFzaCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiaGFzIiwiZ2V0IiwibiIsImEiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJzZXQiLCJXZWFrTWFwIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiYXJyIiwiX2FycmF5V2l0aG91dEhvbGVzIiwiaXNBcnJheSIsIl9hcnJheUxpa2VUb0FycmF5IiwiX2l0ZXJhYmxlVG9BcnJheSIsIml0ZXIiLCJmcm9tIiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwibWluTGVuIiwidG9TdHJpbmciLCJuYW1lIiwidGVzdCIsIl9ub25JdGVyYWJsZVNwcmVhZCIsImxlbiIsImFycjIiLCJzdHlsZXMiLCJoZWFkZXIiLCJwdXJwbGUiLCJmb250V2VpZ2h0IiwiYm9yZGVyQm90dG9tV2lkdGgiLCJib3JkZXJCb3R0b21TdHlsZSIsImJvcmRlckJvdHRvbUNvbG9yIiwiY2hlY2tib3giLCJtYXJnaW5SaWdodCIsIm1hcmdpblRvcCIsInNlbGVjdEFsbENoZWNrYm94IiwiYm90dG9tIiwibGlzdCIsImxpc3RJdGVtIiwibGlzdFN0eWxlVHlwZSIsImFsaWduSXRlbXMiLCJtYXJnaW5Cb3R0b20iLCJNdWx0aUNoZWNrYm94U2VsZWN0b3IiLCJfQ29tcG9uZW50IiwiSW1tdXRhYmxlIiwiU2V0Iiwic2VsZWN0ZWQiLCJpc1N1cGVyc2V0IiwiaXRlbXMiLCJhcmVBbGxTZWxlY3RlZCIsIm9uQ2hhbmdlIiwiaXRlbSIsImNoZWNrQnlJZCIsInNlbGVjdGVkSXRlbXMiLCJfIiwibWFwIiwiaW5jbHVkZXMiLCJyZW1vdmUiLCJzZWxlY3Rpb24iLCJpbmRleCIsImluZGV4T2YiLCJfdGhpczIiLCJub0hlYWRlciIsInR5cGUiLCJjaGVja2VkIiwidG9nZ2xlU2VsZWN0QWxsIiwiZGlzYWJsZWQiLCJ0b2dnbGUiLCJjbG9uZUVsZW1lbnQiLCJpdGVtUHJvcE5hbWUiLCJhcnJheSIsImVsZW1lbnQiLCJhbnkiLCJfcmVkYWN0YWJsZU1hcmtkb3duIiwiX3JlbWFya1BsdWdpbnMiLCJfZ2l0aHViIiwiX3JlaHlwZVJhdyIsIl9yZWh5cGVSZWFjdCIsIl9yZWh5cGVTYW5pdGl6ZSIsIl9yZW1hcmtSZWh5cGUiLCJfZXh0ZXJuYWxMaW5rcyIsIl9leHRlbmRzIiwiYXNzaWduIiwidGFyZ2V0Iiwic291cmNlIiwiU2FmZU1hcmtkb3duIiwicmVuZGVyZWQiLCJvcGVuRXh0ZXJuYWxMaW5rc0luTmV3VGFiIiwibWFya2Rvd25Ub1JlYWN0RXh0ZXJuYWxMaW5rcyIsIm1hcmtkb3duVG9SZWFjdCIsInByb2Nlc3NTeW5jIiwibWFya2Rvd24iLCJjb250ZW50cyIsIm1hcmtkb3duUHJvcHMiLCJpc1JlcXVpcmVkIiwic2NoZW1hIiwiZGVmYXVsdFNhbml0aXphdGlvblNjaGVtYSIsImF0dHJpYnV0ZXMiLCJpbWciLCJ0YWdOYW1lcyIsInNwYW4iLCJjbG9iYmVyIiwiYmxvY2tseVRhZ3MiLCJibG9ja2x5Q29tcG9uZW50V3JhcHBlcnMiLCJ0YWciLCJCbG9ja2x5RWxlbWVudCIsImlzIiwiUGFyc2VyIiwiZ2V0UGFyc2VyIiwidXNlIiwiY2xpY2thYmxlVGV4dCIsImV4cGFuZGFibGVJbWFnZXMiLCJ2aXN1YWxDb2RlQmxvY2siLCJ4bWxBc1RvcExldmVsQmxvY2siLCJkZXRhaWxzIiwicmVtYXJrUmVoeXBlIiwiYWxsb3dEYW5nZXJvdXNIVE1MIiwicmVoeXBlUmF3IiwicmVoeXBlU2FuaXRpemUiLCJyZWh5cGVSZWFjdCIsImNvbXBvbmVudHMiLCJleHRlcm5hbExpbmtzIiwibGlua3MiLCJpc0V4dGVybmFsTGluayIsInVybCIsImZ1bGx5UXVhbGlmaWVkIiwicGF0aCIsImhyZWYiLCJvcHRpb25zIiwidW5kZWZpbmVkIiwidG9rZW5pemVycyIsImlubGluZVRva2VuaXplcnMiLCJvcmlnaW5hbCIsImxpbmsiLCJhbGwiLCJlYXQiLCJzaWxlbnQiLCJkYXRhIiwiaFByb3BlcnRpZXMiLCJyZWwiLCJsb2NhdG9yIiwiX2ZvbnRDb25zdGFudHMiLCJfQmFzZURpYWxvZyIsIl9DcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwIiwiX0NyZWF0ZVN0YW5kYXJkc1JlcG9ydFN0ZXAyIiwiQ3JlYXRlU3RhbmRhcmRzUmVwb3J0RGlhbG9nIiwiY3VycmVudFBhZ2UiLCJzZXRTdGF0ZSIsInN0YXRlIiwiaGFuZGxlTmV4dCIsImhhbmRsZUNvbmZpcm0iLCJjcmVhdGVTdGFuZGFyZHNSZXBvcnQiLCJvbk5leHQiLCJvbkJhY2siLCJoYW5kbGVCYWNrIiwib25Db21tZW50Q2hhbmdlIiwic2VjdGlvbklkIiwiZGVzY3JpcHRpb24iLCJkYXJrX2NoYXJjb2FsIiwiYm9sZFRleHQiLCJmb250Q29uc3RhbnRzIiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nQm90dG9tIiwiX3JlYWN0UmVkdXgiLCJfc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzUmVkdXgiLCJfRGlhbG9nRm9vdGVyIiwiX0xlc3NvblN0YXR1c0xpc3QiLCJDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMSIsImNyZWF0ZVN0YW5kYXJkc1JlcG9ydFBhZ2UxQm9keSIsImNyZWF0ZVN0YW5kYXJkc1JlcG9ydFN0ZXAxIiwiY29tcGxldGVkVW5wbHVnZ2VkTGVzc29ucyIsInVucGx1Z2dlZExlc3NvbnMiLCJub1VucGx1Z2dlZCIsInN0YW5kYXJkc1JlcG9ydE5vVW5wbHVnZ2VkTGVzc29ucyIsInBsdWdnZWRMZXNzb25zTm90ZSIsInJpZ2h0QWxpZ24iLCJ0ZXh0IiwibmV4dCIsIkJ1dHRvbiIsIkJ1dHRvbkNvbG9yIiwiYnJhbmRTZWNvbmRhcnlEZWZhdWx0IiwiYnV0dG9uIiwiZm9udFN0eWxlIiwibWFyZ2luIiwiY29ubmVjdCIsImdldFVucGx1Z2dlZExlc3NvbnNGb3JTY3JpcHQiLCJfU2FmZU1hcmtkb3duIiwiX3NlY3Rpb25Qcm9ncmVzc1JlZHV4IiwiX3VybEhlbHBlcnMiLCJDcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMiIsImN1cnNvclBvc2l0aW9uIiwic2VsZWN0aW9uU3RhcnQiLCJjb21tZW50Qm94Iiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic2VsZWN0aW9uRW5kIiwiX3RoaXMkcHJvcHMiLCJ2ZXJzaW9uWWVhciIsImZhbWlseU5hbWUiLCJzaG93TGlua1RvU3RhbmRhcmRzT3ZlcnZpZXciLCJjcmVhdGVTdGFuZGFyZHNSZXBvcnRTdGVwMiIsIm9wdGlvbmFsVGV4dCIsIm9wdGlvbmFsIiwiY3JlYXRlU3RhbmRhcmRzUmVwb3J0UHJvbXB0IiwiY3JlYXRlU3RhbmRhcmRzUmVwb3J0U3VnZ2VzdGlvbiIsImNyZWF0ZVN0YW5kYXJkc1JlcG9ydFN1Z2dlc3Rpb24xIiwiY3JlYXRlU3RhbmRhcmRzUmVwb3J0U3VnZ2VzdGlvbjJMaW5rIiwic3RhbmRhcmRzT3ZlcnZpZXdMaW5rIiwiY3JlYXRlU3RhbmRhcmRzUmVwb3J0U3VnZ2VzdGlvbjIiLCJjcmVhdGVTdGFuZGFyZHNSZXBvcnRTdWdnZXN0aW9uNCIsInByb2plY3RzTGluayIsInRlYWNoZXJEYXNoYm9hcmRVcmwiLCJwbGFjZWhvbGRlciIsImNyZWF0ZVN0YW5kYXJkc1JlcG9ydFNhbXBsZU5vdGVUZXh0IiwidGVhY2hlckNvbW1lbnQiLCJjb21tZW50Q2hhbmdlZCIsInRleHRBcmVhIiwiYmFjayIsImdyYXkiLCJiYWNrQnV0dG9uIiwiY3JlYXRlUmVwb3J0IiwiY3JlYXRlQnV0dG9uIiwibWluSGVpZ2h0IiwiYm94U2hhZG93Iiwic2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzIiwiZ2V0Q3VycmVudFVuaXREYXRhIiwidmVyc2lvbl95ZWFyIiwiZmFtaWx5X25hbWUiLCJfZmlyZWhvc2UiLCJfTXVsdGlDaGVja2JveFNlbGVjdG9yIiwiX1Byb2dyZXNzQm94Rm9yTGVzc29uTnVtYmVyIiwiTGVzc29uU3RhdHVzTGlzdCIsInNlbGVjdGVkTGVzc29ucyIsImNoYW5nZWRMZXNzb24iLCJmaXJlaG9zZUNsaWVudCIsInB1dFJlY29yZCIsInN0dWR5Iiwic3R1ZHlfZ3JvdXAiLCJkYXRhX2pzb24iLCJKU09OIiwic3RyaW5naWZ5Iiwic2VjdGlvbl9pZCIsInNjcmlwdF9pZCIsInNjcmlwdElkIiwiY2hhbmdlZF9sZXNzb25faWQiLCJsZXNzb25fc2VsZWN0ZWQiLCJjb21wbGV0ZWQiLCJpbmNsdWRlVXNlcklkIiwic2V0U2VsZWN0ZWRMZXNzb25zIiwidW5wbHVnZ2VkTGVzc29uTGlzdCIsImxlc3NvbiIsImhhbmRsZUNoYW5nZSIsIkNvbXBsZXhMZXNzb25Db21wb25lbnQiLCJsZXNzb25MaXN0SXRlbSIsInRlYWwiLCJfcmVmIiwiaW5Qcm9ncmVzcyIsImxlc3Nvbk51bWJlciIsImxpbmtUb0xlc3NvblBsYW4iLCJoYW5kbGVMZXNzb25MaW5rQ2xpY2siLCJwcm9wVHlwZXMiLCJzaGFwZSIsInRlYWNoZXJTZWN0aW9ucyIsInNlbGVjdGVkU2VjdGlvbklkIiwidW5pdFNlbGVjdGlvbiIsImRpc3BhdGNoIiwiYWJvdmVGb290ZXIiLCJmb290ZXIiLCJsZWZ0IiwiekluZGV4IiwiYnV0dG9uUm93IiwiZmxleEZsb3ciLCJqdXN0aWZ5Q29udGVudCIsIkRpYWxvZ0Zvb3RlciIsImJ1dHRvblJvd1N0eWxlIiwiY2hhckF0Iiwic2NyaXB0VXJsRm9yU3R1ZGVudCIsInNjcmlwdE5hbWUiLCJzdHVkZW50SWQiLCJoYXNPd24iLCJjbGFzc05hbWVzIiwiY2xhc3NlcyIsImFyZyIsImFyZ1R5cGUiLCJpbm5lciIsImRlZmF1bHQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwiY29udGVudCIsIm5lZWRMYXllciIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydEJ5U2VsZWN0b3IiLCJpbnNlcnQiLCJnZXRUYXJnZXQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsInNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9hZGRvbkFjdGlvbnMiLCJfcmVkdXgiLCJfdW5pdFNlbGVjdGlvblJlZHV4IiwiX0NyZWF0ZVN0YW5kYXJkc1JlcG9ydERpYWxvZyIsImNvbXBvbmVudCIsIk92ZXJ2aWV3Iiwic3RvcmUiLCJjcmVhdGVTdG9yZSIsImNvbWJpbmVSZWR1Y2VycyIsInNlY3Rpb25Qcm9ncmVzcyIsIlByb3ZpZGVyIiwiVW5jb25uZWN0ZWRDcmVhdGVTdGFuZGFyZHNSZXBvcnREaWFsb2ciLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9