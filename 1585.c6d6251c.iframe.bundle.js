"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1585],{"./src/templates/manageStudents/manageStudentsRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.convertStudentServerData=exports.convertStudentDataToArray=exports.cancelStudentTransfer=exports.cancelEditingStudent=exports.blankStudentTransferStatus=exports.blankStudentTransfer=exports.addStudentsSuccess=exports.addStudentsFull=exports.addStudentsFailure=exports.addStudents=exports.addMultipleRows=exports.addMultipleAddRows=exports.TransferType=exports.TransferStatus=exports.RowType=exports.PrintLoginCardsButtonMetricsCategory=exports.ParentLetterButtonMetricsCategory=exports.AddStatus=void 0,exports.default=function manageStudents(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_LOGIN_TYPE){var addRowInitialization={};return action.loginType!==_sharedConstants.SectionLoginType.word&&action.loginType!==_sharedConstants.SectionLoginType.picture||(addRowInitialization={studentData:_defineProperty({},addRowId,_objectSpread(_objectSpread({},blankAddRow),{},{loginType:action.loginType})),editingData:_defineProperty({},addRowId,_objectSpread(_objectSpread({},blankAddRow),{},{loginType:action.loginType}))}),_objectSpread(_objectSpread({},state),{},{loginType:action.loginType},addRowInitialization)}if(action.type===SET_STUDENTS){var studentData=_objectSpread({},action.studentData);return state.loginType!==_sharedConstants.SectionLoginType.word&&state.loginType!==_sharedConstants.SectionLoginType.picture||(studentData[addRowId]=_objectSpread(_objectSpread({},blankAddRow),{},{loginType:state.loginType})),_objectSpread(_objectSpread({},state),{},{studentData,addStatus:{status:null,numStudents:null},isLoadingStudents:!1,sectionId:action.sectionId})}if(action.type===START_EDITING_STUDENT)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{isEditing:!0}))),editingData:_objectSpread(_objectSpread({},state.editingData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{id:action.studentId})))});if(action.type===CANCEL_EDITING_STUDENT)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{isEditing:!1}))),editingData:_lodash.default.omit(state.editingData,action.studentId)});if(action.type===START_SAVING_STUDENT)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{isSaving:!0}))),editingData:_objectSpread(_objectSpread({},state.editingData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.editingData[action.studentId]),{},{isSaving:!0})))});if(action.type===SAVE_STUDENT_SUCCESS)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread(_objectSpread({},state.studentData[action.studentId]),state.editingData[action.studentId]),{},{isEditing:!1,isSaving:!1,rowType:RowType.STUDENT}))),editingData:_lodash.default.omit(state.editingData,action.studentId)});if(action.type===ADD_STUDENT_FAILURE){for(var newState=_objectSpread(_objectSpread({},state),{},{addStatus:{status:AddStatus.FAIL,numStudents:action.numStudents}}),i=0;i<action.studentIds.length;i++)newState.studentData[action.studentIds[i]]=_objectSpread(_objectSpread({},state.studentData[action.studentIds[i]]),{},{isSaving:!1}),newState.editingData[action.studentIds[i]]=_objectSpread(_objectSpread({},state.editingData[action.studentIds[i]]),{},{isSaving:!1});return newState}if(action.type===ADD_STUDENT_FULL){for(var _newState=_objectSpread(_objectSpread({},state),{},{addStatus:_objectSpread(_objectSpread({},state.addStatus),{},{status:AddStatus.FULL,numStudents:action.numStudents,sectionCapacity:action.sectionCapacity,sectionCode:action.sectionCode,sectionStudentCount:action.sectionStudentCount})}),_i=0;_i<action.studentIds.length;_i++)_newState.studentData[action.studentIds[_i]]=_objectSpread(_objectSpread({},state.studentData[action.studentIds[_i]]),{},{isSaving:!1}),_newState.editingData[action.studentIds[_i]]=_objectSpread(_objectSpread({},state.editingData[action.studentIds[_i]]),{},{isSaving:!1});return _newState}if(action.type===ADD_STUDENT_SUCCESS){return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread(_objectSpread({},_lodash.default.omit(state.studentData,action.rowIds)),action.studentData),{},_defineProperty({},addRowId,_objectSpread(_objectSpread({},blankAddRow),{},{loginType:state.loginType}))),editingData:_objectSpread(_objectSpread({},_lodash.default.omit(state.editingData,action.rowIds)),{},_defineProperty({},addRowId,_objectSpread(_objectSpread({},blankAddRow),{},{loginType:state.loginType}))),addStatus:{status:AddStatus.SUCCESS,numStudents:action.numStudents}})}if(action.type===SET_SHARING_DEFAULT){var sharingDisabled=state.editingData[action.studentId].age<13;return _objectSpread(_objectSpread({},state),{},{editingData:_objectSpread(_objectSpread({},state.editingData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.editingData[action.studentId]),{},{id:action.studentId,sharingDisabled})))})}if(action.type===EDIT_STUDENT)return _objectSpread(_objectSpread({},state),{},{editingData:_objectSpread(_objectSpread({},state.editingData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread(_objectSpread({},state.editingData[action.studentId]),action.studentData),{},{id:action.studentId})))});if(action.type===EDIT_ALL){var _newState3=_objectSpread({},state);for(var studentKey in state.studentData){var student=state.studentData[studentKey];_newState3.studentData[student.id].isEditing=!0,_newState3.editingData[student.id]=_objectSpread(_objectSpread({},_newState3.studentData[student.id]),state.editingData[student.id])}return _newState3}if(action.type===UPDATE_ALL_SHARE_SETTING){var _newState4=_objectSpread({},state);for(var _studentKey in state.studentData){var _student=state.studentData[_studentKey];_newState4.editingData[_student.id].sharingDisabled=action.disable}return _newState4}if(action.type===SET_SECRET_IMAGE)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{secretPicturePath:action.image})))});if(action.type===SET_SECRET_WORDS)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{secretWords:action.words})))});if(action.type===REMOVE_STUDENT){var studentId=action.studentId;if(!state.studentData[studentId])throw new Error("student does not exist");return _objectSpread(_objectSpread({},state),{},{studentData:_lodash.default.omit(state.studentData,studentId),editingData:_lodash.default.omit(state.editingData,studentId)})}if(action.type===ADD_MULTIPLE_ROWS)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),action.studentData),editingData:_objectSpread(_objectSpread({},state.editingData),action.studentData)});if(action.type===SET_SHOW_SHARING_COLUMN)return _objectSpread(_objectSpread({},state),{},{showSharingColumn:!!action.visible});if(action.type===UPDATE_STUDENT_TRANSFER)return _objectSpread(_objectSpread({},state),{},{transferData:_objectSpread(_objectSpread({},state.transferData),action.transferData),transferStatus:blankStudentTransferStatus});if(action.type===CANCEL_STUDENT_TRANSFER)return _objectSpread(_objectSpread({},state),{},{transferData:blankStudentTransfer,transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{error:null})});if(action.type===TRANSFER_STUDENTS_SUCCESS)return _objectSpread(_objectSpread({},state),{},{transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{status:TransferStatus.SUCCESS,type:action.transferType,numStudents:action.numStudents,sectionDisplay:action.sectionDisplay})});if(action.type===TRANSFER_STUDENTS_FULL)return _objectSpread(_objectSpread({},state),{},{transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{status:TransferStatus.FULL,sectionCapacity:action.sectionCapacity,numStudents:action.numStudents,sectionCode:action.sectionCode,sectionStudentCount:action.sectionStudentCount,verb:action.verb})});if(action.type===TRANSFER_STUDENTS_FAILURE)return _objectSpread(_objectSpread({},state),{},{transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{status:TransferStatus.FAIL,error:action.error})});if(action.type===TRANSFER_STUDENTS_PENDING)return _objectSpread(_objectSpread({},state),{},{transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{status:TransferStatus.PENDING})});if(action.type===START_LOADING_STUDENTS)return _objectSpread(_objectSpread({},state),{},{isLoadingStudents:!0});if(action.type===FINISH_LOADING_STUDENTS)return _objectSpread(_objectSpread({},state),{},{isLoadingStudents:!1});return state},exports.updateStudentTransfer=exports.updateAllShareSetting=exports.transferStudentsSuccess=exports.transferStudentsPending=exports.transferStudentsFull=exports.transferStudentsFailure=exports.transferStudents=exports.startSavingStudent=exports.startLoadingStudents=exports.startEditingStudent=exports.setStudents=exports.setShowSharingColumn=exports.setSharingDefault=exports.setSecretWords=exports.setSecretImage=exports.setLoginType=exports.saveStudentSuccess=exports.saveStudent=exports.saveAllStudents=exports.removeStudent=exports.loadSectionStudentData=exports.handleShareSetting=exports.getStudentCount=exports.finishLoadingStudents=exports.editStudent=exports.editAll=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.ParentLetterButtonMetricsCategory={ABOVE_TABLE:"above-table",BELOW_TABLE:"below-table"},exports.PrintLoginCardsButtonMetricsCategory={MANAGE_STUDENTS:"manage-students",LOGIN_INFO:"section-login-info"};var AddStatus=exports.AddStatus={SUCCESS:"success",FAIL:"fail",FULL:"full"},RowType=exports.RowType={ADD:"addRow",NEW_STUDENT:"newStudentRow",STUDENT:"studentRow"},TransferStatus=exports.TransferStatus={SUCCESS:"success",FAIL:"fail",FULL:"full",PENDING:"pending"},TransferType=exports.TransferType={MOVE_STUDENTS:"moveStudents",COPY_STUDENTS:"copyStudents"},blankStudentTransfer=exports.blankStudentTransfer={studentIds:[],sectionId:null,otherTeacher:!1,otherTeacherSection:"",copyStudents:!0},blankStudentTransferStatus=exports.blankStudentTransferStatus={status:null,type:null,error:null,numStudents:0,sectionDisplay:""},addRowId=0,addRowIdCounter=-1,blankAddRow={id:addRowId,name:"",age:"",gender:"",username:"",loginType:"",sharingDisabled:!0,isEditing:!0,rowType:RowType.ADD},blankNewStudentRow={id:addRowId,name:"",age:"",gender:"",username:"",loginType:"",sharingDisabled:!0,isEditing:!0,rowType:RowType.NEW_STUDENT},initialState={loginType:"",sectionId:null,studentData:{},editingData:{},showSharingColumn:!1,addStatus:{status:null,numStudents:null},transferData:_objectSpread({},blankStudentTransfer),transferStatus:_objectSpread({},blankStudentTransferStatus),isLoadingStudents:!0},SET_LOGIN_TYPE="manageStudents/SET_LOGIN_TYPE",SET_STUDENTS="manageStudents/SET_STUDENTS",START_EDITING_STUDENT="manageStudents/START_EDITING_STUDENT",CANCEL_EDITING_STUDENT="manageStudents/CANCEL_EDITING_STUDENT",REMOVE_STUDENT="manageStudents/REMOVE_STUDENT",SET_SECRET_IMAGE="manageStudents/SET_SECRET_IMAGE",SET_SECRET_WORDS="manageStudents/SET_SECRET_WORDS",EDIT_STUDENT="manageStudents/EDIT_STUDENT",START_SAVING_STUDENT="manageStudents/START_SAVING_STUDENT",SAVE_STUDENT_SUCCESS="manageStudents/SAVE_STUDENT_SUCCESS",ADD_STUDENT_SUCCESS="manageStudents/ADD_STUDENT_SUCCESS",ADD_STUDENT_FAILURE="manageStudents/ADD_STUDENT_FAILURE",ADD_STUDENT_FULL="manageStudents/ADD_STUDENT_FULL",ADD_MULTIPLE_ROWS="manageStudents/ADD_MULTIPLE_ROWS",SET_SHOW_SHARING_COLUMN="manageStudents/SET_SHOW_SHARING_COLUMN",EDIT_ALL="manageStudents/EDIT_ALL",UPDATE_ALL_SHARE_SETTING="manageStudents/UPDATE_ALL_SHARE_SETTING",SET_SHARING_DEFAULT="manageStudents/SET_SHARING_DEFAULT",UPDATE_STUDENT_TRANSFER="manageStudents/UPDATE_STUDENT_TRANSFER",CANCEL_STUDENT_TRANSFER="manageStudents/CANCEL_STUDENT_TRANSFER",TRANSFER_STUDENTS_SUCCESS="manageStudents/TRANSFER_STUDENTS_SUCCESS",TRANSFER_STUDENTS_FAILURE="manageStudents/TRANSFER_STUDENTS_FAILURE",TRANSFER_STUDENTS_PENDING="manageStudents/TRANSFER_STUDENTS_PENDING",TRANSFER_STUDENTS_FULL="manageStudents/TRANSFER_STUDENTS_FULL",START_LOADING_STUDENTS="manageStudents/START_LOADING_STUDENTS",FINISH_LOADING_STUDENTS="manageStudents/FINISH_LOADING_STUDENTS",startLoadingStudents=exports.startLoadingStudents=function startLoadingStudents(){return{type:START_LOADING_STUDENTS}},finishLoadingStudents=exports.finishLoadingStudents=function finishLoadingStudents(){return{type:FINISH_LOADING_STUDENTS}},setStudents=(exports.setLoginType=function setLoginType(loginType){return{type:SET_LOGIN_TYPE,loginType}},exports.setStudents=function setStudents(studentData,sectionId){return{type:SET_STUDENTS,studentData,sectionId}}),removeStudent=(exports.startEditingStudent=function startEditingStudent(studentId){return{type:START_EDITING_STUDENT,studentId}},exports.cancelEditingStudent=function cancelEditingStudent(studentId){return{type:CANCEL_EDITING_STUDENT,studentId}},exports.removeStudent=function removeStudent(studentId){return{type:REMOVE_STUDENT,studentId}}),editAll=(exports.setSecretImage=function setSecretImage(studentId,image){return{type:SET_SECRET_IMAGE,studentId,image}},exports.setSecretWords=function setSecretWords(studentId,words){return{type:SET_SECRET_WORDS,studentId,words}},exports.editStudent=function editStudent(studentId,studentData){return{type:EDIT_STUDENT,studentId,studentData}},exports.setSharingDefault=function setSharingDefault(studentId){return{type:SET_SHARING_DEFAULT,studentId}},exports.editAll=function editAll(){return{type:EDIT_ALL}}),updateAllShareSetting=exports.updateAllShareSetting=function updateAllShareSetting(disable){return{type:UPDATE_ALL_SHARE_SETTING,disable}},startSavingStudent=exports.startSavingStudent=function startSavingStudent(studentId){return{type:START_SAVING_STUDENT,studentId}},saveStudentSuccess=exports.saveStudentSuccess=function saveStudentSuccess(studentId){return{type:SAVE_STUDENT_SUCCESS,studentId}},transferStudentsSuccess=(exports.updateStudentTransfer=function updateStudentTransfer(transferData){return{type:UPDATE_STUDENT_TRANSFER,transferData}},exports.cancelStudentTransfer=function cancelStudentTransfer(){return{type:CANCEL_STUDENT_TRANSFER}},exports.transferStudentsSuccess=function transferStudentsSuccess(transferType,numStudents,sectionDisplay){return{type:TRANSFER_STUDENTS_SUCCESS,transferType,numStudents,sectionDisplay}}),transferStudentsFailure=exports.transferStudentsFailure=function transferStudentsFailure(error){return{type:TRANSFER_STUDENTS_FAILURE,error}},transferStudentsPending=exports.transferStudentsPending=function transferStudentsPending(){return{type:TRANSFER_STUDENTS_PENDING}},transferStudentsFull=exports.transferStudentsFull=function transferStudentsFull(_ref,copy){var sectionCapacity=_ref.sectionCapacity,numStudents=_ref.numStudents,sectionCode=_ref.sectionCode,sectionStudentCount=_ref.sectionStudentCount;return{type:TRANSFER_STUDENTS_FULL,sectionCapacity,numStudents,sectionStudentCount,sectionCode,verb:copy?"copy":"move"}},addStudentsSuccess=exports.addStudentsSuccess=function addStudentsSuccess(numStudents,rowIds,studentData){return{type:ADD_STUDENT_SUCCESS,numStudents,rowIds,studentData}},addStudentsFailure=exports.addStudentsFailure=function addStudentsFailure(numStudents,error,studentIds){return{type:ADD_STUDENT_FAILURE,numStudents,error,studentIds}},addStudentsFull=exports.addStudentsFull=function addStudentsFull(_ref2,studentIds){var sectionCapacity=_ref2.sectionCapacity,numStudents=_ref2.numStudents,sectionCode=_ref2.sectionCode,sectionStudentCount=_ref2.sectionStudentCount;return{type:ADD_STUDENT_FULL,sectionCapacity,numStudents,sectionStudentCount,sectionCode,studentIds}},addMultipleRows=exports.addMultipleRows=function addMultipleRows(studentData){return{type:ADD_MULTIPLE_ROWS,studentData}},saveStudent=(exports.setShowSharingColumn=function setShowSharingColumn(visible){return{type:SET_SHOW_SHARING_COLUMN,visible}},exports.handleShareSetting=function handleShareSetting(disable){return function(dispatch,getState){dispatch(editAll()),dispatch(updateAllShareSetting(disable))}},exports.saveStudent=function saveStudent(studentId){return function(dispatch,getState){var state=getState().manageStudents,sectionId=getState().teacherSections.selectedSectionId;dispatch(startSavingStudent(studentId)),updateStudentOnServer(state.editingData[studentId],sectionId,(function(error,data){error&&console.error(error),dispatch(saveStudentSuccess(studentId)),dispatch((0,_teacherSectionsRedux.asyncLoadSectionData)(sectionId))}))}}),addStudents=(exports.saveAllStudents=function saveAllStudents(){return function(dispatch,getState){var state=getState().manageStudents;Object.values(state.editingData).filter((function(student){return student.rowType===RowType.STUDENT})).forEach((function(student){""!==student.name&&dispatch(saveStudent(student.id))}));var newStudentsToAdd=Object.values(state.editingData).filter((function(student){return student.rowType===RowType.NEW_STUDENT&&!student.isSaving})).map((function(student){return student.id}));newStudentsToAdd.length>0&&dispatch(addStudents(newStudentsToAdd))}},exports.addStudents=function addStudents(studentIds){return function(dispatch,getState){for(var state=getState().manageStudents,sectionId=getState().teacherSections.selectedSectionId,numStudentsToAdd=studentIds.length,i=0;i<studentIds.length;i++)dispatch(startSavingStudent(studentIds[i]));var filteredData=Object.values(state.editingData).filter((function(student){return studentIds.includes(student.id)}));addStudentOnServer(filteredData,sectionId,(function(error,data){error&&data&&data.result===AddStatus.FULL?dispatch(addStudentsFull(data,studentIds)):error?(dispatch(addStudentsFailure(numStudentsToAdd,error,studentIds)),console.error(error)):(dispatch(addStudentsSuccess(numStudentsToAdd,studentIds,convertStudentServerData(data,state.loginType,sectionId))),dispatch((0,_teacherSectionsRedux.asyncLoadSectionData)(sectionId)))}))}});exports.addMultipleAddRows=function addMultipleAddRows(studentDataArray){return function(dispatch,getState){var studentData=studentDataArray.filter((function(data){return data.name})).reduce((function(accumulator,data){var newId=addRowIdCounter--;return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},newId,_objectSpread(_objectSpread({},blankNewStudentRow),{},{name:data.name,familyName:data.familyName,id:newId})))}),{});dispatch(addMultipleRows(studentData))}},exports.transferStudents=function transferStudents(onComplete){return function(dispatch,getState){dispatch(transferStudentsPending());var newSectionCode,state=getState(),currentSectionCode=(0,_teacherSectionsRedux.sectionCode)(state,state.teacherSections.selectedSectionId),_state$manageStudents=state.manageStudents.transferData,studentIds=_state$manageStudents.studentIds,newSectionId=_state$manageStudents.sectionId,otherTeacher=_state$manageStudents.otherTeacher,otherTeacherSection=_state$manageStudents.otherTeacherSection,copyStudents=_state$manageStudents.copyStudents;newSectionCode=otherTeacher&&otherTeacherSection?otherTeacherSection:(0,_teacherSectionsRedux.sectionCode)(state,newSectionId),transferStudentsOnServer(studentIds,currentSectionCode,newSectionCode,copyStudents,(function(error,data){if(error&&data&&data.result===TransferStatus.FULL)dispatch(transferStudentsFull(data,copyStudents)),onComplete();else if(error)dispatch(transferStudentsFailure(data&&data.error||error));else{copyStudents&&otherTeacher||studentIds.forEach((function(id){dispatch(removeStudent(id))}));var transferType=copyStudents?TransferType.COPY_STUDENTS:TransferType.MOVE_STUDENTS,sectionDisplay=otherTeacher?otherTeacherSection:(0,_teacherSectionsRedux.sectionName)(state,newSectionId);dispatch(transferStudentsSuccess(transferType,studentIds.length,sectionDisplay)),onComplete(),dispatch((0,_teacherSectionsRedux.asyncLoadSectionData)(state.teacherSections.selectedSectionId))}}))}};exports.getStudentCount=function getStudentCount(state){var studentData=_objectSpread({},state.manageStudents.studentData);return delete studentData[0],Object.keys(studentData).length};var convertStudentServerData=exports.convertStudentServerData=function convertStudentServerData(studentData,loginType,sectionId){for(var studentLookup={},i=0;i<studentData.length;i++){var student=studentData[i];studentLookup[student.id]={id:student.id,name:student.name,familyName:student.family_name,username:student.username,email:student.email,age:student.age||"",gender:student.gender||"",genderTeacherInput:student.gender_teacher_input||"",secretWords:student.secret_words,secretPicturePath:student.secret_picture_path,loginType,sectionId,sharingDisabled:student.sharing_disabled,hasEverSignedIn:student.has_ever_signed_in,dependsOnThisSectionForLogin:student.depends_on_this_section_for_login,isEditing:!1,isSaving:!1,rowType:RowType.STUDENT,userType:student.user_type}}return studentLookup},updateStudentOnServer=(exports.convertStudentDataToArray=function convertStudentDataToArray(studentData){return Object.values(studentData).reverse()},function updateStudentOnServer(updatedStudentInfo,sectionId,onComplete){var dataToUpdate={student:{id:updatedStudentInfo.id,name:updatedStudentInfo.name,family_name:updatedStudentInfo.familyName,age:updatedStudentInfo.age,gender:updatedStudentInfo.gender,gender_teacher_input:updatedStudentInfo.genderTeacherInput,sharing_disabled:updatedStudentInfo.sharingDisabled}};_jquery.default.ajax({url:"/dashboardapi/sections/".concat(sectionId,"/students/").concat(dataToUpdate.student.id),method:"PATCH",type:"json",contentType:"application/json;charset=UTF-8",data:JSON.stringify(dataToUpdate)}).done((function(data){onComplete(null,data)})).fail((function(jqXhr,status){onComplete(status,null)}))}),addStudentOnServer=function addStudentOnServer(updatedStudentsInfo,sectionId,onComplete){for(var studentsToAdd=[],i=0;i<updatedStudentsInfo.length;i++)studentsToAdd[i]={editing:!0,name:updatedStudentsInfo[i].name,family_name:updatedStudentsInfo[i].familyName,age:updatedStudentsInfo[i].age,gender:updatedStudentsInfo[i].gender,gender_teacher_input:updatedStudentsInfo[i].genderTeacherInput,sharing_disabled:updatedStudentsInfo[i].sharingDisabled};var students={students:studentsToAdd};_jquery.default.ajax({url:"/dashboardapi/sections/".concat(sectionId,"/students/bulk_add"),method:"POST",contentType:"application/json;charset=UTF-8",data:JSON.stringify(students)}).done((function(data){onComplete(null,data)})).fail((function(jqXhr,status){onComplete(status,jqXhr.responseJSON||null)}))},transferStudentsOnServer=function transferStudentsOnServer(studentIds,currentSectionCode,newSectionCode,stayEnrolledInCurrentSection,onComplete){var payload={student_ids:studentIds,current_section_code:currentSectionCode,new_section_code:newSectionCode,stay_enrolled_in_current_section:stayEnrolledInCurrentSection};_jquery.default.ajax({url:"/dashboardapi/sections/transfers",method:"POST",contentType:"application/json;charset=UTF-8",data:JSON.stringify(payload)}).done((function(data){onComplete(null,data)})).fail((function(jqXhr,status){onComplete(status,jqXhr.responseJSON)}))};exports.loadSectionStudentData=function loadSectionStudentData(sectionId){return function(dispatch,getState){var state=getState().manageStudents;state.sectionId===sectionId?dispatch(finishLoadingStudents()):(dispatch(startLoadingStudents()),_jquery.default.ajax({method:"GET",url:"/dashboardapi/sections/".concat(sectionId,"/students"),dataType:"json"}).done((function(studentData){var convertedStudentData=convertStudentServerData(studentData,state.loginType,sectionId);dispatch(setStudents(convertedStudentData,sectionId))})))}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,