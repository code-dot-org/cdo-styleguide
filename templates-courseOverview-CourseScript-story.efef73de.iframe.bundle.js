(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[6306],{"./.storybook/decorators.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{reduxStore:()=>reduxStore});var redux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/redux/es/redux.js"),redux_thunk__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/redux-thunk/lib/index.js"),_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/code-studio/isRtlRedux.js"),_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/code-studio/responsiveRedux.js");const reduxStore=(reducers={},state={})=>(0,redux__WEBPACK_IMPORTED_MODULE_3__.createStore)((0,redux__WEBPACK_IMPORTED_MODULE_3__.combineReducers)({isRtl:_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_1__.default,responsive:_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_2__.default,...reducers}),state,(0,redux__WEBPACK_IMPORTED_MODULE_3__.applyMiddleware)(redux_thunk__WEBPACK_IMPORTED_MODULE_0__.default))},"./src/code-studio/isRtlRedux.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function locale(){var state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RTL)return action.isRtl;return state},exports.isRtlFromDOM=isRtlFromDOM,exports.setRtlFromDOM=exports.setRtl=void 0;var SET_RTL="isRtl/SET_RTL",setRtl=exports.setRtl=function setRtl(isRtl){return{type:SET_RTL,isRtl}};exports.setRtlFromDOM=function setRtlFromDOM(){return setRtl(isRtlFromDOM())};function isRtlFromDOM(){var head=document.getElementsByTagName("head")[0];if(head&&head.parentElement){var dir=head.parentElement.getAttribute("dir");return!(!dir||"rtl"!==dir.toLowerCase())}return!1}},"./src/code-studio/responsiveRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResponsiveSize=void 0,exports.default=function reducer(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RESPONSIVE_SIZE&&state.responsiveSize!==action.responsiveSize)return _objectSpread(_objectSpread({},state),{},{responsiveSize:action.responsiveSize});return state},exports.getResponsiveBreakpoint=getResponsiveBreakpoint,exports.setResponsiveSize=void 0;var _utils=__webpack_require__("./src/utils.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_RESPONSIVE_SIZE="responsive/SET_RESPONSIVE_SIZE",ResponsiveSize=(exports.setResponsiveSize=function setResponsiveSize(responsiveSize){return{type:SET_RESPONSIVE_SIZE,responsiveSize}},exports.ResponsiveSize=(0,_utils.makeEnum)("lg","md","sm","xs")),Breakpoints=[{breakpoint:992,responsiveSize:ResponsiveSize.lg},{breakpoint:720,responsiveSize:ResponsiveSize.md},{breakpoint:650,responsiveSize:ResponsiveSize.sm},{breakpoint:0,responsiveSize:ResponsiveSize.xs}];function getResponsiveBreakpoint(width){var responsiveSize=Breakpoints.find((function(_ref){var breakpoint=_ref.breakpoint;return width>breakpoint}));return void 0===responsiveSize?(console.error("No responsive size found for width ".concat(width,", defaulting to xs")),ResponsiveSize.xs):responsiveSize.responsiveSize}var initialState={responsiveSize:getResponsiveBreakpoint(window.innerWidth)}},"./src/code-studio/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.environmentSpecificCookieName=function environmentSpecificCookieName(name){var rack_env=window.dashboard.rack_env;if("production"===rack_env)return name;return"".concat(name,"_").concat(rack_env)},exports.getRootDomainFromHostname=function getRootDomainFromHostname(hostname){return hostname.split(".").slice(-2).join(".")},exports.hasQueryParam=function hasQueryParam(name){var parsedParams=queryParams();return Object.prototype.hasOwnProperty.call(parsedParams,name)},exports.queryParams=queryParams,exports.resetWindowLocation=function resetWindowLocation(){windowLocation=window.location},exports.setWindowLocation=function setWindowLocation(fakeLocation){windowLocation=fakeLocation},exports.updateQueryParam=function updateQueryParam(param,value){var useReplaceState=arguments.length>2&&void 0!==arguments[2]&&arguments[2],newString=_queryString.default.stringify(_objectSpread(_objectSpread({},_queryString.default.parse(windowLocation.search)),{},_defineProperty({},param,value))),newLocation=windowLocation.pathname;newString&&(newLocation+="?"+newString);var method=useReplaceState?"replaceState":"pushState";window.history[method](null,document.title,newLocation)};var _queryString=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/query-string/index.js"));function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var windowLocation=window.location;function queryParams(name){var parsed=_queryString.default.parse(windowLocation.search);return name?parsed[name]:parsed}},"./src/code-studio/viewAsRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.changeViewType=exports.ViewType=exports.SET_VIEW_TYPE=void 0,exports.default=function reducer(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ViewType.Participant,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_VIEW_TYPE){var viewType=action.viewType;if("Teacher"===viewType)viewType="Instructor",(0,_utils2.updateQueryParam)("viewAs","Instructor");else if("Student"===viewType)viewType="Participant",(0,_utils2.updateQueryParam)("viewAs","Participant");else if(!ViewType[viewType])throw new Error("unknown ViewType: "+viewType);return viewType}return state},exports.setViewType=void 0;var _utils=__webpack_require__("./src/utils.js"),_utils2=__webpack_require__("./src/code-studio/utils.js"),ViewType=exports.ViewType=(0,_utils.makeEnum)("Participant","Instructor"),SET_VIEW_TYPE=exports.SET_VIEW_TYPE="viewAs/SET_VIEW_TYPE";var setViewType=exports.setViewType=function setViewType(viewType){return{type:SET_VIEW_TYPE,viewType}};exports.changeViewType=function changeViewType(viewType,isAsync){return function(dispatch){viewType!==ViewType.Participant||!(0,_utils2.queryParams)("user_id")||((0,_utils2.updateQueryParam)("user_id",void 0),isAsync)?dispatch(setViewType(viewType)):(0,_utils.reload)()}}},"./src/fontConstants.js":module=>{module.exports={"metropolis-font":"'Metropolis', sans-serif","main-font":"'Metropolis', sans-serif","thin-font-weight":"100","extra-light-font-weight":"200","light-font-weight":"300","regular-font-weight":"400","medium-font-weight":"500","semi-bold-font-weight":"600","bold-font-weight":"700","extra-bold-font-weight":"800","black-font-weight":"900","main-font-thin":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"normal"},"main-font-thin-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"italic"},"main-font-extra-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"normal"},"main-font-extra-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"italic"},"main-font-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"normal"},"main-font-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"italic"},"main-font-regular":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"normal"},"main-font-regular-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"italic"},"main-font-medium":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"normal"},"main-font-medium-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"italic"},"main-font-semi-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"normal"},"main-font-semi-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"italic"},"main-font-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"normal"},"main-font-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"italic"},"main-font-extra-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"normal"},"main-font-extra-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"italic"},"main-font-black":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"normal"},"main-font-black-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"italic"},"barlowSemiCondensed-semibold":"'Barlow Semi Condensed Semibold', sans-serif","barlowSemiCondensed-medium":"'Barlow Semi Condensed Medium', sans-serif","code-font":"'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace","font-awesome-core-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css'","font-awesome-brands-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css'","font-awesome-solid-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css'","font-awesome-regular-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css'","font-awesome-v4-fonts-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css'","font-awesome-v4-shims-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css'"}},"./src/templates/Assigned.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}exports.default=function(_Component){function Assigned(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(Assigned,_Component),Assigned.prototype.render=function render(){return _react.default.createElement("span",{style:styles.assigned,className:"uitest-assigned"},_react.default.createElement("span",{style:styles.checkmark},_react.default.createElement(_FontAwesome.default,{icon:"check"})),_locale.default.assigned())},Assigned}(_react.Component);var styles={checkmark:{padding:5},assigned:_objectSpread(_objectSpread({color:_color.default.level_perfect,fontSize:16},_fontConstants.default["main-font-semi-bold"]),{},{lineHeight:"36px",marginLeft:10,verticalAlign:"top",display:"flex",alignItems:"center"})};module.exports=exports.default},"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var rendered=(this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact).processSync(this.props.markdown).contents,markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=_redactableMarkdown.default.create().getParser().use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHTML:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"});exports.default=SafeMarkdown;module.exports=exports.default},"./src/templates/UnassignSectionButton.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedUnassignSectionButton=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js"),_UnassignSectionDialog=_interopRequireDefault(__webpack_require__("./src/templates/UnassignSectionDialog.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function removeNullValues(key,val){if(null!=val)return val}function UnassignSectionButton(_ref){var sectionId=_ref.sectionId,courseName=_ref.courseName,buttonLocationAnalytics=_ref.buttonLocationAnalytics,initialUnitId=_ref.initialUnitId,initialCourseId=_ref.initialCourseId,unassignSection=_ref.unassignSection,sectionName=_ref.sectionName,isRtl=_ref.isRtl,_useState2=_slicedToArray((0,_react.useState)(_locale.default.assigned()),2),text=_useState2[0],setText=_useState2[1],_useState4=_slicedToArray((0,_react.useState)("check"),2),icon=_useState4[0],setIcon=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(!1),2),showUnassignDialog=_useState6[0],setShowUnassignDialog=_useState6[1],buttonMarginStyle=isRtl?styles.buttonMarginRTL:styles.buttonMargin,closeUnassignDialog=function closeUnassignDialog(){setShowUnassignDialog(!1)},firehoseSendRecord=function firehoseSendRecord(event){_firehose.default.putRecord({study:"assignment",event,data_json:JSON.stringify({sectionId,scriptId:initialUnitId,courseId:initialCourseId,location:buttonLocationAnalytics,date:new Date},removeNullValues)},{includeUserId:!0})};return _react.default.createElement("div",{onMouseOver:function onMouseOver(){setText(_locale.default.unassign()),setIcon("times")},onMouseLeave:function onMouseOut(){setText(_locale.default.assigned()),setIcon("check")},style:buttonMarginStyle,className:"uitest-unassign-button"},_react.default.createElement(_Button.default,{style:styles.boxShadow,color:_Button.default.ButtonColor.green,text,icon,onClick:function openUnassignDialog(){setShowUnassignDialog(!0),firehoseSendRecord("start-course-unassigned-from-section")}}),_react.default.createElement(_UnassignSectionDialog.default,{isOpen:showUnassignDialog,sectionId,courseName,sectionName,onClose:closeUnassignDialog,cancelUnassign:function cancelUnassign(){closeUnassignDialog(),firehoseSendRecord("cancel-course-unassigned-from-section")},unassignSection:function confirmUnassign(){unassignSection(sectionId,buttonLocationAnalytics)}}))}UnassignSectionButton.propTypes={sectionId:_propTypes.default.number.isRequired,courseName:_propTypes.default.string,buttonLocationAnalytics:_propTypes.default.string,initialUnitId:_propTypes.default.number,initialCourseId:_propTypes.default.number,unassignSection:_propTypes.default.func.isRequired,sectionName:_propTypes.default.string,isRtl:_propTypes.default.bool};var styles={buttonMargin:{marginLeft:10,display:"flex",alignItems:"center"},buttonMarginRTL:{marginRight:10,display:"flex",alignItems:"center"},boxShadow:{boxShadow:"inset 0 2px 0 0 rgb(255 255 255 / 40%)"}};exports.UnconnectedUnassignSectionButton=UnassignSectionButton,exports.default=(0,_reactRedux.connect)((function(state,props){return{isRtl:state.isRtl,initialUnitId:state.teacherSections.initialUnitId,initialCourseId:state.teacherSections.initialCourseId,sectionName:(0,_teacherSectionsRedux.sectionName)(state,props.sectionId)}}),{unassignSection:_teacherSectionsRedux.unassignSection})(UnassignSectionButton)},"./src/templates/UnassignSectionDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var UnassignSectionDialog=function(_Component){function UnassignSectionDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"unassign",(function(){_this.props.unassignSection(),_this.props.onClose()})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(UnassignSectionDialog,_Component),UnassignSectionDialog.prototype.render=function render(){var _this$props=this.props,isOpen=_this$props.isOpen,courseName=_this$props.courseName,sectionName=_this$props.sectionName,cancelUnassign=_this$props.cancelUnassign;return _react.default.createElement(_BaseDialog.default,{isOpen,handleClose:cancelUnassign,useUpdatedStyles:!0,style:styles.dialog},_react.default.createElement("h2",{className:"unassign-dialog-title"},_locale.default.unassignSection({courseName:courseName||_locale.default.thisUnit()})),_react.default.createElement("div",{id:"unassign-dialog-body",style:styles.confirm},_locale.default.unassignSectionConfirm({sectionName,courseName:courseName||_locale.default.thisUnit()})),_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_Button.default,{text:_locale.default.dialogCancel(),onClick:cancelUnassign,color:_Button.default.ButtonColor.gray,className:"ui-unassign-cancel-button"}),_react.default.createElement(_Button.default,{text:_locale.default.unassignConfirm(),onClick:this.unassign,color:_Button.default.ButtonColor.brandSecondaryDefault,className:"ui-confirm-unassign-section-button"})))},UnassignSectionDialog}(_react.Component);_defineProperty(UnassignSectionDialog,"propTypes",{isOpen:_propTypes.default.bool.isRequired,sectionId:_propTypes.default.number.isRequired,onClose:_propTypes.default.func.isRequired,cancelUnassign:_propTypes.default.func.isRequired,unassignSection:_propTypes.default.func.isRequired,courseName:_propTypes.default.string,sectionName:_propTypes.default.string});var styles={dialog:{paddingLeft:20,paddingRight:20,paddingBottom:20},confirm:{marginBottom:10}};exports.default=UnassignSectionDialog;module.exports=exports.default},"./src/templates/courseOverview/CourseScript.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedCourseScript=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_hiddenLessonRedux=__webpack_require__("./src/code-studio/hiddenLessonRedux.js"),_viewAsRedux=__webpack_require__("./src/code-studio/viewAsRedux.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_AssignButton=_interopRequireDefault(__webpack_require__("./src/templates/AssignButton.jsx")),_Assigned=_interopRequireDefault(__webpack_require__("./src/templates/Assigned.jsx")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_shapes=__webpack_require__("./src/templates/teacherDashboard/shapes.jsx"),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js"),_UnassignSectionButton=_interopRequireDefault(__webpack_require__("./src/templates/UnassignSectionButton.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_CourseScriptTeacherInfo=_interopRequireDefault(__webpack_require__("./src/templates/courseOverview/CourseScriptTeacherInfo.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var CourseScript=function(_Component){function CourseScript(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",{confirmationMessageOpen:!1}),_defineProperty(_this,"onReassignConfirm",(function(){_this.setState({confirmationMessageOpen:!0}),setTimeout((function(){_this.setState({confirmationMessageOpen:!1})}),15e3)})),_defineProperty(_this,"onClickHiddenToggle",(function(value){var _this$props=_this.props,name=_this$props.name,selectedSectionId=_this$props.selectedSectionId,id=_this$props.id;(0,_this$props.toggleHiddenScript)(name,selectedSectionId,id,"hidden"===value),_firehose.default.putRecord({study:"hidden-units",study_group:"v0",event:value,script_id:id,data_json:JSON.stringify({script_name:name,section_id:selectedSectionId})},{useProgressScriptId:!1})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CourseScript,_Component),CourseScript.prototype.render=function render(){var _this$props2=this.props,title=_this$props2.title,name=_this$props2.name,id=_this$props2.id,description=_this$props2.description,viewAs=_this$props2.viewAs,selectedSectionId=_this$props2.selectedSectionId,hiddenLessonState=_this$props2.hiddenLessonState,hasNoSections=_this$props2.hasNoSections,assignedSectionId=_this$props2.assignedSectionId,courseId=_this$props2.courseId,courseOfferingId=_this$props2.courseOfferingId,courseVersionId=_this$props2.courseVersionId,sectionsForDropdown=_this$props2.sectionsForDropdown,showAssignButton=_this$props2.showAssignButton,isHidden=(0,_hiddenLessonRedux.isScriptHiddenForSection)(hiddenLessonState,selectedSectionId,id);if(isHidden&&viewAs===_viewAsRedux.ViewType.Participant)return null;var assignedToStudent=viewAs===_viewAsRedux.ViewType.Participant&&assignedSectionId,selectedSection=sectionsForDropdown.find((function(section){return section.id===selectedSectionId})),assignedByTeacher=viewAs===_viewAsRedux.ViewType.Instructor&&selectedSection&&selectedSection.unitId===id,isAssigned=assignedToStudent||assignedByTeacher;return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.main),isHidden&&styles.hidden),className:"uitest-CourseScript","data-visibility":isHidden?"hidden":"visible"},_react.default.createElement("div",{style:styles.content},_react.default.createElement("div",{style:styles.title},title),_react.default.createElement("div",{style:styles.description},_react.default.createElement(_SafeMarkdown.default,{markdown:description})),_react.default.createElement("span",{style:styles.flex},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,text:_locale.default.goToUnit(),href:"/s/".concat(name).concat(location.search),color:_Button.default.ButtonColor.gray,className:"uitest-go-to-unit-button"}),isAssigned&&viewAs===_viewAsRedux.ViewType.Participant&&_react.default.createElement(_Assigned.default,null),isAssigned&&viewAs===_viewAsRedux.ViewType.Instructor&&selectedSectionId&&_react.default.createElement(_UnassignSectionButton.default,{courseName:title,sectionId:selectedSectionId,buttonLocationAnalytics:"course-overview-unit"}),!isAssigned&&viewAs===_viewAsRedux.ViewType.Instructor&&showAssignButton&&selectedSection&&_react.default.createElement(_AssignButton.default,{sectionId:selectedSection.id,scriptId:id,courseId,courseOfferingId,courseVersionId,assignmentName:title,sectionName:selectedSection.name,reassignConfirm:this.onReassignConfirm}))),viewAs===_viewAsRedux.ViewType.Instructor&&!hasNoSections&&_react.default.createElement(_CourseScriptTeacherInfo.default,{disabled:!selectedSectionId,isHidden,onToggleHiddenScript:this.onClickHiddenToggle}))},CourseScript}(_react.Component);_defineProperty(CourseScript,"propTypes",{title:_propTypes.default.string,name:_propTypes.default.string,id:_propTypes.default.number.isRequired,courseId:_propTypes.default.number,courseOfferingId:_propTypes.default.number,courseVersionId:_propTypes.default.number,description:_propTypes.default.string,assignedSectionId:_propTypes.default.number,showAssignButton:_propTypes.default.bool,viewAs:_propTypes.default.oneOf(Object.values(_viewAsRedux.ViewType)).isRequired,selectedSectionId:_propTypes.default.number,hiddenLessonState:_propTypes.default.object.isRequired,hasNoSections:_propTypes.default.bool.isRequired,toggleHiddenScript:_propTypes.default.func.isRequired,sectionsForDropdown:_propTypes.default.arrayOf(_shapes.sectionForDropdownShape).isRequired});var styles={main:{display:"table",width:"100%",height:"100%",background:_color.default.background_gray,borderWidth:1,borderColor:_color.default.border_gray,borderStyle:"solid",borderRadius:2,marginBottom:12},content:{padding:20},description:{marginTop:20,marginBottom:20},title:_objectSpread({fontSize:18},_fontConstants.default["main-font-semi-bold"]),hidden:{borderStyle:"dashed",borderWidth:4,marginTop:0,marginBottom:12,marginLeft:0,marginRight:0},flex:{display:"flex",alignItems:"center"}};exports.UnconnectedCourseScript=CourseScript,exports.default=(0,_reactRedux.connect)((function(state,ownProps){return{viewAs:state.viewAs,selectedSectionId:state.teacherSections.selectedSectionId,sectionsForDropdown:(0,_teacherSectionsRedux.sectionsForDropdown)(state.teacherSections,ownProps.courseOfferingId,ownProps.courseVersionId,ownProps.id),hiddenLessonState:state.hiddenLesson,hasNoSections:state.teacherSections.sectionsAreLoaded&&0===state.teacherSections.sectionIds.length}}),{toggleHiddenScript:_hiddenLessonRedux.toggleHiddenScript})(CourseScript)},"./src/templates/courseOverview/CourseScriptTeacherInfo.js":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_HiddenForSectionToggle=_interopRequireDefault(__webpack_require__("./src/templates/progress/HiddenForSectionToggle.jsx")),_TeacherInfoBox=_interopRequireDefault(__webpack_require__("./src/templates/progress/TeacherInfoBox.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function CourseScriptTeacherInfo(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CourseScriptTeacherInfo,_Component),CourseScriptTeacherInfo.prototype.render=function render(){var _this$props=this.props,disabled=_this$props.disabled,isHidden=_this$props.isHidden,onToggleHiddenScript=_this$props.onToggleHiddenScript,tooltipId=_lodash.default.uniqueId();return _react.default.createElement(_TeacherInfoBox.default,null,_react.default.createElement("div",{"data-tip":!0,"data-for":tooltipId,"aria-describedby":tooltipId},_react.default.createElement(_HiddenForSectionToggle.default,{hidden:isHidden,disabled,onChange:onToggleHiddenScript})),_react.default.createElement(_reactTooltip.default,{id:tooltipId,role:"tooltip",wrapper:"span",effect:"solid",disable:!disabled},_locale.default.hiddenScriptTooltip()))},CourseScriptTeacherInfo}(_react.Component),"propTypes",{disabled:_propTypes.default.bool.isRequired,isHidden:_propTypes.default.bool.isRequired,onToggleHiddenScript:_propTypes.default.func.isRequired}),module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{"use strict";function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/templates/progress/HiddenForSectionToggle.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedHiddenForSectionToggle=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var HiddenForSectionToggle=function(_React$Component){function HiddenForSectionToggle(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(HiddenForSectionToggle,_React$Component),HiddenForSectionToggle.prototype.render=function render(){var _this$props=this.props,hidden=_this$props.hidden,disabled=_this$props.disabled,onChange=_this$props.onChange,isRtl=_this$props.isRtl,mainStyle=_objectSpread(_objectSpread(_objectSpread({},styles.main),disabled&&styles.disabled),isRtl?styles.reverseButtons:null);return _react.default.createElement("div",{style:mainStyle,className:"uitest-togglehidden"},_react.default.createElement(_Button.default,{onClick:function onClick(){return!disabled&&onChange("visible")},text:_locale.default.visible(),color:_Button.default.ButtonColor.gray,disabled:!hidden,icon:"eye",style:_objectSpread(_objectSpread({},styles.button),styles.leftButton)}),_react.default.createElement(_Button.default,{onClick:function onClick(){return!disabled&&onChange("hidden")},text:_locale.default.hidden(),color:_Button.default.ButtonColor.gray,disabled:hidden,icon:"eye-slash",style:_objectSpread(_objectSpread({},styles.button),styles.rightButton)}))},HiddenForSectionToggle}(_react.default.Component);_defineProperty(HiddenForSectionToggle,"propTypes",{hidden:_propTypes.default.bool.isRequired,disabled:_propTypes.default.bool,onChange:_propTypes.default.func.isRequired,isRtl:_propTypes.default.bool});var styles={main:{wrap:"nowrap",margin:"5px 15px"},disabled:{opacity:.5},button:{display:"inline-block",paddingLeft:0,paddingRight:0,boxSizing:"border-box",width:"50%",margin:"5px 0px"},leftButton:{borderTopRightRadius:0,borderBottomRightRadius:0},rightButton:{borderTopLeftRadius:0,borderBottomLeftRadius:0},reverseButtons:{display:"flex",flexDirection:"row-reverse"}};exports.UnconnectedHiddenForSectionToggle=HiddenForSectionToggle,exports.default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))(HiddenForSectionToggle)},"./src/templates/progress/TeacherInfoBox.js":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var styles={outer:{display:"table-cell",verticalAlign:"top",width:200,height:"100%",borderRadius:2},inner:{backgroundColor:_color.default.lightest_cyan,height:"100%",borderWidth:1,borderColor:_color.default.cyan,borderStyle:"solid",textAlign:"center"}},TeacherInfoBox=function TeacherInfoBox(_ref){var children=_ref.children;return 0===children.length?null:_react.default.createElement("div",{style:styles.outer,className:"teacher-info-box"},_react.default.createElement("div",{style:styles.inner},children))};TeacherInfoBox.propTypes={children:_propTypes.default.node.isRequired};exports.default=TeacherInfoBox;module.exports=exports.default},"./src/templates/teacherDashboard/DialogFooter.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var style={aboveFooter:{height:"90px"},footer:{position:"absolute",height:"100px",padding:"0 20px",left:"0",right:"0",bottom:"0",background:"white",zIndex:"500"},buttonRow:{display:"flex",flexFlow:"row",justifyContent:"space-between"},rightAlign:{justifyContent:"flex-end"}};_defineProperty(exports.default=function(_Component){function DialogFooter(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(DialogFooter,_Component),DialogFooter.prototype.render=function render(){var buttonRowStyle=this.props.rightAlign?_objectSpread(_objectSpread({},style.buttonRow),style.rightAlign):style.buttonRow;return _react.default.createElement("div",null,_react.default.createElement("div",{style:style.aboveFooter}),_react.default.createElement("div",{style:style.footer},_react.default.createElement("hr",null),_react.default.createElement("div",{style:buttonRowStyle},this.props.children)))},DialogFooter}(_react.Component),"propTypes",{rightAlign:_propTypes.default.bool,children:_propTypes.default.any}),module.exports=exports.default},"./src/templates/teacherDashboard/shapes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.sortableSectionShape=exports.sectionShape=exports.sectionForDropdownShape=exports.loadErrorShape=exports.classroomShape=exports.assignmentUnitShape=exports.assignmentCourseVersionShape=exports.assignmentCourseOfferingShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");exports.sectionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,createdAt:_propTypes.default.string,loginType:_propTypes.default.oneOf(Object.keys(_sharedConstants.SectionLoginType)),lessonExtras:_propTypes.default.bool.isRequired,pairingAllowed:_propTypes.default.bool.isRequired,ttsAutoplayEnabled:_propTypes.default.bool.isRequired,studentCount:_propTypes.default.number.isRequired,code:_propTypes.default.string.isRequired,courseOfferingId:_propTypes.default.number,courseVersionId:_propTypes.default.number,unitId:_propTypes.default.number,courseId:_propTypes.default.number,scriptId:_propTypes.default.number,grades:_propTypes.default.arrayOf(_propTypes.default.string),providerManaged:_propTypes.default.bool.isRequired,restrictSection:_propTypes.default.bool,postMilestoneDisabled:_propTypes.default.bool,syncEnabled:_propTypes.default.bool}),exports.assignmentUnitShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,path:_propTypes.default.string.isRequired,lesson_extras_available:_propTypes.default.bool.isRequired,text_to_speech_enabled:_propTypes.default.bool.isRequired,position:_propTypes.default.number}),exports.assignmentCourseVersionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,version_year:_propTypes.default.string.isRequired,content_root_id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,path:_propTypes.default.string.isRequired,type:_propTypes.default.string.isRequired,is_stable:_propTypes.default.bool.isRequired,is_recommended:_propTypes.default.bool.isRequired,locales:_propTypes.default.array,units:_propTypes.default.object.isRequired}),exports.assignmentCourseOfferingShape=_propTypes.default.shape({elementary:_propTypes.default.object,high:_propTypes.default.object,hoc:_propTypes.default.object,middle:_propTypes.default.object}),exports.classroomShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,section:_propTypes.default.string,enrollment_code:_propTypes.default.string.isRequired}),exports.loadErrorShape=_propTypes.default.shape({status:_propTypes.default.number.isRequired,message:_propTypes.default.string.isRequired}),exports.sortableSectionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,courseVersionName:_propTypes.default.string,loginType:_propTypes.default.oneOf(Object.keys(_sharedConstants.SectionLoginType)).isRequired,studentCount:_propTypes.default.number.isRequired,code:_propTypes.default.string.isRequired,grades:_propTypes.default.arrayOf(_propTypes.default.string),providerManaged:_propTypes.default.bool.isRequired,hidden:_propTypes.default.bool.isRequired,assignmentName:_propTypes.default.arrayOf(_propTypes.default.string),assignmentPath:_propTypes.default.arrayOf(_propTypes.default.string)}),exports.sectionForDropdownShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,isAssigned:_propTypes.default.bool.isRequired})},"./src/templates/courseOverview/CourseScript.story.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithTeacherInfo=exports.NoSectionSelected=exports.HiddenAsTeacher=exports.Default=void 0;var _immutable=_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_viewAsRedux=__webpack_require__("./src/code-studio/viewAsRedux.js"),_decorators=__webpack_require__("./.storybook/decorators.js"),_CourseScript=__webpack_require__("./src/templates/courseOverview/CourseScript.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_CourseScript.UnconnectedCourseScript};var unhiddenState=_immutable.default.fromJS({initialized:!1,hideableLessonsAllowed:!1,lessonsBySection:{},scriptsBySection:{}}),hiddenState=unhiddenState.setIn(["lessonsBySection",11..toString(),123..toString()],!0),defaultProps={title:"CSP Unit 1 - The Internet",name:"csp1",id:123,description:"This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.",viewAs:_viewAsRedux.ViewType.Instructor,selectedSectionId:11,hiddenLessonState:unhiddenState,hasNoSections:!0,toggleHiddenScript:function toggleHiddenScript(){},sectionsForDropdown:[{name:"Section 11",id:11,isAssigned:!1}]},Template=function Template(args){return _react.default.createElement(_reactRedux.Provider,{store:(0,_decorators.reduxStore)()},_react.default.createElement(_CourseScript.UnconnectedCourseScript,_extends({},defaultProps,args)))};exports.Default=Template.bind({});(exports.WithTeacherInfo=Template.bind({})).args={selectedSectionId:11,hasNoSections:!1},(exports.HiddenAsTeacher=Template.bind({})).args={selectedSectionId:11,hasNoSections:!1,hiddenLessonState:hiddenState},(exports.NoSectionSelected=Template.bind({})).args={hasNoSection:!1,hiddenLessonState:hiddenState}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,