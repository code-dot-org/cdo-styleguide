"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[5786],{"./src/templates/FontAwesome.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/progress/FocusAreaIndicator.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var styles={main:{display:"inline-block",position:"absolute",right:0,top:0,whiteSpace:"nowrap"},arrowContainer:{display:"inline-block",position:"relative",top:10},leftArrow:{display:"inline-block",width:0,height:0,borderStyle:"solid",borderWidth:"17px 20px 17px",borderColor:"transparent ".concat(_color.default.cyan," transparent transparent")},focusArea:{display:"inline-block",backgroundColor:_color.default.cyan,color:_color.default.white,height:34,lineHeight:"34px",position:"relative",top:-3},text:{display:"inline-block"},focusAreaIcon:{display:"inline-block",color:_color.default.white,lineHeight:"13px",padding:5,marginLeft:5,marginRight:5,borderRadius:4,":hover":{backgroundColor:_color.default.default_blue}}};exports.default=(0,_radium.default)((function FocusAreaIndicator(){return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.arrowContainer},_react.default.createElement("div",{style:styles.leftArrow})),_react.default.createElement("div",{style:styles.focusArea},_react.default.createElement("div",{style:styles.text},"Focus Area"),_react.default.createElement("a",{href:window.location.pathname+"/preview-assignments"},_react.default.createElement("div",{style:styles.focusAreaIcon,"data-tip":!0,"data-for":"focus-area"},_react.default.createElement(_FontAwesome.default,{icon:"pencil"})))),_react.default.createElement(_reactTooltip.default,{id:"focus-area",role:"tooltip",effect:"solid"},"Click to change your focus area."))}));module.exports=exports.default},"./src/templates/progress/ProgressBubbleSet.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressBubbleSet=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_ProgressBubble=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressBubble.jsx")),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBubbleSet=function(_React$Component){function ProgressBubbleSet(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"renderBubble",(function(level,index,isSublevel){var _this$props=_this.props,levels=_this$props.levels,selectedSectionId=_this$props.selectedSectionId,selectedStudentId=_this$props.selectedStudentId,isRtl=_this$props.isRtl,backgroundFirstStyle=isRtl?styles.backgroundLast:styles.backgroundFirst,backgroundLastStyle=isRtl?styles.backgroundFirst:styles.backgroundLast,backgroundStyleProp=_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},styles.background),level.isConceptLevel&&styles.backgroundDiamond),isSublevel&&styles.backgroundSublevel),level.isUnplugged&&styles.backgroundPill),!isSublevel&&0===index&&backgroundFirstStyle),!isSublevel&&!level.sublevels&&index===levels.length-1&&backgroundLastStyle),containerStyleProp=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},styles.container),level.isUnplugged&&styles.pillContainer),level.isConceptLevel&&styles.diamondContainer),isSublevel&&styles.containerSublevel);return _react.default.createElement("div",{style:styles.withBackground,key:index},_react.default.createElement("div",{style:backgroundStyleProp}),_react.default.createElement("div",{style:containerStyleProp},_react.default.createElement(_ProgressBubble.default,{level,disabled:_this.props.disabled,smallBubble:isSublevel,selectedSectionId,selectedStudentId,hideToolTips:_this.props.hideToolTips,onClick:_this.props.onBubbleClick,lessonName:_this.props.lessonName})))})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBubbleSet,_React$Component),ProgressBubbleSet.prototype.render=function render(){var _this2=this,_this$props2=this.props,levels=_this$props2.levels,style=_this$props2.style,showSublevels=_this$props2.showSublevels;return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.main),style)},levels.map((function(level,index){return _react.default.createElement("span",{key:index},_this2.renderBubble(level,index,!1),showSublevels&&level.sublevels&&level.sublevels.map((function(sublevel,index){return _react.default.createElement("span",{key:index},_this2.renderBubble(sublevel,index,!0))})))})))},ProgressBubbleSet}(_react.default.Component);_defineProperty(ProgressBubbleSet,"propTypes",{levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,disabled:_propTypes.default.bool.isRequired,style:_propTypes.default.object,selectedSectionId:_propTypes.default.number,selectedStudentId:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),hideToolTips:_propTypes.default.bool,lessonExtrasEnabled:_propTypes.default.bool,showSublevels:_propTypes.default.bool,onBubbleClick:_propTypes.default.func,lessonName:_propTypes.default.string,isRtl:_propTypes.default.bool});var styles={main:{position:"relative",display:"inline-block"},withBackground:{display:"inline-block",position:"relative"},background:{height:10,backgroundColor:_color.default.lighter_gray,position:"absolute",left:0,right:0,top:(_progressStyles.DOT_SIZE+4+6-10)/2},backgroundDiamond:{top:(_progressStyles.DIAMOND_DOT_SIZE+4+12-10)/2},backgroundPill:{top:15},backgroundSublevel:{top:9},backgroundFirst:{left:15},backgroundLast:{right:15},container:{position:"relative"},containerSublevel:{top:5},diamondContainer:{height:36},pillContainer:{marginRight:2,height:37}};exports.UnconnectedProgressBubbleSet=ProgressBubbleSet,exports.default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))((0,_radium.default)(ProgressBubbleSet))},"./src/templates/progress/SummaryProgressRow.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.styles=exports.default=exports.UnconnectedSummaryProgressRow=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_viewAsRedux=__webpack_require__("./src/code-studio/viewAsRedux.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_FocusAreaIndicator=_interopRequireDefault(__webpack_require__("./src/templates/progress/FocusAreaIndicator.jsx")),_ProgressBubbleSet=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressBubbleSet.jsx")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function SummaryProgressRow(_ref){var dark=_ref.dark,lesson=_ref.lesson,levels=_ref.levels,lessonIsHiddenForStudents=_ref.lessonIsHiddenForStudents,lessonIsLockedForUser=_ref.lessonIsLockedForUser,lessonIsLockedForAllStudents=_ref.lessonIsLockedForAllStudents,viewAs=_ref.viewAs;if(lessonIsHiddenForStudents&&viewAs===_viewAsRedux.ViewType.Participant)return null;var isLockedForUser=lessonIsLockedForUser(lesson,levels,viewAs),isLockedForSection=lessonIsLockedForAllStudents(lesson.id),showAsLocked=isLockedForUser||isLockedForSection,lessonTitle=lesson.name;lesson.lessonNumber&&(lessonTitle=lesson.lessonNumber+". "+lessonTitle);var displayDashedBorder=lessonIsHiddenForStudents||showAsLocked,titleTooltipId=_lodash.default.uniqueId(),lockedTooltipId=_lodash.default.uniqueId();return _react.default.createElement("tr",{id:"summary-progress-row-".concat(lesson.lessonNumber),className:"uitest-summary-progress-row",style:_objectSpread(_objectSpread({},dark?styles.darkRow:styles.lightRow),displayDashedBorder&&styles.dashedBorder)},_react.default.createElement("td",{style:_objectSpread(_objectSpread({},styles.col1),isLockedForUser&&styles.fadedCol)},_react.default.createElement("div",{style:styles.colText},lessonIsHiddenForStudents&&_react.default.createElement(_FontAwesome.default,{icon:"eye-slash",style:styles.icon}),lesson.lockable&&_react.default.createElement("span",{"data-tip":!0,"data-for":lockedTooltipId},_react.default.createElement(_FontAwesome.default,{icon:showAsLocked?"lock":"unlock",style:_objectSpread(_objectSpread({},styles.icon),!showAsLocked&&styles.unlockedIcon)}),!showAsLocked&&viewAs===_viewAsRedux.ViewType.Instructor&&_react.default.createElement(_reactTooltip.default,{id:lockedTooltipId,role:"tooltip",wrapper:"span",effect:"solid"},_locale.default.lockAssessmentLong())),_react.default.createElement("span",{"data-tip":!0,"data-for":titleTooltipId,"aria-describedby":titleTooltipId},lessonTitle,_react.default.createElement(_reactTooltip.default,{id:titleTooltipId,role:"tooltip",wrapper:"span",effect:"solid"},lesson.name)))),_react.default.createElement("td",{style:_objectSpread(_objectSpread({},styles.col2),isLockedForUser&&styles.fadedCol)},0===levels.length?_locale.default.lessonContainsNoLevels():_react.default.createElement(_ProgressBubbleSet.default,{levels,disabled:isLockedForUser,style:lesson.isFocusArea?styles.focusAreaMargin:void 0,lessonName:lesson.name}),lesson.isFocusArea&&_react.default.createElement(_FocusAreaIndicator.default,null)))}SummaryProgressRow.propTypes={dark:_propTypes.default.bool.isRequired,lesson:_progressTypes.lessonType.isRequired,levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,viewAs:_propTypes.default.oneOf(Object.keys(_viewAsRedux.ViewType)),lessonIsHiddenForStudents:_propTypes.default.bool.isRequired,lessonIsLockedForUser:_propTypes.default.func.isRequired,lessonIsLockedForAllStudents:_propTypes.default.func.isRequired};var styles=exports.styles={lightRow:{backgroundColor:_color.default.table_light_row},darkRow:{backgroundColor:_color.default.table_dark_row},dashedBorder:{borderStyle:"dashed",borderWidth:2},col1:{width:200,minWidth:200,maxWidth:200,lineHeight:"52px",color:_color.default.charcoal,letterSpacing:-.11,whiteSpace:"nowrap",paddingLeft:20,paddingRight:20,borderRightWidth:1,borderRightColor:_color.default.border_light_gray,borderRightStyle:"solid"},col2:{position:"relative",width:"100%",paddingLeft:20,paddingRight:20},fadedCol:{opacity:.6},colText:_objectSpread(_objectSpread({color:_color.default.charcoal},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:12,overflow:"hidden",textOverflow:"ellipsis"}),icon:{marginRight:5,fontSize:12,color:_color.default.cyan},unlockedIcon:{color:_color.default.orange},focusAreaMargin:{marginRight:130},opaque:{opacity:1}};exports.UnconnectedSummaryProgressRow=SummaryProgressRow,exports.default=(0,_reactRedux.connect)((function(state,ownProps){return{viewAs:state.viewAs,lessonIsHiddenForStudents:!(0,_progressHelpers.lessonIsVisible)(ownProps.lesson,state,_viewAsRedux.ViewType.Participant),lessonIsLockedForUser:function lessonIsLockedForUser(lesson,levels,viewAs){return(0,_progressHelpers.lessonIsLockedForUser)(lesson,levels,state,viewAs)},lessonIsLockedForAllStudents:function lessonIsLockedForAllStudents(lessonId){return(0,_progressHelpers.lessonIsLockedForAllStudents)(lessonId,state)}}}))(SummaryProgressRow)},"./src/templates/progress/SummaryProgressTable.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedSummaryProgressTable=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_SummaryProgressRow=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/SummaryProgressRow.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SummaryProgressTable=function(_React$Component){function SummaryProgressTable(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SummaryProgressTable,_React$Component),SummaryProgressTable.prototype.render=function render(){var _this=this,minimal=this.props.minimal,_this$props$groupedLe=this.props.groupedLesson,lessons=_this$props$groupedLe.lessons,levelsByLesson=_this$props$groupedLe.levelsByLesson;if(lessons.length!==levelsByLesson.length)throw new Error("Inconsistent number of lessons");return _react.default.createElement("table",{className:"uitest-summary-progress-table",style:styles.table},!minimal&&_react.default.createElement("thead",null,_react.default.createElement("tr",{style:styles.headerRow},_react.default.createElement("td",{style:_SummaryProgressRow.styles.col1},_react.default.createElement("div",{style:_SummaryProgressRow.styles.colText},_locale.default.lessonName())),_react.default.createElement("td",{style:_SummaryProgressRow.styles.col2},_react.default.createElement("div",{style:_SummaryProgressRow.styles.colText},_locale.default.progress())))),_react.default.createElement("tbody",null,lessons.map((function(lesson,index){return{unfilteredIndex:index,lesson}})).filter((function(item){return _this.props.lessonIsVisible(item.lesson)})).map((function(item,filteredIndex){return _react.default.createElement(_SummaryProgressRow.default,{key:item.unfilteredIndex,levels:levelsByLesson[item.unfilteredIndex],lesson:item.lesson,dark:filteredIndex%2==1})}))))},SummaryProgressTable}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SummaryProgressTable,"propTypes",{groupedLesson:_progressTypes.groupedLessonsType.isRequired,minimal:_propTypes.default.bool,lessonIsVisible:_propTypes.default.func.isRequired});var styles={table:{borderWidth:1,borderStyle:"solid",borderLeftColor:_color.default.border_gray,borderTopColor:_color.default.border_gray,borderBottomColor:_color.default.border_light_gray,borderRightColor:_color.default.border_light_gray},headerRow:{backgroundColor:_color.default.table_header}};exports.UnconnectedSummaryProgressTable=SummaryProgressTable,exports.default=(0,_reactRedux.connect)((function(state){return{lessonIsVisible:function lessonIsVisible(lesson){return(0,_progressHelpers.lessonIsVisible)(lesson,state,state.viewAs)}}}))(SummaryProgressTable)},"./node_modules/css-loader/dist/runtime/api.js":module=>{module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/progress/SummaryProgressTable.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithFocusArea=exports.UnpluggedLesson=exports.UnlockedLessonCurrentSectionAsInstructor=exports.ThirdRowHiddenAsParticipant=exports.ThirdLessonHiddenAsInstructor=exports.Simple=exports.SecondLessonHiddenAsParticipant=exports.SecondLessonHiddenAsInstructor=exports.LockedLessonCurrentSectionAsInstructor=exports.LockedLessonAsParticipant=exports.LockedHiddenLessonAsInstructor=exports.ForPeerReviews=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_viewAsRedux=__webpack_require__("./src/code-studio/viewAsRedux.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_progressTestHelpers=__webpack_require__("./src/templates/progress/progressTestHelpers.js"),_SummaryProgressTable=__webpack_require__("./src/templates/progress/SummaryProgressTable.jsx");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}exports.default={component:_SummaryProgressTable.UnconnectedSummaryProgressTable};var defaultProps={groupedLesson:{lessons:[(0,_progressTestHelpers.fakeLesson)("Jigsaw",1,!1,1),(0,_progressTestHelpers.fakeLesson)("Maze",2,!1,2),(0,_progressTestHelpers.fakeLesson)("Artist",3,!1,3),(0,_progressTestHelpers.fakeLesson)("Something",4,!1,4)],levelsByLesson:[[_objectSpread(_objectSpread({},(0,_progressTestHelpers.fakeLevels)(1)[0]),{},{name:"First progression"})].concat(_toConsumableArray((0,_progressTestHelpers.fakeLevels)(5,2).map((function(level){return _objectSpread(_objectSpread({},level),{},{progression:"Second Progression"})}))),[_objectSpread(_objectSpread({},(0,_progressTestHelpers.fakeLevels)(1)[0]),{},{name:"Last progression"})]),(0,_progressTestHelpers.fakeLevels)(2),(0,_progressTestHelpers.fakeLevels)(2),(0,_progressTestHelpers.fakeLevels)(2)]},viewAs:_viewAsRedux.ViewType.Participant,lessonIsVisible:function lessonIsVisible(){return!0}},Template=function Template(args){var store=args.store,props=args.props;return _react.default.createElement(_reactRedux.Provider,{store},_react.default.createElement(_SummaryProgressTable.UnconnectedSummaryProgressTable,props))};(exports.Simple=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Instructor,null),props:defaultProps},(exports.WithFocusArea=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Instructor,null),props:_objectSpread(_objectSpread({},defaultProps),{},{groupedLesson:{lessons:defaultProps.groupedLesson.lessons.map((function(lesson,index){return _objectSpread(_objectSpread({},lesson),{},{isFocusArea:1===index})})),levelsByLesson:defaultProps.groupedLesson.levelsByLesson.map((function(levels,index){return 1===index?(0,_progressTestHelpers.fakeLevels)(8):levels}))},lessonIsVisible:function lessonIsVisible(){return!0}})},(exports.ForPeerReviews=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Instructor,null),props:{groupedLesson:{lessons:[{id:-1,isFocusArea:!1,lockable:!1,name:"You must complete 3 reviews for this unit"}],levelsByLesson:[[{id:"-1",name:"Link to submitted review",status:_sharedConstants.LevelStatus.perfect,isLocked:!1,url:"/peer_reviews/1",levelNumber:1},{id:"-1",name:"Review a new submission",status:_sharedConstants.LevelStatus.not_tried,isLocked:!1,url:"/pull-review",levelNumber:2},{id:"-1",icon:"fa-lock",name:"Reviews unavailable at this time",status:_sharedConstants.LevelStatus.not_tried,isLocked:!0,url:"",levelNumber:3}]]},lessonIsVisible:function lessonIsVisible(){return!0}}},(exports.SecondLessonHiddenAsInstructor=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Instructor,"2"),props:_objectSpread(_objectSpread({},defaultProps),{},{viewAs:_viewAsRedux.ViewType.Instructor,lessonIsVisible:function lessonIsVisible(lesson,viewAs){return 2!==lesson.id||viewAs===_viewAsRedux.ViewType.Instructor}})},(exports.ThirdLessonHiddenAsInstructor=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Instructor,"3"),props:_objectSpread(_objectSpread({},defaultProps),{},{viewAs:_viewAsRedux.ViewType.Instructor,lessonIsVisible:function lessonIsVisible(lesson,viewAs){return 3!==lesson.id||viewAs===_viewAsRedux.ViewType.Instructor}})},(exports.SecondLessonHiddenAsParticipant=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Participant,"2"),props:_objectSpread(_objectSpread({},defaultProps),{},{lessonIsVisible:function lessonIsVisible(lesson,viewAs){return 2!==lesson.id||viewAs===_viewAsRedux.ViewType.Instructor}})},(exports.ThirdRowHiddenAsParticipant=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Participant,"3"),props:_objectSpread(_objectSpread({},defaultProps),{},{lessonIsVisible:function lessonIsVisible(lesson,viewAs){return 3!==lesson.id||viewAs===_viewAsRedux.ViewType.Instructor}})},(exports.LockedLessonCurrentSectionAsInstructor=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithLockedLesson)(_viewAsRedux.ViewType.Instructor,!0),props:_objectSpread(_objectSpread({},defaultProps),{},{groupedLesson:{lessons:[(0,_progressTestHelpers.fakeLesson)("Jigsaw",1,!1,1),(0,_progressTestHelpers.fakeLesson)("Assessment One",2,!0),(0,_progressTestHelpers.fakeLesson)("Artist",3,!1,2)],levelsByLesson:[(0,_progressTestHelpers.fakeLevels)(3),(0,_progressTestHelpers.fakeLevels)(4),(0,_progressTestHelpers.fakeLevels)(2)]},viewAs:_viewAsRedux.ViewType.Instructor})},(exports.LockedLessonAsParticipant=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithLockedLesson)(_viewAsRedux.ViewType.Participant),props:_objectSpread(_objectSpread({},defaultProps),{},{groupedLesson:{lessons:[(0,_progressTestHelpers.fakeLesson)("Jigsaw",1,!1,1),(0,_progressTestHelpers.fakeLesson)("Assessment One",2,!0),(0,_progressTestHelpers.fakeLesson)("Artist",3,!1,2)],levelsByLesson:[(0,_progressTestHelpers.fakeLevels)(3),(0,_progressTestHelpers.fakeLevels)(4).map((function(level){return _objectSpread(_objectSpread({},level),{},{isLocked:!0})})),(0,_progressTestHelpers.fakeLevels)(2)]}})},(exports.UnlockedLessonCurrentSectionAsInstructor=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithLockedLesson)(_viewAsRedux.ViewType.Instructor,!0),props:_objectSpread(_objectSpread({},defaultProps),{},{groupedLesson:{lessons:[(0,_progressTestHelpers.fakeLesson)("Jigsaw",1,!1,1),(0,_progressTestHelpers.fakeLesson)("Assessment One",2,!0),(0,_progressTestHelpers.fakeLesson)("Artist",3,!1,2)],levelsByLesson:[(0,_progressTestHelpers.fakeLevels)(3),(0,_progressTestHelpers.fakeLevels)(4),(0,_progressTestHelpers.fakeLevels)(2)]},viewAs:_viewAsRedux.ViewType.Instructor,lessonIsVisible:function lessonIsVisible(){return!0}})},(exports.LockedHiddenLessonAsInstructor=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Instructor,"2"),props:_objectSpread(_objectSpread({},defaultProps),{},{groupedLesson:{lessons:[(0,_progressTestHelpers.fakeLesson)("Jigsaw",1,!1,1),(0,_progressTestHelpers.fakeLesson)("Assessment One",2,!0),(0,_progressTestHelpers.fakeLesson)("Artist",3,!1,2)],levelsByLesson:[(0,_progressTestHelpers.fakeLevels)(3),(0,_progressTestHelpers.fakeLevels)(4),(0,_progressTestHelpers.fakeLevels)(2)]},viewAs:_viewAsRedux.ViewType.Instructor,lessonIsVisible:function lessonIsVisible(lesson,viewAs){return 2!==lesson.id||viewAs===_viewAsRedux.ViewType.Instructor}})},(exports.UnpluggedLesson=Template.bind({})).args={store:(0,_progressTestHelpers.createStoreWithHiddenLesson)(_viewAsRedux.ViewType.Instructor,null),props:_objectSpread(_objectSpread({},defaultProps),{},{groupedLesson:{lessons:[(0,_progressTestHelpers.fakeLesson)("Lesson with Unplugged",1,!1,1)],levelsByLesson:[[(0,_progressTestHelpers.fakeLevel)({isUnplugged:!0})].concat(_toConsumableArray((0,_progressTestHelpers.fakeLevels)(3)))]}})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,