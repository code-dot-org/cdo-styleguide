/*! For license information please see templates-courseRollupPages-CourseRollup-story.264c662a.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[5724],{"./.storybook/decorators.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{reduxStore:()=>reduxStore});var redux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/redux/es/redux.js"),redux_thunk__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/redux-thunk/lib/index.js"),_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/code-studio/isRtlRedux.js"),_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/code-studio/responsiveRedux.js");const reduxStore=(reducers={},state={})=>(0,redux__WEBPACK_IMPORTED_MODULE_3__.createStore)((0,redux__WEBPACK_IMPORTED_MODULE_3__.combineReducers)({isRtl:_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_1__.default,responsive:_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_2__.default,...reducers}),state,(0,redux__WEBPACK_IMPORTED_MODULE_3__.applyMiddleware)(redux_thunk__WEBPACK_IMPORTED_MODULE_0__.default))},"./src/code-studio/isRtlRedux.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function locale(){var state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RTL)return action.isRtl;return state},exports.isRtlFromDOM=isRtlFromDOM,exports.setRtlFromDOM=exports.setRtl=void 0;var SET_RTL="isRtl/SET_RTL",setRtl=exports.setRtl=function setRtl(isRtl){return{type:SET_RTL,isRtl}};exports.setRtlFromDOM=function setRtlFromDOM(){return setRtl(isRtlFromDOM())};function isRtlFromDOM(){var head=document.getElementsByTagName("head")[0];if(head&&head.parentElement){var dir=head.parentElement.getAttribute("dir");return!(!dir||"rtl"!==dir.toLowerCase())}return!1}},"./src/code-studio/responsiveRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResponsiveSize=void 0,exports.default=function reducer(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RESPONSIVE_SIZE&&state.responsiveSize!==action.responsiveSize)return _objectSpread(_objectSpread({},state),{},{responsiveSize:action.responsiveSize});return state},exports.getResponsiveBreakpoint=getResponsiveBreakpoint,exports.setResponsiveSize=void 0;var _utils=__webpack_require__("./src/utils.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_RESPONSIVE_SIZE="responsive/SET_RESPONSIVE_SIZE",ResponsiveSize=(exports.setResponsiveSize=function setResponsiveSize(responsiveSize){return{type:SET_RESPONSIVE_SIZE,responsiveSize}},exports.ResponsiveSize=(0,_utils.makeEnum)("lg","md","sm","xs")),Breakpoints=[{breakpoint:992,responsiveSize:ResponsiveSize.lg},{breakpoint:720,responsiveSize:ResponsiveSize.md},{breakpoint:650,responsiveSize:ResponsiveSize.sm},{breakpoint:0,responsiveSize:ResponsiveSize.xs}];function getResponsiveBreakpoint(width){var responsiveSize=Breakpoints.find((function(_ref){var breakpoint=_ref.breakpoint;return width>breakpoint}));return void 0===responsiveSize?(console.error("No responsive size found for width ".concat(width,", defaulting to xs")),ResponsiveSize.xs):responsiveSize.responsiveSize}var initialState={responsiveSize:getResponsiveBreakpoint(window.innerWidth)}},"./src/code-studio/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.environmentSpecificCookieName=function environmentSpecificCookieName(name){var rack_env=window.dashboard.rack_env;if("production"===rack_env)return name;return"".concat(name,"_").concat(rack_env)},exports.getRootDomainFromHostname=function getRootDomainFromHostname(hostname){return hostname.split(".").slice(-2).join(".")},exports.hasQueryParam=function hasQueryParam(name){var parsedParams=queryParams();return Object.prototype.hasOwnProperty.call(parsedParams,name)},exports.queryParams=queryParams,exports.resetWindowLocation=function resetWindowLocation(){windowLocation=window.location},exports.setWindowLocation=function setWindowLocation(fakeLocation){windowLocation=fakeLocation},exports.updateQueryParam=function updateQueryParam(param,value){var useReplaceState=arguments.length>2&&void 0!==arguments[2]&&arguments[2],newString=_queryString.default.stringify(_objectSpread(_objectSpread({},_queryString.default.parse(windowLocation.search)),{},_defineProperty({},param,value))),newLocation=windowLocation.pathname;newString&&(newLocation+="?"+newString);var method=useReplaceState?"replaceState":"pushState";window.history[method](null,document.title,newLocation)};var _queryString=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/query-string/index.js"));function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var windowLocation=window.location;function queryParams(name){var parsed=_queryString.default.parse(windowLocation.search);return name?parsed[name]:parsed}},"./src/redux/instructionsDialog.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.closeDialog=void 0,exports.default=function reducer(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===OPEN_DIALOG){if(!0===state.open)throw new Error("dialog is already open");return{open:!0,imgOnly:action.imgOnly,imgUrl:action.imgUrl}}if(action.type===CLOSE_DIALOG){if(!1===state.open)throw new Error("dialog is already closed");return{open:!1}}return state},exports.openDialog=void 0;var OPEN_DIALOG="instructionsDialog/OPEN_DIALOG",CLOSE_DIALOG="instructionsDialog/CLOSE_DIALOG",initialState={open:!1,imgOnly:!1};exports.openDialog=function openDialog(_ref){var imgOnly=_ref.imgOnly,imgUrl=_ref.imgUrl;return{type:OPEN_DIALOG,imgOnly,imgUrl}},exports.closeDialog=function closeDialog(){return{type:CLOSE_DIALOG}}},"./src/templates/EnhancedSafeMarkdown.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedExpandableImagesWrapper=exports.ExpandableImagesWrapper=exports.ClickableTextWrapper=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactDom=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_utils=__webpack_require__("./src/code-studio/utils.js"),_instructionsDialog=__webpack_require__("./src/redux/instructionsDialog.js"),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_expandableImages=__webpack_require__("./src/templates/utils/expandableImages.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var showClickableTextWithGlow="true"===(0,_utils.queryParams)("clickable-text-with-glow"),UnconnectedExpandableImagesWrapper=exports.UnconnectedExpandableImagesWrapper=function(_React$Component){function UnconnectedExpandableImagesWrapper(){return _React$Component.apply(this,arguments)||this}_inheritsLoose(UnconnectedExpandableImagesWrapper,_React$Component);var _proto=UnconnectedExpandableImagesWrapper.prototype;return _proto.componentDidMount=function componentDidMount(){this.postRenderHook()},_proto.componentDidUpdate=function componentDidUpdate(prevProps){this.postRenderHook()},_proto.postRenderHook=function postRenderHook(){var thisNode=_reactDom.default.findDOMNode(this);(0,_expandableImages.renderExpandableImages)(thisNode,this.props.showImageDialog)},_proto.render=function render(){return this.props.children},UnconnectedExpandableImagesWrapper}(_react.default.Component);_defineProperty(UnconnectedExpandableImagesWrapper,"propTypes",{showImageDialog:_propTypes.default.func.isRequired,children:_propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node),_propTypes.default.node]).isRequired});var ExpandableImagesWrapper=exports.ExpandableImagesWrapper=(0,_reactRedux.connect)(null,(function(dispatch){return{showImageDialog:function showImageDialog(imgUrl){dispatch((0,_instructionsDialog.openDialog)({imgOnly:!0,imgUrl}))}}}))(UnconnectedExpandableImagesWrapper),ClickableTextWrapper=exports.ClickableTextWrapper=function(_React$Component2){function ClickableTextWrapper(){return _React$Component2.apply(this,arguments)||this}_inheritsLoose(ClickableTextWrapper,_React$Component2);var _proto2=ClickableTextWrapper.prototype;return _proto2.componentDidMount=function componentDidMount(){this.postRenderHook()},_proto2.componentDidUpdate=function componentDidUpdate(prevProps){this.postRenderHook()},_proto2.postRenderHook=function postRenderHook(){var thisNode=_reactDom.default.findDOMNode(this);this.renderClickableText(thisNode)},_proto2.renderClickableText=function renderClickableText(node){var _this=this;node.querySelectorAll("b.clickable-text").forEach((function(clickableText,index){var id=clickableText.dataset.id;if(showClickableTextWithGlow){var extraClass=" clickable-text-with-glow clickable-text-".concat(index);clickableText.className.includes(extraClass)||(clickableText.className+=extraClass)}clickableText.onclick=function(){return _this.props.handleInstructionsTextClick(id)}}))},_proto2.render=function render(){return this.props.children},ClickableTextWrapper}(_react.default.Component);_defineProperty(ClickableTextWrapper,"propTypes",{handleInstructionsTextClick:_propTypes.default.func.isRequired,children:_propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node),_propTypes.default.node]).isRequired}),_defineProperty(exports.default=function(_React$Component3){function EnhancedSafeMarkdown(){return _React$Component3.apply(this,arguments)||this}return _inheritsLoose(EnhancedSafeMarkdown,_React$Component3),EnhancedSafeMarkdown.prototype.render=function render(){var result=_react.default.createElement(_SafeMarkdown.default,{markdown:this.props.markdown,openExternalLinksInNewTab:this.props.openExternalLinksInNewTab,className:this.props.className});return this.props.expandableImages&&(result=_react.default.createElement(ExpandableImagesWrapper,null,result)),this.props.handleInstructionsTextClick&&(result=_react.default.createElement(ClickableTextWrapper,{handleInstructionsTextClick:this.props.handleInstructionsTextClick},result)),result},EnhancedSafeMarkdown}(_react.default.Component),"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,expandableImages:_propTypes.default.bool,className:_propTypes.default.string,handleInstructionsTextClick:_propTypes.default.func})},"./src/templates/InlineMarkdown.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_remarkParse=_interopRequireDefault(__webpack_require__("./node_modules/remark-parse/index.js")),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var markdownToReact=(0,_interopRequireDefault(__webpack_require__("./node_modules/unified/index.js")).default)().use(_remarkParse.default).use((function inlineOnly(){this.Parser.prototype.blockMethods=["paragraph"]})).use(_remarkRehype.default).use(_rehypeReact.default,{createElement:_react.default.createElement});!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_React$Component){function InlineMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(InlineMarkdown,_React$Component),InlineMarkdown.prototype.render=function render(){var rendered=markdownToReact.processSync(this.props.markdown.trim()).result;return _react.default.createElement("span",null,rendered.props.children)},InlineMarkdown}(_react.default.Component),"propTypes",{markdown:_propTypes.default.string.isRequired}),module.exports=exports.default},"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var rendered=(this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact).processSync(this.props.markdown).contents,markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=_redactableMarkdown.default.create().getParser().use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHTML:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"});exports.default=SafeMarkdown;module.exports=exports.default},"./src/templates/codeDocs/EmbeddedBlock.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=EmbeddedBlock;var _link=__webpack_require__("./node_modules/@dsco_/link/dist/main.js"),_propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_utils=__webpack_require__("./src/templates/instructions/utils.js"),_xml=__webpack_require__("./src/xml.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function EmbeddedBlock(_ref){var blockName=_ref.blockName,link=_ref.link,ariaLabel=_ref.ariaLabel,blockRef=(0,_react.useRef)();return(0,_react.useEffect)((function(){if(blockName&&blockRef.current){var blocksDom=(0,_xml.parseElement)("<block type='".concat(blockName,"' />")),blockSpace=Blockly.createEmbeddedWorkspace(blockRef.current,blocksDom,{noScrolling:!0,inline:!0});(0,_utils.shrinkBlockSpaceContainer)(blockSpace,!0)}}),[blockName,blockRef]),_react.default.createElement("div",null,_react.default.createElement(_link.Link,{href:link},_react.default.createElement("div",{id:"embedded-block-".concat(blockName),ref:blockRef,style:{paddingBottom:5},"aria-label":ariaLabel||blockName})))}EmbeddedBlock.propTypes={blockName:_propTypes.default.string.isRequired,link:_propTypes.default.string,ariaLabel:_propTypes.default.string},module.exports=exports.default},"./src/templates/courseRollupPages/CourseRollup.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_utils=__webpack_require__("./src/utils.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_rollupShapes=__webpack_require__("./src/templates/courseRollupPages/rollupShapes.jsx"),_RollupUnitEntry=_interopRequireDefault(__webpack_require__("./src/templates/courseRollupPages/RollupUnitEntry.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function CourseRollup(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CourseRollup,_Component);var _proto=CourseRollup.prototype;return _proto.getPageTitle=function getPageTitle(){return"Vocabulary"===this.props.objectToRollUp?_locale.default.rollupTitleVocab({title:this.props.course.title}):"Resources"===this.props.objectToRollUp?_locale.default.rollupTitleResources({title:this.props.course.title}):"Standards"===this.props.objectToRollUp?_locale.default.rollupTitleStandards({title:this.props.course.title}):"Code"===this.props.objectToRollUp?_locale.default.rollupTitleCode({title:this.props.course.title}):void 0},_proto.render=function render(){var _this=this;return _react.default.createElement("div",null,_react.default.createElement("a",{href:(0,_utils.linkWithQueryParams)(this.props.course.link),style:styles.navLink},"< ".concat(this.props.course.title)),_react.default.createElement("h1",null,this.getPageTitle()),this.props.course.units.map((function(unit){return _react.default.createElement("div",{key:unit.name},_react.default.createElement("h3",{style:styles.h1},unit.title),_react.default.createElement(_RollupUnitEntry.default,{objectToRollUp:_this.props.objectToRollUp,unit}))})))},CourseRollup}(_react.Component),"propTypes",{objectToRollUp:_propTypes.default.string,course:_rollupShapes.courseShape});var styles={h1:{color:_color.default.teal},navLink:{fontSize:14,lineHeight:"22px",color:_color.default.purple,margin:"10px 0px"}};module.exports=exports.default},"./src/templates/courseRollupPages/RollupLessonEntry.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_RollupLessonEntrySection=_interopRequireDefault(__webpack_require__("./src/templates/courseRollupPages/RollupLessonEntrySection.jsx")),_rollupShapes=__webpack_require__("./src/templates/courseRollupPages/rollupShapes.jsx");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function RollupLessonEntry(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(RollupLessonEntry,_Component),RollupLessonEntry.prototype.render=function render(){return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.header},_react.default.createElement("a",{href:this.props.lesson.link,style:styles.link},_react.default.createElement("h3",null,_locale.default.lessonNumbered({lessonNumber:this.props.lesson.position,lessonName:this.props.lesson.displayName})))),_react.default.createElement("div",{style:styles.entries},_react.default.createElement(_RollupLessonEntrySection.default,{objectToRollUp:this.props.objectToRollUp,lesson:this.props.lesson}),"Resources"===this.props.objectToRollUp&&_react.default.createElement(_RollupLessonEntrySection.default,{objectToRollUp:"Prep",lesson:this.props.lesson})))},RollupLessonEntry}(_react.Component),"propTypes",{objectToRollUp:_propTypes.default.string,lesson:_rollupShapes.lessonShape});var styles={main:{width:"100%"},header:{backgroundColor:_color.default.purple,color:_color.default.white,border:"solid 1px"+_color.default.charcoal,padding:"0px 10px"},object:{backgroundColor:_color.default.lightest_gray,color:_color.default.charcoal,border:"solid 1px"+_color.default.charcoal,padding:"0px 10px"},entries:{display:"flex",flexDirection:"row",alignItems:"stretch",alignContent:"stretch"},link:{color:_color.default.white}};module.exports=exports.default},"./src/templates/courseRollupPages/RollupLessonEntrySection.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_EnhancedSafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/EnhancedSafeMarkdown.jsx")),_InlineMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/InlineMarkdown.jsx")),_LessonStandards=_interopRequireWildcard(__webpack_require__("./src/templates/lessonOverview/LessonStandards.jsx")),_ResourceList=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/ResourceList.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_StyledCodeBlock=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/StyledCodeBlock.jsx")),_rollupShapes=__webpack_require__("./src/templates/courseRollupPages/rollupShapes.jsx");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function RollupLessonEntrySection(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(RollupLessonEntrySection,_Component),RollupLessonEntrySection.prototype.render=function render(){var lessonHasResources=this.props.lesson.resources.Teacher||this.props.lesson.resources.Student||this.props.lesson.resources.All;return _react.default.createElement("div",{style:styles.main},("Resources"===this.props.objectToRollUp||"Prep"===this.props.objectToRollUp)&&_react.default.createElement("div",{style:styles.object},_react.default.createElement("h4",null,"Resources"===this.props.objectToRollUp?_locale.default.resources():_locale.default.preparation())),_react.default.createElement("div",{style:styles.entries},"Vocabulary"===this.props.objectToRollUp&&this.props.lesson.vocabularies.length>0&&this.props.lesson.vocabularies.map((function(vocab){return _react.default.createElement("li",{key:vocab.key},_react.default.createElement(_InlineMarkdown.default,{markdown:"**".concat(vocab.word,"** - ").concat(vocab.definition)}))})),"Vocabulary"===this.props.objectToRollUp&&this.props.lesson.vocabularies.length<=0&&_react.default.createElement("p",null,_locale.default.rollupNoVocab()),"Code"===this.props.objectToRollUp&&this.props.lesson.programmingExpressions.length>0&&_react.default.createElement("ul",null,this.props.lesson.programmingExpressions.map((function(expression){return _react.default.createElement("li",{key:expression.name},_react.default.createElement(_StyledCodeBlock.default,{programmingExpression:expression}))}))),"Code"===this.props.objectToRollUp&&this.props.lesson.programmingExpressions.length<=0&&_react.default.createElement("p",null,_locale.default.rollupNoCode()),"Resources"===this.props.objectToRollUp&&lessonHasResources&&_react.default.createElement("div",null,this.props.lesson.resources.Teacher&&_react.default.createElement("div",null,_react.default.createElement("h5",null,_locale.default.forTheTeachers()),_react.default.createElement(_ResourceList.default,{resources:this.props.lesson.resources.Teacher,pageType:"resources-rollup"})),this.props.lesson.resources.Student&&_react.default.createElement("div",null,_react.default.createElement("h5",null,_locale.default.forTheStudents()),_react.default.createElement(_ResourceList.default,{resources:this.props.lesson.resources.Student,pageType:"resources-rollup"})),this.props.lesson.resources.All&&_react.default.createElement("div",null,_react.default.createElement("h5",null,_locale.default.forAll()),_react.default.createElement(_ResourceList.default,{resources:this.props.lesson.resources.All,pageType:"resources-rollup"}))),"Resources"===this.props.objectToRollUp&&!lessonHasResources&&_react.default.createElement("p",null,_locale.default.rollupNoResources()),"Prep"===this.props.objectToRollUp&&this.props.lesson.preparation&&_react.default.createElement(_EnhancedSafeMarkdown.default,{markdown:this.props.lesson.preparation,expandableImages:!0}),"Prep"===this.props.objectToRollUp&&!this.props.lesson.preparation&&_react.default.createElement("p",null,_locale.default.rollupNoPrep()),"Standards"===this.props.objectToRollUp&&this.props.lesson.standards.length>0&&_react.default.createElement(_LessonStandards.default,{standards:this.props.lesson.standards,expandMode:_LessonStandards.ExpandMode.ALL}),"Standards"===this.props.objectToRollUp&&this.props.lesson.standards.length<=0&&_react.default.createElement("p",null,_locale.default.rollupNoStandards())))},RollupLessonEntrySection}(_react.Component),"propTypes",{objectToRollUp:_propTypes.default.string,lesson:_rollupShapes.lessonShape});var styles={main:{width:"100%",display:"flex",flexDirection:"column"},object:{backgroundColor:_color.default.lightest_gray,color:_color.default.charcoal,border:"solid 1px"+_color.default.charcoal,padding:"0px 10px"},entries:{color:_color.default.charcoal,border:"solid 1px"+_color.default.charcoal,padding:10,height:"100%"}};module.exports=exports.default},"./src/templates/courseRollupPages/RollupUnitEntry.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_RollupLessonEntry=_interopRequireDefault(__webpack_require__("./src/templates/courseRollupPages/RollupLessonEntry.jsx")),_rollupShapes=__webpack_require__("./src/templates/courseRollupPages/rollupShapes.jsx");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function RollupUnitEntry(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(RollupUnitEntry,_Component),RollupUnitEntry.prototype.render=function render(){var _this=this;return _react.default.createElement("div",null,this.props.unit.lessons.map((function(lesson){return _react.default.createElement(_RollupLessonEntry.default,{objectToRollUp:_this.props.objectToRollUp,lesson,key:lesson.key})})))},RollupUnitEntry}(_react.Component),"propTypes",{objectToRollUp:_propTypes.default.string,unit:_rollupShapes.unitShape}),module.exports=exports.default},"./src/templates/courseRollupPages/UnitRollup.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_utils=__webpack_require__("./src/utils.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_rollupShapes=__webpack_require__("./src/templates/courseRollupPages/rollupShapes.jsx"),_RollupUnitEntry=_interopRequireDefault(__webpack_require__("./src/templates/courseRollupPages/RollupUnitEntry.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function UnitRollup(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(UnitRollup,_Component);var _proto=UnitRollup.prototype;return _proto.getPageTitle=function getPageTitle(){return"Vocabulary"===this.props.objectToRollUp?_locale.default.rollupTitleVocab({title:this.props.unit.title}):"Resources"===this.props.objectToRollUp?_locale.default.rollupTitleResources({title:this.props.unit.title}):"Standards"===this.props.objectToRollUp?_locale.default.rollupTitleStandards({title:this.props.unit.title}):"Code"===this.props.objectToRollUp?_locale.default.rollupTitleCode({title:this.props.unit.title}):void 0},_proto.render=function render(){return _react.default.createElement("div",null,_react.default.createElement("a",{href:(0,_utils.linkWithQueryParams)(this.props.unit.link),style:styles.navLink},"< ".concat(this.props.unit.title)),_react.default.createElement("h1",null,this.getPageTitle()),_react.default.createElement(_RollupUnitEntry.default,{objectToRollUp:this.props.objectToRollUp,unit:this.props.unit}))},UnitRollup}(_react.Component),"propTypes",{objectToRollUp:_propTypes.default.string,unit:_rollupShapes.unitShape});var styles={navLink:{fontSize:14,lineHeight:"22px",color:_color.default.purple,margin:"10px 0px"}};module.exports=exports.default},"./src/templates/courseRollupPages/rollupShapes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitShape=exports.lessonShape=exports.courseShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));var lessonShape=exports.lessonShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,link:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,vocabularies:_propTypes.default.array.isRequired,programmingExpressions:_propTypes.default.array.isRequired,preparation:_propTypes.default.string,resources:_propTypes.default.object.isRequired}),unitShape=exports.unitShape=_propTypes.default.shape({name:_propTypes.default.string.isRequired,link:_propTypes.default.string.isRequired,title:_propTypes.default.string.isRequired,lessons:_propTypes.default.arrayOf(lessonShape)});exports.courseShape=_propTypes.default.shape({link:_propTypes.default.string.isRequired,title:_propTypes.default.string.isRequired,units:_propTypes.default.arrayOf(unitShape)})},"./src/templates/instructions/AniGifPreview.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.ImagePreview=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_instructionsDialog=__webpack_require__("./src/redux/instructionsDialog.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var ImagePreviewUnwrapped=function(_React$Component){function ImagePreviewUnwrapped(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ImagePreviewUnwrapped,_React$Component),ImagePreviewUnwrapped.prototype.render=function render(){return _react.default.createElement("div",{id:"ani-gif-preview-wrapper",style:styles.wrapper},_react.default.createElement("div",{id:"ani-gif-preview",style:[styles.aniGifPreview(this.props.url),this.props.noVisualization&&styles.bigPreview],onClick:this.props.showInstructionsDialog}))},ImagePreviewUnwrapped}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(ImagePreviewUnwrapped,"propTypes",{url:_propTypes.default.string.isRequired,showInstructionsDialog:_propTypes.default.func.isRequired,noVisualization:_propTypes.default.bool.isRequired});var styles={wrapper:{display:"inline-block",position:"relative"},aniGifPreview:function aniGifPreview(url){return{cursor:"pointer",backgroundImage:"url('".concat(url,"')")}},bigPreview:{width:240,height:180,backgroundSize:"240px 180px"}},ImagePreview=exports.ImagePreview=(0,_radium.default)(ImagePreviewUnwrapped);exports.default=(0,_reactRedux.connect)((function(state){return{url:state.pageConstants.aniGifURL,noVisualization:state.pageConstants.noVisualization}}),(function(dispatch){return{showInstructionsDialog:function showInstructionsDialog(){dispatch((0,_instructionsDialog.openDialog)({imgOnly:!0}))}}}))(ImagePreview)},"./src/templates/instructions/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.convertXmlToBlockly=function convertXmlToBlockly(xmlContainer,isRtl){Array.from(xmlContainer.getElementsByClassName("readonly-block-space-container")).forEach((function(container){return container.remove()}));var xmls=xmlContainer.getElementsByTagName("xml");Array.prototype.forEach.call(xmls,(function(xml){if(!xml.getElementsByTagName("svg").length){!function removeCommentNodes(root){var commentWalker=document.createTreeWalker(root,NodeFilter.SHOW_COMMENT,{acceptNode:function acceptNode(node){return NodeFilter.FILTER_ACCEPT}},!1),last=commentWalker.nextNode();if(last){for(;commentWalker.nextNode();)last.remove(),last=commentWalker.currentNode;last.remove()}}(xml);var inline="P"===xml.parentNode.tagName,blockSpaceContainer=document.createElement(inline?"span":"div");blockSpaceContainer.classList.add("readonly-block-space-container"),inline&&(blockSpaceContainer.style.display="inline-block"),xml.parentNode.insertBefore(blockSpaceContainer,xml),xml.style.display="none";var blockSpace=Blockly.createEmbeddedWorkspace(blockSpaceContainer,xml,{noScrolling:!0,inline,rtl:isRtl}),withPadding=!inline,metrics=blockSpace.getMetrics();Blockly.addChangeListener(blockSpace,(function(){var oldHeight=metrics.contentHeight,oldWidth=metrics.contentWidth,newHeight=blockSpace.getMetrics().contentHeight,newWidth=blockSpace.getMetrics().contentWidth;newHeight===oldHeight&&newWidth===oldWidth||(shrinkBlockSpaceContainer(blockSpace,withPadding),metrics=blockSpace.getMetrics())})),shrinkBlockSpaceContainer(blockSpace,withPadding)}}))},exports.getOuterHeight=function getOuterHeight(component){var includeMargin=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return(0,_jquery.default)(_reactDom.default.findDOMNode(component)).outerHeight(includeMargin)},exports.hasInstructions=function hasInstructions(shortInstructions,longInstructions,hasContainedLevels){return!!(shortInstructions||longInstructions||hasContainedLevels)},exports.scrollBy=function scrollBy(element,deltaY){var animate=arguments.length>2&&void 0!==arguments[2]?arguments[2]:400,newScrollTop=element.scrollTop+deltaY;scrollTo(element,newScrollTop,animate)},exports.scrollTo=scrollTo,exports.shouldDisplayChatTips=function shouldDisplayChatTips(skinId){switch(skinId){case"jigsaw":case"infinity":case"anna":case"elsa":case"craft":case"hoc2015":case"hoc2015x":return!1;default:return!0}},exports.shrinkBlockSpaceContainer=shrinkBlockSpaceContainer;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_reactDom=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function scrollTo(element,scrollTop){var animate=arguments.length>2&&void 0!==arguments[2]?arguments[2]:400;if(animate){var $elem=(0,_jquery.default)(element);$elem.is(":animated")||$elem.animate({scrollTop},animate)}else element.scrollTop=scrollTop}function shrinkBlockSpaceContainer(blockSpace,withPadding){var container=blockSpace.getContainer(),metrics=blockSpace.getMetrics(),height=metrics.contentHeight,width=metrics.contentWidth;withPadding&&(height+=2*metrics.contentTop,width+=metrics.contentLeft),container.style.height=height+"px",container.style.width=width+"px",Blockly.cdoUtils.workspaceSvgResize(blockSpace)}},"./src/templates/lessonOverview/ResourceList.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_utils=__webpack_require__("./src/utils.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DropdownButton=_interopRequireDefault(__webpack_require__("./src/templates/DropdownButton.js")),_googleDocsUtils=__webpack_require__("./src/templates/lessonOverview/googleDocsUtils.js"),_resourceListModule=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/resource-list.module.scss"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ResourceList=exports.default=function(_Component){function ResourceList(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"normalizeUrl",(function(url){return/https?:\/\//.test(url)?url:"https://"+url})),_defineProperty(_this,"downloadResource",(function(e,resource){e.preventDefault(),_this.sendLinkVisitedEvent(resource,"download"),_firehose.default.putRecord({study:"resources-rollup"===_this.props.pageType?"course-rollup-pages":"lesson-plan",study_group:_this.props.pageType,event:"download-resource",data_int:resource.id,data_json:JSON.stringify({resourceId:resource.id})},{includeUserId:!0,callback:function callback(){(0,_utils.windowOpen)(_this.normalizeUrl(resource.download_url),"noopener","noreferrer")}})})),_defineProperty(_this,"openResource",(function(e,resource){e.preventDefault(),_this.sendLinkVisitedEvent(resource,"open"),_firehose.default.putRecord({study:"resources-rollup"===_this.props.pageType?"rollup-pages":"lesson-plan",study_group:_this.props.pageType,event:"open-resource",data_int:resource.id,data_json:JSON.stringify({resourceId:resource.id})},{includeUserId:!0,callback:function callback(){(0,_utils.windowOpen)(_this.normalizeUrl(resource.url),"noopener","noreferrer")}})})),_defineProperty(_this,"sendLinkVisitedEvent",(function(resource,visitType){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.LESSON_RESOURCE_LINK_VISITED_EVENT,{resourceId:resource.id,resourceName:resource.name,resourceAudience:resource.audience,resourceType:resource.type,resourceUrl:resource.url,resourceDownloadUrl:resource.download_url,visitType,path:document.location.pathname})})),_defineProperty(_this,"createResourceListItem",(function(resource){return _react.default.createElement("li",{key:resource.key},_react.default.createElement("a",{onClick:function onClick(e){_this.openResource(e,resource)},href:resource.url},resource.name),resource.type&&" -  ".concat(resource.type," "),resource.download_url&&_react.default.createElement("span",null," (",_react.default.createElement("a",{onClick:function onClick(e){_this.downloadResource(e,resource)},href:resource.download_url},"".concat(_locale.default.download())),")"),(0,_googleDocsUtils.isGDocsUrl)(resource.url)&&_react.default.createElement("span",null," ",_react.default.createElement(_DropdownButton.default,{text:_locale.default.makeACopy(),color:_Button.default.ButtonColor.gray,size:_Button.default.ButtonSize.small,className:_resourceListModule.default.dropdownButton},_react.default.createElement("a",{href:(0,_googleDocsUtils.gDocsPdfUrl)(resource.url),onClick:function onClick(e){_this.sendLinkVisitedEvent(resource,"copyPdf")}},"PDF"),_react.default.createElement("a",{href:(0,_googleDocsUtils.gDocsMsOfficeUrl)(resource.url),onClick:function onClick(e){_this.sendLinkVisitedEvent(resource,"copyMsOffice")}},"Microsoft Office"),_react.default.createElement("a",{href:(0,_googleDocsUtils.gDocsCopyUrl)(resource.url),onClick:function onClick(e){_this.sendLinkVisitedEvent(resource,"copyGDocs")}},"Google Docs"))))})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ResourceList,_Component),ResourceList.prototype.render=function render(){var _this2=this;return _react.default.createElement("div",null,_react.default.createElement("ul",null,this.props.resources.map((function(resource){return _this2.createResourceListItem(resource)}))))},ResourceList}(_react.Component);_defineProperty(ResourceList,"propTypes",{resources:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,pageType:_propTypes.default.oneOf(["student-lesson-plan","teacher-lesson-plan","resources-rollup"]).isRequired}),module.exports=exports.default},"./src/templates/lessonOverview/StyledCodeBlock.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildProgrammingExpressionMarkdown=void 0,exports.default=StyledCodeBlock;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_EmbeddedBlock=_interopRequireDefault(__webpack_require__("./src/templates/codeDocs/EmbeddedBlock.jsx")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var buildProgrammingExpressionMarkdown=exports.buildProgrammingExpressionMarkdown=function buildProgrammingExpressionMarkdown(programmingExpression){var block="`".concat(programmingExpression.syntax,"`");return programmingExpression.color&&(block+="(".concat(programmingExpression.color,")")),"[".concat(block,"](").concat(programmingExpression.link,")")};function StyledCodeBlock(_ref){var programmingExpression=_ref.programmingExpression;return programmingExpression.blockName?_react.default.createElement(_EmbeddedBlock.default,{blockName:programmingExpression.blockName,link:programmingExpression.link,ariaLabel:programmingExpression.name}):_react.default.createElement(_SafeMarkdown.default,{markdown:buildProgrammingExpressionMarkdown(programmingExpression)})}StyledCodeBlock.propTypes={programmingExpression:_propTypes.default.shape({color:_propTypes.default.string,syntax:_propTypes.default.string.isRequired,link:_propTypes.default.string,parameters:_propTypes.default.array,name:_propTypes.default.string,blockName:_propTypes.default.string}).isRequired}},"./src/templates/lessonOverview/googleDocsUtils.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.gDocsBaseUrl=gDocsBaseUrl,exports.gDocsCopyUrl=function gDocsCopyUrl(url){return[gDocsBaseUrl(url),COPY_PATH].join("")},exports.gDocsMsOfficeUrl=function gDocsMsOfficeUrl(url){var format;DOCS_PATH_REGEX.test(url)?format="doc":SLIDES_PATH_REGEX.test(url)&&(format="pptx");return[gDocsBaseUrl(url),EXPORT_PATH,format].join("")},exports.gDocsPdfUrl=function gDocsPdfUrl(url){return[gDocsBaseUrl(url),EXPORT_PATH,"pdf"].join("")},exports.isGDocsUrl=function isGDocsUrl(s){try{var url=new URL(s);if(url.host!==GDOCS_HOST)return!1;if(SLIDES_PATH_REGEX.test(url.pathname)||DOCS_PATH_REGEX.test(url.pathname))return!0}catch(err){return!1}return!1};var GDOCS_HOST="docs.google.com",GDOCS_URL_REGEX=/^https?:\/\/docs\.google\.com\/(document|presentation)\/d\/([\w-]+)/,SLIDES_PATH_REGEX=/\/presentation\/d\/[\w-]+/,DOCS_PATH_REGEX=/\/document\/d\/[\w-]+/,EXPORT_PATH="/export?format=",COPY_PATH="/copy";function gDocsBaseUrl(url){var matches=GDOCS_URL_REGEX.exec(url),docType=matches[1],docId=matches[2];return"https://".concat(GDOCS_HOST,"/").concat(docType,"/d/").concat(docId)}},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{"use strict";function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/templates/utils/expandableImages.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.renderExpandableImages=function renderExpandableImages(node,showImageDialog){for(var expandableImages=node.querySelectorAll(".expandable-image"),_loop=function _loop(){var expandableImg=expandableImages[i];_reactDom.default.render(_react.default.createElement(_AniGifPreview.ImagePreview,{url:expandableImg.dataset.url,noVisualization:!1,showInstructionsDialog:function showInstructionsDialog(){return showImageDialog(expandableImg.dataset.url)}}),expandableImg)},i=0;i<expandableImages.length;i++)_loop()};var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactDom=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/index.js")),_AniGifPreview=__webpack_require__("./src/templates/instructions/AniGifPreview.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}},"./src/xml.js":(__unused_webpack_module,exports)=>{function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}exports.serialize=function(node){return(new XMLSerializer).serializeToString(node)},exports.parseElement=function(text){var noWrap=arguments.length>1&&void 0!==arguments[1]&&arguments[1],parser=new DOMParser,dom=0===(text=text.trim()).indexOf("<xml")||noWrap?parser.parseFromString(text,"text/xml"):parser.parseFromString("<xml>"+text+"</xml>","text/xml"),errors=dom.getElementsByTagName("parsererror"),element=dom.firstChild;if(!element)throw new Error("Nothing parsed");if(errors.length>0)throw new Error(exports.serialize(errors[0]));if(element!==dom.lastChild)throw new Error("Parsed multiple elements");return element},exports.visitAll=function(node,callback){callback(node);var _step,_iterator=_createForOfIteratorHelper(node.childNodes);try{for(_iterator.s();!(_step=_iterator.n()).done;){var child=_step.value;exports.visitAll(child,callback)}}catch(err){_iterator.e(err)}finally{_iterator.f()}}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/lessonOverview/resource-list.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".SeEgSluXDKmWdVdr_Tfx{top:-2px}","",{version:3,sources:["webpack://./src/templates/lessonOverview/resource-list.module.scss"],names:[],mappings:"AAAA,sBACE,QAAA",sourcesContent:[".dropdownButton {\n  top: -2px;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={dropdownButton:"SeEgSluXDKmWdVdr_Tfx"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./src/templates/lessonOverview/resource-list.module.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_resource_list_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/lessonOverview/resource-list.module.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_resource_list_module_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_resource_list_module_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_resource_list_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_resource_list_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/courseRollupPages/CourseRollup.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnitVocabularyExample=exports.UnitStandardsExample=exports.UnitResourceExample=exports.UnitCodeExample=exports.CourseVocabularyExample=exports.CourseStandardsExample=exports.CourseResourceExample=exports.CourseCodeExample=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_CourseRollup=_interopRequireDefault(__webpack_require__("./src/templates/courseRollupPages/CourseRollup.jsx")),_UnitRollup=_interopRequireDefault(__webpack_require__("./src/templates/courseRollupPages/UnitRollup.jsx")),_decorators=__webpack_require__("./.storybook/decorators.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var defaultProps={objectToRollUp:"Vocabulary",course:{title:"My Course",link:"/courses/my-course",units:[{name:"unit-1",link:"/s/unit-1",title:"Unit 1 - Unit One",lessons:[{key:"l1",link:"/s/unit-1/lessons/1",position:1,displayName:"Lesson One",vocabularies:[{key:"key",word:"word",definition:"definition"}],programmingExpressions:[{syntax:"playSound",name:"playSound",link:"studio.code.org/docs/applab/playSound"}],preparation:"- One",standards:[{frameworkName:"CSTA K-12 Computer Science Standards (2017)",parentCategoryShortcode:null,parentCategoryDescription:null,categoryShortcode:"AP",categoryDescription:"Algorithms & Programming",shortcode:"1B-AP-09",description:"Create programs that use variables to store and modify data."}],resources:{Teacher:[{key:"teacher-resource",name:"Teacher Resource",url:"fake.url",type:"Slides"}],Student:[{key:"student-resource",name:"Student Resource",url:"fake.url",download_url:"download.fake.url",type:"Activity Guide"}]}},{key:"l2",position:2,displayName:"Lesson Two",link:"/s/unit-1/lessons/2",vocabularies:[{key:"key",word:"word",definition:"definition"}],programmingExpressions:[{syntax:"playSound",name:"playSound",link:"studio.code.org/docs/applab/playSound"}],preparation:"- One",standards:[{frameworkName:"CSTA K-12 Computer Science Standards (2017)",parentCategoryShortcode:null,parentCategoryDescription:null,categoryShortcode:"AP",categoryDescription:"Algorithms & Programming",shortcode:"1B-AP-09",description:"Create programs that use variables to store and modify data."}],resources:{Teacher:[{key:"teacher-resource",name:"Teacher Resource",url:"fake.url",type:"Slides"}],Student:[{key:"student-resource",name:"Student Resource",url:"fake.url",download_url:"download.fake.url",type:"Activity Guide"}]}}]},{name:"unit-2",link:"/s/unit-2",title:"Unit 2 - Unit Two",lessons:[{key:"l3",position:1,link:"/s/unit-2/lessons/1",displayName:"Lesson One",vocabularies:[],standards:[],programmingExpressions:[],preparation:null,resources:{}},{key:"l4",position:2,displayName:"Lesson Two",link:"/s/unit-2/lessons/2",vocabularies:[{key:"key",word:"word",definition:"definition"}],programmingExpressions:[{syntax:"playSound",name:"playSound",link:"studio.code.org/docs/applab/playSound"}],preparation:"- One",standards:[{frameworkName:"CSTA K-12 Computer Science Standards (2017)",parentCategoryShortcode:null,parentCategoryDescription:null,categoryShortcode:"AP",categoryDescription:"Algorithms & Programming",shortcode:"1B-AP-09",description:"Create programs that use variables to store and modify data."}],resources:{Teacher:[{key:"teacher-resource",name:"Teacher Resource",url:"fake.url",type:"Slides"}],Student:[{key:"student-resource",name:"Student Resource",url:"fake.url",download_url:"download.fake.url",type:"Activity Guide"}]}}]}]}},CourseTemplate=(exports.default={component:_CourseRollup.default},function CourseTemplate(args){return _react.default.createElement(_reactRedux.Provider,{store:(0,_decorators.reduxStore)()},_react.default.createElement(_CourseRollup.default,_extends({},defaultProps,args)))}),UnitTemplate=function UnitTemplate(args){return _react.default.createElement(_reactRedux.Provider,{store:(0,_decorators.reduxStore)()},_react.default.createElement(_UnitRollup.default,_extends({unit:defaultProps.course.units[0]},args)))};(exports.CourseVocabularyExample=CourseTemplate.bind({})).args={objectToRollUp:defaultProps.objectToRollUp},(exports.CourseCodeExample=CourseTemplate.bind({})).args={objectToRollUp:"Code"},(exports.CourseResourceExample=CourseTemplate.bind({})).args={objectToRollUp:"Resources"},(exports.CourseStandardsExample=CourseTemplate.bind({})).args={objectToRollUp:"Standards"},(exports.UnitVocabularyExample=UnitTemplate.bind({})).args={objectToRollUp:defaultProps.objectToRollUp},(exports.UnitCodeExample=UnitTemplate.bind({})).args={objectToRollUp:"Code"},(exports.UnitResourceExample=UnitTemplate.bind({})).args={objectToRollUp:"Resources"},(exports.UnitStandardsExample=UnitTemplate.bind({})).args={objectToRollUp:"Standards"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,