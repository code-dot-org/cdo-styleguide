(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[7043],{"./src/templates/sectionAssessments/MatchByStudentTable.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.COLUMNS=void 0;var _orderBy=_interopRequireDefault(__webpack_require__("./node_modules/lodash/orderBy.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),sort=_interopRequireWildcard(__webpack_require__("./node_modules/sortabular/dist/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_tableConstants=__webpack_require__("./src/templates/tables/tableConstants.js"),_wrapped_sortable=_interopRequireDefault(__webpack_require__("./src/templates/tables/wrapped_sortable.js")),_assessmentDataShapes=__webpack_require__("./src/templates/sectionAssessments/assessmentDataShapes.js"),_PercentAnsweredCell=_interopRequireDefault(__webpack_require__("./src/templates/sectionAssessments/PercentAnsweredCell.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var COLUMNS=exports.COLUMNS={OPTION:0,STUDENT_ANSWER:1,CORRECT_ANSWER:2},MatchByStudentTable=function(_Component){function MatchByStudentTable(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",_defineProperty({},COLUMNS.NAME,{direction:"desc",position:0})),_defineProperty(_this,"getSortingColumns",(function(){return _this.state.sortingColumns||{}})),_defineProperty(_this,"onSort",(function(selectedColumn){_this.setState({sortingColumns:sort.byColumn({sortingColumns:_this.state.sortingColumns,sortingOrder:{FIRST:"asc",asc:"desc",desc:"asc"},selectedColumn})})})),_defineProperty(_this,"optionCellFormatter",(function(question,_ref){_ref.rowData,_ref.rowIndex;return _react.default.createElement("div",null,"".concat(question))})),_defineProperty(_this,"correctAnswerColumnFormatter",(function(responses,_ref2){var rowData=_ref2.rowData;_ref2.columnIndex;return _react.default.createElement(_PercentAnsweredCell.default,{id:rowData.id,displayAnswer:rowData.correctAnswer})})),_defineProperty(_this,"studentAnswerColumnFormatter",(function(studentAnswer,_ref3){var rowData=_ref3.rowData;_ref3.rowIndex;return _react.default.createElement(_PercentAnsweredCell.default,{id:rowData.id,displayAnswer:rowData.studentAnswer||"-",isCorrectAnswer:rowData.studentAnswer===rowData.correctAnswer})})),_defineProperty(_this,"getColumns",(function(sortable){return[{property:"option",header:{label:_locale.default.option(),props:{style:_tableConstants.tableLayoutStyles.headerCell}},cell:{formatters:[_this.optionCellFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.optionCell)}}},{property:"studentAnswer",header:{label:_locale.default.studentAnswer(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.answerColumnHeader)}},cell:{formatters:[_this.studentAnswerColumnFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.answerColumnCell)}}},{property:"correctAnswer",header:{label:_locale.default.checkCorrectAnswer(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.answerColumnHeader)}},cell:{formatters:[_this.correctAnswerColumnFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.answerColumnCell)}}}]})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MatchByStudentTable,_Component),MatchByStudentTable.prototype.render=function render(){var _this2=this,sortable=(0,_wrapped_sortable.default)(this.getSortingColumns,this.onSort,_tableConstants.sortableOptions),columns=this.getColumns(sortable),sortingColumns=this.getSortingColumns(),rowData=this.props.questionAnswerData.options.map((function(option,index){return{id:index,option:option.text,correctAnswer:_this2.props.questionAnswerData.answers[index].text,studentAnswer:null!==_this2.props.studentAnswerData.responses[index]?_this2.props.questionAnswerData.answers[_this2.props.studentAnswerData.responses[index]].text:null}})),sortedRows=sort.sorter({columns,sortingColumns,sort:_orderBy.default})(rowData);return _react.default.createElement(Table.Provider,{columns,style:_tableConstants.tableLayoutStyles.table},_react.default.createElement(Table.Header,null),_react.default.createElement(Table.Body,{rows:sortedRows,rowKey:"id"}))},MatchByStudentTable}(_react.Component);_defineProperty(MatchByStudentTable,"propTypes",{questionAnswerData:_assessmentDataShapes.matchQuestionPropType,studentAnswerData:_assessmentDataShapes.studentMatchResponsePropType});var styles={answerColumnHeader:{width:200,textAlign:"center"},answerColumnCell:{width:200},optionCell:{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap",maxWidth:470}};exports.default=MatchByStudentTable},"./src/templates/sectionAssessments/PercentAnsweredCell.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var PercentAnsweredCell=function(_Component){function PercentAnsweredCell(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"getBackgroundColor",(function(percentValue){var _this$props=_this.props,isCorrectAnswer=_this$props.isCorrectAnswer,isSurvey=_this$props.isSurvey,opacity=function calculateOpacity(answered){return(answered+10)/100}(percentValue);return isCorrectAnswer||isSurvey?"rgba(159, 212, 159, ".concat(opacity,")"):"rgba(255, 99, 71, ".concat(opacity,")")})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(PercentAnsweredCell,_Component),PercentAnsweredCell.prototype.render=function render(){var _this$props2=this.props,percentValue=_this$props2.percentValue,isCorrectAnswer=_this$props2.isCorrectAnswer,displayAnswer=_this$props2.displayAnswer;if(displayAnswer)return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.value},displayAnswer),_react.default.createElement("div",{style:styles.icon},isCorrectAnswer&&_react.default.createElement(_FontAwesome.default,{icon:"check-circle",style:styles.icon})));var backgroundCSS={backgroundColor:this.getBackgroundColor(percentValue)};return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},this.props.mainLayoutStyle),backgroundCSS)},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.value),this.props.valueLayoutStyle)},percentValue>=0&&_react.default.createElement("span",null,"".concat(percentValue,"%")),percentValue<0&&_react.default.createElement("span",null,"-")),_react.default.createElement("div",{style:styles.icon},isCorrectAnswer&&_react.default.createElement(_FontAwesome.default,{icon:"check-circle",style:styles.icon})))},PercentAnsweredCell}(_react.Component);_defineProperty(PercentAnsweredCell,"propTypes",{percentValue:_propTypes.default.number.isRequired,isCorrectAnswer:_propTypes.default.bool,displayAnswer:_propTypes.default.string,isSurvey:_propTypes.default.bool,mainLayoutStyle:_propTypes.default.object,valueLayoutStyle:_propTypes.default.object});var styles={main:{border:"none",display:"flex",justifyContent:"space-between",flexDirection:"row",alignItems:"center",boxSizing:"border-box",height:"100%",padding:10},icon:{color:_color.default.level_perfect},value:_objectSpread({color:_color.default.charcoal},_fontConstants.default["main-font-semi-bold"])};PercentAnsweredCell.defaultProps={percentValue:-1,mainLayoutStyle:styles.main,valueLayoutStyle:{marginRight:10}};exports.default=PercentAnsweredCell;module.exports=exports.default},"./src/templates/sectionAssessments/assessmentDataShapes.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.studentWithMatchResponsesPropType=exports.studentWithMCResponsesPropType=exports.studentOverviewDataPropType=exports.studentMatchResponsePropType=exports.studentMCResponsePropType=exports.optionDataPropTypeMatch=exports.multipleChoiceQuestionPropType=exports.multipleChoiceDataPropType=exports.matchQuestionPropType=exports.matchDetailsQuestionPropType=exports.matchDataPropType=exports.freeResponsesDataPropType=exports.QUESTION_CHARACTER_LIMIT=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));exports.freeResponsesDataPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,response:_propTypes.default.string});var multipleChoiceAnswerDataPropType=_propTypes.default.shape({multipleChoiceOption:_propTypes.default.string,numAnswered:_propTypes.default.number,isCorrect:_propTypes.default.bool,percentAnswered:_propTypes.default.number,text:_propTypes.default.string}),studentMCResponsePropType=(exports.multipleChoiceDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number,answers:_propTypes.default.arrayOf(multipleChoiceAnswerDataPropType),totalAnswered:_propTypes.default.number.isRequired,notAnswered:_propTypes.default.number.isRequired}),exports.studentMCResponsePropType=_propTypes.default.shape({isCorrect:_propTypes.default.bool,responses:_propTypes.default.string})),answerMatchDataPropType=(exports.studentWithMCResponsesPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,studentResponses:_propTypes.default.arrayOf(studentMCResponsePropType)}),exports.multipleChoiceQuestionPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,correctAnswer:_propTypes.default.string.isRequired}),exports.studentOverviewDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,numMultipleChoiceCorrect:_propTypes.default.number,numMultipleChoice:_propTypes.default.number,numMatchCorrect:_propTypes.default.number,numMatch:_propTypes.default.number,submissionTimeStamp:_propTypes.default.instanceOf(Date).isRequired,isSubmitted:_propTypes.default.bool.isRequired,inProgress:_propTypes.default.bool.isRequired,url:_propTypes.default.string}),_propTypes.default.shape({answer:_propTypes.default.string,isCorrect:_propTypes.default.bool,numAnswered:_propTypes.default.number})),optionDataPropTypeMatch=exports.optionDataPropTypeMatch=_propTypes.default.shape({option:_propTypes.default.string,totalAnswered:_propTypes.default.number,notAnswered:_propTypes.default.number,id:_propTypes.default.number,answers:_propTypes.default.arrayOf(answerMatchDataPropType)}),studentMatchResponsePropType=(exports.matchDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number,options:_propTypes.default.arrayOf(optionDataPropTypeMatch)}),exports.matchDetailsQuestionPropType=_propTypes.default.shape({question:_propTypes.default.string.isRequired,questionType:_propTypes.default.string,answers:_propTypes.default.array,options:_propTypes.default.array}),exports.studentMatchResponsePropType=_propTypes.default.shape({responses:_propTypes.default.array}));exports.studentWithMatchResponsesPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,studentResponses:_propTypes.default.arrayOf(studentMatchResponsePropType)}),exports.matchQuestionPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number.isRequired,answers:_propTypes.default.array,options:_propTypes.default.array}),exports.QUESTION_CHARACTER_LIMIT=110},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/templates/sectionAssessments/MatchByStudentTable.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_assessmentsTestHelpers=__webpack_require__("./src/templates/sectionAssessments/assessmentsTestHelpers.js"),_MatchByStudentTable=_interopRequireDefault(__webpack_require__("./src/templates/sectionAssessments/MatchByStudentTable.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_MatchByStudentTable.default};(exports.Default=function Template(args){return _react.default.createElement(_MatchByStudentTable.default,args)}.bind({})).args={questionAnswerData:_assessmentsTestHelpers.matchDataForSingleStudent,studentAnswerData:{responses:[0,1]}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,