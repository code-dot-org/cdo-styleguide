"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[6172],{"./src/code-studio/pd/form_components_func/FormComponent.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getValidationState=exports.FormContext=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js"));exports.FormContext=_react.default.createContext({}),exports.getValidationState=function getValidationState(name,errors){if(errors.includes(name))return"error"}},"./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.useLabelFor=exports.useDefaultOptions=exports.LabelsContext=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_SafeMarkdown=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/templates/SafeMarkdown.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}var LabelsContext=exports.LabelsContext=_react.default.createContext({}),useLabelFor=exports.useLabelFor=function useLabelFor(name){var labels=(0,_react.useContext)(LabelsContext);return name in labels?_react.default.createElement("div",{className:"inline_markdown"},_react.default.createElement(_SafeMarkdown.default,{openExternalLinksInNewTab:!0,markdown:labels[name]})):(console.warn("Label missing for ".concat(name)),name)};exports.useDefaultOptions=function useDefaultOptions(name,label){return{name,label:useLabelFor(name)||label,controlWidth:{md:6},required:!0}}},"./src/code-studio/pd/form_components_func/form/Buttons.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.ButtonsWithAdditionalTextFieldsFromOptions=exports.ButtonsWithAdditionalTextFields=exports.ButtonsFromOptions=exports.Buttons=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_ButtonList=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/ButtonList.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var Buttons=exports.Buttons=function Buttons(props){var _useContext=(0,_react.useContext)(_FormComponent.FormContext),onChange=_useContext.onChange,data=_useContext.data,errors=_useContext.errors,name=props.name,_props$required=props.required,required=void 0===_props$required||_props$required;return _react.default.createElement(_ButtonList.default,_extends({key:name,groupName:name,required,onChange,selectedItems:data[name],validationState:(0,_FormComponent.getValidationState)(name,errors)},props))};Buttons.propTypes={name:_propTypes.default.string.isRequired,required:_propTypes.default.bool},(exports.ButtonsFromOptions=function ButtonsFromOptions(props){var options=(0,_react.useContext)(_FormComponent.FormContext).options,name=props.name;if(!options[name]||0===options[name].length)throw"Cannot create buttons for ".concat(name," without options");var answers=options[name];return _react.default.createElement(Buttons,_extends({answers},props))}).propTypes={name:_propTypes.default.string.isRequired};var ButtonsWithAdditionalTextFields=exports.ButtonsWithAdditionalTextFields=function ButtonsWithAdditionalTextFields(props){var _useContext3=(0,_react.useContext)(_FormComponent.FormContext),data=_useContext3.data,onChange=_useContext3.onChange,name=props.name,options=props.options,textFieldMap=props.textFieldMap,answers=options.map((function(answer){if(!(answer in textFieldMap))return answer;var textFieldName="".concat(name,"_").concat(textFieldMap[answer]);return{answerText:answer,inputValue:data[textFieldName],onInputChange:function onInputChange(newValue){return onChange(_defineProperty({},textFieldName,newValue))}}}));return _react.default.createElement(Buttons,_extends({answers},props))};ButtonsWithAdditionalTextFields.propTypes={name:_propTypes.default.string.isRequired,options:_propTypes.default.arrayOf(_propTypes.default.string).isRequired,textFieldMap:_propTypes.default.object.isRequired},(exports.ButtonsWithAdditionalTextFieldsFromOptions=function ButtonsWithAdditionalTextFieldsFromOptions(props){var options=(0,_react.useContext)(_FormComponent.FormContext).options,name=props.name;if(!options[name]||0===options[name].length)throw"Cannot create buttons for ".concat(name," without options");var componentOptions=options[name];return _react.default.createElement(ButtonsWithAdditionalTextFields,_extends({options:componentOptions},props))}).propTypes={name:_propTypes.default.string.isRequired}},"./src/code-studio/pd/form_components_func/form/FieldGroup.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.FieldGroup=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_FieldGroup=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/FieldGroup.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}(exports.FieldGroup=function FieldGroup(props){var _useContext=(0,_react.useContext)(_FormComponent.FormContext),errors=_useContext.errors,errorMessages=_useContext.errorMessages,onChange=_useContext.onChange,data=_useContext.data,name=props.name;return _react.default.createElement(_FieldGroup.default,_extends({key:name,id:name,validationState:(0,_FormComponent.getValidationState)(name,errors),errorMessage:errorMessages[name],onChange,value:data[name]||""},props))}).propTypes={name:_propTypes.default.string.isRequired}},"./src/code-studio/pd/form_components_func/form/SelectFieldGroup.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.SelectFieldGroupFromOptions=exports.SelectFieldGroup=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_FieldGroup=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/FieldGroup.jsx")),_utils=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/utils.js")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SelectFieldGroup=exports.SelectFieldGroup=function SelectFieldGroup(props){var renderedOptions,_useContext=(0,_react.useContext)(_FormComponent.FormContext),errors=_useContext.errors,errorMessages=_useContext.errorMessages,onChange=_useContext.onChange,data=_useContext.data,name=props.name,options=props.options,placeholder=props.placeholder;return renderedOptions=Array.isArray(options)?options.map((function(value){var _utils$normalizeAnswe=_utils.default.normalizeAnswer(value),answerText=_utils$normalizeAnswe.answerText,answerValue=_utils$normalizeAnswe.answerValue;return _react.default.createElement("option",{key:answerValue,value:answerValue},answerText)})):Object.keys(options).map((function(key){return _react.default.createElement("option",{key,value:key},options[key])})),_react.default.createElement(_FieldGroup.default,_extends({key:name,id:name,componentClass:"select",validationState:(0,_FormComponent.getValidationState)(name,errors),errorMessage:errorMessages[name],onChange,value:data[name]||""},props),placeholder&&_react.default.createElement("option",{key:"placeholder",value:""},placeholder),renderedOptions)};SelectFieldGroup.propTypes={name:_propTypes.default.string.isRequired,options:_propTypes.default.arrayOf(_propTypes.default.string),placeholder:_propTypes.default.string},(exports.SelectFieldGroupFromOptions=function SelectFieldGroupFromOptions(props){var componentOptions=(0,_react.useContext)(_FormComponent.FormContext).options[props.name];return _react.default.createElement(SelectFieldGroup,_extends({options:componentOptions},props))}).propTypes={name:_propTypes.default.string.isRequired}},"./src/code-studio/pd/form_components_func/form/SingleCheckbox.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.SingleCheckbox=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_SingleCheckbox=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/SingleCheckbox.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}(exports.SingleCheckbox=function SingleCheckbox(props){var _useContext=(0,_react.useContext)(_FormComponent.FormContext),errors=_useContext.errors,data=_useContext.data,onChange=_useContext.onChange,name=props.name,_props$required=props.required,required=void 0===_props$required||_props$required;return _react.default.createElement(_SingleCheckbox.default,_extends({name,required,validationState:(0,_FormComponent.getValidationState)(name,errors),value:data[name],onChange},props))}).propTypes={name:_propTypes.default.string.isRequired,required:_propTypes.default.bool}},"./src/code-studio/pd/form_components_func/form/UsPhoneNumberInput.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.UsPhoneNumberInput=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_UsPhoneNumberInput=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/UsPhoneNumberInput.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}(exports.UsPhoneNumberInput=function UsPhoneNumberInput(props){var _useContext=(0,_react.useContext)(_FormComponent.FormContext),errors=_useContext.errors,errorMessages=_useContext.errorMessages,onChange=_useContext.onChange,data=_useContext.data,name=props.name;return _react.default.createElement(_UsPhoneNumberInput.default,_extends({name,validationState:(0,_FormComponent.getValidationState)(name,errors),errorMessage:errorMessages[name],onChange,value:data[name]},props))}).propTypes={name:_propTypes.default.string.isRequired}},"./src/code-studio/pd/form_components_func/labeled/LabeledCheckBoxes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledDynamicCheckBoxesWithAdditionalTextFields=exports.LabeledDynamicCheckBoxes=exports.LabeledCheckBoxesWithAdditionalTextFields=exports.LabeledCheckBoxes=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Buttons=__webpack_require__("./src/code-studio/pd/form_components_func/form/Buttons.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledCheckBoxes=function LabeledCheckBoxes(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"check"},props);return _react.default.createElement(_Buttons.ButtonsFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])},(exports.LabeledCheckBoxesWithAdditionalTextFields=function LabeledCheckBoxesWithAdditionalTextFields(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"check",textFieldMap:props.textFieldMap},props);return _react.default.createElement(_Buttons.ButtonsWithAdditionalTextFieldsFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),textFieldMap:_propTypes.default.object},(exports.LabeledDynamicCheckBoxes=function LabeledDynamicCheckBoxes(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"check",answers:props.options},props);return _react.default.createElement(_Buttons.Buttons,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),options:_propTypes.default.array},(exports.LabeledDynamicCheckBoxesWithAdditionalTextFields=function LabeledDynamicCheckBoxesWithAdditionalTextFields(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"check",options:props.options,textFieldMap:props.textFieldMap},props);return _react.default.createElement(_Buttons.ButtonsWithAdditionalTextFields,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),options:_propTypes.default.array,textFieldMap:_propTypes.default.object}},"./src/code-studio/pd/form_components_func/labeled/LabeledInput.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledNumberInput=exports.LabeledLargeInput=exports.LabeledInput=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_FieldGroup=__webpack_require__("./src/code-studio/pd/form_components_func/form/FieldGroup.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var LabeledInput=exports.LabeledInput=function LabeledInput(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"text"},props);return _react.default.createElement(_FieldGroup.FieldGroup,passProps)};LabeledInput.propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])},(exports.LabeledNumberInput=function LabeledNumberInput(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"number"},props);return _react.default.createElement(_FieldGroup.FieldGroup,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])};exports.LabeledLargeInput=function LabeledLargeInput(props){var passProps=_objectSpread({componentClass:"textarea",controlWidth:{md:12},rows:4,maxLength:500},props);return _react.default.createElement(LabeledInput,passProps)}},"./src/code-studio/pd/form_components_func/labeled/LabeledRadioButtons.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledRadioButtonsWithAdditionalTextFields=exports.LabeledRadioButtons=exports.LabeledDynamicRadioButtonsWithAdditionalTextFields=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Buttons=__webpack_require__("./src/code-studio/pd/form_components_func/form/Buttons.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledRadioButtons=function LabeledRadioButtons(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"radio"},props);return _react.default.createElement(_Buttons.ButtonsFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])},(exports.LabeledRadioButtonsWithAdditionalTextFields=function LabeledRadioButtonsWithAdditionalTextFields(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"radio",textFieldMap:props.textFieldMap},props);return _react.default.createElement(_Buttons.ButtonsWithAdditionalTextFieldsFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),textFieldMap:_propTypes.default.object},(exports.LabeledDynamicRadioButtonsWithAdditionalTextFields=function LabeledDynamicRadioButtonsWithAdditionalTextFields(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"radio",options:props.options,textFieldMap:props.textFieldMap},props);return _react.default.createElement(_Buttons.ButtonsWithAdditionalTextFields,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),options:_propTypes.default.array,textFieldMap:_propTypes.default.object}},"./src/code-studio/pd/form_components_func/labeled/LabeledSelect.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledSelect=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_SelectFieldGroup=__webpack_require__("./src/code-studio/pd/form_components_func/form/SelectFieldGroup.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledSelect=function LabeledSelect(){var props=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"select"},props);return _react.default.createElement(_SelectFieldGroup.SelectFieldGroupFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])}},"./src/code-studio/pd/form_components_func/labeled/LabeledSingleCheckbox.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledSingleCheckbox=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_SingleCheckbox=__webpack_require__("./src/code-studio/pd/form_components_func/form/SingleCheckbox.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledSingleCheckbox=function LabeledSingleCheckbox(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),props);return _react.default.createElement(_SingleCheckbox.SingleCheckbox,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])}},"./src/code-studio/pd/form_components_func/labeled/LabeledUsPhoneNumberInput.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledUsPhoneNumberInput=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_UsPhoneNumberInput=__webpack_require__("./src/code-studio/pd/form_components_func/form/UsPhoneNumberInput.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledUsPhoneNumberInput=function LabeledUsPhoneNumberInput(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),props);return _react.default.createElement(_UsPhoneNumberInput.UsPhoneNumberInput,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])}},"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var rendered=(this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact).processSync(this.props.markdown).contents,markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=_redactableMarkdown.default.create().getParser().use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHTML:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"});exports.default=SafeMarkdown;module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/code-studio/pd/form_components_func/LabeledFormComponent.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UsPhoneNumber=exports.SingleCheckbox=exports.Select=exports.RadioButtonsWithAdditionalFields=exports.RadioButtons=exports.LargeInput=exports.Input=exports.DynamicRadioButtonsWithAdditionalFields=exports.DynamicCheckboxesWithAdditionalFields=exports.DynamicCheckboxes=exports.CheckboxesWithAdditionalFields=exports.Checkboxes=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx"),_LabeledCheckBoxes=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledCheckBoxes.jsx"),_LabeledInput=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledInput.jsx"),_LabeledRadioButtons=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledRadioButtons.jsx"),_LabeledSelect=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledSelect.jsx"),_LabeledSingleCheckbox=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledSingleCheckbox.jsx"),_LabeledUsPhoneNumberInput=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledUsPhoneNumberInput.jsx"),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js"),_reactBootstrapStoryDecorator=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/reactBootstrapStoryDecorator.jsx")),_addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_excluded=["children"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var OTHER="Other (please specify):",defaultProps=(exports.default={component:_LabeledFormComponent.LabelsContext,decorators:[_reactBootstrapStoryDecorator.default]},{errors:[],errorMessages:{},data:{},options:{},onChange:(0,_addonActions.action)("onChange")}),Context=function Context(_ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded),name=props.name,label=props.label;return _react.default.createElement(_FormComponent.FormContext.Provider,{value:_objectSpread(_objectSpread({},defaultProps),props)},_react.default.createElement(_LabeledFormComponent.LabelsContext.Provider,{value:_defineProperty({},name,label)},children))};Context.propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.string.isRequired,children:_propTypes.default.node};var Template=function Template(args){var context=args.context,children=args.children;return _react.default.createElement(Context,context,children)};(exports.SingleCheckbox=Template.bind({})).args={context:{name:"singleCheckbox",label:"This is a single checkbox"},children:_react.default.createElement(_LabeledSingleCheckbox.LabeledSingleCheckbox,{name:"singleCheckbox"})},(exports.Checkboxes=Template.bind({})).args={context:{name:"checkBoxes",label:"Select options",options:{checkBoxes:["option 1","option 2","option 3"]}},children:_react.default.createElement(_LabeledCheckBoxes.LabeledCheckBoxes,{name:"checkBoxes"})},(exports.CheckboxesWithAdditionalFields=Template.bind({})).args={context:{name:"checkBoxesWithOther",label:"Select options and add text",options:{checkBoxesWithOther:["option 1","option 2",OTHER]}},children:_react.default.createElement(_LabeledCheckBoxes.LabeledCheckBoxesWithAdditionalTextFields,{name:"checkBoxesWithOther",textFieldMap:_defineProperty({},OTHER,"other")})},(exports.RadioButtons=Template.bind({})).args={context:{name:"radioButtons",label:"Select an option",options:{radioButtons:["option 1","option 2","option 3"]}},children:_react.default.createElement(_LabeledRadioButtons.LabeledRadioButtons,{name:"radioButtons"})},(exports.RadioButtonsWithAdditionalFields=Template.bind({})).args={context:{name:"radioButtonsWithOther",label:"Select an option and add text",options:{radioButtonsWithOther:["option 1","option 2",OTHER]}},children:_react.default.createElement(_LabeledRadioButtons.LabeledRadioButtonsWithAdditionalTextFields,{name:"radioButtonsWithOther",textFieldMap:_defineProperty({},OTHER,"other")})},(exports.DynamicRadioButtonsWithAdditionalFields=Template.bind({})).args={context:{name:"dynamicRadioButtonsWithOther",label:"Select a dynamic option and add text"},children:_react.default.createElement(_LabeledRadioButtons.LabeledDynamicRadioButtonsWithAdditionalTextFields,{name:"dynamicRadioButtonsWithOther",options:[1,2,3].map((function(n){return"Dynamic option #".concat(n)})).concat([OTHER]),textFieldMap:_defineProperty({},OTHER,"other")})},(exports.DynamicCheckboxes=Template.bind({})).args={context:{name:"dynamicCheckBoxes",label:"Select all dynamic options that apply"},children:_react.default.createElement(_LabeledCheckBoxes.LabeledDynamicCheckBoxes,{name:"dynamicCheckBoxes",options:[1,2,3].map((function(n){return"Dynamic option #".concat(n)}))})},(exports.DynamicCheckboxesWithAdditionalFields=Template.bind({})).args={context:{name:"dynamicCheckboxesWithOther",label:"Select a dynamic option and add text"},children:_react.default.createElement(_LabeledCheckBoxes.LabeledDynamicCheckBoxesWithAdditionalTextFields,{name:"dynamicCheckboxesWithOther",options:[1,2,3].map((function(n){return"Dynamic option #".concat(n)})).concat([OTHER]),textFieldMap:_defineProperty({},OTHER,"other")})},(exports.Select=Template.bind({})).args={context:{name:"select",label:"Select an option",options:{select:["option 1","option 2","option 3"]}},children:_react.default.createElement(_LabeledSelect.LabeledSelect,{name:"select",placeholder:"Select an option"})},(exports.Input=Template.bind({})).args={context:{name:"input",label:"Enter some text"},children:_react.default.createElement(_LabeledInput.LabeledInput,{name:"input"})},(exports.LargeInput=Template.bind({})).args={context:{name:"largeInput",label:"Enter some longer text"},children:_react.default.createElement(_LabeledInput.LabeledLargeInput,{name:"largeInput"})},(exports.UsPhoneNumber=Template.bind({})).args={context:{name:"usPhoneNumber",label:"Enter a phone number"},children:_react.default.createElement(_LabeledUsPhoneNumberInput.LabeledUsPhoneNumberInput,{name:"usPhoneNumber"})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1zdHVkaW8tcGQtZm9ybV9jb21wb25lbnRzX2Z1bmMtTGFiZWxlZEZvcm1Db21wb25lbnQtc3RvcnkuMDcwNDAzZDguaWZyYW1lLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiK1RBQUEsSUFBQUEsT0FBMEIsU0FBQUMsdUJBQUFDLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLENBQTFCRCxDQUFBRyxvQkFBQSxrQ0FFd0JDLFFBQUFBLFlBQUdDLE9BQUFBLFFBQU1DLGNBQWMsQ0FBQyxHQU9qQkYsUUFBQUEsbUJBQUcsU0FBckJHLG1CQUFzQkMsS0FBTUMsUUFDdkMsR0FBSUEsT0FBT0MsU0FBU0YsTUFDbEIsTUFBTyxPQUVYLEMseWZDYkEsSUFBQVQsT0FDNEQsU0FBQVksd0JBQUFDLEVBQUFDLEdBQUEsSUFBQUEsR0FBQUQsR0FBQUEsRUFBQVYsV0FBQSxPQUFBVSxFQUFBLFVBQUFBLEdBQUEsVUFBQUUsUUFBQUYsSUFBQSxtQkFBQUEsRUFBQSxlQUFBQSxHQUFBLElBQUFHLEVBQUFDLHlCQUFBSCxHQUFBLEdBQUFFLEdBQUFBLEVBQUFFLElBQUFMLEdBQUEsT0FBQUcsRUFBQUcsSUFBQU4sR0FBQSxJQUFBTyxFQUFBLENBQUFDLFVBQUEsTUFBQUMsRUFBQUMsT0FBQUMsZ0JBQUFELE9BQUFFLHlCQUFBLFFBQUFDLEtBQUFiLEVBQUEsZUFBQWEsR0FBQSxHQUFBQyxlQUFBQyxLQUFBZixFQUFBYSxHQUFBLEtBQUFHLEVBQUFQLEVBQUFDLE9BQUFFLHlCQUFBWixFQUFBYSxHQUFBLEtBQUFHLElBQUFBLEVBQUFWLEtBQUFVLEVBQUFDLEtBQUFQLE9BQUFDLGVBQUFKLEVBQUFNLEVBQUFHLEdBQUFULEVBQUFNLEdBQUFiLEVBQUFhLEVBQUEsUUFBQU4sRUFBQSxRQUFBUCxFQUFBRyxHQUFBQSxFQUFBYyxJQUFBakIsRUFBQU8sR0FBQUEsQ0FBQSxDQUQ1RFIsQ0FBQVIsb0JBQUEsa0NBQ0EyQixjQUE0RCxTQUFBOUIsdUJB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QUFPLENBQUNnTixRQUM1RDdKLGFBQVkxQyxnQkFBQSxHQUFJdU0sTUFBUSxhQUtYdFAsUUFBQUEsT0FBR2lRLFNBQVNuTSxLQUFLLENBQUMsSUFDOUJvTSxLQUFPLENBQ1pDLFFBQVMsQ0FDUC9QLEtBQU0sU0FDTm9DLE1BQU8sbUJBQ1A2QyxRQUFTLENBQ1BtTCxPQUFRLENBQUMsV0FBWSxXQUFZLGNBR3JDVixTQUFVblEsT0FBQSxRQUFBcUMsY0FBQ3lNLGVBQUEvRSxjQUFhLENBQUN0SixLQUFLLFNBQVN5RyxZQUFZLHVCQUduQzdHLFFBQUFBLE1BQUdpUSxTQUFTbk0sS0FBSyxDQUFDLElBQzlCb00sS0FBTyxDQUNYQyxRQUFTLENBQ1AvUCxLQUFNLFFBQ05vQyxNQUFPLG1CQUVUc04sU0FBVW5RLE9BQUEsUUFBQXFDLGNBQUN1TSxjQUFBdEYsYUFBWSxDQUFDN0ksS0FBSyxZQUdSSixRQUFBQSxXQUFHaVEsU0FBU25NLEtBQUssQ0FBQyxJQUM5Qm9NLEtBQU8sQ0FDaEJDLFFBQVMsQ0FDUC9QLEtBQU0sYUFDTm9DLE1BQU8sMEJBRVRzTixTQUFVblEsT0FBQSxRQUFBcUMsY0FBQ3VNLGNBQUFwRixrQkFBaUIsQ0FBQy9JLEtBQUssaUJBR1ZKLFFBQUFBLGNBQUdpUSxTQUFTbk0sS0FBSyxDQUFDLElBQzlCb00sS0FBTyxDQUNuQkMsUUFBUyxDQUNQL1AsS0FBTSxnQkFDTm9DLE1BQU8sd0JBRVRzTixTQUFVblEsT0FBQSxRQUFBcUMsY0FBQzJNLDJCQUFBOUUsMEJBQXlCLENBQUN6SixLQUFLLGtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2NvZGUtc3R1ZGlvL3BkL2Zvcm1fY29tcG9uZW50c19mdW5jL0Zvcm1Db21wb25lbnQuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2NvZGUtc3R1ZGlvL3BkL2Zvcm1fY29tcG9uZW50c19mdW5jL0xhYmVsZWRGb3JtQ29tcG9uZW50LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvZm9ybS9CdXR0b25zLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvZm9ybS9GaWVsZEdyb3VwLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvZm9ybS9TZWxlY3RGaWVsZEdyb3VwLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvZm9ybS9TaW5nbGVDaGVja2JveC5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2NvZGUtc3R1ZGlvL3BkL2Zvcm1fY29tcG9uZW50c19mdW5jL2Zvcm0vVXNQaG9uZU51bWJlcklucHV0LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvbGFiZWxlZC9MYWJlbGVkQ2hlY2tCb3hlcy5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2NvZGUtc3R1ZGlvL3BkL2Zvcm1fY29tcG9uZW50c19mdW5jL2xhYmVsZWQvTGFiZWxlZElucHV0LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvbGFiZWxlZC9MYWJlbGVkUmFkaW9CdXR0b25zLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvbGFiZWxlZC9MYWJlbGVkU2VsZWN0LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvbGFiZWxlZC9MYWJlbGVkU2luZ2xlQ2hlY2tib3guanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9wZC9mb3JtX2NvbXBvbmVudHNfZnVuYy9sYWJlbGVkL0xhYmVsZWRVc1Bob25lTnVtYmVySW5wdXQuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvU2FmZU1hcmtkb3duLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3BsdWdpbnMvZXh0ZXJuYWxMaW5rcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzX2Z1bmMvTGFiZWxlZEZvcm1Db21wb25lbnQuc3RvcnkuanN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBjb25zdCBGb3JtQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoe30pO1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0ge0FycmF5PFN0cmluZz59IGVycm9yc1xuICogQHJldHVybnMge1N0cmluZ3x1bmRlZmluZWR9XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRWYWxpZGF0aW9uU3RhdGUgPSAobmFtZSwgZXJyb3JzKSA9PiB7XG4gIGlmIChlcnJvcnMuaW5jbHVkZXMobmFtZSkpIHtcbiAgICByZXR1cm4gJ2Vycm9yJztcbiAgfVxufTtcbiIsImltcG9ydCBSZWFjdCwge3VzZUNvbnRleHR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBTYWZlTWFya2Rvd24gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9TYWZlTWFya2Rvd24nO1xuXG4vLyBDb250YWluZXJzIG9mIGxhYmVsZWQgZm9ybSBjb21wb25lbnRzIHNob3VsZCBwcm92aWRlIHRoaXMgY29udGV4dFxuLy8gdXNpbmcgPExhYmVsc0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbnRleHR9PlxuLy8gVGhlIGZvcm1hdCBvZiB0aGUgY29udGV4dCBpcyB7IGxhYmVsTmFtZTogbGFiZWxTdHJpbmcgfVxuZXhwb3J0IGNvbnN0IExhYmVsc0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KHt9KTtcblxuLy8gVUkgSGVscGVyc1xuZXhwb3J0IGNvbnN0IHVzZUxhYmVsRm9yID0gbmFtZSA9PiB7XG4gIGNvbnN0IGxhYmVscyA9IHVzZUNvbnRleHQoTGFiZWxzQ29udGV4dCk7XG4gIGlmICghKG5hbWUgaW4gbGFiZWxzKSkge1xuICAgIGNvbnNvbGUud2FybihgTGFiZWwgbWlzc2luZyBmb3IgJHtuYW1lfWApO1xuICAgIHJldHVybiBuYW1lO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICAvLyBTYWZlTWFya2Rvd24gd3JhcHMgbWFya2Rvd24gaW4gYSA8ZGl2PiBhbmQgdXNlcyA8cD4gdGFncyBmb3IgZWFjaFxuICAgIC8vIHBhcmFncmFwaCwgYnV0IHRoZSBmb3JtIHN5c3RlbSB3YXMgYnVpbHQgdXNpbmcgYSBwcmlvciBtYXJrZG93blxuICAgIC8vIHJlbmRlcmVyIHdoaWNoIGRpZG4ndCBkbyB0aGF0IGZvciBzaW5nbGUtbGluZSBlbnRyaWVzLCBhbmQgc28gd2UgcmVseVxuICAgIC8vIG9uIHNvbWUgQ1NTIHN0eWxpbmcgaW4gcGQuc2NzcyB0byBzZXQgdGhlc2UgZWxlbWVudHMgdG9cbiAgICAvLyBcImRpc3BsYXk6IGlubGluZVwiIHRvIG1haW50YWluIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LlxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5saW5lX21hcmtkb3duXCI+XG4gICAgICA8U2FmZU1hcmtkb3duIG9wZW5FeHRlcm5hbExpbmtzSW5OZXdUYWIgbWFya2Rvd249e2xhYmVsc1tuYW1lXX0gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VEZWZhdWx0T3B0aW9ucyA9IChuYW1lLCBsYWJlbCkgPT4ge1xuICBjb25zdCBjb250ZXh0TGFiZWwgPSB1c2VMYWJlbEZvcihuYW1lKSB8fCBsYWJlbDtcbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIGxhYmVsOiBjb250ZXh0TGFiZWwsXG4gICAgY29udHJvbFdpZHRoOiB7bWQ6IDZ9LFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICB9O1xufTtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHt1c2VDb250ZXh0fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQnV0dG9uTGlzdENvbXBvbmVudCBmcm9tICcuLi8uLi9mb3JtX2NvbXBvbmVudHMvQnV0dG9uTGlzdC5qc3gnO1xuaW1wb3J0IHtnZXRWYWxpZGF0aW9uU3RhdGUsIEZvcm1Db250ZXh0fSBmcm9tICcuLi9Gb3JtQ29tcG9uZW50JztcblxuLyoqXG4gKiBDb25zdHJ1Y3QgYSBjb250cm9sbGVkIHJhZGlvIG9yIGNoZWNrYm94IGlucHV0IGZyb20gdGhlIHByb3ZpZGVkIG9wdGlvbnNcbiAqL1xuZXhwb3J0IGNvbnN0IEJ1dHRvbnMgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHtvbkNoYW5nZSwgZGF0YSwgZXJyb3JzfSA9IHVzZUNvbnRleHQoRm9ybUNvbnRleHQpO1xuICBjb25zdCB7bmFtZSwgcmVxdWlyZWQgPSB0cnVlfSA9IHByb3BzO1xuXG4gIHJldHVybiAoXG4gICAgPEJ1dHRvbkxpc3RDb21wb25lbnRcbiAgICAgIGtleT17bmFtZX1cbiAgICAgIGdyb3VwTmFtZT17bmFtZX1cbiAgICAgIHJlcXVpcmVkPXtyZXF1aXJlZH1cbiAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgIHNlbGVjdGVkSXRlbXM9e2RhdGFbbmFtZV19XG4gICAgICB2YWxpZGF0aW9uU3RhdGU9e2dldFZhbGlkYXRpb25TdGF0ZShuYW1lLCBlcnJvcnMpfVxuICAgICAgey4uLnByb3BzfVxuICAgIC8+XG4gICk7XG59O1xuQnV0dG9ucy5wcm9wVHlwZXMgPSB7XG4gIC8vIHRoZSBuYW1lIG9mIHRoZSBpbnB1dC4gU2hvdWxkIG1hdGNoIGEga2V5IGluIEZvcm1Db250ZXh0IG9wdGlvbnNcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG59O1xuXG4vKipcbiAqIENvbnN0cnVjdCBhIGNvbnRyb2xsZWQgcmFkaW8gb3IgY2hlY2tib3ggaW5wdXQgZnJvbSB0aGUgb3B0aW9ucyBzcGVjaWZpZWRcbiAqIGluIEZvcm1Db250ZXh0XG4gKi9cbmV4cG9ydCBjb25zdCBCdXR0b25zRnJvbU9wdGlvbnMgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHtvcHRpb25zfSA9IHVzZUNvbnRleHQoRm9ybUNvbnRleHQpO1xuICBjb25zdCB7bmFtZX0gPSBwcm9wcztcbiAgaWYgKCFvcHRpb25zW25hbWVdIHx8IG9wdGlvbnNbbmFtZV0ubGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgYENhbm5vdCBjcmVhdGUgYnV0dG9ucyBmb3IgJHtuYW1lfSB3aXRob3V0IG9wdGlvbnNgO1xuICB9XG5cbiAgY29uc3QgYW5zd2VycyA9IG9wdGlvbnNbbmFtZV07XG4gIHJldHVybiA8QnV0dG9ucyBhbnN3ZXJzPXthbnN3ZXJzfSB7Li4ucHJvcHN9IC8+O1xufTtcbkJ1dHRvbnNGcm9tT3B0aW9ucy5wcm9wVHlwZXMgPSB7XG4gIC8vIHRoZSBuYW1lIG9mIHRoZSBpbnB1dC4gU2hvdWxkIG1hdGNoIGEga2V5IGluIEZvcm1Db250ZXh0XG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn07XG5cbi8qKlxuICogQ29uc3RydWN0IGEgY29udHJvbGxlZCByYWRpbyBvciBjaGVja2JveCBpbnB1dCBmcm9tIHRoZSBvcHRpb25zIHNwZWNpZmllZFxuICogaW4gRm9ybUNvbnRleHQgd2l0aCBhZGRpdGlvbmFsIHRleHQgZmllbGRzIG9uIGNlcnRhaW4gYW5zd2Vyc1xuICovXG5leHBvcnQgY29uc3QgQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkcyA9IHByb3BzID0+IHtcbiAgY29uc3Qge2RhdGEsIG9uQ2hhbmdlfSA9IHVzZUNvbnRleHQoRm9ybUNvbnRleHQpO1xuICBjb25zdCB7bmFtZSwgb3B0aW9ucywgdGV4dEZpZWxkTWFwfSA9IHByb3BzO1xuICBjb25zdCBhbnN3ZXJzID0gb3B0aW9ucy5tYXAoYW5zd2VyID0+IHtcbiAgICBpZiAoIShhbnN3ZXIgaW4gdGV4dEZpZWxkTWFwKSkge1xuICAgICAgcmV0dXJuIGFuc3dlcjtcbiAgICB9XG5cbiAgICBjb25zdCB0ZXh0RmllbGROYW1lID0gYCR7bmFtZX1fJHt0ZXh0RmllbGRNYXBbYW5zd2VyXX1gO1xuICAgIHJldHVybiB7XG4gICAgICBhbnN3ZXJUZXh0OiBhbnN3ZXIsXG4gICAgICBpbnB1dFZhbHVlOiBkYXRhW3RleHRGaWVsZE5hbWVdLFxuICAgICAgb25JbnB1dENoYW5nZTogbmV3VmFsdWUgPT4gb25DaGFuZ2Uoe1t0ZXh0RmllbGROYW1lXTogbmV3VmFsdWV9KSxcbiAgICB9O1xuICB9KTtcblxuICByZXR1cm4gPEJ1dHRvbnMgYW5zd2Vycz17YW5zd2Vyc30gey4uLnByb3BzfSAvPjtcbn07XG5CdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzLnByb3BUeXBlcyA9IHtcbiAgLy8gdGhlIG5hbWUgb2YgdGhlIGlucHV0LiBTaG91bGQgbWF0Y2ggYSBrZXkgaW4gRm9ybUNvbnRleHQgb3B0aW9uc1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIC8vIGxpc3Qgb2YgYXZhaWxhYmxlIG9wdGlvbnMgZm9yIHRoZSBCdXR0b25MaXN0XG4gIG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpLmlzUmVxdWlyZWQsXG4gIC8vIG1hcCBzcGVjaWZ5aW5nIHdoaWNoIGFuc3dlcnMgc2hvdWxkIGJlIGZvbGxvd2VkIGJ5IGEgdGV4dCBmaWVsZFxuICAvLyBFYWNoIGtleSBpcyBhbiBhbnN3ZXIgdGV4dCBmcm9tIG9wdGlvbnMuXG4gIC8vIEVhY2ggdmFsdWUgaXMgdGhlIHN1ZmZpeCAoYXBwZW5kZWQgdG8gYCR7bmFtZX1fYCkgd2hpY2ggd2lsbCBiZWNvbWUgdGhlIG5hbWUgb2YgdGhlIG5ldyB0ZXh0IGZpZWxkXG4gIC8vIEZvciBleGFtcGxlLCB7XCJPdGhlclwiIDogXCJvdGhlclwifSB3aWxsIGFkZCBhIHRleHQgZmllbGQgY2FsbGVkIGAke25hbWV9X290aGVyYCBhZnRlciB0aGUgXCJPdGhlclwiIG9wdGlvbi5cbiAgdGV4dEZpZWxkTWFwOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG59O1xuXG4vKipcbiAqIENvbnN0cnVjdCBhIGNvbnRyb2xsZWQgcmFkaW8gb3IgY2hlY2tib3ggaW5wdXQgZnJvbSB0aGUgb3B0aW9ucyBzcGVjaWZpZWRcbiAqIGluIEZvcm1Db250ZXh0IHdpdGggYWRkaXRpb25hbCB0ZXh0IGZpZWxkcyBvbiBjZXJ0YWluIGFuc3dlcnNcbiAqL1xuZXhwb3J0IGNvbnN0IEJ1dHRvbnNXaXRoQWRkaXRpb25hbFRleHRGaWVsZHNGcm9tT3B0aW9ucyA9IHByb3BzID0+IHtcbiAgY29uc3Qge29wdGlvbnN9ID0gdXNlQ29udGV4dChGb3JtQ29udGV4dCk7XG4gIGNvbnN0IHtuYW1lfSA9IHByb3BzO1xuICBpZiAoIW9wdGlvbnNbbmFtZV0gfHwgb3B0aW9uc1tuYW1lXS5sZW5ndGggPT09IDApIHtcbiAgICB0aHJvdyBgQ2Fubm90IGNyZWF0ZSBidXR0b25zIGZvciAke25hbWV9IHdpdGhvdXQgb3B0aW9uc2A7XG4gIH1cblxuICBjb25zdCBjb21wb25lbnRPcHRpb25zID0gb3B0aW9uc1tuYW1lXTtcbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkcyBvcHRpb25zPXtjb21wb25lbnRPcHRpb25zfSB7Li4ucHJvcHN9IC8+XG4gICk7XG59O1xuQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkc0Zyb21PcHRpb25zLnByb3BUeXBlcyA9IHtcbiAgLy8gdGhlIG5hbWUgb2YgdGhlIGlucHV0LiBTaG91bGQgbWF0Y2ggYSBrZXkgaW4gRm9ybUNvbnRleHQgb3B0aW9uc1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwge3VzZUNvbnRleHR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBGaWVsZEdyb3VwQ29tcG9uZW50IGZyb20gJy4uLy4uL2Zvcm1fY29tcG9uZW50cy9GaWVsZEdyb3VwJztcbmltcG9ydCB7Z2V0VmFsaWRhdGlvblN0YXRlLCBGb3JtQ29udGV4dH0gZnJvbSAnLi4vRm9ybUNvbXBvbmVudCc7XG5cbi8qKlxuICogQ29uc3RydWN0IGEgY29udHJvbGxlZCBpbnB1dFxuICovXG5leHBvcnQgY29uc3QgRmllbGRHcm91cCA9IHByb3BzID0+IHtcbiAgY29uc3Qge2Vycm9ycywgZXJyb3JNZXNzYWdlcywgb25DaGFuZ2UsIGRhdGF9ID0gdXNlQ29udGV4dChGb3JtQ29udGV4dCk7XG4gIGNvbnN0IHtuYW1lfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxGaWVsZEdyb3VwQ29tcG9uZW50XG4gICAgICBrZXk9e25hbWV9XG4gICAgICBpZD17bmFtZX1cbiAgICAgIHZhbGlkYXRpb25TdGF0ZT17Z2V0VmFsaWRhdGlvblN0YXRlKG5hbWUsIGVycm9ycyl9XG4gICAgICBlcnJvck1lc3NhZ2U9e2Vycm9yTWVzc2FnZXNbbmFtZV19XG4gICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICB2YWx1ZT17ZGF0YVtuYW1lXSB8fCAnJ31cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApO1xufTtcbkZpZWxkR3JvdXAucHJvcFR5cGVzID0ge1xuICAvLyB0aGUgbmFtZSBvZiB0aGUgaW5wdXRcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxufTtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHt1c2VDb250ZXh0fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRmllbGRHcm91cENvbXBvbmVudCBmcm9tICcuLi8uLi9mb3JtX2NvbXBvbmVudHMvRmllbGRHcm91cCc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vLi4vZm9ybV9jb21wb25lbnRzL3V0aWxzJztcbmltcG9ydCB7Z2V0VmFsaWRhdGlvblN0YXRlLCBGb3JtQ29udGV4dH0gZnJvbSAnLi4vRm9ybUNvbXBvbmVudCc7XG5cbi8qKlxuICogQ29uc3RydWN0IGEgY29udHJvbGxlZCBTZWxlY3QgZHJvcGRvd24gd2l0aCBzdXBwbGllZCBvcHRpb25zXG4gKi9cbmV4cG9ydCBjb25zdCBTZWxlY3RGaWVsZEdyb3VwID0gcHJvcHMgPT4ge1xuICBjb25zdCB7ZXJyb3JzLCBlcnJvck1lc3NhZ2VzLCBvbkNoYW5nZSwgZGF0YX0gPSB1c2VDb250ZXh0KEZvcm1Db250ZXh0KTtcbiAgY29uc3Qge25hbWUsIG9wdGlvbnMsIHBsYWNlaG9sZGVyfSA9IHByb3BzO1xuICBsZXQgcmVuZGVyZWRPcHRpb25zO1xuICBpZiAoQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xuICAgIHJlbmRlcmVkT3B0aW9ucyA9IG9wdGlvbnMubWFwKHZhbHVlID0+IHtcbiAgICAgIGNvbnN0IHthbnN3ZXJUZXh0LCBhbnN3ZXJWYWx1ZX0gPSB1dGlscy5ub3JtYWxpemVBbnN3ZXIodmFsdWUpO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPG9wdGlvbiBrZXk9e2Fuc3dlclZhbHVlfSB2YWx1ZT17YW5zd2VyVmFsdWV9PlxuICAgICAgICAgIHthbnN3ZXJUZXh0fVxuICAgICAgICA8L29wdGlvbj5cbiAgICAgICk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgcmVuZGVyZWRPcHRpb25zID0gT2JqZWN0LmtleXMob3B0aW9ucykubWFwKGtleSA9PiAoXG4gICAgICA8b3B0aW9uIGtleT17a2V5fSB2YWx1ZT17a2V5fT5cbiAgICAgICAge29wdGlvbnNba2V5XX1cbiAgICAgIDwvb3B0aW9uPlxuICAgICkpO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8RmllbGRHcm91cENvbXBvbmVudFxuICAgICAga2V5PXtuYW1lfVxuICAgICAgaWQ9e25hbWV9XG4gICAgICBjb21wb25lbnRDbGFzcz1cInNlbGVjdFwiXG4gICAgICB2YWxpZGF0aW9uU3RhdGU9e2dldFZhbGlkYXRpb25TdGF0ZShuYW1lLCBlcnJvcnMpfVxuICAgICAgZXJyb3JNZXNzYWdlPXtlcnJvck1lc3NhZ2VzW25hbWVdfVxuICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgdmFsdWU9e2RhdGFbbmFtZV0gfHwgJyd9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAge3BsYWNlaG9sZGVyICYmIChcbiAgICAgICAgPG9wdGlvbiBrZXk9XCJwbGFjZWhvbGRlclwiIHZhbHVlPVwiXCI+XG4gICAgICAgICAge3BsYWNlaG9sZGVyfVxuICAgICAgICA8L29wdGlvbj5cbiAgICAgICl9XG4gICAgICB7cmVuZGVyZWRPcHRpb25zfVxuICAgIDwvRmllbGRHcm91cENvbXBvbmVudD5cbiAgKTtcbn07XG5TZWxlY3RGaWVsZEdyb3VwLnByb3BUeXBlcyA9IHtcbiAgLy8gdGhlIG5hbWUgb2YgdGhlIGlucHV0LiBTaG91bGQgbWF0Y2ggYSBrZXkgaW4gb3B0aW9uc1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIC8vIGNhbiBiZSBzcGVjaWZpZWQgYXMgZWl0aGVyIGFuIGFycmF5IChvZiBlaXRoZXIgQW5zd2VycyBvciBTaW1wbGVBbnN3ZXJzLCBhcyBkZWZpbmVkIGluXG4gIC8vIHV0aWxzLmpzKSBvciBhbiBvYmplY3QgKGluIHdoaWNoIGNhc2Ugd2UnbGwgdXNlIHRoZSBrZXlzIGZvciB0aGVcbiAgLy8gdmFsdWVzIGFuZCB0aGUgdmFsdWVzIGZvciB0aGUgZGlzcGxheSBuYW1lcylcbiAgb3B0aW9uczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyksXG4gIC8vIGlmIHNwZWNpZmllZCwgd2lsbCBhZGQgYSB2YWx1ZWxlc3Mgb3B0aW9uXG4gIC8vIHdpdGggdGhlIHNwZWNpZmllZCBwbGFjZWhvbGRlciB0ZXh0XG4gIHBsYWNlaG9sZGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuLyoqXG4gKiBDb25zdHJ1Y3QgYSBjb250cm9sbGVkIFNlbGVjdCBkcm9wZG93biBmcm9tIHRoZSBvcHRpb25zIHNwZWNpZmllZCBpbiBGb3JtQ29udGV4dFxuICovXG5leHBvcnQgY29uc3QgU2VsZWN0RmllbGRHcm91cEZyb21PcHRpb25zID0gcHJvcHMgPT4ge1xuICBjb25zdCB7b3B0aW9uc30gPSB1c2VDb250ZXh0KEZvcm1Db250ZXh0KTtcbiAgY29uc3Qge25hbWV9ID0gcHJvcHM7XG4gIGNvbnN0IGNvbXBvbmVudE9wdGlvbnMgPSBvcHRpb25zW25hbWVdO1xuICByZXR1cm4gPFNlbGVjdEZpZWxkR3JvdXAgb3B0aW9ucz17Y29tcG9uZW50T3B0aW9uc30gey4uLnByb3BzfSAvPjtcbn07XG5TZWxlY3RGaWVsZEdyb3VwRnJvbU9wdGlvbnMucHJvcFR5cGVzID0ge1xuICAvLyB0aGUgbmFtZSBvZiB0aGUgaW5wdXQuIFNob3VsZCBtYXRjaCBhIGtleSBpbiBGb3JtQ29udGV4dCBvcHRpb25zXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7dXNlQ29udGV4dH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNpbmdsZUNoZWNrYm94Q29tcG9uZW50IGZyb20gJy4uLy4uL2Zvcm1fY29tcG9uZW50cy9TaW5nbGVDaGVja2JveCc7XG5pbXBvcnQge2dldFZhbGlkYXRpb25TdGF0ZSwgRm9ybUNvbnRleHR9IGZyb20gJy4uL0Zvcm1Db21wb25lbnQnO1xuXG4vKipcbiAqIENvbnN0cnVjdCBhIGNvbnRyb2xsZWQgc2luZ2xlIGNoZWNrYm94IGlucHV0IGZyb20gdGhlIHByb3ZpZGVkIG9wdGlvbnNcbiAqL1xuZXhwb3J0IGNvbnN0IFNpbmdsZUNoZWNrYm94ID0gcHJvcHMgPT4ge1xuICBjb25zdCB7ZXJyb3JzLCBkYXRhLCBvbkNoYW5nZX0gPSB1c2VDb250ZXh0KEZvcm1Db250ZXh0KTtcbiAgY29uc3Qge25hbWUsIHJlcXVpcmVkID0gdHJ1ZX0gPSBwcm9wcztcblxuICByZXR1cm4gKFxuICAgIDxTaW5nbGVDaGVja2JveENvbXBvbmVudFxuICAgICAgbmFtZT17bmFtZX1cbiAgICAgIHJlcXVpcmVkPXtyZXF1aXJlZH1cbiAgICAgIHZhbGlkYXRpb25TdGF0ZT17Z2V0VmFsaWRhdGlvblN0YXRlKG5hbWUsIGVycm9ycyl9XG4gICAgICB2YWx1ZT17ZGF0YVtuYW1lXX1cbiAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApO1xufTtcblNpbmdsZUNoZWNrYm94LnByb3BUeXBlcyA9IHtcbiAgLy8gdGhlIG5hbWUgb2YgdGhlIGlucHV0LiBTaG91bGQgbWF0Y2ggYSBrZXkgaW4gRm9ybUNvbnRleHQgb3B0aW9uc1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7dXNlQ29udGV4dH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFVzUGhvbmVOdW1iZXJJbnB1dENvbXBvbmVudCBmcm9tICcuLi8uLi9mb3JtX2NvbXBvbmVudHMvVXNQaG9uZU51bWJlcklucHV0JztcbmltcG9ydCB7Z2V0VmFsaWRhdGlvblN0YXRlLCBGb3JtQ29udGV4dH0gZnJvbSAnLi4vRm9ybUNvbXBvbmVudCc7XG4vKipcbiAqIENvbnN0cnVjdCBhIGNvbnRyb2xsZWQgVVMgcGhvbmUgbnVtYmVyIGlucHV0XG4gKi9cbmV4cG9ydCBjb25zdCBVc1Bob25lTnVtYmVySW5wdXQgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHtlcnJvcnMsIGVycm9yTWVzc2FnZXMsIG9uQ2hhbmdlLCBkYXRhfSA9IHVzZUNvbnRleHQoRm9ybUNvbnRleHQpO1xuICBjb25zdCB7bmFtZX0gPSBwcm9wcztcbiAgcmV0dXJuIChcbiAgICA8VXNQaG9uZU51bWJlcklucHV0Q29tcG9uZW50XG4gICAgICBuYW1lPXtuYW1lfVxuICAgICAgdmFsaWRhdGlvblN0YXRlPXtnZXRWYWxpZGF0aW9uU3RhdGUobmFtZSwgZXJyb3JzKX1cbiAgICAgIGVycm9yTWVzc2FnZT17ZXJyb3JNZXNzYWdlc1tuYW1lXX1cbiAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgIHZhbHVlPXtkYXRhW25hbWVdfVxuICAgICAgey4uLnByb3BzfVxuICAgIC8+XG4gICk7XG59O1xuVXNQaG9uZU51bWJlcklucHV0LnByb3BUeXBlcyA9IHtcbiAgLy8gdGhlIG5hbWUgb2YgdGhlIGlucHV0XG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIEJ1dHRvbnMsXG4gIEJ1dHRvbnNGcm9tT3B0aW9ucyxcbiAgQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkcyxcbiAgQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkc0Zyb21PcHRpb25zLFxufSBmcm9tICcuLi9mb3JtL0J1dHRvbnMnO1xuaW1wb3J0IHt1c2VEZWZhdWx0T3B0aW9uc30gZnJvbSAnLi4vTGFiZWxlZEZvcm1Db21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgTGFiZWxlZENoZWNrQm94ZXMgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IGRlZmF1bHRzID0gdXNlRGVmYXVsdE9wdGlvbnMocHJvcHMubmFtZSwgcHJvcHMubGFiZWwpO1xuICBjb25zdCBwYXNzUHJvcHMgPSB7XG4gICAgLi4uZGVmYXVsdHMsXG4gICAgdHlwZTogJ2NoZWNrJyxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIDxCdXR0b25zRnJvbU9wdGlvbnMgey4uLnBhc3NQcm9wc30gLz47XG59O1xuTGFiZWxlZENoZWNrQm94ZXMucHJvcFR5cGVzID0ge1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGxhYmVsOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZWxlbWVudF0pLFxufTtcblxuZXhwb3J0IGNvbnN0IExhYmVsZWRDaGVja0JveGVzV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzID0gcHJvcHMgPT4ge1xuICBjb25zdCBkZWZhdWx0cyA9IHVzZURlZmF1bHRPcHRpb25zKHByb3BzLm5hbWUsIHByb3BzLmxhYmVsKTtcbiAgY29uc3QgcGFzc1Byb3BzID0ge1xuICAgIC4uLmRlZmF1bHRzLFxuICAgIHR5cGU6ICdjaGVjaycsXG4gICAgdGV4dEZpZWxkTWFwOiBwcm9wcy50ZXh0RmllbGRNYXAsXG4gICAgLi4ucHJvcHMsXG4gIH07XG4gIHJldHVybiA8QnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkc0Zyb21PcHRpb25zIHsuLi5wYXNzUHJvcHN9IC8+O1xufTtcbkxhYmVsZWRDaGVja0JveGVzV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzLnByb3BUeXBlcyA9IHtcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBsYWJlbDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmVsZW1lbnRdKSxcbiAgdGV4dEZpZWxkTWFwOiBQcm9wVHlwZXMub2JqZWN0LFxufTtcblxuZXhwb3J0IGNvbnN0IExhYmVsZWREeW5hbWljQ2hlY2tCb3hlcyA9IHByb3BzID0+IHtcbiAgY29uc3QgZGVmYXVsdHMgPSB1c2VEZWZhdWx0T3B0aW9ucyhwcm9wcy5uYW1lLCBwcm9wcy5sYWJlbCk7XG4gIGNvbnN0IHBhc3NQcm9wcyA9IHtcbiAgICAuLi5kZWZhdWx0cyxcbiAgICB0eXBlOiAnY2hlY2snLFxuICAgIGFuc3dlcnM6IHByb3BzLm9wdGlvbnMsXG4gICAgLi4ucHJvcHMsXG4gIH07XG4gIHJldHVybiA8QnV0dG9ucyB7Li4ucGFzc1Byb3BzfSAvPjtcbn07XG5MYWJlbGVkRHluYW1pY0NoZWNrQm94ZXMucHJvcFR5cGVzID0ge1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGxhYmVsOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZWxlbWVudF0pLFxuICBvcHRpb25zOiBQcm9wVHlwZXMuYXJyYXksXG59O1xuXG5leHBvcnQgY29uc3QgTGFiZWxlZER5bmFtaWNDaGVja0JveGVzV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzID0gcHJvcHMgPT4ge1xuICBjb25zdCBkZWZhdWx0cyA9IHVzZURlZmF1bHRPcHRpb25zKHByb3BzLm5hbWUsIHByb3BzLmxhYmVsKTtcbiAgY29uc3QgcGFzc1Byb3BzID0ge1xuICAgIC4uLmRlZmF1bHRzLFxuICAgIHR5cGU6ICdjaGVjaycsXG4gICAgb3B0aW9uczogcHJvcHMub3B0aW9ucyxcbiAgICB0ZXh0RmllbGRNYXA6IHByb3BzLnRleHRGaWVsZE1hcCxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIDxCdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzIHsuLi5wYXNzUHJvcHN9IC8+O1xufTtcbkxhYmVsZWREeW5hbWljQ2hlY2tCb3hlc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkcy5wcm9wVHlwZXMgPSB7XG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbGFiZWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSksXG4gIG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheSxcbiAgdGV4dEZpZWxkTWFwOiBQcm9wVHlwZXMub2JqZWN0LFxufTtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtGaWVsZEdyb3VwfSBmcm9tICcuLi9mb3JtL0ZpZWxkR3JvdXAnO1xuaW1wb3J0IHt1c2VEZWZhdWx0T3B0aW9uc30gZnJvbSAnLi4vTGFiZWxlZEZvcm1Db21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgTGFiZWxlZElucHV0ID0gcHJvcHMgPT4ge1xuICBjb25zdCBkZWZhdWx0cyA9IHVzZURlZmF1bHRPcHRpb25zKHByb3BzLm5hbWUsIHByb3BzLmxhYmVsKTtcbiAgY29uc3QgcGFzc1Byb3BzID0ge1xuICAgIC4uLmRlZmF1bHRzLFxuICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIDxGaWVsZEdyb3VwIHsuLi5wYXNzUHJvcHN9IC8+O1xufTtcbkxhYmVsZWRJbnB1dC5wcm9wVHlwZXMgPSB7XG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbGFiZWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSksXG59O1xuXG5leHBvcnQgY29uc3QgTGFiZWxlZE51bWJlcklucHV0ID0gcHJvcHMgPT4ge1xuICBjb25zdCBkZWZhdWx0cyA9IHVzZURlZmF1bHRPcHRpb25zKHByb3BzLm5hbWUsIHByb3BzLmxhYmVsKTtcbiAgY29uc3QgcGFzc1Byb3BzID0ge1xuICAgIC4uLmRlZmF1bHRzLFxuICAgIHR5cGU6ICdudW1iZXInLFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gPEZpZWxkR3JvdXAgey4uLnBhc3NQcm9wc30gLz47XG59O1xuTGFiZWxlZE51bWJlcklucHV0LnByb3BUeXBlcyA9IHtcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBsYWJlbDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmVsZW1lbnRdKSxcbn07XG5cbmV4cG9ydCBjb25zdCBMYWJlbGVkTGFyZ2VJbnB1dCA9IHByb3BzID0+IHtcbiAgY29uc3QgcGFzc1Byb3BzID0ge1xuICAgIGNvbXBvbmVudENsYXNzOiAndGV4dGFyZWEnLFxuICAgIGNvbnRyb2xXaWR0aDoge21kOiAxMn0sXG4gICAgcm93czogNCxcbiAgICBtYXhMZW5ndGg6IDUwMCxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIDxMYWJlbGVkSW5wdXQgey4uLnBhc3NQcm9wc30gLz47XG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBCdXR0b25zRnJvbU9wdGlvbnMsXG4gIEJ1dHRvbnNXaXRoQWRkaXRpb25hbFRleHRGaWVsZHMsXG4gIEJ1dHRvbnNXaXRoQWRkaXRpb25hbFRleHRGaWVsZHNGcm9tT3B0aW9ucyxcbn0gZnJvbSAnLi4vZm9ybS9CdXR0b25zJztcbmltcG9ydCB7dXNlRGVmYXVsdE9wdGlvbnN9IGZyb20gJy4uL0xhYmVsZWRGb3JtQ29tcG9uZW50JztcblxuZXhwb3J0IGNvbnN0IExhYmVsZWRSYWRpb0J1dHRvbnMgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IGRlZmF1bHRzID0gdXNlRGVmYXVsdE9wdGlvbnMocHJvcHMubmFtZSwgcHJvcHMubGFiZWwpO1xuICBjb25zdCBwYXNzUHJvcHMgPSB7XG4gICAgLi4uZGVmYXVsdHMsXG4gICAgdHlwZTogJ3JhZGlvJyxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIDxCdXR0b25zRnJvbU9wdGlvbnMgey4uLnBhc3NQcm9wc30gLz47XG59O1xuTGFiZWxlZFJhZGlvQnV0dG9ucy5wcm9wVHlwZXMgPSB7XG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbGFiZWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSksXG59O1xuXG5leHBvcnQgY29uc3QgTGFiZWxlZFJhZGlvQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkcyA9IHByb3BzID0+IHtcbiAgY29uc3QgZGVmYXVsdHMgPSB1c2VEZWZhdWx0T3B0aW9ucyhwcm9wcy5uYW1lLCBwcm9wcy5sYWJlbCk7XG4gIGNvbnN0IHBhc3NQcm9wcyA9IHtcbiAgICAuLi5kZWZhdWx0cyxcbiAgICB0eXBlOiAncmFkaW8nLFxuICAgIHRleHRGaWVsZE1hcDogcHJvcHMudGV4dEZpZWxkTWFwLFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gPEJ1dHRvbnNXaXRoQWRkaXRpb25hbFRleHRGaWVsZHNGcm9tT3B0aW9ucyB7Li4ucGFzc1Byb3BzfSAvPjtcbn07XG5MYWJlbGVkUmFkaW9CdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzLnByb3BUeXBlcyA9IHtcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBsYWJlbDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmVsZW1lbnRdKSxcbiAgdGV4dEZpZWxkTWFwOiBQcm9wVHlwZXMub2JqZWN0LFxufTtcblxuZXhwb3J0IGNvbnN0IExhYmVsZWREeW5hbWljUmFkaW9CdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzID0gcHJvcHMgPT4ge1xuICBjb25zdCBkZWZhdWx0cyA9IHVzZURlZmF1bHRPcHRpb25zKHByb3BzLm5hbWUsIHByb3BzLmxhYmVsKTtcbiAgY29uc3QgcGFzc1Byb3BzID0ge1xuICAgIC4uLmRlZmF1bHRzLFxuICAgIHR5cGU6ICdyYWRpbycsXG4gICAgb3B0aW9uczogcHJvcHMub3B0aW9ucyxcbiAgICB0ZXh0RmllbGRNYXA6IHByb3BzLnRleHRGaWVsZE1hcCxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIDxCdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzIHsuLi5wYXNzUHJvcHN9IC8+O1xufTtcbkxhYmVsZWREeW5hbWljUmFkaW9CdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzLnByb3BUeXBlcyA9IHtcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBsYWJlbDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmVsZW1lbnRdKSxcbiAgb3B0aW9uczogUHJvcFR5cGVzLmFycmF5LFxuICB0ZXh0RmllbGRNYXA6IFByb3BUeXBlcy5vYmplY3QsXG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1NlbGVjdEZpZWxkR3JvdXBGcm9tT3B0aW9uc30gZnJvbSAnLi4vZm9ybS9TZWxlY3RGaWVsZEdyb3VwJztcbmltcG9ydCB7dXNlRGVmYXVsdE9wdGlvbnN9IGZyb20gJy4uL0xhYmVsZWRGb3JtQ29tcG9uZW50JztcblxuZXhwb3J0IGNvbnN0IExhYmVsZWRTZWxlY3QgPSAocHJvcHMgPSB7fSkgPT4ge1xuICBjb25zdCBkZWZhdWx0cyA9IHVzZURlZmF1bHRPcHRpb25zKHByb3BzLm5hbWUsIHByb3BzLmxhYmVsKTtcbiAgY29uc3QgcGFzc1Byb3BzID0ge1xuICAgIC4uLmRlZmF1bHRzLFxuICAgIHR5cGU6ICdzZWxlY3QnLFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gPFNlbGVjdEZpZWxkR3JvdXBGcm9tT3B0aW9ucyB7Li4ucGFzc1Byb3BzfSAvPjtcbn07XG5MYWJlbGVkU2VsZWN0LnByb3BUeXBlcyA9IHtcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBsYWJlbDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmVsZW1lbnRdKSxcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7U2luZ2xlQ2hlY2tib3h9IGZyb20gJy4uL2Zvcm0vU2luZ2xlQ2hlY2tib3gnO1xuaW1wb3J0IHt1c2VEZWZhdWx0T3B0aW9uc30gZnJvbSAnLi4vTGFiZWxlZEZvcm1Db21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgTGFiZWxlZFNpbmdsZUNoZWNrYm94ID0gcHJvcHMgPT4ge1xuICBjb25zdCBkZWZhdWx0cyA9IHVzZURlZmF1bHRPcHRpb25zKHByb3BzLm5hbWUsIHByb3BzLmxhYmVsKTtcbiAgY29uc3QgcGFzc1Byb3BzID0ge1xuICAgIC4uLmRlZmF1bHRzLFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gPFNpbmdsZUNoZWNrYm94IHsuLi5wYXNzUHJvcHN9IC8+O1xufTtcbkxhYmVsZWRTaW5nbGVDaGVja2JveC5wcm9wVHlwZXMgPSB7XG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbGFiZWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSksXG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1VzUGhvbmVOdW1iZXJJbnB1dH0gZnJvbSAnLi4vZm9ybS9Vc1Bob25lTnVtYmVySW5wdXQnO1xuaW1wb3J0IHt1c2VEZWZhdWx0T3B0aW9uc30gZnJvbSAnLi4vTGFiZWxlZEZvcm1Db21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgTGFiZWxlZFVzUGhvbmVOdW1iZXJJbnB1dCA9IHByb3BzID0+IHtcbiAgY29uc3QgZGVmYXVsdHMgPSB1c2VEZWZhdWx0T3B0aW9ucyhwcm9wcy5uYW1lLCBwcm9wcy5sYWJlbCk7XG4gIGNvbnN0IHBhc3NQcm9wcyA9IHtcbiAgICAuLi5kZWZhdWx0cyxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIDxVc1Bob25lTnVtYmVySW5wdXQgey4uLnBhc3NQcm9wc30gLz47XG59O1xuTGFiZWxlZFVzUGhvbmVOdW1iZXJJbnB1dC5wcm9wVHlwZXMgPSB7XG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbGFiZWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSksXG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBQYXJzZXIgZnJvbSAnQGNvZGUtZG90LW9yZy9yZWRhY3RhYmxlLW1hcmtkb3duJztcblxuaW1wb3J0IHtcbiAgZGV0YWlscyxcbiAgY2xpY2thYmxlVGV4dCxcbiAgZXhwYW5kYWJsZUltYWdlcyxcbiAgdmlzdWFsQ29kZUJsb2NrLFxuICB4bWxBc1RvcExldmVsQmxvY2ssXG59IGZyb20gJ0Bjb2RlLWRvdC1vcmcvcmVtYXJrLXBsdWdpbnMnO1xuXG5pbXBvcnQgcmVtYXJrUmVoeXBlIGZyb20gJ3JlbWFyay1yZWh5cGUnO1xuaW1wb3J0IHJlaHlwZVJhdyBmcm9tICdyZWh5cGUtcmF3JztcbmltcG9ydCByZWh5cGVTYW5pdGl6ZSBmcm9tICdyZWh5cGUtc2FuaXRpemUnO1xuaW1wb3J0IHJlaHlwZVJlYWN0IGZyb20gJ3JlaHlwZS1yZWFjdCc7XG5pbXBvcnQgZGVmYXVsdFNhbml0aXphdGlvblNjaGVtYSBmcm9tICdoYXN0LXV0aWwtc2FuaXRpemUvbGliL2dpdGh1Yi5qc29uJztcblxuaW1wb3J0IGV4dGVybmFsTGlua3MgZnJvbSAnLi9wbHVnaW5zL2V4dGVybmFsTGlua3MnO1xuXG4vKipcbiAqIEJhc2ljIGNvbXBvbmVudCBmb3IgcmVuZGVyaW5nIGEgbWFya2Rvd24gc3RyaW5nIGFzIEhUTUwsIHdpdGggc2FuaXRpemF0aW9uLlxuICogQ2FuIHNhZmVseSByZW5kZXIgbWFya2Rvd24gZXZlbiBmcm9tIHVudHJ1c3RlZCBzb3VyY2VzLCB3aXRob3V0IHBvdGVudGlhbGx5XG4gKiBleHBvc2luZyB1cyB0byBhbiBYU1MgaW5qZWN0aW9uLlxuICovXG5jbGFzcyBTYWZlTWFya2Rvd24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIG1hcmtkb3duOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgb3BlbkV4dGVybmFsTGlua3NJbk5ld1RhYjogUHJvcFR5cGVzLmJvb2wsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICAvLyBXZSBvbmx5IG9wZW4gZXh0ZXJuYWwgbGlua3MgaW4gYSBuZXcgdGFiIGlmIGl0J3MgZXhwbGljaXRseSBzcGVjaWZpZWRcbiAgICAvLyB0aGF0IHdlIGRvIHNvOyB0aGlzIGlzIGFic29sdXRlbHkgbm90IHNvbWV0aGluZyB3ZSB3YW50IHRvIGRvIGFzIGFcbiAgICAvLyBnZW5lcmFsIHByYWN0aWNlLCBidXQgdW5mb3J0dW5hdGVseSB0aGVyZSBhcmUgc29tZSBzaXR1YXRpb25zIGluIHdoaWNoXG4gICAgLy8gaXQgaXMgY3VycmVudGx5IGEgcmVxdWlyZW1lbnQuXG4gICAgY29uc3QgcGFyc2VyID0gdGhpcy5wcm9wcy5vcGVuRXh0ZXJuYWxMaW5rc0luTmV3VGFiXG4gICAgICA/IG1hcmtkb3duVG9SZWFjdEV4dGVybmFsTGlua3NcbiAgICAgIDogbWFya2Rvd25Ub1JlYWN0O1xuXG4gICAgY29uc3QgcmVuZGVyZWQgPSBwYXJzZXIucHJvY2Vzc1N5bmModGhpcy5wcm9wcy5tYXJrZG93bikuY29udGVudHM7XG5cbiAgICBjb25zdCBtYXJrZG93blByb3BzID0ge307XG4gICAgaWYgKHRoaXMucHJvcHMuY2xhc3NOYW1lKSB7XG4gICAgICBtYXJrZG93blByb3BzLmNsYXNzTmFtZSA9IHRoaXMucHJvcHMuY2xhc3NOYW1lO1xuICAgIH1cbiAgICAvLyByZWh5cGUtcmVhY3Qgd2lsbCBvbmx5IHdyYXAgdGhlIGNvbXBpbGVkIG1hcmtkb3duIGluIGEgPGRpdj4gdGFnXG4gICAgLy8gaWYgaXQgbmVlZHMgdG8gKGllLCBpZiB0aGVyZSB3b3VsZCBvdGhlcndpc2UgYmUgbXVsdGlwbGUgZWxlbWVudHNcbiAgICAvLyByZXR1cm5lZCkgb3Igd2UncmUgYXNzaWduaW5nIHByb3BzLiBXZSBwcmVmZXIgY29uc2lzdGVuY3kgb3ZlciBmbGV4aWJpbGl0eSxcbiAgICAvLyBzbyBoZXJlIHdlIHdyYXAgdGhlIHJlc3VsdCBpbiBhIGRpdiBpZiBpdCB3YXNuJ3QgYWxyZWFkeVxuICAgIGlmIChcbiAgICAgIHJlbmRlcmVkICYmXG4gICAgICByZW5kZXJlZC50eXBlID09PSAnZGl2JyAmJlxuICAgICAgIU9iamVjdC5rZXlzKG1hcmtkb3duUHJvcHMpLmxlbmd0aFxuICAgICkge1xuICAgICAgcmV0dXJuIHJlbmRlcmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gPGRpdiB7Li4ubWFya2Rvd25Qcm9wc30+e3JlbmRlcmVkfTwvZGl2PjtcbiAgICB9XG4gIH1cbn1cblxuLy8gY3JlYXRlIGN1c3RvbSBzYW5pdGl6YXRpb24gc2NoZW1hIGFzIHBlclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3N5bnRheC10cmVlL2hhc3QtdXRpbC1zYW5pdGl6ZSNzY2hlbWFcbi8vIHRvIHN1cHBvcnQgb3VyIGN1c3RvbSBzeW50YXhlc1xuY29uc3Qgc2NoZW1hID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdFNhbml0aXphdGlvblNjaGVtYSk7XG5cbi8vIFdlIHVzZSBhIF9sb3RfIG9mIGltYWdlIGZvcm1hdHRpbmcgc3R1ZmYgaW4gb3VyXG4vLyBpbnN0cnVjdGlvbnMsIHBhcnRpY3VsYXJseSBpbiBDU1BcbnNjaGVtYS5hdHRyaWJ1dGVzLmltZy5wdXNoKCdoZWlnaHQnLCAnd2lkdGgnKTtcblxuLy8gQWRkIHN1cHBvcnQgZm9yIGV4cGFuZGFibGVJbWFnZXNcbnNjaGVtYS50YWdOYW1lcy5wdXNoKCdzcGFuJyk7XG5zY2hlbWEuYXR0cmlidXRlcy5zcGFuID0gWydkYXRhVXJsJywgJ2NsYXNzTmFtZSddO1xuXG4vLyBBZGQgc3VwcG9ydCBmb3IgaW5saW5lIHN0eWxlcyAoZ3Jvc3MpXG4vLyBUT0RPIHJlcGxhY2UgYWxsIGlubGluZSBzdHlsZXMgaW4gb3VyIGN1cnJpY3VsdW0gY29udGVudCB3aXRoXG4vLyBzZW1hbnRpY2FsbHktc2lnbmlmaWNhbnQgY29udGVudFxuc2NoZW1hLmF0dHJpYnV0ZXNbJyonXS5wdXNoKCdzdHlsZScsICdjbGFzc05hbWUnKTtcblxuLy8gQ2xpY2thYmxlVGV4dCB1c2VzIGRhdGEtaWQgb24gYSBib2xkIHRhZy5cbnNjaGVtYS5hdHRyaWJ1dGVzWydiJ10gPSBbJ2RhdGFJZCddO1xuXG4vLyBBZGQgc3VwcG9ydCBmb3IgQmxvY2tseSBYTUxcbnNjaGVtYS5jbG9iYmVyID0gW107XG5jb25zdCBibG9ja2x5VGFncyA9IFtcbiAgJ2Jsb2NrJyxcbiAgJ2Z1bmN0aW9uYWxfaW5wdXQnLFxuICAnbXV0YXRpb24nLFxuICAnbmV4dCcsXG4gICdzdGF0ZW1lbnQnLFxuICAndGl0bGUnLFxuICAnZmllbGQnLFxuICAndmFsdWUnLFxuICAneG1sJyxcbl07XG5zY2hlbWEudGFnTmFtZXMgPSBzY2hlbWEudGFnTmFtZXMuY29uY2F0KGJsb2NrbHlUYWdzKTtcbmxldCBibG9ja2x5Q29tcG9uZW50V3JhcHBlcnMgPSB7fTtcbmJsb2NrbHlUYWdzLmZvckVhY2godGFnID0+IHtcbiAgc2NoZW1hLmF0dHJpYnV0ZXNbdGFnXSA9IFsnYmxvY2tfdGV4dCcsICdpZCcsICdpbmxpbmUnLCAnbmFtZScsICd0eXBlJ107XG5cbiAgLy8gQ3JlYXRlIGEgUmVhY3QgY29tcG9uZW50IHRvIHdyYXAgZWFjaCBCbG9ja2x5IHRhZy4gU2luY2UgdGhlc2UgZWxlbWVudHMgdWx0aW1hdGVseVxuICAvLyByZW5kZXIgYXMgUmVhY3QgY29tcG9uZW50cywgY3JlYXRpbmcgYSB3cmFwcGVyIG1ha2VzIHRoZW0gdmFsaWQgKHdoZXJlYXMgPHhtbD5cbiAgLy8gaXMgbm90IGEgdmFsaWQgUmVhY3QgdGFnKS5cbiAgYmxvY2tseUNvbXBvbmVudFdyYXBwZXJzW3RhZ10gPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICBjb25zdCBCbG9ja2x5RWxlbWVudCA9IHRhZztcbiAgICAvLyBUaGUgXCJpc1wiIGF0dHJpYnV0ZSBwcmV2ZW50cyBSZWFjdCBmcm9tIHdhcm5pbmcgYWJvdXQgdW5yZWNvZ25pemVkIHRhZ3M6XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xMTE4NCNpc3N1ZWNvbW1lbnQtMzM1OTQyNDM5XG4gICAgcmV0dXJuIDxCbG9ja2x5RWxlbWVudCBpcz17dGFnfSB7Li4ucHJvcHN9IC8+O1xuICB9O1xufSk7XG5cbmNvbnN0IG1hcmtkb3duVG9SZWFjdCA9IFBhcnNlci5jcmVhdGUoKVxuICAuZ2V0UGFyc2VyKClcbiAgLy8gaW5jbHVkZSBjdXN0b20gcGx1Z2luc1xuICAudXNlKFtcbiAgICBjbGlja2FibGVUZXh0LFxuICAgIGV4cGFuZGFibGVJbWFnZXMsXG4gICAgdmlzdWFsQ29kZUJsb2NrLFxuICAgIHhtbEFzVG9wTGV2ZWxCbG9jayxcbiAgICBkZXRhaWxzLFxuICBdKVxuICAvLyBjb252ZXJ0IG1hcmtkb3duIHRvIGFuIEhUTUwgQWJzdHJhY3QgU3ludGF4IFRyZWUgKEhBU1QpXG4gIC51c2UocmVtYXJrUmVoeXBlLCB7XG4gICAgLy8gaW5jbHVkZSBhbnkgcmF3IEhUTUwgaW4gdGhlIG1hcmtkb3duIGFzIHJhdyBIVE1MIG5vZGVzIGluIHRoZSBIQVNUXG4gICAgYWxsb3dEYW5nZXJvdXNIVE1MOiB0cnVlLFxuICB9KVxuICAvLyBwYXJzZSB0aGUgcmF3IEhUTUwgbm9kZXMgaW4gdGhlIEhBU1QgdG8gYWN0dWFsIEhBU1Qgbm9kZXNcbiAgLnVzZShyZWh5cGVSYXcpXG4gIC8vIHNhbml0aXplIHRoZSBIQVNUXG4gIC51c2UocmVoeXBlU2FuaXRpemUsIHNjaGVtYSlcbiAgLy8gY29udmVydCB0aGUgSEFTVCB0byBSZWFjdFxuICAudXNlKHJlaHlwZVJlYWN0LCB7XG4gICAgY3JlYXRlRWxlbWVudDogUmVhY3QuY3JlYXRlRWxlbWVudCxcbiAgICAvLyBVc2UgUmVhY3QgY29tcG9uZW50IHdyYXBwZXJzIGZvciBCbG9ja2x5IFhNTCBlbGVtZW50cyB0byBwcmV2ZW50XG4gICAgLy8gUmVhY3QgZnJvbSB3YXJuaW5nIHVzIGFib3V0IGludmFsaWQgY29tcG9uZW50cy5cbiAgICBjb21wb25lbnRzOiBibG9ja2x5Q29tcG9uZW50V3JhcHBlcnMsXG4gIH0pO1xuXG5jb25zdCBtYXJrZG93blRvUmVhY3RFeHRlcm5hbExpbmtzID0gbWFya2Rvd25Ub1JlYWN0KCkudXNlKGV4dGVybmFsTGlua3MsIHtcbiAgbGlua3M6ICdhbGwnLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFNhZmVNYXJrZG93bjtcbiIsIi8qKlxuICogT3BlbiBleHRlcm5hbCBsaW5rcyBpbiBhIG5ldyB0YWIuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGV4dGVybmFsTGlua3Mob3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IFBhcnNlciA9IHRoaXMuUGFyc2VyO1xuICBjb25zdCB0b2tlbml6ZXJzID0gUGFyc2VyLnByb3RvdHlwZS5pbmxpbmVUb2tlbml6ZXJzO1xuICBjb25zdCBvcmlnaW5hbCA9IHRva2VuaXplcnMubGluaztcbiAgY29uc3QgYWxsID0gb3B0aW9ucy5saW5rcyA9PT0gJ2FsbCc7XG5cbiAgdG9rZW5pemVycy5saW5rID0gZnVuY3Rpb24gKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICAgIGNvbnN0IGxpbmsgPSBvcmlnaW5hbC5jYWxsKHRoaXMsIGVhdCwgdmFsdWUsIHNpbGVudCk7XG4gICAgaWYgKGxpbmsgJiYgbGluay50eXBlID09PSAnbGluaycgJiYgKGFsbCB8fCBpc0V4dGVybmFsTGluayhsaW5rLnVybCkpKSB7XG4gICAgICBsaW5rLmRhdGEgPSBsaW5rLmRhdGEgfHwge307XG4gICAgICBsaW5rLmRhdGEuaFByb3BlcnRpZXMgPSBsaW5rLmRhdGEuaFByb3BlcnRpZXMgfHwge307XG5cbiAgICAgIGNvbnN0IHByb3BzID0gbGluay5kYXRhLmhQcm9wZXJ0aWVzO1xuICAgICAgcHJvcHMudGFyZ2V0ID0gcHJvcHMudGFyZ2V0IHx8ICdfYmxhbmsnO1xuICAgICAgcHJvcHMucmVsID0gJ25vcmVmZXJyZXIgbm9vcGVuZXInO1xuICAgIH1cblxuICAgIHJldHVybiBsaW5rO1xuICB9O1xuICB0b2tlbml6ZXJzLmxpbmsubG9jYXRvciA9IG9yaWdpbmFsLmxvY2F0b3I7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0V4dGVybmFsTGluayh1cmwpIHtcbiAgcmV0dXJuICEvaHR0cHM/OlxcL1xcLyhbXi5dK1xcLikqY29kZS5vcmcoOlswLTldKyk/XFwvLy50ZXN0KGZ1bGx5UXVhbGlmaWVkKHVybCkpO1xufVxuXG5sZXQgYTtcbmZ1bmN0aW9uIGZ1bGx5UXVhbGlmaWVkKHBhdGgpIHtcbiAgYSA9IGEgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICBhLmhyZWYgPSBwYXRoO1xuICByZXR1cm4gYS5ocmVmO1xufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQge0xhYmVsc0NvbnRleHR9IGZyb20gJy4vTGFiZWxlZEZvcm1Db21wb25lbnQnO1xuaW1wb3J0IHtcbiAgTGFiZWxlZENoZWNrQm94ZXMsXG4gIExhYmVsZWRDaGVja0JveGVzV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzLFxuICBMYWJlbGVkRHluYW1pY0NoZWNrQm94ZXMsXG4gIExhYmVsZWREeW5hbWljQ2hlY2tCb3hlc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkcyxcbn0gZnJvbSAnLi9sYWJlbGVkL0xhYmVsZWRDaGVja0JveGVzJztcbmltcG9ydCB7TGFiZWxlZExhcmdlSW5wdXQsIExhYmVsZWRJbnB1dH0gZnJvbSAnLi9sYWJlbGVkL0xhYmVsZWRJbnB1dCc7XG5pbXBvcnQge1xuICBMYWJlbGVkUmFkaW9CdXR0b25zLFxuICBMYWJlbGVkUmFkaW9CdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzLFxuICBMYWJlbGVkRHluYW1pY1JhZGlvQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkcyxcbn0gZnJvbSAnLi9sYWJlbGVkL0xhYmVsZWRSYWRpb0J1dHRvbnMnO1xuaW1wb3J0IHtMYWJlbGVkU2VsZWN0fSBmcm9tICcuL2xhYmVsZWQvTGFiZWxlZFNlbGVjdCc7XG5pbXBvcnQge0xhYmVsZWRTaW5nbGVDaGVja2JveH0gZnJvbSAnLi9sYWJlbGVkL0xhYmVsZWRTaW5nbGVDaGVja2JveCc7XG5pbXBvcnQge0xhYmVsZWRVc1Bob25lTnVtYmVySW5wdXR9IGZyb20gJy4vbGFiZWxlZC9MYWJlbGVkVXNQaG9uZU51bWJlcklucHV0JztcbmltcG9ydCB7Rm9ybUNvbnRleHR9IGZyb20gJy4vRm9ybUNvbXBvbmVudCc7XG5pbXBvcnQgcmVhY3RCb290c3RyYXBTdG9yeURlY29yYXRvciBmcm9tICcuLi9yZWFjdEJvb3RzdHJhcFN0b3J5RGVjb3JhdG9yJztcbmltcG9ydCB7YWN0aW9ufSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnO1xuXG5jb25zdCBPVEhFUiA9ICdPdGhlciAocGxlYXNlIHNwZWNpZnkpOic7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBMYWJlbHNDb250ZXh0LFxuICBkZWNvcmF0b3JzOiBbcmVhY3RCb290c3RyYXBTdG9yeURlY29yYXRvcl0sXG59O1xuXG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XG4gIGVycm9yczogW10sXG4gIGVycm9yTWVzc2FnZXM6IHt9LFxuICBkYXRhOiB7fSxcbiAgb3B0aW9uczoge30sXG4gIG9uQ2hhbmdlOiBhY3Rpb24oJ29uQ2hhbmdlJyksXG59O1xuXG5jb25zdCBDb250ZXh0ID0gKHtjaGlsZHJlbiwgLi4ucHJvcHN9KSA9PiB7XG4gIGNvbnN0IHtuYW1lLCBsYWJlbH0gPSBwcm9wcztcbiAgcmV0dXJuIChcbiAgICA8Rm9ybUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3suLi5kZWZhdWx0UHJvcHMsIC4uLnByb3BzfX0+XG4gICAgICA8TGFiZWxzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17e1tuYW1lXTogbGFiZWx9fT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9MYWJlbHNDb250ZXh0LlByb3ZpZGVyPlxuICAgIDwvRm9ybUNvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuQ29udGV4dC5wcm9wVHlwZXMgPSB7XG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbGFiZWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxufTtcblxuY29uc3QgVGVtcGxhdGUgPSBhcmdzID0+IHtcbiAgY29uc3Qge2NvbnRleHQsIGNoaWxkcmVufSA9IGFyZ3M7XG5cbiAgcmV0dXJuIDxDb250ZXh0IHsuLi5jb250ZXh0fT57Y2hpbGRyZW59PC9Db250ZXh0Pjtcbn07XG5cbmV4cG9ydCBjb25zdCBTaW5nbGVDaGVja2JveCA9IFRlbXBsYXRlLmJpbmQoe30pO1xuU2luZ2xlQ2hlY2tib3guYXJncyA9IHtcbiAgY29udGV4dDoge1xuICAgIG5hbWU6ICdzaW5nbGVDaGVja2JveCcsXG4gICAgbGFiZWw6ICdUaGlzIGlzIGEgc2luZ2xlIGNoZWNrYm94JyxcbiAgfSxcbiAgY2hpbGRyZW46IDxMYWJlbGVkU2luZ2xlQ2hlY2tib3ggbmFtZT1cInNpbmdsZUNoZWNrYm94XCIgLz4sXG59O1xuXG5leHBvcnQgY29uc3QgQ2hlY2tib3hlcyA9IFRlbXBsYXRlLmJpbmQoe30pO1xuQ2hlY2tib3hlcy5hcmdzID0ge1xuICBjb250ZXh0OiB7XG4gICAgbmFtZTogJ2NoZWNrQm94ZXMnLFxuICAgIGxhYmVsOiAnU2VsZWN0IG9wdGlvbnMnLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIGNoZWNrQm94ZXM6IFsnb3B0aW9uIDEnLCAnb3B0aW9uIDInLCAnb3B0aW9uIDMnXSxcbiAgICB9LFxuICB9LFxuICBjaGlsZHJlbjogPExhYmVsZWRDaGVja0JveGVzIG5hbWU9XCJjaGVja0JveGVzXCIgLz4sXG59O1xuXG5leHBvcnQgY29uc3QgQ2hlY2tib3hlc1dpdGhBZGRpdGlvbmFsRmllbGRzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5DaGVja2JveGVzV2l0aEFkZGl0aW9uYWxGaWVsZHMuYXJncyA9IHtcbiAgY29udGV4dDoge1xuICAgIG5hbWU6ICdjaGVja0JveGVzV2l0aE90aGVyJyxcbiAgICBsYWJlbDogJ1NlbGVjdCBvcHRpb25zIGFuZCBhZGQgdGV4dCcsXG4gICAgb3B0aW9uczoge1xuICAgICAgY2hlY2tCb3hlc1dpdGhPdGhlcjogWydvcHRpb24gMScsICdvcHRpb24gMicsIE9USEVSXSxcbiAgICB9LFxuICB9LFxuICBjaGlsZHJlbjogKFxuICAgIDxMYWJlbGVkQ2hlY2tCb3hlc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkc1xuICAgICAgbmFtZT1cImNoZWNrQm94ZXNXaXRoT3RoZXJcIlxuICAgICAgdGV4dEZpZWxkTWFwPXt7XG4gICAgICAgIFtPVEhFUl06ICdvdGhlcicsXG4gICAgICB9fVxuICAgIC8+XG4gICksXG59O1xuXG5leHBvcnQgY29uc3QgUmFkaW9CdXR0b25zID0gVGVtcGxhdGUuYmluZCh7fSk7XG5SYWRpb0J1dHRvbnMuYXJncyA9IHtcbiAgY29udGV4dDoge1xuICAgIG5hbWU6ICdyYWRpb0J1dHRvbnMnLFxuICAgIGxhYmVsOiAnU2VsZWN0IGFuIG9wdGlvbicsXG4gICAgb3B0aW9uczoge1xuICAgICAgcmFkaW9CdXR0b25zOiBbJ29wdGlvbiAxJywgJ29wdGlvbiAyJywgJ29wdGlvbiAzJ10sXG4gICAgfSxcbiAgfSxcbiAgY2hpbGRyZW46IDxMYWJlbGVkUmFkaW9CdXR0b25zIG5hbWU9XCJyYWRpb0J1dHRvbnNcIiAvPixcbn07XG5cbmV4cG9ydCBjb25zdCBSYWRpb0J1dHRvbnNXaXRoQWRkaXRpb25hbEZpZWxkcyA9IFRlbXBsYXRlLmJpbmQoe30pO1xuUmFkaW9CdXR0b25zV2l0aEFkZGl0aW9uYWxGaWVsZHMuYXJncyA9IHtcbiAgY29udGV4dDoge1xuICAgIG5hbWU6ICdyYWRpb0J1dHRvbnNXaXRoT3RoZXInLFxuICAgIGxhYmVsOiAnU2VsZWN0IGFuIG9wdGlvbiBhbmQgYWRkIHRleHQnLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIHJhZGlvQnV0dG9uc1dpdGhPdGhlcjogWydvcHRpb24gMScsICdvcHRpb24gMicsIE9USEVSXSxcbiAgICB9LFxuICB9LFxuICBjaGlsZHJlbjogKFxuICAgIDxMYWJlbGVkUmFkaW9CdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzXG4gICAgICBuYW1lPVwicmFkaW9CdXR0b25zV2l0aE90aGVyXCJcbiAgICAgIHRleHRGaWVsZE1hcD17e1xuICAgICAgICBbT1RIRVJdOiAnb3RoZXInLFxuICAgICAgfX1cbiAgICAvPlxuICApLFxufTtcblxuZXhwb3J0IGNvbnN0IER5bmFtaWNSYWRpb0J1dHRvbnNXaXRoQWRkaXRpb25hbEZpZWxkcyA9IFRlbXBsYXRlLmJpbmQoe30pO1xuRHluYW1pY1JhZGlvQnV0dG9uc1dpdGhBZGRpdGlvbmFsRmllbGRzLmFyZ3MgPSB7XG4gIGNvbnRleHQ6IHtcbiAgICBuYW1lOiAnZHluYW1pY1JhZGlvQnV0dG9uc1dpdGhPdGhlcicsXG4gICAgbGFiZWw6ICdTZWxlY3QgYSBkeW5hbWljIG9wdGlvbiBhbmQgYWRkIHRleHQnLFxuICB9LFxuICBjaGlsZHJlbjogKFxuICAgIDxMYWJlbGVkRHluYW1pY1JhZGlvQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkc1xuICAgICAgbmFtZT1cImR5bmFtaWNSYWRpb0J1dHRvbnNXaXRoT3RoZXJcIlxuICAgICAgb3B0aW9ucz17WzEsIDIsIDNdLm1hcChuID0+IGBEeW5hbWljIG9wdGlvbiAjJHtufWApLmNvbmNhdChbT1RIRVJdKX1cbiAgICAgIHRleHRGaWVsZE1hcD17e1tPVEhFUl06ICdvdGhlcid9fVxuICAgIC8+XG4gICksXG59O1xuXG5leHBvcnQgY29uc3QgRHluYW1pY0NoZWNrYm94ZXMgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkR5bmFtaWNDaGVja2JveGVzLmFyZ3MgPSB7XG4gIGNvbnRleHQ6IHtcbiAgICBuYW1lOiAnZHluYW1pY0NoZWNrQm94ZXMnLFxuICAgIGxhYmVsOiAnU2VsZWN0IGFsbCBkeW5hbWljIG9wdGlvbnMgdGhhdCBhcHBseScsXG4gIH0sXG4gIGNoaWxkcmVuOiAoXG4gICAgPExhYmVsZWREeW5hbWljQ2hlY2tCb3hlc1xuICAgICAgbmFtZT1cImR5bmFtaWNDaGVja0JveGVzXCJcbiAgICAgIG9wdGlvbnM9e1sxLCAyLCAzXS5tYXAobiA9PiBgRHluYW1pYyBvcHRpb24gIyR7bn1gKX1cbiAgICAvPlxuICApLFxufTtcblxuZXhwb3J0IGNvbnN0IER5bmFtaWNDaGVja2JveGVzV2l0aEFkZGl0aW9uYWxGaWVsZHMgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkR5bmFtaWNDaGVja2JveGVzV2l0aEFkZGl0aW9uYWxGaWVsZHMuYXJncyA9IHtcbiAgY29udGV4dDoge1xuICAgIG5hbWU6ICdkeW5hbWljQ2hlY2tib3hlc1dpdGhPdGhlcicsXG4gICAgbGFiZWw6ICdTZWxlY3QgYSBkeW5hbWljIG9wdGlvbiBhbmQgYWRkIHRleHQnLFxuICB9LFxuICBjaGlsZHJlbjogKFxuICAgIDxMYWJlbGVkRHluYW1pY0NoZWNrQm94ZXNXaXRoQWRkaXRpb25hbFRleHRGaWVsZHNcbiAgICAgIG5hbWU9XCJkeW5hbWljQ2hlY2tib3hlc1dpdGhPdGhlclwiXG4gICAgICBvcHRpb25zPXtbMSwgMiwgM10ubWFwKG4gPT4gYER5bmFtaWMgb3B0aW9uICMke259YCkuY29uY2F0KFtPVEhFUl0pfVxuICAgICAgdGV4dEZpZWxkTWFwPXt7W09USEVSXTogJ290aGVyJ319XG4gICAgLz5cbiAgKSxcbn07XG5cbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcblNlbGVjdC5hcmdzID0ge1xuICBjb250ZXh0OiB7XG4gICAgbmFtZTogJ3NlbGVjdCcsXG4gICAgbGFiZWw6ICdTZWxlY3QgYW4gb3B0aW9uJyxcbiAgICBvcHRpb25zOiB7XG4gICAgICBzZWxlY3Q6IFsnb3B0aW9uIDEnLCAnb3B0aW9uIDInLCAnb3B0aW9uIDMnXSxcbiAgICB9LFxuICB9LFxuICBjaGlsZHJlbjogPExhYmVsZWRTZWxlY3QgbmFtZT1cInNlbGVjdFwiIHBsYWNlaG9sZGVyPVwiU2VsZWN0IGFuIG9wdGlvblwiIC8+LFxufTtcblxuZXhwb3J0IGNvbnN0IElucHV0ID0gVGVtcGxhdGUuYmluZCh7fSk7XG5JbnB1dC5hcmdzID0ge1xuICBjb250ZXh0OiB7XG4gICAgbmFtZTogJ2lucHV0JyxcbiAgICBsYWJlbDogJ0VudGVyIHNvbWUgdGV4dCcsXG4gIH0sXG4gIGNoaWxkcmVuOiA8TGFiZWxlZElucHV0IG5hbWU9XCJpbnB1dFwiIC8+LFxufTtcblxuZXhwb3J0IGNvbnN0IExhcmdlSW5wdXQgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkxhcmdlSW5wdXQuYXJncyA9IHtcbiAgY29udGV4dDoge1xuICAgIG5hbWU6ICdsYXJnZUlucHV0JyxcbiAgICBsYWJlbDogJ0VudGVyIHNvbWUgbG9uZ2VyIHRleHQnLFxuICB9LFxuICBjaGlsZHJlbjogPExhYmVsZWRMYXJnZUlucHV0IG5hbWU9XCJsYXJnZUlucHV0XCIgLz4sXG59O1xuXG5leHBvcnQgY29uc3QgVXNQaG9uZU51bWJlciA9IFRlbXBsYXRlLmJpbmQoe30pO1xuVXNQaG9uZU51bWJlci5hcmdzID0ge1xuICBjb250ZXh0OiB7XG4gICAgbmFtZTogJ3VzUGhvbmVOdW1iZXInLFxuICAgIGxhYmVsOiAnRW50ZXIgYSBwaG9uZSBudW1iZXInLFxuICB9LFxuICBjaGlsZHJlbjogPExhYmVsZWRVc1Bob25lTnVtYmVySW5wdXQgbmFtZT1cInVzUGhvbmVOdW1iZXJcIiAvPixcbn07XG4iXSwibmFtZXMiOlsiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJyZXF1aXJlIiwiZXhwb3J0cyIsIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsImdldFZhbGlkYXRpb25TdGF0ZSIsIm5hbWUiLCJlcnJvcnMiLCJpbmNsdWRlcyIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiZSIsInIiLCJfdHlwZW9mIiwidCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsIl9TYWZlTWFya2Rvd24iLCJXZWFrTWFwIiwiTGFiZWxzQ29udGV4dCIsInVzZUxhYmVsRm9yIiwibGFiZWxzIiwidXNlQ29udGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJvcGVuRXh0ZXJuYWxMaW5rc0luTmV3VGFiIiwibWFya2Rvd24iLCJjb25zb2xlIiwid2FybiIsImNvbmNhdCIsInVzZURlZmF1bHRPcHRpb25zIiwibGFiZWwiLCJjb250cm9sV2lkdGgiLCJtZCIsInJlcXVpcmVkIiwiX3Byb3BUeXBlcyIsIl9CdXR0b25MaXN0IiwiX0Zvcm1Db21wb25lbnQiLCJfZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiX3RvUHJpbWl0aXZlIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJwcm90b3R5cGUiLCJhcHBseSIsIkJ1dHRvbnMiLCJwcm9wcyIsIl91c2VDb250ZXh0IiwiRm9ybUNvbnRleHQiLCJvbkNoYW5nZSIsImRhdGEiLCJfcHJvcHMkcmVxdWlyZWQiLCJncm91cE5hbWUiLCJzZWxlY3RlZEl0ZW1zIiwidmFsaWRhdGlvblN0YXRlIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsImJvb2wiLCJCdXR0b25zRnJvbU9wdGlvbnMiLCJvcHRpb25zIiwiYW5zd2VycyIsIkJ1dHRvbnNXaXRoQWRkaXRpb25hbFRleHRGaWVsZHMiLCJfdXNlQ29udGV4dDMiLCJ0ZXh0RmllbGRNYXAiLCJtYXAiLCJhbnN3ZXIiLCJ0ZXh0RmllbGROYW1lIiwiYW5zd2VyVGV4dCIsImlucHV0VmFsdWUiLCJvbklucHV0Q2hhbmdlIiwibmV3VmFsdWUiLCJhcnJheU9mIiwib2JqZWN0IiwiQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkc0Zyb21PcHRpb25zIiwiY29tcG9uZW50T3B0aW9ucyIsIl9GaWVsZEdyb3VwIiwiRmllbGRHcm91cCIsImVycm9yTWVzc2FnZXMiLCJpZCIsImVycm9yTWVzc2FnZSIsIl91dGlscyIsIlNlbGVjdEZpZWxkR3JvdXAiLCJyZW5kZXJlZE9wdGlvbnMiLCJwbGFjZWhvbGRlciIsIkFycmF5IiwiaXNBcnJheSIsIl91dGlscyRub3JtYWxpemVBbnN3ZSIsInV0aWxzIiwibm9ybWFsaXplQW5zd2VyIiwiYW5zd2VyVmFsdWUiLCJrZXlzIiwiY29tcG9uZW50Q2xhc3MiLCJTZWxlY3RGaWVsZEdyb3VwRnJvbU9wdGlvbnMiLCJfU2luZ2xlQ2hlY2tib3giLCJTaW5nbGVDaGVja2JveCIsIl9Vc1Bob25lTnVtYmVySW5wdXQiLCJVc1Bob25lTnVtYmVySW5wdXQiLCJfQnV0dG9ucyIsIl9MYWJlbGVkRm9ybUNvbXBvbmVudCIsIm8iLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwib3duS2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImZpbHRlciIsInB1c2giLCJfb2JqZWN0U3ByZWFkIiwiZm9yRWFjaCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiTGFiZWxlZENoZWNrQm94ZXMiLCJwYXNzUHJvcHMiLCJ0eXBlIiwib25lT2ZUeXBlIiwiZWxlbWVudCIsIkxhYmVsZWRDaGVja0JveGVzV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzIiwiTGFiZWxlZER5bmFtaWNDaGVja0JveGVzIiwiYXJyYXkiLCJMYWJlbGVkRHluYW1pY0NoZWNrQm94ZXNXaXRoQWRkaXRpb25hbFRleHRGaWVsZHMiLCJMYWJlbGVkSW5wdXQiLCJMYWJlbGVkTnVtYmVySW5wdXQiLCJMYWJlbGVkTGFyZ2VJbnB1dCIsInJvd3MiLCJtYXhMZW5ndGgiLCJMYWJlbGVkUmFkaW9CdXR0b25zIiwiTGFiZWxlZFJhZGlvQnV0dG9uc1dpdGhBZGRpdGlvbmFsVGV4dEZpZWxkcyIsIkxhYmVsZWREeW5hbWljUmFkaW9CdXR0b25zV2l0aEFkZGl0aW9uYWxUZXh0RmllbGRzIiwiX1NlbGVjdEZpZWxkR3JvdXAiLCJMYWJlbGVkU2VsZWN0IiwidW5kZWZpbmVkIiwiTGFiZWxlZFNpbmdsZUNoZWNrYm94IiwiTGFiZWxlZFVzUGhvbmVOdW1iZXJJbnB1dCIsIl9yZWRhY3RhYmxlTWFya2Rvd24iLCJfcmVtYXJrUGx1Z2lucyIsIl9yZW1hcmtSZWh5cGUiLCJfcmVoeXBlUmF3IiwiX3JlaHlwZVNhbml0aXplIiwiX3JlaHlwZVJlYWN0IiwiX2dpdGh1YiIsIl9leHRlcm5hbExpbmtzIiwiX3NldFByb3RvdHlwZU9mIiwicCIsInNldFByb3RvdHlwZU9mIiwiU2FmZU1hcmtkb3duIiwiX1JlYWN0JENvbXBvbmVudCIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwicmVuZGVyIiwicmVuZGVyZWQiLCJ0aGlzIiwibWFya2Rvd25Ub1JlYWN0RXh0ZXJuYWxMaW5rcyIsIm1hcmtkb3duVG9SZWFjdCIsInByb2Nlc3NTeW5jIiwiY29udGVudHMiLCJtYXJrZG93blByb3BzIiwiQ29tcG9uZW50Iiwic2NoZW1hIiwiZGVmYXVsdFNhbml0aXphdGlvblNjaGVtYSIsImF0dHJpYnV0ZXMiLCJpbWciLCJ0YWdOYW1lcyIsInNwYW4iLCJjbG9iYmVyIiwiYmxvY2tseVRhZ3MiLCJibG9ja2x5Q29tcG9uZW50V3JhcHBlcnMiLCJ0YWciLCJCbG9ja2x5RWxlbWVudCIsImlzIiwiUGFyc2VyIiwiZ2V0UGFyc2VyIiwidXNlIiwiY2xpY2thYmxlVGV4dCIsImV4cGFuZGFibGVJbWFnZXMiLCJ2aXN1YWxDb2RlQmxvY2siLCJ4bWxBc1RvcExldmVsQmxvY2siLCJkZXRhaWxzIiwicmVtYXJrUmVoeXBlIiwiYWxsb3dEYW5nZXJvdXNIVE1MIiwicmVoeXBlUmF3IiwicmVoeXBlU2FuaXRpemUiLCJyZWh5cGVSZWFjdCIsImNvbXBvbmVudHMiLCJleHRlcm5hbExpbmtzIiwibGlua3MiLCJtb2R1bGUiLCJpc0V4dGVybmFsTGluayIsInVybCIsInRlc3QiLCJmdWxseVF1YWxpZmllZCIsInBhdGgiLCJkb2N1bWVudCIsImhyZWYiLCJ0b2tlbml6ZXJzIiwiaW5saW5lVG9rZW5pemVycyIsIm9yaWdpbmFsIiwibGluayIsImFsbCIsImVhdCIsInNpbGVudCIsImhQcm9wZXJ0aWVzIiwicmVsIiwibG9jYXRvciIsIl9MYWJlbGVkQ2hlY2tCb3hlcyIsIl9MYWJlbGVkSW5wdXQiLCJfTGFiZWxlZFJhZGlvQnV0dG9ucyIsIl9MYWJlbGVkU2VsZWN0IiwiX0xhYmVsZWRTaW5nbGVDaGVja2JveCIsIl9MYWJlbGVkVXNQaG9uZU51bWJlcklucHV0IiwiX3JlYWN0Qm9vdHN0cmFwU3RvcnlEZWNvcmF0b3IiLCJfYWRkb25BY3Rpb25zIiwiX2V4Y2x1ZGVkIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXhjbHVkZWQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsInNvdXJjZUtleXMiLCJpbmRleE9mIiwic291cmNlU3ltYm9sS2V5cyIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiT1RIRVIiLCJkZWZhdWx0UHJvcHMiLCJjb21wb25lbnQiLCJkZWNvcmF0b3JzIiwicmVhY3RCb290c3RyYXBTdG9yeURlY29yYXRvciIsImFjdGlvbiIsIkNvbnRleHQiLCJfcmVmIiwiY2hpbGRyZW4iLCJQcm92aWRlciIsIm5vZGUiLCJUZW1wbGF0ZSIsImFyZ3MiLCJjb250ZXh0IiwiY2hlY2tCb3hlcyIsImNoZWNrQm94ZXNXaXRoT3RoZXIiLCJyYWRpb0J1dHRvbnMiLCJyYWRpb0J1dHRvbnNXaXRoT3RoZXIiLCJzZWxlY3QiXSwic291cmNlUm9vdCI6IiJ9