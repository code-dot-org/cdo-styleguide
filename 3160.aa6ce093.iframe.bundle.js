"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3160],{"./src/redux/unitSelectionRedux.js":(__unused_webpack_module,exports)=>{function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(exports,"__esModule",{value:!0}),exports.SET_SCRIPT=exports.SET_COURSES=void 0,exports.default=function unitSelection(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_COURSES){var firstCourse=action.coursesWithProgress[0],firstUnit=firstCourse?firstCourse.units[0]:null;return _objectSpread(_objectSpread({},state),{},{coursesWithProgress:action.coursesWithProgress,scriptId:null===state.scriptId?null==firstUnit?void 0:firstUnit.id:state.scriptId})}if(action.type===SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{scriptId:action.scriptId});return state},exports.setScriptId=exports.setCoursesWithProgress=exports.getSelectedScriptName=exports.getSelectedScriptFriendlyName=exports.getSelectedScriptDescription=exports.doesCurrentCourseUseFeedback=void 0;var SET_SCRIPT="unitSelection/SET_SCRIPT";exports.SET_SCRIPT=SET_SCRIPT;var SET_COURSES="unitSelection/SET_COURSES";exports.SET_COURSES=SET_COURSES;exports.setScriptId=function setScriptId(scriptId){return{type:SET_SCRIPT,scriptId}};exports.setCoursesWithProgress=function setCoursesWithProgress(coursesWithProgress){return{type:SET_COURSES,coursesWithProgress}};var getSelectedUnit=function getSelectedUnit(state){var unit,scriptId=state.unitSelection.scriptId;return scriptId?(state.unitSelection.coursesWithProgress.forEach((function(course){var tempUnit=course.units.find((function(unit){return scriptId===unit.id}));tempUnit&&(unit=tempUnit)})),unit):null};exports.getSelectedScriptName=function getSelectedScriptName(state){return getSelectedUnit(state)?getSelectedUnit(state).key:null};exports.getSelectedScriptFriendlyName=function getSelectedScriptFriendlyName(state){return getSelectedUnit(state)?getSelectedUnit(state).name:null};exports.getSelectedScriptDescription=function getSelectedScriptDescription(state){return getSelectedUnit(state)?getSelectedUnit(state).description:null};exports.doesCurrentCourseUseFeedback=function doesCurrentCourseUseFeedback(state){var _getSelectedUnit;return!(null===(_getSelectedUnit=getSelectedUnit(state))||void 0===_getSelectedUnit||!_getSelectedUnit.is_feedback_enabled)};var initialState={scriptId:null,coursesWithProgress:[]}},"./src/templates/sectionProgress/ProgressBox.jsx":(module,exports,__webpack_require__)=>{function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBox=function(_Component){function ProgressBox(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBox,_Component),ProgressBox.prototype.render=function render(){var _this$props=this.props,started=_this$props.started,incomplete=_this$props.incomplete,imperfect=_this$props.imperfect,perfect=_this$props.perfect,lessonIsAllAssessment=_this$props.lessonIsAllAssessment,viewed=_this$props.viewed,viewedStyle=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.neutral_dark20,height:20,width:20}),boxWithBorderStyle=_objectSpread(_objectSpread({},styles.box),{},{borderColor:started?lessonIsAllAssessment?_color.default.level_submitted:_color.default.level_perfect:_color.default.light_gray},this.props.style),perfectLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_perfect,height:perfect,top:20-perfect}),assessmentLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_submitted,height:perfect,top:20-perfect}),incompleteLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_not_tried,height:incomplete}),imperfectLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_passed,height:imperfect}),lessonNumberStyle=_objectSpread(_objectSpread({},styles.lessonNumber),{},{color:perfect?_color.default.white:_color.default.charcoal});return _react.default.createElement("div",{style:boxWithBorderStyle,"data-testid":"progress-box"},this.props.lessonNumber&&_react.default.createElement("div",{style:lessonNumberStyle},this.props.lessonNumber),viewed?_react.default.createElement("div",{style:viewedStyle}):_react.default.createElement(_react.default.Fragment,null,_react.default.createElement("div",{style:incompleteLevels}),_react.default.createElement("div",{style:imperfectLevels}),_react.default.createElement("div",{className:"uitest-perfect-bar",style:lessonIsAllAssessment?assessmentLevels:perfectLevels})))},ProgressBox}(_react.Component);exports.default=ProgressBox,_defineProperty(ProgressBox,"propTypes",{started:_propTypes.default.bool,incomplete:_propTypes.default.number,imperfect:_propTypes.default.number,perfect:_propTypes.default.number,style:_propTypes.default.object,lessonIsAllAssessment:_propTypes.default.bool,lessonNumber:_propTypes.default.number,viewed:_propTypes.default.bool});var styles={box:{height:20,width:20,borderWidth:1,borderStyle:"solid",boxSizing:"content-box",position:"relative"},filler:{width:20,position:"absolute"},lessonNumber:_objectSpread({position:"absolute",zIndex:2,paddingTop:2,textAlign:"center",width:20},_fontConstants.default["main-font-regular"])};module.exports=exports.default},"./src/templates/sectionProgress/sectionProgressConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitDataPropType=exports.tooltipIdForStudent=exports.studentTableRowType=exports.scrollbarWidth=exports.ViewType=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");var unitDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,csf:_propTypes.default.bool,hasStandards:_propTypes.default.bool,title:_propTypes.default.string,path:_propTypes.default.string,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({levels:_propTypes.default.arrayOf(_propTypes.default.object).isRequired})),family_name:_propTypes.default.string,version_year:_propTypes.default.string,name:_propTypes.default.string});exports.unitDataPropType=unitDataPropType;exports.ViewType={SUMMARY:"summary",DETAIL:"detail",STANDARDS:"standards"};var studentTableRowType=_propTypes.default.shape({id:_propTypes.default.string.isRequired,student:_progressTypes.studentType.isRequired,expansionIndex:_propTypes.default.number.isRequired,isExpanded:_propTypes.default.bool,useDarkBackground:_propTypes.default.bool});exports.studentTableRowType=studentTableRowType;exports.tooltipIdForStudent=function tooltipIdForStudent(studentId){return"tooltipIdForStudent".concat(studentId)};var scrollbarWidth=function getScrollbarWidth(){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var inner=document.createElement("div");outer.appendChild(inner);var scrollbarWidth=outer.offsetWidth-inner.offsetWidth;return outer.parentNode.removeChild(outer),scrollbarWidth}();exports.scrollbarWidth=scrollbarWidth},"./src/templates/sectionProgress/sectionProgressRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.addDataByUnit=void 0,exports.default=function sectionProgress(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===_unitSelectionRedux.SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:INITIAL_LESSON_OF_INTEREST});if(action.type===SET_CURRENT_VIEW)return _objectSpread(_objectSpread({},state),{},{currentView:action.viewType});if(action.type===START_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!0});if(action.type===FINISH_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!1});if(action.type===START_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!0});if(action.type===FINISH_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!1});if(action.type===SET_LESSON_OF_INTEREST)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:action.lessonOfInterest});if(action.type===ADD_DATA_BY_UNIT)return _objectSpread(_objectSpread({},state),{},{unitDataByUnit:_objectSpread(_objectSpread({},state.unitDataByUnit),action.data.unitDataByUnit),studentLevelProgressByUnit:_objectSpread(_objectSpread({},state.studentLevelProgressByUnit),action.data.studentLevelProgressByUnit),studentLessonProgressByUnit:_objectSpread(_objectSpread({},state.studentLessonProgressByUnit),action.data.studentLessonProgressByUnit),studentLastUpdateByUnit:_objectSpread(_objectSpread({},state.studentLastUpdateByUnit),action.data.studentLastUpdateByUnit)});return state},exports.startRefreshingProgress=exports.startLoadingProgress=exports.setLessonOfInterest=exports.setCurrentView=exports.jumpToLessonDetails=exports.getCurrentUnitData=exports.finishRefreshingProgress=exports.finishLoadingProgress=void 0;var _unitSelectionRedux=__webpack_require__("./src/redux/unitSelectionRedux.js"),_firehose=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/lib/util/firehose.js")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_CURRENT_VIEW="sectionProgress/SET_CURRENT_VIEW",SET_LESSON_OF_INTEREST="sectionProgress/SET_LESSON_OF_INTEREST",START_LOADING_PROGRESS="sectionProgress/START_LOADING_PROGRESS",FINISH_LOADING_PROGRESS="sectionProgress/FINISH_LOADING_PROGRESS",START_REFRESHING_PROGRESS="sectionProgress/START_REFRESHING_PROGRESS",FINISH_REFRESHING_PROGRESS="sectionProgress/FINISH_REFRESHING_PROGRESS",ADD_DATA_BY_UNIT="sectionProgress/ADD_DATA_BY_UNIT";exports.startLoadingProgress=function startLoadingProgress(){return{type:START_LOADING_PROGRESS}};exports.finishLoadingProgress=function finishLoadingProgress(){return{type:FINISH_LOADING_PROGRESS}};exports.startRefreshingProgress=function startRefreshingProgress(){return{type:START_REFRESHING_PROGRESS}};exports.finishRefreshingProgress=function finishRefreshingProgress(){return{type:FINISH_REFRESHING_PROGRESS}};var setLessonOfInterest=function setLessonOfInterest(lessonOfInterest){return{type:SET_LESSON_OF_INTEREST,lessonOfInterest}};exports.setLessonOfInterest=setLessonOfInterest;var setCurrentView=function setCurrentView(viewType){return{type:SET_CURRENT_VIEW,viewType}};exports.setCurrentView=setCurrentView;exports.addDataByUnit=function addDataByUnit(data){return{type:ADD_DATA_BY_UNIT,data}};var INITIAL_LESSON_OF_INTEREST=1,initialState={section:{},currentView:_sectionProgressConstants.ViewType.SUMMARY,unitDataByUnit:{},studentLevelProgressByUnit:{},studentLessonProgressByUnit:{},studentLastUpdateByUnit:{},lessonOfInterest:INITIAL_LESSON_OF_INTEREST,isLoadingProgress:!1,isRefreshingProgress:!1};exports.jumpToLessonDetails=function jumpToLessonDetails(lessonOfInterest){return function(dispatch,getState){var state=getState();dispatch(setLessonOfInterest(lessonOfInterest)),dispatch(setCurrentView(_sectionProgressConstants.ViewType.DETAIL)),_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"view_change_toggle",data_json:JSON.stringify({section_id:state.teacherSections.selectedSectionId,old_view:_sectionProgressConstants.ViewType.SUMMARY,new_view:_sectionProgressConstants.ViewType.DETAIL,script_id:state.unitSelection.scriptId})},{includeUserId:!0})}};exports.getCurrentUnitData=function getCurrentUnitData(state){return state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId]}},"./src/templates/sectionProgress/standards/ProgressBoxForLessonNumber.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressBoxForLessonNumber=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_ProgressBox=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/ProgressBox.jsx"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBoxForLessonNumber=function(_Component){function ProgressBoxForLessonNumber(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_Component.call.apply(_Component,[this].concat(args))||this),"handleClick",(function(){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"standards",event:"click_lesson_progress_box",data_json:JSON.stringify({link:_this.props.linkToLessonPlan,section_id:_this.props.sectionId,script_id:_this.props.scriptId,in_report:window.location.pathname.includes("standards_report")})},{includeUserId:!0})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBoxForLessonNumber,_Component),ProgressBoxForLessonNumber.prototype.render=function render(){var _this$props=this.props,completed=_this$props.completed,inProgress=_this$props.inProgress,lessonNumber=_this$props.lessonNumber,tooltipId=_this$props.tooltipId,linkToLessonPlan=_this$props.linkToLessonPlan,started=completed||inProgress,workingOn=inProgress&&!completed,progressBox=_react.default.createElement(_ProgressBox.default,{style:styles.lessonBox,started,incomplete:started?0:20,imperfect:workingOn?20:0,perfect:completed?20:0,lessonNumber});return linkToLessonPlan?_react.default.createElement("a",{href:linkToLessonPlan,target:"_blank",rel:"noopener noreferrer","data-for":tooltipId,"data-tip":!0,onClick:this.handleClick},progressBox):progressBox},ProgressBoxForLessonNumber}(_react.Component);_defineProperty(ProgressBoxForLessonNumber,"propTypes",{completed:_propTypes.default.bool,inProgress:_propTypes.default.bool,lessonNumber:_propTypes.default.number,tooltipId:_propTypes.default.string,linkToLessonPlan:_propTypes.default.string,sectionId:_propTypes.default.number,scriptId:_propTypes.default.number});var styles={lessonBox:{marginRight:5,marginLeft:5}},UnconnectedProgressBoxForLessonNumber=ProgressBoxForLessonNumber;exports.UnconnectedProgressBoxForLessonNumber=UnconnectedProgressBoxForLessonNumber;var _default=(0,_reactRedux.connect)((function(state){return{sectionId:state.teacherSections.selectedSectionId,scriptId:state.unitSelection.scriptId}}))(ProgressBoxForLessonNumber);exports.default=_default},"./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function sectionStandardsProgress(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_STANDARDS_DATA){var sortedByCategory=_lodash.default.orderBy(action.standardsData,"category_description","asc"),groupedStandards=_lodash.default.orderBy(_lodash.default.groupBy(sortedByCategory,"category_description"),"category_description","asc"),sortedStandards=_lodash.default.map(groupedStandards,sortByShortcode);return _objectSpread(_objectSpread({},state),{},{standardsData:_lodash.default.flatten(sortedStandards)})}if(action.type===SET_TEACHER_COMMENT_FOR_REPORT)return _objectSpread(_objectSpread({},state),{},{teacherComment:action.teacherComment});if(action.type===SET_SELECTED_LESSONS)return _objectSpread(_objectSpread({},state),{},{selectedLessons:action.selected});if(action.type===SET_STUDENT_LEVEL_SCORES){var prevLevelScoreByLesson=state.studentLevelScoresByLesson[action.scriptId]?state.studentLevelScoresByLesson[action.scriptId][action.lessonId]:{};return _objectSpread(_objectSpread({},state),{},{studentLevelScoresByLesson:_objectSpread(_objectSpread({},state.studentLevelScoresByLesson),{},_defineProperty({},action.scriptId,_objectSpread(_objectSpread({},state.studentLevelScoresByLesson[action.scriptId]),{},_defineProperty({},action.lessonId,_objectSpread(_objectSpread({},prevLevelScoreByLesson),action.scoresData[action.scriptId][action.lessonId])))))})}return state},exports.fetchStandardsCoveredForScript=function fetchStandardsCoveredForScript(scriptId){return function(dispatch,getState){$.ajax({method:"GET",dataType:"json",url:"/dashboardapi/script_standards/".concat(scriptId)}).then((function(data){dispatch(setStandardsData(data))}))}},exports.fetchStudentLevelScores=function fetchStudentLevelScores(scriptId,sectionId){return function(dispatch,getState){var state=getState(),numStudents=state.teacherSections.sections[state.teacherSections.selectedSectionId].studentCount,unpluggedLessonList=getUnpluggedLessonsForScript(state),unpluggedLessonIds=_lodash.default.map(unpluggedLessonList,"id"),numPages=Math.ceil(numStudents/50),requests=_lodash.default.range(1,numPages+1).map((function(currentPage){var url="/dashboardapi/v1/teacher_scores/".concat(sectionId,"/").concat(scriptId,"?page=").concat(currentPage);return fetch(url,{credentials:"include"}).then((function(response){return response.json()})).then((function(data){var scoresData=data;unpluggedLessonIds.forEach((function(lessonId){return dispatch(setStudentLevelScores(scriptId,lessonId,scoresData))}))}))}));Promise.all(requests).then((function(){var initialCompletedUnpluggedLessons=function getInitialUnpluggedLessonCompletionStatus(state,scriptId){var completedLessonIds=[];if(state.sectionStandardsProgress.studentLevelScoresByLesson&&state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId]){var levelScoresByStudentForScript=state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId];Object.keys(levelScoresByStudentForScript).forEach((function(item){_lodash.default.filter(_lodash.default.values(levelScoresByStudentForScript[item]),(function(studentScore){return _lodash.default.first(_lodash.default.values(studentScore))===_standardsConstants.TeacherScores.COMPLETE})).length>=1&&completedLessonIds.push(parseInt(item))}))}return completedLessonIds}(getState(),scriptId),lessonsToSelect=_lodash.default.filter(unpluggedLessonList,(function(lesson){if(initialCompletedUnpluggedLessons.includes(lesson.id))return lesson}));dispatch(setSelectedLessons(lessonsToSelect))}))}},exports.getLessonCompletionStatus=getLessonCompletionStatus,exports.getLessonSelectionStatus=getLessonSelectionStatus,exports.getNumberLessonsCompleted=function getNumberLessonsCompleted(state){var lessonsCompleted=0,lessons=getLessonsForCurrentScript(state,state.unitSelection.scriptId);lessons&&lessons.forEach((function(lesson){getLessonCompletionStatus(state,lesson.id).completed&&(lessonsCompleted+=1)}));return lessonsCompleted},exports.getNumberLessonsInScript=function getNumberLessonsInScript(state){var numLessons=0,lessons=getLessonsForCurrentScript(state,state.unitSelection.scriptId);lessons&&(numLessons=lessons.length);return numLessons},exports.getPluggedLessonCompletionStatus=getPluggedLessonCompletionStatus,exports.getUnpluggedLessonCompletionStatus=getUnpluggedLessonCompletionStatus,exports.getUnpluggedLessonsForScript=getUnpluggedLessonsForScript,exports.setTeacherCommentForReport=exports.setStudentLevelScores=exports.setStandardsData=exports.setSelectedLessons=exports.lessonsByStandard=void 0;var _lodash=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/lodash/lodash.js")),_constants=__webpack_require__("./src/constants.js"),_standardsConstants=__webpack_require__("./src/templates/sectionProgress/standards/standardsConstants.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_STANDARDS_DATA="sectionStandardsProgress/SET_STANDARDS_DATA",SET_TEACHER_COMMENT_FOR_REPORT="sectionStandardsProgress/SET_TEACHER_COMMENT_FOR_REPORT",SET_SELECTED_LESSONS="sectionStandardsProgress/SET_SELECTED_LESSONS",SET_STUDENT_LEVEL_SCORES="sectionStandardsProgress/SET_STUDENT_LEVEL_SCORES",setStandardsData=function setStandardsData(standardsData){return{type:SET_STANDARDS_DATA,standardsData}};exports.setStandardsData=setStandardsData;exports.setTeacherCommentForReport=function setTeacherCommentForReport(teacherComment){return{type:SET_TEACHER_COMMENT_FOR_REPORT,teacherComment}};var setSelectedLessons=function setSelectedLessons(selected){return{type:SET_SELECTED_LESSONS,selected}};exports.setSelectedLessons=setSelectedLessons;var setStudentLevelScores=function setStudentLevelScores(scriptId,lessonId,scoresData){return{type:SET_STUDENT_LEVEL_SCORES,scriptId,lessonId,scoresData}};exports.setStudentLevelScores=setStudentLevelScores;var initialState={standardsData:[],teacherComment:null,selectedLessons:[],studentLevelScoresByLesson:{}};function sortByShortcode(standardsByCategory){return _lodash.default.orderBy(standardsByCategory,"shortcode","asc")}function getLessonsForCurrentScript(state){if(state.unitSelection.scriptId&&state.sectionProgress.unitDataByUnit&&state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId])return state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId].lessons}function getLessonSelectionStatus(state,lessonId){return _lodash.default.map(state.sectionStandardsProgress.selectedLessons,"id").includes(lessonId)}function getUnpluggedLessonsForScript(state){var unpluggedLessons=[],lessons=getLessonsForCurrentScript(state);return lessons&&(unpluggedLessons=_lodash.default.filter(lessons,(function(lesson){return lesson.unplugged}))).forEach((function(lesson){var lessonCompletionStatus=getLessonCompletionStatus(state,lesson.id);lesson.completed=lessonCompletionStatus.completed,lesson.inProgress=lessonCompletionStatus.inProgress})),_lodash.default.map(unpluggedLessons,(function filterLessonData(lesson){return{id:lesson.id,name:lesson.name,number:lesson.position,url:lesson.lesson_plan_html_url,completed:lesson.completed,inProgress:lesson.inProgress}}))}function getLessonCompletionStatus(state,lessonId){var scriptId=state.unitSelection.scriptId,lessons=getLessonsForCurrentScript(state);if(lessons){var lesson=_lodash.default.find(lessons,["id",lessonId]);return lesson.unplugged?getUnpluggedLessonCompletionStatus(state,scriptId,lessonId):getPluggedLessonCompletionStatus(state,lesson)}}function getUnpluggedLessonCompletionStatus(state,scriptId,lessonId){return{completed:getLessonSelectionStatus(state,lessonId),inProgress:!1,numStudentsCompleted:getNumberOfStudentsCompletedUnpluggedLesson(state,scriptId,lessonId)}}function getNumberOfStudentsCompletedUnpluggedLesson(state,scriptId,lessonId){var completionNumberByLesson=0;if(state.sectionStandardsProgress.studentLevelScoresByLesson&&state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId]&&state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId][lessonId]){var levelScoresByStudent=state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId][lessonId];completionNumberByLesson=_lodash.default.filter(_lodash.default.values(levelScoresByStudent),(function(studentScore){return _lodash.default.first(_lodash.default.values(studentScore))===_standardsConstants.TeacherScores.COMPLETE})).length}return completionNumberByLesson}function getPluggedLessonCompletionStatus(state,lesson){var completionByLesson={};if(state.unitSelection.scriptId&&state.sectionProgress.unitDataByUnit&&state.sectionProgress.studentLevelProgressByUnit&&state.sectionProgress.studentLevelProgressByUnit[state.unitSelection.scriptId]&&state.teacherSections.sections&&state.teacherSections.selectedSectionId){var scriptId=state.unitSelection.scriptId,numberStudentsInSection=state.teacherSections.sections[state.teacherSections.selectedSectionId].studentCount,levelProgressByScript=state.sectionProgress.studentLevelProgressByUnit[scriptId],studentIds=Object.keys(levelProgressByScript),levelIds=_lodash.default.map(lesson.levels,"id"),numStudentsCompletedLesson=0,numStudentsInProgressLesson=0;studentIds.forEach((function(studentId){var numLevelsInLessonCompletedByStudent=0;levelIds.forEach((function(levelId){var levelProgress=levelProgressByScript[studentId][levelId];levelProgress&&levelProgress.result>=_constants.TestResults.MINIMUM_PASS_RESULT&&numLevelsInLessonCompletedByStudent++}));var levelCompletionRatio=numLevelsInLessonCompletedByStudent/levelIds.length;levelCompletionRatio>=.2&&numStudentsInProgressLesson++,levelCompletionRatio>=.6&&numStudentsCompletedLesson++}));var completed=numStudentsCompletedLesson/numberStudentsInSection>=.8,inProgress=numStudentsInProgressLesson/numberStudentsInSection>=.2;completionByLesson.completed=completed,completionByLesson.inProgress=inProgress,completionByLesson.numStudentsCompleted=numStudentsCompletedLesson}return completionByLesson}exports.lessonsByStandard=function lessonsByStandard(state){var lessonsByStandardId={},lessons=getLessonsForCurrentScript(state,state.unitSelection.scriptId);if(lessons&&state.sectionStandardsProgress.standardsData){var standards=state.sectionStandardsProgress.standardsData,numStudents=state.teacherSections.sections[state.teacherSections.selectedSectionId].studentCount;standards.forEach((function(standard){var associatedLessons=[];lessons.forEach((function(lesson){if(standard.lesson_ids.includes(lesson.id)){var lessonCompletionStatus=getLessonCompletionStatus(state,lesson.id),lessonDetails={name:lesson.name,lessonNumber:lesson.relative_position,completed:lessonCompletionStatus.completed,inProgress:lessonCompletionStatus.inProgress,numStudentsCompleted:lessonCompletionStatus.numStudentsCompleted,numStudents,url:lesson.lesson_plan_html_url,unplugged:lesson.unplugged};associatedLessons.push(lessonDetails)}})),lessonsByStandardId[standard.id]=associatedLessons}))}return lessonsByStandardId}},"./src/templates/sectionProgress/standards/standardsConstants.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.cstaStandardsURL=exports.TeacherScores=exports.LessonIcons=void 0;exports.LessonIcons={PLUGGED:"desktop",UNPLUGGED:"scissors"};exports.cstaStandardsURL="https://www.csteachers.org/page/standards";exports.TeacherScores={COMPLETE:100,INCOMPLETE:0}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,