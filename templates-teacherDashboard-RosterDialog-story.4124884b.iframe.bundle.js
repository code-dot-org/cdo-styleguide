/*! For license information please see templates-teacherDashboard-RosterDialog-story.4124884b.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[9025],{"./src/lib/util/RailsAuthenticityToken.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_logToCloud=_interopRequireDefault(__webpack_require__("./src/logToCloud.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}exports.default=function(_React$Component){function RailsAuthenticityToken(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(RailsAuthenticityToken,_React$Component),RailsAuthenticityToken.getRailsCSRFMetaTags=function getRailsCSRFMetaTags(){var metaParam=document.querySelector('meta[name="csrf-param"]'),metaToken=document.querySelector('meta[name="csrf-token"]');if(!metaParam||!metaToken)throw new Error("Tried to render an authenticity token into the form but CSRF meta tags were not found.");return{param:metaParam.content,token:metaToken.content}},RailsAuthenticityToken.prototype.render=function render(){try{var _RailsAuthenticityTok=RailsAuthenticityToken.getRailsCSRFMetaTags(),param=_RailsAuthenticityTok.param,token=_RailsAuthenticityTok.token;return _react.default.createElement("input",{type:"hidden",name:param,value:token})}catch(error){return _logToCloud.default.logError(error),null}},RailsAuthenticityToken}(_react.default.Component);module.exports=exports.default},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_constants=__webpack_require__("./src/constants.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/templates/teacherDashboard/RosterDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedRosterDialog=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_constants=__webpack_require__("./src/lib/ui/accounts/constants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_RailsAuthenticityToken=_interopRequireDefault(__webpack_require__("./src/lib/util/RailsAuthenticityToken.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_shapes=__webpack_require__("./src/templates/teacherDashboard/shapes.jsx"),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ctaButtonStyle={background:_color.default.orange,color:_color.default.white,border:"1px solid #b07202",borderRadius:3,boxShadow:"inset 0 1px 0 0 rgba(255, 255, 255, 0.63)",fontSize:14,padding:"8px 20px"},ClassroomList=function ClassroomList(_ref){var classrooms=_ref.classrooms,onSelect=_ref.onSelect,selectedId=_ref.selectedId,rosterProvider=_ref.rosterProvider;return classrooms.length?_react.default.createElement("div",null,classrooms.map((function(classroom){return _react.default.createElement("div",{style:Object.assign({},styles.classroomRow,selectedId===classroom.id&&styles.highlightRow),key:classroom.id,onClick:onSelect.bind(null,classroom.id)},classroom.name,classroom.section&&_react.default.createElement("span",{style:{color:"#aaa"}}," (",classroom.section,")"),_react.default.createElement("span",{style:{float:"right"}},_locale.default.code(),_react.default.createElement("span",{style:{fontFamily:"monospace"}}," ",classroom.enrollment_code)))}))):_react.default.createElement(NoClassroomsFound,{rosterProvider})};ClassroomList.propTypes={classrooms:_propTypes.default.array.isRequired,onSelect:_propTypes.default.func.isRequired,selectedId:_propTypes.default.string,rosterProvider:_propTypes.default.oneOf(Object.keys(_constants.OAuthSectionTypes))};var NoClassroomsFound=function NoClassroomsFound(_ref2){switch(_ref2.rosterProvider){case _constants.OAuthSectionTypes.google_classroom:return _react.default.createElement("div",null,_react.default.createElement("p",null,_locale.default.noClassroomsFound()),_react.default.createElement("a",{href:"https://classroom.google.com/"},_locale.default.addRemoveGoogleClassrooms()));case _constants.OAuthSectionTypes.clever:return _react.default.createElement("div",null,_react.default.createElement("p",null,_locale.default.noClassroomsFound()),_react.default.createElement("a",{href:"https://clever.com/"},_locale.default.addRemoveCleverClassrooms()))}};NoClassroomsFound.propTypes={rosterProvider:_propTypes.default.oneOf(Object.keys(_constants.OAuthSectionTypes))};var LoadError=function LoadError(_ref3){var rosterProvider=_ref3.rosterProvider,loginType=_ref3.loginType;return rosterProvider===_constants.OAuthSectionTypes.google_classroom?_react.default.createElement("div",null,_react.default.createElement("p",null,_locale.default.authorizeGoogleClassroomsText()),_react.default.createElement(ReauthorizeGoogleClassroom,null),_react.default.createElement("p",null,_react.default.createElement("a",{href:"https://support.code.org/hc/en-us/articles/115001319312",target:"_blank",rel:"noopener noreferrer"},_locale.default.errorLoadingRosteredSectionsSupport()))):_react.default.createElement("p",null,_locale.default.errorLoadingRosteredSections({type:loginType})," ",_react.default.createElement("a",{href:"https://support.code.org/hc/en-us/articles/115001319312",target:"_blank",rel:"noopener noreferrer"},_locale.default.errorLoadingRosteredSectionsSupport()))};LoadError.propTypes={rosterProvider:_propTypes.default.string,loginType:_propTypes.default.string};var REAUTHORIZE_URL="/users/auth/google_oauth2?scope=userinfo.email,userinfo.profile,classroom.courses.readonly,classroom.rosters.readonly";function ReauthorizeGoogleClassroom(){return _react.default.createElement("form",{method:"POST",action:REAUTHORIZE_URL},_react.default.createElement(_RailsAuthenticityToken.default,null),_react.default.createElement("button",{type:"submit",style:ctaButtonStyle},_locale.default.authorizeGoogleClassrooms()))}var RosterDialog=function(_React$Component){function RosterDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",{selectedId:null}),_defineProperty(_this,"importClassroom",(function(){_this.recordSectionSetupExitEvent("Section Setup Completed");var classrooms=_this.props.classrooms,selectedName=classrooms&&classrooms.find((function(classroom){return classroom.id===_this.state.selectedId})).name;_this.props.handleImport(_this.state.selectedId,selectedName),_this.setState({selectedId:null})})),_defineProperty(_this,"redirectToEditSectionPage",(function(sectionId){var redirectUrl="/sections/"+sectionId+"/edit";window.location.href=redirectUrl})),_defineProperty(_this,"handleRedirect",(function(){_this.recordSectionSetupExitEvent("Section Setup Completed");var classrooms=_this.props.classrooms,courseName=classrooms&&classrooms.find((function(classroom){return classroom.id===_this.state.selectedId})).name,importSectionUrl=_this.props.rosterProvider===_constants.OAuthSectionTypes.google_classroom?"/dashboardapi/import_google_classroom":"/dashboardapi/import_clever_classroom",courseId=_this.state.selectedId;return new Promise((function(resolve,reject){$.getJSON(importSectionUrl,{courseId,courseName}).done(resolve).fail((function(jqxhr){return reject(new Error("\n            url: ".concat(importSectionUrl,"\n            status: ").concat(jqxhr.status,"\n            statusText: ").concat(jqxhr.statusText,"\n            responseText: ").concat(jqxhr.responseText,"\n          ")))}))})).then((function(newSection){return _this.redirectToEditSectionPage(newSection.id)}))})),_defineProperty(_this,"cancel",(function(){_this.recordSectionSetupExitEvent("Section Setup Cancelled"),_this.props.handleCancel()})),_defineProperty(_this,"onClassroomSelected",(function(id){_this.setState({selectedId:id})})),_defineProperty(_this,"recordSectionSetupExitEvent",(function(eventName){var rosterProvider=_this.props.rosterProvider;_AnalyticsReporter.default.sendEvent(eventName,{oauthSource:rosterProvider})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(RosterDialog,_React$Component),RosterDialog.prototype.render=function render(){var title="",loginType="";switch(this.props.rosterProvider){case _constants.OAuthSectionTypes.google_classroom:title=_locale.default.selectGoogleClassroom(),loginType=_locale.default.loginTypeGoogleClassroom();break;case _constants.OAuthSectionTypes.clever:title=_locale.default.selectCleverSection(),loginType=_locale.default.loginTypeClever()}return _react.default.createElement(_BaseDialog.default,_extends({useUpdatedStyles:!0,fixedHeight:480,isOpen:this.props.isOpen,handleClose:this.cancel},this.props),_react.default.createElement("h2",{style:styles.title},title),_react.default.createElement("div",{style:styles.content},this.props.loadError?_react.default.createElement(LoadError,{rosterProvider:this.props.rosterProvider,loginType}):this.props.classrooms?_react.default.createElement(ClassroomList,{classrooms:this.props.classrooms,onSelect:this.onClassroomSelected,selectedId:this.state.selectedId,rosterProvider:this.props.rosterProvider}):_locale.default.loading()),_react.default.createElement("div",{style:styles.footer},_react.default.createElement("button",{id:"cancel-button",type:"button",onClick:this.cancel,style:_objectSpread(_objectSpread({},styles.buttonPrimary),styles.buttonSecondary)},_locale.default.dialogCancel()),_react.default.createElement("button",{id:"import-button-and-redirect",type:"button",onClick:this.handleRedirect,style:Object.assign({},styles.buttonPrimary,!this.state.selectedId&&{opacity:.5}),disabled:!this.state.selectedId},_locale.default.chooseSection())))},RosterDialog}(_react.default.Component);_defineProperty(RosterDialog,"propTypes",{handleImport:_propTypes.default.func,handleCancel:_propTypes.default.func,isOpen:_propTypes.default.bool,classrooms:_propTypes.default.arrayOf(_shapes.classroomShape),loadError:_shapes.loadErrorShape,rosterProvider:_propTypes.default.oneOf(Object.keys(_constants.OAuthSectionTypes))});var styles={title:{position:"absolute",left:20,color:_color.default.dark_charcoal,margin:"15px 0"},content:{position:"absolute",left:20,top:50,right:20,bottom:70,overflowY:"scroll"},classroomRow:{padding:10,cursor:"pointer"},highlightRow:{backgroundColor:_color.default.default_blue,color:_color.default.white},footer:{position:"absolute",bottom:15,right:20,left:20},buttonPrimary:_objectSpread(_objectSpread({},ctaButtonStyle),{},{float:"right"}),buttonSecondary:{float:"left",background:"#eee",color:"#5b6770",border:"1px solid #c5c5c5"}};exports.UnconnectedRosterDialog=RosterDialog,exports.default=(0,_reactRedux.connect)((function(state){return{isOpen:(0,_teacherSectionsRedux.isRosterDialogOpen)(state),classrooms:state.teacherSections.classrooms,loadError:state.teacherSections.loadError,rosterProvider:state.teacherSections.rosterProvider}}),{handleImport:_teacherSectionsRedux.importOrUpdateRoster,handleCancel:_teacherSectionsRedux.cancelImportRosterFlow})(RosterDialog)},"./src/templates/teacherDashboard/shapes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.sortableSectionShape=exports.sectionShape=exports.sectionForDropdownShape=exports.loadErrorShape=exports.classroomShape=exports.assignmentUnitShape=exports.assignmentCourseVersionShape=exports.assignmentCourseOfferingShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");exports.sectionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,createdAt:_propTypes.default.string,loginType:_propTypes.default.oneOf(Object.keys(_sharedConstants.SectionLoginType)),lessonExtras:_propTypes.default.bool.isRequired,pairingAllowed:_propTypes.default.bool.isRequired,ttsAutoplayEnabled:_propTypes.default.bool.isRequired,studentCount:_propTypes.default.number.isRequired,code:_propTypes.default.string.isRequired,courseOfferingId:_propTypes.default.number,courseVersionId:_propTypes.default.number,unitId:_propTypes.default.number,courseId:_propTypes.default.number,scriptId:_propTypes.default.number,grades:_propTypes.default.arrayOf(_propTypes.default.string),providerManaged:_propTypes.default.bool.isRequired,restrictSection:_propTypes.default.bool,postMilestoneDisabled:_propTypes.default.bool,syncEnabled:_propTypes.default.bool}),exports.assignmentUnitShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,path:_propTypes.default.string.isRequired,lesson_extras_available:_propTypes.default.bool.isRequired,text_to_speech_enabled:_propTypes.default.bool.isRequired,position:_propTypes.default.number}),exports.assignmentCourseVersionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,version_year:_propTypes.default.string.isRequired,content_root_id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,path:_propTypes.default.string.isRequired,type:_propTypes.default.string.isRequired,is_stable:_propTypes.default.bool.isRequired,is_recommended:_propTypes.default.bool.isRequired,locales:_propTypes.default.array,units:_propTypes.default.object.isRequired}),exports.assignmentCourseOfferingShape=_propTypes.default.shape({elementary:_propTypes.default.object,high:_propTypes.default.object,hoc:_propTypes.default.object,middle:_propTypes.default.object}),exports.classroomShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,section:_propTypes.default.string,enrollment_code:_propTypes.default.string.isRequired}),exports.loadErrorShape=_propTypes.default.shape({status:_propTypes.default.number.isRequired,message:_propTypes.default.string.isRequired}),exports.sortableSectionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,courseVersionName:_propTypes.default.string,loginType:_propTypes.default.oneOf(Object.keys(_sharedConstants.SectionLoginType)).isRequired,studentCount:_propTypes.default.number.isRequired,code:_propTypes.default.string.isRequired,grades:_propTypes.default.arrayOf(_propTypes.default.string),providerManaged:_propTypes.default.bool.isRequired,hidden:_propTypes.default.bool.isRequired,assignmentName:_propTypes.default.arrayOf(_propTypes.default.string),assignmentPath:_propTypes.default.arrayOf(_propTypes.default.string)}),exports.sectionForDropdownShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,isAssigned:_propTypes.default.bool.isRequired})},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",brand_teal_5:"#DFF2F4",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",clever_brand_color:"#1464FF",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_400:"#A9ACAF",light_gray_500:"#94979B",light_gray_600:"#7F8286",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./test/util/stubRailsAuthenticityToken.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.stubRailsAuthenticityToken=function stubRailsAuthenticityToken(){"function"!=typeof _RailsAuthenticityToken.default.getRailsCSRFMetaTags.restore&&_sinon.default.stub(_RailsAuthenticityToken.default,"getRailsCSRFMetaTags").returns({param:void 0,token:void 0})},exports.unstubRailsAuthenticityToken=function unstubRailsAuthenticityToken(){_RailsAuthenticityToken.default.getRailsCSRFMetaTags.restore()};var _sinon=_interopRequireDefault(__webpack_require__("./node_modules/sinon/lib/sinon.js")),_RailsAuthenticityToken=_interopRequireDefault(__webpack_require__("./src/lib/util/RailsAuthenticityToken.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/nise sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/nise sync recursive",module.exports=webpackEmptyContext},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/teacherDashboard/RosterDialog.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.GoogleClassroomSelectSection=exports.GoogleClassroomNoSectionsFound=exports.GoogleClassroomLoading=exports.GoogleClassroomLoadError=exports.CleverClassroomSelectSection=exports.CleverClassroomNoSectionsFound=exports.CleverClassroomLoading=exports.CleverClassroomLoadError=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/lib/ui/accounts/constants.js"),_stubRailsAuthenticityToken=__webpack_require__("./test/util/stubRailsAuthenticityToken.js"),_RosterDialog=__webpack_require__("./src/templates/teacherDashboard/RosterDialog.jsx");exports.default={name:"RosterDialog",component:_RosterDialog.UnconnectedRosterDialog,decorators:[function dialogIsOpen(story){return _react.default.cloneElement(story(),{isOpen:!0})},function railsAuthenticityTokenIsStubbed(story){return(0,_stubRailsAuthenticityToken.stubRailsAuthenticityToken)(),story()}]};var SelectSectionTemplate=function SelectSectionTemplate(args){return _react.default.createElement(_RosterDialog.UnconnectedRosterDialog,{rosterProvider:args.provider,classrooms:[{id:"123",name:"New Test Classroom",section:"Section 1",enrollment_code:"19uag24"},{id:"456",name:"Other Test Classroom",section:"Section 3A",enrollment_code:"t108sh5"},{id:"101",name:"Intro to CS",section:"Section A",enrollment_code:"rt508yg"},{id:"102",name:"Intro to CS",section:"Section B",enrollment_code:"12gjl42"}]})};(exports.GoogleClassroomSelectSection=SelectSectionTemplate.bind({})).args={provider:_constants.OAuthSectionTypes.google_classroom},(exports.CleverClassroomSelectSection=SelectSectionTemplate.bind({})).args={provider:_constants.OAuthSectionTypes.clever};var LoadingTemplate=function LoadingTemplate(args){return _react.default.createElement(_RosterDialog.UnconnectedRosterDialog,{rosterProvider:args.provider})};(exports.GoogleClassroomLoading=LoadingTemplate.bind({})).args={provider:_constants.OAuthSectionTypes.google_classroom},(exports.CleverClassroomLoading=LoadingTemplate.bind({})).args={provider:_constants.OAuthSectionTypes.clever};var NoSectionsFoundTemplate=function NoSectionsFoundTemplate(args){return _react.default.createElement(_RosterDialog.UnconnectedRosterDialog,{rosterProvider:args.provider,classrooms:[]})};(exports.GoogleClassroomNoSectionsFound=NoSectionsFoundTemplate.bind({})).args={provider:_constants.OAuthSectionTypes.google_classroom},(exports.CleverClassroomNoSectionsFound=NoSectionsFoundTemplate.bind({})).args={provider:_constants.OAuthSectionTypes.clever};var LoadErrorTemplate=function LoadErrorTemplate(args){return _react.default.createElement(_RosterDialog.UnconnectedRosterDialog,{rosterProvider:args.provider,loadError:{status:403,message:"Sample error message."}})};(exports.GoogleClassroomLoadError=LoadErrorTemplate.bind({})).args={provider:_constants.OAuthSectionTypes.google_classroom},(exports.CleverClassroomLoadError=LoadErrorTemplate.bind({})).args={provider:_constants.OAuthSectionTypes.clever}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,