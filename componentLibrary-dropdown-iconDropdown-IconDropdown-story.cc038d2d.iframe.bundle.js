/*! For license information please see componentLibrary-dropdown-iconDropdown-IconDropdown-story.cc038d2d.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[763],{"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/getUrl.js":module=>{"use strict";module.exports=function(url,options){return options||(options={}),url?(url=String(url.__esModule?url.default:url),/^['"].*['"]$/.test(url)&&(url=url.slice(1,-1)),options.hash&&(url+=options.hash),/["'() \t\n]|(%20)/.test(url)||options.needQuotes?'"'.concat(url.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):url):url}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/componentLibrary/dropdown/iconDropdown/IconDropdown.story.tsx":function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__read=this&&this.__read||function(o,n){var m="function"==typeof Symbol&&o[Symbol.iterator];if(!m)return o;var r,e,i=m.call(o),ar=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)ar.push(r.value)}catch(error){e={error}}finally{try{r&&!r.done&&(m=i.return)&&m.call(i)}finally{if(e)throw e.error}}return ar},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GroupOfSizesOfIconDropdown=exports.GroupOfIconDropdownColors=exports.ThickAndThinIconDropdowns=exports.WithDisabledOptionIconDropdown=exports.DisabledIconDropdown=exports.DefaultIconDropdown=void 0;var react_1=__importStar(__webpack_require__("./node_modules/react/index.js")),dropdown_1=__webpack_require__("./src/componentLibrary/dropdown/index.ts"),index_1=__importDefault(__webpack_require__("./src/componentLibrary/dropdown/iconDropdown/index.ts"));exports.default={title:"DesignSystem/Dropdown/Icon Dropdown",component:index_1.default.type};var SingleTemplate=function(args){var _a=__read((0,react_1.useState)(args.selectedOption),2),selectedValue=_a[0],setValue=_a[1],onChange=(0,react_1.useCallback)((function(option){setValue(option),args.onChange(option)}),[args,setValue]);return react_1.default.createElement(index_1.default,__assign({},args,{selectedOption:selectedValue,onChange}))},MultipleTemplate=function(args){var _a,_b=__read((0,react_1.useState)({}),2),values=_b[0],setValues=_b[1];return react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement("p",null,"* Margins on this screen does not represent Component's margins, and are only added to improve storybook view *"),react_1.default.createElement("p",null,"Multiple Dropdown:"),react_1.default.createElement("div",{style:{display:"flex",gap:"20px"}},null===(_a=args.components)||void 0===_a?void 0:_a.map((function(componentArg){var _a;void 0===values[componentArg.name]&&setValues(__assign(__assign({},values),((_a={})[componentArg.name]=componentArg.selectedOption,_a)));return react_1.default.createElement(index_1.default,__assign({key:"".concat(componentArg.name)},componentArg,{selectedOption:values[componentArg.name],onChange:function(option){var _a;setValues(__assign(__assign({},values),((_a={})[componentArg.name]=option,_a))),componentArg.onChange(option)}}))}))))};exports.DefaultIconDropdown=SingleTemplate.bind({}),exports.DefaultIconDropdown.args={name:"default-dropdown",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"xmark",iconStyle:"solid"}}],labelText:"Default Dropdown",selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},disabled:!1,color:dropdown_1.dropdownColors.black,onChange:function(args){return null},size:"m"},exports.DisabledIconDropdown=SingleTemplate.bind({}),exports.DisabledIconDropdown.args={name:"default-dropdown",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"xmark",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"Disabled Dropdown",onChange:function(args){return null},disabled:!0,color:dropdown_1.dropdownColors.black,size:"m"},exports.WithDisabledOptionIconDropdown=SingleTemplate.bind({}),exports.WithDisabledOptionIconDropdown.args={name:"default-dropdown",options:[{value:"option-1",label:"Option 1",isOptionDisabled:!0,icon:{iconName:"xmark",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-3",label:"Option 3",icon:{iconName:"check",iconStyle:"solid"}}],disabled:!1,color:dropdown_1.dropdownColors.black,selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"xmark",iconStyle:"solid"}},labelText:"Dropdown with disabled option",onChange:function(args){return null},size:"m"},exports.ThickAndThinIconDropdowns=MultipleTemplate.bind({}),exports.ThickAndThinIconDropdowns.args={components:[{name:"thick-iconDropdown",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"xmark",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"Thick Dropdown",labelType:"thick",onChange:function(args){return null},size:"m",disabled:!1},{name:"thin-iconDropdown",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"xmark",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"Thin Dropdown",labelType:"thin",onChange:function(args){return null},size:"m",disabled:!1}]},exports.GroupOfIconDropdownColors=MultipleTemplate.bind({}),exports.GroupOfIconDropdownColors.args={components:[{name:"default-dropdown-white",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"xmark",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"White Dropdown",onChange:function(args){return null},size:"m",disabled:!1,color:dropdown_1.dropdownColors.white},{name:"default-dropdown-black",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"xmark",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"Black Dropdown",onChange:function(args){return null},size:"m",color:dropdown_1.dropdownColors.black,disabled:!1}]},exports.GroupOfSizesOfIconDropdown=MultipleTemplate.bind({}),exports.GroupOfSizesOfIconDropdown.args={components:[{name:"default-dropdown-xs",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"xmark",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"XS Dropdown",onChange:function(args){return null},size:"xs",disabled:!1,color:dropdown_1.dropdownColors.black},{name:"default-dropdown-s",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"xmark",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"S Dropdown",onChange:function(args){return null},size:"s",disabled:!1,color:dropdown_1.dropdownColors.black},{name:"default-dropdown-m",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"smile",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"M Dropdown",onChange:function(args){return null},size:"m",disabled:!1,color:dropdown_1.dropdownColors.black},{name:"default-dropdown-white",options:[{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},{value:"option-2",label:"Option 2",icon:{iconName:"smile",iconStyle:"solid"}}],selectedOption:{value:"option-1",label:"Option 1",icon:{iconName:"check",iconStyle:"solid"}},labelText:"L Dropdown",onChange:function(args){return null},size:"l",disabled:!1,color:dropdown_1.dropdownColors.black}]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,