/*! For license information please see templates-VideoThumbnail-story.f90325d9.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3078],{"./generated-scripts/sharedConstants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AbuseConstants:()=>AbuseConstants,AiInteractionStatus:()=>AiInteractionStatus,AiTutorInteractionStatus:()=>AiTutorInteractionStatus,AiTutorTypes:()=>AiTutorTypes,AichatErrorType:()=>AichatErrorType,AllPublishableProjectTypes:()=>AllPublishableProjectTypes,AlwaysPublishableProjectTypes:()=>AlwaysPublishableProjectTypes,ArtistAutorunOptions:()=>ArtistAutorunOptions,CensusConstants:()=>CensusConstants,ChildAccountComplianceStates:()=>ChildAccountComplianceStates,ConditionallyPublishableProjectTypes:()=>ConditionallyPublishableProjectTypes,DanceSongManifestFilename:()=>DanceSongManifestFilename,DefaultLocale:()=>DefaultLocale,EmailLinks:()=>EmailLinks,ErrorSeverityLevels:()=>ErrorSeverityLevels,FeaturedProjectConstants:()=>FeaturedProjectConstants,FeaturedProjectStatus:()=>FeaturedProjectStatus,LevelKind:()=>LevelKind,LevelStatus:()=>LevelStatus,LmsLinks:()=>LmsLinks,PlGradeValue:()=>PlGradeValue,PostMilestoneMode:()=>PostMilestoneMode,RestrictedPublishProjectTypes:()=>RestrictedPublishProjectTypes,RubricAiEvaluationStatus:()=>RubricAiEvaluationStatus,RubricUnderstandingLevels:()=>RubricUnderstandingLevels,SectionLoginType:()=>SectionLoginType,StudentGradeLevels:()=>StudentGradeLevels,UserTypes:()=>UserTypes});const DefaultLocale="en-US",ArtistAutorunOptions={full_auto_run:"FULL_AUTO_RUN"},LevelKind={peer_review:"peer_review",assessment:"assessment",puzzle:"puzzle",unplugged:"unplugged",level:"level",stage_extras:"stage_extras"},LevelStatus={not_tried:"not_tried",submitted:"submitted",perfect:"perfect",passed:"passed",attempted:"attempted",review_accepted:"review_accepted",review_rejected:"review_rejected",dots_disabled:"dots_disabled",free_play_complete:"free_play_complete",completed_assessment:"completed_assessment"},SectionLoginType={word:"word",picture:"picture",email:"email",google_classroom:"google_classroom",clever:"clever",lti_v1:"lti_v1"},StudentGradeLevels=["K","1","2","3","4","5","6","7","8","9","10","11","12","Other"],PlGradeValue="pl",PostMilestoneMode={all:"all",successful_runs_and_final_level_only:"successful_runs_and_final_level_only",final_level_only:"final_level_only"},AlwaysPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys"],AllPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys","applab","gamelab","spritelab"],ConditionallyPublishableProjectTypes=["applab","gamelab"],AbuseConstants={ABUSE_THRESHOLD:15},ErrorSeverityLevels={WARN:2,ERROR:3,FATAL:4},RestrictedPublishProjectTypes=["spritelab"],RubricUnderstandingLevels={EXTENSIVE:3,CONVINCING:2,LIMITED:1,NONE:0},RubricAiEvaluationStatus={QUEUED:0,RUNNING:1,SUCCESS:2,FAILURE:1e3,PII_VIOLATION:1001,PROFANITY_VIOLATION:1002,REQUEST_TOO_LARGE:1003},EmailLinks={PRIVACY_POLICY_URL:"https://code.org/privacy",CONTACT_US_URL:"https://code.org/contact",TOS_URL:"https://code.org/tos",STUDENT_PRIVACY_PLEDGE_URL:"https://studentprivacypledge.org/signatories/",COMMON_SENSE_MEDIA_URL:"https://privacy.commonsense.org/evaluation/code.org",CDO_SUPPORT_MAILTO:"mailto:support@code.org"},ChildAccountComplianceStates={LOCKED_OUT:"l",REQUEST_SENT:"s",PERMISSION_GRANTED:"g"},CensusConstants={CURRENT_CENSUS_SCHOOL_YEAR:2023},DanceSongManifestFilename="songManifest2024_v2.json",AiInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",OK:"ok",UNKNOWN:"unknown"},AichatErrorType={PROFANITY_MODEL:"profanity_model",PROFANITY_USER:"profanity_user"},AiTutorInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",OK:"ok",UNKNOWN:"unknown"},AiTutorTypes={COMPILATION:"compilation",VALIDATION:"validation",GENERAL_CHAT:"general_chat"},FeaturedProjectStatus={active:"active",bookmarked:"bookmarked",archived:"archived"},FeaturedProjectConstants={MAX_REQUESTS_PER_CATEGORY:15},LmsLinks={INTEGRATION_GUIDE_URL:"https://support.code.org/hc/en-us/articles/23120014459405-Learning-Management-System-LMS-and-Single-Sign-On-SSO-Integrations-and-Support-for-Code-org",INSTALL_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621907533965-Install-Code-org-Integrations-for-your-Learning-Management-System",INSTALL_GUIDE_FOR_CANVAS_URL:"https://support.code.org/hc/en-us/articles/23123273783437-Install-the-Code-org-Integration-for-Canvas",ROSTER_SYNC_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621978654605-Sync-Rosters-with-your-Learning-Management-System",INTEGRATION_EARLY_ACCESS_URL:"https://docs.google.com/forms/d/e/1FAIpQLScjfVR4CZs8Utf5vI4mz3e1q8vdH6RNIgTUWygZXN0oovBSQg/viewform",INTEGRATION_BUG_REPORT_URL:"https://support.code.org/hc/en-us/requests/new?ticket_form_id=14998494738829&tf_23889708=lms_eaf",ADDITIONAL_FEEDBACK_URL:"https://studio.code.org/form/lms_integration_modal_feedback",SUPPORTED_METHODS_URL:"https://github.com/code-dot-org/code-dot-org/blob/staging/docs/lti-integration.md#option-2-manual-entry"},UserTypes={STUDENT:"student",TEACHER:"teacher"}},"./src/code-studio/activityUtils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.resultFromStatus=exports.mergeActivityResult=exports.activityCssClass=void 0;var _constants=__webpack_require__("./src/constants.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");exports.activityCssClass=function activityCssClass(result){return result&&result!==_constants.TestResults.NO_TESTS_RUN?result===_constants.TestResults.REVIEW_ACCEPTED_RESULT?_sharedConstants.LevelStatus.review_accepted:result===_constants.TestResults.REVIEW_REJECTED_RESULT?_sharedConstants.LevelStatus.review_rejected:result===_constants.TestResults.SUBMITTED_RESULT?_sharedConstants.LevelStatus.submitted:result>=_constants.TestResults.MINIMUM_OPTIMAL_RESULT?_sharedConstants.LevelStatus.perfect:result>=_constants.TestResults.MINIMUM_PASS_RESULT?_sharedConstants.LevelStatus.passed:_sharedConstants.LevelStatus.attempted:_sharedConstants.LevelStatus.not_tried},exports.resultFromStatus=function resultFromStatus(status){return status===_sharedConstants.LevelStatus.review_accepted?_constants.TestResults.REVIEW_ACCEPTED_RESULT:status===_sharedConstants.LevelStatus.review_rejected?_constants.TestResults.REVIEW_REJECTED_RESULT:status===_sharedConstants.LevelStatus.submitted?_constants.TestResults.SUBMITTED_RESULT:status===_sharedConstants.LevelStatus.free_play_complete?_constants.TestResults.FREE_PLAY:status===_sharedConstants.LevelStatus.perfect?_constants.TestResults.ALL_PASS:status===_sharedConstants.LevelStatus.passed?_constants.TestResults.MINIMUM_PASS_RESULT:_constants.TestResults.NO_TESTS_RUN},exports.mergeActivityResult=function mergeActivityResult(a,b){return b=b||0,0===(a=a||0)?b:0===b?a:Math.max(a,b)}},"./src/code-studio/clientState.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _utils=__webpack_require__("./src/utils.js"),_activityUtils=__webpack_require__("./src/code-studio/activityUtils.js"),sessionStorage=window.sessionStorage,clientState=module.exports={};function levelProgressByScript(){var progressJson=sessionStorage.getItem("progress");try{return progressJson?JSON.parse(progressJson):{}}catch(e){return{}}}function recordVisualElementSeen(visualElementType,visualElementId){var elementSeen,elementSeenJson=sessionStorage.getItem(visualElementType)||"{}";try{(elementSeen=JSON.parse(elementSeenJson))[visualElementId]=!0,(0,_utils.trySetSessionStorage)(visualElementType,JSON.stringify(elementSeen))}catch(e){(elementSeen={})[visualElementId]=!0,(0,_utils.trySetSessionStorage)(visualElementType,JSON.stringify(elementSeen))}}function hasSeenVisualElement(visualElementType,visualElementId){var elementSeenJson=sessionStorage.getItem(visualElementType)||"{}";try{return!0===JSON.parse(elementSeenJson)[visualElementId]}catch(e){return!1}}function createKey(scriptName,levelId,prefix){return(prefix?prefix+"_":"")+scriptName+"_"+levelId}clientState.queryParams=__webpack_require__("./src/code-studio/utils.js").queryParams,clientState.EXPIRY_DAYS=365,clientState.MAXIMUM_CACHABLE_RESULT=999,clientState.reset=function(){try{sessionStorage.clear()}catch(e){}},clientState.clearProgress=function(){sessionStorage.removeItem("progress"),sessionStorage.removeItem("lines"),function removeItemsWithPrefix(sessionStorage,prefix){Object.keys(sessionStorage).filter((function(key){return key.startsWith(prefix)})).forEach((function(key){return sessionStorage.removeItem(key)}))}(sessionStorage,"source_")},clientState.sourceForLevel=function(scriptName,levelId,timestamp){var data=sessionStorage.getItem(createKey(scriptName,levelId,"source"));if(data){var parsed;try{parsed=JSON.parse(data)}catch(e){return}if(!timestamp||parsed.timestamp>timestamp)return parsed.source}},clientState.writeSourceForLevel=function(scriptName,levelId,timestamp,source){void 0!==source&&(0,_utils.trySetSessionStorage)(createKey(scriptName,levelId,"source"),JSON.stringify({source,timestamp}))},clientState.trackProgress=function(scriptName,levelId,testResult){if(testResult&&!(testResult>clientState.MAXIMUM_CACHABLE_RESULT)){var progressData=levelProgressByScript();progressData[scriptName]||(progressData[scriptName]={});var savedResult=progressData[scriptName][levelId]||0,mergedResult=(0,_activityUtils.mergeActivityResult)(savedResult,testResult);mergedResult!==savedResult&&(progressData[scriptName][levelId]=mergedResult,(0,_utils.trySetSessionStorage)("progress",JSON.stringify(progressData)))}},clientState.levelProgress=function(scriptName){return levelProgressByScript()[scriptName]||{}},clientState.hasSeenVideo=function(videoId){return hasSeenVisualElement("video",videoId)},clientState.recordVideoSeen=function(videoId){recordVisualElementSeen("video",videoId)},clientState.hasSeenCallout=function(calloutId){return hasSeenVisualElement("callout",calloutId)},clientState.recordCalloutSeen=function(calloutId){recordVisualElementSeen("callout",calloutId)}},"./src/code-studio/url_test.js":module=>{module.exports=function testImageAccess(url){var element,successCallback=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){},failureCallback=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){},timeoutMs=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5e3,videoElement=arguments.length>4&&void 0!==arguments[4]&&arguments[4];element=videoElement?document.createElement("video"):new Image;var called=!1;function finish(callback){return function(){called||(called=!0,window.clearTimeout(timeout),callback())}}var timeout=window.setTimeout(finish(failureCallback),timeoutMs);element.onerror=finish(failureCallback),videoElement?element.ondurationchange=finish(successCallback):element.onload=finish(successCallback),element.src=url,window.testImages=window.testImages||[],window.testImages.push(element)}},"./src/code-studio/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.environmentSpecificCookieName=function environmentSpecificCookieName(name){var rack_env=window.dashboard.rack_env;if("production"===rack_env)return name;return"".concat(name,"_").concat(rack_env)},exports.getRootDomainFromHostname=function getRootDomainFromHostname(hostname){return hostname.split(".").slice(-2).join(".")},exports.hasQueryParam=function hasQueryParam(name){var parsedParams=queryParams();return Object.prototype.hasOwnProperty.call(parsedParams,name)},exports.queryParams=queryParams,exports.resetWindowLocation=function resetWindowLocation(){windowLocation=window.location},exports.setWindowLocation=function setWindowLocation(fakeLocation){windowLocation=fakeLocation},exports.updateQueryParam=function updateQueryParam(param,value){var useReplaceState=arguments.length>2&&void 0!==arguments[2]&&arguments[2],newString=_queryString.default.stringify(_objectSpread(_objectSpread({},_queryString.default.parse(windowLocation.search)),{},_defineProperty({},param,value))),newLocation=windowLocation.pathname;newString&&(newLocation+="?"+newString);var method=useReplaceState?"replaceState":"pushState";window.history[method](null,document.title,newLocation)};var _queryString=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/query-string/index.js"));function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var windowLocation=window.location;function queryParams(name){var parsed=_queryString.default.parse(windowLocation.search);return name?parsed[name]:parsed}},"./src/code-studio/videos.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_trackEvent=_interopRequireDefault(__webpack_require__("./src/util/trackEvent.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactDom=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/index.js")),_FallbackPlayerCaptionDialogLink=_interopRequireDefault(__webpack_require__("./src/templates/FallbackPlayerCaptionDialogLink.jsx")),_video=_interopRequireDefault(__webpack_require__("./node_modules/video.js/dist/video.es.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var currentVideoOptions,testImageAccess=__webpack_require__("./src/code-studio/url_test.js"),clientState=__webpack_require__("./src/code-studio/clientState.js"),TAB_NAV_CLASS=".ui-tabs-nav",MODAL_CLASS=".video-modal",videos=module.exports={};function onVideoEnded(){(0,_jquery.default)(MODAL_CLASS).trigger("ended")}function createVideo(options){var videoDiv=(0,_jquery.default)('<iframe id="video"/>').addClass("video-player").attr({src:options.src,allowfullscreen:"true",scrolling:"no"});return(0,_jquery.default)("<div id='videoTabContainer'></div>").append(videoDiv)}function resizeVideoPlayer(){var containerHeight,containerWidth,$div=(0,_jquery.default)(MODAL_CLASS),navBarHeight=$div.find(TAB_NAV_CLASS).outerHeight(),maxHeight=.8*window.innerHeight,maxWidth=.8*window.innerWidth;1.7777777777777777*(maxHeight-navBarHeight)<maxWidth?(containerHeight=maxHeight,containerWidth=1.7777777777777777*(maxHeight-navBarHeight)):(containerHeight=maxWidth/1.7777777777777777+navBarHeight,containerWidth=maxWidth),$div.height(containerHeight),$div.width(containerWidth);var top=(window.innerHeight-containerHeight)/2;$div.css({position:"fixed",top,left:"50%",marginLeft:containerWidth/-2+"px"});var availableHeight=getVideoHeight();(0,_jquery.default)(".video-player").height(availableHeight),(0,_jquery.default)("#notes-outer").height(availableHeight)}function getVideoHeight(){var container=(0,_jquery.default)(MODAL_CLASS);return container.innerHeight()-container.find(TAB_NAV_CLASS).outerHeight()}function setupVideoFallback(videoInfo,playerWidth,playerHeight,shouldStillAddCallback){shouldStillAddCallback=shouldStillAddCallback||function(){return!0},videoInfo.enable_fallback&&(videoInfo.force_fallback?addFallbackVideoPlayer(videoInfo,playerWidth,playerHeight):videos.onYouTubeBlocked((function(){shouldStillAddCallback()&&addFallbackVideoPlayer(videoInfo,playerWidth,playerHeight)}),videoInfo))}function addFallbackVideoPlayer(videoInfo,playerWidth,playerHeight){var containerDivStyle,fallbackPlayerID="fallbackPlayer"+Date.now(),extraVideoStyle="",dimensions="";"100%"===playerWidth&&"100%"===playerHeight?(containerDivStyle="position: absolute; top: 0; bottom: 0; left: 0; right: 0",extraVideoStyle="vjs-fill"):(containerDivStyle="",dimensions='width="'+playerWidth+'" height="'+playerHeight+'" ');var playerCode='<div style="'+containerDivStyle+'"><video id="'+fallbackPlayerID+'" '+dimensions+(videoInfo.autoplay?"autoplay ":"")+'class="video-js vjs-default-skin vjs-big-play-centered '+extraVideoStyle+'" controls preload="auto" poster="'+videoInfo.thumbnail+'"><source src="'+videoInfo.download+'" type="video/mp4"/></video></div>';(0,_jquery.default)("#videoTabContainer").empty(),(0,_jquery.default)("#videoTabContainer").append(playerCode);var videoPlayer=(0,_video.default)(fallbackPlayerID,{nativeControlsForTouch:!0},(function(){var $fallbackPlayer=(0,_jquery.default)("#"+fallbackPlayerID);function resizeFallbackPlayer(){var width=(0,_jquery.default)(MODAL_CLASS).innerWidth(),height=getVideoHeight();width&&height&&videoPlayer.dimensions(width,height)}this.on("error",(function(e){$fallbackPlayer.addClass("fallback-video-player-failed"),function hasNotesTab(){return(0,_jquery.default)('.dash_modal_body a[href="#notes-outer"]').length>0}()&&function openNotesTab(){var notesTabIndex=(0,_jquery.default)('.dash_modal_body a[href="#notes-outer"]').parent().index();(0,_jquery.default)(".ui-tabs").tabs("option","active",notesTabIndex)}()}));var resizeFallbackPlayerListener=_lodash.default.throttle(resizeFallbackPlayer,200);window.addEventListener("resize",resizeFallbackPlayerListener),window.addEventListener("scroll",resizeFallbackPlayerListener),resizeFallbackPlayer(),$fallbackPlayer.parents(".modal").one("hidden.bs.modal",(function(){window.removeEventListener("resize",resizeFallbackPlayerListener),window.removeEventListener("scroll",resizeFallbackPlayerListener),videoPlayer.dispose()}))})),analyticsData={url:location.href,video:videoInfo.download,fallback:"code.org"};videoPlayer.on("ready",(function(){return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_LOADED,analyticsData)})),videoPlayer.on("play",(function(){return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_STARTED,analyticsData)})),videoPlayer.on("pause",(function(){return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_PAUSED,analyticsData)})),videoPlayer.on("ended",(function(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_ENDED,analyticsData),onVideoEnded()})),function showFallbackPlayerCaptionLink(inDialog){var mountPoint=document.getElementById("fallback-player-caption-dialog-link");mountPoint&&_reactDom.default.render(_react.default.createElement(_FallbackPlayerCaptionDialogLink.default,{inDialog}),mountPoint)}(videoInfo.inDialog)}function upgradeInsecureOptions(options){options.src&&(options.src=options.src.replace(/^http:\/\//,"//")),options.download&&(options.download=options.download.replace(/^http:\/\//,"//"))}videos.createVideoWithFallback=function(parentElement,options,width,height,fullWidth,roundedCorners){upgradeInsecureOptions(options);var video=createVideo(options);return fullWidth?(video.addClass("video-player-full-width"),parentElement.addClass("video-content-full-width"),width="100%",height="100%"):video.width(width).height(height),roundedCorners&&video.addClass("video-player-rounded-corners"),parentElement&&parentElement.append(video),setupVideoFallback(options,width,height),video},window.onYouTubeIframeAPIReady=function(){var player=new YT.Player("video",{events:{onReady:function onReady(event){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_LOADED,{url:location.href,video:player.getVideoUrl()})},onStateChange:function onStateChange(state){var amplitudeEvent=_defineProperty(_defineProperty(_defineProperty({},YT.PlayerState.PLAYING,_AnalyticsConstants.EVENTS.VIDEO_STARTED),YT.PlayerState.PAUSED,_AnalyticsConstants.EVENTS.VIDEO_PAUSED),YT.PlayerState.ENDED,_AnalyticsConstants.EVENTS.VIDEO_ENDED)[state.data];amplitudeEvent&&_AnalyticsReporter.default.sendEvent(amplitudeEvent,{url:location.href,video:player.getVideoUrl()}),state.data===YT.PlayerState.ENDED&&onVideoEnded()},onError:function onError(error){if(currentVideoOptions){var size=error.target.f.getBoundingClientRect();addFallbackVideoPlayer(currentVideoOptions,size.width,size.height)}}}})},videos.showVideoDialog=function(options,forceShowVideo){if(void 0===forceShowVideo&&(forceShowVideo=!1),void 0===options.onClose&&(options.onClose=function(){}),clientState.hasSeenVideo(options.key)&&!1===forceShowVideo)return options.onClose(),void(options.redirect&&(window.location.href=options.redirect));options.inDialog=!0,upgradeInsecureOptions(options);var body=(0,_jquery.default)("<div/>"),content=(0,_jquery.default)("#notes-content").contents().clone();content.find(".video-name").text(options.name),body.append(content);var video=createVideo(options);body.append(video);var notesDiv=(0,_jquery.default)('<div id="notes-outer"><div id="notes"/></div>');body.append(notesDiv),function getShowNotes(key,success,error){_jquery.default.ajax({url:"/notes/"+key,success,error})}(options.key,(function(data){notesDiv.children("#notes").html(data)}),(function(){!function openVideoTab(){var notesTabIndex=(0,_jquery.default)('.dash_modal_body a[href="#videoTabContainer"]').parent().index();(0,_jquery.default)(".ui-tabs").tabs("option","active",notesTabIndex)}(),body.find('a[href="#notes-outer"]').parent().remove(),body.tabs("refresh")}));var dialog=new Dialog({body,redirect:options.redirect}),$div=(0,_jquery.default)(dialog.div);$div.addClass("video-modal"),(0,_jquery.default)(MODAL_CLASS).on("remove",(function(){video.removeAttr("src"),options.onClose(),clientState.recordVideoSeen(options.key);var event=document.createEvent("Event");event.initEvent("videoHidden",!0,!0),document.dispatchEvent(event)}));var tabHandler=function tabHandler(event,ui){var tab=ui.tab||ui.newTab,videoElement=(0,_jquery.default)("#video");if("#video"===tab.find("a").attr("href"))videoElement.attr("src",options.src);else{video.removeAttr("src");var videoJSElement=document.querySelector(".video-js");videoJSElement&&(0,_video.default)(videoJSElement).pause()}var selected=tab.parents(".ui-tabs").tabs("option","active");try{window.sessionStorage.setItem("lastTab",selected)}catch(exc){console.log("Caught exception in sessionStorage.setItem: ",exc)}},lastTab=window.sessionStorage.getItem("lastTab");body.tabs({event:"click touchend",activate:tabHandler,create:tabHandler,active:null!==lastTab?lastTab:0});var download=(0,_jquery.default)("<a/>").append((0,_jquery.default)('<i class="fa fa-download" />')).addClass("download-video btn").css("float","left").attr("href",options.download).click((function(){return(0,_trackEvent.default)("downloadvideo","startdownloadvideo",options.key),!0}));"rtl"===document.dir&&download.css("float","right");var nav=$div.find(TAB_NAV_CLASS);nav.append(download);var fallbackPlayerLinkDiv=(0,_jquery.default)('<div id="fallback-player-caption-dialog-link"><a style="opacity: 0; pointer-events: none">'+_locale.default.fallbackVideoClosedCaptioningLink()+"</a></div>").css({"padding-right":"40px","padding-top":"9px","text-align":"right"});nav.append(fallbackPlayerLinkDiv);var resizeVideoPlayerListener=_lodash.default.throttle(resizeVideoPlayer,200);if(window.addEventListener("scroll",resizeVideoPlayerListener),window.addEventListener("resize",resizeVideoPlayerListener),resizeVideoPlayer(),currentVideoOptions=options,window.YT&&window.YT.loaded)window.onYouTubeIframeAPIReady();else{var tag=document.createElement("script");tag.src="https://www.youtube.com/iframe_api";var firstScriptTag=document.getElementsByTagName("script")[0];firstScriptTag.parentNode.insertBefore(tag,firstScriptTag)}dialog.show();var videoModal=(0,_jquery.default)(MODAL_CLASS);videoModal.on("ended",(function(){dialog.hide()}));var event=document.createEvent("Event");event.initEvent("videoShown",!0,!0),document.dispatchEvent(event);var shouldStillAdd=!0;videoModal.one("hidden.bs.modal",(function(){window.removeEventListener("resize",resizeVideoPlayerListener),window.removeEventListener("scroll",resizeVideoPlayerListener),shouldStillAdd=!1}));var divHeight=getVideoHeight();setupVideoFallback(options,$div.width(),divHeight,(function(){return shouldStillAdd}))},videos.onYouTubeBlocked=function(youTubeBlockedCallback,videoInfo){var key=videoInfo?videoInfo.key:void 0,noCookie=!videoInfo||-1!==videoInfo.src.indexOf("youtube-nocookie.com");testImageAccess(function youTubeAvailabilityEndpointURL(noCookie){var url=window.document.URL.toString();if(url.indexOf("force_youtube_fallback")>=0)return"https://unreachable-test-subdomain.example.com/favicon.ico";if(url.indexOf("force_youtube_player")>=0)return"https://code.org/images/favicon.ico";return noCookie?"https://www.youtube-nocookie.com/favicon.ico":"https://www.youtube.com/favicon.ico"}(noCookie)+"?"+Math.random(),(function(){(0,_trackEvent.default)("showvideo","startVideoYouTube",key)}),(function(){(0,_trackEvent.default)("showvideo","startVideoFallback",key),youTubeBlockedCallback()}))}},"./src/fontConstants.js":module=>{module.exports={"metropolis-font":"'Metropolis', sans-serif","main-font":"'Metropolis', sans-serif","thin-font-weight":"100","extra-light-font-weight":"200","light-font-weight":"300","regular-font-weight":"400","medium-font-weight":"500","semi-bold-font-weight":"600","bold-font-weight":"700","extra-bold-font-weight":"800","black-font-weight":"900","main-font-thin":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"normal"},"main-font-thin-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"italic"},"main-font-extra-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"normal"},"main-font-extra-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"italic"},"main-font-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"normal"},"main-font-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"italic"},"main-font-regular":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"normal"},"main-font-regular-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"italic"},"main-font-medium":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"normal"},"main-font-medium-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"italic"},"main-font-semi-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"normal"},"main-font-semi-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"italic"},"main-font-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"normal"},"main-font-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"italic"},"main-font-extra-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"normal"},"main-font-extra-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"italic"},"main-font-black":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"normal"},"main-font-black-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"italic"},"barlowSemiCondensed-semibold":"'Barlow Semi Condensed Semibold', sans-serif","barlowSemiCondensed-medium":"'Barlow Semi Condensed Medium', sans-serif","code-font":"'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace","font-awesome-core-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css'","font-awesome-brands-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css'","font-awesome-solid-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css'","font-awesome-regular-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css'","font-awesome-v4-fonts-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css'","font-awesome-v4-shims-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css'"}},"./src/lib/util/urlHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaTagDescription=exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION=exports.ADD_A_PERSONAL_LOGIN_HELP_URL=void 0,exports.pegasus=function pegasus(relativeUrl){if(window.dashboard&&window.dashboard.CODE_ORG_URL)return window.dashboard.CODE_ORG_URL+relativeUrl;return relativeUrl},exports.setPegasusOrigin=function setPegasusOrigin(origin){window.dashboard=window.dashboard||{},window.dashboard.CODE_ORG_URL=origin},exports.setStudioOrigin=function setStudioOrigin(origin){window.pegasus=window.pegasus||{},window.pegasus.STUDIO_URL=origin},exports.studio=function studio(relativeUrl){if(window.pegasus&&window.pegasus.STUDIO_URL)return window.pegasus.STUDIO_URL+relativeUrl;return relativeUrl};var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}exports.metaTagDescription=_lodash.default.memoize((function(relativeUrl){return fetch(relativeUrl).then((function(response){return Promise.all([response.status,response.text()])})).then((function(_ref){var _ref2=_slicedToArray(_ref,2),status=_ref2[0],text=_ref2[1];return status<200||status>=300?relativeUrl:(0,_jquery.default)(text).filter("meta[name='description']").attr("content")||relativeUrl})).catch((function(error){return relativeUrl}))})),exports.ADD_A_PERSONAL_LOGIN_HELP_URL="https://support.code.org/hc/en-us/articles/115001475131-Adding-a-personal-login-to-a-teacher-created-account",exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION="https://support.code.org/hc/en-us/articles/360015983631"},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/constants.js"),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/templates/FallbackPlayerCaptionDialogLink.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_urlHelpers=__webpack_require__("./src/lib/util/urlHelpers.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var FallbackPlayerCaptionDialogLink=exports.default=function(_React$Component){function FallbackPlayerCaptionDialogLink(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",{open:!1}),_defineProperty(_this,"open",(function(){return _this.setState({open:!0})})),_defineProperty(_this,"close",(function(){return _this.setState({open:!1})})),_this}return _inheritsLoose(FallbackPlayerCaptionDialogLink,_React$Component),FallbackPlayerCaptionDialogLink.prototype.render=function render(){return _react.default.createElement("div",null,_react.default.createElement(FallbackPlayerCaptionDialog,{isDialogOpen:this.state.open,handleClose:this.close}),!this.props.inDialog&&_react.default.createElement("span",null,"|  "),_react.default.createElement("a",{className:"ui-test-fallback-player-caption-dialog-link",onClick:this.open,style:styles.link},_locale.default.fallbackVideoClosedCaptioningLink()))},FallbackPlayerCaptionDialogLink}(_react.default.Component);_defineProperty(FallbackPlayerCaptionDialogLink,"propTypes",{inDialog:_propTypes.default.bool});var FallbackPlayerCaptionDialog=function(_Component){function FallbackPlayerCaptionDialog(){return _Component.apply(this,arguments)||this}return _inheritsLoose(FallbackPlayerCaptionDialog,_Component),FallbackPlayerCaptionDialog.prototype.render=function render(){return _react.default.createElement(_BaseDialog.default,{useUpdatedStyles:!0,isOpen:this.props.isDialogOpen,style:styles.dialog,handleClose:this.props.handleClose},_react.default.createElement("h2",{className:"ui-test-fallback-player-caption-dialog"},_locale.default.fallbackVideoClosedCaptioningDialogHeading()),_react.default.createElement("div",null,_locale.default.fallbackVideoClosedCaptioningDialogBody()),_react.default.createElement("div",{style:styles.dialogLinkContainer},_react.default.createElement("a",{style:styles.dialogLink,href:(0,_urlHelpers.pegasus)("/educate/it"),target:"_blank",rel:"noopener noreferrer"},_locale.default.fallbackVideoClosedCaptioningDialogBodyLink())),_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,className:"ui-test-fallback-player-caption-dialog-close",text:_locale.default.fallbackVideoClosedCaptioningDialogClose(),onClick:this.props.handleClose,color:_Button.default.ButtonColor.brandSecondaryDefault})))},FallbackPlayerCaptionDialog}(_react.Component);_defineProperty(FallbackPlayerCaptionDialog,"propTypes",{isDialogOpen:_propTypes.default.bool.isRequired,handleClose:_propTypes.default.func});var styles={link:{cursor:"pointer"},dialog:function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({paddingLeft:20,paddingRight:20,paddingBottom:20,textAlign:"left"},_fontConstants.default["main-font-regular"]),dialogLinkContainer:{marginTop:20},dialogLink:{color:"#005580"}};module.exports=exports.default},"./src/templates/VideoThumbnail.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _videos=__webpack_require__("./src/code-studio/videos.js"),_propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_types=__webpack_require__("./src/templates/types.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var VideoThumbnail=exports.default=function(_Component){function VideoThumbnail(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"onThumbnailClick",(function(){var video=_this.props.video;_this.props.onClick&&_this.props.onClick(),_this.props.openInNewTab?window.open(video.src,"_blank","noopener,noreferrer"):(0,_videos.showVideoDialog)({src:video.src,name:video.name,key:video.key,download:video.download,thumbnail:video.thumbnail,enable_fallback:video.enable_fallback,autoplay:video.autoplay},!0)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(VideoThumbnail,_Component),VideoThumbnail.prototype.render=function render(){var video=this.props.video;return _react.default.createElement("a",{style:styles.videoLink,onClick:this.onThumbnailClick},_react.default.createElement("img",{style:styles.videoThumbnail,src:video.thumbnail,alt:video.name}),_react.default.createElement("span",null,video.name))},VideoThumbnail}(_react.Component);_defineProperty(VideoThumbnail,"propTypes",{video:_types.videoDataShape,onClick:_propTypes.default.func,openInNewTab:_propTypes.default.bool});var styles={videoLink:{display:"inline-block",margin:8,fontWeight:"bold",fontSize:16,lineHeight:"25px",cursor:"pointer"},videoThumbnail:{borderRadius:5,height:40,width:"auto",marginRight:8}};module.exports=exports.default},"./src/templates/teacherDashboard/DialogFooter.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var style={aboveFooter:{height:"90px"},footer:{position:"absolute",height:"100px",padding:"0 20px",left:"0",right:"0",bottom:"0",background:"white",zIndex:"500"},buttonRow:{display:"flex",flexFlow:"row",justifyContent:"space-between"},rightAlign:{justifyContent:"flex-end"}};_defineProperty(exports.default=function(_Component){function DialogFooter(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(DialogFooter,_Component),DialogFooter.prototype.render=function render(){var buttonRowStyle=this.props.rightAlign?_objectSpread(_objectSpread({},style.buttonRow),style.rightAlign):style.buttonRow;return _react.default.createElement("div",null,_react.default.createElement("div",{style:style.aboveFooter}),_react.default.createElement("div",{style:style.footer},_react.default.createElement("hr",null),_react.default.createElement("div",{style:buttonRowStyle},this.props.children)))},DialogFooter}(_react.Component),"propTypes",{rightAlign:_propTypes.default.bool,children:_propTypes.default.any}),module.exports=exports.default},"./src/templates/types.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.videoDataShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));exports.videoDataShape=_propTypes.default.shape({src:_propTypes.default.string.isRequired,name:_propTypes.default.string,key:_propTypes.default.string,download:_propTypes.default.string,thumbnail:_propTypes.default.string,enable_fallback:_propTypes.default.bool,autoplay:_propTypes.default.bool})},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",brand_teal_5:"#DFF2F4",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_500:"#94979B",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/VideoThumbnail.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Simple=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_VideoThumbnail=_interopRequireDefault(__webpack_require__("./src/templates/VideoThumbnail.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_VideoThumbnail.default};(exports.Simple=function Template(args){return _react.default.createElement(_VideoThumbnail.default,args)}.bind({})).args={video:{autoplay:!0,download:"https://videos.code.org/2015/csp/applab/functions.mp4",enable_fallback:!0,key:"csp_applab_functions",name:"Introduction to Functions",src:"https://www.youtube-nocookie.com/embed/yPWQfa4CHbw/?autoplay=1&enablejsapi=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=1&v=yPWQfa4CHbw&wmode=transparent",thumbnail:"https://studio.code.org/c/video_thumbnails/csp_applab_conditionals_2B.jpg"}}},"./node_modules/xtend/immutable.js":module=>{module.exports=function extend(){for(var target={},i=0;i<arguments.length;i++){var source=arguments[i];for(var key in source)hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};var hasOwnProperty=Object.prototype.hasOwnProperty},"?34aa":()=>{}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLVZpZGVvVGh1bWJuYWlsLXN0b3J5LmNkOGU3ZWZkLmlmcmFtZS5idW5kbGUuanMiLCJtYXBwaW5ncyI6IjswK0NBTU8sTUFBTUEsY0FBZ0IsUUFFaEJDLHFCQUF1QixDQUNsQyxjQUFpQixpQkFHTkMsVUFBWSxDQUN2QixZQUFlLGNBQ2YsV0FBYyxhQUNkLE9BQVUsU0FDVixVQUFhLFlBQ2IsTUFBUyxRQUNULGFBQWdCLGdCQUdMQyxZQUFjLENBQ3pCLFVBQWEsWUFDYixVQUFhLFlBQ2IsUUFBVyxVQUNYLE9BQVUsU0FDVixVQUFhLFlBQ2IsZ0JBQW1CLGtCQUNuQixnQkFBbUIsa0JBQ25CLGNBQWlCLGdCQUNqQixtQkFBc0IscUJBQ3RCLHFCQUF3Qix3QkFHYkMsaUJBQW1CLENBQzlCLEtBQVEsT0FDUixRQUFXLFVBQ1gsTUFBUyxRQUNULGlCQUFvQixtQkFDcEIsT0FBVSxTQUNWLE9BQVUsVUFHQ0MsbUJBQXFCLENBQ2hDLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsS0FDQSxLQUNBLEtBQ0EsU0FHV0MsYUFBZSxLQUVmQyxrQkFBb0IsQ0FDL0IsSUFBTyxNQUNQLHFDQUF3Qyx1Q0FDeEMsaUJBQW9CLG9CQUdUQyw4QkFBZ0MsQ0FDM0MsU0FDQSxTQUNBLFVBQ0EsVUFDQSxTQUNBLFdBQ0EsdUJBQ0EscUJBQ0EsaUJBQ0Esb0JBQ0EsV0FDQSxpQkFDQSxzQkFDQSxTQUNBLFNBQ0EsU0FDQSxhQUNBLFlBQ0EsYUFDQSxRQUNBLFNBQ0EsYUFDQSxjQUdXQywyQkFBNkIsQ0FDeEMsU0FDQSxTQUNBLFVBQ0EsVUFDQSxTQUNBLFdBQ0EsdUJBQ0EscUJBQ0EsaUJBQ0Esb0JBQ0EsV0FDQSxpQkFDQSxzQkFDQSxTQUNBLFNBQ0EsU0FDQSxhQUNBLFlBQ0EsYUFDQSxRQUNBLFNBQ0EsYUFDQSxhQUNBLFNBQ0EsVUFDQSxhQUdXQyxxQ0FBdUMsQ0FDbEQsU0FDQSxXQUdXQyxlQUFpQixDQUM1QixnQkFBbUIs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LG9CQUFBLGtDQUNBeW9CLGdCQUFBeGYsdUJBQUFqSixvQkFBQSx1Q0FBOEMsU0FBQWlKLHVCQUFBQyxLQUFBLE9BQUFBLEtBQUFBLElBQUFDLFdBQUFELElBQUEsU0FBQUEsSUFBQSxDQUFBaEosUUFBQUEsUUFFL0IsQ0FDYndvQixVQUFXekgsZ0JBQUFBLFVBS00vZ0IsUUFBQUEsT0FGRixTQUFYeW9CLFNBQVczTyxNQUFJLE9BQUlsUCxPQUFBLFFBQUE5RSxjQUFDeWlCLGdCQUFBLFFBQW1Cek8sS0FBUSxFQUV0Qk4sS0FBSyxDQUFDLElBQzlCTSxLQUFPLENBQ1ozSixNQUFPLENBQ0wzQixVQUFVLEVBQ1ZFLFNBQVUsd0RBQ1ZiLGlCQUFpQixFQUNqQi9KLElBQUssdUJBQ0wrQyxLQUFNLDRCQUNOSixJQUFLLGtLQUNMZ0ksVUFDRSw0SENuQk56TSxPQUFPaEMsUUFJUCxTQUFTMG9CLFNBR0wsSUFGQSxJQUFJaFcsT0FBUyxDQUFDLEVBRUx4SSxFQUFJLEVBQUdBLEVBQUkxRSxVQUFVQyxPQUFReUUsSUFBSyxDQUN2QyxJQUFJN0YsT0FBU21CLFVBQVUwRSxHQUV2QixJQUFLLElBQUlwRyxPQUFPTyxPQUNSb0QsZUFBZUMsS0FBS3JELE9BQVFQLE9BQzVCNE8sT0FBTzVPLEtBQU9PLE9BQU9QLEtBR2pDLENBRUEsT0FBTzRPLE1BQ1gsRUFoQkEsSUFBSWpMLGVBQWlCOUQsT0FBTzZELFVBQVVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vZ2VuZXJhdGVkLXNjcmlwdHMvc2hhcmVkQ29uc3RhbnRzLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9hY3Rpdml0eVV0aWxzLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9jbGllbnRTdGF0ZS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vdXJsX3Rlc3QuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2NvZGUtc3R1ZGlvL3V0aWxzLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby92aWRlb3MuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2ZvbnRDb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2xpYi91dGlsL3VybEhlbHBlcnMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9CYXNlRGlhbG9nLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL0ZhbGxiYWNrUGxheWVyQ2FwdGlvbkRpYWxvZ0xpbmsuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvVmlkZW9UaHVtYm5haWwuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvdGVhY2hlckRhc2hib2FyZC9EaWFsb2dGb290ZXIuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvdHlwZXMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3V0aWwvY29sb3IuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9WaWRlb1RodW1ibmFpbC5zdG9yeS5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3h0ZW5kL2ltbXV0YWJsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG4vLyBUaGlzIGlzIGEgZ2VuZXJhdGVkIGZpbGUgYW5kIFNIT1VMRCBOT1QgQkUgRURJVEVEIE1BTlVBTExZISFcbi8vIENvbnRlbnRzIGFyZSBnZW5lcmF0ZWQgYXMgcGFydCBvZiBncnVudCBidWlsZFxuLy8gU291cmNlIG9mIHRydXRoIGlzIGxpYi9jZG8vc2hhcmVkX2NvbnN0YW50cy5yYiBhbmQgZmlsZXMgaW4gbGliL2Nkby9zaGFyZWRfY29uc3RhbnRzL1xuXG5leHBvcnQgY29uc3QgRGVmYXVsdExvY2FsZSA9ICdlbi1VUyc7XG5cbmV4cG9ydCBjb25zdCBBcnRpc3RBdXRvcnVuT3B0aW9ucyA9IHtcbiAgXCJmdWxsX2F1dG9fcnVuXCI6IFwiRlVMTF9BVVRPX1JVTlwiXG59O1xuXG5leHBvcnQgY29uc3QgTGV2ZWxLaW5kID0ge1xuICBcInBlZXJfcmV2aWV3XCI6IFwicGVlcl9yZXZpZXdcIixcbiAgXCJhc3Nlc3NtZW50XCI6IFwiYXNzZXNzbWVudFwiLFxuICBcInB1enpsZVwiOiBcInB1enpsZVwiLFxuICBcInVucGx1Z2dlZFwiOiBcInVucGx1Z2dlZFwiLFxuICBcImxldmVsXCI6IFwibGV2ZWxcIixcbiAgXCJzdGFnZV9leHRyYXNcIjogXCJzdGFnZV9leHRyYXNcIlxufTtcblxuZXhwb3J0IGNvbnN0IExldmVsU3RhdHVzID0ge1xuICBcIm5vdF90cmllZFwiOiBcIm5vdF90cmllZFwiLFxuICBcInN1Ym1pdHRlZFwiOiBcInN1Ym1pdHRlZFwiLFxuICBcInBlcmZlY3RcIjogXCJwZXJmZWN0XCIsXG4gIFwicGFzc2VkXCI6IFwicGFzc2VkXCIsXG4gIFwiYXR0ZW1wdGVkXCI6IFwiYXR0ZW1wdGVkXCIsXG4gIFwicmV2aWV3X2FjY2VwdGVkXCI6IFwicmV2aWV3X2FjY2VwdGVkXCIsXG4gIFwicmV2aWV3X3JlamVjdGVkXCI6IFwicmV2aWV3X3JlamVjdGVkXCIsXG4gIFwiZG90c19kaXNhYmxlZFwiOiBcImRvdHNfZGlzYWJsZWRcIixcbiAgXCJmcmVlX3BsYXlfY29tcGxldGVcIjogXCJmcmVlX3BsYXlfY29tcGxldGVcIixcbiAgXCJjb21wbGV0ZWRfYXNzZXNzbWVudFwiOiBcImNvbXBsZXRlZF9hc3Nlc3NtZW50XCJcbn07XG5cbmV4cG9ydCBjb25zdCBTZWN0aW9uTG9naW5UeXBlID0ge1xuICBcIndvcmRcIjogXCJ3b3JkXCIsXG4gIFwicGljdHVyZVwiOiBcInBpY3R1cmVcIixcbiAgXCJlbWFpbFwiOiBcImVtYWlsXCIsXG4gIFwiZ29vZ2xlX2NsYXNzcm9vbVwiOiBcImdvb2dsZV9jbGFzc3Jvb21cIixcbiAgXCJjbGV2ZXJcIjogXCJjbGV2ZXJcIixcbiAgXCJsdGlfdjFcIjogXCJsdGlfdjFcIlxufTtcblxuZXhwb3J0IGNvbnN0IFN0dWRlbnRHcmFkZUxldmVscyA9IFtcbiAgXCJLXCIsXG4gIFwiMVwiLFxuICBcIjJcIixcbiAgXCIzXCIsXG4gIFwiNFwiLFxuICBcIjVcIixcbiAgXCI2XCIsXG4gIFwiN1wiLFxuICBcIjhcIixcbiAgXCI5XCIsXG4gIFwiMTBcIixcbiAgXCIxMVwiLFxuICBcIjEyXCIsXG4gIFwiT3RoZXJcIlxuXTtcblxuZXhwb3J0IGNvbnN0IFBsR3JhZGVWYWx1ZSA9ICdwbCc7XG5cbmV4cG9ydCBjb25zdCBQb3N0TWlsZXN0b25lTW9kZSA9IHtcbiAgXCJhbGxcIjogXCJhbGxcIixcbiAgXCJzdWNjZXNzZnVsX3J1bnNfYW5kX2ZpbmFsX2xldmVsX29ubHlcIjogXCJzdWNjZXNzZnVsX3J1bnNfYW5kX2ZpbmFsX2xldmVsX29ubHlcIixcbiAgXCJmaW5hbF9sZXZlbF9vbmx5XCI6IFwiZmluYWxfbGV2ZWxfb25seVwiXG59O1xuXG5leHBvcnQgY29uc3QgQWx3YXlzUHVibGlzaGFibGVQcm9qZWN0VHlwZXMgPSBbXG4gIFwiYXJ0aXN0XCIsXG4gIFwiZnJvemVuXCIsXG4gIFwicGxheWxhYlwiLFxuICBcImd1bWJhbGxcIixcbiAgXCJpY2VhZ2VcIixcbiAgXCJpbmZpbml0eVwiLFxuICBcIm1pbmVjcmFmdF9hZHZlbnR1cmVyXCIsXG4gIFwibWluZWNyYWZ0X2Rlc2lnbmVyXCIsXG4gIFwibWluZWNyYWZ0X2hlcm9cIixcbiAgXCJtaW5lY3JhZnRfYXF1YXRpY1wiLFxuICBcInN0YXJ3YXJzXCIsXG4gIFwic3RhcndhcnNibG9ja3NcIixcbiAgXCJzdGFyd2Fyc2Jsb2Nrc19ob3VyXCIsXG4gIFwiZmxhcHB5XCIsXG4gIFwiYm91bmNlXCIsXG4gIFwic3BvcnRzXCIsXG4gIFwiYmFza2V0YmFsbFwiLFxuICBcImFydGlzdF9rMVwiLFxuICBcInBsYXlsYWJfazFcIixcbiAgXCJkYW5jZVwiLFxuICBcInBvZXRyeVwiLFxuICBcInBvZXRyeV9ob2NcIixcbiAgXCJ0aGViYWRndXlzXCJcbl07XG5cbmV4cG9ydCBjb25zdCBBbGxQdWJsaXNoYWJsZVByb2plY3RUeXBlcyA9IFtcbiAgXCJhcnRpc3RcIixcbiAgXCJmcm96ZW5cIixcbiAgXCJwbGF5bGFiXCIsXG4gIFwiZ3VtYmFsbFwiLFxuICBcImljZWFnZVwiLFxuICBcImluZmluaXR5XCIsXG4gIFwibWluZWNyYWZ0X2FkdmVudHVyZXJcIixcbiAgXCJtaW5lY3JhZnRfZGVzaWduZXJcIixcbiAgXCJtaW5lY3JhZnRfaGVyb1wiLFxuICBcIm1pbmVjcmFmdF9hcXVhdGljXCIsXG4gIFwic3RhcndhcnNcIixcbiAgXCJzdGFyd2Fyc2Jsb2Nrc1wiLFxuICBcInN0YXJ3YXJzYmxvY2tzX2hvdXJcIixcbiAgXCJmbGFwcHlcIixcbiAgXCJib3VuY2VcIixcbiAgXCJzcG9ydHNcIixcbiAgXCJiYXNrZXRiYWxsXCIsXG4gIFwiYXJ0aXN0X2sxXCIsXG4gIFwicGxheWxhYl9rMVwiLFxuICBcImRhbmNlXCIsXG4gIFwicG9ldHJ5XCIsXG4gIFwicG9ldHJ5X2hvY1wiLFxuICBcInRoZWJhZGd1eXNcIixcbiAgXCJhcHBsYWJcIixcbiAgXCJnYW1lbGFiXCIsXG4gIFwic3ByaXRlbGFiXCJcbl07XG5cbmV4cG9ydCBjb25zdCBDb25kaXRpb25hbGx5UHVibGlzaGFibGVQcm9qZWN0VHlwZXMgPSBbXG4gIFwiYXBwbGFiXCIsXG4gIFwiZ2FtZWxhYlwiXG5dO1xuXG5leHBvcnQgY29uc3QgQWJ1c2VDb25zdGFudHMgPSB7XG4gIFwiQUJVU0VfVEhSRVNIT0xEXCI6IDE1XG59O1xuXG5leHBvcnQgY29uc3QgRXJyb3JTZXZlcml0eUxldmVscyA9IHtcbiAgXCJXQVJOXCI6IDIsXG4gIFwiRVJST1JcIjogMyxcbiAgXCJGQVRBTFwiOiA0XG59O1xuXG5leHBvcnQgY29uc3QgUmVzdHJpY3RlZFB1Ymxpc2hQcm9qZWN0VHlwZXMgPSBbXG4gIFwic3ByaXRlbGFiXCJcbl07XG5cbmV4cG9ydCBjb25zdCBSdWJyaWNVbmRlcnN0YW5kaW5nTGV2ZWxzID0ge1xuICBcIkVYVEVOU0lWRVwiOiAzLFxuICBcIkNPTlZJTkNJTkdcIjogMixcbiAgXCJMSU1JVEVEXCI6IDEsXG4gIFwiTk9ORVwiOiAwXG59O1xuXG5leHBvcnQgY29uc3QgUnVicmljQWlFdmFsdWF0aW9uU3RhdHVzID0ge1xuICBcIlFVRVVFRFwiOiAwLFxuICBcIlJVTk5JTkdcIjogMSxcbiAgXCJTVUNDRVNTXCI6IDIsXG4gIFwiRkFJTFVSRVwiOiAxMDAwLFxuICBcIlBJSV9WSU9MQVRJT05cIjogMTAwMSxcbiAgXCJQUk9GQU5JVFlfVklPTEFUSU9OXCI6IDEwMDIsXG4gIFwiUkVRVUVTVF9UT09fTEFSR0VcIjogMTAwM1xufTtcblxuZXhwb3J0IGNvbnN0IEVtYWlsTGlua3MgPSB7XG4gIFwiUFJJVkFDWV9QT0xJQ1lfVVJMXCI6IFwiaHR0cHM6Ly9jb2RlLm9yZy9wcml2YWN5XCIsXG4gIFwiQ09OVEFDVF9VU19VUkxcIjogXCJodHRwczovL2NvZGUub3JnL2NvbnRhY3RcIixcbiAgXCJUT1NfVVJMXCI6IFwiaHR0cHM6Ly9jb2RlLm9yZy90b3NcIixcbiAgXCJTVFVERU5UX1BSSVZBQ1lfUExFREdFX1VSTFwiOiBcImh0dHBzOi8vc3R1ZGVudHByaXZhY3lwbGVkZ2Uub3JnL3NpZ25hdG9yaWVzL1wiLFxuICBcIkNPTU1PTl9TRU5TRV9NRURJQV9VUkxcIjogXCJodHRwczovL3ByaXZhY3kuY29tbW9uc2Vuc2Uub3JnL2V2YWx1YXRpb24vY29kZS5vcmdcIixcbiAgXCJDRE9fU1VQUE9SVF9NQUlMVE9cIjogXCJtYWlsdG86c3VwcG9ydEBjb2RlLm9yZ1wiXG59O1xuXG5leHBvcnQgY29uc3QgQ2hpbGRBY2NvdW50Q29tcGxpYW5jZVN0YXRlcyA9IHtcbiAgXCJMT0NLRURfT1VUXCI6IFwibFwiLFxuICBcIlJFUVVFU1RfU0VOVFwiOiBcInNcIixcbiAgXCJQRVJNSVNTSU9OX0dSQU5URURcIjogXCJnXCJcbn07XG5cbmV4cG9ydCBjb25zdCBDZW5zdXNDb25zdGFudHMgPSB7XG4gIFwiQ1VSUkVOVF9DRU5TVVNfU0NIT09MX1lFQVJcIjogMjAyM1xufTtcblxuZXhwb3J0IGNvbnN0IERhbmNlU29uZ01hbmlmZXN0RmlsZW5hbWUgPSAnc29uZ01hbmlmZXN0MjAyNF92Mi5qc29uJztcblxuZXhwb3J0IGNvbnN0IEFpSW50ZXJhY3Rpb25TdGF0dXMgPSB7XG4gIFwiRVJST1JcIjogXCJlcnJvclwiLFxuICBcIlBJSV9WSU9MQVRJT05cIjogXCJwaWlfdmlvbGF0aW9uXCIsXG4gIFwiUFJPRkFOSVRZX1ZJT0xBVElPTlwiOiBcInByb2Zhbml0eV92aW9sYXRpb25cIixcbiAgXCJPS1wiOiBcIm9rXCIsXG4gIFwiVU5LTk9XTlwiOiBcInVua25vd25cIlxufTtcblxuZXhwb3J0IGNvbnN0IEFpY2hhdEVycm9yVHlwZSA9IHtcbiAgXCJQUk9GQU5JVFlfTU9ERUxcIjogXCJwcm9mYW5pdHlfbW9kZWxcIixcbiAgXCJQUk9GQU5JVFlfVVNFUlwiOiBcInByb2Zhbml0eV91c2VyXCJcbn07XG5cbmV4cG9ydCBjb25zdCBBaVR1dG9ySW50ZXJhY3Rpb25TdGF0dXMgPSB7XG4gIFwiRVJST1JcIjogXCJlcnJvclwiLFxuICBcIlBJSV9WSU9MQVRJT05cIjogXCJwaWlfdmlvbGF0aW9uXCIsXG4gIFwiUFJPRkFOSVRZX1ZJT0xBVElPTlwiOiBcInByb2Zhbml0eV92aW9sYXRpb25cIixcbiAgXCJPS1wiOiBcIm9rXCIsXG4gIFwiVU5LTk9XTlwiOiBcInVua25vd25cIlxufTtcblxuZXhwb3J0IGNvbnN0IEFpVHV0b3JUeXBlcyA9IHtcbiAgXCJDT01QSUxBVElPTlwiOiBcImNvbXBpbGF0aW9uXCIsXG4gIFwiVkFMSURBVElPTlwiOiBcInZhbGlkYXRpb25cIixcbiAgXCJHRU5FUkFMX0NIQVRcIjogXCJnZW5lcmFsX2NoYXRcIlxufTtcblxuZXhwb3J0IGNvbnN0IEZlYXR1cmVkUHJvamVjdFN0YXR1cyA9IHtcbiAgXCJhY3RpdmVcIjogXCJhY3RpdmVcIixcbiAgXCJib29rbWFya2VkXCI6IFwiYm9va21hcmtlZFwiLFxuICBcImFyY2hpdmVkXCI6IFwiYXJjaGl2ZWRcIlxufTtcblxuZXhwb3J0IGNvbnN0IEZlYXR1cmVkUHJvamVjdENvbnN0YW50cyA9IHtcbiAgXCJNQVhfUkVRVUVTVFNfUEVSX0NBVEVHT1JZXCI6IDE1XG59O1xuXG5leHBvcnQgY29uc3QgTG1zTGlua3MgPSB7XG4gIFwiSU5URUdSQVRJT05fR1VJREVfVVJMXCI6IFwiaHR0cHM6Ly9zdXBwb3J0LmNvZGUub3JnL2hjL2VuLXVzL2FydGljbGVzLzIzMTIwMDE0NDU5NDA1LUxlYXJuaW5nLU1hbmFnZW1lbnQtU3lzdGVtLUxNUy1hbmQtU2luZ2xlLVNpZ24tT24tU1NPLUludGVncmF0aW9ucy1hbmQtU3VwcG9ydC1mb3ItQ29kZS1vcmdcIixcbiAgXCJJTlNUQUxMX0lOU1RSVUNUSU9OU19VUkxcIjogXCJodHRwczovL3N1cHBvcnQuY29kZS5vcmcvaGMvZW4tdXMvYXJ0aWNsZXMvMjM2MjE5MDc1MzM5NjUtSW5zdGFsbC1Db2RlLW9yZy1JbnRlZ3JhdGlvbnMtZm9yLXlvdXItTGVhcm5pbmctTWFuYWdlbWVudC1TeXN0ZW1cIixcbiAgXCJJTlNUQUxMX0dVSURFX0ZPUl9DQU5WQVNfVVJMXCI6IFwiaHR0cHM6Ly9zdXBwb3J0LmNvZGUub3JnL2hjL2VuLXVzL2FydGljbGVzLzIzMTIzMjczNzgzNDM3LUluc3RhbGwtdGhlLUNvZGUtb3JnLUludGVncmF0aW9uLWZvci1DYW52YXNcIixcbiAgXCJST1NURVJfU1lOQ19JTlNUUlVDVElPTlNfVVJMXCI6IFwiaHR0cHM6Ly9zdXBwb3J0LmNvZGUub3JnL2hjL2VuLXVzL2FydGljbGVzLzIzNjIxOTc4NjU0NjA1LVN5bmMtUm9zdGVycy13aXRoLXlvdXItTGVhcm5pbmctTWFuYWdlbWVudC1TeXN0ZW1cIixcbiAgXCJJTlRFR1JBVElPTl9FQVJMWV9BQ0NFU1NfVVJMXCI6IFwiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZm9ybXMvZC9lLzFGQUlwUUxTY2pmVlI0Q1pzOFV0ZjV2STRtejNlMXE4dmRINlJOSWdUVVd5Z1pYTjBvb3ZCU1FnL3ZpZXdmb3JtXCIsXG4gIFwiSU5URUdSQVRJT05fQlVHX1JFUE9SVF9VUkxcIjogXCJodHRwczovL3N1cHBvcnQuY29kZS5vcmcvaGMvZW4tdXMvcmVxdWVzdHMvbmV3P3RpY2tldF9mb3JtX2lkPTE0OTk4NDk0NzM4ODI5JnRmXzIzODg5NzA4PWxtc19lYWZcIixcbiAgXCJBRERJVElPTkFMX0ZFRURCQUNLX1VSTFwiOiBcImh0dHBzOi8vc3R1ZGlvLmNvZGUub3JnL2Zvcm0vbG1zX2ludGVncmF0aW9uX21vZGFsX2ZlZWRiYWNrXCIsXG4gIFwiU1VQUE9SVEVEX01FVEhPRFNfVVJMXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2NvZGUtZG90LW9yZy9jb2RlLWRvdC1vcmcvYmxvYi9zdGFnaW5nL2RvY3MvbHRpLWludGVncmF0aW9uLm1kI29wdGlvbi0yLW1hbnVhbC1lbnRyeVwiXG59O1xuXG5leHBvcnQgY29uc3QgVXNlclR5cGVzID0ge1xuICBcIlNUVURFTlRcIjogXCJzdHVkZW50XCIsXG4gIFwiVEVBQ0hFUlwiOiBcInRlYWNoZXJcIlxufTtcbiIsIi8qKlxuICogQSBzZXQgb2YgdXRpbGl0eSBmdW5jdGlvbnMgbWFkZSBmb3IgZGVhbGluZyB3aXRoIGFjdGl2aXRpZXMgZWFzaWVyLlxuICovXG5cbmltcG9ydCB7VGVzdFJlc3VsdHN9IGZyb20gJ0BjZG8vYXBwcy9jb25zdGFudHMnO1xuaW1wb3J0IHtMZXZlbFN0YXR1c30gZnJvbSAnQGNkby9nZW5lcmF0ZWQtc2NyaXB0cy9zaGFyZWRDb25zdGFudHMnO1xuXG4vKipcbiAqIFNlZSBBcHBsaWNhdGlvbkhlbHBlciNhY3Rpdml0eV9jc3NfY2xhc3MuXG4gKiBAcGFyYW0gcmVzdWx0XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBhY3Rpdml0eUNzc0NsYXNzID0gcmVzdWx0ID0+IHtcbiAgaWYgKCFyZXN1bHQgfHwgcmVzdWx0ID09PSBUZXN0UmVzdWx0cy5OT19URVNUU19SVU4pIHtcbiAgICByZXR1cm4gTGV2ZWxTdGF0dXMubm90X3RyaWVkO1xuICB9XG4gIGlmIChyZXN1bHQgPT09IFRlc3RSZXN1bHRzLlJFVklFV19BQ0NFUFRFRF9SRVNVTFQpIHtcbiAgICByZXR1cm4gTGV2ZWxTdGF0dXMucmV2aWV3X2FjY2VwdGVkO1xuICB9XG4gIGlmIChyZXN1bHQgPT09IFRlc3RSZXN1bHRzLlJFVklFV19SRUpFQ1RFRF9SRVNVTFQpIHtcbiAgICByZXR1cm4gTGV2ZWxTdGF0dXMucmV2aWV3X3JlamVjdGVkO1xuICB9XG4gIGlmIChyZXN1bHQgPT09IFRlc3RSZXN1bHRzLlNVQk1JVFRFRF9SRVNVTFQpIHtcbiAgICByZXR1cm4gTGV2ZWxTdGF0dXMuc3VibWl0dGVkO1xuICB9XG4gIGlmIChyZXN1bHQgPj0gVGVzdFJlc3VsdHMuTUlOSU1VTV9PUFRJTUFMX1JFU1VMVCkge1xuICAgIHJldHVybiBMZXZlbFN0YXR1cy5wZXJmZWN0O1xuICB9XG4gIGlmIChyZXN1bHQgPj0gVGVzdFJlc3VsdHMuTUlOSU1VTV9QQVNTX1JFU1VMVCkge1xuICAgIHJldHVybiBMZXZlbFN0YXR1cy5wYXNzZWQ7XG4gIH1cbiAgcmV0dXJuIExldmVsU3RhdHVzLmF0dGVtcHRlZDtcbn07XG5cbi8qKlxuICogSW52ZXJzZSBvZiB0aGUgYWJvdmUgZnVuY3Rpb24uXG4gKiBHaXZlbiBhIHN0YXR1cyBzdHJpbmcsIHJldHVybnMgYSByZXN1bHQgdmFsdWUuXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RhdHVzXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCByZXN1bHRGcm9tU3RhdHVzID0gc3RhdHVzID0+IHtcbiAgaWYgKHN0YXR1cyA9PT0gTGV2ZWxTdGF0dXMucmV2aWV3X2FjY2VwdGVkKSB7XG4gICAgcmV0dXJuIFRlc3RSZXN1bHRzLlJFVklFV19BQ0NFUFRFRF9SRVNVTFQ7XG4gIH1cbiAgaWYgKHN0YXR1cyA9PT0gTGV2ZWxTdGF0dXMucmV2aWV3X3JlamVjdGVkKSB7XG4gICAgcmV0dXJuIFRlc3RSZXN1bHRzLlJFVklFV19SRUpFQ1RFRF9SRVNVTFQ7XG4gIH1cbiAgaWYgKHN0YXR1cyA9PT0gTGV2ZWxTdGF0dXMuc3VibWl0dGVkKSB7XG4gICAgcmV0dXJuIFRlc3RSZXN1bHRzLlNVQk1JVFRFRF9SRVNVTFQ7XG4gIH1cbiAgaWYgKHN0YXR1cyA9PT0gTGV2ZWxTdGF0dXMuZnJlZV9wbGF5X2NvbXBsZXRlKSB7XG4gICAgcmV0dXJuIFRlc3RSZXN1bHRzLkZSRUVfUExBWTtcbiAgfVxuICBpZiAoc3RhdHVzID09PSBMZXZlbFN0YXR1cy5wZXJmZWN0KSB7XG4gICAgcmV0dXJuIFRlc3RSZXN1bHRzLkFMTF9QQVNTO1xuICB9XG4gIGlmIChzdGF0dXMgPT09IExldmVsU3RhdHVzLnBhc3NlZCkge1xuICAgIHJldHVybiBUZXN0UmVzdWx0cy5NSU5JTVVNX1BBU1NfUkVTVUxUO1xuICB9XG4gIHJldHVybiBUZXN0UmVzdWx0cy5OT19URVNUU19SVU47XG59O1xuXG4vKipcbiAqIFJldHVybnMgdGhlIFwiYmVzdFwiIG9mIHRoZSB0d28gcmVzdWx0cywgYXMgZGVmaW5lZCBpbiBhcHBzL3NyYy9jb25zdGFudHMuanMuXG4gKiBOb3RlIHRoYXQgdGhlcmUgYXJlIG5lZ2F0aXZlIHJlc3VsdHMgdGhhdCBjb3VudCBhcyBhbiBhdHRlbXB0LCBzbyB3ZSBjYW4ndFxuICoganVzdCB0YWtlIHRoZSBtYXhpbXVtLlxuICogQHBhcmFtIHtOdW1iZXJ9IGFcbiAqIEBwYXJhbSB7TnVtYmVyfSBiXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IFRoZSBiZXR0ZXIgcmVzdWx0LlxuICovXG5leHBvcnQgY29uc3QgbWVyZ2VBY3Rpdml0eVJlc3VsdCA9IChhLCBiKSA9PiB7XG4gIGEgPSBhIHx8IDA7XG4gIGIgPSBiIHx8IDA7XG4gIGlmIChhID09PSAwKSB7XG4gICAgcmV0dXJuIGI7XG4gIH1cbiAgaWYgKGIgPT09IDApIHtcbiAgICByZXR1cm4gYTtcbiAgfVxuICByZXR1cm4gTWF0aC5tYXgoYSwgYik7XG59O1xuIiwiLyoqXG4gKiBAZmlsZSBIZWxwZXIgZnVuY3Rpb25zIGZvciBhY2Nlc3NpbmcgY2xpZW50IHN0YXRlLiBUaGlzIHN0YXRlIGlzIHN0b3JlZCBpbiBhXG4gKiAgICAgICBjb21iaW5hdGlvbiBvZiBjb29raWVzIGFuZCBIVE1MNSB3ZWIgc3RvcmFnZS5cbiAqL1xuaW1wb3J0IHt0cnlTZXRTZXNzaW9uU3RvcmFnZX0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHttZXJnZUFjdGl2aXR5UmVzdWx0fSBmcm9tICcuL2FjdGl2aXR5VXRpbHMnO1xuXG4vLyBOb3RlOiBzZXNzaW9uU3RvcmFnZSBpcyBub3Qgc2hhcmVkIGJldHdlZW4gdGFicy5cbnZhciBzZXNzaW9uU3RvcmFnZSA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZTtcblxudmFyIGNsaWVudFN0YXRlID0gKG1vZHVsZS5leHBvcnRzID0ge30pO1xuXG5jbGllbnRTdGF0ZS5xdWVyeVBhcmFtcyA9IHJlcXVpcmUoJy4vdXRpbHMnKS5xdWVyeVBhcmFtcztcblxuLyoqXG4gKiBOdW1iZXIgb2YgZGF5cyBiZWZvcmUgY2xpZW50IHN0YXRlIGNvb2tpZSBleHBpcmVzLlxuICogQHR5cGUge251bWJlcn1cbiAqIEBwcml2YXRlXG4gKi9cbmNsaWVudFN0YXRlLkVYUElSWV9EQVlTID0gMzY1O1xuXG4vKipcbiAqIFZhbHVlcyBsYXJnZXIgdGhhbiB0aGlzIHJlc3VsdCBhcmUgc2VydmVyLWRlcGVuZGVudCBhbmQgc2hvdWxkbid0IGJlIGNhY2hlZFxuICogaW4gY2xpZW50IHN0b3JhZ2UuXG4gKi9cbmNsaWVudFN0YXRlLk1BWElNVU1fQ0FDSEFCTEVfUkVTVUxUID0gOTk5O1xuXG5jbGllbnRTdGF0ZS5yZXNldCA9IGZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICBzZXNzaW9uU3RvcmFnZS5jbGVhcigpO1xuICB9IGNhdGNoIChlKSB7fVxufTtcblxuLyoqXG4gKiBDbGVhciBwcm9ncmVzcy1yZWxhdGVkIHZhbHVlcyBmcm9tIHNlc3Npb24gc3RvcmFnZS5cbiAqL1xuY2xpZW50U3RhdGUuY2xlYXJQcm9ncmVzcyA9IGZ1bmN0aW9uICgpIHtcbiAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgncHJvZ3Jlc3MnKTtcbiAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgnbGluZXMnKTtcbiAgcmVtb3ZlSXRlbXNXaXRoUHJlZml4KHNlc3Npb25TdG9yYWdlLCAnc291cmNlXycpO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBjbGllbnQtY2FjaGVkIGNvcHkgb2YgdGhlIGxldmVsIHNvdXJjZSBmb3IgdGhlIGdpdmVuIHNjcmlwdFxuICogbGV2ZWwsIGlmIGl0J3MgbmV3ZXIgdGhhbiB0aGUgZ2l2ZW4gdGltZXN0YW1wLlxuICogQHBhcmFtIHtzdHJpbmd9IHNjcmlwdE5hbWVcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZXZlbElkXG4gKiBAcGFyYW0ge251bWJlcj19IHRpbWVzdGFtcFxuICogQHJldHVybnMge3N0cmluZ3x1bmRlZmluZWR9IENhY2hlZCBjb3B5IG9mIHRoZSBsZXZlbCBzb3VyY2UsIG9yIHVuZGVmaW5lZCBpZlxuICogICB0aGUgY2FjaGVkIGNvcHkgaXMgbWlzc2luZy9zdGFsZS5cbiAqL1xuY2xpZW50U3RhdGUuc291cmNlRm9yTGV2ZWwgPSBmdW5jdGlvbiAoc2NyaXB0TmFtZSwgbGV2ZWxJZCwgdGltZXN0YW1wKSB7XG4gIHZhciBkYXRhID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShjcmVhdGVLZXkoc2NyaXB0TmFtZSwgbGV2ZWxJZCwgJ3NvdXJjZScpKTtcbiAgaWYgKGRhdGEpIHtcbiAgICB2YXIgcGFyc2VkO1xuICAgIHRyeSB7XG4gICAgICBwYXJzZWQgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCF0aW1lc3RhbXAgfHwgcGFyc2VkLnRpbWVzdGFtcCA+IHRpbWVzdGFtcCkge1xuICAgICAgcmV0dXJuIHBhcnNlZC5zb3VyY2U7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIENhY2hlIGEgY29weSBvZiB0aGUgbGV2ZWwgc291cmNlIGFsb25nIHdpdGggYSB0aW1lc3RhbXAuXG4gKiBAcGFyYW0ge3N0cmluZ30gc2NyaXB0TmFtZVxuICogQHBhcmFtIHtudW1iZXJ9IGxldmVsSWRcbiAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lc3RhbXBcbiAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2VcbiAqL1xuY2xpZW50U3RhdGUud3JpdGVTb3VyY2VGb3JMZXZlbCA9IGZ1bmN0aW9uIChcbiAgc2NyaXB0TmFtZSxcbiAgbGV2ZWxJZCxcbiAgdGltZXN0YW1wLFxuICBzb3VyY2Vcbikge1xuICBpZiAoc291cmNlID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdHJ5U2V0U2Vzc2lvblN0b3JhZ2UoXG4gICAgY3JlYXRlS2V5KHNjcmlwdE5hbWUsIGxldmVsSWQsICdzb3VyY2UnKSxcbiAgICBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBzb3VyY2U6IHNvdXJjZSxcbiAgICAgIHRpbWVzdGFtcDogdGltZXN0YW1wLFxuICAgIH0pXG4gICk7XG59O1xuXG4vKipcbiAqIE1lcmdlcyB0aGUgZ2l2ZW4gdGVzdFJlc3VsdCBmb3IgdGhlIGdpdmVuIGxldmVsIGludG8gdGhlIHByb2dyZXNzXG4gKiBkYXRhIHN0b3JlZCBpbiBzZXNzaW9uIHN0b3JhZ2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gc2NyaXB0TmFtZVxuICogQHBhcmFtIHtudW1iZXJ9IGxldmVsSWRcbiAqIEBwYXJhbSB7VGVzdFJlc3VsdHN9IHRlc3RSZXN1bHRcbiAqL1xuY2xpZW50U3RhdGUudHJhY2tQcm9ncmVzcyA9IGZ1bmN0aW9uIChzY3JpcHROYW1lLCBsZXZlbElkLCB0ZXN0UmVzdWx0KSB7XG4gIC8vIHRlc3RSZXN1bHQgdmFsdWVzID4gMTAwMCBhcmUgZm9yIHNlcnZlciB1c2Ugb25seSBhbmQgc2hvdWxkIG5vdCBiZSBzdG9yZWRcbiAgLy8gbG9jYWxseVxuICBpZiAoIXRlc3RSZXN1bHQgfHwgdGVzdFJlc3VsdCA+IGNsaWVudFN0YXRlLk1BWElNVU1fQ0FDSEFCTEVfUkVTVUxUKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgcHJvZ3Jlc3NEYXRhID0gbGV2ZWxQcm9ncmVzc0J5U2NyaXB0KCk7XG4gIGlmICghcHJvZ3Jlc3NEYXRhW3NjcmlwdE5hbWVdKSB7XG4gICAgcHJvZ3Jlc3NEYXRhW3NjcmlwdE5hbWVdID0ge307XG4gIH1cbiAgY29uc3Qgc2F2ZWRSZXN1bHQgPSBwcm9ncmVzc0RhdGFbc2NyaXB0TmFtZV1bbGV2ZWxJZF0gfHwgMDtcbiAgY29uc3QgbWVyZ2VkUmVzdWx0ID0gbWVyZ2VBY3Rpdml0eVJlc3VsdChzYXZlZFJlc3VsdCwgdGVzdFJlc3VsdCk7XG5cbiAgaWYgKG1lcmdlZFJlc3VsdCAhPT0gc2F2ZWRSZXN1bHQpIHtcbiAgICBwcm9ncmVzc0RhdGFbc2NyaXB0TmFtZV1bbGV2ZWxJZF0gPSBtZXJnZWRSZXN1bHQ7XG4gICAgdHJ5U2V0U2Vzc2lvblN0b3JhZ2UoJ3Byb2dyZXNzJywgSlNPTi5zdHJpbmdpZnkocHJvZ3Jlc3NEYXRhKSk7XG4gIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyB0aGUgbGV2ZWwgcHJvZ3Jlc3MgbWFwIGZvciB0aGUgZ2l2ZW4gc2NyaXB0LlxuICogQHBhcmFtIHtzdHJpbmd9IHNjcmlwdE5hbWUgVGhlIHNjcmlwdCBuYW1lXG4gKiBAcmV0dXJucyB7T2JqZWN0PG51bWJlciwgbnVtYmVyPn0gbWFwIGZyb20gbGV2ZWxJZCAtPiB0ZXN0UmVzdWx0XG4gKi9cbmNsaWVudFN0YXRlLmxldmVsUHJvZ3Jlc3MgPSBmdW5jdGlvbiAoc2NyaXB0TmFtZSkge1xuICB2YXIgcHJvZ3Jlc3NNYXAgPSBsZXZlbFByb2dyZXNzQnlTY3JpcHQoKTtcbiAgcmV0dXJuIHByb2dyZXNzTWFwW3NjcmlwdE5hbWVdIHx8IHt9O1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIGEgbWFwIGZyb20gc2NyaXB0IG5hbWUgdG8gbGV2ZWwgcHJvZ3Jlc3MgbWFwXG4gKiBAcmV0dXJuIHtPYmplY3Q8U3RyaW5nLCBPYmplY3Q+fVxuICovXG5mdW5jdGlvbiBsZXZlbFByb2dyZXNzQnlTY3JpcHQoKSB7XG4gIHZhciBwcm9ncmVzc0pzb24gPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdwcm9ncmVzcycpO1xuICB0cnkge1xuICAgIHJldHVybiBwcm9ncmVzc0pzb24gPyBKU09OLnBhcnNlKHByb2dyZXNzSnNvbikgOiB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIFJlY292ZXIgZnJvbSBtYWxmb3JtZWQgZGF0YS5cbiAgICByZXR1cm4ge307XG4gIH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIHdoZXRoZXIgb3Igbm90IHRoZSB1c2VyIGhhcyBzZWVuIGEgZ2l2ZW4gdmlkZW8gYmFzZWQgb24gY29udGVudHMgb2YgdGhlIGxvY2FsIHN0b3JhZ2VcbiAqIEBwYXJhbSB2aWRlb0lkXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuY2xpZW50U3RhdGUuaGFzU2VlblZpZGVvID0gZnVuY3Rpb24gKHZpZGVvSWQpIHtcbiAgcmV0dXJuIGhhc1NlZW5WaXN1YWxFbGVtZW50KCd2aWRlbycsIHZpZGVvSWQpO1xufTtcblxuLyoqXG4gKiBSZWNvcmRzIHRoYXQgYSB1c2VyIGhhcyBzZWVuIGEgZ2l2ZW4gdmlkZW8gaW4gbG9jYWwgc3RvcmFnZVxuICogQHBhcmFtIHZpZGVvSWRcbiAqL1xuY2xpZW50U3RhdGUucmVjb3JkVmlkZW9TZWVuID0gZnVuY3Rpb24gKHZpZGVvSWQpIHtcbiAgcmVjb3JkVmlzdWFsRWxlbWVudFNlZW4oJ3ZpZGVvJywgdmlkZW9JZCk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgd2hldGhlciBvciBub3QgdGhlIHVzZXIgaGFzIHNlZW4gdGhlIGdpdmVuIGNhbGxvdXQgYmFzZWQgb24gY29udGVudHMgb2YgdGhlIGxvY2FsIHN0b3JhZ2VcbiAqIEBwYXJhbSBjYWxsb3V0SWRcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5jbGllbnRTdGF0ZS5oYXNTZWVuQ2FsbG91dCA9IGZ1bmN0aW9uIChjYWxsb3V0SWQpIHtcbiAgcmV0dXJuIGhhc1NlZW5WaXN1YWxFbGVtZW50KCdjYWxsb3V0JywgY2FsbG91dElkKTtcbn07XG5cbi8qKlxuICogUmVjb3JkcyB0aGF0IGEgdXNlciBoYXMgc2VlbiBhIGdpdmVuIGNhbGxvdXQgaW4gbG9jYWwgc3RvcmFnZVxuICogQHBhcmFtIGNhbGxvdXRJZFxuICovXG5jbGllbnRTdGF0ZS5yZWNvcmRDYWxsb3V0U2VlbiA9IGZ1bmN0aW9uIChjYWxsb3V0SWQpIHtcbiAgcmVjb3JkVmlzdWFsRWxlbWVudFNlZW4oJ2NhbGxvdXQnLCBjYWxsb3V0SWQpO1xufTtcblxuLyoqXG4gKiBQcml2YXRlIGhlbHBlciBmb3IgdmlkZW9zIGFuZCBjYWxsb3V0cyAtIHBlcnNpc3RzIGluZm8gaW4gdGhlIGxvY2FsIHN0b3JhZ2UgdGhhdCBhIGdpdmVuIGVsZW1lbnQgaGFzIGJlZW4gc2VlblxuICogQHBhcmFtIHZpc3VhbEVsZW1lbnRUeXBlXG4gKiBAcGFyYW0gdmlzdWFsRWxlbWVudElkXG4gKi9cbmZ1bmN0aW9uIHJlY29yZFZpc3VhbEVsZW1lbnRTZWVuKHZpc3VhbEVsZW1lbnRUeXBlLCB2aXN1YWxFbGVtZW50SWQpIHtcbiAgdmFyIGVsZW1lbnRTZWVuSnNvbiA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0odmlzdWFsRWxlbWVudFR5cGUpIHx8ICd7fSc7XG4gIHZhciBlbGVtZW50U2VlbjtcbiAgdHJ5IHtcbiAgICBlbGVtZW50U2VlbiA9IEpTT04ucGFyc2UoZWxlbWVudFNlZW5Kc29uKTtcbiAgICBlbGVtZW50U2Vlblt2aXN1YWxFbGVtZW50SWRdID0gdHJ1ZTtcbiAgICB0cnlTZXRTZXNzaW9uU3RvcmFnZSh2aXN1YWxFbGVtZW50VHlwZSwgSlNPTi5zdHJpbmdpZnkoZWxlbWVudFNlZW4pKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vU29tZXRoaW5nIHdlbnQgd3JvbmcgcGFyc2luZyB0aGUganNvbi4gQmxvdyBpdCB1cCBhbmQganVzdCBwdXQgaW4gdGhlIG5ldyBjYWxsb3V0XG4gICAgZWxlbWVudFNlZW4gPSB7fTtcbiAgICBlbGVtZW50U2Vlblt2aXN1YWxFbGVtZW50SWRdID0gdHJ1ZTtcbiAgICB0cnlTZXRTZXNzaW9uU3RvcmFnZSh2aXN1YWxFbGVtZW50VHlwZSwgSlNPTi5zdHJpbmdpZnkoZWxlbWVudFNlZW4pKTtcbiAgfVxufVxuXG4vKipcbiAqIFByaXZhdGUgaGVscGVyIGZvciB2aWRlb3MgYW5kIGNhbGxvdXRzIC0gbG9va3MgaW4gbG9jYWwgc3RvcmFnZSB0byBzZWUgaWYgdGhlIGVsZW1lbnQgaGFzIGJlZW4gc2VlblxuICogQHBhcmFtIHZpc3VhbEVsZW1lbnRUeXBlXG4gKiBAcGFyYW0gdmlzdWFsRWxlbWVudElkXG4gKi9cbmZ1bmN0aW9uIGhhc1NlZW5WaXN1YWxFbGVtZW50KHZpc3VhbEVsZW1lbnRUeXBlLCB2aXN1YWxFbGVtZW50SWQpIHtcbiAgdmFyIGVsZW1lbnRTZWVuSnNvbiA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0odmlzdWFsRWxlbWVudFR5cGUpIHx8ICd7fSc7XG4gIHRyeSB7XG4gICAgdmFyIGVsZW1lbnRTZWVuID0gSlNPTi5wYXJzZShlbGVtZW50U2Vlbkpzb24pO1xuICAgIHJldHVybiBlbGVtZW50U2Vlblt2aXN1YWxFbGVtZW50SWRdID09PSB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlcyBzdGFuZGFyZGl6ZWQga2V5cyBmb3Igc3RvcmluZyB2YWx1ZXMgaW4gc2Vzc2lvblN0b3JhZ2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gc2NyaXB0TmFtZVxuICogQHBhcmFtIHtudW1iZXJ9IGxldmVsSWRcbiAqIEBwYXJhbSB7c3RyaW5nPX0gcHJlZml4XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUtleShzY3JpcHROYW1lLCBsZXZlbElkLCBwcmVmaXgpIHtcbiAgcmV0dXJuIChwcmVmaXggPyBwcmVmaXggKyAnXycgOiAnJykgKyBzY3JpcHROYW1lICsgJ18nICsgbGV2ZWxJZDtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBpdGVtcyBmcm9tIHRoZSBnaXZlbiBzZXNzaW9uU3RvcmFnZSBvYmplY3QgdGhhdCBzdGFydCB3aXRoIHRoZVxuICogZ2l2ZW4gcHJlZml4LlxuICpcbiAqIEBwYXJhbSB7U3RvcmFnZX0gc2Vzc2lvblN0b3JhZ2VcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcmVmaXhcbiAqL1xuZnVuY3Rpb24gcmVtb3ZlSXRlbXNXaXRoUHJlZml4KHNlc3Npb25TdG9yYWdlLCBwcmVmaXgpIHtcbiAgT2JqZWN0LmtleXMoc2Vzc2lvblN0b3JhZ2UpXG4gICAgLmZpbHRlcihrZXkgPT4ga2V5LnN0YXJ0c1dpdGgocHJlZml4KSlcbiAgICAuZm9yRWFjaChrZXkgPT4gc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpKTtcbn1cbiIsIi8vIFRlc3RzIHdoZXRoZXIgdGhlIGJyb3dzZXIgY2FuIGFjY2VzcyBhbiBpbWFnZSBVUkwuXG4vLyBVc2VmdWwgYXMgYSB3b3JrYXJvdW5kIGZvciBDT1JTIHNlY3VyaXR5IHRvIHRlc3QgYWNjZXNzIHRvIGFuIG9yaWdpbi5cbmZ1bmN0aW9uIHRlc3RJbWFnZUFjY2VzcyhcbiAgdXJsLFxuICBzdWNjZXNzQ2FsbGJhY2sgPSAoKSA9PiB7fSxcbiAgZmFpbHVyZUNhbGxiYWNrID0gKCkgPT4ge30sXG4gIHRpbWVvdXRNcyA9IDUwMDAsXG4gIHZpZGVvRWxlbWVudCA9IGZhbHNlXG4pIHtcbiAgdmFyIGVsZW1lbnQ7XG4gIGlmICh2aWRlb0VsZW1lbnQpIHtcbiAgICBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKTtcbiAgfSBlbHNlIHtcbiAgICBlbGVtZW50ID0gbmV3IEltYWdlKCk7XG4gIH1cbiAgdmFyIGNhbGxlZCA9IGZhbHNlO1xuICBmdW5jdGlvbiBmaW5pc2goY2FsbGJhY2spIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGNhbGxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjYWxsZWQgPSB0cnVlO1xuICAgICAgd2luZG93LmNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfTtcbiAgfVxuICB2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KGZpbmlzaChmYWlsdXJlQ2FsbGJhY2spLCB0aW1lb3V0TXMpO1xuICBlbGVtZW50Lm9uZXJyb3IgPSBmaW5pc2goZmFpbHVyZUNhbGxiYWNrKTtcbiAgaWYgKHZpZGVvRWxlbWVudCkge1xuICAgIGVsZW1lbnQub25kdXJhdGlvbmNoYW5nZSA9IGZpbmlzaChzdWNjZXNzQ2FsbGJhY2spO1xuICB9IGVsc2Uge1xuICAgIGVsZW1lbnQub25sb2FkID0gZmluaXNoKHN1Y2Nlc3NDYWxsYmFjayk7XG4gIH1cbiAgZWxlbWVudC5zcmMgPSB1cmw7XG4gIC8vIHN0b3JlIGEgcmVmZXJlbmNlIHRvIHRoZSBlbGVtZW50IHNvIGl0IGRvZXNuJ3QgZ2V0IGNvbGxlY3RlZFxuICB3aW5kb3cudGVzdEltYWdlcyA9IHdpbmRvdy50ZXN0SW1hZ2VzIHx8IFtdO1xuICB3aW5kb3cudGVzdEltYWdlcy5wdXNoKGVsZW1lbnQpO1xufVxubW9kdWxlLmV4cG9ydHMgPSB0ZXN0SW1hZ2VBY2Nlc3M7XG4iLCJpbXBvcnQgcXVlcnlTdHJpbmcgZnJvbSAncXVlcnktc3RyaW5nJztcblxuLy8gUHJvdmlkZSBtZXRob2RzIHRoYXQgYWxsb3cgdGVzdHMgdG8gbW9jayB3aW5kb3cubG9jYXRpb25cbmxldCB3aW5kb3dMb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcbmV4cG9ydCBmdW5jdGlvbiBzZXRXaW5kb3dMb2NhdGlvbihmYWtlTG9jYXRpb24pIHtcbiAgd2luZG93TG9jYXRpb24gPSBmYWtlTG9jYXRpb247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNldFdpbmRvd0xvY2F0aW9uKCkge1xuICB3aW5kb3dMb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhc1F1ZXJ5UGFyYW0obmFtZSkge1xuICBjb25zdCBwYXJzZWRQYXJhbXMgPSBxdWVyeVBhcmFtcygpO1xuXG4gIC8vIGNhbid0IGNhbGwgaGFzT3duUHJvcGVydHkgZGlyZWN0bHkgZHVlIHRvIGJ1ZyBpbiBxdWVyeS1zdHJpbmc6XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvcXVlcnktc3RyaW5nL2lzc3Vlcy81MFxuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHBhcnNlZFBhcmFtcywgbmFtZSk7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgVVJMIHF1ZXJ5c3RyaW5nIHBhcmFtcy5cbiAqIEBwYXJhbSBuYW1lIHtzdHJpbmc9fSBPcHRpb25hbGx5IHB1bGwgYSBzcGVjaWZpYyBwYXJhbS5cbiAqIEByZXR1cm4ge29iamVjdHxzdHJpbmd9IEhhc2ggb2YgcGFyYW1zLCBvciBwYXJhbSBzdHJpbmcgaWYgYG5hbWVgIGlzIHNwZWNpZmllZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1ZXJ5UGFyYW1zKG5hbWUpIHtcbiAgY29uc3QgcGFyc2VkID0gcXVlcnlTdHJpbmcucGFyc2Uod2luZG93TG9jYXRpb24uc2VhcmNoKTtcbiAgaWYgKG5hbWUpIHtcbiAgICByZXR1cm4gcGFyc2VkW25hbWVdO1xuICB9XG4gIHJldHVybiBwYXJzZWQ7XG59XG5cbi8qKlxuICogVXBkYXRlcyBhIHF1ZXJ5IHBhcmFtZXRlciBpbiB0aGUgVVJMIHZpYSBwdXNoU3RhdGUgKGkuZS4gZG9lc24ndCBmb3JjZSBhXG4gKiByZWxvYWQpLlxuICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtIC0gTmFtZSBvZiB0aGUgcXVlcnkgcGFyYW1ldGVyIHRvIG1vZGlmeVxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIC0gTmV3IHZhbHVlIChvciB1bmRlZmluZWQgdG8gcmVtb3ZlKVxuICogQHBhcmFtIHtib29sZWFufSB1c2VSZXBsYWNlU3RhdGUgLSBvcHRpb25hbCBwYXJhbSBpZiB5b3Ugd2lzaCB0byB1c2UgcmVwbGFjZVN0YXRlXG4gKiAgIGluc3RlYWQgb2YgcHVzaFN0YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVRdWVyeVBhcmFtKHBhcmFtLCB2YWx1ZSwgdXNlUmVwbGFjZVN0YXRlID0gZmFsc2UpIHtcbiAgY29uc3QgbmV3U3RyaW5nID0gcXVlcnlTdHJpbmcuc3RyaW5naWZ5KHtcbiAgICAuLi5xdWVyeVN0cmluZy5wYXJzZSh3aW5kb3dMb2NhdGlvbi5zZWFyY2gpLFxuICAgIFtwYXJhbV06IHZhbHVlLFxuICB9KTtcblxuICBsZXQgbmV3TG9jYXRpb24gPSB3aW5kb3dMb2NhdGlvbi5wYXRobmFtZTtcbiAgLy8gRG9uJ3QgYXBwZW5kID8gdW5sZXNzIHdlIGFjdHVhbGx5IGhhdmUgYSB2YWx1ZVxuICBpZiAobmV3U3RyaW5nKSB7XG4gICAgbmV3TG9jYXRpb24gKz0gJz8nICsgbmV3U3RyaW5nO1xuICB9XG5cbiAgY29uc3QgbWV0aG9kID0gdXNlUmVwbGFjZVN0YXRlID8gJ3JlcGxhY2VTdGF0ZScgOiAncHVzaFN0YXRlJztcbiAgd2luZG93Lmhpc3RvcnlbbWV0aG9kXShudWxsLCBkb2N1bWVudC50aXRsZSwgbmV3TG9jYXRpb24pO1xufVxuXG4vKipcbiAqIFdlIGhhdmUgdmFyaW91cyBjb29raWVzIHRoYXQgd2Ugd2FudCB0byBiZSBlbnZpcm9ubWVudCBzcGVjaWZpYy4gV2UgYWNjb21wbGlzaFxuICogdGhpcyBieSB0YWNraW5nIG9uIHRoZSByYWNrX2VudiAodW5sZXNzIHdlJ3JlIGluIHByb2QpLiBUaGlzIGhlbHBlciBnZXRzIHRoZVxuICogYXBwcm9wcmlhdGUgY29va2llIG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gQmFzZSBjb29raWUgbmFtZVxuICogQHJldHVybnMge3N0cmluZ30gQWN0dWFsIGNvb2tpZSBuYW1lLCB3aXRoIHRoZSByYWNrX2VudiBhcHBlbmRlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gZW52aXJvbm1lbnRTcGVjaWZpY0Nvb2tpZU5hbWUobmFtZSkge1xuICBjb25zdCByYWNrX2VudiA9IHdpbmRvdy5kYXNoYm9hcmQucmFja19lbnY7XG4gIGlmIChyYWNrX2VudiA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgcmV0dXJuIG5hbWU7XG4gIH1cblxuICByZXR1cm4gYCR7bmFtZX1fJHtyYWNrX2Vudn1gO1xufVxuXG4vKipcbiAqIEdpdmVuIGEgaG9zdCBuYW1lIChlLmcuIHN0dWRpby5jb2RlLm9yZykgcmV0dXJuIHRoZSBzaXRlJ3Mgcm9vdCBkb21haW5cbiAqIChlLmcuIGNvZGUub3JnKS4gIFVzZWZ1bCBmb3IgZ2V0dGluZyB0aGUgZG9tYWluIG9uIHdoaWNoIHdlIHdpbGwgc2V0IGEgY29va2llLlxuICogQHBhcmFtIHtzdHJpbmd9IGhvc3RuYW1lIC0gQSBob3N0IG5hbWVcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSByb290IGRvbWFpbiBuYW1lIGZvciB0aGUgaG9zdCBuYW1lXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSb290RG9tYWluRnJvbUhvc3RuYW1lKGhvc3RuYW1lKSB7XG4gIHJldHVybiBob3N0bmFtZS5zcGxpdCgnLicpLnNsaWNlKC0yKS5qb2luKCcuJyk7XG59XG4iLCJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHRyYWNrRXZlbnQgZnJvbSAnLi4vdXRpbC90cmFja0V2ZW50JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBGYWxsYmFja1BsYXllckNhcHRpb25EaWFsb2dMaW5rIGZyb20gJy4uL3RlbXBsYXRlcy9GYWxsYmFja1BsYXllckNhcHRpb25EaWFsb2dMaW5rJztcbmltcG9ydCB2aWRlb2pzIGZyb20gJ3ZpZGVvLmpzJztcbnZhciB0ZXN0SW1hZ2VBY2Nlc3MgPSByZXF1aXJlKCcuL3VybF90ZXN0Jyk7XG52YXIgY2xpZW50U3RhdGUgPSByZXF1aXJlKCcuL2NsaWVudFN0YXRlJyk7XG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgYW5hbHl0aWNzUmVwb3J0ZXIgZnJvbSAnQGNkby9hcHBzL2xpYi91dGlsL0FuYWx5dGljc1JlcG9ydGVyJztcbmltcG9ydCB7RVZFTlRTfSBmcm9tICdAY2RvL2FwcHMvbGliL3V0aWwvQW5hbHl0aWNzQ29uc3RhbnRzJztcblxuY29uc3QgVEFCX05BVl9DTEFTUyA9ICcudWktdGFicy1uYXYnO1xuY29uc3QgTU9EQUxfQ0xBU1NfTkFNRSA9ICd2aWRlby1tb2RhbCc7XG5jb25zdCBNT0RBTF9DTEFTUyA9ICcuJyArIE1PREFMX0NMQVNTX05BTUU7XG52YXIgdmlkZW9zID0gKG1vZHVsZS5leHBvcnRzID0ge30pO1xuXG52aWRlb3MuY3JlYXRlVmlkZW9XaXRoRmFsbGJhY2sgPSBmdW5jdGlvbiAoXG4gIHBhcmVudEVsZW1lbnQsXG4gIG9wdGlvbnMsXG4gIHdpZHRoLFxuICBoZWlnaHQsXG4gIGZ1bGxXaWR0aCxcbiAgcm91bmRlZENvcm5lcnNcbikge1xuICB1cGdyYWRlSW5zZWN1cmVPcHRpb25zKG9wdGlvbnMpO1xuICB2YXIgdmlkZW8gPSBjcmVhdGVWaWRlbyhvcHRpb25zKTtcbiAgaWYgKGZ1bGxXaWR0aCkge1xuICAgIHZpZGVvLmFkZENsYXNzKCd2aWRlby1wbGF5ZXItZnVsbC13aWR0aCcpO1xuICAgIHBhcmVudEVsZW1lbnQuYWRkQ2xhc3MoJ3ZpZGVvLWNvbnRlbnQtZnVsbC13aWR0aCcpO1xuICAgIHdpZHRoID0gJzEwMCUnO1xuICAgIGhlaWdodCA9ICcxMDAlJztcbiAgfSBlbHNlIHtcbiAgICB2aWRlby53aWR0aCh3aWR0aCkuaGVpZ2h0KGhlaWdodCk7XG4gIH1cbiAgaWYgKHJvdW5kZWRDb3JuZXJzKSB7XG4gICAgdmlkZW8uYWRkQ2xhc3MoJ3ZpZGVvLXBsYXllci1yb3VuZGVkLWNvcm5lcnMnKTtcbiAgfVxuICBpZiAocGFyZW50RWxlbWVudCkge1xuICAgIHBhcmVudEVsZW1lbnQuYXBwZW5kKHZpZGVvKTtcbiAgfVxuICBzZXR1cFZpZGVvRmFsbGJhY2sob3B0aW9ucywgd2lkdGgsIGhlaWdodCk7XG4gIHJldHVybiB2aWRlbztcbn07XG5cbmZ1bmN0aW9uIG9uVmlkZW9FbmRlZCgpIHtcbiAgJChNT0RBTF9DTEFTUykudHJpZ2dlcignZW5kZWQnKTtcbn1cblxudmFyIGN1cnJlbnRWaWRlb09wdGlvbnM7XG4vLyBZb3VUdWJlJ3MgQVBJIHJlcXVpcmVzIHRoaXMgZnVuY3Rpb24gdG8gYmUgaW4gYSBnbG9iYWwgd2luZG93IGNvbnRleHQsXG4vLyBhbmQgKEkgdGhpbmspIGR1ZSB0byBjYWxsIG9yZGVyIGluc2lkZSBvZiB0aGUgYGNyZWF0ZVZpZGVvV2l0aEZhbGxiYWNrYCBmdW5jdGlvbiwgaXRcbi8vIGRvZXNuJ3QgYWN0dWFsbHkgZXhpc3QgdW50aWwgYWZ0ZXIgdGhlIGZpcnN0IHZpZGVvIGxvYWQgaWYgaXQncyBkZWZpbmVkIGhlcmUgYXMgYGZ1bmN0aW9uIG9uWW91VHViZUlmcmFtZVJlYWR5YC5cbi8vIEJ1dCBpZiB3ZSBkZWZpbmUgaXQgZGlyZWN0bHkgb250byB0aGUgd2luZG93IG9iamVjdCwgaXQgd2lsbCBwcm9wZXJseSBleGlzdCB0aGUgZmlyc3QgdGltZSB0aGUgdmlkZW8gaXMgb3BlbmVkLlxuXG4vLyBUaGlzIGlzIGEgZ29vZCBjYW5kaWRhdGUgdG8gY2lyY2xlIGJhY2sgdG8gYW5kIHJlZmFjdG9yLlxud2luZG93Lm9uWW91VHViZUlmcmFtZUFQSVJlYWR5ID0gZnVuY3Rpb24gKCkge1xuICAvLyByZXF1aXJlcyB0aGVyZSBiZSBhbiBpZnJhbWUjdmlkZW8gcHJlc2VudCBvbiB0aGUgcGFnZVxuICBjb25zdCBwbGF5ZXIgPSBuZXcgWVQuUGxheWVyKCd2aWRlbycsIHtcbiAgICBldmVudHM6IHtcbiAgICAgIG9uUmVhZHk6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBhbmFseXRpY3NSZXBvcnRlci5zZW5kRXZlbnQoRVZFTlRTLlZJREVPX0xPQURFRCwge1xuICAgICAgICAgIHVybDogbG9jYXRpb24uaHJlZixcbiAgICAgICAgICB2aWRlbzogcGxheWVyLmdldFZpZGVvVXJsKCksXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIG9uU3RhdGVDaGFuZ2U6IGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgICAgICBjb25zdCBhbXBsaXR1ZGVFdmVudE1hcCA9IHtcbiAgICAgICAgICBbWVQuUGxheWVyU3RhdGUuUExBWUlOR106IEVWRU5UUy5WSURFT19TVEFSVEVELFxuICAgICAgICAgIFtZVC5QbGF5ZXJTdGF0ZS5QQVVTRURdOiBFVkVOVFMuVklERU9fUEFVU0VELFxuICAgICAgICAgIFtZVC5QbGF5ZXJTdGF0ZS5FTkRFRF06IEVWRU5UUy5WSURFT19FTkRFRCxcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBhbXBsaXR1ZGVFdmVudCA9IGFtcGxpdHVkZUV2ZW50TWFwW3N0YXRlLmRhdGFdO1xuICAgICAgICBpZiAoYW1wbGl0dWRlRXZlbnQpIHtcbiAgICAgICAgICBhbmFseXRpY3NSZXBvcnRlci5zZW5kRXZlbnQoYW1wbGl0dWRlRXZlbnQsIHtcbiAgICAgICAgICAgIHVybDogbG9jYXRpb24uaHJlZixcbiAgICAgICAgICAgIHZpZGVvOiBwbGF5ZXIuZ2V0VmlkZW9VcmwoKSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzdGF0ZS5kYXRhID09PSBZVC5QbGF5ZXJTdGF0ZS5FTkRFRCkge1xuICAgICAgICAgIG9uVmlkZW9FbmRlZCgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25FcnJvcjogZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgIGlmIChjdXJyZW50VmlkZW9PcHRpb25zKSB7XG4gICAgICAgICAgdmFyIHNpemUgPSBlcnJvci50YXJnZXQuZi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICBhZGRGYWxsYmFja1ZpZGVvUGxheWVyKGN1cnJlbnRWaWRlb09wdGlvbnMsIHNpemUud2lkdGgsIHNpemUuaGVpZ2h0KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9LFxuICB9KTtcbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZVZpZGVvKG9wdGlvbnMpIHtcbiAgY29uc3QgdmlkZW9EaXYgPSAkKCc8aWZyYW1lIGlkPVwidmlkZW9cIi8+JykuYWRkQ2xhc3MoJ3ZpZGVvLXBsYXllcicpLmF0dHIoe1xuICAgIHNyYzogb3B0aW9ucy5zcmMsXG4gICAgYWxsb3dmdWxsc2NyZWVuOiAndHJ1ZScsXG4gICAgc2Nyb2xsaW5nOiAnbm8nLFxuICB9KTtcblxuICBjb25zdCB2aWRlb1RhYkNvbnRhaW5lckRpdiA9ICQoXCI8ZGl2IGlkPSd2aWRlb1RhYkNvbnRhaW5lcic+PC9kaXY+XCIpLmFwcGVuZChcbiAgICB2aWRlb0RpdlxuICApO1xuXG4gIHJldHVybiB2aWRlb1RhYkNvbnRhaW5lckRpdjtcbn1cblxuLyoqXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBBdXRvcGxheVZpZGVvXG4gKiBAcHJvcGVydHkge3N0cmluZ30gc3JjIC0gdGhlIHVybCB0byB0aGUgdmlkZW9cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBrZXkgLSBhbiB1aWQuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gbmFtZSAtIGEgc3RyaW5nLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IHJlZGlyZWN0IC0gdGhlIHJlZGlyZWN0IHBhZ2UgYWZ0ZXIgdGhlIHZpZGVvIGlzIGRpc21pc3NlZC5cbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IG9uQ2xvc2UgLSBhY3Rpb25zIHRvIHRha2UgYWZ0ZXIgY2xvc2luZyB0aGUgdmlkZW8gZGlhbG9nLCBvciBpbW1lZGlhdGVseVxuICogICAgICAgICAgIGlmIHRoZSB2aWRlbyBpc24ndCBzaG93bi5cbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7QXV0b3BsYXlWaWRlb30gb3B0aW9uc1xuICogQHBhcmFtIHtib29sZWFufSBbZm9yY2VTaG93VmlkZW89ZmFsc2VdXG4gKi9cbnZpZGVvcy5zaG93VmlkZW9EaWFsb2cgPSBmdW5jdGlvbiAob3B0aW9ucywgZm9yY2VTaG93VmlkZW8pIHtcbiAgaWYgKGZvcmNlU2hvd1ZpZGVvID09PSB1bmRlZmluZWQpIHtcbiAgICBmb3JjZVNob3dWaWRlbyA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMub25DbG9zZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgb3B0aW9ucy5vbkNsb3NlID0gZnVuY3Rpb24gKCkge307XG4gIH1cblxuICBpZiAoY2xpZW50U3RhdGUuaGFzU2VlblZpZGVvKG9wdGlvbnMua2V5KSAmJiBmb3JjZVNob3dWaWRlbyA9PT0gZmFsc2UpIHtcbiAgICAvLyBBbnl0aGluZyB3ZSB3ZXJlIGdvaW5nIHRvIGRvIHdoZW4gdGhlIHZpZGVvIGNsb3NlZCwgd2Ugb3VnaHQgdG8gZG9cbiAgICAvLyByaWdodCBub3cuXG4gICAgb3B0aW9ucy5vbkNsb3NlKCk7XG4gICAgaWYgKG9wdGlvbnMucmVkaXJlY3QpIHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gb3B0aW9ucy5yZWRpcmVjdDtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gTGV0J3MgcmVjb3JkIHRoZSBmYWN0IHRoYXQgd2UncmUgb3BlbmluZyBhIGRpYWxvZyBib3ggZm9yIHRoZSB2aWRlby5cbiAgb3B0aW9ucy5pbkRpYWxvZyA9IHRydWU7XG5cbiAgdXBncmFkZUluc2VjdXJlT3B0aW9ucyhvcHRpb25zKTtcblxuICB2YXIgYm9keSA9ICQoJzxkaXYvPicpO1xuICB2YXIgY29udGVudCA9ICQoJyNub3Rlcy1jb250ZW50JykuY29udGVudHMoKS5jbG9uZSgpO1xuICBjb250ZW50LmZpbmQoJy52aWRlby1uYW1lJykudGV4dChvcHRpb25zLm5hbWUpO1xuICBib2R5LmFwcGVuZChjb250ZW50KTtcblxuICB2YXIgdmlkZW8gPSBjcmVhdGVWaWRlbyhvcHRpb25zKTtcbiAgYm9keS5hcHBlbmQodmlkZW8pO1xuXG4gIHZhciBub3Rlc0RpdiA9ICQoJzxkaXYgaWQ9XCJub3Rlcy1vdXRlclwiPjxkaXYgaWQ9XCJub3Rlc1wiLz48L2Rpdj4nKTtcbiAgYm9keS5hcHBlbmQobm90ZXNEaXYpO1xuXG4gIGdldFNob3dOb3RlcyhcbiAgICBvcHRpb25zLmtleSxcbiAgICBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgbm90ZXNEaXYuY2hpbGRyZW4oJyNub3RlcycpLmh0bWwoZGF0YSk7XG4gICAgfSxcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICBvcGVuVmlkZW9UYWIoKTtcbiAgICAgIGJvZHkuZmluZCgnYVtocmVmPVwiI25vdGVzLW91dGVyXCJdJykucGFyZW50KCkucmVtb3ZlKCk7XG4gICAgICBib2R5LnRhYnMoJ3JlZnJlc2gnKTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGRpYWxvZyA9IG5ldyBEaWFsb2coe2JvZHk6IGJvZHksIHJlZGlyZWN0OiBvcHRpb25zLnJlZGlyZWN0fSk7XG4gIHZhciAkZGl2ID0gJChkaWFsb2cuZGl2KTtcbiAgJGRpdi5hZGRDbGFzcyhNT0RBTF9DTEFTU19OQU1FKTtcblxuICAkKE1PREFMX0NMQVNTKS5vbigncmVtb3ZlJywgZnVuY3Rpb24gKCkge1xuICAgIC8vIE1hbnVhbGx5IHJlbW92aW5nIHNyYyB0byBmaXggYSBjb250aW51YWwgcGxheWJhY2sgYnVnIGluIElFOVxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9jb2RlLWRvdC1vcmcvY29kZS1kb3Qtb3JnL3B1bGwvNTI3NyNpc3N1ZS0xMTYyNTMxNjhcbiAgICB2aWRlby5yZW1vdmVBdHRyKCdzcmMnKTtcbiAgICBvcHRpb25zLm9uQ2xvc2UoKTtcbiAgICBjbGllbnRTdGF0ZS5yZWNvcmRWaWRlb1NlZW4ob3B0aW9ucy5rZXkpO1xuICAgIC8vIFJhaXNlIGFuIGV2ZW50IHRoYXQgdGhlIGRpYWxvZyBoYXMgYmVlbiBoaWRkZW4sIGluIGNhc2UgYW55dGhpbmcgbmVlZHMgdG9cbiAgICAvLyBwbGF5L3Jlc3BvbmQgdG8gaXQuXG4gICAgdmFyIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gICAgZXZlbnQuaW5pdEV2ZW50KCd2aWRlb0hpZGRlbicsIHRydWUsIHRydWUpO1xuICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICB9KTtcblxuICB2YXIgdGFiSGFuZGxlciA9IGZ1bmN0aW9uIChldmVudCwgdWkpIHtcbiAgICB2YXIgdGFiID0gdWkudGFiIHx8IHVpLm5ld1RhYjsgLy8gRGVwZW5kcyBvbiBldmVudC5cbiAgICB2YXIgdmlkZW9FbGVtZW50ID0gJCgnI3ZpZGVvJyk7XG4gICAgaWYgKHRhYi5maW5kKCdhJykuYXR0cignaHJlZicpID09PSAnI3ZpZGVvJykge1xuICAgICAgLy8gSWYgaXQgaXMgdGhlIHZpZGVvIHBhZ2UsIHJlc3RvcmUgdGhlIHNyY1xuICAgICAgdmlkZW9FbGVtZW50LmF0dHIoJ3NyYycsIG9wdGlvbnMuc3JjKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmlkZW8ucmVtb3ZlQXR0cignc3JjJyk7XG4gICAgICB2YXIgdmlkZW9KU0VsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudmlkZW8tanMnKTtcbiAgICAgIGlmICh2aWRlb0pTRWxlbWVudCkge1xuICAgICAgICB2aWRlb2pzKHZpZGVvSlNFbGVtZW50KS5wYXVzZSgpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBSZW1lbWJlciB3aGljaCB0YWIgaXMgc2VsZWN0ZWQuXG4gICAgdmFyIHNlbGVjdGVkID0gdGFiLnBhcmVudHMoJy51aS10YWJzJykudGFicygnb3B0aW9uJywgJ2FjdGl2ZScpO1xuICAgIHRyeSB7XG4gICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnbGFzdFRhYicsIHNlbGVjdGVkKTtcbiAgICB9IGNhdGNoIChleGMpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdDYXVnaHQgZXhjZXB0aW9uIGluIHNlc3Npb25TdG9yYWdlLnNldEl0ZW06ICcsIGV4Yyk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBsYXN0VGFiID0gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2xhc3RUYWInKTtcbiAgYm9keS50YWJzKHtcbiAgICBldmVudDogJ2NsaWNrIHRvdWNoZW5kJyxcbiAgICBhY3RpdmF0ZTogdGFiSGFuZGxlcixcbiAgICBjcmVhdGU6IHRhYkhhbmRsZXIsXG4gICAgYWN0aXZlOiBsYXN0VGFiICE9PSBudWxsID8gbGFzdFRhYiA6IDAsIC8vIFNldCBzdGFydGluZyB0YWIuXG4gIH0pO1xuXG4gIHZhciBkb3dubG9hZCA9ICQoJzxhLz4nKVxuICAgIC5hcHBlbmQoJCgnPGkgY2xhc3M9XCJmYSBmYS1kb3dubG9hZFwiIC8+JykpXG4gICAgLmFkZENsYXNzKCdkb3dubG9hZC12aWRlbyBidG4nKVxuICAgIC5jc3MoJ2Zsb2F0JywgJ2xlZnQnKVxuICAgIC5hdHRyKCdocmVmJywgb3B0aW9ucy5kb3dubG9hZClcbiAgICAuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgLy8gdHJhY2sgZG93bmxvYWQgaW4gR29vZ2xlIEFuYWx5dGljc1xuICAgICAgdHJhY2tFdmVudCgnZG93bmxvYWR2aWRlbycsICdzdGFydGRvd25sb2FkdmlkZW8nLCBvcHRpb25zLmtleSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgaWYgKGRvY3VtZW50LmRpciA9PT0gJ3J0bCcpIHtcbiAgICBkb3dubG9hZC5jc3MoJ2Zsb2F0JywgJ3JpZ2h0Jyk7XG4gIH1cbiAgdmFyIG5hdiA9ICRkaXYuZmluZChUQUJfTkFWX0NMQVNTKTtcbiAgbmF2LmFwcGVuZChkb3dubG9hZCk7XG5cbiAgLy8gRXZlbiB0aG91Z2ggc29tZSBSZWFjdCBjb2RlIHdpbGwgbW91bnQgdG8gdGhpcyBkaXYgYW5kIGNsZWFyIGl0c1xuICAvLyBjb250ZW50cywgaW5jbHVkZSB0aGUgc2FtZSBsaW5rIHN0cmluZyBhcyB0aGUgUmVhY3QgY29kZSB3aWxsIHVzZSwgc28gdGhhdFxuICAvLyBvdXIgY2FsY3VsYXRpb25zIGZvciB0aGUgbW9kYWwgZGltZW5zaW9ucyB3aWxsIGFjY291bnQgZm9yIGl0cyBwcmVzZW5jZS5cbiAgdmFyIGZhbGxiYWNrUGxheWVyTGlua0RpdiA9ICQoXG4gICAgJzxkaXYgaWQ9XCJmYWxsYmFjay1wbGF5ZXItY2FwdGlvbi1kaWFsb2ctbGlua1wiPicgK1xuICAgICAgJzxhIHN0eWxlPVwib3BhY2l0eTogMDsgcG9pbnRlci1ldmVudHM6IG5vbmVcIj4nICtcbiAgICAgIGkxOG4uZmFsbGJhY2tWaWRlb0Nsb3NlZENhcHRpb25pbmdMaW5rKCkgK1xuICAgICAgJzwvYT48L2Rpdj4nXG4gICkuY3NzKHtcbiAgICAncGFkZGluZy1yaWdodCc6ICc0MHB4JyxcbiAgICAncGFkZGluZy10b3AnOiAnOXB4JyxcbiAgICAndGV4dC1hbGlnbic6ICdyaWdodCcsXG4gIH0pO1xuICBuYXYuYXBwZW5kKGZhbGxiYWNrUGxheWVyTGlua0Rpdik7XG5cbiAgbGV0IHJlc2l6ZVZpZGVvUGxheWVyTGlzdGVuZXIgPSBfLnRocm90dGxlKHJlc2l6ZVZpZGVvUGxheWVyLCAyMDApO1xuXG4gIC8vIEEgc2Nyb2xsIGxpc3RlbmVyIGlzIHJlcXVpcmVkIGZvciBpT1MgZHVlIHRvIGl0cyB2aWV3cG9ydCBtYW5hZ2VtZW50IC0gaXRcbiAgLy8gc2Nyb2xscyB0aGUgcGFnZSBkb3duIHRvIHNob3cgdGhlIHVybCAmIG5hdiBiYXIgYnV0IGRvZXNuJ3QgcmVzaXplIHRoZSBwYWdlXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCByZXNpemVWaWRlb1BsYXllckxpc3RlbmVyKTtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHJlc2l6ZVZpZGVvUGxheWVyTGlzdGVuZXIpO1xuICByZXNpemVWaWRlb1BsYXllcigpO1xuXG4gIGN1cnJlbnRWaWRlb09wdGlvbnMgPSBvcHRpb25zO1xuICBpZiAod2luZG93LllUICYmIHdpbmRvdy5ZVC5sb2FkZWQpIHtcbiAgICB3aW5kb3cub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBVc2UgdGhlIG9mZmljaWFsIFlvdVR1YmUgSUZyYW1lIFBsYXllciBBUEkgdG8gbG9hZCB0aGUgWW91VHViZSB2aWRlby5cbiAgICAvLyBSZWY6IGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3lvdXR1YmUvaWZyYW1lX2FwaV9yZWZlcmVuY2UjR2V0dGluZ19TdGFydGVkXG4gICAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgIHRhZy5zcmMgPSAnaHR0cHM6Ly93d3cueW91dHViZS5jb20vaWZyYW1lX2FwaSc7XG4gICAgdmFyIGZpcnN0U2NyaXB0VGFnID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdO1xuICAgIGZpcnN0U2NyaXB0VGFnLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRhZywgZmlyc3RTY3JpcHRUYWcpO1xuICAgIC8vIGNhbGxzIHdpbmRvdy5vbllvdVR1YmVJZnJhbWVBUElSZWFkeVxuICB9XG5cbiAgZGlhbG9nLnNob3coKTtcblxuICB2YXIgdmlkZW9Nb2RhbCA9ICQoTU9EQUxfQ0xBU1MpO1xuXG4gIHZpZGVvTW9kYWwub24oJ2VuZGVkJywgZnVuY3Rpb24gKCkge1xuICAgIGRpYWxvZy5oaWRlKCk7XG4gIH0pO1xuXG4gIC8vIFJhaXNlIGFuIGV2ZW50IHRoYXQgdGhlIGRpYWxvZyBoYXMgYmVlbiBzaG93biwgaW4gY2FzZSBhbnl0aGluZyBuZWVkcyB0b1xuICAvLyBwYXVzZS9yZXNwb25kIHRvIGl0LlxuICB2YXIgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKTtcbiAgZXZlbnQuaW5pdEV2ZW50KCd2aWRlb1Nob3duJywgdHJ1ZSwgdHJ1ZSk7XG4gIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuXG4gIC8vIERvbid0IGFkZCBmYWxsYmFjayBwbGF5ZXIgaWYgYSB2aWRlbyBtb2RhbCBoYXMgY2xvc2VkXG4gIHZhciBzaG91bGRTdGlsbEFkZCA9IHRydWU7XG4gIHZpZGVvTW9kYWwub25lKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHJlc2l6ZVZpZGVvUGxheWVyTGlzdGVuZXIpO1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCByZXNpemVWaWRlb1BsYXllckxpc3RlbmVyKTtcbiAgICBzaG91bGRTdGlsbEFkZCA9IGZhbHNlO1xuICB9KTtcblxuICB2YXIgZGl2SGVpZ2h0ID0gZ2V0VmlkZW9IZWlnaHQoKTtcbiAgc2V0dXBWaWRlb0ZhbGxiYWNrKG9wdGlvbnMsICRkaXYud2lkdGgoKSwgZGl2SGVpZ2h0LCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHNob3VsZFN0aWxsQWRkO1xuICB9KTtcbn07XG5cbi8qKlxuICogU2V0cyB0aGUgdmlkZW8gcGxheWVyIGNvbnRhaW5lciB0byA4MCUgb2YgdGhlIHdpZHRoIG9yIGhlaWdodCBvZiB0aGUgc2NyZWVuXG4gKiBhdCBhIDkvMTYgcmF0aW8uXG4gKi9cbmZ1bmN0aW9uIHJlc2l6ZVZpZGVvUGxheWVyKCkge1xuICBsZXQgJGRpdiA9ICQoTU9EQUxfQ0xBU1MpO1xuICBjb25zdCBuYXZCYXJIZWlnaHQgPSAkZGl2LmZpbmQoVEFCX05BVl9DTEFTUykub3V0ZXJIZWlnaHQoKTtcbiAgY29uc3Qgc2NyZWVuUmF0aW8gPSAwLjg7XG4gIGNvbnN0IGFzcGVjdFJhdGlvID0gMTYgLyA5O1xuICBjb25zdCBtYXhIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiBzY3JlZW5SYXRpbztcbiAgY29uc3QgbWF4V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCAqIHNjcmVlblJhdGlvO1xuXG4gIC8vIEZpbmQgd2hldGhlciB3aWR0aCBvciBoZWlnaHQgaXMgdGhlIGxpbWl0aW5nIGZhY3RvciB3aGVuIHRoZSBhc3BlY3QgcmF0aW9cbiAgLy8gaXMgOS8xNi4gVGhlbiBzZXQgdGhlIGRpbWVuc2lvbnMgdG8gdGhlIGxhcmdlc3QgcG9zc2libGUgdmFsdWVzLlxuICBsZXQgY29udGFpbmVySGVpZ2h0LCBjb250YWluZXJXaWR0aDtcbiAgaWYgKChtYXhIZWlnaHQgLSBuYXZCYXJIZWlnaHQpICogYXNwZWN0UmF0aW8gPCBtYXhXaWR0aCkge1xuICAgIGNvbnRhaW5lckhlaWdodCA9IG1heEhlaWdodDtcbiAgICBjb250YWluZXJXaWR0aCA9IChtYXhIZWlnaHQgLSBuYXZCYXJIZWlnaHQpICogYXNwZWN0UmF0aW87XG4gIH0gZWxzZSB7XG4gICAgY29udGFpbmVySGVpZ2h0ID0gbWF4V2lkdGggLyBhc3BlY3RSYXRpbyArIG5hdkJhckhlaWdodDtcbiAgICBjb250YWluZXJXaWR0aCA9IG1heFdpZHRoO1xuICB9XG5cbiAgLy8gU2V0IHRoZSBkaW1lbnNpb25zIG9mIHRoZSB2aWRlbyBtb2RhbFxuICAkZGl2LmhlaWdodChjb250YWluZXJIZWlnaHQpO1xuICAkZGl2LndpZHRoKGNvbnRhaW5lcldpZHRoKTtcblxuICAvLyBUaGUgdmlkZW8gbW9kYWwgc2hvdWxkIGNlbnRlcmVkIHdpdGhpbiB0aGUgaW5uZXIgaGVpZ2h0IG9mIHRoZSB3aW5kb3dcbiAgLy8gKGkuZS4gd2luZG93IGhlaWdodCBtaW51cyBicm93c2VyIGNocm9tZSlcbiAgY29uc3QgdG9wID0gKHdpbmRvdy5pbm5lckhlaWdodCAtIGNvbnRhaW5lckhlaWdodCkgLyAyO1xuXG4gIC8vIFN0YW5kYXJkIGNzcyBoYWNrIHRvIGNlbnRlciBhIGRpdiB3aXRoaW4gdGhlIHZpZXdwb3J0LlxuICAkZGl2LmNzcyh7XG4gICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgdG9wOiB0b3AsXG4gICAgbGVmdDogJzUwJScsXG4gICAgbWFyZ2luTGVmdDogY29udGFpbmVyV2lkdGggLyAtMiArICdweCcsXG4gIH0pO1xuXG4gIC8vIFRoZSBuYXYgYmFyIHdpbGwgaGF2ZSBjaGFuZ2VkIGRpbWVuc2lvbnMgZHVlIHRvIHRoZSByZXNpemluZyBvZiB0aGVcbiAgLy8gY29udGFpbmVyLiBXZSByZS1jYWxjdWxhdGUgdGhlIGF2YWlsYWJsZSBoZWlnaHQgZm9yIHRoZSB2aWRlbyB0byBhY2NvdW50XG4gIC8vIGZvciB0aGlzLlxuICBjb25zdCBhdmFpbGFibGVIZWlnaHQgPSBnZXRWaWRlb0hlaWdodCgpO1xuICAkKCcudmlkZW8tcGxheWVyJykuaGVpZ2h0KGF2YWlsYWJsZUhlaWdodCk7XG4gICQoJyNub3Rlcy1vdXRlcicpLmhlaWdodChhdmFpbGFibGVIZWlnaHQpO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIHRhcmdldCBoZWlnaHQgb2YgdGhlIHZpZGVvIHBsYXllciBiYXNlZCBvbiB0aGUgY29udGFpbmVyJ3NcbiAqIGRpbWVuc2lvbnMuXG4gKi9cbmZ1bmN0aW9uIGdldFZpZGVvSGVpZ2h0KCkge1xuICBjb25zdCBjb250YWluZXIgPSAkKE1PREFMX0NMQVNTKTtcblxuICAvLyBIZXJlIHdlIGdldCB0aGUgcmVtYWluaW5nIGhlaWdodCBvZiB0aGUgdmlkZW8ncyBjb250YWluZXIgdGhhdCBpc24ndCB0YWtlblxuICAvLyB1cCBieSB0aGUgdmlkZW8gbmF2aWdhdGlvbiBvcHRpb25zLlxuICByZXR1cm4gY29udGFpbmVyLmlubmVySGVpZ2h0KCkgLSBjb250YWluZXIuZmluZChUQUJfTkFWX0NMQVNTKS5vdXRlckhlaWdodCgpO1xufVxuXG4vLyBQcmVjb25kaXRpb246ICQoJyN2aWRlbycpIG11c3QgZXhpc3Qgb24gdGhlIERPTSBiZWZvcmUgdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQuXG5mdW5jdGlvbiBzZXR1cFZpZGVvRmFsbGJhY2soXG4gIHZpZGVvSW5mbyxcbiAgcGxheWVyV2lkdGgsXG4gIHBsYXllckhlaWdodCxcbiAgc2hvdWxkU3RpbGxBZGRDYWxsYmFja1xuKSB7XG4gIHNob3VsZFN0aWxsQWRkQ2FsbGJhY2sgPVxuICAgIHNob3VsZFN0aWxsQWRkQ2FsbGJhY2sgfHxcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuXG4gIGlmICghdmlkZW9JbmZvLmVuYWJsZV9mYWxsYmFjaykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICh2aWRlb0luZm8uZm9yY2VfZmFsbGJhY2spIHtcbiAgICBhZGRGYWxsYmFja1ZpZGVvUGxheWVyKHZpZGVvSW5mbywgcGxheWVyV2lkdGgsIHBsYXllckhlaWdodCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmlkZW9zLm9uWW91VHViZUJsb2NrZWQoZnVuY3Rpb24gKCkge1xuICAgIGlmICghc2hvdWxkU3RpbGxBZGRDYWxsYmFjaygpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGFkZEZhbGxiYWNrVmlkZW9QbGF5ZXIodmlkZW9JbmZvLCBwbGF5ZXJXaWR0aCwgcGxheWVySGVpZ2h0KTtcbiAgfSwgdmlkZW9JbmZvKTtcbn1cblxuLy8gVGhpcyBpcyBleHBvcnRlZCAoYW5kIHBsYWNlZCBvbiB3aW5kb3cpIGJlY2F1c2UgaXQgZ2V0cyBhY2Nlc3NlZCBleHRlcm5hbGx5IGZvciBvdXIgdmlkZW8gdGVzdCBwYWdlLlxudmlkZW9zLm9uWW91VHViZUJsb2NrZWQgPSBmdW5jdGlvbiAoeW91VHViZUJsb2NrZWRDYWxsYmFjaywgdmlkZW9JbmZvKSB7XG4gIHZhciBrZXkgPSB2aWRlb0luZm8gPyB2aWRlb0luZm8ua2V5IDogdW5kZWZpbmVkO1xuXG4gIC8vIEhhbmRsZSBVUkxzIHdpdGggZWl0aGVyIHlvdXR1YmUuY29tIG9yIHlvdXR1YmUtbm9jb29raWUuY29tLlxuICB2YXIgbm9Db29raWUgPSB2aWRlb0luZm9cbiAgICA/IHZpZGVvSW5mby5zcmMuaW5kZXhPZigneW91dHViZS1ub2Nvb2tpZS5jb20nKSAhPT0gLTFcbiAgICA6IHRydWU7XG5cbiAgdGVzdEltYWdlQWNjZXNzKFxuICAgIHlvdVR1YmVBdmFpbGFiaWxpdHlFbmRwb2ludFVSTChub0Nvb2tpZSkgKyAnPycgKyBNYXRoLnJhbmRvbSgpLFxuICAgIC8vIENhbGxlZCB3aGVuIFlvdVR1YmUgYXZhaWxhYmlsaXR5IGNoZWNrIHN1Y2NlZWRzLlxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIFRyYWNrIGV2ZW50IGluIEdvb2dsZSBBbmFseXRpY3MuXG4gICAgICB0cmFja0V2ZW50KCdzaG93dmlkZW8nLCAnc3RhcnRWaWRlb1lvdVR1YmUnLCBrZXkpO1xuICAgIH0sXG5cbiAgICAvLyBDYWxsZWQgd2hlbiBZb3VUdWJlIGF2YWlsYWJpbGl0eSBjaGVjayBmYWlscy5cbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBUcmFjayBldmVudCBpbiBHb29nbGUgQW5hbHl0aWNzLlxuICAgICAgdHJhY2tFdmVudCgnc2hvd3ZpZGVvJywgJ3N0YXJ0VmlkZW9GYWxsYmFjaycsIGtleSk7XG4gICAgICB5b3VUdWJlQmxvY2tlZENhbGxiYWNrKCk7XG4gICAgfVxuICApO1xufTtcblxuZnVuY3Rpb24geW91VHViZUF2YWlsYWJpbGl0eUVuZHBvaW50VVJMKG5vQ29va2llKSB7XG4gIGNvbnN0IHVybCA9IHdpbmRvdy5kb2N1bWVudC5VUkwudG9TdHJpbmcoKTtcbiAgaWYgKHVybC5pbmRleE9mKCdmb3JjZV95b3V0dWJlX2ZhbGxiYWNrJykgPj0gMCkge1xuICAgIHJldHVybiAnaHR0cHM6Ly91bnJlYWNoYWJsZS10ZXN0LXN1YmRvbWFpbi5leGFtcGxlLmNvbS9mYXZpY29uLmljbyc7XG4gIH0gZWxzZSBpZiAodXJsLmluZGV4T2YoJ2ZvcmNlX3lvdXR1YmVfcGxheWVyJykgPj0gMCkge1xuICAgIHJldHVybiAnaHR0cHM6Ly9jb2RlLm9yZy9pbWFnZXMvZmF2aWNvbi5pY28nO1xuICB9XG5cbiAgaWYgKG5vQ29va2llKSB7XG4gICAgcmV0dXJuICdodHRwczovL3d3dy55b3V0dWJlLW5vY29va2llLmNvbS9mYXZpY29uLmljbyc7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9mYXZpY29uLmljbyc7XG4gIH1cbn1cblxuLy8gUHJlY29uZGl0aW9uOiAkKCcjdmlkZW8nKSBtdXN0IGV4aXN0IG9uIHRoZSBET00gYmVmb3JlIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkLlxuZnVuY3Rpb24gYWRkRmFsbGJhY2tWaWRlb1BsYXllcih2aWRlb0luZm8sIHBsYXllcldpZHRoLCBwbGF5ZXJIZWlnaHQpIHtcbiAgLy8gQXBwZW5kIGA/Zm9yY2VfeW91dHViZV9mYWxsYmFjaz0xYCB0byBhIHVybCBpbiBvcmRlciB0byB1c2UgdGhlIGZhbGxiYWNrXG4gIC8vIHBsYXllclxuXG4gIHZhciBmYWxsYmFja1BsYXllcklEID0gJ2ZhbGxiYWNrUGxheWVyJyArIERhdGUubm93KCk7XG5cbiAgLy8gSWYgd2UgaGF2ZSB3YW50IHRoZSB2aWRlbyBwbGF5ZXIgdG8gYmUgYXQgMTAwJSB3aWR0aCAmIDEwMCUgaGVpZ2h0LCB0aGVuXG4gIC8vIGxldCdzIGFzc3VtZSB3ZSBhcmUgYXR0YWNoaW5nIHRvIGEgY29udGFpbmVyIHRoYXQgaXMgcmVsYXRpdmUsIGFuZCB3ZSB3YW50XG4gIC8vIHRvIGV4cGFuZCB0byBpdHMgZWRnZXMuICBUaGlzIGlzIGN1cnJlbnRseSBpbXBsZW1lbnRlZCBieSBhIHN0YW5kYWxvbmVcbiAgLy8gdmlkZW8uXG4gIGxldCBjb250YWluZXJEaXZTdHlsZTtcbiAgbGV0IGV4dHJhVmlkZW9TdHlsZSA9ICcnO1xuICBsZXQgZGltZW5zaW9ucyA9ICcnO1xuICBpZiAocGxheWVyV2lkdGggPT09ICcxMDAlJyAmJiBwbGF5ZXJIZWlnaHQgPT09ICcxMDAlJykge1xuICAgIGNvbnRhaW5lckRpdlN0eWxlID1cbiAgICAgICdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDsgYm90dG9tOiAwOyBsZWZ0OiAwOyByaWdodDogMCc7XG4gICAgZXh0cmFWaWRlb1N0eWxlID0gJ3Zqcy1maWxsJztcbiAgfSBlbHNlIHtcbiAgICBjb250YWluZXJEaXZTdHlsZSA9ICcnO1xuICAgIGRpbWVuc2lvbnMgPSAnd2lkdGg9XCInICsgcGxheWVyV2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIHBsYXllckhlaWdodCArICdcIiAnO1xuICB9XG5cbiAgdmFyIHBsYXllckNvZGUgPVxuICAgICc8ZGl2IHN0eWxlPVwiJyArXG4gICAgY29udGFpbmVyRGl2U3R5bGUgK1xuICAgICdcIj48dmlkZW8gaWQ9XCInICtcbiAgICBmYWxsYmFja1BsYXllcklEICtcbiAgICAnXCIgJyArXG4gICAgZGltZW5zaW9ucyArXG4gICAgKHZpZGVvSW5mby5hdXRvcGxheSA/ICdhdXRvcGxheSAnIDogJycpICtcbiAgICAnY2xhc3M9XCJ2aWRlby1qcyB2anMtZGVmYXVsdC1za2luIHZqcy1iaWctcGxheS1jZW50ZXJlZCAnICtcbiAgICBleHRyYVZpZGVvU3R5bGUgK1xuICAgICdcIiAnICtcbiAgICAnY29udHJvbHMgcHJlbG9hZD1cImF1dG9cIiAnICtcbiAgICAncG9zdGVyPVwiJyArXG4gICAgdmlkZW9JbmZvLnRodW1ibmFpbCArXG4gICAgJ1wiPicgK1xuICAgICc8c291cmNlIHNyYz1cIicgK1xuICAgIHZpZGVvSW5mby5kb3dubG9hZCArXG4gICAgJ1wiIHR5cGU9XCJ2aWRlby9tcDRcIi8+JyArXG4gICAgJzwvdmlkZW8+PC9kaXY+JztcblxuICAkKCcjdmlkZW9UYWJDb250YWluZXInKS5lbXB0eSgpO1xuICAkKCcjdmlkZW9UYWJDb250YWluZXInKS5hcHBlbmQocGxheWVyQ29kZSk7XG5cbiAgY29uc3QgdmlkZW9QbGF5ZXIgPSB2aWRlb2pzKFxuICAgIGZhbGxiYWNrUGxheWVySUQsXG4gICAge25hdGl2ZUNvbnRyb2xzRm9yVG91Y2g6IHRydWV9LFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkZmFsbGJhY2tQbGF5ZXIgPSAkKCcjJyArIGZhbGxiYWNrUGxheWVySUQpO1xuXG4gICAgICAvLyBIYW5kbGUgYSB2aWRlby5qcyBwbGF5ZXIgZXJyb3IuXG4gICAgICB0aGlzLm9uKCdlcnJvcicsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICRmYWxsYmFja1BsYXllci5hZGRDbGFzcygnZmFsbGJhY2stdmlkZW8tcGxheWVyLWZhaWxlZCcpO1xuICAgICAgICBpZiAoaGFzTm90ZXNUYWIoKSkge1xuICAgICAgICAgIG9wZW5Ob3Rlc1RhYigpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgZnVuY3Rpb24gcmVzaXplRmFsbGJhY2tQbGF5ZXIoKSB7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gJChNT0RBTF9DTEFTUykuaW5uZXJXaWR0aCgpO1xuICAgICAgICBjb25zdCBoZWlnaHQgPSBnZXRWaWRlb0hlaWdodCgpO1xuXG4gICAgICAgIC8vIEVtYmVkZGVkIHZpZGVvcyBkb24ndCBuZWVkIHRvIGJlIHJlc2l6ZWQgYW5kIGRvbid0IGhhdmUgYSBjb250YWluZXJcbiAgICAgICAgLy8gbW9kYWwuIE9ubHkgcmVzaXplIGlmIHdlIGFyZSBhYmxlIHRvIGZpbmQgdGhlIHdpZHRoIGFuZCBoZWlnaHQgb2ZcbiAgICAgICAgLy8gdGhlIGNvbnRhaW5lci5cbiAgICAgICAgaWYgKHdpZHRoICYmIGhlaWdodCkge1xuICAgICAgICAgIHZpZGVvUGxheWVyLmRpbWVuc2lvbnMod2lkdGgsIGhlaWdodCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gQSBzY3JvbGwgbGlzdGVuZXIgaXMgcmVxdWlyZWQgZm9yIGlPUyBkdWUgdG8gaXRzIHZpZXdwb3J0IG1hbmFnZW1lbnQgLVxuICAgICAgLy8gaXQgc2Nyb2xscyB0aGUgcGFnZSBkb3duIHRvIHNob3cgdGhlIHVybCAmIG5hdiBiYXIgYnV0IGRvZXNuJ3QgcmVzaXplXG4gICAgICAvLyB0aGUgcGFnZVxuICAgICAgbGV0IHJlc2l6ZUZhbGxiYWNrUGxheWVyTGlzdGVuZXIgPSBfLnRocm90dGxlKHJlc2l6ZUZhbGxiYWNrUGxheWVyLCAyMDApO1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHJlc2l6ZUZhbGxiYWNrUGxheWVyTGlzdGVuZXIpO1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHJlc2l6ZUZhbGxiYWNrUGxheWVyTGlzdGVuZXIpO1xuICAgICAgcmVzaXplRmFsbGJhY2tQbGF5ZXIoKTtcblxuICAgICAgLy8gUHJvcGVybHkgZGlzcG9zZSBvZiB2aWRlby5qcyBwbGF5ZXIgaW5zdGFuY2Ugd2hlbiBoaWRkZW4uXG4gICAgICAkZmFsbGJhY2tQbGF5ZXIucGFyZW50cygnLm1vZGFsJykub25lKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCByZXNpemVGYWxsYmFja1BsYXllckxpc3RlbmVyKTtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHJlc2l6ZUZhbGxiYWNrUGxheWVyTGlzdGVuZXIpO1xuICAgICAgICB2aWRlb1BsYXllci5kaXNwb3NlKCk7XG4gICAgICB9KTtcbiAgICB9XG4gICk7XG5cbiAgY29uc3QgYW5hbHl0aWNzRGF0YSA9IHtcbiAgICB1cmw6IGxvY2F0aW9uLmhyZWYsXG4gICAgdmlkZW86IHZpZGVvSW5mby5kb3dubG9hZCxcbiAgICBmYWxsYmFjazogJ2NvZGUub3JnJyxcbiAgfTtcblxuICB2aWRlb1BsYXllci5vbigncmVhZHknLCAoKSA9PlxuICAgIGFuYWx5dGljc1JlcG9ydGVyLnNlbmRFdmVudChFVkVOVFMuVklERU9fTE9BREVELCBhbmFseXRpY3NEYXRhKVxuICApO1xuICB2aWRlb1BsYXllci5vbigncGxheScsICgpID0+XG4gICAgYW5hbHl0aWNzUmVwb3J0ZXIuc2VuZEV2ZW50KEVWRU5UUy5WSURFT19TVEFSVEVELCBhbmFseXRpY3NEYXRhKVxuICApO1xuICB2aWRlb1BsYXllci5vbigncGF1c2UnLCAoKSA9PlxuICAgIGFuYWx5dGljc1JlcG9ydGVyLnNlbmRFdmVudChFVkVOVFMuVklERU9fUEFVU0VELCBhbmFseXRpY3NEYXRhKVxuICApO1xuXG4gIHZpZGVvUGxheWVyLm9uKCdlbmRlZCcsICgpID0+IHtcbiAgICBhbmFseXRpY3NSZXBvcnRlci5zZW5kRXZlbnQoRVZFTlRTLlZJREVPX0VOREVELCBhbmFseXRpY3NEYXRhKTtcbiAgICBvblZpZGVvRW5kZWQoKTtcbiAgfSk7XG4gIHNob3dGYWxsYmFja1BsYXllckNhcHRpb25MaW5rKHZpZGVvSW5mby5pbkRpYWxvZyk7XG59XG5cbmZ1bmN0aW9uIGhhc05vdGVzVGFiKCkge1xuICByZXR1cm4gJCgnLmRhc2hfbW9kYWxfYm9keSBhW2hyZWY9XCIjbm90ZXMtb3V0ZXJcIl0nKS5sZW5ndGggPiAwO1xufVxuXG5mdW5jdGlvbiBvcGVuTm90ZXNUYWIoKSB7XG4gIHZhciBub3Rlc1RhYkluZGV4ID0gJCgnLmRhc2hfbW9kYWxfYm9keSBhW2hyZWY9XCIjbm90ZXMtb3V0ZXJcIl0nKVxuICAgIC5wYXJlbnQoKVxuICAgIC5pbmRleCgpO1xuICAkKCcudWktdGFicycpLnRhYnMoJ29wdGlvbicsICdhY3RpdmUnLCBub3Rlc1RhYkluZGV4KTtcbn1cblxuZnVuY3Rpb24gb3BlblZpZGVvVGFiKCkge1xuICB2YXIgbm90ZXNUYWJJbmRleCA9ICQoJy5kYXNoX21vZGFsX2JvZHkgYVtocmVmPVwiI3ZpZGVvVGFiQ29udGFpbmVyXCJdJylcbiAgICAucGFyZW50KClcbiAgICAuaW5kZXgoKTtcbiAgJCgnLnVpLXRhYnMnKS50YWJzKCdvcHRpb24nLCAnYWN0aXZlJywgbm90ZXNUYWJJbmRleCk7XG59XG5cbmZ1bmN0aW9uIGdldFNob3dOb3RlcyhrZXksIHN1Y2Nlc3MsIGVycm9yKSB7XG4gICQuYWpheCh7XG4gICAgdXJsOiAnL25vdGVzLycgKyBrZXksXG4gICAgc3VjY2Vzczogc3VjY2VzcyxcbiAgICBlcnJvcjogZXJyb3IsXG4gIH0pO1xufVxuXG4vLyBDb252ZXJ0IGh0dHA6Ly8gdmlkZW8gdXJscyB0byBwcm90b2NvbC1yZWxhdGl2ZSAvLyB1cmxzIHRvIHByZXZlbnQgbWl4ZWQtY29udGVudCBsb2FkcyBvbiBodHRwcyBwYWdlcy5cbmZ1bmN0aW9uIHVwZ3JhZGVJbnNlY3VyZU9wdGlvbnMob3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5zcmMpIHtcbiAgICBvcHRpb25zLnNyYyA9IG9wdGlvbnMuc3JjLnJlcGxhY2UoL15odHRwOlxcL1xcLy8sICcvLycpO1xuICB9XG4gIGlmIChvcHRpb25zLmRvd25sb2FkKSB7XG4gICAgb3B0aW9ucy5kb3dubG9hZCA9IG9wdGlvbnMuZG93bmxvYWQucmVwbGFjZSgvXmh0dHA6XFwvXFwvLywgJy8vJyk7XG4gIH1cbn1cblxuLyoqXG4gKiBTaG93IGEgbGluayB0byBhY2NvbXBhbnkgdGhlIGZhbGxiYWNrIHZpZGVvIHBsYXllciwgd2hpY2gsIHdoZW4gY2xpY2tlZCxcbiAqIHBvcHMgYSBtb2RhbCBkaWFsb2cgZXhwbGFpbmluZyB0aGF0IHRoZSB5b3V0dWJlLW5vY29va2llLmNvbSB2aWRlbyBwbGF5ZXJcbiAqIGlzIGF2YWlsYWJsZSBpZiBjYXB0aW9ucyBhcmUgZGVzaXJlZC5cbiAqIEBwYXJhbSBpbkRpYWxvZyB7Ym9vbGVhbn0gV2hldGhlciB0aGlzIGlzIHBhcnQgb2YgdGhlIGhlYWRlciBvZiBhIGRpYWxvZy5cbiAqL1xuZnVuY3Rpb24gc2hvd0ZhbGxiYWNrUGxheWVyQ2FwdGlvbkxpbmsoaW5EaWFsb2cpIHtcbiAgY29uc3QgbW91bnRQb2ludCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuICAgICdmYWxsYmFjay1wbGF5ZXItY2FwdGlvbi1kaWFsb2ctbGluaydcbiAgKTtcbiAgaWYgKG1vdW50UG9pbnQpIHtcbiAgICBSZWFjdERPTS5yZW5kZXIoXG4gICAgICA8RmFsbGJhY2tQbGF5ZXJDYXB0aW9uRGlhbG9nTGluayBpbkRpYWxvZz17aW5EaWFsb2d9IC8+LFxuICAgICAgbW91bnRQb2ludFxuICAgICk7XG4gIH1cbn1cbiIsIi8qIGVzbGludC1kaXNhYmxlICovXG5cbi8vIGFwcHMvc3JjL2ZvbnRDb25zdGFudHMuanNcbi8vIEdFTkVSQVRFRCBGSUxFOiBETyBOT1QgTU9ESUZZIERJUkVDVExZXG4vLyBUaGlzIGdlbmVyYXRlZCBmaWxlIGV4cG9ydHMgYWxsIHZhcmlhYmxlcyBkZWZpbmVkIGluIHNoYXJlZC9jc3MvZm9udC5zY3NzXG4vLyBmb3IgdXNlIGluIEphdmFTY3JpcHQuIFRoZSBnZW5lcmF0b3Igc2NyaXB0IGlzIGNvbnZlcnQtc2Nzcy12YXJpYWJsZXMuanNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBcIm1ldHJvcG9saXMtZm9udFwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcIm1haW4tZm9udFwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcInRoaW4tZm9udC13ZWlnaHRcIjogXCIxMDBcIixcbiAgXCJleHRyYS1saWdodC1mb250LXdlaWdodFwiOiBcIjIwMFwiLFxuICBcImxpZ2h0LWZvbnQtd2VpZ2h0XCI6IFwiMzAwXCIsXG4gIFwicmVndWxhci1mb250LXdlaWdodFwiOiBcIjQwMFwiLFxuICBcIm1lZGl1bS1mb250LXdlaWdodFwiOiBcIjUwMFwiLFxuICBcInNlbWktYm9sZC1mb250LXdlaWdodFwiOiBcIjYwMFwiLFxuICBcImJvbGQtZm9udC13ZWlnaHRcIjogXCI3MDBcIixcbiAgXCJleHRyYS1ib2xkLWZvbnQtd2VpZ2h0XCI6IFwiODAwXCIsXG4gIFwiYmxhY2stZm9udC13ZWlnaHRcIjogXCI5MDBcIixcbiAgXCJtYWluLWZvbnQtdGhpblwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCIxMDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtdGhpbi1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMTAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWV4dHJhLWxpZ2h0XCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjIwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1leHRyYS1saWdodC1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMjAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWxpZ2h0XCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjMwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1saWdodC1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMzAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LXJlZ3VsYXJcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNDAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LXJlZ3VsYXItaXRhbGljXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjQwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIml0YWxpY1wiLFxuICB9LFxuICBcIm1haW4tZm9udC1tZWRpdW1cIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNTAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LW1lZGl1bS1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNTAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LXNlbWktYm9sZFwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI2MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtc2VtaS1ib2xkLWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI2MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtYm9sZFwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI3MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtYm9sZC1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNzAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWV4dHJhLWJvbGRcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiODAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWV4dHJhLWJvbGQtaXRhbGljXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjgwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIml0YWxpY1wiLFxuICB9LFxuICBcIm1haW4tZm9udC1ibGFja1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI5MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtYmxhY2staXRhbGljXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjkwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIml0YWxpY1wiLFxuICB9LFxuICBcImJhcmxvd1NlbWlDb25kZW5zZWQtc2VtaWJvbGRcIjogXCInQmFybG93IFNlbWkgQ29uZGVuc2VkIFNlbWlib2xkJywgc2Fucy1zZXJpZlwiLFxuICBcImJhcmxvd1NlbWlDb25kZW5zZWQtbWVkaXVtXCI6IFwiJ0JhcmxvdyBTZW1pIENvbmRlbnNlZCBNZWRpdW0nLCBzYW5zLXNlcmlmXCIsXG4gIFwiY29kZS1mb250XCI6IFwiJ1NvdXJjZSBDb2RlIFBybycsIE1vbmFjbywgJ0JpdHN0cmVhbSBWZXJhIFNhbnMgTW9ubycsICdMdWNpZGEgQ29uc29sZScsIFRlcm1pbmFsLCBtb25vc3BhY2VcIixcbiAgXCJmb250LWF3ZXNvbWUtY29yZS11cmxcIjogXCInaHR0cHM6Ly9kc2NvLmNvZGUub3JnL2Fzc2V0cy9mb250LWF3ZXNvbWUtcHJvLzE2ODQxNzg4NzYvY3NzL2ZvbnRhd2Vzb21lLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLWJyYW5kcy11cmxcIjogXCInaHR0cHM6Ly9kc2NvLmNvZGUub3JnL2Fzc2V0cy9mb250LWF3ZXNvbWUtcHJvLzE2ODQxNzg4NzYvY3NzL2JyYW5kcy5taW4uY3NzJ1wiLFxuICBcImZvbnQtYXdlc29tZS1zb2xpZC11cmxcIjogXCInaHR0cHM6Ly9kc2NvLmNvZGUub3JnL2Fzc2V0cy9mb250LWF3ZXNvbWUtcHJvLzE2ODQxNzg4NzYvY3NzL3NvbGlkLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLXJlZ3VsYXItdXJsXCI6IFwiJ2h0dHBzOi8vZHNjby5jb2RlLm9yZy9hc3NldHMvZm9udC1hd2Vzb21lLXByby8xNjg0MTc4ODc2L2Nzcy9yZWd1bGFyLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLXY0LWZvbnRzLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3MvdjQtZm9udC1mYWNlLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLXY0LXNoaW1zLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3MvdjQtc2hpbXMubWluLmNzcydcIixcbn07XG4iLCJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuLyoqXG4gKiBBdHRlbXB0IHRvIGNvbnN0cnVjdCBhbiBhYnNvbHV0ZSBQZWdhc3VzIHVybCAodGhhdCBpcyxcbiAqIHN0YXJ0aW5nIHdpdGggaHR0cHM6Ly9jb2RlLm9yZyBvciB0aGUgYXBwcm9wcmlhdGVcbiAqIGVxdWl2YWxlbnQgZm9yIHRoZSBjdXJyZW50IGVudmlyb25tZW50KSBmcm9tIGEgZ2l2ZW5cbiAqIHJlbGF0aXZlIHVybC4gIElmIHdlJ3JlIGFscmVhZHkgb24gcGVnYXN1cyB3ZSdsbFxuICoganVzdCByZXR1cm4gdGhlIHJlbGF0aXZlIHVybC5cbiAqIEBwYXJhbSB7c3RyaW5nfSByZWxhdGl2ZVVybCAtIHNob3VsZCBzdGFydCB3aXRoIGFcbiAqICAgbGVhZGluZyBzbGFzaC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBlZ2FzdXMocmVsYXRpdmVVcmwpIHtcbiAgaWYgKHdpbmRvdy5kYXNoYm9hcmQgJiYgd2luZG93LmRhc2hib2FyZC5DT0RFX09SR19VUkwpIHtcbiAgICByZXR1cm4gd2luZG93LmRhc2hib2FyZC5DT0RFX09SR19VUkwgKyByZWxhdGl2ZVVybDtcbiAgfVxuICByZXR1cm4gcmVsYXRpdmVVcmw7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgZ2xvYmFsIFVSTCBwcmVmaXggZm9yIHBlZ2FzdXNcbiAqIChlLmcuIFwiaHR0cHM6Ly9jb2RlLm9yZ1wiKSBhbGxvd2luZyB0aGUgcGVnYXN1cygpXG4gKiBtZXRob2QgYWJvdmUgdG8gZ2VuZXJhdGUgYWJzb2x1dGUgVVJMcy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBvcmlnaW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFBlZ2FzdXNPcmlnaW4ob3JpZ2luKSB7XG4gIHdpbmRvdy5kYXNoYm9hcmQgPSB3aW5kb3cuZGFzaGJvYXJkIHx8IHt9O1xuICB3aW5kb3cuZGFzaGJvYXJkLkNPREVfT1JHX1VSTCA9IG9yaWdpbjtcbn1cblxuLyoqXG4gKiBBdHRlbXB0IHRvIGNvbnN0cnVjdCBhbiBhYnNvbHV0ZSBTdHVkaW8gdXJsICh0aGF0IGlzLFxuICogc3RhcnRpbmcgd2l0aCBodHRwczovL3N0dWRpby5jb2RlLm9yZyBvciB0aGUgYXBwcm9wcmlhdGVcbiAqIGVxdWl2YWxlbnQgZm9yIHRoZSBjdXJyZW50IGVudmlyb25tZW50KSBmcm9tIGEgZ2l2ZW5cbiAqIHJlbGF0aXZlIHVybC4gIElmIHdlJ3JlIGFscmVhZHkgb24gZGFzaGJvYXJkIHdlJ2xsXG4gKiBqdXN0IHJldHVybiB0aGUgcmVsYXRpdmUgdXJsLlxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVXJsIC0gc2hvdWxkIHN0YXJ0IHdpdGggYVxuICogICBsZWFkaW5nIHNsYXNoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc3R1ZGlvKHJlbGF0aXZlVXJsKSB7XG4gIGlmICh3aW5kb3cucGVnYXN1cyAmJiB3aW5kb3cucGVnYXN1cy5TVFVESU9fVVJMKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5wZWdhc3VzLlNUVURJT19VUkwgKyByZWxhdGl2ZVVybDtcbiAgfVxuICByZXR1cm4gcmVsYXRpdmVVcmw7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgZ2xvYmFsIFVSTCBwcmVmaXggZm9yIGNvZGUgc3R1ZGlvXG4gKiAoZS5nLiBcImh0dHBzOi8vc3R1ZGlvLmNvZGUub3JnXCIpIGFsbG93aW5nIHRoZSBzdHVkaW8oKVxuICogbWV0aG9kIGFib3ZlIHRvIGdlbmVyYXRlIGFic29sdXRlIFVSTHMuXG4gKiBAcGFyYW0ge3N0cmluZ30gb3JpZ2luXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRTdHVkaW9PcmlnaW4ob3JpZ2luKSB7XG4gIHdpbmRvdy5wZWdhc3VzID0gd2luZG93LnBlZ2FzdXMgfHwge307XG4gIHdpbmRvdy5wZWdhc3VzLlNUVURJT19VUkwgPSBvcmlnaW47XG59XG5cbi8qKlxuICogRmV0Y2ggdGhlIG1ldGEgZGVzY3JpcHRpb24gdGFnIGZyb20gdGhlIHNwZWNpZmllZCB1cmxcbiAqIE1lbW9pemUgc28gdGhhdCB3ZSBvbmx5IHJlcXVlc3Qgb25jZSBwZXIgcmVsYXRpdmUgdXJsLlxuICovXG5leHBvcnQgY29uc3QgbWV0YVRhZ0Rlc2NyaXB0aW9uID0gXy5tZW1vaXplKHJlbGF0aXZlVXJsID0+IHtcbiAgcmV0dXJuIGZldGNoKHJlbGF0aXZlVXJsKVxuICAgIC50aGVuKHJlc3BvbnNlID0+IFByb21pc2UuYWxsKFtyZXNwb25zZS5zdGF0dXMsIHJlc3BvbnNlLnRleHQoKV0pKVxuICAgIC50aGVuKChbc3RhdHVzLCB0ZXh0XSkgPT4ge1xuICAgICAgLy8gQ2F0Y2ggZmV0Y2gncyA0MDAgZXJyb3JzXG4gICAgICBpZiAoc3RhdHVzIDwgMjAwIHx8IHN0YXR1cyA+PSAzMDApIHtcbiAgICAgICAgcmV0dXJuIHJlbGF0aXZlVXJsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbWV0YVRhZyA9ICQodGV4dClcbiAgICAgICAgICAuZmlsdGVyKFwibWV0YVtuYW1lPSdkZXNjcmlwdGlvbiddXCIpXG4gICAgICAgICAgLmF0dHIoJ2NvbnRlbnQnKTtcbiAgICAgICAgLy8gUmV0dXJuIHVybCBpZiB0aGVyZSB3YXMgbm8gZGVzY3JpcHRpb24gbWV0YSB0YWdcbiAgICAgICAgcmV0dXJuIG1ldGFUYWcgfHwgcmVsYXRpdmVVcmw7XG4gICAgICB9XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyb3IgPT4gcmVsYXRpdmVVcmwpO1xufSk7XG5cbmV4cG9ydCBjb25zdCBBRERfQV9QRVJTT05BTF9MT0dJTl9IRUxQX1VSTCA9XG4gICdodHRwczovL3N1cHBvcnQuY29kZS5vcmcvaGMvZW4tdXMvYXJ0aWNsZXMvMTE1MDAxNDc1MTMxLUFkZGluZy1hLXBlcnNvbmFsLWxvZ2luLXRvLWEtdGVhY2hlci1jcmVhdGVkLWFjY291bnQnO1xuZXhwb3J0IGNvbnN0IFJFTEVBU0VfT1JfREVMRVRFX1JFQ09SRFNfRVhQTEFOQVRJT04gPVxuICAnaHR0cHM6Ly9zdXBwb3J0LmNvZGUub3JnL2hjL2VuLXVzL2FydGljbGVzLzM2MDAxNTk4MzYzMSc7XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7QkFTRV9ESUFMT0dfV0lEVEh9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBjb2xvciBmcm9tICcuLi91dGlsL2NvbG9yJztcbmltcG9ydCBpMThuIGZyb20gJ0BjZG8vbG9jYWxlJztcblxuLyoqXG4gKiBCYXNlRGlhbG9nXG4gKiBBIGdlbmVyaWMgbW9kYWwgZGlhbG9nIHRoYXQgaGFzIGFuIHgtY2xvc2UgaW4gdGhlIHVwcGVyIHJpZ2h0LCBhbmQgYVxuICogc2VtaS10cmFuc3BhcmVudCBiYWNrZHJvcC4gQ2FuIGJlIGNsb3NlZCBieSBjbGlja2luZyB0aGUgeCwgY2xpY2tpbmcgdGhlXG4gKiBiYWNrZHJvcCwgb3IgcHJlc3NpbmcgZXNjLlxuICpcbiAqIFRvIHVzZSBhIHN0eWxlZCB2ZXJzaW9uIG9mIHRoaXMgY29tcG9uZW50IHRoYXQgZm9sbG93cyBvdXIgc3R5bGUgZ3VpZGUsXG4gKiB1c2UgU3R5bGl6ZWRCYXNlRGlhbG9nLmpzeC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZURpYWxvZyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgaXNPcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBoYW5kbGVDbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgdW5jbG9zZWFibGU6IFByb3BUeXBlcy5ib29sLFxuICAgIGhpZGVDbG9zZUJ1dHRvbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgaGFuZGxlS2V5RG93bjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgLy8gRm9yIHVzZSBpbiByZWFjdC1zdG9yeWJvb2s7IGFsbG93cyByZW5kZXJpbmcgZGlhbG9nIGlubGluZSBpbiBzdG9yeSB0YWJsZXMuXG4gICAgaGlkZUJhY2tkcm9wOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmdWxsV2lkdGg6IFByb3BUeXBlcy5ib29sLFxuICAgIGZ1bGxIZWlnaHQ6IFByb3BUeXBlcy5ib29sLFxuICAgIHVzZVVwZGF0ZWRTdHlsZXM6IFByb3BUeXBlcy5ib29sLFxuICAgIG5vTW9kYWxTdHlsZXM6IFByb3BUeXBlcy5ib29sLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmaXhlZFdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGZpeGVkSGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIHVzZUZsZXhib3g6IFByb3BUeXBlcy5ib29sLFxuICAgIGJvZHlJZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBib2R5Q2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHNvdW5kUGxheWVyOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIG92ZXJmbG93OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIC8vIFRlbXBvcmFyeSBwcm9wIHVudGlsIEFuaW1hdGlvblBpY2tlckJvZHkgaXMgcmVkZXNpZ25lZFxuICAgIGJhY2tkcm9wU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIH07XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5mb2N1c0RpYWxvZygpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIHRoaXMuZm9jdXNEaWFsb2coKTtcbiAgfVxuXG4gIGhhbmRsZUtleURvd24gPSBldmVudCA9PiB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgIHRoaXMuY2xvc2VEaWFsb2coKTtcbiAgICB9XG4gICAgdGhpcy5wcm9wcy5oYW5kbGVLZXlEb3duICYmIHRoaXMucHJvcHMuaGFuZGxlS2V5RG93bihldmVudCk7XG4gIH07XG5cbiAgY2xvc2VEaWFsb2cgPSAoKSA9PiB7XG4gICAgaWYgKCF0aGlzLnByb3BzLnVuY2xvc2VhYmxlICYmIHRoaXMucHJvcHMuaGFuZGxlQ2xvc2UpIHtcbiAgICAgIHRoaXMucHJvcHMuaGFuZGxlQ2xvc2UoKTtcbiAgICAgIGlmICh0aGlzLnByb3BzLnNvdW5kUGxheWVyKSB7XG4gICAgICAgIHRoaXMucHJvcHMuc291bmRQbGF5ZXIuc3RvcEFsbEF1ZGlvKCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIC8qKiBAcmV0dXJucyB7QXJyYXkuPEVsZW1lbnQ+fSAqL1xuICBnZXRUYWJiYWJsZUVsZW1lbnRzKCkge1xuICAgIHJldHVybiBbXS5zbGljZS5jYWxsKHRoaXMucmVmcy5kaWFsb2cucXVlcnlTZWxlY3RvckFsbCgnYSxidXR0b24saW5wdXQnKSk7XG4gIH1cblxuICBmb2N1c0RpYWxvZygpIHtcbiAgICAvLyBEb24ndCBzdGVhbCBmb2N1cyBpZiB0aGUgYWN0aXZlIGVsZW1lbnQgaXMgYWxyZWFkeSBhIGRlc2NlbmRhbnQgb2YgdGhlXG4gICAgLy8gZGlhbG9nIC0gcHJldmVudHMgZm9jdXMgbG9zcyBvbiB1cGRhdGVzIG9mIG9wZW4gQmFzZURpYWxvZyBjb21wb25lbnRzLlxuICAgIGNvbnN0IGRlc2NlbmRhbnRJc0FjdGl2ZSA9XG4gICAgICBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmXG4gICAgICB0aGlzLnJlZnMuZGlhbG9nICYmXG4gICAgICB0aGlzLnJlZnMuZGlhbG9nLmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuICAgIGlmICh0aGlzLnByb3BzLmlzT3BlbiAmJiAhZGVzY2VuZGFudElzQWN0aXZlKSB7XG4gICAgICB0aGlzLnJlZnMuZGlhbG9nLmZvY3VzKCk7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmICghdGhpcy5wcm9wcy5pc09wZW4gJiYgIXRoaXMucHJvcHMuaGlkZUJhY2tkcm9wKSB7XG4gICAgICByZXR1cm4gPGRpdiAvPjtcbiAgICB9XG5cbiAgICBsZXQgYm9keVN0eWxlLCBtb2RhbEJvZHlTdHlsZSwgeENsb3NlU3R5bGU7XG4gICAgaWYgKHRoaXMucHJvcHMuZnVsbFdpZHRoKSB7XG4gICAgICBib2R5U3R5bGUgPSB7XG4gICAgICAgIC4uLmJvZHlTdHlsZSxcbiAgICAgICAgd2lkdGg6ICc5MCUnLFxuICAgICAgICBtYXJnaW5MZWZ0OiAnLTQ1JScsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAodGhpcy5wcm9wcy5mdWxsSGVpZ2h0KSB7XG4gICAgICBib2R5U3R5bGUgPSB7XG4gICAgICAgIC4uLmJvZHlTdHlsZSxcbiAgICAgICAgaGVpZ2h0OiAnODAlJyxcbiAgICAgIH07XG4gICAgICBtb2RhbEJvZHlTdHlsZSA9IHtcbiAgICAgICAgLi4ubW9kYWxCb2R5U3R5bGUsXG4gICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBsZXQgd3JhcHBlckNsYXNzTmFtZXMgPSAnJztcbiAgICBsZXQgbW9kYWxDbGFzc05hbWVzID0gJ21vZGFsJztcbiAgICBsZXQgbW9kYWxCb2R5Q2xhc3NOYW1lcyA9ICdtb2RhbC1ib2R5JztcbiAgICBsZXQgbW9kYWxCYWNrZHJvcENsYXNzTmFtZXMgPSAnbW9kYWwtYmFja2Ryb3AnO1xuICAgIGNvbnN0IG92ZXJmbG93WCA9IHRoaXMucHJvcHMub3ZlcmZsb3cgfHwgJ2hpZGRlbic7XG4gICAgY29uc3Qgb3ZlcmZsb3dZID1cbiAgICAgIHRoaXMucHJvcHMub3ZlcmZsb3cgfHxcbiAgICAgICh0aGlzLnByb3BzLmZpeGVkSGVpZ2h0IHx8IHRoaXMucHJvcHMuZnVsbEhlaWdodCA/ICdoaWRkZW4nIDogJ2F1dG8nKTtcblxuICAgIGlmICh0aGlzLnByb3BzLnVzZVVwZGF0ZWRTdHlsZXMpIHtcbiAgICAgIHdyYXBwZXJDbGFzc05hbWVzID0gJ2Rhc2hib2FyZC1zdHlsZXMnO1xuICAgICAgbW9kYWxCb2R5Q2xhc3NOYW1lcyA9ICcnO1xuICAgICAgbW9kYWxCb2R5U3R5bGUgPSB7XG4gICAgICAgIGJhY2tncm91bmQ6ICcjZmZmJyxcbiAgICAgICAgaGVpZ2h0OiB0aGlzLnByb3BzLmZpeGVkSGVpZ2h0LFxuICAgICAgICBtYXhIZWlnaHQ6ICF0aGlzLnByb3BzLmZpeGVkSGVpZ2h0ICYmICc4MHZoJyxcbiAgICAgICAgb3ZlcmZsb3dYOiBvdmVyZmxvd1gsXG4gICAgICAgIG92ZXJmbG93WTogb3ZlcmZsb3dZLFxuICAgICAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgICB9O1xuICAgICAgaWYgKHRoaXMucHJvcHMudXNlRmxleGJveCkge1xuICAgICAgICBtb2RhbEJvZHlTdHlsZSA9IHtcbiAgICAgICAgICAuLi5tb2RhbEJvZHlTdHlsZSxcbiAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBib2R5U3R5bGUgPSB7XG4gICAgICAgIC4uLmJvZHlTdHlsZSxcbiAgICAgICAgd2lkdGg6IHRoaXMucHJvcHMuZml4ZWRXaWR0aCB8fCBCQVNFX0RJQUxPR19XSURUSCxcbiAgICAgICAgbWFyZ2luTGVmdDogLXRoaXMucHJvcHMuZml4ZWRXaWR0aCAvIDIgfHwgLTM1MCxcbiAgICAgIH07XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLm5vTW9kYWxTdHlsZXMpIHtcbiAgICAgIG1vZGFsQ2xhc3NOYW1lcyA9ICcnO1xuICAgICAgbW9kYWxCb2R5Q2xhc3NOYW1lcyA9ICcnO1xuICAgIH1cblxuICAgIGJvZHlTdHlsZSA9IHtcbiAgICAgIC4uLmJvZHlTdHlsZSxcbiAgICAgIC4uLih0aGlzLnByb3BzLmhpZGVCYWNrZHJvcCAmJiB7XG4gICAgICAgIHBvc2l0aW9uOiAnaW5pdGlhbCcsXG4gICAgICAgIG1hcmdpbkxlZnQ6IDAsXG4gICAgICB9KSxcbiAgICAgIC4uLnRoaXMucHJvcHMuc3R5bGUsXG4gICAgfTtcbiAgICB4Q2xvc2VTdHlsZSA9IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgdG9wOiAwLFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICBwYWRkaW5nOiAwLFxuICAgICAgY29sb3I6IGNvbG9yLm5ldXRyYWxfZGFyazMwLFxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICBmb250U2l6ZTogMjQsXG4gICAgICBib3JkZXI6ICdub25lJyxcbiAgICB9O1xuXG4gICAgbW9kYWxCb2R5Q2xhc3NOYW1lcyA9IFttb2RhbEJvZHlDbGFzc05hbWVzLCB0aGlzLnByb3BzLmJvZHlDbGFzc05hbWVdXG4gICAgICAuZmlsdGVyKGNsYXNzTmFtZSA9PiAhIWNsYXNzTmFtZSlcbiAgICAgIC5qb2luKCcgJyk7XG5cbiAgICBsZXQgYm9keSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e2JvZHlTdHlsZX1cbiAgICAgICAgdGFiSW5kZXg9XCItMVwiXG4gICAgICAgIGNsYXNzTmFtZT17bW9kYWxDbGFzc05hbWVzfVxuICAgICAgICByZWY9XCJkaWFsb2dcIlxuICAgICAgICBvbktleURvd249e3RoaXMuaGFuZGxlS2V5RG93bn1cbiAgICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHN0eWxlPXttb2RhbEJvZHlTdHlsZX1cbiAgICAgICAgICBpZD17dGhpcy5wcm9wcy5ib2R5SWR9XG4gICAgICAgICAgY2xhc3NOYW1lPXttb2RhbEJvZHlDbGFzc05hbWVzfVxuICAgICAgICA+XG4gICAgICAgICAgeyF0aGlzLnByb3BzLnVuY2xvc2VhYmxlICYmICF0aGlzLnByb3BzLmhpZGVDbG9zZUJ1dHRvbiAmJiAoXG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIGlkPVwieC1jbG9zZVwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuY2xvc2VEaWFsb2d9XG4gICAgICAgICAgICAgIGljb249XCJmYS1zb2xpZCBmYS14bWFya1wiXG4gICAgICAgICAgICAgIHN0eWxlPXt4Q2xvc2VTdHlsZX1cbiAgICAgICAgICAgICAgY29sb3I9XCJ3aGl0ZVwiXG4gICAgICAgICAgICAgIGFyaWEtbGFiZWw9e2kxOG4uY2xvc2VEaWFsb2coKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuXG4gICAgaWYgKHRoaXMucHJvcHMuaGlkZUJhY2tkcm9wKSB7XG4gICAgICByZXR1cm4gYm9keTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3dyYXBwZXJDbGFzc05hbWVzfT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT17bW9kYWxCYWNrZHJvcENsYXNzTmFtZXN9XG4gICAgICAgICAgc3R5bGU9e3RoaXMucHJvcHMuYmFja2Ryb3BTdHlsZX1cbiAgICAgICAgICBvbkNsaWNrPXt0aGlzLmNsb3NlRGlhbG9nfVxuICAgICAgICAvPlxuICAgICAgICB7Ym9keX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9CdXR0b24nO1xuaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuaW1wb3J0IEJhc2VEaWFsb2cgZnJvbSAnLi9CYXNlRGlhbG9nJztcbmltcG9ydCBEaWFsb2dGb290ZXIgZnJvbSAnLi90ZWFjaGVyRGFzaGJvYXJkL0RpYWxvZ0Zvb3Rlcic7XG5pbXBvcnQge3BlZ2FzdXN9IGZyb20gJ0BjZG8vYXBwcy9saWIvdXRpbC91cmxIZWxwZXJzJztcbmltcG9ydCBmb250Q29uc3RhbnRzIGZyb20gJ0BjZG8vYXBwcy9mb250Q29uc3RhbnRzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmFsbGJhY2tQbGF5ZXJDYXB0aW9uRGlhbG9nTGluayBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgaW5EaWFsb2c6IFByb3BUeXBlcy5ib29sLFxuICB9O1xuXG4gIHN0YXRlID0ge29wZW46IGZhbHNlfTtcbiAgb3BlbiA9ICgpID0+IHRoaXMuc2V0U3RhdGUoe29wZW46IHRydWV9KTtcbiAgY2xvc2UgPSAoKSA9PiB0aGlzLnNldFN0YXRlKHtvcGVuOiBmYWxzZX0pO1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPEZhbGxiYWNrUGxheWVyQ2FwdGlvbkRpYWxvZ1xuICAgICAgICAgIGlzRGlhbG9nT3Blbj17dGhpcy5zdGF0ZS5vcGVufVxuICAgICAgICAgIGhhbmRsZUNsb3NlPXt0aGlzLmNsb3NlfVxuICAgICAgICAvPlxuICAgICAgICB7IXRoaXMucHJvcHMuaW5EaWFsb2cgJiYgPHNwYW4+fCAmbmJzcDs8L3NwYW4+fVxuICAgICAgICA8YVxuICAgICAgICAgIGNsYXNzTmFtZT1cInVpLXRlc3QtZmFsbGJhY2stcGxheWVyLWNhcHRpb24tZGlhbG9nLWxpbmtcIlxuICAgICAgICAgIG9uQ2xpY2s9e3RoaXMub3Blbn1cbiAgICAgICAgICBzdHlsZT17c3R5bGVzLmxpbmt9XG4gICAgICAgID5cbiAgICAgICAgICB7aTE4bi5mYWxsYmFja1ZpZGVvQ2xvc2VkQ2FwdGlvbmluZ0xpbmsoKX1cbiAgICAgICAgPC9hPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5jbGFzcyBGYWxsYmFja1BsYXllckNhcHRpb25EaWFsb2cgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGlzRGlhbG9nT3BlbjogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgICBoYW5kbGVDbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8QmFzZURpYWxvZ1xuICAgICAgICB1c2VVcGRhdGVkU3R5bGVzXG4gICAgICAgIGlzT3Blbj17dGhpcy5wcm9wcy5pc0RpYWxvZ09wZW59XG4gICAgICAgIHN0eWxlPXtzdHlsZXMuZGlhbG9nfVxuICAgICAgICBoYW5kbGVDbG9zZT17dGhpcy5wcm9wcy5oYW5kbGVDbG9zZX1cbiAgICAgID5cbiAgICAgICAgPGgyIGNsYXNzTmFtZT1cInVpLXRlc3QtZmFsbGJhY2stcGxheWVyLWNhcHRpb24tZGlhbG9nXCI+XG4gICAgICAgICAge2kxOG4uZmFsbGJhY2tWaWRlb0Nsb3NlZENhcHRpb25pbmdEaWFsb2dIZWFkaW5nKCl9XG4gICAgICAgIDwvaDI+XG4gICAgICAgIDxkaXY+e2kxOG4uZmFsbGJhY2tWaWRlb0Nsb3NlZENhcHRpb25pbmdEaWFsb2dCb2R5KCl9PC9kaXY+XG4gICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5kaWFsb2dMaW5rQ29udGFpbmVyfT5cbiAgICAgICAgICA8YVxuICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5kaWFsb2dMaW5rfVxuICAgICAgICAgICAgaHJlZj17cGVnYXN1cygnL2VkdWNhdGUvaXQnKX1cbiAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7aTE4bi5mYWxsYmFja1ZpZGVvQ2xvc2VkQ2FwdGlvbmluZ0RpYWxvZ0JvZHlMaW5rKCl9XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPERpYWxvZ0Zvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICBfX3VzZURlcHJlY2F0ZWRUYWdcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInVpLXRlc3QtZmFsbGJhY2stcGxheWVyLWNhcHRpb24tZGlhbG9nLWNsb3NlXCJcbiAgICAgICAgICAgIHRleHQ9e2kxOG4uZmFsbGJhY2tWaWRlb0Nsb3NlZENhcHRpb25pbmdEaWFsb2dDbG9zZSgpfVxuICAgICAgICAgICAgb25DbGljaz17dGhpcy5wcm9wcy5oYW5kbGVDbG9zZX1cbiAgICAgICAgICAgIGNvbG9yPXtCdXR0b24uQnV0dG9uQ29sb3IuYnJhbmRTZWNvbmRhcnlEZWZhdWx0fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvRGlhbG9nRm9vdGVyPlxuICAgICAgPC9CYXNlRGlhbG9nPlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBsaW5rOiB7XG4gICAgY3Vyc29yOiAncG9pbnRlcicsXG4gIH0sXG4gIGRpYWxvZzoge1xuICAgIHBhZGRpbmdMZWZ0OiAyMCxcbiAgICBwYWRkaW5nUmlnaHQ6IDIwLFxuICAgIHBhZGRpbmdCb3R0b206IDIwLFxuICAgIHRleHRBbGlnbjogJ2xlZnQnLFxuICAgIC4uLmZvbnRDb25zdGFudHNbJ21haW4tZm9udC1yZWd1bGFyJ10sXG4gIH0sXG4gIGRpYWxvZ0xpbmtDb250YWluZXI6IHtcbiAgICBtYXJnaW5Ub3A6IDIwLFxuICB9LFxuICBkaWFsb2dMaW5rOiB7XG4gICAgY29sb3I6ICcjMDA1NTgwJyxcbiAgfSxcbn07XG4iLCJpbXBvcnQge3Nob3dWaWRlb0RpYWxvZ30gZnJvbSAnQGNkby9hcHBzL2NvZGUtc3R1ZGlvL3ZpZGVvcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge3ZpZGVvRGF0YVNoYXBlfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmlkZW9UaHVtYm5haWwgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHZpZGVvOiB2aWRlb0RhdGFTaGFwZSxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvcGVuSW5OZXdUYWI6IFByb3BUeXBlcy5ib29sLFxuICB9O1xuXG4gIG9uVGh1bWJuYWlsQ2xpY2sgPSAoKSA9PiB7XG4gICAgY29uc3QgdmlkZW8gPSB0aGlzLnByb3BzLnZpZGVvO1xuICAgIHRoaXMucHJvcHMub25DbGljayAmJiB0aGlzLnByb3BzLm9uQ2xpY2soKTtcbiAgICBpZiAodGhpcy5wcm9wcy5vcGVuSW5OZXdUYWIpIHtcbiAgICAgIHdpbmRvdy5vcGVuKHZpZGVvLnNyYywgJ19ibGFuaycsICdub29wZW5lcixub3JlZmVycmVyJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNob3dWaWRlb0RpYWxvZyhcbiAgICAgICAge1xuICAgICAgICAgIHNyYzogdmlkZW8uc3JjLFxuICAgICAgICAgIG5hbWU6IHZpZGVvLm5hbWUsXG4gICAgICAgICAga2V5OiB2aWRlby5rZXksXG4gICAgICAgICAgZG93bmxvYWQ6IHZpZGVvLmRvd25sb2FkLFxuICAgICAgICAgIHRodW1ibmFpbDogdmlkZW8udGh1bWJuYWlsLFxuICAgICAgICAgIGVuYWJsZV9mYWxsYmFjazogdmlkZW8uZW5hYmxlX2ZhbGxiYWNrLFxuICAgICAgICAgIGF1dG9wbGF5OiB2aWRlby5hdXRvcGxheSxcbiAgICAgICAgfSxcbiAgICAgICAgdHJ1ZVxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHZpZGVvID0gdGhpcy5wcm9wcy52aWRlbztcbiAgICByZXR1cm4gKFxuICAgICAgPGEgc3R5bGU9e3N0eWxlcy52aWRlb0xpbmt9IG9uQ2xpY2s9e3RoaXMub25UaHVtYm5haWxDbGlja30+XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBzdHlsZT17c3R5bGVzLnZpZGVvVGh1bWJuYWlsfVxuICAgICAgICAgIHNyYz17dmlkZW8udGh1bWJuYWlsfVxuICAgICAgICAgIGFsdD17dmlkZW8ubmFtZX1cbiAgICAgICAgLz5cbiAgICAgICAgPHNwYW4+e3ZpZGVvLm5hbWV9PC9zcGFuPlxuICAgICAgPC9hPlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICB2aWRlb0xpbms6IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBtYXJnaW46IDgsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIGZvbnRTaXplOiAxNixcbiAgICBsaW5lSGVpZ2h0OiAnMjVweCcsXG4gICAgY3Vyc29yOiAncG9pbnRlcicsXG4gIH0sXG4gIHZpZGVvVGh1bWJuYWlsOiB7XG4gICAgYm9yZGVyUmFkaXVzOiA1LFxuICAgIGhlaWdodDogNDAsXG4gICAgd2lkdGg6ICdhdXRvJyxcbiAgICBtYXJnaW5SaWdodDogOCxcbiAgfSxcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IHN0eWxlID0ge1xuICBhYm92ZUZvb3Rlcjoge1xuICAgIGhlaWdodDogJzkwcHgnLFxuICB9LFxuICBmb290ZXI6IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICBoZWlnaHQ6ICcxMDBweCcsXG4gICAgcGFkZGluZzogJzAgMjBweCcsXG4gICAgbGVmdDogJzAnLFxuICAgIHJpZ2h0OiAnMCcsXG4gICAgYm90dG9tOiAnMCcsXG4gICAgYmFja2dyb3VuZDogJ3doaXRlJyxcbiAgICB6SW5kZXg6ICc1MDAnLFxuICB9LFxuICBidXR0b25Sb3c6IHtcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgZmxleEZsb3c6ICdyb3cnLFxuICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gIH0sXG4gIHJpZ2h0QWxpZ246IHtcbiAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtZW5kJyxcbiAgfSxcbn07XG5cbi8qKlxuICogRXh0cmVtZWx5IHNpbXBsZSBmb290ZXIgZXhwZWN0aW5nIHR3byBjaGlsZHJlbiB0byBhbGlnbiB0byB0aGUgbGVmdCBhbmRcbiAqIHJpZ2h0IHNpZGVzIG9mIHRoZSBkaWFsb2csIHJlc3BlY3RpdmVseS5cbiAqIFNlZSBEaWFsb2dGb290ZXIuc3RvcnkuanN4IGZvciB1c2FnZSBleGFtcGxlcy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGlhbG9nRm9vdGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICByaWdodEFsaWduOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLmFueSxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgbGV0IGJ1dHRvblJvd1N0eWxlID0gdGhpcy5wcm9wcy5yaWdodEFsaWduXG4gICAgICA/IHsuLi5zdHlsZS5idXR0b25Sb3csIC4uLnN0eWxlLnJpZ2h0QWxpZ259XG4gICAgICA6IHN0eWxlLmJ1dHRvblJvdztcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGUuYWJvdmVGb290ZXJ9IC8+XG4gICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlLmZvb3Rlcn0+XG4gICAgICAgICAgPGhyIC8+XG4gICAgICAgICAgPGRpdiBzdHlsZT17YnV0dG9uUm93U3R5bGV9Pnt0aGlzLnByb3BzLmNoaWxkcmVufTwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmV4cG9ydCBjb25zdCB2aWRlb0RhdGFTaGFwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIHNyYzogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBrZXk6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGRvd25sb2FkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0aHVtYm5haWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGVuYWJsZV9mYWxsYmFjazogUHJvcFR5cGVzLmJvb2wsXG4gIGF1dG9wbGF5OiBQcm9wVHlwZXMuYm9vbCxcbn0pO1xuIiwiLyogZXNsaW50LWRpc2FibGUgKi9cblxuLy8gYXBwcy9zcmMvdXRpbC9jb2xvci5qc1xuLy8gR0VORVJBVEVEIEZJTEU6IERPIE5PVCBNT0RJRlkgRElSRUNUTFlcbi8vIFRoaXMgZ2VuZXJhdGVkIGZpbGUgZXhwb3J0cyBhbGwgdmFyaWFibGVzIGRlZmluZWQgaW4gc2hhcmVkL2Nzcy9jb2xvci5zY3NzXG4vLyBmb3IgdXNlIGluIEphdmFTY3JpcHQuIFRoZSBnZW5lcmF0b3Igc2NyaXB0IGlzIGNvbnZlcnQtc2Nzcy12YXJpYWJsZXMuanNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBcImJsYWNrXCI6IFwiIzAwMFwiLFxuICBcImJhY2tncm91bmRfYmxhY2tcIjogXCIjMTIxNDE2XCIsXG4gIFwiZGFya19ncmF5XCI6IFwiIzJEMzEzOVwiLFxuICBcImRhcmtlc3RfZ3JheVwiOiBcIiMyOTJGMzZcIixcbiAgXCJkYXJrX3NsYXRlX2dyYXlcIjogXCIjMjgyYzM0XCIsXG4gIFwiZGFya2VzdF9zbGF0ZV9ncmF5XCI6IFwiIzI1MjkyZFwiLFxuICBcImRhcmtfY2hhcmNvYWxcIjogXCIjNGQ1NzVmXCIsXG4gIFwiY2hhcmNvYWxcIjogXCIjNWI2NzcwXCIsXG4gIFwibGlnaHRfZ3JheVwiOiBcIiM5NDljYTJcIixcbiAgXCJsaWdodGVyX2dyYXlcIjogXCIjYzZjYWNkXCIsXG4gIFwibGlnaHRlc3RfZ3JheVwiOiBcIiNlN2U4ZWFcIixcbiAgXCJiYWNrZ3JvdW5kX2dyYXlcIjogXCIjZjJmMmYyXCIsXG4gIFwiZGltZ3JheVwiOiBcIiM2OTY5NjlcIixcbiAgXCJ3aGl0ZVwiOiBcIiNmZmZcIixcbiAgXCJkZWZhdWx0X2JsdWVcIjogXCIjMzY3MGIzXCIsXG4gIFwiZGFya190ZWFsXCI6IFwiIzAwOTRhM1wiLFxuICBcInRlYWxcIjogXCIjMDA5M2E0XCIsXG4gIFwiYXBwbGFiX2J1dHRvbl90ZWFsXCI6IFwiIzFhYmM5Y1wiLFxuICBcImxpZ2h0X3RlYWxcIjogXCIjNTljYWQzXCIsXG4gIFwibGlnaHRpc2hfdGVhbFwiOiBcIiM4MGQ2ZGVcIixcbiAgXCJsaWdodGVyX3RlYWxcIjogXCIjYTZlM2U4XCIsXG4gIFwibGlnaHRlc3RfdGVhbFwiOiBcIiNkOWYzZjVcIixcbiAgXCJhaV9ydWJyaWNfY3lhblwiOiBcIiMzY2ZmZjhcIixcbiAgXCJwdXJwbGVcIjogXCIjOGM1MmJhXCIsXG4gIFwibGlnaHRfcHVycGxlXCI6IFwiI2E2OWJjMVwiLFxuICBcImxpZ2h0ZXJfcHVycGxlXCI6IFwiI2NmYzlkZVwiLFxuICBcImxpZ2h0ZXN0X3B1cnBsZVwiOiBcIiNlYmU4ZjFcIixcbiAgXCJjeWFuXCI6IFwiIzAwOTRjYVwiLFxuICBcImxpZ2h0X2N5YW5cIjogXCIjNTliOWRjXCIsXG4gIFwibGlnaHRlcl9jeWFuXCI6IFwiI2E2ZGFlZFwiLFxuICBcImxpZ2h0ZXN0X2N5YW5cIjogXCIjZDllZmY3XCIsXG4gIFwiYWxtb3N0X3doaXRlX2N5YW5cIjogXCIjZjVmY2ZmXCIsXG4gIFwib3JhbmdlXCI6IFwiI2ZmYTQwMFwiLFxuICBcImxpZ2h0X29yYW5nZVwiOiBcIiNmZmM0NTlcIixcbiAgXCJsaWdodGVyX29yYW5nZVwiOiBcIiNmZmUwYTZcIixcbiAgXCJsaWdodGVzdF9vcmFuZ2VcIjogXCIjZmZmMmQ5XCIsXG4gIFwiZGFya19vcmFuZ2VcIjogXCIjZmY4NjAwXCIsXG4gIFwiZ3JlZW5cIjogXCIjYjliZjE1XCIsXG4gIFwibGlnaHRfZ3JlZW5cIjogXCIjZDFkNTY3XCIsXG4gIFwibGlnaHRlcl9ncmVlblwiOiBcIiNlN2U5YWRcIixcbiAgXCJsaWdodGVzdF9ncmVlblwiOiBcIiNmNWY1ZGNcIixcbiAgXCJoaWdobGlnaHRfZ3JlZW5cIjogXCIjOGFmYzliXCIsXG4gIFwieWVsbG93XCI6IFwiI2ZmYjgxZFwiLFxuICBcImxpZ2h0X3llbGxvd1wiOiBcIiNmZmRiNzRcIixcbiAgXCJsaWdodGVyX3llbGxvd1wiOiBcIiNmZmViYjVcIixcbiAgXCJsaWdodGVzdF95ZWxsb3dcIjogXCIjZmZmN2RmXCIsXG4gIFwiZ29sZGVucm9kXCI6IFwiI2RhYTUyMFwiLFxuICBcImhlYWRlcl90ZXh0XCI6IFwiI2ZmZlwiLFxuICBcImJrZ25kX2NvbG9yXCI6IFwiIzAwOTNhNFwiLFxuICBcImluc2V0X2NvbG9yXCI6IFwiI2M2Y2FjZFwiLFxuICBcImRhcmtfY29sb3JcIjogXCIjOGM1MmJhXCIsXG4gIFwiaGRyX2NvbG9yXCI6IFwiIzhjNTJiYVwiLFxuICBcInJlZFwiOiBcIiNjMDBcIixcbiAgXCJsaWdodGVzdF9yZWRcIjogXCIjZmNjXCIsXG4gIFwiZGFya19yZWRcIjogXCIjZDYyOTExXCIsXG4gIFwicmVhbGdyZWVuXCI6IFwiIzAwODAwMFwiLFxuICBcInJlYWx5ZWxsb3dcIjogXCIjZmYwXCIsXG4gIFwibXVzdGFyZHllbGxvd1wiOiBcIiNlZmNkMWNcIixcbiAgXCJ0d2l0dGVyX2JsdWVcIjogXCIjMDBhY2VkXCIsXG4gIFwiZmFjZWJvb2tfYmx1ZVwiOiBcIiMzYjU5OThcIixcbiAgXCJsaW5rZWRpbl9ibHVlXCI6IFwiIzAwNzdCNVwiLFxuICBcImRhcmtfYmx1ZVwiOiBcIiMwMDY0N2ZcIixcbiAgXCJibG9ja2x5X2ZseW91dF9ncmF5XCI6IFwiI2RkZFwiLFxuICBcImRlZmF1bHRfdGV4dFwiOiBcIiMzMzNcIixcbiAgXCJib3JkZXJfZ3JheVwiOiBcIiNiYmJcIixcbiAgXCJib3JkZXJfbGlnaHRfZ3JheVwiOiBcIiNkOGQ4ZDhcIixcbiAgXCJ0YWJsZV9oZWFkZXJcIjogXCIjZWNlY2VjXCIsXG4gIFwidGFibGVfbGlnaHRfcm93XCI6IFwiI2ZjZmNmY1wiLFxuICBcInRhYmxlX2Rhcmtfcm93XCI6IFwiI2Y0ZjRmNFwiLFxuICBcImxldmVsX3N1Ym1pdHRlZFwiOiBcIiM4YzUyYmFcIixcbiAgXCJsZXZlbF9wZXJmZWN0XCI6IFwicmdiKDE0LCAxOTAsIDE0KVwiLFxuICBcImxldmVsX3Bhc3NlZFwiOiBcInJnYigxNTksIDIxMiwgMTU5KVwiLFxuICBcImxldmVsX2F0dGVtcHRlZFwiOiBcIiNmZjBcIixcbiAgXCJsZXZlbF9ub3RfdHJpZWRcIjogXCIjZmVmZWZlXCIsXG4gIFwibGV2ZWxfY3VycmVudFwiOiBcIiNmZmE0MDBcIixcbiAgXCJsZXZlbF9yZXZpZXdfcmVqZWN0ZWRcIjogXCIjYzAwXCIsXG4gIFwibGV2ZWxfcmV2aWV3X2FjY2VwdGVkXCI6IFwicmdiKDExLCAxNDIsIDExKVwiLFxuICBcImFzc2Vzc21lbnRcIjogXCIjMDA5NGNhXCIsXG4gIFwid29ya3NwYWNlX3J1bm5pbmdfYmFja2dyb3VuZFwiOiBcIiNlNWU1ZTVcIixcbiAgXCJkYXJrX3B1cnBsZVwiOiBcIiM2ODJBNzdcIixcbiAgXCJicmlnaHRfZ3JlZW5cIjogXCIjMGViZTBlXCIsXG4gIFwibmVvbl9waW5rXCI6IFwiI2U5MTE4ZlwiLFxuICBcImxpbmtfY29sb3JcIjogXCIjMDU5NmNlXCIsXG4gIFwic2hhZG93XCI6IFwicmdiYSgwLCAwLCAwLCAwLjMpXCIsXG4gIFwiYm9vdHN0cmFwX2J1dHRvbl9ibHVlXCI6IFwiIzMzN2FiN1wiLFxuICBcImJvb3RzdHJhcF9idXR0b25fcmVkXCI6IFwiI2Q5NTM0ZlwiLFxuICBcImJvb3RzdHJhcF9lcnJvcl9iYWNrZ3JvdW5kXCI6IFwiI2YyZGVkZVwiLFxuICBcImJvb3RzdHJhcF9lcnJvcl90ZXh0XCI6IFwiI2I5NGE0OFwiLFxuICBcImJvb3RzdHJhcF92M19lcnJvcl90ZXh0XCI6IFwiI2E5NDQ0MlwiLFxuICBcImJvb3RzdHJhcF9lcnJvcl9ib3JkZXJcIjogXCIjZWJjY2QxXCIsXG4gIFwiYm9vdHN0cmFwX3dhcm5pbmdfYmFja2dyb3VuZFwiOiBcIiNmY2Y4ZTNcIixcbiAgXCJib290c3RyYXBfd2FybmluZ190ZXh0XCI6IFwiI2MwOTg1M1wiLFxuICBcImJvb3RzdHJhcF93YXJuaW5nX2JvcmRlclwiOiBcIiNmYWViY2NcIixcbiAgXCJib290c3RyYXBfYm9yZGVyX2NvbG9yXCI6IFwiI2NjY2NjY1wiLFxuICBcImJvb3RzdHJhcF9zdWNjZXNzX2JhY2tncm91bmRcIjogXCIjZGZmMGQ4XCIsXG4gIFwiYm9vdHN0cmFwX3N1Y2Nlc3NfdGV4dFwiOiBcIiM0Njg4NDdcIixcbiAgXCJib290c3RyYXBfc3VjY2Vzc19ib3JkZXJcIjogXCIjZDZlOWM2XCIsXG4gIFwiZHJvcGxldF9saWdodF9ncmVlblwiOiBcIiNkM2U5NjVcIixcbiAgXCJkcm9wbGV0X2JsdWVcIjogXCIjNjRiNWY2XCIsXG4gIFwiZHJvcGxldF9icmlnaHRfYmx1ZVwiOiBcIiMxOWMzZTFcIixcbiAgXCJkcm9wbGV0X3llbGxvd1wiOiBcIiNmZmYxNzZcIixcbiAgXCJkcm9wbGV0X29yYW5nZVwiOiBcIiNmZmI3NGRcIixcbiAgXCJkcm9wbGV0X3JlZFwiOiBcIiNmNzgxODNcIixcbiAgXCJkcm9wbGV0X2N5YW5cIjogXCIjNGRkMGUxXCIsXG4gIFwiZHJvcGxldF9waW5rXCI6IFwiI2Y1N2FjNlwiLFxuICBcImRyb3BsZXRfcHVycGxlXCI6IFwiI2JiNzdjN1wiLFxuICBcImRyb3BsZXRfZ3JlZW5cIjogXCIjNjhkOTk1XCIsXG4gIFwiZHJvcGxldF93aGl0ZVwiOiBcIiNmZmZcIixcbiAgXCJvY2VhbnNfZGVlcF9ibHVlXCI6IFwicmdiKDIsIDAsIDI4KVwiLFxuICBcImRhcmtfYmxhY2tcIjogXCIjMTIxMjEyXCIsXG4gIFwiYnJhbmRfcHJpbWFyeV9saWdodFwiOiBcIiNBQkRGRTVcIixcbiAgXCJicmFuZF9wcmltYXJ5X2RlZmF1bHRcIjogXCIjMDA5RUIwXCIsXG4gIFwiYnJhbmRfcHJpbWFyeV9kYXJrXCI6IFwiIzAwODI5MVwiLFxuICBcImJyYW5kX3NlY29uZGFyeV9saWdodFwiOiBcIiNFMEQxRUNcIixcbiAgXCJicmFuZF9zZWNvbmRhcnlfZGVmYXVsdFwiOiBcIiM4QzUyQkFcIixcbiAgXCJicmFuZF9zZWNvbmRhcnlfZGFya1wiOiBcIiM2RjQ4OEVcIixcbiAgXCJicmFuZF9hY2NlbnRfZGVmYXVsdFwiOiBcIiNFRDYwNjBcIixcbiAgXCJicmFuZF90ZWFsXzVcIjogXCIjREZGMkY0XCIsXG4gIFwicHJvZHVjdF9hZmZpcm1hdGl2ZV9kZWZhdWx0XCI6IFwiIzNFQTMzRVwiLFxuICBcInByb2R1Y3RfbmVnYXRpdmVfbGlnaHRcIjogXCIjRkRFQkU5XCIsXG4gIFwicHJvZHVjdF9uZWdhdGl2ZV9kZWZhdWx0XCI6IFwiI0U1MzExQVwiLFxuICBcInByb2R1Y3RfbmVnYXRpdmVfZGFya1wiOiBcIiNBQTI1MTNcIixcbiAgXCJwcm9kdWN0X2NhdXRpb25fZGVmYXVsdFwiOiBcIiNGOUNCMjhcIixcbiAgXCJwcm9kdWN0X2luZm9ybWF0aW9uX2RlZmF1bHRcIjogXCIjMDA3QUNDXCIsXG4gIFwibmV1dHJhbF93aGl0ZVwiOiBcIiNGRkZGRkZcIixcbiAgXCJuZXV0cmFsX2xpZ2h0XCI6IFwiI0Y3RjhGQVwiLFxuICBcIm5ldXRyYWxfZGFyazEwXCI6IFwiI0VBRUJFQlwiLFxuICBcIm5ldXRyYWxfZGFyazIwXCI6IFwiI0Q0RDVEN1wiLFxuICBcIm5ldXRyYWxfZGFyazMwXCI6IFwiI0JGQzFDM1wiLFxuICBcIm5ldXRyYWxfZGFyazQwXCI6IFwiI0E5QUNBRlwiLFxuICBcIm5ldXRyYWxfZGFyazUwXCI6IFwiIzk0OTc5QlwiLFxuICBcIm5ldXRyYWxfZGFyazYwXCI6IFwiIzdGODI4NlwiLFxuICBcIm5ldXRyYWxfZGFyazcwXCI6IFwiIzZBNkU3M1wiLFxuICBcIm5ldXRyYWxfZGFyazgwXCI6IFwiIzU0NTk1RVwiLFxuICBcIm5ldXRyYWxfZGFyazkwXCI6IFwiIzNGNDQ0QlwiLFxuICBcIm5ldXRyYWxfZGFya1wiOiBcIiMyOTJGMzZcIixcbiAgXCJnb29nbGVfYnJhbmRfY29sb3JcIjogXCIjMEY5RDU4XCIsXG4gIFwibWljcm9zb2Z0X2JyYW5kX2NvbG9yXCI6IFwiI0ZGQjkwMFwiLFxuICBcImZhY2Vib29rX2JyYW5kX2NvbG9yXCI6IFwiIzNCNTk5OFwiLFxuICBcImxpZ2h0X3ByaW1hcnlfMTAwXCI6IFwiI0FCREZFNVwiLFxuICBcImxpZ2h0X3ByaW1hcnlfNTAwXCI6IFwiIzAwOTNBNFwiLFxuICBcImxpZ2h0X3ByaW1hcnlfNzAwXCI6IFwiIzAwODI5MVwiLFxuICBcImxpZ2h0X3NlY29uZGFyeV8xMDBcIjogXCIjRTJENEVFXCIsXG4gIFwibGlnaHRfc2Vjb25kYXJ5XzUwMFwiOiBcIiM4QzUyQkFcIixcbiAgXCJsaWdodF9zZWNvbmRhcnlfNzAwXCI6IFwiIzZGNDg4RVwiLFxuICBcImxpZ2h0X2dyYXlfNTBcIjogXCIjRjdGOEZBXCIsXG4gIFwibGlnaHRfZ3JheV8xMDBcIjogXCIjRUFFQkVCXCIsXG4gIFwibGlnaHRfZ3JheV8yMDBcIjogXCIjRDRENUQ3XCIsXG4gIFwibGlnaHRfZ3JheV8zMDBcIjogXCIjQkZDMUMzXCIsXG4gIFwibGlnaHRfZ3JheV81MDBcIjogXCIjOTQ5NzlCXCIsXG4gIFwibGlnaHRfZ3JheV83MDBcIjogXCIjNkE2RTczXCIsXG4gIFwibGlnaHRfZ3JheV84MDBcIjogXCIjNTQ1OTVFXCIsXG4gIFwibGlnaHRfZ3JheV85MDBcIjogXCIjM0Y0NDRCXCIsXG4gIFwibGlnaHRfYWZmaXJtYXRpdmVfMTAwXCI6IFwiI0UyRjFFMlwiLFxuICBcImxpZ2h0X2FmZmlybWF0aXZlXzUwMFwiOiBcIiMzRUEzM0VcIixcbiAgXCJsaWdodF9uZWdhdGl2ZV81MDBcIjogXCIjRTUzMTFBXCIsXG4gIFwibGlnaHRfY2F1dGlvbl81MDBcIjogXCIjRjlDQjI4XCIsXG4gIFwibGlnaHRfaW5mb18xMDBcIjogXCIjRENFRkZCXCIsXG4gIFwibGlnaHRfaW5mb181MDBcIjogXCIjMTg5MkUzXCIsXG4gIFwibGlnaHRfd2hpdGVcIjogXCIjRkZGRkZGXCIsXG4gIFwibGlnaHRfYmxhY2tcIjogXCIjMjkyRjM2XCIsXG59O1xuIiwiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXHR2YXIgbmF0aXZlQ29kZVN0cmluZyA9ICdbbmF0aXZlIGNvZGVdJztcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xuXHRcdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGlmIChhcmcudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcgJiYgIWFyZy50b1N0cmluZy50b1N0cmluZygpLmluY2x1ZGVzKCdbbmF0aXZlIGNvZGVdJykpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIFN5bWJvbC5mb3IgJiZcbiAgICBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykpIHx8XG4gICAgMHhlYWM3O1xuXG4gIHZhciBpc1ZhbGlkRWxlbWVudCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJlxuICAgICAgb2JqZWN0ICE9PSBudWxsICYmXG4gICAgICBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgfTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKGlzVmFsaWRFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFZpZGVvVGh1bWJuYWlsIGZyb20gJy4vVmlkZW9UaHVtYm5haWwnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudDogVmlkZW9UaHVtYm5haWwsXG59O1xuXG5jb25zdCBUZW1wbGF0ZSA9IGFyZ3MgPT4gPFZpZGVvVGh1bWJuYWlsIHsuLi5hcmdzfSAvPjtcblxuZXhwb3J0IGNvbnN0IFNpbXBsZSA9IFRlbXBsYXRlLmJpbmQoe30pO1xuU2ltcGxlLmFyZ3MgPSB7XG4gIHZpZGVvOiB7XG4gICAgYXV0b3BsYXk6IHRydWUsXG4gICAgZG93bmxvYWQ6ICdodHRwczovL3ZpZGVvcy5jb2RlLm9yZy8yMDE1L2NzcC9hcHBsYWIvZnVuY3Rpb25zLm1wNCcsXG4gICAgZW5hYmxlX2ZhbGxiYWNrOiB0cnVlLFxuICAgIGtleTogJ2NzcF9hcHBsYWJfZnVuY3Rpb25zJyxcbiAgICBuYW1lOiAnSW50cm9kdWN0aW9uIHRvIEZ1bmN0aW9ucycsXG4gICAgc3JjOiAnaHR0cHM6Ly93d3cueW91dHViZS1ub2Nvb2tpZS5jb20vZW1iZWQveVBXUWZhNENIYncvP2F1dG9wbGF5PTEmZW5hYmxlanNhcGk9MSZpdl9sb2FkX3BvbGljeT0zJm1vZGVzdGJyYW5kaW5nPTEmcmVsPTAmc2hvd2luZm89MSZ2PXlQV1FmYTRDSGJ3Jndtb2RlPXRyYW5zcGFyZW50JyxcbiAgICB0aHVtYm5haWw6XG4gICAgICAnaHR0cHM6Ly9zdHVkaW8uY29kZS5vcmcvYy92aWRlb190aHVtYm5haWxzL2NzcF9hcHBsYWJfY29uZGl0aW9uYWxzXzJCLmpwZycsXG4gIH0sXG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBleHRlbmRcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZXh0ZW5kKCkge1xuICAgIHZhciB0YXJnZXQgPSB7fVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXVxuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRcbn1cbiJdLCJuYW1lcyI6WyJEZWZhdWx0TG9jYWxlIiwiQXJ0aXN0QXV0b3J1bk9wdGlvbnMiLCJMZXZlbEtpbmQiLCJMZXZlbFN0YXR1cyIsIlNlY3Rpb25Mb2dpblR5cGUiLCJTdHVkZW50R3JhZGVMZXZlbHMiLCJQbEdyYWRlVmFsdWUiLCJQb3N0TWlsZXN0b25lTW9kZSIsIkFsd2F5c1B1Ymxpc2hhYmxlUHJvamVjdFR5cGVzIiwiQWxsUHVibGlzaGFibGVQcm9qZWN0VHlwZXMiLCJDb25kaXRpb25hbGx5UHVibGlzaGFibGVQcm9qZWN0VHlwZXMiLCJBYnVzZUNvbnN0YW50cyIsIkVycm9yU2V2ZXJpdHlMZXZlbHMiLCJSZXN0cmljdGVkUHVibGlzaFByb2plY3RUeXBlcyIsIlJ1YnJpY1VuZGVyc3RhbmRpbmdMZXZlbHMiLCJSdWJyaWNBaUV2YWx1YXRpb25TdGF0dXMiLCJFbWFpbExpbmtzIiwiQ2hpbGRBY2NvdW50Q29tcGxpYW5jZVN0YXRlcyIsIkNlbnN1c0NvbnN0YW50cyIsIkRhbmNlU29uZ01hbmlmZXN0RmlsZW5hbWUiLCJBaUludGVyYWN0aW9uU3RhdHVzIiwiQWljaGF0RXJyb3JUeXBlIiwiQWlUdXRvckludGVyYWN0aW9uU3RhdHVzIiwiQWlUdXRvclR5cGVzIiwiRmVhdHVyZWRQcm9qZWN0U3RhdHVzIiwiRmVhdHVyZWRQcm9qZWN0Q29uc3RhbnRzIiwiTG1zTGlua3MiLCJVc2VyVHlwZXMiLCJfY29uc3RhbnRzIiwicmVxdWlyZSIsIl9zaGFyZWRDb25zdGFudHMiLCJleHBvcnRzIiwiYWN0aXZpdHlDc3NDbGFzcyIsInJlc3VsdCIsIlRlc3RSZXN1bHRzIiwiTk9fVEVTVFNfUlVOIiwiUkVWSUVXX0FDQ0VQVEVEX1JFU1VMVCIsInJldmlld19hY2NlcHRlZCIsIlJFVklFV19SRUpFQ1RFRF9SRVNVTFQiLCJyZXZpZXdfcmVqZWN0ZWQiLCJTVUJNSVRURURfUkVTVUxUIiwic3VibWl0dGVkIiwiTUlOSU1VTV9PUFRJTUFMX1JFU1VMVCIsInBlcmZlY3QiLCJNSU5JTVVNX1BBU1NfUkVTVUxUIiwicGFzc2VkIiwiYXR0ZW1wdGVkIiwibm90X3RyaWVkIiwicmVzdWx0RnJvbVN0YXR1cyIsInN0YXR1cyIsImZyZWVfcGxheV9jb21wbGV0ZSIsIkZSRUVfUExBWSIsIkFMTF9QQVNTIiwibWVyZ2VBY3Rpdml0eVJlc3VsdCIsImEiLCJiIiwiTWF0aCIsIm1heCIsIl91dGlscyIsIl9hY3Rpdml0eVV0aWxzIiwic2Vzc2lvblN0b3JhZ2UiLCJ3aW5kb3ciLCJjbGllbnRTdGF0ZSIsIm1vZHVsZSIsImxldmVsUHJvZ3Jlc3NCeVNjcmlwdCIsInByb2dyZXNzSnNvbiIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJlIiwicmVjb3JkVmlzdWFsRWxlbWVudFNlZW4iLCJ2aXN1YWxFbGVtZW50VHlwZSIsInZpc3VhbEVsZW1lbnRJZCIsImVsZW1lbnRTZWVuIiwiZWxlbWVudFNlZW5Kc29uIiwidHJ5U2V0U2Vzc2lvblN0b3JhZ2UiLCJzdHJpbmdpZnkiLCJoYXNTZWVuVmlzdWFsRWxlbWVudCIsImNyZWF0ZUtleSIsInNjcmlwdE5hbWUiLCJsZXZlbElkIiwicHJlZml4IiwicXVlcnlQYXJhbXMiLCJFWFBJUllfREFZUyIsIk1BWElNVU1fQ0FDSEFCTEVfUkVTVUxUIiwicmVzZXQiLCJjbGVhciIsImNsZWFyUHJvZ3Jlc3MiLCJyZW1vdmVJdGVtIiwicmVtb3ZlSXRlbXNXaXRoUHJlZml4IiwiT2JqZWN0Iiwia2V5cyIsImZpbHRlciIsImtleSIsInN0YXJ0c1dpdGgiLCJmb3JFYWNoIiwic291cmNlRm9yTGV2ZWwiLCJ0aW1lc3RhbXAiLCJkYXRhIiwicGFyc2VkIiwic291cmNlIiwid3JpdGVTb3VyY2VGb3JMZXZlbCIsInVuZGVmaW5lZCIsInRyYWNrUHJvZ3Jlc3MiLCJ0ZXN0UmVzdWx0IiwicHJvZ3Jlc3NEYXRhIiwic2F2ZWRSZXN1bHQiLCJtZXJnZWRSZXN1bHQiLCJsZXZlbFByb2dyZXNzIiwiaGFzU2VlblZpZGVvIiwidmlkZW9JZCIsInJlY29yZFZpZGVvU2VlbiIsImhhc1NlZW5DYWxsb3V0IiwiY2FsbG91dElkIiwicmVjb3JkQ2FsbG91dFNlZW4iLCJ0ZXN0SW1hZ2VBY2Nlc3MiLCJ1cmwiLCJlbGVtZW50Iiwic3VjY2Vzc0NhbGxiYWNrIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZmFpbHVyZUNhbGxiYWNrIiwidGltZW91dE1zIiwidmlkZW9FbGVtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiSW1hZ2UiLCJjYWxsZWQiLCJmaW5pc2giLCJjYWxsYmFjayIsImNsZWFyVGltZW91dCIsInRpbWVvdXQiLCJzZXRUaW1lb3V0Iiwib25lcnJvciIsIm9uZHVyYXRpb25jaGFuZ2UiLCJvbmxvYWQiLCJzcmMiLCJ0ZXN0SW1hZ2VzIiwicHVzaCIsImVudmlyb25tZW50U3BlY2lmaWNDb29raWVOYW1lIiwibmFtZSIsInJhY2tfZW52IiwiZGFzaGJvYXJkIiwiY29uY2F0IiwiZ2V0Um9vdERvbWFpbkZyb21Ib3N0bmFtZSIsImhvc3RuYW1lIiwic3BsaXQiLCJzbGljZSIsImpvaW4iLCJoYXNRdWVyeVBhcmFtIiwicGFyc2VkUGFyYW1zIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwicmVzZXRXaW5kb3dMb2NhdGlvbiIsIndpbmRvd0xvY2F0aW9uIiwibG9jYXRpb24iLCJzZXRXaW5kb3dMb2NhdGlvbiIsImZha2VMb2NhdGlvbiIsInVwZGF0ZVF1ZXJ5UGFyYW0iLCJwYXJhbSIsInZhbHVlIiwidXNlUmVwbGFjZVN0YXRlIiwibmV3U3RyaW5nIiwicXVlcnlTdHJpbmciLCJfb2JqZWN0U3ByZWFkIiwic2VhcmNoIiwiX2RlZmluZVByb3BlcnR5IiwibmV3TG9jYXRpb24iLCJwYXRobmFtZSIsIm1ldGhvZCIsImhpc3RvcnkiLCJ0aXRsZSIsIl9xdWVyeVN0cmluZyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiX3R5cGVvZiIsIm8iLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwib3duS2V5cyIsInIiLCJ0IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImFwcGx5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl90b1Byb3BlcnR5S2V5IiwiaSIsIl90b1ByaW1pdGl2ZSIsInRvUHJpbWl0aXZlIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiTnVtYmVyIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfanF1ZXJ5IiwiX3RyYWNrRXZlbnQiLCJfcmVhY3QiLCJfcmVhY3REb20iLCJfRmFsbGJhY2tQbGF5ZXJDYXB0aW9uRGlhbG9nTGluayIsIl92aWRlbyIsIl9sb2NhbGUiLCJfbG9kYXNoIiwiX0FuYWx5dGljc1JlcG9ydGVyIiwiX0FuYWx5dGljc0NvbnN0YW50cyIsImN1cnJlbnRWaWRlb09wdGlvbnMiLCJUQUJfTkFWX0NMQVNTIiwiTU9EQUxfQ0xBU1MiLCJ2aWRlb3MiLCJvblZpZGVvRW5kZWQiLCIkIiwidHJpZ2dlciIsImNyZWF0ZVZpZGVvIiwib3B0aW9ucyIsInZpZGVvRGl2IiwiYWRkQ2xhc3MiLCJhdHRyIiwiYWxsb3dmdWxsc2NyZWVuIiwic2Nyb2xsaW5nIiwiYXBwZW5kIiwicmVzaXplVmlkZW9QbGF5ZXIiLCJjb250YWluZXJIZWlnaHQiLCJjb250YWluZXJXaWR0aCIsIiRkaXYiLCJuYXZCYXJIZWlnaHQiLCJmaW5kIiwib3V0ZXJIZWlnaHQiLCJtYXhIZWlnaHQiLCJpbm5lckhlaWdodCIsIm1heFdpZHRoIiwiaW5uZXJXaWR0aCIsImhlaWdodCIsIndpZHRoIiwidG9wIiwiY3NzIiwicG9zaXRpb24iLCJsZWZ0IiwibWFyZ2luTGVmdCIsImF2YWlsYWJsZUhlaWdodCIsImdldFZpZGVvSGVpZ2h0IiwiY29udGFpbmVyIiwic2V0dXBWaWRlb0ZhbGxiYWNrIiwidmlkZW9JbmZvIiwicGxheWVyV2lkdGgiLCJwbGF5ZXJIZWlnaHQiLCJzaG91bGRTdGlsbEFkZENhbGxiYWNrIiwiZW5hYmxlX2ZhbGxiYWNrIiwiZm9yY2VfZmFsbGJhY2siLCJhZGRGYWxsYmFja1ZpZGVvUGxheWVyIiwib25Zb3VUdWJlQmxvY2tlZCIsImNvbnRhaW5lckRpdlN0eWxlIiwiZmFsbGJhY2tQbGF5ZXJJRCIsIkRhdGUiLCJub3ciLCJleHRyYVZpZGVvU3R5bGUiLCJkaW1lbnNpb25zIiwicGxheWVyQ29kZSIsImF1dG9wbGF5IiwidGh1bWJuYWlsIiwiZG93bmxvYWQiLCJlbXB0eSIsInZpZGVvUGxheWVyIiwidmlkZW9qcyIsIm5hdGl2ZUNvbnRyb2xzRm9yVG91Y2giLCIkZmFsbGJhY2tQbGF5ZXIiLCJyZXNpemVGYWxsYmFja1BsYXllciIsInRoaXMiLCJvbiIsImhhc05vdGVzVGFiIiwib3Blbk5vdGVzVGFiIiwibm90ZXNUYWJJbmRleCIsInBhcmVudCIsImluZGV4IiwidGFicyIsInJlc2l6ZUZhbGxiYWNrUGxheWVyTGlzdGVuZXIiLCJfIiwidGhyb3R0bGUiLCJhZGRFdmVudExpc3RlbmVyIiwicGFyZW50cyIsIm9uZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkaXNwb3NlIiwiYW5hbHl0aWNzRGF0YSIsImhyZWYiLCJ2aWRlbyIsImZhbGxiYWNrIiwiYW5hbHl0aWNzUmVwb3J0ZXIiLCJzZW5kRXZlbnQiLCJFVkVOVFMiLCJWSURFT19MT0FERUQiLCJWSURFT19TVEFSVEVEIiwiVklERU9fUEFVU0VEIiwiVklERU9fRU5ERUQiLCJzaG93RmFsbGJhY2tQbGF5ZXJDYXB0aW9uTGluayIsImluRGlhbG9nIiwibW91bnRQb2ludCIsImdldEVsZW1lbnRCeUlkIiwiUmVhY3RET00iLCJyZW5kZXIiLCJ1cGdyYWRlSW5zZWN1cmVPcHRpb25zIiwicmVwbGFjZSIsImNyZWF0ZVZpZGVvV2l0aEZhbGxiYWNrIiwicGFyZW50RWxlbWVudCIsImZ1bGxXaWR0aCIsInJvdW5kZWRDb3JuZXJzIiwib25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkiLCJwbGF5ZXIiLCJZVCIsIlBsYXllciIsImV2ZW50cyIsIm9uUmVhZHkiLCJldmVudCIsImdldFZpZGVvVXJsIiwib25TdGF0ZUNoYW5nZSIsInN0YXRlIiwiYW1wbGl0dWRlRXZlbnQiLCJQbGF5ZXJTdGF0ZSIsIlBMQVlJTkciLCJQQVVTRUQiLCJFTkRFRCIsIm9uRXJyb3IiLCJlcnJvciIsInNpemUiLCJ0YXJnZXQiLCJmIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwic2hvd1ZpZGVvRGlhbG9nIiwiZm9yY2VTaG93VmlkZW8iLCJvbkNsb3NlIiwicmVkaXJlY3QiLCJib2R5IiwiY29udGVudCIsImNvbnRlbnRzIiwiY2xvbmUiLCJ0ZXh0Iiwibm90ZXNEaXYiLCJnZXRTaG93Tm90ZXMiLCJzdWNjZXNzIiwiYWpheCIsImNoaWxkcmVuIiwiaHRtbCIsIm9wZW5WaWRlb1RhYiIsInJlbW92ZSIsImRpYWxvZyIsIkRpYWxvZyIsImRpdiIsInJlbW92ZUF0dHIiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJ0YWJIYW5kbGVyIiwidWkiLCJ0YWIiLCJuZXdUYWIiLCJ2aWRlb0pTRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwYXVzZSIsInNlbGVjdGVkIiwic2V0SXRlbSIsImV4YyIsImNvbnNvbGUiLCJsb2ciLCJsYXN0VGFiIiwiYWN0aXZhdGUiLCJjcmVhdGUiLCJhY3RpdmUiLCJjbGljayIsInRyYWNrRXZlbnQiLCJkaXIiLCJuYXYiLCJmYWxsYmFja1BsYXllckxpbmtEaXYiLCJpMThuIiwiZmFsbGJhY2tWaWRlb0Nsb3NlZENhcHRpb25pbmdMaW5rIiwicmVzaXplVmlkZW9QbGF5ZXJMaXN0ZW5lciIsImxvYWRlZCIsInRhZyIsImZpcnN0U2NyaXB0VGFnIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIiwic2hvdyIsInZpZGVvTW9kYWwiLCJoaWRlIiwic2hvdWxkU3RpbGxBZGQiLCJkaXZIZWlnaHQiLCJ5b3VUdWJlQmxvY2tlZENhbGxiYWNrIiwibm9Db29raWUiLCJpbmRleE9mIiwieW91VHViZUF2YWlsYWJpbGl0eUVuZHBvaW50VVJMIiwiVVJMIiwidG9TdHJpbmciLCJyYW5kb20iLCJwZWdhc3VzIiwicmVsYXRpdmVVcmwiLCJDT0RFX09SR19VUkwiLCJzZXRQZWdhc3VzT3JpZ2luIiwib3JpZ2luIiwic2V0U3R1ZGlvT3JpZ2luIiwiU1RVRElPX1VSTCIsInN0dWRpbyIsIl9zbGljZWRUb0FycmF5IiwiYXJyIiwiX2FycmF5V2l0aEhvbGVzIiwiQXJyYXkiLCJpc0FycmF5IiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibCIsIm4iLCJ1IiwibmV4dCIsImRvbmUiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJtaW5MZW4iLCJfYXJyYXlMaWtlVG9BcnJheSIsImZyb20iLCJ0ZXN0IiwiX25vbkl0ZXJhYmxlUmVzdCIsImxlbiIsImFycjIiLCJtZW1vaXplIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJQcm9taXNlIiwiYWxsIiwiX3JlZiIsIl9yZWYyIiwiX3Byb3BUeXBlcyIsIl9CdXR0b24iLCJfY29sb3IiLCJfc2V0UHJvdG90eXBlT2YiLCJwIiwic2V0UHJvdG90eXBlT2YiLCJiaW5kIiwiX19wcm90b19fIiwiQmFzZURpYWxvZyIsIl9SZWFjdCRDb21wb25lbnQiLCJfdGhpcyIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImNsb3NlRGlhbG9nIiwicHJvcHMiLCJoYW5kbGVLZXlEb3duIiwidW5jbG9zZWFibGUiLCJoYW5kbGVDbG9zZSIsInNvdW5kUGxheWVyIiwic3RvcEFsbEF1ZGlvIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJfcHJvdG8iLCJjb21wb25lbnREaWRNb3VudCIsImZvY3VzRGlhbG9nIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2V0VGFiYmFibGVFbGVtZW50cyIsInJlZnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZGVzY2VuZGFudElzQWN0aXZlIiwiYWN0aXZlRWxlbWVudCIsImNvbnRhaW5zIiwiaXNPcGVuIiwiZm9jdXMiLCJoaWRlQmFja2Ryb3AiLCJib2R5U3R5bGUiLCJtb2RhbEJvZHlTdHlsZSIsInhDbG9zZVN0eWxlIiwiZnVsbEhlaWdodCIsImJveFNpemluZyIsIndyYXBwZXJDbGFzc05hbWVzIiwibW9kYWxDbGFzc05hbWVzIiwibW9kYWxCb2R5Q2xhc3NOYW1lcyIsIm92ZXJmbG93WCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dZIiwiZml4ZWRIZWlnaHQiLCJ1c2VVcGRhdGVkU3R5bGVzIiwiYmFja2dyb3VuZCIsImJvcmRlclJhZGl1cyIsInVzZUZsZXhib3giLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsImZpeGVkV2lkdGgiLCJCQVNFX0RJQUxPR19XSURUSCIsIm5vTW9kYWxTdHlsZXMiLCJzdHlsZSIsInJpZ2h0IiwicGFkZGluZyIsImNvbG9yIiwibmV1dHJhbF9kYXJrMzAiLCJjdXJzb3IiLCJmb250U2l6ZSIsImJvcmRlciIsImJvZHlDbGFzc05hbWUiLCJjbGFzc05hbWUiLCJ0YWJJbmRleCIsInJlZiIsIm9uS2V5RG93biIsImlkIiwiYm9keUlkIiwiaGlkZUNsb3NlQnV0dG9uIiwib25DbGljayIsImljb24iLCJiYWNrZHJvcFN0eWxlIiwiUmVhY3QiLCJDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJib29sIiwiZnVuYyIsIm5vZGUiLCJudW1iZXIiLCJzdHJpbmciLCJvYmplY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImhhcyIsImdldCIsInNldCIsIl9CYXNlRGlhbG9nIiwiX0RpYWxvZ0Zvb3RlciIsIl91cmxIZWxwZXJzIiwiX2ZvbnRDb25zdGFudHMiLCJXZWFrTWFwIiwiRmFsbGJhY2tQbGF5ZXJDYXB0aW9uRGlhbG9nTGluayIsIm9wZW4iLCJzZXRTdGF0ZSIsIkZhbGxiYWNrUGxheWVyQ2FwdGlvbkRpYWxvZyIsImlzRGlhbG9nT3BlbiIsImNsb3NlIiwic3R5bGVzIiwibGluayIsIl9Db21wb25lbnQiLCJmYWxsYmFja1ZpZGVvQ2xvc2VkQ2FwdGlvbmluZ0RpYWxvZ0hlYWRpbmciLCJmYWxsYmFja1ZpZGVvQ2xvc2VkQ2FwdGlvbmluZ0RpYWxvZ0JvZHkiLCJkaWFsb2dMaW5rQ29udGFpbmVyIiwiZGlhbG9nTGluayIsInJlbCIsImZhbGxiYWNrVmlkZW9DbG9zZWRDYXB0aW9uaW5nRGlhbG9nQm9keUxpbmsiLCJfX3VzZURlcHJlY2F0ZWRUYWciLCJmYWxsYmFja1ZpZGVvQ2xvc2VkQ2FwdGlvbmluZ0RpYWxvZ0Nsb3NlIiwiQnV0dG9uIiwiQnV0dG9uQ29sb3IiLCJicmFuZFNlY29uZGFyeURlZmF1bHQiLCJpc1JlcXVpcmVkIiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nQm90dG9tIiwidGV4dEFsaWduIiwiZm9udENvbnN0YW50cyIsIm1hcmdpblRvcCIsIl92aWRlb3MiLCJfdHlwZXMiLCJWaWRlb1RodW1ibmFpbCIsIm9wZW5Jbk5ld1RhYiIsInZpZGVvTGluayIsIm9uVGh1bWJuYWlsQ2xpY2siLCJ2aWRlb1RodW1ibmFpbCIsImFsdCIsInZpZGVvRGF0YVNoYXBlIiwibWFyZ2luIiwiZm9udFdlaWdodCIsImxpbmVIZWlnaHQiLCJtYXJnaW5SaWdodCIsImFib3ZlRm9vdGVyIiwiZm9vdGVyIiwiYm90dG9tIiwiekluZGV4IiwiYnV0dG9uUm93IiwiZmxleEZsb3ciLCJqdXN0aWZ5Q29udGVudCIsInJpZ2h0QWxpZ24iLCJEaWFsb2dGb290ZXIiLCJidXR0b25Sb3dTdHlsZSIsImFueSIsInNoYXBlIiwiaGFzT3duIiwiY2xhc3NOYW1lcyIsImNsYXNzZXMiLCJhcmciLCJhcmdUeXBlIiwiaW5uZXIiLCJpbmNsdWRlcyIsImRlZmF1bHQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsIm1hcCIsIml0ZW0iLCJuZWVkTGF5ZXIiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2VSb290IiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImVyciIsIkVycm9yIiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJzeW1ib2wiLCJhcnJheU9mIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnRCeVNlbGVjdG9yIiwiaW5zZXJ0IiwiZ2V0VGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJhcHBlbmRDaGlsZCIsImluc2VydFN0eWxlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInJlbW92ZUNoaWxkIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfVmlkZW9UaHVtYm5haWwiLCJjb21wb25lbnQiLCJUZW1wbGF0ZSIsImV4dGVuZCJdLCJzb3VyY2VSb290IjoiIn0=