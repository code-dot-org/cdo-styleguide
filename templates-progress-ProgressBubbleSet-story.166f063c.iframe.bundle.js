/*! For license information please see templates-progress-ProgressBubbleSet-story.166f063c.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[2218],{"./src/templates/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/progress/BubbleBadge.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AssessmentBadge=AssessmentBadge,exports.BadgeType=void 0,exports.KeepWorkingBadge=KeepWorkingBadge,exports.default=BubbleBadge;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_utils=__webpack_require__("./src/utils.js"),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BadgeType=(0,_utils.makeEnum)("assessment","keepWorking");function BubbleBadge(_ref){var badgeType=_ref.badgeType,bubbleSize=_ref.bubbleSize,bubbleShape=_ref.bubbleShape;return[_BubbleFactory.BubbleSize.full,_BubbleFactory.BubbleSize.letter].includes(bubbleSize)?badgeType===BadgeType.assessment?AssessmentBubbleBadge(bubbleShape):badgeType===BadgeType.keepWorking?KeepWorkingBubbleBadge(bubbleSize):null:null}function AssessmentBubbleBadge(bubbleShape){var bubblePositioning=bubbleShape===_BubbleFactory.BubbleShape.diamond?styles.diamondBubblePosition:styles.bubblePosition;return _react.default.createElement("div",{style:bubblePositioning},_react.default.createElement(AssessmentBadge,null))}function KeepWorkingBubbleBadge(bubbleSize){var isSmall=bubbleSize===_BubbleFactory.BubbleSize.letter,bubblePositioning=isSmall?styles.keepWorkingSmallBadgePosition:styles.keepWorkingBadgePosition;return _react.default.createElement("div",{style:bubblePositioning},_react.default.createElement(KeepWorkingBadge,{isSmall}))}function KeepWorkingBadge(_ref2){var isSmall=_ref2.isSmall,style=_ref2.style,badgeSize=isSmall?styles.keepWorkingBadgeSmallSize:styles.keepWorkingBadgeFullSize;return _react.default.createElement("div",{style:_objectSpread(_objectSpread(_objectSpread({},styles.keepWorkingBadge),badgeSize),style)})}function AssessmentBadge(){return _react.default.createElement("span",{className:"fa-stack",style:styles.container},_react.default.createElement(_FontAwesome.default,{icon:"circle",className:"fa-stack-2x",style:styles.purple}),_react.default.createElement(_FontAwesome.default,{icon:"circle-thin",className:"fa-stack-2x",style:styles.white}),_react.default.createElement(_FontAwesome.default,{icon:"check",className:"fa-stack-1x",style:styles.white}))}exports.BadgeType=BadgeType,BubbleBadge.propTypes={badgeType:_propTypes.default.oneOf(Object.values(BadgeType)).isRequired,bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired,bubbleShape:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleShape)).isRequired},AssessmentBubbleBadge.propTypes={bubbleShape:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleShape)).isRequired},KeepWorkingBubbleBadge.propTypes={bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired},KeepWorkingBadge.propTypes={isSmall:_propTypes.default.bool,style:_propTypes.default.object},AssessmentBadge.propTypes={hasWhiteBorder:_propTypes.default.bool,style:_propTypes.default.object};var styles={container:{fontSize:10},bubblePosition:{position:"absolute",top:-7,right:-7},diamondBubblePosition:{position:"absolute",top:-13,right:-17},purple:{color:_color.default.purple},white:{color:_color.default.white},keepWorkingSmallBadgePosition:{position:"absolute",top:-2,right:-2},keepWorkingBadgePosition:{position:"absolute",top:0,right:-2},keepWorkingBadge:{borderRadius:"50%",backgroundColor:_color.default.red},keepWorkingBadgeFullSize:{width:10,height:10},keepWorkingBadgeSmallSize:{width:7,height:7}}},"./src/templates/progress/ProgressBubble.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_types=__webpack_require__("./src/templates/feedback/types.js"),_BubbleBadge=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./src/templates/progress/BubbleBadge.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBubble=function(_React$Component){function ProgressBubble(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"onClickLevel",(function(){_this.props.onClick&&_this.props.onClick(_this.props.level)})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBubble,_React$Component);var _proto=ProgressBubble.prototype;return _proto.isClickable=function isClickable(){var _this$props=this.props,disabled=_this$props.disabled,level=_this$props.level,onClick=_this$props.onClick;return!(disabled||!level.url&&!onClick)},_proto.getUrl=function getUrl(){var _this$props2=this.props,onClick=_this$props2.onClick,level=_this$props2.level,selectedSectionId=_this$props2.selectedSectionId,selectedStudentId=_this$props2.selectedStudentId;return onClick?null:(0,_BubbleFactory.getBubbleUrl)(level.url,selectedStudentId,selectedSectionId,!0)},_proto.renderBubbleBadge=function renderBubbleBadge(bubbleShape,bubbleSize){var _this$props3=this.props,level=_this$props3.level,smallBubble=_this$props3.smallBubble,hideAssessmentBadge=_this$props3.hideAssessmentBadge,hasKeepWorkingFeedback=level.teacherFeedbackReviewState===_types.ReviewStates.keepWorking;if(((0,_progressHelpers.isLevelAssessment)(level)&&!hideAssessmentBadge||hasKeepWorkingFeedback)&&!smallBubble)return _react.default.createElement(_BubbleBadge.default,{badgeType:hasKeepWorkingFeedback?_BubbleBadge.BadgeType.keepWorking:_BubbleBadge.BadgeType.assessment,bubbleSize,bubbleShape})},_proto.createBubbleElement=function createBubbleElement(){var _this$props4=this.props,level=_this$props4.level,smallBubble=_this$props4.smallBubble,hideToolTips=_this$props4.hideToolTips,bubbleSize=smallBubble?_BubbleFactory.BubbleSize.dot:_BubbleFactory.BubbleSize.full,content=(0,_BubbleFactory.getBubbleContent)(level.isLocked,level.isUnplugged,level.bonus,level.paired,level.bubbleText||level.letter||level.levelNumber,bubbleSize),bubbleShape=(0,_BubbleFactory.getBubbleShape)(level.isUnplugged&&!smallBubble,level.isConceptLevel),bubble=_react.default.createElement(_BubbleFactory.BasicBubble,{shape:bubbleShape,size:bubbleSize,progressStyle:(0,_progressStyles.levelProgressStyle)(level.status,level.kind),classNames:(0,_BubbleFactory.getBubbleClassNames)(this.isClickable())},content,this.renderBubbleBadge(bubbleShape,bubbleSize));return hideToolTips?bubble:_react.default.createElement(_BubbleFactory.BubbleTooltip,{level},bubble)},_proto.render=function render(){var level=this.props.level,levelID=level.bubbleText||level.letter||level.levelNumber,lessonName=this.props.lessonName,description=_locale.default.progressBubbleDescription({levelID});return lessonName&&(description=_locale.default.progressBubbleDescriptionWithLesson({levelID,lessonName})),this.isClickable()?_react.default.createElement(_BubbleFactory.BubbleLink,{url:this.getUrl(),onClick:this.onClickLevel,a11y_description:description},this.createBubbleElement()):this.createBubbleElement()},ProgressBubble}(_react.default.Component);exports.default=ProgressBubble,_defineProperty(ProgressBubble,"propTypes",{level:_progressTypes.levelWithProgressType.isRequired,disabled:_propTypes.default.bool.isRequired,smallBubble:_propTypes.default.bool,selectedSectionId:_propTypes.default.number,selectedStudentId:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),hideToolTips:_propTypes.default.bool,onClick:_propTypes.default.func,hideAssessmentBadge:_propTypes.default.bool,lessonName:_propTypes.default.string}),module.exports=exports.default},"./src/templates/progress/ProgressBubbleSet.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressBubbleSet=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_ProgressBubble=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressBubble.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBubbleSet=function(_React$Component){function ProgressBubbleSet(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"renderBubble",(function(level,index,isSublevel){var _this$props=_this.props,levels=_this$props.levels,selectedSectionId=_this$props.selectedSectionId,selectedStudentId=_this$props.selectedStudentId,isRtl=_this$props.isRtl,backgroundFirstStyle=isRtl?styles.backgroundLast:styles.backgroundFirst,backgroundLastStyle=isRtl?styles.backgroundFirst:styles.backgroundLast,backgroundStyleProp=_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},styles.background),level.isConceptLevel&&styles.backgroundDiamond),isSublevel&&styles.backgroundSublevel),level.isUnplugged&&styles.backgroundPill),!isSublevel&&0===index&&backgroundFirstStyle),!isSublevel&&!level.sublevels&&index===levels.length-1&&backgroundLastStyle),containerStyleProp=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},styles.container),level.isUnplugged&&styles.pillContainer),level.isConceptLevel&&styles.diamondContainer),isSublevel&&styles.containerSublevel);return _react.default.createElement("div",{style:styles.withBackground,key:index},_react.default.createElement("div",{style:backgroundStyleProp}),_react.default.createElement("div",{style:containerStyleProp},_react.default.createElement(_ProgressBubble.default,{level,disabled:_this.props.disabled,smallBubble:isSublevel,selectedSectionId,selectedStudentId,hideToolTips:_this.props.hideToolTips,onClick:_this.props.onBubbleClick,lessonName:_this.props.lessonName})))})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBubbleSet,_React$Component),ProgressBubbleSet.prototype.render=function render(){var _this2=this,_this$props2=this.props,levels=_this$props2.levels,style=_this$props2.style,showSublevels=_this$props2.showSublevels;return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.main),style)},levels.map((function(level,index){return _react.default.createElement("span",{key:index},_this2.renderBubble(level,index,!1),showSublevels&&level.sublevels&&level.sublevels.map((function(sublevel,index){return _react.default.createElement("span",{key:index},_this2.renderBubble(sublevel,index,!0))})))})))},ProgressBubbleSet}(_react.default.Component);_defineProperty(ProgressBubbleSet,"propTypes",{levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,disabled:_propTypes.default.bool.isRequired,style:_propTypes.default.object,selectedSectionId:_propTypes.default.number,selectedStudentId:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),hideToolTips:_propTypes.default.bool,lessonExtrasEnabled:_propTypes.default.bool,showSublevels:_propTypes.default.bool,onBubbleClick:_propTypes.default.func,lessonName:_propTypes.default.string,isRtl:_propTypes.default.bool});var styles={main:{position:"relative",display:"inline-block"},withBackground:{display:"inline-block",position:"relative"},background:{height:10,backgroundColor:_color.default.lighter_gray,position:"absolute",left:0,right:0,top:(_progressStyles.DOT_SIZE+4+6-10)/2},backgroundDiamond:{top:(_progressStyles.DIAMOND_DOT_SIZE+4+12-10)/2},backgroundPill:{top:15},backgroundSublevel:{top:9},backgroundFirst:{left:15},backgroundLast:{right:15},container:{position:"relative"},containerSublevel:{top:5},diamondContainer:{height:36},pillContainer:{marginRight:2,height:37}},UnconnectedProgressBubbleSet=ProgressBubbleSet;exports.UnconnectedProgressBubbleSet=UnconnectedProgressBubbleSet;var _default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))((0,_radium.default)(ProgressBubbleSet));exports.default=_default},"./src/templates/progress/progressTestHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.fakeUnitData=exports.fakeStudents=exports.fakeStudentLevelProgress=exports.fakeStudentLastUpdateByScript=exports.fakeStudentLastUpdate=exports.fakeProgressTableReduxInitialState=exports.fakeProgressForLevels=exports.fakeLevels=exports.fakeLevelWithSubLevels=exports.fakeLevel=exports.fakeLessonWithLevels=exports.fakeLesson=exports.createStoreWithLockedLesson=exports.createStoreWithHiddenLesson=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_immutable=_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.fakeLesson=function fakeLesson(name,id){return{name,id,lockable:arguments.length>2&&void 0!==arguments[2]&&arguments[2],lessonNumber:arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0,lessonStartUrl:arguments.length>4&&void 0!==arguments[4]?arguments[4]:"code.org",isFocusArea:!1,levels:arguments.length>5&&void 0!==arguments[5]?arguments[5]:[]}};var fakeLevel=function fakeLevel(){var overrides=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},levelNumber=overrides.levelNumber||1,id=(overrides.id||levelNumber).toString();return delete overrides.id,_objectSpread({id,status:_sharedConstants.LevelStatus.not_tried,isLocked:!1,levelNumber,bubbleText:levelNumber.toString(),url:"/level".concat(levelNumber),name:"Level ".concat(levelNumber),isUnplugged:!1},overrides)};exports.fakeLevel=fakeLevel;exports.fakeLevelWithSubLevels=function fakeLevelWithSubLevels(numSublevels){var startLevel=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,overrides=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},sublevels=_lodash.default.range(numSublevels).map((function(index){return fakeLevel({id:index+startLevel,levelNumber:index+startLevel})}));return fakeLevel(_objectSpread({sublevels,id:startLevel+numSublevels,levelNumber:startLevel+numSublevels},overrides))};var fakeLevels=function fakeLevels(numLevels){var _ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref$startLevel=_ref.startLevel,startLevel=void 0===_ref$startLevel?1:_ref$startLevel,_ref$named=_ref.named,named=void 0===_ref$named||_ref$named;return _lodash.default.range(numLevels).map((function(index){var overrideData={id:index+startLevel,levelNumber:index+startLevel};return named||(overrideData.name=void 0),fakeLevel(overrideData)}))};exports.fakeLevels=fakeLevels;var fakeProgressForLevels=function fakeProgressForLevels(levels){var status=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_sharedConstants.LevelStatus.not_tried,serverProgressOverrides=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},progress={};return levels.forEach((function(level){progress[level.id]=(0,_progressHelpers.levelProgressFromServer)(_objectSpread({status},serverProgressOverrides))})),progress};exports.fakeProgressForLevels=fakeProgressForLevels;exports.createStoreWithHiddenLesson=function createStoreWithHiddenLesson(viewAs,lessonId){return(0,_redux.createStore)((function(state){return state}),{lessonLock:{lessonsBySectionId:_defineProperty({},11,{}),lockableAuthorized:!1,lockableAuthorizedLoaded:!0,lessonsBySectionIdLoaded:!0},viewAs,teacherSections:{sectionIds:[11],sectionsAreLoaded:!0,sections:_defineProperty({},11,{id:11,name:"test section",lesson_extras:!0,pairing_allowed:!0,studentCount:4,code:"TQGSJR",providerManaged:!1,lessons:{},ttsAutoplayEnabled:!1,lessonExtras:!1,pairingAllowed:!0}),selectedSectionId:11},hiddenLesson:_immutable.default.fromJS({lessonsBySection:_defineProperty({},11,_defineProperty({},lessonId,!0))}),progress:{scriptName:"script-name",scriptId:17,unitProgressHasLoaded:!0},currentUser:{userId:1}})};exports.createStoreWithLockedLesson=function createStoreWithLockedLesson(viewAs){var lockableAuthorized=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return(0,_redux.createStore)((function(state){return state}),{lessonLock:{lessonsBySectionId:_defineProperty({},11,{}),lessonsBySectionIdLoaded:!0,lockableAuthorized,lockableAuthorizedLoaded:!0},viewAs,teacherSections:{selectedSectionId:11},hiddenLesson:_immutable.default.fromJS({lessonsBySection:_defineProperty({},11,_defineProperty({},lessonId,!0))}),progress:{unitProgressHasLoaded:!0},currentUser:{userId:1}})};var randomNumberUpTo100=function randomNumberUpTo100(){return Math.floor(100*Math.random())},lessonId=1,fakeLessonWithLevels=function fakeLessonWithLevels(){var overrideFields=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},levelCount=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,position=overrideFields.position||randomNumberUpTo100();return _objectSpread({id:lessonId++,name:"Lesson - ".concat(position),title:"Lesson ".concat(position,": Lesson - ").concat(position),lockable:!1,relative_position:position,position,levels:fakeLevels(levelCount)},overrideFields)};exports.fakeLessonWithLevels=fakeLessonWithLevels;var fakeStudents=function fakeStudents(studentCount){return Array(studentCount).fill().map((function(_,i){return{id:i,name:"student-".concat(i),familyName:"student-".concat(studentCount-i)}}))};exports.fakeStudents=fakeStudents;var fakeUnitData=function fakeUnitData(){return _objectSpread({id:1,name:"csd1-2020",title:"CSD Unit 1 - Problem Solving and Computing (20-21)",csf:!1,isCsd:!0,isCsp:!1,lessons:[]},arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})};exports.fakeUnitData=fakeUnitData;var fakeStudentLevelProgress=function fakeStudentLevelProgress(levels,students){var serverProgressOverrides=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},progressOnLessons=fakeProgressForLevels(levels,serverProgressOverrides.status,serverProgressOverrides),studentProgress={};return students.forEach((function(student){studentProgress[student.id]=progressOnLessons})),studentProgress};exports.fakeStudentLevelProgress=fakeStudentLevelProgress;var fakeStudentLastUpdate=function fakeStudentLastUpdate(students){var studentLastUpdate={};return students.forEach((function(student){studentLastUpdate[student.id]=Date.now()})),studentLastUpdate};exports.fakeStudentLastUpdate=fakeStudentLastUpdate;var fakeStudentLastUpdateByScript=function fakeStudentLastUpdateByScript(scriptData,students){return _defineProperty({},scriptData.id,fakeStudentLastUpdate(students))};exports.fakeStudentLastUpdateByScript=fakeStudentLastUpdateByScript;exports.fakeProgressTableReduxInitialState=function fakeProgressTableReduxInitialState(lessons,scriptData){var students=arguments.length>2&&void 0!==arguments[2]?arguments[2]:fakeStudents(2);lessons||(lessons=[fakeLessonWithLevels({position:1,levels:fakeLevels(1)}),fakeLessonWithLevels({position:2,levels:fakeLevels(2)})]);scriptData||(scriptData=fakeUnitData({lessons}));var levelProgressData=fakeStudentLevelProgress(scriptData.lessons[0].levels,students),sectionId=randomNumberUpTo100();return{currentUser:{isSortedByFamilyName:!1},progress:{lessonGroups:[],lessons,focusAreaLessonIds:[],deeperLearningCourse:!1},teacherSections:{sections:[{id:sectionId}],selectedSectionId:sectionId,selectedStudents:students},sectionProgress:{unitDataByUnit:_defineProperty({},scriptData.id,scriptData),studentLevelProgressByUnit:_defineProperty({},scriptData.id,levelProgressData),studentLessonProgressByUnit:_defineProperty({},scriptData.id,(0,_progressHelpers.lessonProgressForSection)(levelProgressData,scriptData.lessons)),studentLastUpdateByUnit:fakeStudentLastUpdateByScript(scriptData,students),lessonOfInterest:1},unitSelection:{scriptId:scriptData.id},locales:{localeCode:"en-US"}}}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/progress/ProgressBubbleSet.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Unplugged=exports.StartingAtThree=exports.SingleUnplugged=exports.MultipleLines=exports.DisabledSet=exports.DiamondSet=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_ProgressBubbleSet=__webpack_require__("./src/templates/progress/ProgressBubbleSet.jsx"),_progressTestHelpers=__webpack_require__("./src/templates/progress/progressTestHelpers.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var statusForLevel=[_sharedConstants.LevelStatus.perfect,_sharedConstants.LevelStatus.not_tried,_sharedConstants.LevelStatus.attempted,_sharedConstants.LevelStatus.passed,_sharedConstants.LevelStatus.submitted],levels=(0,_progressTestHelpers.fakeLevels)(5).map((function(level,index){return _objectSpread(_objectSpread({},level),{},{status:statusForLevel[index]})}));levels[0].isConceptLevel=!0;var _default={component:_ProgressBubbleSet.UnconnectedProgressBubbleSet};exports.default=_default;var Template=function Template(args){return _react.default.createElement(_ProgressBubbleSet.UnconnectedProgressBubbleSet,args)},StartingAtThree=Template.bind({});exports.StartingAtThree=StartingAtThree,StartingAtThree.args={levels,disabled:!1};var MultipleLines=Template.bind({});exports.MultipleLines=MultipleLines;var multLevels=(0,_progressTestHelpers.fakeLevels)(20);multLevels[2].icon="fa-video-camera",multLevels[12].icon="fa-video-camera",MultipleLines.args={levels:multLevels,disabled:!1};var DisabledSet=Template.bind({});exports.DisabledSet=DisabledSet,DisabledSet.args={levels,disabled:!0};var DiamondSet=Template.bind({});exports.DiamondSet=DiamondSet;var diamondLevels=(0,_progressTestHelpers.fakeLevels)(2).map((function(level,index){return _objectSpread(_objectSpread({},level),{},{status:statusForLevel[index]})}));diamondLevels[0].isConceptLevel=!0,diamondLevels[1].isConceptLevel=!0,DiamondSet.args={levels:diamondLevels,disabled:!1};var Unplugged=Template.bind({});exports.Unplugged=Unplugged,Unplugged.args={levels:[(0,_progressTestHelpers.fakeLevel)({isUnplugged:!0})].concat(function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}((0,_progressTestHelpers.fakeLevels)(5))),disabled:!1};var SingleUnplugged=Template.bind({});exports.SingleUnplugged=SingleUnplugged,SingleUnplugged.args={levels:[(0,_progressTestHelpers.fakeLevel)({isUnplugged:!0})],disabled:!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,