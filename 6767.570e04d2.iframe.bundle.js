(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[6767],{"./node_modules/canvg/canvg.js":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_FACTORY__,__WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;!function(global,factory){"use strict";__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("./node_modules/rgbcolor/index.js"),__webpack_require__("./node_modules/stackblur/index.js")],void 0===(__WEBPACK_AMD_DEFINE_RESULT__="function"==typeof(__WEBPACK_AMD_DEFINE_FACTORY__=factory)?__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__):__WEBPACK_AMD_DEFINE_FACTORY__)||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__),global.canvg=factory(global.RGBColor,global.stackBlur)}("undefined"!=typeof window?window:this,(function(RGBColor,stackBlur){var matchesSelector,canvg=function(target,s,opts){if(null!=target||null!=s||null!=opts){"string"==typeof target&&(target=document.getElementById(target)),null!=target.svg&&target.svg.stop();var svg=build(opts||{});1==target.childNodes.length&&"OBJECT"==target.childNodes[0].nodeName||(target.svg=svg);var ctx=target.getContext("2d");void 0!==s.documentElement?svg.loadXmlDoc(ctx,s):"<"==s.substr(0,1)?svg.loadXml(ctx,s):svg.load(ctx,s)}else for(var svgTags=document.querySelectorAll("svg"),i=0;i<svgTags.length;i++){var svgTag=svgTags[i],c=document.createElement("canvas");c.width=svgTag.clientWidth,c.height=svgTag.clientHeight,svgTag.parentNode.insertBefore(c,svgTag),svgTag.parentNode.removeChild(svgTag);var div=document.createElement("div");div.appendChild(svgTag),canvg(c,div.innerHTML)}};void 0!==Element.prototype.matches?matchesSelector=function(node,selector){return node.matches(selector)}:void 0!==Element.prototype.webkitMatchesSelector?matchesSelector=function(node,selector){return node.webkitMatchesSelector(selector)}:void 0!==Element.prototype.mozMatchesSelector?matchesSelector=function(node,selector){return node.mozMatchesSelector(selector)}:void 0!==Element.prototype.msMatchesSelector?matchesSelector=function(node,selector){return node.msMatchesSelector(selector)}:void 0!==Element.prototype.oMatchesSelector?matchesSelector=function(node,selector){return node.oMatchesSelector(selector)}:("function"!=typeof jQuery&&"function"!=typeof Zepto||(matchesSelector=function(node,selector){return $(node).is(selector)}),void 0===matchesSelector&&(matchesSelector=Sizzle.matchesSelector));var attributeRegex=/(\[[^\]]+\])/g,idRegex=/(#[^\s\+>~\.\[:]+)/g,classRegex=/(\.[^\s\+>~\.\[:]+)/g,pseudoElementRegex=/(::[^\s\+>~\.\[:]+|:first-line|:first-letter|:before|:after)/gi,pseudoClassWithBracketsRegex=/(:[\w-]+\([^\)]*\))/gi,pseudoClassRegex=/(:[^\s\+>~\.\[:]+)/g,elementRegex=/([^\s\+>~\.\[:]+)/g;function getSelectorSpecificity(selector){var typeCount=[0,0,0],findMatch=function(regex,type){var matches=selector.match(regex);null!=matches&&(typeCount[type]+=matches.length,selector=selector.replace(regex," "))};return selector=(selector=selector.replace(/:not\(([^\)]*)\)/g,"     $1 ")).replace(/{[\s\S]*/gm," "),findMatch(attributeRegex,1),findMatch(idRegex,0),findMatch(classRegex,1),findMatch(pseudoElementRegex,2),findMatch(pseudoClassWithBracketsRegex,1),findMatch(pseudoClassRegex,1),selector=(selector=selector.replace(/[\*\s\+>~]/g," ")).replace(/[#\.]/g," "),findMatch(elementRegex,2),typeCount.join("")}function build(opts){var svg={opts,FRAMERATE:30,MAX_VIRTUAL_PIXELS:3e4,log:function(msg){}};1==svg.opts.log&&"undefined"!=typeof console&&(svg.log=function(msg){console.log(msg)}),svg.init=function(ctx){var uniqueId=0;svg.UniqueId=function(){return"canvg"+ ++uniqueId},svg.Definitions={},svg.Styles={},svg.StylesSpecificity={},svg.Animations=[],svg.Images=[],svg.ctx=ctx,svg.ViewPort=new function(){this.viewPorts=[],this.Clear=function(){this.viewPorts=[]},this.SetCurrent=function(width,height){this.viewPorts.push({width,height})},this.RemoveCurrent=function(){this.viewPorts.pop()},this.Current=function(){return this.viewPorts[this.viewPorts.length-1]},this.width=function(){return this.Current().width},this.height=function(){return this.Current().height},this.ComputeSize=function(d){return null!=d&&"number"==typeof d?d:"x"==d?this.width():"y"==d?this.height():Math.sqrt(Math.pow(this.width(),2)+Math.pow(this.height(),2))/Math.sqrt(2)}}},svg.init(),svg.ImagesLoaded=function(){for(var i=0;i<svg.Images.length;i++)if(!svg.Images[i].loaded)return!1;return!0},svg.trim=function(s){return s.replace(/^\s+|\s+$/g,"")},svg.compressSpaces=function(s){return s.replace(/[\s\r\t\n]+/gm," ")},svg.ajax=function(url){var AJAX;return(AJAX=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP"))?(AJAX.open("GET",url,!1),AJAX.send(null),AJAX.responseText):null},svg.parseXml=function(xml){if("undefined"!=typeof Windows&&void 0!==Windows.Data&&void 0!==Windows.Data.Xml){var xmlDoc=new Windows.Data.Xml.Dom.XmlDocument,settings=new Windows.Data.Xml.Dom.XmlLoadSettings;return settings.prohibitDtd=!1,xmlDoc.loadXml(xml,settings),xmlDoc}return window.DOMParser?(new DOMParser).parseFromString(xml,"text/xml"):(xml=xml.replace(/<!DOCTYPE svg[^>]*>/,""),(xmlDoc=new ActiveXObject("Microsoft.XMLDOM")).async="false",xmlDoc.loadXML(xml),xmlDoc)},svg.Property=function(name,value){this.name=name,this.value=value},svg.Property.prototype.getValue=function(){return this.value},svg.Property.prototype.hasValue=function(){return null!=this.value&&""!==this.value},svg.Property.prototype.numValue=function(){if(!this.hasValue())return 0;var n=parseFloat(this.value);return(this.value+"").match(/%$/)&&(n/=100),n},svg.Property.prototype.valueOrDefault=function(def){return this.hasValue()?this.value:def},svg.Property.prototype.numValueOrDefault=function(def){return this.hasValue()?this.numValue():def},svg.Property.prototype.addOpacity=function(opacityProp){var newValue=this.value;if(null!=opacityProp.value&&""!=opacityProp.value&&"string"==typeof this.value){var color=new RGBColor(this.value);color.ok&&(newValue="rgba("+color.r+", "+color.g+", "+color.b+", "+opacityProp.numValue()+")")}return new svg.Property(this.name,newValue)},svg.Property.prototype.getDefinition=function(){var name=this.value.match(/#([^\)'"]+)/);return name&&(name=name[1]),name||(name=this.value),svg.Definitions[name]},svg.Property.prototype.isUrlDefinition=function(){return 0==this.value.indexOf("url(")},svg.Property.prototype.getFillStyleDefinition=function(e,opacityProp){var def=this.getDefinition();if(null!=def&&def.createGradient)return def.createGradient(svg.ctx,e,opacityProp);if(null!=def&&def.createPattern){if(def.getHrefAttribute().hasValue()){var pt=def.attribute("patternTransform");def=def.getHrefAttribute().getDefinition(),pt.hasValue()&&(def.attribute("patternTransform",!0).value=pt.value)}return def.createPattern(svg.ctx,e)}return null},svg.Property.prototype.getDPI=function(viewPort){return 96},svg.Property.prototype.getEM=function(viewPort){var em=12,fontSize=new svg.Property("fontSize",svg.Font.Parse(svg.ctx.font).fontSize);return fontSize.hasValue()&&(em=fontSize.toPixels(viewPort)),em},svg.Property.prototype.getUnits=function(){return(this.value+"").replace(/[0-9\.\-]/g,"")},svg.Property.prototype.toPixels=function(viewPort,processPercent){if(!this.hasValue())return 0;var s=this.value+"";if(s.match(/em$/))return this.numValue()*this.getEM(viewPort);if(s.match(/ex$/))return this.numValue()*this.getEM(viewPort)/2;if(s.match(/px$/))return this.numValue();if(s.match(/pt$/))return this.numValue()*this.getDPI(viewPort)*(1/72);if(s.match(/pc$/))return 15*this.numValue();if(s.match(/cm$/))return this.numValue()*this.getDPI(viewPort)/2.54;if(s.match(/mm$/))return this.numValue()*this.getDPI(viewPort)/25.4;if(s.match(/in$/))return this.numValue()*this.getDPI(viewPort);if(s.match(/%$/))return this.numValue()*svg.ViewPort.ComputeSize(viewPort);var n=this.numValue();return processPercent&&n<1?n*svg.ViewPort.ComputeSize(viewPort):n},svg.Property.prototype.toMilliseconds=function(){if(!this.hasValue())return 0;var s=this.value+"";return s.match(/s$/)?1e3*this.numValue():(s.match(/ms$/),this.numValue())},svg.Property.prototype.toRadians=function(){if(!this.hasValue())return 0;var s=this.value+"";return s.match(/deg$/)?this.numValue()*(Math.PI/180):s.match(/grad$/)?this.numValue()*(Math.PI/200):s.match(/rad$/)?this.numValue():this.numValue()*(Math.PI/180)};var textBaselineMapping={baseline:"alphabetic","before-edge":"top","text-before-edge":"top",middle:"middle",central:"middle","after-edge":"bottom","text-after-edge":"bottom",ideographic:"ideographic",alphabetic:"alphabetic",hanging:"hanging",mathematical:"alphabetic"};return svg.Property.prototype.toTextBaseline=function(){return this.hasValue()?textBaselineMapping[this.value]:null},svg.Font=new function(){this.Styles="normal|italic|oblique|inherit",this.Variants="normal|small-caps|inherit",this.Weights="normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit",this.CreateFont=function(fontStyle,fontVariant,fontWeight,fontSize,fontFamily,inherit){var f=null!=inherit?this.Parse(inherit):this.CreateFont("","","","","",svg.ctx.font);return{fontFamily:fontFamily||f.fontFamily,fontSize:fontSize||f.fontSize,fontStyle:fontStyle||f.fontStyle,fontWeight:fontWeight||f.fontWeight,fontVariant:fontVariant||f.fontVariant,toString:function(){return[this.fontStyle,this.fontVariant,this.fontWeight,this.fontSize,this.fontFamily].join(" ")}}};var that=this;this.Parse=function(s){for(var f={},d=svg.trim(svg.compressSpaces(s||"")).split(" "),set={fontSize:!1,fontStyle:!1,fontWeight:!1,fontVariant:!1},ff="",i=0;i<d.length;i++)set.fontStyle||-1==that.Styles.indexOf(d[i])?set.fontVariant||-1==that.Variants.indexOf(d[i])?set.fontWeight||-1==that.Weights.indexOf(d[i])?set.fontSize?"inherit"!=d[i]&&(ff+=d[i]):("inherit"!=d[i]&&(f.fontSize=d[i].split("/")[0]),set.fontStyle=set.fontVariant=set.fontWeight=set.fontSize=!0):("inherit"!=d[i]&&(f.fontWeight=d[i]),set.fontStyle=set.fontVariant=set.fontWeight=!0):("inherit"!=d[i]&&(f.fontVariant=d[i]),set.fontStyle=set.fontVariant=!0):("inherit"!=d[i]&&(f.fontStyle=d[i]),set.fontStyle=!0);return""!=ff&&(f.fontFamily=ff),f}},svg.ToNumberArray=function(s){for(var a=svg.trim(svg.compressSpaces((s||"").replace(/,/g," "))).split(" "),i=0;i<a.length;i++)a[i]=parseFloat(a[i]);return a},svg.Point=function(x,y){this.x=x,this.y=y},svg.Point.prototype.angleTo=function(p){return Math.atan2(p.y-this.y,p.x-this.x)},svg.Point.prototype.applyTransform=function(v){var xp=this.x*v[0]+this.y*v[2]+v[4],yp=this.x*v[1]+this.y*v[3]+v[5];this.x=xp,this.y=yp},svg.CreatePoint=function(s){var a=svg.ToNumberArray(s);return new svg.Point(a[0],a[1])},svg.CreatePath=function(s){for(var a=svg.ToNumberArray(s),path=[],i=0;i<a.length;i+=2)path.push(new svg.Point(a[i],a[i+1]));return path},svg.BoundingBox=function(x1,y1,x2,y2){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN,this.x=function(){return this.x1},this.y=function(){return this.y1},this.width=function(){return this.x2-this.x1},this.height=function(){return this.y2-this.y1},this.addPoint=function(x,y){null!=x&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=x,this.x2=x),x<this.x1&&(this.x1=x),x>this.x2&&(this.x2=x)),null!=y&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=y,this.y2=y),y<this.y1&&(this.y1=y),y>this.y2&&(this.y2=y))},this.addX=function(x){this.addPoint(x,null)},this.addY=function(y){this.addPoint(null,y)},this.addBoundingBox=function(bb){this.addPoint(bb.x1,bb.y1),this.addPoint(bb.x2,bb.y2)},this.addQuadraticCurve=function(p0x,p0y,p1x,p1y,p2x,p2y){var cp1x=p0x+2/3*(p1x-p0x),cp1y=p0y+2/3*(p1y-p0y),cp2x=cp1x+1/3*(p2x-p0x),cp2y=cp1y+1/3*(p2y-p0y);this.addBezierCurve(p0x,p0y,cp1x,cp2x,cp1y,cp2y,p2x,p2y)},this.addBezierCurve=function(p0x,p0y,p1x,p1y,p2x,p2y,p3x,p3y){var p0=[p0x,p0y],p1=[p1x,p1y],p2=[p2x,p2y],p3=[p3x,p3y];for(this.addPoint(p0[0],p0[1]),this.addPoint(p3[0],p3[1]),i=0;i<=1;i++){var f=function(t){return Math.pow(1-t,3)*p0[i]+3*Math.pow(1-t,2)*t*p1[i]+3*(1-t)*Math.pow(t,2)*p2[i]+Math.pow(t,3)*p3[i]},b=6*p0[i]-12*p1[i]+6*p2[i],a=-3*p0[i]+9*p1[i]-9*p2[i]+3*p3[i],c=3*p1[i]-3*p0[i];if(0!=a){var b2ac=Math.pow(b,2)-4*c*a;if(!(b2ac<0)){var t1=(-b+Math.sqrt(b2ac))/(2*a);0<t1&&t1<1&&(0==i&&this.addX(f(t1)),1==i&&this.addY(f(t1)));var t2=(-b-Math.sqrt(b2ac))/(2*a);0<t2&&t2<1&&(0==i&&this.addX(f(t2)),1==i&&this.addY(f(t2)))}}else{if(0==b)continue;var t=-c/b;0<t&&t<1&&(0==i&&this.addX(f(t)),1==i&&this.addY(f(t)))}}},this.isPointInBox=function(x,y){return this.x1<=x&&x<=this.x2&&this.y1<=y&&y<=this.y2},this.addPoint(x1,y1),this.addPoint(x2,y2)},svg.Transform=function(v){var that=this;this.Type={},this.Type.translate=function(s){this.p=svg.CreatePoint(s),this.apply=function(ctx){ctx.translate(this.p.x||0,this.p.y||0)},this.unapply=function(ctx){ctx.translate(-1*this.p.x||0,-1*this.p.y||0)},this.applyToPoint=function(p){p.applyTransform([1,0,0,1,this.p.x||0,this.p.y||0])}},this.Type.rotate=function(s){var a=svg.ToNumberArray(s);this.angle=new svg.Property("angle",a[0]),this.cx=a[1]||0,this.cy=a[2]||0,this.apply=function(ctx){ctx.translate(this.cx,this.cy),ctx.rotate(this.angle.toRadians()),ctx.translate(-this.cx,-this.cy)},this.unapply=function(ctx){ctx.translate(this.cx,this.cy),ctx.rotate(-1*this.angle.toRadians()),ctx.translate(-this.cx,-this.cy)},this.applyToPoint=function(p){var a=this.angle.toRadians();p.applyTransform([1,0,0,1,this.p.x||0,this.p.y||0]),p.applyTransform([Math.cos(a),Math.sin(a),-Math.sin(a),Math.cos(a),0,0]),p.applyTransform([1,0,0,1,-this.p.x||0,-this.p.y||0])}},this.Type.scale=function(s){this.p=svg.CreatePoint(s),this.apply=function(ctx){ctx.scale(this.p.x||1,this.p.y||this.p.x||1)},this.unapply=function(ctx){ctx.scale(1/this.p.x||1,1/this.p.y||this.p.x||1)},this.applyToPoint=function(p){p.applyTransform([this.p.x||0,0,0,this.p.y||0,0,0])}},this.Type.matrix=function(s){this.m=svg.ToNumberArray(s),this.apply=function(ctx){ctx.transform(this.m[0],this.m[1],this.m[2],this.m[3],this.m[4],this.m[5])},this.unapply=function(ctx){var a=this.m[0],b=this.m[2],c=this.m[4],d=this.m[1],e=this.m[3],f=this.m[5],det=1/(a*(1*e-0*f)-b*(1*d-0*f)+c*(0*d-0*e));ctx.transform(det*(1*e-0*f),det*(0*f-1*d),det*(0*c-1*b),det*(1*a-0*c),det*(b*f-c*e),det*(c*d-a*f))},this.applyToPoint=function(p){p.applyTransform(this.m)}},this.Type.SkewBase=function(s){this.base=that.Type.matrix,this.base(s),this.angle=new svg.Property("angle",s)},this.Type.SkewBase.prototype=new this.Type.matrix,this.Type.skewX=function(s){this.base=that.Type.SkewBase,this.base(s),this.m=[1,0,Math.tan(this.angle.toRadians()),1,0,0]},this.Type.skewX.prototype=new this.Type.SkewBase,this.Type.skewY=function(s){this.base=that.Type.SkewBase,this.base(s),this.m=[1,Math.tan(this.angle.toRadians()),0,1,0,0]},this.Type.skewY.prototype=new this.Type.SkewBase,this.transforms=[],this.apply=function(ctx){for(var i=0;i<this.transforms.length;i++)this.transforms[i].apply(ctx)},this.unapply=function(ctx){for(var i=this.transforms.length-1;i>=0;i--)this.transforms[i].unapply(ctx)},this.applyToPoint=function(p){for(var i=0;i<this.transforms.length;i++)this.transforms[i].applyToPoint(p)};for(var data=svg.trim(svg.compressSpaces(v)).replace(/\)([a-zA-Z])/g,") $1").replace(/\)(\s?,\s?)/g,") ").split(/\s(?=[a-z])/),i=0;i<data.length;i++){var type=svg.trim(data[i].split("(")[0]),s=data[i].split("(")[1].replace(")",""),transformType=this.Type[type];if(void 0!==transformType){var transform=new transformType(s);transform.type=type,this.transforms.push(transform)}}},svg.AspectRatio=function(ctx,aspectRatio,width,desiredWidth,height,desiredHeight,minX,minY,refX,refY){var align=(aspectRatio=(aspectRatio=svg.compressSpaces(aspectRatio)).replace(/^defer\s/,"")).split(" ")[0]||"xMidYMid",meetOrSlice=aspectRatio.split(" ")[1]||"meet",scaleX=width/desiredWidth,scaleY=height/desiredHeight,scaleMin=Math.min(scaleX,scaleY),scaleMax=Math.max(scaleX,scaleY);"meet"==meetOrSlice&&(desiredWidth*=scaleMin,desiredHeight*=scaleMin),"slice"==meetOrSlice&&(desiredWidth*=scaleMax,desiredHeight*=scaleMax),refX=new svg.Property("refX",refX),refY=new svg.Property("refY",refY),refX.hasValue()&&refY.hasValue()?ctx.translate(-scaleMin*refX.toPixels("x"),-scaleMin*refY.toPixels("y")):(align.match(/^xMid/)&&("meet"==meetOrSlice&&scaleMin==scaleY||"slice"==meetOrSlice&&scaleMax==scaleY)&&ctx.translate(width/2-desiredWidth/2,0),align.match(/YMid$/)&&("meet"==meetOrSlice&&scaleMin==scaleX||"slice"==meetOrSlice&&scaleMax==scaleX)&&ctx.translate(0,height/2-desiredHeight/2),align.match(/^xMax/)&&("meet"==meetOrSlice&&scaleMin==scaleY||"slice"==meetOrSlice&&scaleMax==scaleY)&&ctx.translate(width-desiredWidth,0),align.match(/YMax$/)&&("meet"==meetOrSlice&&scaleMin==scaleX||"slice"==meetOrSlice&&scaleMax==scaleX)&&ctx.translate(0,height-desiredHeight)),"none"==align?ctx.scale(scaleX,scaleY):"meet"==meetOrSlice?ctx.scale(scaleMin,scaleMin):"slice"==meetOrSlice&&ctx.scale(scaleMax,scaleMax),ctx.translate(null==minX?0:-minX,null==minY?0:-minY)},svg.Element={},svg.EmptyProperty=new svg.Property("EMPTY",""),svg.Element.ElementBase=function(node){this.attributes={},this.styles={},this.stylesSpecificity={},this.children=[],this.attribute=function(name,createIfNotExists){var a=this.attributes[name];return null!=a?a:(1==createIfNotExists&&(a=new svg.Property(name,""),this.attributes[name]=a),a||svg.EmptyProperty)},this.getHrefAttribute=function(){for(var a in this.attributes)if("href"==a||a.match(/:href$/))return this.attributes[a];return svg.EmptyProperty},this.style=function(name,createIfNotExists,skipAncestors){var s=this.styles[name];if(null!=s)return s;var a=this.attribute(name);if(null!=a&&a.hasValue())return this.styles[name]=a,a;if(1!=skipAncestors){var p=this.parent;if(null!=p){var ps=p.style(name);if(null!=ps&&ps.hasValue())return ps}}return 1==createIfNotExists&&(s=new svg.Property(name,""),this.styles[name]=s),s||svg.EmptyProperty},this.render=function(ctx){if("none"!=this.style("display").value&&"hidden"!=this.style("visibility").value){if(ctx.save(),this.style("mask").hasValue()){var mask=this.style("mask").getDefinition();null!=mask&&mask.apply(ctx,this)}else if(this.style("filter").hasValue()){var filter=this.style("filter").getDefinition();null!=filter&&filter.apply(ctx,this)}else this.setContext(ctx),this.renderChildren(ctx),this.clearContext(ctx);ctx.restore()}},this.setContext=function(ctx){},this.clearContext=function(ctx){},this.renderChildren=function(ctx){for(var i=0;i<this.children.length;i++)this.children[i].render(ctx)},this.addChild=function(childNode,create){var child=childNode;create&&(child=svg.CreateElement(childNode)),child.parent=this,"title"!=child.type&&this.children.push(child)},this.addStylesFromStyleDefinition=function(){for(var selector in svg.Styles)if("@"!=selector[0]&&matchesSelector(node,selector)){var styles=svg.Styles[selector],specificity=svg.StylesSpecificity[selector];if(null!=styles)for(var name in styles){var existingSpecificity=this.stylesSpecificity[name];void 0===existingSpecificity&&(existingSpecificity="000"),specificity>existingSpecificity&&(this.styles[name]=styles[name],this.stylesSpecificity[name]=specificity)}}};var allUppercase=new RegExp("^[A-Z-]+$"),normalizeAttributeName=function(name){return allUppercase.test(name)?name.toLowerCase():name};if(null!=node&&1==node.nodeType){for(var i=0;i<node.attributes.length;i++){var attribute=node.attributes[i],nodeName=normalizeAttributeName(attribute.nodeName);this.attributes[nodeName]=new svg.Property(nodeName,attribute.value)}if(this.addStylesFromStyleDefinition(),this.attribute("style").hasValue()){var styles=this.attribute("style").value.split(";");for(i=0;i<styles.length;i++)if(""!=svg.trim(styles[i])){var style=styles[i].split(":"),name=svg.trim(style[0]),value=svg.trim(style[1]);this.styles[name]=new svg.Property(name,value)}}this.attribute("id").hasValue()&&null==svg.Definitions[this.attribute("id").value]&&(svg.Definitions[this.attribute("id").value]=this);for(i=0;i<node.childNodes.length;i++){var childNode=node.childNodes[i];if(1==childNode.nodeType&&this.addChild(childNode,!0),this.captureTextNodes&&(3==childNode.nodeType||4==childNode.nodeType)){var text=childNode.value||childNode.text||childNode.textContent||"";""!=svg.compressSpaces(text)&&this.addChild(new svg.Element.tspan(childNode),!1)}}}},svg.Element.RenderedElementBase=function(node){this.base=svg.Element.ElementBase,this.base(node),this.setContext=function(ctx){var fs;if(this.style("fill").isUrlDefinition())null!=(fs=this.style("fill").getFillStyleDefinition(this,this.style("fill-opacity")))&&(ctx.fillStyle=fs);else if(this.style("fill").hasValue()){var fillStyle;"currentColor"==(fillStyle=this.style("fill")).value&&(fillStyle.value=this.style("color").value),"inherit"!=fillStyle.value&&(ctx.fillStyle="none"==fillStyle.value?"rgba(0,0,0,0)":fillStyle.value)}this.style("fill-opacity").hasValue()&&(fillStyle=(fillStyle=new svg.Property("fill",ctx.fillStyle)).addOpacity(this.style("fill-opacity")),ctx.fillStyle=fillStyle.value);if(this.style("stroke").isUrlDefinition())null!=(fs=this.style("stroke").getFillStyleDefinition(this,this.style("stroke-opacity")))&&(ctx.strokeStyle=fs);else if(this.style("stroke").hasValue()){var strokeStyle;"currentColor"==(strokeStyle=this.style("stroke")).value&&(strokeStyle.value=this.style("color").value),"inherit"!=strokeStyle.value&&(ctx.strokeStyle="none"==strokeStyle.value?"rgba(0,0,0,0)":strokeStyle.value)}this.style("stroke-opacity").hasValue()&&(strokeStyle=(strokeStyle=new svg.Property("stroke",ctx.strokeStyle)).addOpacity(this.style("stroke-opacity")),ctx.strokeStyle=strokeStyle.value);if(this.style("stroke-width").hasValue()){var newLineWidth=this.style("stroke-width").toPixels();ctx.lineWidth=0==newLineWidth?.001:newLineWidth}if(this.style("stroke-linecap").hasValue()&&(ctx.lineCap=this.style("stroke-linecap").value),this.style("stroke-linejoin").hasValue()&&(ctx.lineJoin=this.style("stroke-linejoin").value),this.style("stroke-miterlimit").hasValue()&&(ctx.miterLimit=this.style("stroke-miterlimit").value),this.style("stroke-dasharray").hasValue()&&"none"!=this.style("stroke-dasharray").value){var gaps=svg.ToNumberArray(this.style("stroke-dasharray").value);void 0!==ctx.setLineDash?ctx.setLineDash(gaps):void 0!==ctx.webkitLineDash?ctx.webkitLineDash=gaps:void 0===ctx.mozDash||1==gaps.length&&0==gaps[0]||(ctx.mozDash=gaps);var offset=this.style("stroke-dashoffset").numValueOrDefault(1);void 0!==ctx.lineDashOffset?ctx.lineDashOffset=offset:void 0!==ctx.webkitLineDashOffset?ctx.webkitLineDashOffset=offset:void 0!==ctx.mozDashOffset&&(ctx.mozDashOffset=offset)}(void 0!==ctx.font&&(ctx.font=svg.Font.CreateFont(this.style("font-style").value,this.style("font-variant").value,this.style("font-weight").value,this.style("font-size").hasValue()?this.style("font-size").toPixels()+"px":"",this.style("font-family").value).toString()),this.style("transform",!1,!0).hasValue())&&new svg.Transform(this.style("transform",!1,!0).value).apply(ctx);if(this.style("clip-path",!1,!0).hasValue()){var clip=this.style("clip-path",!1,!0).getDefinition();null!=clip&&clip.apply(ctx)}this.style("opacity").hasValue()&&(ctx.globalAlpha=this.style("opacity").numValue())}},svg.Element.RenderedElementBase.prototype=new svg.Element.ElementBase,svg.Element.PathElementBase=function(node){this.base=svg.Element.RenderedElementBase,this.base(node),this.path=function(ctx){return null!=ctx&&ctx.beginPath(),new svg.BoundingBox},this.renderChildren=function(ctx){this.path(ctx),svg.Mouse.checkPath(this,ctx),""!=ctx.fillStyle&&("inherit"!=this.style("fill-rule").valueOrDefault("inherit")?ctx.fill(this.style("fill-rule").value):ctx.fill()),""!=ctx.strokeStyle&&ctx.stroke();var markers=this.getMarkers();if(null!=markers){if(this.style("marker-start").isUrlDefinition())(marker=this.style("marker-start").getDefinition()).render(ctx,markers[0][0],markers[0][1]);if(this.style("marker-mid").isUrlDefinition())for(var marker=this.style("marker-mid").getDefinition(),i=1;i<markers.length-1;i++)marker.render(ctx,markers[i][0],markers[i][1]);if(this.style("marker-end").isUrlDefinition())(marker=this.style("marker-end").getDefinition()).render(ctx,markers[markers.length-1][0],markers[markers.length-1][1])}},this.getBoundingBox=function(){return this.path()},this.getMarkers=function(){return null}},svg.Element.PathElementBase.prototype=new svg.Element.RenderedElementBase,svg.Element.svg=function(node){this.base=svg.Element.RenderedElementBase,this.base(node),this.baseClearContext=this.clearContext,this.clearContext=function(ctx){this.baseClearContext(ctx),svg.ViewPort.RemoveCurrent()},this.baseSetContext=this.setContext,this.setContext=function(ctx){ctx.strokeStyle="rgba(0,0,0,0)",ctx.lineCap="butt",ctx.lineJoin="miter",ctx.miterLimit=4,void 0!==ctx.font&&void 0!==window.getComputedStyle&&(ctx.font=window.getComputedStyle(ctx.canvas).getPropertyValue("font")),this.baseSetContext(ctx),this.attribute("x").hasValue()||(this.attribute("x",!0).value=0),this.attribute("y").hasValue()||(this.attribute("y",!0).value=0),ctx.translate(this.attribute("x").toPixels("x"),this.attribute("y").toPixels("y"));var width=svg.ViewPort.width(),height=svg.ViewPort.height();if(this.attribute("width").hasValue()||(this.attribute("width",!0).value="100%"),this.attribute("height").hasValue()||(this.attribute("height",!0).value="100%"),void 0===this.root){width=this.attribute("width").toPixels("x"),height=this.attribute("height").toPixels("y");var x=0,y=0;this.attribute("refX").hasValue()&&this.attribute("refY").hasValue()&&(x=-this.attribute("refX").toPixels("x"),y=-this.attribute("refY").toPixels("y")),"visible"!=this.attribute("overflow").valueOrDefault("hidden")&&(ctx.beginPath(),ctx.moveTo(x,y),ctx.lineTo(width,y),ctx.lineTo(width,height),ctx.lineTo(x,height),ctx.closePath(),ctx.clip())}if(svg.ViewPort.SetCurrent(width,height),this.attribute("viewBox").hasValue()){var viewBox=svg.ToNumberArray(this.attribute("viewBox").value),minX=viewBox[0],minY=viewBox[1];width=viewBox[2],height=viewBox[3],svg.AspectRatio(ctx,this.attribute("preserveAspectRatio").value,svg.ViewPort.width(),width,svg.ViewPort.height(),height,minX,minY,this.attribute("refX").value,this.attribute("refY").value),svg.ViewPort.RemoveCurrent(),svg.ViewPort.SetCurrent(viewBox[2],viewBox[3])}}},svg.Element.svg.prototype=new svg.Element.RenderedElementBase,svg.Element.rect=function(node){this.base=svg.Element.PathElementBase,this.base(node),this.path=function(ctx){var x=this.attribute("x").toPixels("x"),y=this.attribute("y").toPixels("y"),width=this.attribute("width").toPixels("x"),height=this.attribute("height").toPixels("y"),rx=this.attribute("rx").toPixels("x"),ry=this.attribute("ry").toPixels("y");return this.attribute("rx").hasValue()&&!this.attribute("ry").hasValue()&&(ry=rx),this.attribute("ry").hasValue()&&!this.attribute("rx").hasValue()&&(rx=ry),rx=Math.min(rx,width/2),ry=Math.min(ry,height/2),null!=ctx&&(ctx.beginPath(),ctx.moveTo(x+rx,y),ctx.lineTo(x+width-rx,y),ctx.quadraticCurveTo(x+width,y,x+width,y+ry),ctx.lineTo(x+width,y+height-ry),ctx.quadraticCurveTo(x+width,y+height,x+width-rx,y+height),ctx.lineTo(x+rx,y+height),ctx.quadraticCurveTo(x,y+height,x,y+height-ry),ctx.lineTo(x,y+ry),ctx.quadraticCurveTo(x,y,x+rx,y),ctx.closePath()),new svg.BoundingBox(x,y,x+width,y+height)}},svg.Element.rect.prototype=new svg.Element.PathElementBase,svg.Element.circle=function(node){this.base=svg.Element.PathElementBase,this.base(node),this.path=function(ctx){var cx=this.attribute("cx").toPixels("x"),cy=this.attribute("cy").toPixels("y"),r=this.attribute("r").toPixels();return null!=ctx&&(ctx.beginPath(),ctx.arc(cx,cy,r,0,2*Math.PI,!0),ctx.closePath()),new svg.BoundingBox(cx-r,cy-r,cx+r,cy+r)}},svg.Element.circle.prototype=new svg.Element.PathElementBase,svg.Element.ellipse=function(node){this.base=svg.Element.PathElementBase,this.base(node),this.path=function(ctx){var KAPPA=(Math.sqrt(2)-1)/3*4,rx=this.attribute("rx").toPixels("x"),ry=this.attribute("ry").toPixels("y"),cx=this.attribute("cx").toPixels("x"),cy=this.attribute("cy").toPixels("y");return null!=ctx&&(ctx.beginPath(),ctx.moveTo(cx,cy-ry),ctx.bezierCurveTo(cx+KAPPA*rx,cy-ry,cx+rx,cy-KAPPA*ry,cx+rx,cy),ctx.bezierCurveTo(cx+rx,cy+KAPPA*ry,cx+KAPPA*rx,cy+ry,cx,cy+ry),ctx.bezierCurveTo(cx-KAPPA*rx,cy+ry,cx-rx,cy+KAPPA*ry,cx-rx,cy),ctx.bezierCurveTo(cx-rx,cy-KAPPA*ry,cx-KAPPA*rx,cy-ry,cx,cy-ry),ctx.closePath()),new svg.BoundingBox(cx-rx,cy-ry,cx+rx,cy+ry)}},svg.Element.ellipse.prototype=new svg.Element.PathElementBase,svg.Element.line=function(node){this.base=svg.Element.PathElementBase,this.base(node),this.getPoints=function(){return[new svg.Point(this.attribute("x1").toPixels("x"),this.attribute("y1").toPixels("y")),new svg.Point(this.attribute("x2").toPixels("x"),this.attribute("y2").toPixels("y"))]},this.path=function(ctx){var points=this.getPoints();return null!=ctx&&(ctx.beginPath(),ctx.moveTo(points[0].x,points[0].y),ctx.lineTo(points[1].x,points[1].y)),new svg.BoundingBox(points[0].x,points[0].y,points[1].x,points[1].y)},this.getMarkers=function(){var points=this.getPoints(),a=points[0].angleTo(points[1]);return[[points[0],a],[points[1],a]]}},svg.Element.line.prototype=new svg.Element.PathElementBase,svg.Element.polyline=function(node){this.base=svg.Element.PathElementBase,this.base(node),this.points=svg.CreatePath(this.attribute("points").value),this.path=function(ctx){var bb=new svg.BoundingBox(this.points[0].x,this.points[0].y);null!=ctx&&(ctx.beginPath(),ctx.moveTo(this.points[0].x,this.points[0].y));for(var i=1;i<this.points.length;i++)bb.addPoint(this.points[i].x,this.points[i].y),null!=ctx&&ctx.lineTo(this.points[i].x,this.points[i].y);return bb},this.getMarkers=function(){for(var markers=[],i=0;i<this.points.length-1;i++)markers.push([this.points[i],this.points[i].angleTo(this.points[i+1])]);return markers.length>0&&markers.push([this.points[this.points.length-1],markers[markers.length-1][1]]),markers}},svg.Element.polyline.prototype=new svg.Element.PathElementBase,svg.Element.polygon=function(node){this.base=svg.Element.polyline,this.base(node),this.basePath=this.path,this.path=function(ctx){var bb=this.basePath(ctx);return null!=ctx&&(ctx.lineTo(this.points[0].x,this.points[0].y),ctx.closePath()),bb}},svg.Element.polygon.prototype=new svg.Element.polyline,svg.Element.path=function(node){this.base=svg.Element.PathElementBase,this.base(node);var d=this.attribute("d").value;d=d.replace(/,/gm," ");for(var i=0;i<2;i++)d=d.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\s])/gm,"$1 $2");d=(d=d.replace(/([^\s])([MmZzLlHhVvCcSsQqTtAa])/gm,"$1 $2")).replace(/([0-9])([+\-])/gm,"$1 $2");for(i=0;i<2;i++)d=d.replace(/(\.[0-9]*)(\.)/gm,"$1 $2");d=d.replace(/([Aa](\s+[0-9]+){3})\s+([01])\s*([01])/gm,"$1 $3 $4 "),d=svg.compressSpaces(d),d=svg.trim(d),this.PathParser=new function(d){this.tokens=d.split(" "),this.reset=function(){this.i=-1,this.command="",this.previousCommand="",this.start=new svg.Point(0,0),this.control=new svg.Point(0,0),this.current=new svg.Point(0,0),this.points=[],this.angles=[]},this.isEnd=function(){return this.i>=this.tokens.length-1},this.isCommandOrEnd=function(){return!!this.isEnd()||null!=this.tokens[this.i+1].match(/^[A-Za-z]$/)},this.isRelativeCommand=function(){switch(this.command){case"m":case"l":case"h":case"v":case"c":case"s":case"q":case"t":case"a":case"z":return!0}return!1},this.getToken=function(){return this.i++,this.tokens[this.i]},this.getScalar=function(){return parseFloat(this.getToken())},this.nextCommand=function(){this.previousCommand=this.command,this.command=this.getToken()},this.getPoint=function(){var p=new svg.Point(this.getScalar(),this.getScalar());return this.makeAbsolute(p)},this.getAsControlPoint=function(){var p=this.getPoint();return this.control=p,p},this.getAsCurrentPoint=function(){var p=this.getPoint();return this.current=p,p},this.getReflectedControlPoint=function(){return"c"!=this.previousCommand.toLowerCase()&&"s"!=this.previousCommand.toLowerCase()&&"q"!=this.previousCommand.toLowerCase()&&"t"!=this.previousCommand.toLowerCase()?this.current:new svg.Point(2*this.current.x-this.control.x,2*this.current.y-this.control.y)},this.makeAbsolute=function(p){return this.isRelativeCommand()&&(p.x+=this.current.x,p.y+=this.current.y),p},this.addMarker=function(p,from,priorTo){null!=priorTo&&this.angles.length>0&&null==this.angles[this.angles.length-1]&&(this.angles[this.angles.length-1]=this.points[this.points.length-1].angleTo(priorTo)),this.addMarkerAngle(p,null==from?null:from.angleTo(p))},this.addMarkerAngle=function(p,a){this.points.push(p),this.angles.push(a)},this.getMarkerPoints=function(){return this.points},this.getMarkerAngles=function(){for(var i=0;i<this.angles.length;i++)if(null==this.angles[i])for(var j=i+1;j<this.angles.length;j++)if(null!=this.angles[j]){this.angles[i]=this.angles[j];break}return this.angles}}(d),this.path=function(ctx){var pp=this.PathParser;pp.reset();var bb=new svg.BoundingBox;for(null!=ctx&&ctx.beginPath();!pp.isEnd();)switch(pp.nextCommand(),pp.command){case"M":case"m":var p=pp.getAsCurrentPoint();for(pp.addMarker(p),bb.addPoint(p.x,p.y),null!=ctx&&ctx.moveTo(p.x,p.y),pp.start=pp.current;!pp.isCommandOrEnd();){p=pp.getAsCurrentPoint();pp.addMarker(p,pp.start),bb.addPoint(p.x,p.y),null!=ctx&&ctx.lineTo(p.x,p.y)}break;case"L":case"l":for(;!pp.isCommandOrEnd();){var c=pp.current;p=pp.getAsCurrentPoint();pp.addMarker(p,c),bb.addPoint(p.x,p.y),null!=ctx&&ctx.lineTo(p.x,p.y)}break;case"H":case"h":for(;!pp.isCommandOrEnd();){var newP=new svg.Point((pp.isRelativeCommand()?pp.current.x:0)+pp.getScalar(),pp.current.y);pp.addMarker(newP,pp.current),pp.current=newP,bb.addPoint(pp.current.x,pp.current.y),null!=ctx&&ctx.lineTo(pp.current.x,pp.current.y)}break;case"V":case"v":for(;!pp.isCommandOrEnd();){newP=new svg.Point(pp.current.x,(pp.isRelativeCommand()?pp.current.y:0)+pp.getScalar());pp.addMarker(newP,pp.current),pp.current=newP,bb.addPoint(pp.current.x,pp.current.y),null!=ctx&&ctx.lineTo(pp.current.x,pp.current.y)}break;case"C":case"c":for(;!pp.isCommandOrEnd();){var curr=pp.current,p1=pp.getPoint(),cntrl=pp.getAsControlPoint(),cp=pp.getAsCurrentPoint();pp.addMarker(cp,cntrl,p1),bb.addBezierCurve(curr.x,curr.y,p1.x,p1.y,cntrl.x,cntrl.y,cp.x,cp.y),null!=ctx&&ctx.bezierCurveTo(p1.x,p1.y,cntrl.x,cntrl.y,cp.x,cp.y)}break;case"S":case"s":for(;!pp.isCommandOrEnd();){curr=pp.current,p1=pp.getReflectedControlPoint(),cntrl=pp.getAsControlPoint(),cp=pp.getAsCurrentPoint();pp.addMarker(cp,cntrl,p1),bb.addBezierCurve(curr.x,curr.y,p1.x,p1.y,cntrl.x,cntrl.y,cp.x,cp.y),null!=ctx&&ctx.bezierCurveTo(p1.x,p1.y,cntrl.x,cntrl.y,cp.x,cp.y)}break;case"Q":case"q":for(;!pp.isCommandOrEnd();){curr=pp.current,cntrl=pp.getAsControlPoint(),cp=pp.getAsCurrentPoint();pp.addMarker(cp,cntrl,cntrl),bb.addQuadraticCurve(curr.x,curr.y,cntrl.x,cntrl.y,cp.x,cp.y),null!=ctx&&ctx.quadraticCurveTo(cntrl.x,cntrl.y,cp.x,cp.y)}break;case"T":case"t":for(;!pp.isCommandOrEnd();){curr=pp.current,cntrl=pp.getReflectedControlPoint();pp.control=cntrl;cp=pp.getAsCurrentPoint();pp.addMarker(cp,cntrl,cntrl),bb.addQuadraticCurve(curr.x,curr.y,cntrl.x,cntrl.y,cp.x,cp.y),null!=ctx&&ctx.quadraticCurveTo(cntrl.x,cntrl.y,cp.x,cp.y)}break;case"A":case"a":for(;!pp.isCommandOrEnd();){curr=pp.current;var rx=pp.getScalar(),ry=pp.getScalar(),xAxisRotation=pp.getScalar()*(Math.PI/180),largeArcFlag=pp.getScalar(),sweepFlag=pp.getScalar(),currp=(cp=pp.getAsCurrentPoint(),new svg.Point(Math.cos(xAxisRotation)*(curr.x-cp.x)/2+Math.sin(xAxisRotation)*(curr.y-cp.y)/2,-Math.sin(xAxisRotation)*(curr.x-cp.x)/2+Math.cos(xAxisRotation)*(curr.y-cp.y)/2)),l=Math.pow(currp.x,2)/Math.pow(rx,2)+Math.pow(currp.y,2)/Math.pow(ry,2);l>1&&(rx*=Math.sqrt(l),ry*=Math.sqrt(l));var s=(largeArcFlag==sweepFlag?-1:1)*Math.sqrt((Math.pow(rx,2)*Math.pow(ry,2)-Math.pow(rx,2)*Math.pow(currp.y,2)-Math.pow(ry,2)*Math.pow(currp.x,2))/(Math.pow(rx,2)*Math.pow(currp.y,2)+Math.pow(ry,2)*Math.pow(currp.x,2)));isNaN(s)&&(s=0);var cpp=new svg.Point(s*rx*currp.y/ry,s*-ry*currp.x/rx),centp=new svg.Point((curr.x+cp.x)/2+Math.cos(xAxisRotation)*cpp.x-Math.sin(xAxisRotation)*cpp.y,(curr.y+cp.y)/2+Math.sin(xAxisRotation)*cpp.x+Math.cos(xAxisRotation)*cpp.y),m=function(v){return Math.sqrt(Math.pow(v[0],2)+Math.pow(v[1],2))},r=function(u,v){return(u[0]*v[0]+u[1]*v[1])/(m(u)*m(v))},a=function(u,v){return(u[0]*v[1]<u[1]*v[0]?-1:1)*Math.acos(r(u,v))},a1=a([1,0],[(currp.x-cpp.x)/rx,(currp.y-cpp.y)/ry]),u=[(currp.x-cpp.x)/rx,(currp.y-cpp.y)/ry],v=[(-currp.x-cpp.x)/rx,(-currp.y-cpp.y)/ry],ad=a(u,v);r(u,v)<=-1&&(ad=Math.PI),r(u,v)>=1&&(ad=0);var dir=1-sweepFlag?1:-1,ah=a1+dir*(ad/2),halfWay=new svg.Point(centp.x+rx*Math.cos(ah),centp.y+ry*Math.sin(ah));if(pp.addMarkerAngle(halfWay,ah-dir*Math.PI/2),pp.addMarkerAngle(cp,ah-dir*Math.PI),bb.addPoint(cp.x,cp.y),null!=ctx){r=rx>ry?rx:ry;var sx=rx>ry?1:rx/ry,sy=rx>ry?ry/rx:1;ctx.translate(centp.x,centp.y),ctx.rotate(xAxisRotation),ctx.scale(sx,sy),ctx.arc(0,0,r,a1,a1+ad,1-sweepFlag),ctx.scale(1/sx,1/sy),ctx.rotate(-xAxisRotation),ctx.translate(-centp.x,-centp.y)}}break;case"Z":case"z":null!=ctx&&ctx.closePath(),pp.current=pp.start}return bb},this.getMarkers=function(){for(var points=this.PathParser.getMarkerPoints(),angles=this.PathParser.getMarkerAngles(),markers=[],i=0;i<points.length;i++)markers.push([points[i],angles[i]]);return markers}},svg.Element.path.prototype=new svg.Element.PathElementBase,svg.Element.pattern=function(node){this.base=svg.Element.ElementBase,this.base(node),this.createPattern=function(ctx,element){var width=this.attribute("width").toPixels("x",!0),height=this.attribute("height").toPixels("y",!0),tempSvg=new svg.Element.svg;tempSvg.attributes.viewBox=new svg.Property("viewBox",this.attribute("viewBox").value),tempSvg.attributes.width=new svg.Property("width",width+"px"),tempSvg.attributes.height=new svg.Property("height",height+"px"),tempSvg.attributes.transform=new svg.Property("transform",this.attribute("patternTransform").value),tempSvg.children=this.children;var c=document.createElement("canvas");c.width=width,c.height=height;var cctx=c.getContext("2d");this.attribute("x").hasValue()&&this.attribute("y").hasValue()&&cctx.translate(this.attribute("x").toPixels("x",!0),this.attribute("y").toPixels("y",!0));for(var x=-1;x<=1;x++)for(var y=-1;y<=1;y++)cctx.save(),tempSvg.attributes.x=new svg.Property("x",x*c.width),tempSvg.attributes.y=new svg.Property("y",y*c.height),tempSvg.render(cctx),cctx.restore();return ctx.createPattern(c,"repeat")}},svg.Element.pattern.prototype=new svg.Element.ElementBase,svg.Element.marker=function(node){this.base=svg.Element.ElementBase,this.base(node),this.baseRender=this.render,this.render=function(ctx,point,angle){ctx.translate(point.x,point.y),"auto"==this.attribute("orient").valueOrDefault("auto")&&ctx.rotate(angle),"strokeWidth"==this.attribute("markerUnits").valueOrDefault("strokeWidth")&&ctx.scale(ctx.lineWidth,ctx.lineWidth),ctx.save();var tempSvg=new svg.Element.svg;tempSvg.attributes.viewBox=new svg.Property("viewBox",this.attribute("viewBox").value),tempSvg.attributes.refX=new svg.Property("refX",this.attribute("refX").value),tempSvg.attributes.refY=new svg.Property("refY",this.attribute("refY").value),tempSvg.attributes.width=new svg.Property("width",this.attribute("markerWidth").value),tempSvg.attributes.height=new svg.Property("height",this.attribute("markerHeight").value),tempSvg.attributes.fill=new svg.Property("fill",this.attribute("fill").valueOrDefault("black")),tempSvg.attributes.stroke=new svg.Property("stroke",this.attribute("stroke").valueOrDefault("none")),tempSvg.children=this.children,tempSvg.render(ctx),ctx.restore(),"strokeWidth"==this.attribute("markerUnits").valueOrDefault("strokeWidth")&&ctx.scale(1/ctx.lineWidth,1/ctx.lineWidth),"auto"==this.attribute("orient").valueOrDefault("auto")&&ctx.rotate(-angle),ctx.translate(-point.x,-point.y)}},svg.Element.marker.prototype=new svg.Element.ElementBase,svg.Element.defs=function(node){this.base=svg.Element.ElementBase,this.base(node),this.render=function(ctx){}},svg.Element.defs.prototype=new svg.Element.ElementBase,svg.Element.GradientBase=function(node){this.base=svg.Element.ElementBase,this.base(node),this.stops=[];for(var i=0;i<this.children.length;i++){var child=this.children[i];"stop"==child.type&&this.stops.push(child)}this.getGradient=function(){},this.gradientUnits=function(){return this.attribute("gradientUnits").valueOrDefault("objectBoundingBox")},this.attributesToInherit=["gradientUnits"],this.inheritStopContainer=function(stopsContainer){for(var i=0;i<this.attributesToInherit.length;i++){var attributeToInherit=this.attributesToInherit[i];!this.attribute(attributeToInherit).hasValue()&&stopsContainer.attribute(attributeToInherit).hasValue()&&(this.attribute(attributeToInherit,!0).value=stopsContainer.attribute(attributeToInherit).value)}},this.createGradient=function(ctx,element,parentOpacityProp){var stopsContainer=this;this.getHrefAttribute().hasValue()&&(stopsContainer=this.getHrefAttribute().getDefinition(),this.inheritStopContainer(stopsContainer));var addParentOpacity=function(color){return parentOpacityProp.hasValue()?new svg.Property("color",color).addOpacity(parentOpacityProp).value:color},g=this.getGradient(ctx,element);if(null==g)return addParentOpacity(stopsContainer.stops[stopsContainer.stops.length-1].color);for(var i=0;i<stopsContainer.stops.length;i++)g.addColorStop(stopsContainer.stops[i].offset,addParentOpacity(stopsContainer.stops[i].color));if(this.attribute("gradientTransform").hasValue()){var rootView=svg.ViewPort.viewPorts[0],rect=new svg.Element.rect;rect.attributes.x=new svg.Property("x",-svg.MAX_VIRTUAL_PIXELS/3),rect.attributes.y=new svg.Property("y",-svg.MAX_VIRTUAL_PIXELS/3),rect.attributes.width=new svg.Property("width",svg.MAX_VIRTUAL_PIXELS),rect.attributes.height=new svg.Property("height",svg.MAX_VIRTUAL_PIXELS);var group=new svg.Element.g;group.attributes.transform=new svg.Property("transform",this.attribute("gradientTransform").value),group.children=[rect];var tempSvg=new svg.Element.svg;tempSvg.attributes.x=new svg.Property("x",0),tempSvg.attributes.y=new svg.Property("y",0),tempSvg.attributes.width=new svg.Property("width",rootView.width),tempSvg.attributes.height=new svg.Property("height",rootView.height),tempSvg.children=[group];var c=document.createElement("canvas");c.width=rootView.width,c.height=rootView.height;var tempCtx=c.getContext("2d");return tempCtx.fillStyle=g,tempSvg.render(tempCtx),tempCtx.createPattern(c,"no-repeat")}return g}},svg.Element.GradientBase.prototype=new svg.Element.ElementBase,svg.Element.linearGradient=function(node){this.base=svg.Element.GradientBase,this.base(node),this.attributesToInherit.push("x1"),this.attributesToInherit.push("y1"),this.attributesToInherit.push("x2"),this.attributesToInherit.push("y2"),this.getGradient=function(ctx,element){var bb="objectBoundingBox"==this.gradientUnits()?element.getBoundingBox():null;this.attribute("x1").hasValue()||this.attribute("y1").hasValue()||this.attribute("x2").hasValue()||this.attribute("y2").hasValue()||(this.attribute("x1",!0).value=0,this.attribute("y1",!0).value=0,this.attribute("x2",!0).value=1,this.attribute("y2",!0).value=0);var x1="objectBoundingBox"==this.gradientUnits()?bb.x()+bb.width()*this.attribute("x1").numValue():this.attribute("x1").toPixels("x"),y1="objectBoundingBox"==this.gradientUnits()?bb.y()+bb.height()*this.attribute("y1").numValue():this.attribute("y1").toPixels("y"),x2="objectBoundingBox"==this.gradientUnits()?bb.x()+bb.width()*this.attribute("x2").numValue():this.attribute("x2").toPixels("x"),y2="objectBoundingBox"==this.gradientUnits()?bb.y()+bb.height()*this.attribute("y2").numValue():this.attribute("y2").toPixels("y");return x1==x2&&y1==y2?null:ctx.createLinearGradient(x1,y1,x2,y2)}},svg.Element.linearGradient.prototype=new svg.Element.GradientBase,svg.Element.radialGradient=function(node){this.base=svg.Element.GradientBase,this.base(node),this.attributesToInherit.push("cx"),this.attributesToInherit.push("cy"),this.attributesToInherit.push("r"),this.attributesToInherit.push("fx"),this.attributesToInherit.push("fy"),this.getGradient=function(ctx,element){var bb=element.getBoundingBox();this.attribute("cx").hasValue()||(this.attribute("cx",!0).value="50%"),this.attribute("cy").hasValue()||(this.attribute("cy",!0).value="50%"),this.attribute("r").hasValue()||(this.attribute("r",!0).value="50%");var cx="objectBoundingBox"==this.gradientUnits()?bb.x()+bb.width()*this.attribute("cx").numValue():this.attribute("cx").toPixels("x"),cy="objectBoundingBox"==this.gradientUnits()?bb.y()+bb.height()*this.attribute("cy").numValue():this.attribute("cy").toPixels("y"),fx=cx,fy=cy;this.attribute("fx").hasValue()&&(fx="objectBoundingBox"==this.gradientUnits()?bb.x()+bb.width()*this.attribute("fx").numValue():this.attribute("fx").toPixels("x")),this.attribute("fy").hasValue()&&(fy="objectBoundingBox"==this.gradientUnits()?bb.y()+bb.height()*this.attribute("fy").numValue():this.attribute("fy").toPixels("y"));var r="objectBoundingBox"==this.gradientUnits()?(bb.width()+bb.height())/2*this.attribute("r").numValue():this.attribute("r").toPixels();return ctx.createRadialGradient(fx,fy,0,cx,cy,r)}},svg.Element.radialGradient.prototype=new svg.Element.GradientBase,svg.Element.stop=function(node){this.base=svg.Element.ElementBase,this.base(node),this.offset=this.attribute("offset").numValue(),this.offset<0&&(this.offset=0),this.offset>1&&(this.offset=1);var stopColor=this.style("stop-color",!0);""===stopColor.value&&(stopColor.value="#000"),this.style("stop-opacity").hasValue()&&(stopColor=stopColor.addOpacity(this.style("stop-opacity"))),this.color=stopColor.value},svg.Element.stop.prototype=new svg.Element.ElementBase,svg.Element.AnimateBase=function(node){this.base=svg.Element.ElementBase,this.base(node),svg.Animations.push(this),this.duration=0,this.begin=this.attribute("begin").toMilliseconds(),this.maxDuration=this.begin+this.attribute("dur").toMilliseconds(),this.getProperty=function(){var attributeType=this.attribute("attributeType").value,attributeName=this.attribute("attributeName").value;return"CSS"==attributeType?this.parent.style(attributeName,!0):this.parent.attribute(attributeName,!0)},this.initialValue=null,this.initialUnits="",this.removed=!1,this.calcValue=function(){return""},this.update=function(delta){if(null==this.initialValue&&(this.initialValue=this.getProperty().value,this.initialUnits=this.getProperty().getUnits()),this.duration>this.maxDuration){if("indefinite"==this.attribute("repeatCount").value||"indefinite"==this.attribute("repeatDur").value)this.duration=0;else if("freeze"!=this.attribute("fill").valueOrDefault("remove")||this.frozen){if("remove"==this.attribute("fill").valueOrDefault("remove")&&!this.removed)return this.removed=!0,this.getProperty().value=this.parent.animationFrozen?this.parent.animationFrozenValue:this.initialValue,!0}else this.frozen=!0,this.parent.animationFrozen=!0,this.parent.animationFrozenValue=this.getProperty().value;return!1}this.duration=this.duration+delta;var updated=!1;if(this.begin<this.duration){var newValue=this.calcValue();if(this.attribute("type").hasValue())newValue=this.attribute("type").value+"("+newValue+")";this.getProperty().value=newValue,updated=!0}return updated},this.from=this.attribute("from"),this.to=this.attribute("to"),this.values=this.attribute("values"),this.values.hasValue()&&(this.values.value=this.values.value.split(";")),this.progress=function(){var ret={progress:(this.duration-this.begin)/(this.maxDuration-this.begin)};if(this.values.hasValue()){var p=ret.progress*(this.values.value.length-1),lb=Math.floor(p),ub=Math.ceil(p);ret.from=new svg.Property("from",parseFloat(this.values.value[lb])),ret.to=new svg.Property("to",parseFloat(this.values.value[ub])),ret.progress=(p-lb)/(ub-lb)}else ret.from=this.from,ret.to=this.to;return ret}},svg.Element.AnimateBase.prototype=new svg.Element.ElementBase,svg.Element.animate=function(node){this.base=svg.Element.AnimateBase,this.base(node),this.calcValue=function(){var p=this.progress();return p.from.numValue()+(p.to.numValue()-p.from.numValue())*p.progress+this.initialUnits}},svg.Element.animate.prototype=new svg.Element.AnimateBase,svg.Element.animateColor=function(node){this.base=svg.Element.AnimateBase,this.base(node),this.calcValue=function(){var p=this.progress(),from=new RGBColor(p.from.value),to=new RGBColor(p.to.value);if(from.ok&&to.ok){var r=from.r+(to.r-from.r)*p.progress,g=from.g+(to.g-from.g)*p.progress,b=from.b+(to.b-from.b)*p.progress;return"rgb("+parseInt(r,10)+","+parseInt(g,10)+","+parseInt(b,10)+")"}return this.attribute("from").value}},svg.Element.animateColor.prototype=new svg.Element.AnimateBase,svg.Element.animateTransform=function(node){this.base=svg.Element.AnimateBase,this.base(node),this.calcValue=function(){for(var p=this.progress(),from=svg.ToNumberArray(p.from.value),to=svg.ToNumberArray(p.to.value),newValue="",i=0;i<from.length;i++)newValue+=from[i]+(to[i]-from[i])*p.progress+" ";return newValue}},svg.Element.animateTransform.prototype=new svg.Element.animate,svg.Element.font=function(node){this.base=svg.Element.ElementBase,this.base(node),this.horizAdvX=this.attribute("horiz-adv-x").numValue(),this.isRTL=!1,this.isArabic=!1,this.fontFace=null,this.missingGlyph=null,this.glyphs=[];for(var i=0;i<this.children.length;i++){var child=this.children[i];"font-face"==child.type?(this.fontFace=child,child.style("font-family").hasValue()&&(svg.Definitions[child.style("font-family").value]=this)):"missing-glyph"==child.type?this.missingGlyph=child:"glyph"==child.type&&(""!=child.arabicForm?(this.isRTL=!0,this.isArabic=!0,void 0===this.glyphs[child.unicode]&&(this.glyphs[child.unicode]=[]),this.glyphs[child.unicode][child.arabicForm]=child):this.glyphs[child.unicode]=child)}},svg.Element.font.prototype=new svg.Element.ElementBase,svg.Element.fontface=function(node){this.base=svg.Element.ElementBase,this.base(node),this.ascent=this.attribute("ascent").value,this.descent=this.attribute("descent").value,this.unitsPerEm=this.attribute("units-per-em").numValue()},svg.Element.fontface.prototype=new svg.Element.ElementBase,svg.Element.missingglyph=function(node){this.base=svg.Element.path,this.base(node),this.horizAdvX=0},svg.Element.missingglyph.prototype=new svg.Element.path,svg.Element.glyph=function(node){this.base=svg.Element.path,this.base(node),this.horizAdvX=this.attribute("horiz-adv-x").numValue(),this.unicode=this.attribute("unicode").value,this.arabicForm=this.attribute("arabic-form").value},svg.Element.glyph.prototype=new svg.Element.path,svg.Element.text=function(node){this.captureTextNodes=!0,this.base=svg.Element.RenderedElementBase,this.base(node),this.baseSetContext=this.setContext,this.setContext=function(ctx){this.baseSetContext(ctx);var textBaseline=this.style("dominant-baseline").toTextBaseline();null==textBaseline&&(textBaseline=this.style("alignment-baseline").toTextBaseline()),null!=textBaseline&&(ctx.textBaseline=textBaseline)},this.getBoundingBox=function(){var x=this.attribute("x").toPixels("x"),y=this.attribute("y").toPixels("y"),fontSize=this.parent.style("font-size").numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);return new svg.BoundingBox(x,y-fontSize,x+Math.floor(2*fontSize/3)*this.children[0].getText().length,y)},this.renderChildren=function(ctx){this.x=this.attribute("x").toPixels("x"),this.y=this.attribute("y").toPixels("y"),this.attribute("dx").hasValue()&&(this.x+=this.attribute("dx").toPixels("x")),this.attribute("dy").hasValue()&&(this.y+=this.attribute("dy").toPixels("y")),this.x+=this.getAnchorDelta(ctx,this,0);for(var i=0;i<this.children.length;i++)this.renderChild(ctx,this,this,i)},this.getAnchorDelta=function(ctx,parent,startI){var textAnchor=this.style("text-anchor").valueOrDefault("start");if("start"!=textAnchor){for(var width=0,i=startI;i<parent.children.length;i++){var child=parent.children[i];if(i>startI&&child.attribute("x").hasValue())break;width+=child.measureTextRecursive(ctx)}return-1*("end"==textAnchor?width:width/2)}return 0},this.renderChild=function(ctx,textParent,parent,i){var child=parent.children[i];child.attribute("x").hasValue()?(child.x=child.attribute("x").toPixels("x")+textParent.getAnchorDelta(ctx,parent,i),child.attribute("dx").hasValue()&&(child.x+=child.attribute("dx").toPixels("x"))):(child.attribute("dx").hasValue()&&(textParent.x+=child.attribute("dx").toPixels("x")),child.x=textParent.x),textParent.x=child.x+child.measureText(ctx),child.attribute("y").hasValue()?(child.y=child.attribute("y").toPixels("y"),child.attribute("dy").hasValue()&&(child.y+=child.attribute("dy").toPixels("y"))):(child.attribute("dy").hasValue()&&(textParent.y+=child.attribute("dy").toPixels("y")),child.y=textParent.y),textParent.y=child.y,child.render(ctx);for(i=0;i<child.children.length;i++)textParent.renderChild(ctx,textParent,child,i)}},svg.Element.text.prototype=new svg.Element.RenderedElementBase,svg.Element.TextElementBase=function(node){this.base=svg.Element.RenderedElementBase,this.base(node),this.getGlyph=function(font,text,i){var c=text[i],glyph=null;if(font.isArabic){var arabicForm="isolated";(0==i||" "==text[i-1])&&i<text.length-2&&" "!=text[i+1]&&(arabicForm="terminal"),i>0&&" "!=text[i-1]&&i<text.length-2&&" "!=text[i+1]&&(arabicForm="medial"),i>0&&" "!=text[i-1]&&(i==text.length-1||" "==text[i+1])&&(arabicForm="initial"),void 0!==font.glyphs[c]&&null==(glyph=font.glyphs[c][arabicForm])&&"glyph"==font.glyphs[c].type&&(glyph=font.glyphs[c])}else glyph=font.glyphs[c];return null==glyph&&(glyph=font.missingGlyph),glyph},this.renderChildren=function(ctx){var customFont=this.parent.style("font-family").getDefinition();if(null==customFont)""!=ctx.fillStyle&&ctx.fillText(svg.compressSpaces(this.getText()),this.x,this.y),""!=ctx.strokeStyle&&ctx.strokeText(svg.compressSpaces(this.getText()),this.x,this.y);else{var fontSize=this.parent.style("font-size").numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize),fontStyle=this.parent.style("font-style").valueOrDefault(svg.Font.Parse(svg.ctx.font).fontStyle),text=this.getText();customFont.isRTL&&(text=text.split("").reverse().join(""));for(var dx=svg.ToNumberArray(this.parent.attribute("dx").value),i=0;i<text.length;i++){var glyph=this.getGlyph(customFont,text,i),scale=fontSize/customFont.fontFace.unitsPerEm;ctx.translate(this.x,this.y),ctx.scale(scale,-scale);var lw=ctx.lineWidth;ctx.lineWidth=ctx.lineWidth*customFont.fontFace.unitsPerEm/fontSize,"italic"==fontStyle&&ctx.transform(1,0,.4,1,0,0),glyph.render(ctx),"italic"==fontStyle&&ctx.transform(1,0,-.4,1,0,0),ctx.lineWidth=lw,ctx.scale(1/scale,-1/scale),ctx.translate(-this.x,-this.y),this.x+=fontSize*(glyph.horizAdvX||customFont.horizAdvX)/customFont.fontFace.unitsPerEm,void 0===dx[i]||isNaN(dx[i])||(this.x+=dx[i])}}},this.getText=function(){},this.measureTextRecursive=function(ctx){for(var width=this.measureText(ctx),i=0;i<this.children.length;i++)width+=this.children[i].measureTextRecursive(ctx);return width},this.measureText=function(ctx){var customFont=this.parent.style("font-family").getDefinition();if(null!=customFont){var fontSize=this.parent.style("font-size").numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize),measure=0,text=this.getText();customFont.isRTL&&(text=text.split("").reverse().join(""));for(var dx=svg.ToNumberArray(this.parent.attribute("dx").value),i=0;i<text.length;i++){measure+=(this.getGlyph(customFont,text,i).horizAdvX||customFont.horizAdvX)*fontSize/customFont.fontFace.unitsPerEm,void 0===dx[i]||isNaN(dx[i])||(measure+=dx[i])}return measure}var textToMeasure=svg.compressSpaces(this.getText());if(!ctx.measureText)return 10*textToMeasure.length;ctx.save(),this.setContext(ctx);var width=ctx.measureText(textToMeasure).width;return ctx.restore(),width}},svg.Element.TextElementBase.prototype=new svg.Element.RenderedElementBase,svg.Element.tspan=function(node){this.captureTextNodes=!0,this.base=svg.Element.TextElementBase,this.base(node),this.text=svg.compressSpaces(node.value||node.text||node.textContent||""),this.getText=function(){return this.children.length>0?"":this.text}},svg.Element.tspan.prototype=new svg.Element.TextElementBase,svg.Element.tref=function(node){this.base=svg.Element.TextElementBase,this.base(node),this.getText=function(){var element=this.getHrefAttribute().getDefinition();if(null!=element)return element.children[0].getText()}},svg.Element.tref.prototype=new svg.Element.TextElementBase,svg.Element.a=function(node){this.base=svg.Element.TextElementBase,this.base(node),this.hasText=node.childNodes.length>0;for(var i=0;i<node.childNodes.length;i++)3!=node.childNodes[i].nodeType&&(this.hasText=!1);this.text=this.hasText?node.childNodes[0].value:"",this.getText=function(){return this.text},this.baseRenderChildren=this.renderChildren,this.renderChildren=function(ctx){if(this.hasText){this.baseRenderChildren(ctx);var fontSize=new svg.Property("fontSize",svg.Font.Parse(svg.ctx.font).fontSize);svg.Mouse.checkBoundingBox(this,new svg.BoundingBox(this.x,this.y-fontSize.toPixels("y"),this.x+this.measureText(ctx),this.y))}else if(this.children.length>0){var g=new svg.Element.g;g.children=this.children,g.parent=this,g.render(ctx)}},this.onclick=function(){window.open(this.getHrefAttribute().value)},this.onmousemove=function(){svg.ctx.canvas.style.cursor="pointer"}},svg.Element.a.prototype=new svg.Element.TextElementBase,svg.Element.image=function(node){this.base=svg.Element.RenderedElementBase,this.base(node);var href=this.getHrefAttribute().value;if(""!=href){var isSvg=href.match(/\.svg$/);if(svg.Images.push(this),this.loaded=!1,isSvg)this.img=svg.ajax(href),this.loaded=!0;else{this.img=document.createElement("img"),1==svg.opts.useCORS&&(this.img.crossOrigin="Anonymous");var self=this;this.img.onload=function(){self.loaded=!0},this.img.onerror=function(){svg.log('ERROR: image "'+href+'" not found'),self.loaded=!0},this.img.src=href}this.renderChildren=function(ctx){var x=this.attribute("x").toPixels("x"),y=this.attribute("y").toPixels("y"),width=this.attribute("width").toPixels("x"),height=this.attribute("height").toPixels("y");0!=width&&0!=height&&(ctx.save(),isSvg?ctx.drawSvg(this.img,x,y,width,height):(ctx.translate(x,y),svg.AspectRatio(ctx,this.attribute("preserveAspectRatio").value,width,this.img.width,height,this.img.height,0,0),ctx.drawImage(this.img,0,0)),ctx.restore())},this.getBoundingBox=function(){var x=this.attribute("x").toPixels("x"),y=this.attribute("y").toPixels("y"),width=this.attribute("width").toPixels("x"),height=this.attribute("height").toPixels("y");return new svg.BoundingBox(x,y,x+width,y+height)}}},svg.Element.image.prototype=new svg.Element.RenderedElementBase,svg.Element.g=function(node){this.base=svg.Element.RenderedElementBase,this.base(node),this.getBoundingBox=function(){for(var bb=new svg.BoundingBox,i=0;i<this.children.length;i++)bb.addBoundingBox(this.children[i].getBoundingBox());return bb}},svg.Element.g.prototype=new svg.Element.RenderedElementBase,svg.Element.symbol=function(node){this.base=svg.Element.RenderedElementBase,this.base(node),this.render=function(ctx){}},svg.Element.symbol.prototype=new svg.Element.RenderedElementBase,svg.Element.style=function(node){this.base=svg.Element.ElementBase,this.base(node);for(var css="",i=0;i<node.childNodes.length;i++)css+=node.childNodes[i].data;css=css.replace(/(\/\*([^*]|[\r\n]|(\*+([^*\/]|[\r\n])))*\*+\/)|(^[\s]*\/\/.*)/gm,"");var cssDefs=(css=svg.compressSpaces(css)).split("}");for(i=0;i<cssDefs.length;i++)if(""!=svg.trim(cssDefs[i]))for(var cssDef=cssDefs[i].split("{"),cssClasses=cssDef[0].split(","),cssProps=cssDef[1].split(";"),j=0;j<cssClasses.length;j++){var cssClass=svg.trim(cssClasses[j]);if(""!=cssClass){for(var props=svg.Styles[cssClass]||{},k=0;k<cssProps.length;k++){var prop=cssProps[k].indexOf(":"),name=cssProps[k].substr(0,prop),value=cssProps[k].substr(prop+1,cssProps[k].length-prop);null!=name&&null!=value&&(props[svg.trim(name)]=new svg.Property(svg.trim(name),svg.trim(value)))}if(svg.Styles[cssClass]=props,svg.StylesSpecificity[cssClass]=getSelectorSpecificity(cssClass),"@font-face"==cssClass)for(var fontFamily=props["font-family"].value.replace(/"/g,""),srcs=props.src.value.split(","),s=0;s<srcs.length;s++)if(srcs[s].indexOf('format("svg")')>0)for(var urlStart=srcs[s].indexOf("url"),urlEnd=srcs[s].indexOf(")",urlStart),url=srcs[s].substr(urlStart+5,urlEnd-urlStart-6),fonts=svg.parseXml(svg.ajax(url)).getElementsByTagName("font"),f=0;f<fonts.length;f++){var font=svg.CreateElement(fonts[f]);svg.Definitions[fontFamily]=font}}}},svg.Element.style.prototype=new svg.Element.ElementBase,svg.Element.use=function(node){this.base=svg.Element.RenderedElementBase,this.base(node),this.baseSetContext=this.setContext,this.setContext=function(ctx){this.baseSetContext(ctx),this.attribute("x").hasValue()&&ctx.translate(this.attribute("x").toPixels("x"),0),this.attribute("y").hasValue()&&ctx.translate(0,this.attribute("y").toPixels("y"))};var element=this.getHrefAttribute().getDefinition();this.path=function(ctx){null!=element&&element.path(ctx)},this.getBoundingBox=function(){if(null!=element)return element.getBoundingBox()},this.renderChildren=function(ctx){if(null!=element){var tempSvg=element;"symbol"==element.type&&((tempSvg=new svg.Element.svg).type="svg",tempSvg.attributes.viewBox=new svg.Property("viewBox",element.attribute("viewBox").value),tempSvg.attributes.preserveAspectRatio=new svg.Property("preserveAspectRatio",element.attribute("preserveAspectRatio").value),tempSvg.attributes.overflow=new svg.Property("overflow",element.attribute("overflow").value),tempSvg.children=element.children),"svg"==tempSvg.type&&(this.attribute("width").hasValue()&&(tempSvg.attributes.width=new svg.Property("width",this.attribute("width").value)),this.attribute("height").hasValue()&&(tempSvg.attributes.height=new svg.Property("height",this.attribute("height").value)));var oldParent=tempSvg.parent;tempSvg.parent=null,tempSvg.render(ctx),tempSvg.parent=oldParent}}},svg.Element.use.prototype=new svg.Element.RenderedElementBase,svg.Element.mask=function(node){this.base=svg.Element.ElementBase,this.base(node),this.apply=function(ctx,element){var x=this.attribute("x").toPixels("x"),y=this.attribute("y").toPixels("y"),width=this.attribute("width").toPixels("x"),height=this.attribute("height").toPixels("y");if(0==width&&0==height){for(var bb=new svg.BoundingBox,i=0;i<this.children.length;i++)bb.addBoundingBox(this.children[i].getBoundingBox());x=Math.floor(bb.x1),y=Math.floor(bb.y1),width=Math.floor(bb.width()),height=Math.floor(bb.height())}var mask=element.attribute("mask").value;element.attribute("mask").value="";var cMask=document.createElement("canvas");cMask.width=x+width,cMask.height=y+height;var maskCtx=cMask.getContext("2d");this.renderChildren(maskCtx);var c=document.createElement("canvas");c.width=x+width,c.height=y+height;var tempCtx=c.getContext("2d");element.render(tempCtx),tempCtx.globalCompositeOperation="destination-in",tempCtx.fillStyle=maskCtx.createPattern(cMask,"no-repeat"),tempCtx.fillRect(0,0,x+width,y+height),ctx.fillStyle=tempCtx.createPattern(c,"no-repeat"),ctx.fillRect(0,0,x+width,y+height),element.attribute("mask").value=mask},this.render=function(ctx){}},svg.Element.mask.prototype=new svg.Element.ElementBase,svg.Element.clipPath=function(node){this.base=svg.Element.ElementBase,this.base(node),this.apply=function(ctx){var oldBeginPath=CanvasRenderingContext2D.prototype.beginPath;CanvasRenderingContext2D.prototype.beginPath=function(){};var oldClosePath=CanvasRenderingContext2D.prototype.closePath;CanvasRenderingContext2D.prototype.closePath=function(){},oldBeginPath.call(ctx);for(var i=0;i<this.children.length;i++){var child=this.children[i];if(void 0!==child.path){var transform=null;child.style("transform",!1,!0).hasValue()&&(transform=new svg.Transform(child.style("transform",!1,!0).value)).apply(ctx),child.path(ctx),CanvasRenderingContext2D.prototype.closePath=oldClosePath,transform&&transform.unapply(ctx)}}oldClosePath.call(ctx),ctx.clip(),CanvasRenderingContext2D.prototype.beginPath=oldBeginPath,CanvasRenderingContext2D.prototype.closePath=oldClosePath},this.render=function(ctx){}},svg.Element.clipPath.prototype=new svg.Element.ElementBase,svg.Element.filter=function(node){this.base=svg.Element.ElementBase,this.base(node),this.apply=function(ctx,element){var bb=element.getBoundingBox(),x=Math.floor(bb.x1),y=Math.floor(bb.y1),width=Math.floor(bb.width()),height=Math.floor(bb.height()),filter=element.style("filter").value;element.style("filter").value="";for(var px=0,py=0,i=0;i<this.children.length;i++){var efd=this.children[i].extraFilterDistance||0;px=Math.max(px,efd),py=Math.max(py,efd)}var c=document.createElement("canvas");c.width=width+2*px,c.height=height+2*py;var tempCtx=c.getContext("2d");tempCtx.translate(-x+px,-y+py),element.render(tempCtx);for(i=0;i<this.children.length;i++)"function"==typeof this.children[i].apply&&this.children[i].apply(tempCtx,0,0,width+2*px,height+2*py);ctx.drawImage(c,0,0,width+2*px,height+2*py,x-px,y-py,width+2*px,height+2*py),element.style("filter",!0).value=filter},this.render=function(ctx){}},svg.Element.filter.prototype=new svg.Element.ElementBase,svg.Element.feMorphology=function(node){this.base=svg.Element.ElementBase,this.base(node),this.apply=function(ctx,x,y,width,height){}},svg.Element.feMorphology.prototype=new svg.Element.ElementBase,svg.Element.feComposite=function(node){this.base=svg.Element.ElementBase,this.base(node),this.apply=function(ctx,x,y,width,height){}},svg.Element.feComposite.prototype=new svg.Element.ElementBase,svg.Element.feColorMatrix=function(node){this.base=svg.Element.ElementBase,this.base(node);var matrix=svg.ToNumberArray(this.attribute("values").value);switch(this.attribute("type").valueOrDefault("matrix")){case"saturate":var s=matrix[0];matrix=[.213+.787*s,.715-.715*s,.072-.072*s,0,0,.213-.213*s,.715+.285*s,.072-.072*s,0,0,.213-.213*s,.715-.715*s,.072+.928*s,0,0,0,0,0,1,0,0,0,0,0,1];break;case"hueRotate":var a=matrix[0]*Math.PI/180,c=function(m1,m2,m3){return m1+Math.cos(a)*m2+Math.sin(a)*m3};matrix=[c(.213,.787,-.213),c(.715,-.715,-.715),c(.072,-.072,.928),0,0,c(.213,-.213,.143),c(.715,.285,.14),c(.072,-.072,-.283),0,0,c(.213,-.213,-.787),c(.715,-.715,.715),c(.072,.928,.072),0,0,0,0,0,1,0,0,0,0,0,1];break;case"luminanceToAlpha":matrix=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.2125,.7154,.0721,0,0,0,0,0,0,1]}function imGet(img,x,y,width,height,rgba){return img[y*width*4+4*x+rgba]}function imSet(img,x,y,width,height,rgba,val){img[y*width*4+4*x+rgba]=val}function m(i,v){var mi=matrix[i];return mi*(mi<0?v-255:v)}this.apply=function(ctx,x,y,width,height){var srcData=ctx.getImageData(0,0,width,height);for(y=0;y<height;y++)for(x=0;x<width;x++){var r=imGet(srcData.data,x,y,width,0,0),g=imGet(srcData.data,x,y,width,0,1),b=imGet(srcData.data,x,y,width,0,2),a=imGet(srcData.data,x,y,width,0,3);imSet(srcData.data,x,y,width,0,0,m(0,r)+m(1,g)+m(2,b)+m(3,a)+m(4,1)),imSet(srcData.data,x,y,width,0,1,m(5,r)+m(6,g)+m(7,b)+m(8,a)+m(9,1)),imSet(srcData.data,x,y,width,0,2,m(10,r)+m(11,g)+m(12,b)+m(13,a)+m(14,1)),imSet(srcData.data,x,y,width,0,3,m(15,r)+m(16,g)+m(17,b)+m(18,a)+m(19,1))}ctx.clearRect(0,0,width,height),ctx.putImageData(srcData,0,0)}},svg.Element.feColorMatrix.prototype=new svg.Element.ElementBase,svg.Element.feGaussianBlur=function(node){this.base=svg.Element.ElementBase,this.base(node),this.blurRadius=Math.floor(this.attribute("stdDeviation").numValue()),this.extraFilterDistance=this.blurRadius,this.apply=function(ctx,x,y,width,height){void 0!==stackBlur.canvasRGBA?(ctx.canvas.id=svg.UniqueId(),ctx.canvas.style.display="none",document.body.appendChild(ctx.canvas),stackBlur.canvasRGBA(ctx.canvas.id,x,y,width,height,this.blurRadius),document.body.removeChild(ctx.canvas)):svg.log("ERROR: StackBlur.js must be included for blur to work")}},svg.Element.feGaussianBlur.prototype=new svg.Element.ElementBase,svg.Element.title=function(node){},svg.Element.title.prototype=new svg.Element.ElementBase,svg.Element.desc=function(node){},svg.Element.desc.prototype=new svg.Element.ElementBase,svg.Element.MISSING=function(node){svg.log("ERROR: Element '"+node.nodeName+"' not yet implemented.")},svg.Element.MISSING.prototype=new svg.Element.ElementBase,svg.CreateElement=function(node){var className=node.nodeName.replace(/^[^:]+:/,"");className=className.replace(/\-/g,"");var e=null;return(e=void 0!==svg.Element[className]?new svg.Element[className](node):new svg.Element.MISSING(node)).type=node.nodeName,e},svg.load=function(ctx,url){svg.loadXml(ctx,svg.ajax(url))},svg.loadXml=function(ctx,xml){svg.loadXmlDoc(ctx,svg.parseXml(xml))},svg.loadXmlDoc=function(ctx,dom){svg.init(ctx);var mapXY=function(p){for(var e=ctx.canvas;e;)p.x-=e.offsetLeft,p.y-=e.offsetTop,e=e.offsetParent;return window.scrollX&&(p.x+=window.scrollX),window.scrollY&&(p.y+=window.scrollY),p};1!=svg.opts.ignoreMouse&&(ctx.canvas.onclick=function(e){var p=mapXY(new svg.Point(null!=e?e.clientX:event.clientX,null!=e?e.clientY:event.clientY));svg.Mouse.onclick(p.x,p.y)},ctx.canvas.onmousemove=function(e){var p=mapXY(new svg.Point(null!=e?e.clientX:event.clientX,null!=e?e.clientY:event.clientY));svg.Mouse.onmousemove(p.x,p.y)});var e=svg.CreateElement(dom.documentElement);e.root=!0,e.addStylesFromStyleDefinition();var isFirstRender=!0,draw=function(){svg.ViewPort.Clear(),ctx.canvas.parentNode&&svg.ViewPort.SetCurrent(ctx.canvas.parentNode.clientWidth,ctx.canvas.parentNode.clientHeight),1!=svg.opts.ignoreDimensions&&(e.style("width").hasValue()&&(ctx.canvas.width=e.style("width").toPixels("x"),ctx.canvas.style.width=ctx.canvas.width+"px"),e.style("height").hasValue()&&(ctx.canvas.height=e.style("height").toPixels("y"),ctx.canvas.style.height=ctx.canvas.height+"px"));var cWidth=ctx.canvas.clientWidth||ctx.canvas.width,cHeight=ctx.canvas.clientHeight||ctx.canvas.height;if(1==svg.opts.ignoreDimensions&&e.style("width").hasValue()&&e.style("height").hasValue()&&(cWidth=e.style("width").toPixels("x"),cHeight=e.style("height").toPixels("y")),svg.ViewPort.SetCurrent(cWidth,cHeight),null!=svg.opts.offsetX&&(e.attribute("x",!0).value=svg.opts.offsetX),null!=svg.opts.offsetY&&(e.attribute("y",!0).value=svg.opts.offsetY),null!=svg.opts.scaleWidth||null!=svg.opts.scaleHeight){var xRatio=null,yRatio=null,viewBox=svg.ToNumberArray(e.attribute("viewBox").value);null!=svg.opts.scaleWidth&&(e.attribute("width").hasValue()?xRatio=e.attribute("width").toPixels("x")/svg.opts.scaleWidth:isNaN(viewBox[2])||(xRatio=viewBox[2]/svg.opts.scaleWidth)),null!=svg.opts.scaleHeight&&(e.attribute("height").hasValue()?yRatio=e.attribute("height").toPixels("y")/svg.opts.scaleHeight:isNaN(viewBox[3])||(yRatio=viewBox[3]/svg.opts.scaleHeight)),null==xRatio&&(xRatio=yRatio),null==yRatio&&(yRatio=xRatio),e.attribute("width",!0).value=svg.opts.scaleWidth,e.attribute("height",!0).value=svg.opts.scaleHeight,e.style("transform",!0,!0).value+=" scale("+1/xRatio+","+1/yRatio+")"}1!=svg.opts.ignoreClear&&ctx.clearRect(0,0,cWidth,cHeight),e.render(ctx),isFirstRender&&(isFirstRender=!1,"function"==typeof svg.opts.renderCallback&&svg.opts.renderCallback(dom))},waitingForImages=!0;svg.ImagesLoaded()&&(waitingForImages=!1,draw()),svg.intervalID=setInterval((function(){var needUpdate=!1;if(waitingForImages&&svg.ImagesLoaded()&&(waitingForImages=!1,needUpdate=!0),1!=svg.opts.ignoreMouse&&(needUpdate|=svg.Mouse.hasEvents()),1!=svg.opts.ignoreAnimation)for(var i=0;i<svg.Animations.length;i++)needUpdate|=svg.Animations[i].update(1e3/svg.FRAMERATE);"function"==typeof svg.opts.forceRedraw&&1==svg.opts.forceRedraw()&&(needUpdate=!0),needUpdate&&(draw(),svg.Mouse.runEvents())}),1e3/svg.FRAMERATE)},svg.stop=function(){svg.intervalID&&clearInterval(svg.intervalID)},svg.Mouse=new function(){this.events=[],this.hasEvents=function(){return 0!=this.events.length},this.onclick=function(x,y){this.events.push({type:"onclick",x,y,run:function(e){e.onclick&&e.onclick()}})},this.onmousemove=function(x,y){this.events.push({type:"onmousemove",x,y,run:function(e){e.onmousemove&&e.onmousemove()}})},this.eventElements=[],this.checkPath=function(element,ctx){for(var i=0;i<this.events.length;i++){var e=this.events[i];ctx.isPointInPath&&ctx.isPointInPath(e.x,e.y)&&(this.eventElements[i]=element)}},this.checkBoundingBox=function(element,bb){for(var i=0;i<this.events.length;i++){var e=this.events[i];bb.isPointInBox(e.x,e.y)&&(this.eventElements[i]=element)}},this.runEvents=function(){svg.ctx.canvas.style.cursor="";for(var i=0;i<this.events.length;i++)for(var e=this.events[i],element=this.eventElements[i];element;)e.run(element),element=element.parent;this.events=[],this.eventElements=[]}},svg}return"undefined"!=typeof CanvasRenderingContext2D&&(CanvasRenderingContext2D.prototype.drawSvg=function(s,dx,dy,dw,dh,opts){var cOpts={ignoreMouse:!0,ignoreAnimation:!0,ignoreDimensions:!0,ignoreClear:!0,offsetX:dx,offsetY:dy,scaleWidth:dw,scaleHeight:dh};for(var prop in opts)opts.hasOwnProperty(prop)&&(cOpts[prop]=opts[prop]);canvg(this.canvas,s,cOpts)}),canvg}))},"./node_modules/stackblur/index.js":module=>{var mul_table=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],shg_table=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];function BlurStack(){this.r=0,this.g=0,this.b=0,this.a=0,this.next=null}module.exports=function blur(pixels,width,height,radius){if(!(isNaN(radius)||radius<1)){var x,y,i,p,yp,yi,yw,r_sum,g_sum,b_sum,a_sum,r_out_sum,g_out_sum,b_out_sum,a_out_sum,r_in_sum,g_in_sum,b_in_sum,a_in_sum,pr,pg,pb,pa,rbs,div=(radius|=0)+radius+1,widthMinus1=width-1,heightMinus1=height-1,radiusPlus1=radius+1,sumFactor=radiusPlus1*(radiusPlus1+1)/2,stackStart=new BlurStack,stack=stackStart;for(i=1;i<div;i++)if(stack=stack.next=new BlurStack,i==radiusPlus1)var stackEnd=stack;stack.next=stackStart;var stackIn=null,stackOut=null;yw=yi=0;var mul_sum=mul_table[radius],shg_sum=shg_table[radius];for(y=0;y<height;y++){for(r_in_sum=g_in_sum=b_in_sum=a_in_sum=r_sum=g_sum=b_sum=a_sum=0,r_out_sum=radiusPlus1*(pr=pixels[yi]),g_out_sum=radiusPlus1*(pg=pixels[yi+1]),b_out_sum=radiusPlus1*(pb=pixels[yi+2]),a_out_sum=radiusPlus1*(pa=pixels[yi+3]),r_sum+=sumFactor*pr,g_sum+=sumFactor*pg,b_sum+=sumFactor*pb,a_sum+=sumFactor*pa,stack=stackStart,i=0;i<radiusPlus1;i++)stack.r=pr,stack.g=pg,stack.b=pb,stack.a=pa,stack=stack.next;for(i=1;i<radiusPlus1;i++)p=yi+((widthMinus1<i?widthMinus1:i)<<2),r_sum+=(stack.r=pr=pixels[p])*(rbs=radiusPlus1-i),g_sum+=(stack.g=pg=pixels[p+1])*rbs,b_sum+=(stack.b=pb=pixels[p+2])*rbs,a_sum+=(stack.a=pa=pixels[p+3])*rbs,r_in_sum+=pr,g_in_sum+=pg,b_in_sum+=pb,a_in_sum+=pa,stack=stack.next;for(stackIn=stackStart,stackOut=stackEnd,x=0;x<width;x++)pixels[yi+3]=pa=a_sum*mul_sum>>shg_sum,0!=pa?(pa=255/pa,pixels[yi]=(r_sum*mul_sum>>shg_sum)*pa,pixels[yi+1]=(g_sum*mul_sum>>shg_sum)*pa,pixels[yi+2]=(b_sum*mul_sum>>shg_sum)*pa):pixels[yi]=pixels[yi+1]=pixels[yi+2]=0,r_sum-=r_out_sum,g_sum-=g_out_sum,b_sum-=b_out_sum,a_sum-=a_out_sum,r_out_sum-=stackIn.r,g_out_sum-=stackIn.g,b_out_sum-=stackIn.b,a_out_sum-=stackIn.a,p=yw+((p=x+radius+1)<widthMinus1?p:widthMinus1)<<2,r_sum+=r_in_sum+=stackIn.r=pixels[p],g_sum+=g_in_sum+=stackIn.g=pixels[p+1],b_sum+=b_in_sum+=stackIn.b=pixels[p+2],a_sum+=a_in_sum+=stackIn.a=pixels[p+3],stackIn=stackIn.next,r_out_sum+=pr=stackOut.r,g_out_sum+=pg=stackOut.g,b_out_sum+=pb=stackOut.b,a_out_sum+=pa=stackOut.a,r_in_sum-=pr,g_in_sum-=pg,b_in_sum-=pb,a_in_sum-=pa,stackOut=stackOut.next,yi+=4;yw+=width}for(x=0;x<width;x++){for(g_in_sum=b_in_sum=a_in_sum=r_in_sum=g_sum=b_sum=a_sum=r_sum=0,r_out_sum=radiusPlus1*(pr=pixels[yi=x<<2]),g_out_sum=radiusPlus1*(pg=pixels[yi+1]),b_out_sum=radiusPlus1*(pb=pixels[yi+2]),a_out_sum=radiusPlus1*(pa=pixels[yi+3]),r_sum+=sumFactor*pr,g_sum+=sumFactor*pg,b_sum+=sumFactor*pb,a_sum+=sumFactor*pa,stack=stackStart,i=0;i<radiusPlus1;i++)stack.r=pr,stack.g=pg,stack.b=pb,stack.a=pa,stack=stack.next;for(yp=width,i=1;i<=radius;i++)yi=yp+x<<2,r_sum+=(stack.r=pr=pixels[yi])*(rbs=radiusPlus1-i),g_sum+=(stack.g=pg=pixels[yi+1])*rbs,b_sum+=(stack.b=pb=pixels[yi+2])*rbs,a_sum+=(stack.a=pa=pixels[yi+3])*rbs,r_in_sum+=pr,g_in_sum+=pg,b_in_sum+=pb,a_in_sum+=pa,stack=stack.next,i<heightMinus1&&(yp+=width);for(yi=x,stackIn=stackStart,stackOut=stackEnd,y=0;y<height;y++)pixels[(p=yi<<2)+3]=pa=a_sum*mul_sum>>shg_sum,pa>0?(pa=255/pa,pixels[p]=(r_sum*mul_sum>>shg_sum)*pa,pixels[p+1]=(g_sum*mul_sum>>shg_sum)*pa,pixels[p+2]=(b_sum*mul_sum>>shg_sum)*pa):pixels[p]=pixels[p+1]=pixels[p+2]=0,r_sum-=r_out_sum,g_sum-=g_out_sum,b_sum-=b_out_sum,a_sum-=a_out_sum,r_out_sum-=stackIn.r,g_out_sum-=stackIn.g,b_out_sum-=stackIn.b,a_out_sum-=stackIn.a,p=x+((p=y+radiusPlus1)<heightMinus1?p:heightMinus1)*width<<2,r_sum+=r_in_sum+=stackIn.r=pixels[p],g_sum+=g_in_sum+=stackIn.g=pixels[p+1],b_sum+=b_in_sum+=stackIn.b=pixels[p+2],a_sum+=a_in_sum+=stackIn.a=pixels[p+3],stackIn=stackIn.next,r_out_sum+=pr=stackOut.r,g_out_sum+=pg=stackOut.g,b_out_sum+=pb=stackOut.b,a_out_sum+=pa=stackOut.a,r_in_sum-=pr,g_in_sum-=pg,b_in_sum-=pb,a_in_sum-=pa,stackOut=stackOut.next,yi+=width}}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,