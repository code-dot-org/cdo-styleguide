/*! For license information please see code-studio-components-progress-LessonProgress-story.a0dfe09d.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1232],{"./src/code-studio/components/progress/LessonProgress.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedLessonProgress=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_progressRedux=__webpack_require__("./src/code-studio/progressRedux.ts"),_progressReduxSelectors=__webpack_require__("./src/code-studio/progressReduxSelectors.js"),_LessonExtrasProgressBubble=_interopRequireDefault(__webpack_require__("./src/templates/progress/LessonExtrasProgressBubble.jsx")),_ProgressBubble=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressBubble.jsx")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_browserNavigation=__webpack_require__("./src/code-studio/browserNavigation.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var LessonProgress=function(_Component){function LessonProgress(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LessonProgress,_Component);var _proto=LessonProgress.prototype;return _proto.getFullWidth=function getFullWidth(){var component=(0,_jquery.default)(this.refs.fullProgressInner);return component.length>0?component.width():0},_proto.setDesiredWidth=function setDesiredWidth(){this.props.setDesiredWidth&&this.props.setDesiredWidth(this.getFullWidth())},_proto.componentDidMount=function componentDidMount(){this.setDesiredWidth()},_proto.componentDidUpdate=function componentDidUpdate(){this.setDesiredWidth()},_proto.shouldComponentUpdate=function shouldComponentUpdate(nextProps){for(var levelIndex=0;levelIndex<this.props.levels.length;levelIndex++){var currentLevelChanged=this.props.currentLevelId!==nextProps.currentLevelId,statusChanged=this.props.levels[levelIndex].status!==nextProps.levels[levelIndex].status,badgeChanged=this.props.levels[levelIndex].teacherFeedbackReviewState!==nextProps.levels[levelIndex].teacherFeedbackReviewState;if(currentLevelChanged||statusChanged||badgeChanged)return!0}return this.props.width!==nextProps.width},_proto.getFullProgressOffset=function getFullProgressOffset(){if(this.refs.currentLevel&&this.props.width){var fullWidth=this.getFullWidth(),actualWidth=this.props.width,currentLevelOffset=(0,_jquery.default)(this.refs.currentLevel).position().left;if(fullWidth>actualWidth){var desiredOffset=actualWidth/2-currentLevelOffset-17,vignetteStyle=styles.headerVignetteLeftRight;return desiredOffset+fullWidth<actualWidth&&(desiredOffset=actualWidth-fullWidth,vignetteStyle=styles.headerVignetteLeft),desiredOffset>0&&(desiredOffset=0,vignetteStyle=styles.headerVignetteRight),{headerFullProgressOffset:desiredOffset,vignetteStyle:_objectSpread(_objectSpread({},styles.headerVignette),vignetteStyle)}}}return{headerFullProgressOffset:0,vignetteStyle:null}},_proto.isBonusComplete=function isBonusComplete(){return this.props.levels.some((function(level){return level.bonus&&level.status===_sharedConstants.LevelStatus.perfect}))},_proto.isOnBonusLevel=function isOnBonusLevel(){var _this$props=this.props,isLessonExtras=_this$props.isLessonExtras,levels=_this$props.levels,currentLevelId=_this$props.currentLevelId;return isLessonExtras||levels.some((function(level){return level.id===currentLevelId&&level.bonus}))},_proto.render=function render(){var _this$props2=this.props,currentPageNumber=_this$props2.currentPageNumber,lessonExtrasUrl=_this$props2.lessonExtrasUrl,lessonName=_this$props2.lessonName,navigateToLevelId=_this$props2.navigateToLevelId,currentLevel=_this$props2.currentLevel,levels=this.props.levels;levels=levels.filter((function(level){return!level.bonus}));var _this$getFullProgress=this.getFullProgressOffset(),headerFullProgressOffset=_this$getFullProgress.headerFullProgressOffset,vignetteStyle=_this$getFullProgress.vignetteStyle,onBonusLevel=this.isOnBonusLevel();return _react.default.createElement("div",{className:"react_stage",style:styles.container},_react.default.createElement("div",{className:"full_progress_outer",style:_objectSpread(_objectSpread({},styles.outer),{},{left:headerFullProgressOffset})},_react.default.createElement("div",{className:"full_progress_inner",ref:"fullProgressInner",style:styles.inner},levels.map((function(level,index){var _level$sublevels,isCurrent=level.isCurrentLevel||(null===(_level$sublevels=level.sublevels)||void 0===_level$sublevels?void 0:_level$sublevels.some((function(sublevel){return sublevel.isCurrentLevel})));isCurrent&&level.kind===_sharedConstants.LevelKind.assessment&&(isCurrent=currentPageNumber===level.pageNumber);var onBubbleClick=(0,_browserNavigation.canChangeLevelInPage)(currentLevel,level)?function(){return navigateToLevelId(level.id)}:void 0;return _react.default.createElement("div",{key:index,ref:isCurrent?"currentLevel":null,style:_objectSpread(_objectSpread({},styles.inner),level.isUnplugged&&isCurrent&&styles.pillContainer)},_react.default.createElement(_ProgressBubble.default,{level,disabled:!1,smallBubble:!isCurrent,lessonName,onClick:onBubbleClick}))})),lessonExtrasUrl&&_react.default.createElement("div",{ref:onBonusLevel?"currentLevel":null},_react.default.createElement(_LessonExtrasProgressBubble.default,{lessonExtrasUrl,isPerfect:this.isBonusComplete(),isSelected:onBonusLevel})))),_react.default.createElement("div",{className:"vignette",style:vignetteStyle}))},LessonProgress}(_react.Component);_defineProperty(LessonProgress,"propTypes",{levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,lessonName:_propTypes.default.string,lessonExtrasUrl:_propTypes.default.string,isLessonExtras:_propTypes.default.bool,width:_propTypes.default.number,setDesiredWidth:_propTypes.default.func,currentPageNumber:_propTypes.default.number,currentLevelId:_propTypes.default.string,navigateToLevelId:_propTypes.default.func,currentLevel:_propTypes.default.object});var styles={container:{backgroundColor:_color.default.lightest_gray,border:"1px solid ".concat(_color.default.lighter_gray),borderRadius:5,height:40,position:"relative",overflow:"hidden"},outer:{position:"absolute",paddingLeft:4,paddingRight:4,height:"100%",whiteSpace:"nowrap"},inner:{display:"flex",justifyContent:"center",alignItems:"center",height:"100%"},headerVignette:{width:"100%",height:"100%",position:"absolute",pointerEvents:"none"},headerVignetteLeftRight:{background:"linear-gradient(to right, rgba(231, 232, 234, 1) 0%, rgba(231, 232, 234, 0) 20px, rgba(231, 232, 234, 0) calc(100% - 20px), rgba(231, 232, 234, 1) 100%)"},headerVignetteLeft:{background:"linear-gradient(to right, rgba(231, 232, 234, 1) 0%, rgba(231, 232, 234, 0) 20px"},headerVignetteRight:{background:"linear-gradient(to right, rgba(231, 232, 234, 0) calc(100% - 20px), rgba(231, 232, 234, 1) 100%)"},spacer:{marginRight:"auto"},lessonTrophyContainer:{border:0,borderRadius:20,paddingLeft:8,paddingRight:0,minWidth:350,marginLeft:48},pillContainer:{paddingTop:4,paddingBottom:4}};exports.UnconnectedLessonProgress=LessonProgress,exports.default=(0,_reactRedux.connect)((function(state){return{levels:(0,_progressReduxSelectors.getCurrentLevels)(state),currentLevel:(0,_progressReduxSelectors.getCurrentLevel)(state),lessonExtrasUrl:(0,_progressReduxSelectors.lessonExtrasUrl)(state.progress,state.progress.currentLessonId),isLessonExtras:state.progress.isLessonExtras,currentPageNumber:state.progress.currentPageNumber,currentLevelId:state.progress.currentLevelId}}),(function(dispatch){return{navigateToLevelId:function navigateToLevelId(levelId){dispatch((0,_progressRedux.navigateToLevelId)(levelId))}}}))(LessonProgress)},"./src/legacySharedComponents/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/progress/BubbleBadge.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AssessmentBadge=AssessmentBadge,exports.BadgeType=void 0,exports.KeepWorkingBadge=KeepWorkingBadge,exports.default=BubbleBadge;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_utils=__webpack_require__("./src/utils.js"),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BadgeType=exports.BadgeType=(0,_utils.makeEnum)("assessment","keepWorking");function BubbleBadge(_ref){var badgeType=_ref.badgeType,bubbleSize=_ref.bubbleSize,bubbleShape=_ref.bubbleShape;return[_BubbleFactory.BubbleSize.full,_BubbleFactory.BubbleSize.letter].includes(bubbleSize)?badgeType===BadgeType.assessment?AssessmentBubbleBadge(bubbleShape):badgeType===BadgeType.keepWorking?KeepWorkingBubbleBadge(bubbleSize):null:null}function AssessmentBubbleBadge(bubbleShape){var bubblePositioning=bubbleShape===_BubbleFactory.BubbleShape.diamond?styles.diamondBubblePosition:styles.bubblePosition;return _react.default.createElement("div",{style:bubblePositioning},_react.default.createElement(AssessmentBadge,null))}function KeepWorkingBubbleBadge(bubbleSize){var isSmall=bubbleSize===_BubbleFactory.BubbleSize.letter,bubblePositioning=isSmall?styles.keepWorkingSmallBadgePosition:styles.keepWorkingBadgePosition;return _react.default.createElement("div",{style:bubblePositioning},_react.default.createElement(KeepWorkingBadge,{isSmall}))}function KeepWorkingBadge(_ref2){var isSmall=_ref2.isSmall,style=_ref2.style,badgeSize=isSmall?styles.keepWorkingBadgeSmallSize:styles.keepWorkingBadgeFullSize;return _react.default.createElement("div",{style:_objectSpread(_objectSpread(_objectSpread({},styles.keepWorkingBadge),badgeSize),style)})}function AssessmentBadge(){return _react.default.createElement("span",{className:"fa-stack",style:styles.container},_react.default.createElement(_FontAwesome.default,{icon:"circle",className:"fa-stack-2x",style:styles.purple}),_react.default.createElement(_FontAwesome.default,{icon:"circle-thin",className:"fa-stack-2x",style:styles.white}),_react.default.createElement(_FontAwesome.default,{icon:"check",className:"fa-stack-1x",style:styles.white}))}BubbleBadge.propTypes={badgeType:_propTypes.default.oneOf(Object.values(BadgeType)).isRequired,bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired,bubbleShape:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleShape)).isRequired},AssessmentBubbleBadge.propTypes={bubbleShape:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleShape)).isRequired},KeepWorkingBubbleBadge.propTypes={bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired},KeepWorkingBadge.propTypes={isSmall:_propTypes.default.bool,style:_propTypes.default.object},AssessmentBadge.propTypes={hasWhiteBorder:_propTypes.default.bool,style:_propTypes.default.object};var styles={container:{fontSize:10},bubblePosition:{position:"absolute",top:-7,right:-7},diamondBubblePosition:{position:"absolute",top:-13,right:-17},purple:{color:_color.default.purple},white:{color:_color.default.white},keepWorkingSmallBadgePosition:{position:"absolute",top:-2,right:-2},keepWorkingBadgePosition:{position:"absolute",top:0,right:-2},keepWorkingBadge:{borderRadius:"50%",backgroundColor:_color.default.red},keepWorkingBadgeFullSize:{width:10,height:10},keepWorkingBadgeSmallSize:{width:7,height:7}}},"./src/templates/progress/LessonExtrasFlagIcon.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var LessonExtrasFlagIcon=function(_React$PureComponent){function LessonExtrasFlagIcon(){return _React$PureComponent.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LessonExtrasFlagIcon,_React$PureComponent),LessonExtrasFlagIcon.prototype.render=function render(){var _this$props=this.props,isPerfect=_this$props.isPerfect,isSelected=_this$props.isSelected,size=_this$props.size,sizeStyle=_objectSpread(_objectSpread({},styles.smallStack),{},{fontSize:size}),colorStyle=_objectSpread(_objectSpread(_objectSpread({},styles.default),isSelected&&styles.selected),isPerfect&&styles.perfect);return _react.default.createElement("span",{className:"fa-stack fa-1x",style:sizeStyle},_react.default.createElement("i",{className:"fa fa-flag fa-stack-1x fa-inverse"}),_react.default.createElement("i",{className:"fa fa-flag-checkered fa-stack-1x",style:colorStyle}))},LessonExtrasFlagIcon}(_react.default.PureComponent);_defineProperty(LessonExtrasFlagIcon,"propTypes",{isPerfect:_propTypes.default.bool,isSelected:_propTypes.default.bool,size:_propTypes.default.number});exports.default=(0,_radium.default)(LessonExtrasFlagIcon);var styles={default:{color:_color.default.lighter_gray,":hover":{color:_color.default.orange}},selected:{color:_color.default.charcoal},perfect:{color:_color.default.level_perfect},smallStack:{width:"1em",height:"1.1em",lineHeight:"1em"}};module.exports=exports.default},"./src/templates/progress/LessonExtrasProgressBubble.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_queryString=_interopRequireDefault(__webpack_require__("./node_modules/query-string/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_utils=__webpack_require__("./src/utils.js"),_LessonExtrasFlagIcon=_interopRequireDefault(__webpack_require__("./src/templates/progress/LessonExtrasFlagIcon.jsx")),_TooltipWithIcon=_interopRequireDefault(__webpack_require__("./src/templates/progress/TooltipWithIcon.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function LessonExtrasProgressBubble(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LessonExtrasProgressBubble,_Component);var _proto=LessonExtrasProgressBubble.prototype;return _proto.getUrl=function getUrl(){var url=this.props.lessonExtrasUrl,queryParams=_queryString.default.parse((0,_utils.currentLocation)().search);return delete queryParams.id,Object.keys(queryParams).length>0&&(url="".concat(url,"?").concat(_queryString.default.stringify(queryParams))),url},_proto.render=function render(){var _this$props=this.props,isPerfect=_this$props.isPerfect,isSelected=_this$props.isSelected,tooltipId=_lodash.default.uniqueId();return _react.default.createElement("a",{href:this.getUrl(),"data-tip":!0,"data-for":tooltipId,"aria-describedby":tooltipId,title:_locale.default.stageExtras()},_react.default.createElement(_LessonExtrasFlagIcon.default,{isPerfect,isSelected,size:isSelected?24:16}),_react.default.createElement(_TooltipWithIcon.default,{tooltipId,icon:"flag-checkered",text:_locale.default.stageExtras()}))},LessonExtrasProgressBubble}(_react.Component),"propTypes",{lessonExtrasUrl:_propTypes.default.string.isRequired,isPerfect:_propTypes.default.bool,isSelected:_propTypes.default.bool}),module.exports=exports.default},"./src/templates/progress/ProgressBubble.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_types=__webpack_require__("./src/templates/feedback/types.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_BubbleBadge=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/BubbleBadge.jsx")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBubble=exports.default=function(_React$Component){function ProgressBubble(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"onClickLevel",(function(){_this.props.onClick&&_this.props.onClick(_this.props.level)})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBubble,_React$Component);var _proto=ProgressBubble.prototype;return _proto.isClickable=function isClickable(){var _this$props=this.props,disabled=_this$props.disabled,level=_this$props.level,onClick=_this$props.onClick;return!(disabled||!level.url&&!onClick)},_proto.getUrl=function getUrl(){var _this$props2=this.props,onClick=_this$props2.onClick,level=_this$props2.level,selectedSectionId=_this$props2.selectedSectionId,selectedStudentId=_this$props2.selectedStudentId;return onClick?null:(0,_BubbleFactory.getBubbleUrl)(level.url,selectedStudentId,selectedSectionId,!0)},_proto.renderBubbleBadge=function renderBubbleBadge(bubbleShape,bubbleSize){var _this$props3=this.props,level=_this$props3.level,smallBubble=_this$props3.smallBubble,hideAssessmentBadge=_this$props3.hideAssessmentBadge,hasKeepWorkingFeedback=level.teacherFeedbackReviewState===_types.ReviewStates.keepWorking;if(((0,_progressHelpers.isLevelAssessment)(level)&&!hideAssessmentBadge||hasKeepWorkingFeedback)&&!smallBubble)return _react.default.createElement(_BubbleBadge.default,{badgeType:hasKeepWorkingFeedback?_BubbleBadge.BadgeType.keepWorking:_BubbleBadge.BadgeType.assessment,bubbleSize,bubbleShape})},_proto.createBubbleElement=function createBubbleElement(){var _this$props4=this.props,level=_this$props4.level,smallBubble=_this$props4.smallBubble,hideToolTips=_this$props4.hideToolTips,bubbleSize=smallBubble?_BubbleFactory.BubbleSize.dot:_BubbleFactory.BubbleSize.full,content=(0,_BubbleFactory.getBubbleContent)(level.isLocked,level.isUnplugged,level.bonus,level.paired,level.bubbleText||level.letter||level.levelNumber,bubbleSize),bubbleShape=(0,_BubbleFactory.getBubbleShape)(level.isUnplugged&&!smallBubble,level.isConceptLevel),bubble=_react.default.createElement(_BubbleFactory.BasicBubble,{shape:bubbleShape,size:bubbleSize,progressStyle:(0,_progressStyles.levelProgressStyle)(level.status,level.kind),classNames:(0,_BubbleFactory.getBubbleClassNames)(this.isClickable())},content,this.renderBubbleBadge(bubbleShape,bubbleSize));return hideToolTips?bubble:_react.default.createElement(_BubbleFactory.BubbleTooltip,{level},bubble)},_proto.render=function render(){var level=this.props.level,levelID=level.bubbleText||level.letter||level.levelNumber,lessonName=this.props.lessonName,description=_locale.default.progressBubbleDescription({levelID});return lessonName&&(description=_locale.default.progressBubbleDescriptionWithLesson({levelID,lessonName})),this.isClickable()?_react.default.createElement(_BubbleFactory.BubbleLink,{url:this.getUrl(),onClick:this.onClickLevel,a11y_description:description},this.createBubbleElement()):this.createBubbleElement()},ProgressBubble}(_react.default.Component);_defineProperty(ProgressBubble,"propTypes",{level:_progressTypes.levelWithProgressType.isRequired,disabled:_propTypes.default.bool.isRequired,smallBubble:_propTypes.default.bool,selectedSectionId:_propTypes.default.number,selectedStudentId:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]),hideToolTips:_propTypes.default.bool,onClick:_propTypes.default.func,hideAssessmentBadge:_propTypes.default.bool,lessonName:_propTypes.default.string}),module.exports=exports.default},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/code-studio/components/progress/LessonProgress.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnpluggedAsNonCurrent=exports.UnpluggedAsCurrent=exports.LessonProgressExample=exports.LessonMasteryTrophy=exports.LessonExtrasNotStarted=exports.LessonExtrasCurrentLevelNotStarted=exports.LessonExtrasCurrentLevelCompleted=exports.LessonExtrasCompleted=exports.LessonEmptyTrophy=exports.Lesson67PercentTrophy=exports.Lesson20PercentTrophy=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_constants=__webpack_require__("./src/constants.js"),_lessonLockRedux=_interopRequireDefault(__webpack_require__("./src/code-studio/lessonLockRedux.js")),_progressRedux=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/code-studio/progressRedux.ts")),_LessonProgress=_interopRequireDefault(__webpack_require__("./src/code-studio/components/progress/LessonProgress.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var activityPuzzle={ids:["123"],activeId:"123",position:1,kind:"puzzle",icon:"",title:1,url:"http://studio.code.org/s/course1/lessons/3/levels/2",freePlay:!1,is_concept_level:!1},conceptPuzzle={ids:["5086"],activeId:"5086",position:2,kind:"puzzle",icon:"fa-file-text",title:2,url:"http://studio.code.org/s/csp1-2019/lessons/2/levels/1",freePlay:!1,progression:"Lesson Vocabulary & Resources",is_concept_level:!0},assessment1={ids:["2441"],activeId:"2441",position:3,kind:"assessment",icon:"fa-check-square-o",title:3,url:"http://studio.code.org/s/csp1-2019/lessons/2/levels/3",freePlay:!1,progression:"Check Your Understanding"},unplugged={ids:["2093"],activeId:"2093",is_concept_level:!1,kind:"unplugged",isUnplugged:!0,position:1,title:1,url:"http://studio.code.org/s/course1/lessons/1/levels/1"},bonus={ids:["100"],activeId:"100",title:1,bonus:!0},createStoreForLevels=(exports.default={component:_LessonProgress.default},function createStoreForLevels(levels,currentLevelIndex,showLessonExtras,onLessonExtras,bonusCompleted){var store=(0,_redux.createStore)((0,_redux.combineReducers)({progress:_progressRedux.default,lessonLock:_lessonLockRedux.default}));store.dispatch((0,_progressRedux.initProgress)({currentLevelId:currentLevelIndex?levels[currentLevelIndex].ids[0].toString():null,isLessonExtras:onLessonExtras,scriptName:"csp1",saveAnswersBeforeNavigation:!1,lessons:[{id:123,lesson_extras_level_url:showLessonExtras&&"fakeurl",levels}]}));var results={123:_constants.TestResults.ALL_PASS};return bonusCompleted&&(results[100]=_constants.TestResults.ALL_PASS),store.dispatch((0,_progressRedux.mergeResults)(results)),store.dispatch((0,_progressRedux.setLessonExtrasEnabled)(showLessonExtras)),store}),Template=function Template(args){return _react.default.createElement(_reactRedux.Provider,{store:args.store},_react.default.createElement(_LessonProgress.default,null))};(exports.LessonProgressExample=Template.bind({})).args={store:createStoreForLevels([activityPuzzle,conceptPuzzle,assessment1,{ids:["2444"],activeId:"2444",position:4,kind:"assessment",icon:"fa-check-square-o",title:4,url:"http://studio.code.org/s/csp1-2019/lessons/2/levels/4",freePlay:!1,progression:"Check Your Understanding"},{ids:["2744"],activeId:"2744",position:5,kind:"assessment",icon:"fa-check-square-o",title:5,url:"http://studio.code.org/s/csp1-2019/lessons/2/levels/5",freePlay:!1,progression:"Check Your Understanding"}],4)},(exports.UnpluggedAsCurrent=Template.bind({})).args={store:createStoreForLevels([unplugged,assessment1],0)},(exports.UnpluggedAsNonCurrent=Template.bind({})).args={store:createStoreForLevels([unplugged,assessment1],1)},(exports.LessonExtrasNotStarted=Template.bind({})).args={store:createStoreForLevels([activityPuzzle,conceptPuzzle],1,!0,!1)},(exports.LessonExtrasCompleted=Template.bind({})).args={store:createStoreForLevels([activityPuzzle,conceptPuzzle,bonus],1,!0,!1,!0)},(exports.LessonExtrasCurrentLevelNotStarted=Template.bind({})).args={store:createStoreForLevels([activityPuzzle,conceptPuzzle],null,!0,!0)},(exports.LessonExtrasCurrentLevelCompleted=Template.bind({})).args={store:createStoreForLevels([activityPuzzle,conceptPuzzle,bonus],null,!0,!0,!0)},(exports.LessonEmptyTrophy=Template.bind({})).args={store:createStoreForLevels([assessment1,assessment1],0,!1,!0)},(exports.Lesson20PercentTrophy=Template.bind({})).args={store:createStoreForLevels([activityPuzzle,assessment1,assessment1,assessment1,assessment1],0,!1,!0)},(exports.Lesson67PercentTrophy=Template.bind({})).args={store:createStoreForLevels([activityPuzzle,activityPuzzle,assessment1],0,!1,!0)},(exports.LessonMasteryTrophy=Template.bind({})).args={store:createStoreForLevels([activityPuzzle,activityPuzzle,activityPuzzle],0,!1,!0)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,