(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[9657],{"./src/templates/lessonOverview/LessonStandards.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.styles=exports.default=exports.ExpandMode=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_lessonPlanShapes=__webpack_require__("./src/templates/lessonOverview/lessonPlanShapes.jsx");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var styles=exports.styles={frameworkName:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{color:_color.default.dark_charcoal}),categoryShortcode:_objectSpread(_objectSpread({},_fontConstants.default["main-font-bold"]),{},{color:_color.default.link_color,":hover":{textDecoration:"underline"}}),standardShortcode:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{color:_color.default.dark_charcoal}),summary:{padding:3},standard:{padding:3}},ExpandMode=exports.ExpandMode={NONE:"none",ALL:"all"},expandModeShape=_propTypes.default.oneOf([ExpandMode.NONE,ExpandMode.ALL]);function getChildExpandMode(parentExpandMode,index){switch(parentExpandMode){case ExpandMode.ALL:return ExpandMode.ALL;case ExpandMode.NONE:return ExpandMode.NONE}}function getDetailsOpen(expandMode){return expandMode===ExpandMode.ALL}(exports.default=function(_PureComponent){function LessonStandards(){return _PureComponent.apply(this,arguments)||this}return _inheritsLoose(LessonStandards,_PureComponent),LessonStandards.prototype.render=function render(){var _this=this,standards=this.props.standards,standardsByFramework=(0,_lodash.default)(standards).orderBy("frameworkName").groupBy("frameworkName").value();return _react.default.createElement("div",null,Object.keys(standardsByFramework).map((function(frameworkName,index){var standards=standardsByFramework[frameworkName],expandMode=getChildExpandMode(_this.props.expandMode);return _react.default.createElement(Framework,{name:frameworkName,key:frameworkName,standards,expandMode})})))},LessonStandards}(_react.PureComponent)).propTypes={standards:_propTypes.default.arrayOf(_lessonPlanShapes.standardShape).isRequired,expandMode:expandModeShape};var Framework=function(_PureComponent2){function Framework(){return _PureComponent2.apply(this,arguments)||this}return _inheritsLoose(Framework,_PureComponent2),Framework.prototype.render=function render(){var _this2=this,_this$props=this.props,name=_this$props.name,standards=_this$props.standards,hasParentCategories=!!standards[0].parentCategoryShortcode,CategoryClass=hasParentCategories?ParentCategory:Category,categoryKey=hasParentCategories?"parentCategoryShortcode":"categoryShortcode",standardsByCategory=(0,_lodash.default)(standards).orderBy(categoryKey,"shortcode").groupBy(categoryKey).value();return _react.default.createElement("div",null,_react.default.createElement("span",{style:styles.frameworkName},name),_react.default.createElement("ul",{style:{listStyleType:"none"}},Object.keys(standardsByCategory).map((function(categoryShortcode,index){var standards=standardsByCategory[categoryShortcode],expandMode=getChildExpandMode(_this2.props.expandMode);return _react.default.createElement(CategoryClass,{key:categoryShortcode,shortcode:categoryShortcode,standards,expandMode})}))))},Framework}(_react.PureComponent);Framework.propTypes={name:_propTypes.default.string.isRequired,standards:_propTypes.default.arrayOf(_lessonPlanShapes.standardShape).isRequired,expandMode:expandModeShape};var UnconnectedParentCategory=function(_PureComponent3){function UnconnectedParentCategory(){return _PureComponent3.apply(this,arguments)||this}return _inheritsLoose(UnconnectedParentCategory,_PureComponent3),UnconnectedParentCategory.prototype.render=function render(){var _this3=this,_this$props2=this.props,shortcode=_this$props2.shortcode,standards=_this$props2.standards,description=standards[0].parentCategoryDescription,standardsByCategory=(0,_lodash.default)(standards).orderBy("categoryShortcode","shortcode").groupBy("categoryShortcode").value(),isOpen=getDetailsOpen(this.props.expandMode);return _react.default.createElement("li",{key:shortcode},_react.default.createElement("details",{open:isOpen},_react.default.createElement("summary",{style:styles.summary},_react.default.createElement("span",{style:styles.categoryShortcode},shortcode)," - ",description),_react.default.createElement("ul",{style:{listStyleType:"none"}},Object.keys(standardsByCategory).map((function(categoryShortcode,index){var standards=standardsByCategory[categoryShortcode],expandMode=getChildExpandMode(_this3.props.expandMode);return _react.default.createElement(Category,{key:categoryShortcode,shortcode:categoryShortcode,standards,expandMode})})))))},UnconnectedParentCategory}(_react.PureComponent);UnconnectedParentCategory.propTypes={shortcode:_propTypes.default.string.isRequired,standards:_propTypes.default.arrayOf(_lessonPlanShapes.standardShape).isRequired,expandMode:expandModeShape};var ParentCategory=(0,_radium.default)(UnconnectedParentCategory),UnconnectedCategory=function(_PureComponent4){function UnconnectedCategory(){return _PureComponent4.apply(this,arguments)||this}return _inheritsLoose(UnconnectedCategory,_PureComponent4),UnconnectedCategory.prototype.render=function render(){var _this$props3=this.props,shortcode=_this$props3.shortcode,standards=_this$props3.standards,description=standards[0].categoryDescription,isOpen=getDetailsOpen(this.props.expandMode);return _react.default.createElement("li",{key:shortcode},_react.default.createElement("details",{open:isOpen},_react.default.createElement("summary",{style:styles.summary},_react.default.createElement("span",{style:styles.categoryShortcode},shortcode)," - ",description),_react.default.createElement("ul",null,standards.map((function(standard){return _react.default.createElement(Standard,{key:standard.shortcode,standard})})))))},UnconnectedCategory}(_react.PureComponent);UnconnectedCategory.propTypes={shortcode:_propTypes.default.string.isRequired,standards:_propTypes.default.arrayOf(_lessonPlanShapes.standardShape).isRequired,expandMode:expandModeShape};var Category=(0,_radium.default)(UnconnectedCategory),Standard=function(_PureComponent5){function Standard(){return _PureComponent5.apply(this,arguments)||this}return _inheritsLoose(Standard,_PureComponent5),Standard.prototype.render=function render(){var standard=this.props.standard;return _react.default.createElement("li",{key:standard.shortcode,style:styles.standard},_react.default.createElement("span",{style:styles.standardShortcode},standard.shortcode)," - ",standard.description)},Standard}(_react.PureComponent);Standard.propTypes={standard:_lessonPlanShapes.standardShape.isRequired}},"./src/templates/lessonOverview/lessonPlanShapes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tipShape=exports.studentLessonShape=exports.standardShape=exports.scriptLevelShape=exports.navigationLessonShape=exports.levelShape=exports.lessonShape=exports.activityShape=exports.activitySectionShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));var levelShape=exports.levelShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,icon:_propTypes.default.string,isUnplugged:_propTypes.default.bool,isConceptLevel:_propTypes.default.bool,conceptDifficulty:_propTypes.default.string,concepts:_propTypes.default.string,skin:_propTypes.default.string,videoKey:_propTypes.default.string}),scriptLevelShape=exports.scriptLevelShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,activeId:_propTypes.default.string.isRequired,levels:_propTypes.default.arrayOf(levelShape).isRequired,expand:_propTypes.default.bool,kind:_propTypes.default.string,bonus:_propTypes.default.bool,assessment:_propTypes.default.bool,challenge:_propTypes.default.bool,isViewingAsInstructorInTraining:_propTypes.default.bool}),tipShape=exports.tipShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,type:_propTypes.default.string.isRequired,markdown:_propTypes.default.string.isRequired}),activitySectionShape=exports.activitySectionShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,duration:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.oneOf([""])]),remarks:_propTypes.default.bool,progressionName:_propTypes.default.string,scriptLevels:_propTypes.default.arrayOf(scriptLevelShape).isRequired,text:_propTypes.default.string.isRequired,tips:_propTypes.default.arrayOf(tipShape).isRequired});exports.activityShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string,position:_propTypes.default.number.isRequired,duration:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.oneOf([""])]).isRequired,activitySections:_propTypes.default.arrayOf(activitySectionShape)}),exports.lessonShape=_propTypes.default.shape({unit:_propTypes.default.shape({lessonGroups:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string.isRequired,userFacing:_propTypes.default.bool.isRequired,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,link:_propTypes.default.string.isRequired})).isRequired})).isRequired}).isRequired,id:_propTypes.default.number.isRequired,position:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,duration:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,overview:_propTypes.default.string.isRequired,purpose:_propTypes.default.string.isRequired,preparation:_propTypes.default.string.isRequired,resources:_propTypes.default.object,vocabularies:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,programmingExpressions:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,objectives:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,assessmentOpportunities:_propTypes.default.string,lessonPlanPdfUrl:_propTypes.default.string,courseVersionStandardsUrl:_propTypes.default.string}),exports.studentLessonShape=_propTypes.default.shape({unit:_propTypes.default.shape({lessonGroups:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string.isRequired,userFacing:_propTypes.default.bool.isRequired,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,link:_propTypes.default.string.isRequired})).isRequired})).isRequired}).isRequired,id:_propTypes.default.number.isRequired,position:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string.isRequired,overview:_propTypes.default.string.isRequired,resources:_propTypes.default.arrayOf(_propTypes.default.object),vocabularies:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,programmingExpressions:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,studentLessonPlanPdfUrl:_propTypes.default.string}),exports.navigationLessonShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,unit:_propTypes.default.shape({lessonGroups:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string.isRequired,userFacing:_propTypes.default.bool.isRequired,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,link:_propTypes.default.string.isRequired})).isRequired})).isRequired}).isRequired}),exports.standardShape=_propTypes.default.shape({frameworkName:_propTypes.default.string.isRequired,parentCategoryShortcode:_propTypes.default.string,parentCategoryDescription:_propTypes.default.string,categoryShortcode:_propTypes.default.string.isRequired,categoryDescription:_propTypes.default.string.isRequired,shortcode:_propTypes.default.string.isRequired,description:_propTypes.default.string.isRequired})},"./test/unit/templates/lessonOverview/sampleStandardsData.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.cstaStandards=exports.cspStandards=void 0;exports.cspStandards=[{frameworkName:"CSP Conceptual Framework",parentCategoryShortcode:"DAT-1",parentCategoryDescription:"The way that the computer represents data is different from the way that the data are interpreted and displayed for the user. Programs are used to translate data into a representation that is more easily understood by people.",categoryShortcode:"DAT-1.A",categoryDescription:"Explain how data can be represented using bits.",shortcode:"DAT-1.A.2",description:"Computing devices represent data digitally, meaning that the lowest-level components of any value are bits."},{frameworkName:"CSP Conceptual Framework",parentCategoryShortcode:"DAT-1",parentCategoryDescription:"The way that the computer represents data is different from the way that the data are interpreted and displayed for the user. Programs are used to translate data into a representation that is more easily understood by people.",categoryShortcode:"DAT-1.A",categoryDescription:"Explain how data can be represented using bits.",shortcode:"DAT-1.A.4",description:"A byte is 8 bits. "},{frameworkName:"CSP Conceptual Framework",parentCategoryShortcode:"DAT-1",parentCategoryDescription:"The way that the computer represents data is different from the way that the data are interpreted and displayed for the user. Programs are used to translate data into a representation that is more easily understood by people.",categoryShortcode:"DAT-1.C",categoryDescription:"For binary numbers:\na. Calculate the binary (base 2) equivalent of a positive integer (base 10) and vice versa. \nb. Compare and order binary numbers.",shortcode:"DAT-1.C.1",description:"Number bases, including binary and decimal, are used to represent data."},{frameworkName:"CSP Conceptual Framework",parentCategoryShortcode:"DAT-1",parentCategoryDescription:"The way that the computer represents data is different from the way that the data are interpreted and displayed for the user. Programs are used to translate data into a representation that is more easily understood by people.",categoryShortcode:"DAT-1.C",categoryDescription:"For binary numbers:\na. Calculate the binary (base 2) equivalent of a positive integer (base 10) and vice versa. \nb. Compare and order binary numbers.",shortcode:"DAT-1.C.2",description:"Binary (base 2) uses only combinations of the digits zero and one."}],exports.cstaStandards=[{frameworkName:"CSTA K-12 Computer Science Standards (2017)",parentCategoryShortcode:null,parentCategoryDescription:null,categoryShortcode:"AP",categoryDescription:"Algorithms & Programming",shortcode:"1B-AP-09",description:"Create programs that use variables to store and modify data."},{frameworkName:"CSTA K-12 Computer Science Standards (2017)",parentCategoryShortcode:null,parentCategoryDescription:null,categoryShortcode:"DA",categoryDescription:"Data & Analysis",shortcode:"3A-DA-09",description:"Translate between different bit representations of real-world phenomena, such as characters, numbers, and images."}]},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/templates/lessonOverview/LessonStandards.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithoutParentCategory=exports.WithParentCategory=exports.WithDifferentFrameworks=exports.ExpandAll=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_sampleStandardsData=__webpack_require__("./test/unit/templates/lessonOverview/sampleStandardsData.js"),_LessonStandards=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/lessonOverview/LessonStandards.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}exports.default={component:_LessonStandards.default},exports.WithParentCategory=function WithParentCategory(){return _react.default.createElement(_LessonStandards.default,{standards:[_sampleStandardsData.cspStandards[0]]})},exports.WithoutParentCategory=function WithoutParentCategory(){return _react.default.createElement(_LessonStandards.default,{standards:[_sampleStandardsData.cstaStandards[0]]})},exports.WithDifferentFrameworks=function WithDifferentFrameworks(){return _react.default.createElement(_LessonStandards.default,{standards:_sampleStandardsData.cspStandards.concat(_sampleStandardsData.cstaStandards)})},exports.ExpandAll=function ExpandAll(){return _react.default.createElement(_LessonStandards.default,{standards:_sampleStandardsData.cspStandards.concat(_sampleStandardsData.cstaStandards),expandMode:_LessonStandards.ExpandMode.ALL})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,