(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[7240],{"./src/code-studio/isRtlRedux.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function locale(){var state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RTL)return action.isRtl;return state},exports.isRtlFromDOM=isRtlFromDOM,exports.setRtlFromDOM=exports.setRtl=void 0;var SET_RTL="isRtl/SET_RTL",setRtl=exports.setRtl=function setRtl(isRtl){return{type:SET_RTL,isRtl}};exports.setRtlFromDOM=function setRtlFromDOM(){return setRtl(isRtlFromDOM())};function isRtlFromDOM(){var head=document.getElementsByTagName("head")[0];if(head&&head.parentElement){var dir=head.parentElement.getAttribute("dir");return!(!dir||"rtl"!==dir.toLowerCase())}return!1}},"./src/templates/ToggleButton.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_ToggleButtonStyles=_interopRequireDefault(__webpack_require__("./src/templates/ToggleButtonStyles.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var ToggleButton=function(_Component){function ToggleButton(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ToggleButton,_Component);var _proto=ToggleButton.prototype;return _proto.render=function render(){return _react.default.createElement("button",{type:"button",id:this.props.id,style:this.getStyle(),className:"no-outline "+(this.props.className||""),title:this.props.title,onClick:this.props.onClick},this.props.children)},_proto.getStyle=function getStyle(){return Object.assign({},{":focus":{outline:"none"}},_ToggleButtonStyles.default.buttonStyle,_ToggleButtonStyles.default.toggleButtonStyle,this.props.active?_ToggleButtonStyles.default.activeStyle:_ToggleButtonStyles.default.inactiveStyle,this.props.active&&this.props.activeColor&&{backgroundColor:this.props.activeColor},this.props.first?_ToggleButtonStyles.default.firstButtonStyle:null,this.props.last?_ToggleButtonStyles.default.lastButtonStyle:null,this.props.useRebrandedLikeStyles?_ToggleButtonStyles.default.rebrandedLikeButtonStyle:null,this.props.style)},ToggleButton}(_react.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(ToggleButton,"propTypes",{id:_propTypes.default.string,className:_propTypes.default.string,active:_propTypes.default.bool.isRequired,first:_propTypes.default.bool,last:_propTypes.default.bool,activeColor:_propTypes.default.string,title:_propTypes.default.string,style:_propTypes.default.object,onClick:_propTypes.default.func,children:_propTypes.default.node,useRebrandedLikeStyles:_propTypes.default.bool});exports.default=(0,_radium.default)(ToggleButton);module.exports=exports.default},"./src/templates/ToggleButtonStyles.js":(module,__unused_webpack_exports,__webpack_require__)=>{var color=__webpack_require__("./src/util/color.js");module.exports={buttonStyle:{display:"inline-block",verticalAlign:"top",borderStyle:"solid",borderColor:color.light_gray,borderTopWidth:1,borderRightWidth:1,borderBottomWidth:1,borderLeftWidth:1,margin:"0 0 8px 0",padding:"2px 6px",fontSize:14},toggleButtonStyle:{borderRightWidth:"0 !important",borderTopLeftRadius:0,borderTopRightRadius:0,borderBottomRightRadius:0,borderBottomLeftRadius:0},firstButtonStyle:{borderBottomLeftRadius:4,borderTopLeftRadius:4},lastButtonStyle:{borderRightWidth:"1px !important",borderBottomRightRadius:4,borderTopRightRadius:4},activeStyle:{backgroundColor:color.orange,color:color.white,boxShadow:"2px 2px 5px "+color.shadow+" inset"},rebrandedLikeButtonStyle:{boxShadow:"none",padding:"7px 16px",fontWeight:600,fontSize:"0.875rem",lineHeight:"unset"},inactiveStyle:{backgroundColor:color.white,color:color.light_black,boxShadow:"0px 1px 5px "+color.shadow},hiddenStyle:{display:"none"},iconStyle:{margin:"0 0.3em"}}},"./src/templates/ToggleGroup.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedToggleGroup=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_ToggleButton=_interopRequireDefault(__webpack_require__("./src/templates/ToggleButton.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var ToggleGroup=function(_Component){function ToggleGroup(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ToggleGroup,_Component);var _proto=ToggleGroup.prototype;return _proto.setSelected=function setSelected(selected){this.props.onChange(selected)},_proto.render=function render(){var _this$props=this.props,isRtl=_this$props.isRtl,flex=_this$props.flex,spanStyle=isRtl?styles.flexButtonReverse:flex&&styles.flexButtons;return _react.default.createElement("span",{style:spanStyle},this.renderChildren())},_proto.renderChildren=function renderChildren(){var _this=this,children=_react.default.Children.toArray(this.props.children).filter((function(child){return!!child}));return children.map((function(child,index){var isSelected=child.props.value===_this.props.selected;return _react.default.createElement(_ToggleButton.default,{id:child.props.id,className:child.props.className,key:child.key,active:isSelected,first:0===index,last:index===children.length-1,activeColor:_this.props.activeColor,title:child.props.title,style:child.props.style,useRebrandedLikeStyles:_this.props.useRebrandedLikeStyles,onClick:isSelected?void 0:_this.setSelected.bind(_this,child.props.value)},child.props.children)}))},ToggleGroup}(_react.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(ToggleGroup,"propTypes",{selected:_propTypes.default.string,activeColor:_propTypes.default.string,useRebrandedLikeStyles:_propTypes.default.bool,onChange:_propTypes.default.func.isRequired,flex:_propTypes.default.bool,children:function children(props,propName,componentName){var error,prop=props[propName];return _react.default.Children.count(prop)<1&&(error=new Error("".concat(componentName," must have at least one child button."))),_react.default.Children.forEach(prop,(function(child){child&&"button"!==child.type&&(error=new Error("".concat(componentName," should only have buttons as ")+"child elements."))})),error},isRtl:_propTypes.default.bool});var styles={flexButtons:{display:"flex"},flexButtonReverse:{display:"flex",flexDirection:"row-reverse"}};exports.UnconnectedToggleGroup=ToggleGroup,exports.default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))(ToggleGroup)},"./src/templates/sectionProgress/SectionProgressToggle.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedSectionProgressToggle=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_AnalyticsConstants=__webpack_require__("./src/metrics/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/metrics/AnalyticsReporter.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/metrics/firehose.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_ToggleGroup=_interopRequireDefault(__webpack_require__("./src/templates/ToggleGroup.jsx")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_sectionProgressRedux=__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SectionProgressToggle=function(_React$Component){function SectionProgressToggle(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"onChange",(function(selectedToggle){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"view_change_toggle",data_json:JSON.stringify({section_id:_this.props.sectionId,old_view:_this.props.currentView,new_view:selectedToggle,script_id:_this.props.scriptId})},{includeUserId:!0}),_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_TOGGLE,{sectionId:_this.props.sectionId,unitId:_this.props.scriptId,newView:selectedToggle}),_this.props.setCurrentView(selectedToggle)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SectionProgressToggle,_React$Component),SectionProgressToggle.prototype.render=function render(){var _this$props=this.props,currentView=_this$props.currentView,showStandardsToggle=_this$props.showStandardsToggle;return _react.default.createElement(_ToggleGroup.default,{selected:currentView,activeColor:_color.default.teal,onChange:this.onChange,style:styles.toggleGroup},_react.default.createElement("button",{type:"button",value:_sectionProgressConstants.ViewType.SUMMARY,style:styles.toggleButton},_react.default.createElement("div",null,_locale.default.lessons())),_react.default.createElement("button",{type:"button",id:"uitest-toggle-detail-view",value:_sectionProgressConstants.ViewType.DETAIL,style:styles.toggleButton},_react.default.createElement("div",null,_locale.default.levels())),showStandardsToggle&&_react.default.createElement("button",{type:"button",value:_sectionProgressConstants.ViewType.STANDARDS,style:styles.toggleButton,id:"uitest-standards-toggle"},_react.default.createElement("div",null,_locale.default.standards())))},SectionProgressToggle}(_react.default.Component);_defineProperty(SectionProgressToggle,"propTypes",{showStandardsToggle:_propTypes.default.bool,currentView:_propTypes.default.string.isRequired,setCurrentView:_propTypes.default.func.isRequired,sectionId:_propTypes.default.number,scriptId:_propTypes.default.number});var styles={toggleButton:{padding:"3px 20px",height:34,margin:"auto auto 10px auto"},toggleGroup:{minWidth:"fit-content"}};exports.UnconnectedSectionProgressToggle=SectionProgressToggle,exports.default=(0,_reactRedux.connect)((function(state){return{currentView:state.sectionProgress.currentView,sectionId:state.teacherSections.selectedSectionId,scriptId:state.unitSelection.scriptId}}),(function(dispatch){return{setCurrentView:function setCurrentView(viewType){dispatch((0,_sectionProgressRedux.setCurrentView)(viewType))}}}))(SectionProgressToggle)},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./src/templates/sectionProgress/SectionProgressToggle.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SummaryView=exports.StandardsView=exports.DetailsView=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_isRtlRedux=_interopRequireDefault(__webpack_require__("./src/code-studio/isRtlRedux.js")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_SectionProgressToggle=__webpack_require__("./src/templates/sectionProgress/SectionProgressToggle.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_SectionProgressToggle.UnconnectedSectionProgressToggle};var Template=function Template(args){var store=(0,_redux.createStore)((0,_redux.combineReducers)({isRtl:_isRtlRedux.default}));return _react.default.createElement(_reactRedux.Provider,{store},_react.default.createElement(_SectionProgressToggle.UnconnectedSectionProgressToggle,_extends({setCurrentView:function setCurrentView(){return console.log("Toggle view.")},scriptId:1},args)))};(exports.SummaryView=Template.bind({})).args={currentView:_sectionProgressConstants.ViewType.SUMMARY},(exports.DetailsView=Template.bind({})).args={currentView:_sectionProgressConstants.ViewType.DETAIL},(exports.StandardsView=Template.bind({})).args={currentView:_sectionProgressConstants.ViewType.STANDARDS,showStandardsToggle:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,