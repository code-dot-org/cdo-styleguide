(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[8404],{"./src/templates/MultiCheckboxSelector.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.styles=exports.default=void 0;var _react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_immutable=_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var styles={header:{color:_color.default.purple,fontWeight:"normal",borderBottomWidth:1,borderBottomStyle:"solid",borderBottomColor:_color.default.purple},checkbox:{marginRight:10,marginTop:0},selectAllCheckbox:{position:"relative",bottom:4},list:{marginLeft:0},listItem:{listStyleType:"none",display:"flex",alignItems:"center",marginBottom:10}};exports.styles=styles;var MultiCheckboxSelector=function(_Component){function MultiCheckboxSelector(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_assertThisInitialized(_this=_Component.call.apply(_Component,[this].concat(args))||this),"areAllSelected",(function(){return _immutable.default.Set(_this.props.selected).isSuperset(_this.props.items)})),_defineProperty(_assertThisInitialized(_this),"toggleSelectAll",(function(){_this.areAllSelected()?_this.props.onChange([]):_this.props.onChange(_this.props.items.slice())})),_defineProperty(_assertThisInitialized(_this),"toggle",(function(item){if(_this.props.checkById){var selectedItems=[];selectedItems=_lodash.default.map(_this.props.selected,"id").includes(item.id)?_lodash.default.remove(_this.props.selected,(function(selection){return selection.id!==item.id})):_lodash.default.concat(_this.props.selected,item),_this.props.onChange(selectedItems,item)}else{var index=_this.props.selected.indexOf(item);index>=0?_this.props.onChange([].concat(_toConsumableArray(_this.props.selected.slice(0,index)),_toConsumableArray(_this.props.selected.slice(index+1)))):_this.props.onChange(_this.props.selected.concat([item]))}})),_defineProperty(_assertThisInitialized(_this),"checked",(function(item){return _this.props.checkById?_lodash.default.map(_this.props.selected,"id").includes(item.id):_this.props.selected.includes(item)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MultiCheckboxSelector,_Component),MultiCheckboxSelector.prototype.render=function render(){var _this2=this;return _react.default.createElement("div",{style:this.props.style},!this.props.noHeader&&_react.default.createElement("h2",{style:styles.header},_react.default.createElement("input",{type:"checkbox",style:_objectSpread(_objectSpread({},styles.checkbox),styles.selectAllCheckbox),checked:this.areAllSelected(),onChange:this.toggleSelectAll,disabled:this.props.disabled}),this.props.header),_react.default.createElement("ul",{style:styles.list},this.props.items.map((function(item,index){return _react.default.createElement("li",{style:styles.listItem,key:index},_react.default.createElement("input",{style:styles.checkbox,type:"checkbox",checked:_this2.checked(item),onChange:function onChange(){return _this2.toggle(item)},disabled:_this2.props.disabled}),_react.default.cloneElement(_this2.props.children,_defineProperty({},_this2.props.itemPropName,item)))}))))},MultiCheckboxSelector}(_react.Component);_defineProperty(MultiCheckboxSelector,"propTypes",{header:_propTypes.default.node,selected:_propTypes.default.array,items:_propTypes.default.array,onChange:_propTypes.default.func,children:_propTypes.default.element,itemPropName:_propTypes.default.string,style:_propTypes.default.any,disabled:_propTypes.default.bool,noHeader:_propTypes.default.bool,checkById:_propTypes.default.bool}),_defineProperty(MultiCheckboxSelector,"defaultProps",{itemPropName:"item",selected:[],items:[],onChange:function onChange(){},disabled:!1});var _default=MultiCheckboxSelector;exports.default=_default},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_500:"#94979B",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/templates/MultiCheckboxSelector.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithSomeSelected=exports.WithComplexItemComponent=exports.WithAllSelected=exports.NoHeaderMultiCheckboxSelector=exports.DisabledMultiCheckboxSelector=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_MultiCheckboxSelector=_interopRequireDefault(__webpack_require__("./src/templates/MultiCheckboxSelector.jsx")),_addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _default={component:_MultiCheckboxSelector.default};exports.default=_default;var ItemComponent=function ItemComponent(_ref){var item=_ref.item;return _react.default.createElement("strong",null,item)};ItemComponent.propTypes={item:_propTypes.default.string};var ComplexItemComponent=function ComplexItemComponent(_ref2){var style=_ref2.style,screen=_ref2.screen;return _react.default.createElement("div",{style},_react.default.createElement("h2",null,screen.name),_react.default.createElement("p",null,screen.id))};ComplexItemComponent.propTypes={style:_propTypes.default.object,screen:_propTypes.default.shape({id:_propTypes.default.string,name:_propTypes.default.string})};var ItemComponentTemplate=function ItemComponentTemplate(args){return _react.default.createElement(_MultiCheckboxSelector.default,args,_react.default.createElement(ItemComponent,null))},WithSomeSelected=ItemComponentTemplate.bind({});exports.WithSomeSelected=WithSomeSelected,WithSomeSelected.args={header:"Some Items",items:["one","two","three"],selected:["two"],onChange:(0,_addonActions.action)("onChange")};var WithAllSelected=ItemComponentTemplate.bind({});exports.WithAllSelected=WithAllSelected,WithAllSelected.args={header:"Some Items",items:["one","two","three"],selected:["one","two","three"],onChange:(0,_addonActions.action)("onChange")};var WithComplexItemComponent=function ComplexComponentTemplate(args){return _react.default.createElement(_MultiCheckboxSelector.default,args,_react.default.createElement(ComplexItemComponent,{style:{border:"1px solid black",padding:10}}))}.bind({});exports.WithComplexItemComponent=WithComplexItemComponent,WithComplexItemComponent.args={header:"Some Items",itemPropName:"screen",items:[{id:"one",name:"Item the First"},{id:"two",name:"Item the Second!"}],selected:[],onChange:(0,_addonActions.action)("onChange")};var DisabledMultiCheckboxSelector=ItemComponentTemplate.bind({});exports.DisabledMultiCheckboxSelector=DisabledMultiCheckboxSelector,DisabledMultiCheckboxSelector.args={header:"Some Items",items:["one","two","three"],selected:["two"],onChange:(0,_addonActions.action)("onChange"),disabled:!0};var NoHeaderMultiCheckboxSelector=ItemComponentTemplate.bind({});exports.NoHeaderMultiCheckboxSelector=NoHeaderMultiCheckboxSelector,NoHeaderMultiCheckboxSelector.args={noHeader:!0,items:["one","two","three"],selected:["two"],onChange:(0,_addonActions.action)("onChange")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,