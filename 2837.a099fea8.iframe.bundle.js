/*! For license information please see 2837.a099fea8.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[2837],{"./src/schoolInfo/SchoolInfoInterstitial.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_Button=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/Button.jsx")),_AnalyticsConstants=__webpack_require__("./src/metrics/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/metrics/AnalyticsReporter.js")),_mapbox=_interopRequireWildcard(__webpack_require__("./src/redux/mapbox.ts")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_SchoolInfoInputs=_interopRequireWildcard(__webpack_require__("./src/templates/SchoolInfoInputs.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var store=(0,_redux.createStore)((0,_redux.combineReducers)({mapbox:_mapbox.default})),SchoolInfoInterstitial=exports.default=function(_React$Component){function SchoolInfoInterstitial(props){var _this;_defineProperty(_this=_React$Component.call(this,props)||this,"validateSubmission",(function(){var _this$state=_this.state,country=_this$state.country,schoolType=_this$state.schoolType,schoolName=_this$state.schoolName,ncesSchoolId=_this$state.ncesSchoolId,errors={},isValid=!0;if(_this.isBlank(country))errors.country=!0,isValid=!1;else if("United States"===country)if(_this.isBlank(schoolType))errors.schoolType=!0,isValid=!1;else{["public","private","charter"].includes(schoolType)&&(_this.isBlank(ncesSchoolId)&&(errors.ncesSchoolId=!0,isValid=!1),"-1"===ncesSchoolId&&_this.isBlank(schoolName)&&(errors.schoolName=!0,isValid=!1))}return{errors,isValid}})),_defineProperty(_this,"handleSchoolInfoSubmit",(function(){var _this$validateSubmiss=_this.validateSubmission(),errors=_this$validateSubmiss.errors,isValid=_this$validateSubmiss.isValid;if(_this.setState({errors}),isValid){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.SCHOOL_INTERSTITIAL_SUBMIT,{hasNcesId:_this.state.ncesSchoolId&&"-1"!==_this.state.ncesSchoolId?"true":"false",attempt:_this.state.showSchoolInfoUnknownError?2:1},_AnalyticsConstants.PLATFORMS.BOTH);var schoolData=_this.buildSchoolData(),_this$props$scriptDat=_this.props.scriptData,formUrl=_this$props$scriptDat.formUrl,authTokenName=_this$props$scriptDat.authTokenName,authTokenValue=_this$props$scriptDat.authTokenValue;_jquery.default.post({url:formUrl+".json",dataType:"json",data:_objectSpread(_defineProperty({_method:"patch"},authTokenName,authTokenValue),schoolData)}).done((function(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.SCHOOL_INTERSTITIAL_SAVE_SUCCESS,{attempt:_this.state.showSchoolInfoUnknownError?2:1},_AnalyticsConstants.PLATFORMS.BOTH),_this.props.onClose()})).fail((function(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.SCHOOL_INTERSTITIAL_SAVE_FAILURE,{attempt:_this.state.showSchoolInfoUnknownError?2:1},_AnalyticsConstants.PLATFORMS.BOTH),_this.state.showSchoolInfoUnknownError?_this.props.onClose():_this.setState({showSchoolInfoUnknownError:!0})}))}})),_defineProperty(_this,"dismissSchoolInfoForm",(function(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.SCHOOL_INTERSTITIAL_DISMISS,{},_AnalyticsConstants.PLATFORMS.BOTH),_this.setState({isOpen:!1}),_this.props.onClose()})),_defineProperty(_this,"onCountryChange",(function(_,event){var newCountry=event?event.value:"";_this.setState({country:newCountry,ncesSchoolId:"",errors:{}})})),_defineProperty(_this,"onSchoolTypeChange",(function(event){var newType=event?event.target.value:"";_this.setState({schoolType:newType,ncesSchoolId:"",errors:{}})})),_defineProperty(_this,"onSchoolChange",(function(_,event){var newSchool=event?event.value:"",errors=_this.state.errors;"-1"===newSchool&&(errors={}),_this.setState({ncesSchoolId:newSchool,errors})})),_defineProperty(_this,"onSchoolNotFoundChange",(function(field,event){var newValue=event?event.target.value:"";_this.setState(_defineProperty(_defineProperty({},field,newValue),"errors",{}))}));var existingSchoolInfo=_this.props.scriptData.existingSchoolInfo,initialCountry=existingSchoolInfo.country||"";"US"===initialCountry&&(initialCountry="United States");var initialNcesSchoolId=existingSchoolInfo.school_id?existingSchoolInfo.school_id:"United States"===existingSchoolInfo.country&&_SchoolInfoInputs.SCHOOL_TYPES_HAVING_NCES_SEARCH.includes(existingSchoolInfo.school_type)&&(existingSchoolInfo.school_name||existingSchoolInfo.full_address)?"-1":"";return _this.state={country:initialCountry,schoolType:existingSchoolInfo.school_type||"",schoolName:existingSchoolInfo.school_name||"",schoolLocation:existingSchoolInfo.full_address||"",ncesSchoolId:initialNcesSchoolId,showSchoolInfoUnknownError:!1,errors:{},isOpen:!0},_this.props.scriptData.mapboxAccessToken&&store.dispatch((0,_mapbox.setMapboxAccessToken)(_this.props.scriptData.mapboxAccessToken)),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SchoolInfoInterstitial,_React$Component),SchoolInfoInterstitial.isSchoolInfoComplete=function isSchoolInfoComplete(state){return!!state.country&&("United States"!==state.country||(!!["homeschool","after school","organization","other"].includes(state.schoolType)||(!(!state.ncesSchoolId||"-1"===state.ncesSchoolId)||!!(state.country&&state.schoolType&&state.schoolName))))};var _proto=SchoolInfoInterstitial.prototype;return _proto.componentDidMount=function componentDidMount(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.SCHOOL_INTERSTITIAL_SHOW,{},_AnalyticsConstants.PLATFORMS.BOTH)},_proto.buildSchoolData=function buildSchoolData(){var _this$state2=this.state,country=_this$state2.country,schoolType=_this$state2.schoolType,ncesSchoolId=_this$state2.ncesSchoolId;return ncesSchoolId&&"-1"!==ncesSchoolId?{"user[school_info_attributes][school_id]":ncesSchoolId}:country&&schoolType?"United States"===country&&_SchoolInfoInputs.SCHOOL_TYPES_HAVING_NCES_SEARCH.includes(schoolType)&&""===ncesSchoolId?{"user[school_info_attributes][country]":country,"user[school_info_attributes][school_type]":schoolType,"user[school_info_attributes][school_id]":ncesSchoolId}:_SchoolInfoInputs.SCHOOL_TYPES_HAVING_NAMES.includes(schoolType)?{"user[school_info_attributes][country]":country,"user[school_info_attributes][school_type]":schoolType,"user[school_info_attributes][school_name]":this.state.schoolName,"user[school_info_attributes][full_address]":this.state.schoolLocation}:{"user[school_info_attributes][country]":country,"user[school_info_attributes][school_type]":schoolType,"user[school_info_attributes][full_address]":this.state.schoolLocation}:{"user[school_info_attributes][country]":country,"user[school_info_attributes][school_type]":schoolType}},_proto.isBlank=function isBlank(field){return!(field&&""!==field.trim())},_proto.render=function render(){var _this2=this,showErrors=Object.keys(this.state.errors).length>0,mapboxAccessToken=this.props.scriptData.mapboxAccessToken;return _react.default.createElement(_reactRedux.Provider,{store},_react.default.createElement(_BaseDialog.default,{useUpdatedStyles:!0,isOpen:this.state.isOpen,handleClose:this.props.onClose,uncloseable:!0,overflow:"visible"},_react.default.createElement("div",{style:styles.container},this.state.showSchoolInfoUnknownError&&_react.default.createElement("p",{style:styles.error},_locale.default.schoolInfoInterstitialUnknownError()),_react.default.createElement("div",{style:styles.middle},_react.default.createElement(_SchoolInfoInputs.default,{ref:function ref(_ref){return _this2.schoolInfoInputs=_ref},onCountryChange:this.onCountryChange,onSchoolTypeChange:this.onSchoolTypeChange,onSchoolChange:this.onSchoolChange,onSchoolNotFoundChange:this.onSchoolNotFoundChange,country:this.state.country,schoolType:this.state.schoolType,ncesSchoolId:this.state.ncesSchoolId,schoolName:this.state.schoolName,schoolLocation:this.state.schoolLocation,useLocationSearch:!0,showErrors,showRequiredIndicator:!0,mapboxAccessToken})),_react.default.createElement("div",{style:styles.bottom},_react.default.createElement(_Button.default,{onClick:this.dismissSchoolInfoForm,style:styles.button,color:"gray",size:"large",text:_locale.default.dismiss(),id:"dismiss-button"}),_react.default.createElement(_Button.default,{onClick:this.handleSchoolInfoSubmit,style:styles.button,size:"large",text:_locale.default.save(),color:_Button.default.ButtonColor.brandSecondaryDefault,id:"save-button"})))))},SchoolInfoInterstitial}(_react.default.Component);_defineProperty(SchoolInfoInterstitial,"propTypes",{scriptData:_propTypes.default.shape({formUrl:_propTypes.default.string.isRequired,authTokenName:_propTypes.default.string.isRequired,authTokenValue:_propTypes.default.string.isRequired,existingSchoolInfo:_propTypes.default.shape({school_id:_propTypes.default.string,country:_propTypes.default.string,school_type:_propTypes.default.string,school_name:_propTypes.default.string,full_address:_propTypes.default.string}).isRequired,mapboxAccessToken:_propTypes.default.string}).isRequired,onClose:_propTypes.default.func.isRequired});var styles={container:{margin:20,color:_color.default.charcoal,fontSize:13},heading:_objectSpread({fontSize:16},_fontConstants.default["main-font-semi-bold"]),middle:{marginTop:20,marginBottom:20,paddingBottom:20,paddingTop:20,borderTopWidth:1,borderBottomWidth:1,borderRightWidth:0,borderLeftWidth:0,borderStyle:"solid",borderColor:_color.default.lighter_gray},bottom:{display:"flex",justifyContent:"flex-end"},error:{color:_color.default.red},button:{marginLeft:7,marginRight:7,marginTop:15,marginBottom:15}};module.exports=exports.default},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/Button.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_constants=__webpack_require__("./src/constants.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"85vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./src/redux/mapbox.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.setMapboxAccessToken=void 0;var mapboxSlice=(0,__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js").createSlice)({name:"mapbox",initialState:{mapboxAccessToken:null},reducers:{setMapboxAccessToken:function(state,action){state.mapboxAccessToken=action.payload}}});exports.setMapboxAccessToken=mapboxSlice.actions.setMapboxAccessToken,exports.default=mapboxSlice.reducer}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,