(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3274],{"./src/legacySharedComponents/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/styleConstants.js":module=>{module.exports={"workspace-headers-height":30,"resize-bar-width":13,"delete-opacity":"0.5","content-width":970}},"./src/templates/ImageWithStatus.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.STATUS=exports.ImageWithStatus=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var STATUS=exports.STATUS={LOADING:"loading",LOADED:"loaded",ERROR:"error"};!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.ImageWithStatus=function(_Component){function ImageWithStatus(props){var _this;return(_this=_Component.call(this,props)||this).handleImageLoad=_this.handleImageLoad.bind(_this),_this.handleImageError=_this.handleImageError.bind(_this),_this.state={imageStatus:STATUS.LOADING},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ImageWithStatus,_Component);var _proto=ImageWithStatus.prototype;return _proto.UNSAFE_componentWillReceiveProps=function UNSAFE_componentWillReceiveProps(nextProps){this.props.src!==nextProps.src&&this.setState({imageStatus:STATUS.LOADING})},_proto.handleImageLoad=function handleImageLoad(){this.setState({imageStatus:STATUS.LOADED})},_proto.handleImageError=function handleImageError(){this.setState({imageStatus:STATUS.ERROR})},_proto.render=function render(){return _react.default.createElement("div",{style:this.props.wrapperStyle},_react.default.createElement("img",{src:this.props.src,width:this.props.width,height:this.props.height,onLoad:this.handleImageLoad,onError:this.handleImageError,alt:""}),_react.default.createElement("div",{"data-image-status":this.state.imageStatus}))},ImageWithStatus}(_react.Component),"propTypes",{src:_propTypes.default.string.isRequired,width:_propTypes.default.number.isRequired,height:_propTypes.default.number,wrapperStyle:_propTypes.default.object})},"./src/templates/projects/ProjectsList.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.COLUMNS_WITHOUT_THUMBNAILS=exports.COLUMNS=void 0;var _orderBy=_interopRequireDefault(__webpack_require__("./node_modules/lodash/orderBy.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),sort=_interopRequireWildcard(__webpack_require__("./node_modules/sortabular/dist/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_ImageWithStatus=__webpack_require__("./src/templates/ImageWithStatus.jsx"),_tableConstants=__webpack_require__("./src/templates/tables/tableConstants.js"),_wrapped_sortable=_interopRequireDefault(__webpack_require__("./src/templates/tables/wrapped_sortable.js")),_projectTypeMap=__webpack_require__("./src/templates/projects/projectTypeMap.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var COLUMNS=exports.COLUMNS={THUMBNAIL:0,PROJECT_NAME:1,STUDENT_NAME:2,APP_TYPE:3,LAST_EDITED:4},COLUMNS_WITHOUT_THUMBNAILS=exports.COLUMNS_WITHOUT_THUMBNAILS={PROJECT_NAME:0,STUDENT_NAME:1,APP_TYPE:2,LAST_EDITED:3},typeFormatter=function typeFormatter(type){return _projectTypeMap.PROJECT_TYPE_MAP[type]},thumbnailFormatter=function thumbnailFormatter(thumbnailUrl){return thumbnailUrl?_react.default.createElement(_ImageWithStatus.ImageWithStatus,{src:thumbnailUrl,width:50,wrapperStyle:styles.thumbnailWrapper}):""},ProjectsList=function(_React$Component){function ProjectsList(props){var _this;_defineProperty(_this=_React$Component.call(this,props)||this,"getSortingColumns",(function(){return _this.state.sortingColumns||{}})),_defineProperty(_this,"onSort",(function(selectedColumn){_this.setState({sortingColumns:sort.byColumn({sortingColumns:_this.state.sortingColumns,sortingOrder:{FIRST:"asc",asc:"desc",desc:"asc"},selectedColumn})})})),_defineProperty(_this,"nameFormatter",(function(name,_ref){var rowData=_ref.rowData,type=encodeURIComponent(rowData.type),channel=encodeURIComponent(rowData.channel),url="".concat(_this.props.studioUrlPrefix,"/projects/").concat(type,"/").concat(channel,"/view");return _react.default.createElement("a",{href:url,style:_tableConstants.tableLayoutStyles.link,target:"_blank",rel:"noopener noreferrer"},name)})),_defineProperty(_this,"dateFormatter",(function(dateString){return new Date(dateString).toLocaleDateString(_this.props.localeCode||[])})),_defineProperty(_this,"getColumns",(function(sortable){var thumbnailColumn={property:"thumbnailUrl",header:{props:{style:_tableConstants.tableLayoutStyles.headerCell}},cell:{formatters:[thumbnailFormatter],props:{style:_tableConstants.tableLayoutStyles.cell}}},standardColumns=[{property:"name",header:{label:_locale.default.projectName(),props:{style:_tableConstants.tableLayoutStyles.headerCell},transforms:[sortable]},cell:{formatters:[_this.nameFormatter],props:{style:_tableConstants.tableLayoutStyles.cell}}},{property:"studentName",header:{label:_locale.default.studentName(),props:{style:_tableConstants.tableLayoutStyles.headerCell},transforms:[sortable]},cell:{props:{style:_tableConstants.tableLayoutStyles.cell}}},{property:"type",header:{label:_locale.default.projectType(),props:{style:_tableConstants.tableLayoutStyles.headerCell},transforms:[sortable]},cell:{formatters:[typeFormatter],props:{style:_tableConstants.tableLayoutStyles.cell}}},{property:"updatedAt",header:{label:_locale.default.lastEdited(),props:{style:_tableConstants.tableLayoutStyles.headerCell},transforms:[sortable]},cell:{formatters:[_this.dateFormatter],props:{style:_tableConstants.tableLayoutStyles.cell}}}];return _this.props.showProjectThumbnails?[thumbnailColumn].concat(standardColumns):standardColumns}));var sortingColumn=_this.props.showProjectThumbnails?COLUMNS.LAST_EDITED:COLUMNS_WITHOUT_THUMBNAILS.LAST_EDITED;return _this.state={sortingColumns:_defineProperty({},sortingColumn,{direction:"desc",position:0})},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProjectsList,_React$Component),ProjectsList.prototype.render=function render(){var sortable=(0,_wrapped_sortable.default)(this.getSortingColumns,this.onSort,_tableConstants.sortableOptions),columns=this.getColumns(sortable),sortingColumns=this.getSortingColumns(),sortedRows=sort.sorter({columns,sortingColumns,sort:_orderBy.default})(this.props.projectsData);return _react.default.createElement(Table.Provider,{id:"uitest-projects-table",className:"pure-table pure-table-striped",columns,style:_tableConstants.tableLayoutStyles.table},_react.default.createElement(Table.Header,null),_react.default.createElement(Table.Body,{rows:sortedRows,rowKey:"channel"}))},ProjectsList}(_react.default.Component);_defineProperty(ProjectsList,"propTypes",{localeCode:_propTypes.default.string,projectsData:_propTypes.default.array.isRequired,showProjectThumbnails:_propTypes.default.bool.isRequired,studioUrlPrefix:_propTypes.default.string.isRequired});var styles={thumbnailCell:{border:"1px solid gray",width:50,minWidth:50,padding:0},thumbnailWrapper:{height:50,display:"flex",justifyContent:"center",alignItems:"center"}};exports.default=ProjectsList},"./src/templates/projects/projectTypeMap.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PROJECT_TYPE_MAP=exports.FEATURED_PROJECT_TYPE_MAP=void 0;var _locale=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/util/locale-do-not-import.js"));exports.PROJECT_TYPE_MAP={adaptations:_locale.default.projectTypeAdaptations(),algebra_game:_locale.default.projectTypeAlgebra(),applab:_locale.default.projectTypeApplab(),artist:_locale.default.projectTypeArtist(),ecosystems:_locale.default.projectTypeEcosystems(),frozen:_locale.default.projectTypeFrozen(),gumball:_locale.default.projectTypeGumball(),infinity:_locale.default.projectTypeInfinity(),iceage:_locale.default.projectTypeIceage(),minecraft_adventurer:_locale.default.projectTypeMinecraft(),minecraft_designer:_locale.default.projectTypeMinecraft(),minecraft_hero:_locale.default.projectTypeMinecraft(),minecraft_aquatic:_locale.default.projectTypeMinecraft(),game_design:_locale.default.projectTypeGameDesign(),gamelab:_locale.default.projectTypeGamelab(),playlab:_locale.default.projectTypePlaylab(),weblab:_locale.default.projectTypeWeblab(),bounce:_locale.default.projectTypeBounce(),flappy:_locale.default.projectTypeFlappy(),starwars:_locale.default.projectTypeStarwars(),starwarsblocks:_locale.default.projectTypeStarwarsBlocks(),sports:_locale.default.projectTypeSports(),basketball:_locale.default.projectTypeBasketball(),artist_k1:_locale.default.projectTypeArtistPreReader(),playlab_k1:_locale.default.projectTypePlaylabPreReader(),eval:_locale.default.projectTypeEval(),calc:_locale.default.projectTypeCalc(),dance:_locale.default.projectTypeDance(),spritelab:_locale.default.projectTypeSpriteLab(),javalab:_locale.default.projectTypeJavalab(),music:_locale.default.projectTypeMusic(),poetry:_locale.default.projectTypePoetry(),poetry_hoc:_locale.default.projectTypePoetry(),pythonlab:_locale.default.projectTypePythonlab(),thebadguys:_locale.default.projectTypeThebadguys(),science:_locale.default.projectTypeScience(),story:_locale.default.projectTypeStory(),time_capsule:_locale.default.projectTypeTimeCapsule(),transformers:_locale.default.projectTypeTransformers()},exports.FEATURED_PROJECT_TYPE_MAP={applab:_locale.default.projectTypeApplab(),artist:_locale.default.projectTypeDrawing(),frozen:_locale.default.projectTypeDrawing(),gamelab:_locale.default.projectTypeGamelab(),playlab:_locale.default.projectTypePlaylab(),gumball:_locale.default.projectTypePlaylab(),infinity:_locale.default.projectTypePlaylab(),iceage:_locale.default.projectTypePlaylab(),minecraft_adventurer:_locale.default.projectTypeMinecraft(),minecraft_designer:_locale.default.projectTypeMinecraft(),minecraft_hero:_locale.default.projectTypeMinecraft(),minecraft_aquatic:_locale.default.projectTypeMinecraft(),bounce:_locale.default.projectTypeEvents(),flappy:_locale.default.projectTypeEvents(),starwars:_locale.default.projectTypeEvents(),starwarsblocks:_locale.default.projectTypeEvents(),sports:_locale.default.projectTypeEvents(),basketball:_locale.default.projectTypeEvents(),artist_k1:_locale.default.projectTypeK1(),playlab_k1:_locale.default.projectTypeK1(),dance:_locale.default.projectTypeDance(),poetry:_locale.default.projectTypePoetry(),thebadguys:_locale.default.projectTypeThebadguys(),spritelab:_locale.default.projectTypeSpriteLab(),music:_locale.default.projectTypeMusic()}},"./src/templates/tables/tableConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tableLayoutStyles=exports.sortableOptions=exports.plTableLayoutStyles=exports.NAME_CELL_INPUT_WIDTH=void 0;var _fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_styleConstants=_interopRequireDefault(__webpack_require__("./src/styleConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.tableLayoutStyles={tableText:{textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"},table:{borderWidth:1,borderStyle:"solid",borderColor:_color.default.border_gray,width:_styleConstants.default["content-width"],backgroundColor:_color.default.table_light_row},cell:{maxWidth:200,border:"1px solid",borderColor:_color.default.border_light_gray,padding:10,fontSize:14},headerCell:{backgroundColor:_color.default.table_header,fontWeight:"bold",borderColor:_color.default.border_light_gray,borderStyle:"solid",borderBottomWidth:1,borderTopWidth:0,borderLeftWidth:0,borderRightWidth:1,paddingTop:20,paddingBottom:20,color:_color.default.charcoal,textAlign:"inherit"},flexCell:{display:"flex",alignItems:"center"},link:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,textDecoration:"none"}),unsortableHeader:{paddingLeft:25},unsortableHeaderRTL:{paddingRight:25}},exports.plTableLayoutStyles={link:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,color:_color.default.neutral_dark,textDecoration:"underline"}),sectionCodeLink:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,color:_color.default.brand_secondary_default}),currentUnit:{marginTop:10,fontSize:14},colButton:{paddingTop:20,paddingLeft:20,paddingBottom:20,width:40},participantTypeCell:{fontSize:14},leaveButton:{fontSize:14}},exports.sortableOptions={default:{color:"rgba(0, 0, 0, 0.2 )"}},exports.NAME_CELL_INPUT_WIDTH=160},"./src/templates/tables/wrapped_sortable.js":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),sort=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/sortabular/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_excluded=["className"];function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}exports.default=function wrappedSortable(getSortingColumns,onSort){var styles=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},basicSortable=sort.sort({getSortingColumns,onSort});return function(label,columnInfo){var _basicSortable=basicSortable(label,columnInfo),newClassName=_basicSortable.className,newProps=_objectWithoutProperties(_basicSortable,_excluded),sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort",className:"fa-fw",style:styles.default});/sort-asc/.test(newClassName)?sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-asc",className:"fa-fw",style:styles.sortAsc}):/sort-desc/.test(newClassName)&&(sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-desc",className:"fa-fw",style:styles.sortDesc}));return _objectSpread(_objectSpread({},newProps),{},{style:Object.assign({},{cursor:"pointer"}),children:_react.default.createElement("span",{style:styles.container},_react.default.createElement("span",{key:"icon",style:{whiteSpace:"nowrap"}},sortIcon),_react.default.createElement("span",{key:"label"},label))})}};module.exports=exports.default},"./node_modules/lodash/_baseEach.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseForOwn=__webpack_require__("./node_modules/lodash/_baseForOwn.js"),baseEach=__webpack_require__("./node_modules/lodash/_createBaseEach.js")(baseForOwn);module.exports=baseEach},"./node_modules/lodash/_baseMap.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseEach=__webpack_require__("./node_modules/lodash/_baseEach.js"),isArrayLike=__webpack_require__("./node_modules/lodash/isArrayLike.js");module.exports=function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];return baseEach(collection,(function(value,key,collection){result[++index]=iteratee(value,key,collection)})),result}},"./node_modules/lodash/_baseOrderBy.js":(module,__unused_webpack_exports,__webpack_require__)=>{var arrayMap=__webpack_require__("./node_modules/lodash/_arrayMap.js"),baseGet=__webpack_require__("./node_modules/lodash/_baseGet.js"),baseIteratee=__webpack_require__("./node_modules/lodash/_baseIteratee.js"),baseMap=__webpack_require__("./node_modules/lodash/_baseMap.js"),baseSortBy=__webpack_require__("./node_modules/lodash/_baseSortBy.js"),baseUnary=__webpack_require__("./node_modules/lodash/_baseUnary.js"),compareMultiple=__webpack_require__("./node_modules/lodash/_compareMultiple.js"),identity=__webpack_require__("./node_modules/lodash/identity.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js");module.exports=function baseOrderBy(collection,iteratees,orders){iteratees=iteratees.length?arrayMap(iteratees,(function(iteratee){return isArray(iteratee)?function(value){return baseGet(value,1===iteratee.length?iteratee[0]:iteratee)}:iteratee})):[identity];var index=-1;iteratees=arrayMap(iteratees,baseUnary(baseIteratee));var result=baseMap(collection,(function(value,key,collection){return{criteria:arrayMap(iteratees,(function(iteratee){return iteratee(value)})),index:++index,value}}));return baseSortBy(result,(function(object,other){return compareMultiple(object,other,orders)}))}},"./node_modules/lodash/_baseSortBy.js":module=>{module.exports=function baseSortBy(array,comparer){var length=array.length;for(array.sort(comparer);length--;)array[length]=array[length].value;return array}},"./node_modules/lodash/_compareAscending.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isSymbol=__webpack_require__("./node_modules/lodash/isSymbol.js");module.exports=function compareAscending(value,other){if(value!==other){var valIsDefined=void 0!==value,valIsNull=null===value,valIsReflexive=value==value,valIsSymbol=isSymbol(value),othIsDefined=void 0!==other,othIsNull=null===other,othIsReflexive=other==other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive)return 1;if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive)return-1}return 0}},"./node_modules/lodash/_compareMultiple.js":(module,__unused_webpack_exports,__webpack_require__)=>{var compareAscending=__webpack_require__("./node_modules/lodash/_compareAscending.js");module.exports=function compareMultiple(object,other,orders){for(var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;++index<length;){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result)return index>=ordersLength?result:result*("desc"==orders[index]?-1:1)}return object.index-other.index}},"./node_modules/lodash/_createBaseEach.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isArrayLike=__webpack_require__("./node_modules/lodash/isArrayLike.js");module.exports=function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(null==collection)return collection;if(!isArrayLike(collection))return eachFunc(collection,iteratee);for(var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);(fromRight?index--:++index<length)&&!1!==iteratee(iterable[index],index,iterable););return collection}}},"./node_modules/lodash/orderBy.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseOrderBy=__webpack_require__("./node_modules/lodash/_baseOrderBy.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js");module.exports=function orderBy(collection,iteratees,orders,guard){return null==collection?[]:(isArray(iteratees)||(iteratees=null==iteratees?[]:[iteratees]),isArray(orders=guard?void 0:orders)||(orders=null==orders?[]:[orders]),baseOrderBy(collection,iteratees,orders))}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/templates/projects/ProjectsList.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithoutThumbnails=exports.WithThumbnails=exports.LocalizedWithThumbnails=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_ProjectsList=_interopRequireDefault(__webpack_require__("./src/templates/projects/ProjectsList.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_ProjectsList.default};var STUB_PROJECTS_DATA=[{channel:"ABCDEFGHIJKLM01234",name:"Antelope Freeway",studentName:"Alice",type:"applab",updatedAt:"2016-12-31T23:59:59.999-08:00"},{channel:"AAAABBBBCCCCDDDDEE",name:"Cats and Kittens",studentName:"Charlie",thumbnailUrl:"/media/common_images/stickers/cat.png",type:"weblab",updatedAt:"2016-11-30T00:00:00.001-08:00"},{channel:"NOPQRSTUVWXYZ567879",name:"Batyote",studentName:"Bob",thumbnailUrl:"/media/common_images/stickers/bat.png",type:"gamelab",updatedAt:"2017-01-01T00:00:00.001-08:00"}],Template=function Template(args){return _react.default.createElement(_ProjectsList.default,_extends({projectsData:STUB_PROJECTS_DATA,studioUrlPrefix:"https://studio.code.org",showProjectThumbnails:!0},args))};exports.WithThumbnails=Template.bind({});(exports.WithoutThumbnails=Template.bind({})).args={showProjectThumbnails:!1},(exports.LocalizedWithThumbnails=Template.bind({})).args={localeCode:"es-MX"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLXByb2plY3RzLVByb2plY3RzTGlzdC1zdG9yeS4wZDNiMWI2My5pZnJhbWUuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJzUUFDQSxJQUFBQSxRQUFBQyx1QkFBQUMsb0JBQUEsb0NBQ0FDLFdBQUFGLHVCQUFBQyxvQkFBQSx1Q0FDQUUsT0FBQUgsdUJBQUFDLG9CQUFBLGtDQUEwQkcsVUFBQSw2QkFIMUIsU0FBQUosdUJBQUFLLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLFVBQUFFLFdBQUEsT0FBQUEsU0FBQUMsT0FBQUMsT0FBQUQsT0FBQUMsT0FBQUMsT0FBQSxTQUFBQyxRQUFBLFFBQUFDLEVBQUEsRUFBQUEsRUFBQUMsVUFBQUMsT0FBQUYsSUFBQSxLQUFBRyxPQUFBRixVQUFBRCxHQUFBLFFBQUFJLE9BQUFELE9BQUFQLE9BQUFTLFVBQUFDLGVBQUFDLEtBQUFKLE9BQUFDLE9BQUFMLE9BQUFLLEtBQUFELE9BQUFDLEtBQUEsUUFBQUwsTUFBQSxFQUFBSixTQUFBYSxNQUFBLEtBQUFQLFVBQUEsVUFBQVEseUJBQUFOLE9BQUFPLFVBQUEsU0FBQVAsT0FBQSxhQUFBQyxJQUFBSixFQUFBRCxPQUFBLFNBQUFZLDhCQUFBUixPQUFBTyxVQUFBLFNBQUFQLE9BQUEsYUFBQUMsSUFBQUosRUFBQUQsT0FBQSxHQUFBYSxXQUFBaEIsT0FBQWlCLEtBQUFWLFFBQUEsSUFBQUgsRUFBQSxFQUFBQSxFQUFBWSxXQUFBVixPQUFBRixJQUFBSSxJQUFBUSxXQUFBWixHQUFBVSxTQUFBSSxRQUFBVixNQUFBLElBQUFMLE9BQUFLLEtBQUFELE9BQUFDLE1BQUEsT0FBQUwsTUFBQSxDQUFBWSxDQUFBUixPQUFBTyxVQUFBLEdBQUFkLE9BQUFtQixzQkFBQSxLQUFBQyxpQkFBQXBCLE9BQUFtQixzQkFBQVosUUFBQSxJQUFBSCxFQUFBLEVBQUFBLEVBQUFnQixpQkFBQWQsT0FBQUYsSUFBQUksSUFBQVksaUJBQUFoQixHQUFB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QVcsa0NBSVRDLFNBQVcsU0FBWEEsU0FBV0MsTUFBSSxPQUNuQi9aLE9BQUEsUUFBQW9DLGNBQUNzWCxjQUFBLFFBQVl0WixTQUFBLENBQ1hvTCxhQUFjb08sbUJBQ2QzUSxnQkFBaUIsMEJBQ2pCMEIsdUJBQXFCLEdBQ2pCb1AsTUFDSixFQUd1QnJYLFFBQUFBLGVBQUdvWCxTQUFTdlosS0FBSyxDQUFDLElBRWZtQyxRQUFBQSxrQkFBR29YLFNBQVN2WixLQUFLLENBQUMsSUFDOUJ3WixLQUFPLENBQ3ZCcFAsdUJBQXVCLElBR1dqSSxRQUFBQSx3QkFBR29YLFNBQVN2WixLQUFLLENBQUMsSUFDOUJ3WixLQUFPLENBQzdCdFEsV0FBWSxRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2xlZ2FjeVNoYXJlZENvbXBvbmVudHMvRm9udEF3ZXNvbWUuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9zdHlsZUNvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL0ltYWdlV2l0aFN0YXR1cy5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9qZWN0cy9Qcm9qZWN0c0xpc3QuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvcHJvamVjdHMvcHJvamVjdFR5cGVNYXAuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy90YWJsZXMvdGFibGVDb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy90YWJsZXMvd3JhcHBlZF9zb3J0YWJsZS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRWFjaC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWFwLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VPcmRlckJ5LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VTb3J0QnkuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29tcGFyZUFzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb21wYXJlTXVsdGlwbGUuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY3JlYXRlQmFzZUVhY2guanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9vcmRlckJ5LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9qZWN0cy9Qcm9qZWN0c0xpc3Quc3RvcnkuanN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAZmlsZSBmb250LWF3ZXNvbWUgaGVscGVyIGNvbXBvbmVudC4gKi9cbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBHaXZlbiBhbiBpY29uIG5hbWUsIHJlbmRlciB0aGUgaWNvbiB1c2luZyBhbiA8aT4gdGFnIGluIHR5cGljYWwgZm9udC1hd2Vzb21lXG4gKiBmYXNoaW9uLiAgUmVxdWlyZXMgZm9udC1hd2Vzb21lIHRvIGJlIGF2YWlsYWJsZSBvbiB0aGUgcGFnZS5cbiAqIFNlZSBodHRwOi8vZm9udGF3ZXNvbWUuaW8vaWNvbnMvIHRvIGxvb2sgdXAgc3VwcG9ydGVkIGljb24gbmFtZXMuXG4gKlxuICogQGRlcHJlY2F0ZWQgdXNlIERTQ08gRm9udEF3ZXNvbWVWNkljb24gaW5zdGVhZFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBGb250QXdlc29tZSh7aWNvbiwgY2xhc3NOYW1lLCB0aXRsZSwgLi4ucHJvcHN9KSB7XG4gIGNvbnN0IG5ld1Byb3BzID0gXy5hc3NpZ24oe30sIHByb3BzLCB7XG4gICAgY2xhc3NOYW1lOiBgZmEgZmEtJHtpY29ufSAke2NsYXNzTmFtZSA/IGNsYXNzTmFtZSA6ICcnfWAsXG4gIH0pO1xuICByZXR1cm4gPGkgey4uLm5ld1Byb3BzfSB0aXRsZT17dGl0bGV9IC8+O1xufVxuXG5Gb250QXdlc29tZS5wcm9wVHlwZXMgPSB7XG4gIGljb246IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgLy8gVGl0bGUgc2hvdWxkIGJlIHVzZWQgZm9yIHNlbWFudGljIGljb25zLiBJZiBub3QgZ2l2ZW4sIHRoZSBzY3JlZW5yZWFkZXIgd2lsbCBub3QgcmVhZCB0aGUgaWNvblxuICAvLyBTZWUgaHR0cHM6Ly9mb250YXdlc29tZS5jb20vZG9jcy93ZWIvZGlnLWRlZXBlci9hY2Nlc3NpYmlsaXR5I2ljb25zLXVzZWQtYXMtc2VtYW50aWMtZWxlbWVudHNcbn07XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG4vLyBhcHBzL3NyYy9zdHlsZUNvbnN0YW50cy5qc1xuLy8gR0VORVJBVEVEIEZJTEU6IERPIE5PVCBNT0RJRlkgRElSRUNUTFlcbi8vIFRoaXMgZ2VuZXJhdGVkIGZpbGUgZXhwb3J0cyBhbGwgdmFyaWFibGVzIGRlZmluZWQgaW4gc2hhcmVkL2Nzcy9zdHlsZS1jb25zdGFudHMuc2Nzc1xuLy8gZm9yIHVzZSBpbiBKYXZhU2NyaXB0LiBUaGUgZ2VuZXJhdG9yIHNjcmlwdCBpcyBjb252ZXJ0LXNjc3MtdmFyaWFibGVzLmpzXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJ3b3Jrc3BhY2UtaGVhZGVycy1oZWlnaHRcIjogMzAsXG4gIFwicmVzaXplLWJhci13aWR0aFwiOiAxMyxcbiAgXCJkZWxldGUtb3BhY2l0eVwiOiBcIjAuNVwiLFxuICBcImNvbnRlbnQtd2lkdGhcIjogOTcwLFxufTtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IFdyYXBzIGFuIDxpbWc+IHdpdGggYSA8ZGl2PiB0aGF0IGluZGljYXRlcyB0aGUgc3RhdHVzIG9mIHRoZVxuICogaW1hZ2UgYmVpbmcgbG9hZGVkLiBUaGUgcHVycG9zZSBvZiB0aGlzIGlzIHRvIGJlIGFibGUgdG8gd2FpdCB1bnRpbCBpbWFnZXNcbiAqIGhhdmUgZmluaXNoZWQgbG9hZGluZyB3aXRoaW4gdGVzdHMuXG4gKi9cblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5leHBvcnQgY29uc3QgU1RBVFVTID0ge1xuICBMT0FESU5HOiAnbG9hZGluZycsXG4gIExPQURFRDogJ2xvYWRlZCcsXG4gIEVSUk9SOiAnZXJyb3InLFxufTtcblxuZXhwb3J0IGNsYXNzIEltYWdlV2l0aFN0YXR1cyBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgc3JjOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgd2lkdGg6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgd3JhcHBlclN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5oYW5kbGVJbWFnZUxvYWQgPSB0aGlzLmhhbmRsZUltYWdlTG9hZC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlSW1hZ2VFcnJvciA9IHRoaXMuaGFuZGxlSW1hZ2VFcnJvci5iaW5kKHRoaXMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGltYWdlU3RhdHVzOiBTVEFUVVMuTE9BRElORyxcbiAgICB9O1xuICB9XG5cbiAgVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc3JjICE9PSBuZXh0UHJvcHMuc3JjKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtpbWFnZVN0YXR1czogU1RBVFVTLkxPQURJTkd9KTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVJbWFnZUxvYWQoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7aW1hZ2VTdGF0dXM6IFNUQVRVUy5MT0FERUR9KTtcbiAgfVxuXG4gIGhhbmRsZUltYWdlRXJyb3IoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7aW1hZ2VTdGF0dXM6IFNUQVRVUy5FUlJPUn0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXt0aGlzLnByb3BzLndyYXBwZXJTdHlsZX0+XG4gICAgICAgIHtcbiAgICAgICAgICAvLyBUT0RPOiBBMTF5Mjc5IChodHRwczovL2NvZGVkb3RvcmcuYXRsYXNzaWFuLm5ldC9icm93c2UvQTExWS0yNzkpXG4gICAgICAgICAgLy8gVmVyaWZ5IG9yIHVwZGF0ZSB0aGlzIGFsdC10ZXh0IGFzIG5lY2Vzc2FyeVxuICAgICAgICB9XG4gICAgICAgIDxpbWdcbiAgICAgICAgICBzcmM9e3RoaXMucHJvcHMuc3JjfVxuICAgICAgICAgIHdpZHRoPXt0aGlzLnByb3BzLndpZHRofVxuICAgICAgICAgIGhlaWdodD17dGhpcy5wcm9wcy5oZWlnaHR9XG4gICAgICAgICAgb25Mb2FkPXt0aGlzLmhhbmRsZUltYWdlTG9hZH1cbiAgICAgICAgICBvbkVycm9yPXt0aGlzLmhhbmRsZUltYWdlRXJyb3J9XG4gICAgICAgICAgYWx0PVwiXCJcbiAgICAgICAgLz5cbiAgICAgICAgPGRpdiBkYXRhLWltYWdlLXN0YXR1cz17dGhpcy5zdGF0ZS5pbWFnZVN0YXR1c30gLz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCBvcmRlckJ5IGZyb20gJ2xvZGFzaC9vcmRlckJ5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgVGFibGUgZnJvbSAncmVhY3RhYnVsYXItdGFibGUnO1xuaW1wb3J0ICogYXMgc29ydCBmcm9tICdzb3J0YWJ1bGFyJztcblxuaW1wb3J0IGNvbW1vbk1zZyBmcm9tICdAY2RvL2xvY2FsZSc7XG5cbmltcG9ydCB7SW1hZ2VXaXRoU3RhdHVzfSBmcm9tICcuLi9JbWFnZVdpdGhTdGF0dXMnO1xuaW1wb3J0IHt0YWJsZUxheW91dFN0eWxlcywgc29ydGFibGVPcHRpb25zfSBmcm9tICcuLi90YWJsZXMvdGFibGVDb25zdGFudHMnO1xuaW1wb3J0IHdyYXBwZWRTb3J0YWJsZSBmcm9tICcuLi90YWJsZXMvd3JhcHBlZF9zb3J0YWJsZSc7XG5cbmltcG9ydCB7UFJPSkVDVF9UWVBFX01BUH0gZnJvbSAnLi9wcm9qZWN0VHlwZU1hcCc7XG5cbmNvbnN0IFRIVU1CTkFJTF9TSVpFID0gNTA7XG5cbi8qKiBAZW51bSB7bnVtYmVyfSAqL1xuZXhwb3J0IGNvbnN0IENPTFVNTlMgPSB7XG4gIFRIVU1CTkFJTDogMCxcbiAgUFJPSkVDVF9OQU1FOiAxLFxuICBTVFVERU5UX05BTUU6IDIsXG4gIEFQUF9UWVBFOiAzLFxuICBMQVNUX0VESVRFRDogNCxcbn07XG5cbi8qKiBAZW51bSB7bnVtYmVyfSAqL1xuZXhwb3J0IGNvbnN0IENPTFVNTlNfV0lUSE9VVF9USFVNQk5BSUxTID0ge1xuICBQUk9KRUNUX05BTUU6IDAsXG4gIFNUVURFTlRfTkFNRTogMSxcbiAgQVBQX1RZUEU6IDIsXG4gIExBU1RfRURJVEVEOiAzLFxufTtcblxuY29uc3QgdHlwZUZvcm1hdHRlciA9IHR5cGUgPT4ge1xuICByZXR1cm4gUFJPSkVDVF9UWVBFX01BUFt0eXBlXTtcbn07XG5cbmNvbnN0IHRodW1ibmFpbEZvcm1hdHRlciA9IHRodW1ibmFpbFVybCA9PiB7XG4gIHJldHVybiB0aHVtYm5haWxVcmwgPyAoXG4gICAgPEltYWdlV2l0aFN0YXR1c1xuICAgICAgc3JjPXt0aHVtYm5haWxVcmx9XG4gICAgICB3aWR0aD17VEhVTUJOQUlMX1NJWkV9XG4gICAgICB3cmFwcGVyU3R5bGU9e3N0eWxlcy50aHVtYm5haWxXcmFwcGVyfVxuICAgIC8+XG4gICkgOiAoXG4gICAgJydcbiAgKTtcbn07XG5cbmNsYXNzIFByb2plY3RzTGlzdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgbG9jYWxlQ29kZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBwcm9qZWN0c0RhdGE6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICAgIHNob3dQcm9qZWN0VGh1bWJuYWlsczogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgICAvLyBUaGUgcHJlZml4IGZvciB0aGUgY29kZSBzdHVkaW8gdXJsIGluIHRoZSBjdXJyZW50IGVudmlyb25tZW50LFxuICAgIC8vIGUuZy4gJy8vc3R1ZGlvLmNvZGUub3JnJyBvciAnLy9sb2NhbGhvc3Qtc3R1ZGlvLmNvZGUub3JnOjMwMDAnLlxuICAgIHN0dWRpb1VybFByZWZpeDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIGNvbnN0IHNvcnRpbmdDb2x1bW4gPSB0aGlzLnByb3BzLnNob3dQcm9qZWN0VGh1bWJuYWlsc1xuICAgICAgPyBDT0xVTU5TLkxBU1RfRURJVEVEXG4gICAgICA6IENPTFVNTlNfV0lUSE9VVF9USFVNQk5BSUxTLkxBU1RfRURJVEVEO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBzb3J0aW5nQ29sdW1uczoge1xuICAgICAgICBbc29ydGluZ0NvbHVtbl06IHtcbiAgICAgICAgICBkaXJlY3Rpb246ICdkZXNjJyxcbiAgICAgICAgICBwb3NpdGlvbjogMCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuXG4gIGdldFNvcnRpbmdDb2x1bW5zID0gKCkgPT4ge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnNvcnRpbmdDb2x1bW5zIHx8IHt9O1xuICB9O1xuXG4gIC8vIFRoZSB1c2VyIHJlcXVlc3RlZCBhIG5ldyBzb3J0aW5nIGNvbHVtbi4gQWRqdXN0IHRoZSBzdGF0ZSBhY2NvcmRpbmdseS5cbiAgb25Tb3J0ID0gc2VsZWN0ZWRDb2x1bW4gPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc29ydGluZ0NvbHVtbnM6IHNvcnQuYnlDb2x1bW4oe1xuICAgICAgICBzb3J0aW5nQ29sdW1uczogdGhpcy5zdGF0ZS5zb3J0aW5nQ29sdW1ucyxcbiAgICAgICAgLy8gQ3VzdG9tIHNvcnRpbmdPcmRlciByZW1vdmVzICduby1zb3J0JyBmcm9tIHRoZSBjeWNsZVxuICAgICAgICBzb3J0aW5nT3JkZXI6IHtcbiAgICAgICAgICBGSVJTVDogJ2FzYycsXG4gICAgICAgICAgYXNjOiAnZGVzYycsXG4gICAgICAgICAgZGVzYzogJ2FzYycsXG4gICAgICAgIH0sXG4gICAgICAgIHNlbGVjdGVkQ29sdW1uLFxuICAgICAgfSksXG4gICAgfSk7XG4gIH07XG5cbiAgLyoqXG4gICAqIExvb2tzIHVwIHRoZSBjaGFubmVsIGlkIGFuZCB0aGUgcHJvamVjdCB0eXBlIGluIHRoZSByb3cgZGF0YSwgdG8gZ2VuZXJhdGVcbiAgICogYSBVUkwgdG8gZGVjb3JhdGUgdGhlIHByb2plY3QgbmFtZSB3aXRoLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBQcm9qZWN0IG5hbWUuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSByb3dEYXRhXG4gICAqIEBwYXJhbSB7c3RyaW5nfSByb3dEYXRhLnR5cGUgUHJvamVjdCB0eXBlIChlLmcuICdhcHBsYWInKS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHJvd0RhdGEuY2hhbm5lbCBFbmNyeXB0ZWQsIGJhc2U2NC1lbmNvZGVkIGNoYW5uZWwgaWQuXG4gICAqIEByZXR1cm5zIHtSZWFjdH0gQSBuYW1lZCBsaW5rIHRvIHRoZSBzcGVjaWZpZWQgcHJvamVjdC5cbiAgICovXG4gIG5hbWVGb3JtYXR0ZXIgPSAobmFtZSwge3Jvd0RhdGF9KSA9PiB7XG4gICAgLy8gQXZvaWQgZ2VuZXJhdGluZyBtYWxpY2lvdXMgVVJMcyBpbiBjYXNlIHRoZSB1c2VyIHNvbWVob3cgbWFuaXB1bGF0ZXMgdGhlc2UgaW5wdXRzLlxuICAgIGNvbnN0IHR5cGUgPSBlbmNvZGVVUklDb21wb25lbnQocm93RGF0YS50eXBlKTtcbiAgICBjb25zdCBjaGFubmVsID0gZW5jb2RlVVJJQ29tcG9uZW50KHJvd0RhdGEuY2hhbm5lbCk7XG5cbiAgICBjb25zdCB1cmwgPSBgJHt0aGlzLnByb3BzLnN0dWRpb1VybFByZWZpeH0vcHJvamVjdHMvJHt0eXBlfS8ke2NoYW5uZWx9L3ZpZXdgO1xuICAgIHJldHVybiAoXG4gICAgICA8YVxuICAgICAgICBocmVmPXt1cmx9XG4gICAgICAgIHN0eWxlPXt0YWJsZUxheW91dFN0eWxlcy5saW5rfVxuICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgID5cbiAgICAgICAge25hbWV9XG4gICAgICA8L2E+XG4gICAgKTtcbiAgfTtcblxuICAvKipcbiAgICogVGFrZXMgYSBkYXRlIGZvcm1hdHRlZCBhcyBZWVlZLU1NLUREIGFuZCByZXR1cm5zIGl0IGFzIE1NL0REL1lZWVksIG9yIHRoZVxuICAgKiBsb2NhbGl6ZWQgZXF1aXZhbGVudCBpZiB1c2luZyBhIG5vbi1FbmdsaXNoIGxvY2FsZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGVTdHJpbmdcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIGRhdGVGb3JtYXR0ZXIgPSBkYXRlU3RyaW5nID0+IHtcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZVN0cmluZyk7XG4gICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKHRoaXMucHJvcHMubG9jYWxlQ29kZSB8fCBbXSk7XG4gIH07XG5cbiAgZ2V0Q29sdW1ucyA9IHNvcnRhYmxlID0+IHtcbiAgICBjb25zdCB0aHVtYm5haWxDb2x1bW4gPSB7XG4gICAgICBwcm9wZXJ0eTogJ3RodW1ibmFpbFVybCcsXG4gICAgICBoZWFkZXI6IHtcbiAgICAgICAgcHJvcHM6IHtzdHlsZTogdGFibGVMYXlvdXRTdHlsZXMuaGVhZGVyQ2VsbH0sXG4gICAgICB9LFxuICAgICAgY2VsbDoge1xuICAgICAgICBmb3JtYXR0ZXJzOiBbdGh1bWJuYWlsRm9ybWF0dGVyXSxcbiAgICAgICAgcHJvcHM6IHtzdHlsZTogdGFibGVMYXlvdXRTdHlsZXMuY2VsbH0sXG4gICAgICB9LFxuICAgIH07XG4gICAgY29uc3Qgc3RhbmRhcmRDb2x1bW5zID0gW1xuICAgICAge1xuICAgICAgICBwcm9wZXJ0eTogJ25hbWUnLFxuICAgICAgICBoZWFkZXI6IHtcbiAgICAgICAgICBsYWJlbDogY29tbW9uTXNnLnByb2plY3ROYW1lKCksXG4gICAgICAgICAgcHJvcHM6IHtzdHlsZTogdGFibGVMYXlvdXRTdHlsZXMuaGVhZGVyQ2VsbH0sXG4gICAgICAgICAgdHJhbnNmb3JtczogW3NvcnRhYmxlXSxcbiAgICAgICAgfSxcbiAgICAgICAgY2VsbDoge1xuICAgICAgICAgIGZvcm1hdHRlcnM6IFt0aGlzLm5hbWVGb3JtYXR0ZXJdLFxuICAgICAgICAgIHByb3BzOiB7c3R5bGU6IHRhYmxlTGF5b3V0U3R5bGVzLmNlbGx9LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcHJvcGVydHk6ICdzdHVkZW50TmFtZScsXG4gICAgICAgIGhlYWRlcjoge1xuICAgICAgICAgIGxhYmVsOiBjb21tb25Nc2cuc3R1ZGVudE5hbWUoKSxcbiAgICAgICAgICBwcm9wczoge3N0eWxlOiB0YWJsZUxheW91dFN0eWxlcy5oZWFkZXJDZWxsfSxcbiAgICAgICAgICB0cmFuc2Zvcm1zOiBbc29ydGFibGVdLFxuICAgICAgICB9LFxuICAgICAgICBjZWxsOiB7XG4gICAgICAgICAgcHJvcHM6IHtzdHlsZTogdGFibGVMYXlvdXRTdHlsZXMuY2VsbH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwcm9wZXJ0eTogJ3R5cGUnLFxuICAgICAgICBoZWFkZXI6IHtcbiAgICAgICAgICBsYWJlbDogY29tbW9uTXNnLnByb2plY3RUeXBlKCksXG4gICAgICAgICAgcHJvcHM6IHtzdHlsZTogdGFibGVMYXlvdXRTdHlsZXMuaGVhZGVyQ2VsbH0sXG4gICAgICAgICAgdHJhbnNmb3JtczogW3NvcnRhYmxlXSxcbiAgICAgICAgfSxcbiAgICAgICAgY2VsbDoge1xuICAgICAgICAgIGZvcm1hdHRlcnM6IFt0eXBlRm9ybWF0dGVyXSxcbiAgICAgICAgICBwcm9wczoge3N0eWxlOiB0YWJsZUxheW91dFN0eWxlcy5jZWxsfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHByb3BlcnR5OiAndXBkYXRlZEF0JyxcbiAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgbGFiZWw6IGNvbW1vbk1zZy5sYXN0RWRpdGVkKCksXG4gICAgICAgICAgcHJvcHM6IHtzdHlsZTogdGFibGVMYXlvdXRTdHlsZXMuaGVhZGVyQ2VsbH0sXG4gICAgICAgICAgdHJhbnNmb3JtczogW3NvcnRhYmxlXSxcbiAgICAgICAgfSxcbiAgICAgICAgY2VsbDoge1xuICAgICAgICAgIGZvcm1hdHRlcnM6IFt0aGlzLmRhdGVGb3JtYXR0ZXJdLFxuICAgICAgICAgIHByb3BzOiB7c3R5bGU6IHRhYmxlTGF5b3V0U3R5bGVzLmNlbGx9LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICBdO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuc2hvd1Byb2plY3RUaHVtYm5haWxzXG4gICAgICA/IFt0aHVtYm5haWxDb2x1bW5dLmNvbmNhdChzdGFuZGFyZENvbHVtbnMpXG4gICAgICA6IHN0YW5kYXJkQ29sdW1ucztcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgLy8gRGVmaW5lIGEgc29ydGluZyB0cmFuc2Zvcm0gdGhhdCBjYW4gYmUgYXBwbGllZCB0byBlYWNoIGNvbHVtblxuICAgIGNvbnN0IHNvcnRhYmxlID0gd3JhcHBlZFNvcnRhYmxlKFxuICAgICAgdGhpcy5nZXRTb3J0aW5nQ29sdW1ucyxcbiAgICAgIHRoaXMub25Tb3J0LFxuICAgICAgc29ydGFibGVPcHRpb25zXG4gICAgKTtcbiAgICBjb25zdCBjb2x1bW5zID0gdGhpcy5nZXRDb2x1bW5zKHNvcnRhYmxlKTtcbiAgICBjb25zdCBzb3J0aW5nQ29sdW1ucyA9IHRoaXMuZ2V0U29ydGluZ0NvbHVtbnMoKTtcblxuICAgIGNvbnN0IHNvcnRlZFJvd3MgPSBzb3J0LnNvcnRlcih7XG4gICAgICBjb2x1bW5zLFxuICAgICAgc29ydGluZ0NvbHVtbnMsXG4gICAgICBzb3J0OiBvcmRlckJ5LFxuICAgIH0pKHRoaXMucHJvcHMucHJvamVjdHNEYXRhKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8VGFibGUuUHJvdmlkZXJcbiAgICAgICAgaWQ9XCJ1aXRlc3QtcHJvamVjdHMtdGFibGVcIlxuICAgICAgICBjbGFzc05hbWU9XCJwdXJlLXRhYmxlIHB1cmUtdGFibGUtc3RyaXBlZFwiXG4gICAgICAgIGNvbHVtbnM9e2NvbHVtbnN9XG4gICAgICAgIHN0eWxlPXt0YWJsZUxheW91dFN0eWxlcy50YWJsZX1cbiAgICAgID5cbiAgICAgICAgPFRhYmxlLkhlYWRlciAvPlxuICAgICAgICA8VGFibGUuQm9keSByb3dzPXtzb3J0ZWRSb3dzfSByb3dLZXk9XCJjaGFubmVsXCIgLz5cbiAgICAgIDwvVGFibGUuUHJvdmlkZXI+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRodW1ibmFpbENlbGw6IHtcbiAgICBib3JkZXI6ICcxcHggc29saWQgZ3JheScsXG4gICAgd2lkdGg6IFRIVU1CTkFJTF9TSVpFLFxuICAgIG1pbldpZHRoOiBUSFVNQk5BSUxfU0laRSxcbiAgICBwYWRkaW5nOiAwLFxuICB9LFxuICB0aHVtYm5haWxXcmFwcGVyOiB7XG4gICAgaGVpZ2h0OiBUSFVNQk5BSUxfU0laRSxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUHJvamVjdHNMaXN0O1xuIiwiaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuXG4vKipcbiAqIE1hcCBmcm9tIHByb2plY3QgdHlwZSB0byBmcmllbmRseSBuYW1lLlxuICogQHR5cGUge09iamVjdH1cbiAqL1xuXG5leHBvcnQgY29uc3QgUFJPSkVDVF9UWVBFX01BUCA9IHtcbiAgYWRhcHRhdGlvbnM6IGkxOG4ucHJvamVjdFR5cGVBZGFwdGF0aW9ucygpLFxuICBhbGdlYnJhX2dhbWU6IGkxOG4ucHJvamVjdFR5cGVBbGdlYnJhKCksXG4gIGFwcGxhYjogaTE4bi5wcm9qZWN0VHlwZUFwcGxhYigpLFxuICBhcnRpc3Q6IGkxOG4ucHJvamVjdFR5cGVBcnRpc3QoKSxcbiAgZWNvc3lzdGVtczogaTE4bi5wcm9qZWN0VHlwZUVjb3N5c3RlbXMoKSxcbiAgZnJvemVuOiBpMThuLnByb2plY3RUeXBlRnJvemVuKCksXG4gIGd1bWJhbGw6IGkxOG4ucHJvamVjdFR5cGVHdW1iYWxsKCksXG4gIGluZmluaXR5OiBpMThuLnByb2plY3RUeXBlSW5maW5pdHkoKSxcbiAgaWNlYWdlOiBpMThuLnByb2plY3RUeXBlSWNlYWdlKCksXG4gIG1pbmVjcmFmdF9hZHZlbnR1cmVyOiBpMThuLnByb2plY3RUeXBlTWluZWNyYWZ0KCksXG4gIG1pbmVjcmFmdF9kZXNpZ25lcjogaTE4bi5wcm9qZWN0VHlwZU1pbmVjcmFmdCgpLFxuICBtaW5lY3JhZnRfaGVybzogaTE4bi5wcm9qZWN0VHlwZU1pbmVjcmFmdCgpLFxuICBtaW5lY3JhZnRfYXF1YXRpYzogaTE4bi5wcm9qZWN0VHlwZU1pbmVjcmFmdCgpLFxuICBnYW1lX2Rlc2lnbjogaTE4bi5wcm9qZWN0VHlwZUdhbWVEZXNpZ24oKSxcbiAgZ2FtZWxhYjogaTE4bi5wcm9qZWN0VHlwZUdhbWVsYWIoKSxcbiAgcGxheWxhYjogaTE4bi5wcm9qZWN0VHlwZVBsYXlsYWIoKSxcbiAgd2VibGFiOiBpMThuLnByb2plY3RUeXBlV2VibGFiKCksXG4gIGJvdW5jZTogaTE4bi5wcm9qZWN0VHlwZUJvdW5jZSgpLFxuICBmbGFwcHk6IGkxOG4ucHJvamVjdFR5cGVGbGFwcHkoKSxcbiAgc3RhcndhcnM6IGkxOG4ucHJvamVjdFR5cGVTdGFyd2FycygpLFxuICBzdGFyd2Fyc2Jsb2NrczogaTE4bi5wcm9qZWN0VHlwZVN0YXJ3YXJzQmxvY2tzKCksXG4gIHNwb3J0czogaTE4bi5wcm9qZWN0VHlwZVNwb3J0cygpLFxuICBiYXNrZXRiYWxsOiBpMThuLnByb2plY3RUeXBlQmFza2V0YmFsbCgpLFxuICBhcnRpc3RfazE6IGkxOG4ucHJvamVjdFR5cGVBcnRpc3RQcmVSZWFkZXIoKSxcbiAgcGxheWxhYl9rMTogaTE4bi5wcm9qZWN0VHlwZVBsYXlsYWJQcmVSZWFkZXIoKSxcbiAgZXZhbDogaTE4bi5wcm9qZWN0VHlwZUV2YWwoKSxcbiAgY2FsYzogaTE4bi5wcm9qZWN0VHlwZUNhbGMoKSxcbiAgZGFuY2U6IGkxOG4ucHJvamVjdFR5cGVEYW5jZSgpLFxuICBzcHJpdGVsYWI6IGkxOG4ucHJvamVjdFR5cGVTcHJpdGVMYWIoKSxcbiAgamF2YWxhYjogaTE4bi5wcm9qZWN0VHlwZUphdmFsYWIoKSxcbiAgbXVzaWM6IGkxOG4ucHJvamVjdFR5cGVNdXNpYygpLFxuICBwb2V0cnk6IGkxOG4ucHJvamVjdFR5cGVQb2V0cnkoKSxcbiAgcG9ldHJ5X2hvYzogaTE4bi5wcm9qZWN0VHlwZVBvZXRyeSgpLFxuICBweXRob25sYWI6IGkxOG4ucHJvamVjdFR5cGVQeXRob25sYWIoKSxcbiAgdGhlYmFkZ3V5czogaTE4bi5wcm9qZWN0VHlwZVRoZWJhZGd1eXMoKSxcbiAgc2NpZW5jZTogaTE4bi5wcm9qZWN0VHlwZVNjaWVuY2UoKSxcbiAgc3Rvcnk6IGkxOG4ucHJvamVjdFR5cGVTdG9yeSgpLFxuICB0aW1lX2NhcHN1bGU6IGkxOG4ucHJvamVjdFR5cGVUaW1lQ2Fwc3VsZSgpLFxuICB0cmFuc2Zvcm1lcnM6IGkxOG4ucHJvamVjdFR5cGVUcmFuc2Zvcm1lcnMoKSxcbn07XG5cbmV4cG9ydCBjb25zdCBGRUFUVVJFRF9QUk9KRUNUX1RZUEVfTUFQID0ge1xuICBhcHBsYWI6IGkxOG4ucHJvamVjdFR5cGVBcHBsYWIoKSxcbiAgYXJ0aXN0OiBpMThuLnByb2plY3RUeXBlRHJhd2luZygpLFxuICBmcm96ZW46IGkxOG4ucHJvamVjdFR5cGVEcmF3aW5nKCksXG4gIGdhbWVsYWI6IGkxOG4ucHJvamVjdFR5cGVHYW1lbGFiKCksXG4gIHBsYXlsYWI6IGkxOG4ucHJvamVjdFR5cGVQbGF5bGFiKCksXG4gIGd1bWJhbGw6IGkxOG4ucHJvamVjdFR5cGVQbGF5bGFiKCksXG4gIGluZmluaXR5OiBpMThuLnByb2plY3RUeXBlUGxheWxhYigpLFxuICBpY2VhZ2U6IGkxOG4ucHJvamVjdFR5cGVQbGF5bGFiKCksXG4gIG1pbmVjcmFmdF9hZHZlbnR1cmVyOiBpMThuLnByb2plY3RUeXBlTWluZWNyYWZ0KCksXG4gIG1pbmVjcmFmdF9kZXNpZ25lcjogaTE4bi5wcm9qZWN0VHlwZU1pbmVjcmFmdCgpLFxuICBtaW5lY3JhZnRfaGVybzogaTE4bi5wcm9qZWN0VHlwZU1pbmVjcmFmdCgpLFxuICBtaW5lY3JhZnRfYXF1YXRpYzogaTE4bi5wcm9qZWN0VHlwZU1pbmVjcmFmdCgpLFxuICBib3VuY2U6IGkxOG4ucHJvamVjdFR5cGVFdmVudHMoKSxcbiAgZmxhcHB5OiBpMThuLnByb2plY3RUeXBlRXZlbnRzKCksXG4gIHN0YXJ3YXJzOiBpMThuLnByb2plY3RUeXBlRXZlbnRzKCksXG4gIHN0YXJ3YXJzYmxvY2tzOiBpMThuLnByb2plY3RUeXBlRXZlbnRzKCksXG4gIHNwb3J0czogaTE4bi5wcm9qZWN0VHlwZUV2ZW50cygpLFxuICBiYXNrZXRiYWxsOiBpMThuLnByb2plY3RUeXBlRXZlbnRzKCksXG4gIGFydGlzdF9rMTogaTE4bi5wcm9qZWN0VHlwZUsxKCksXG4gIHBsYXlsYWJfazE6IGkxOG4ucHJvamVjdFR5cGVLMSgpLFxuICBkYW5jZTogaTE4bi5wcm9qZWN0VHlwZURhbmNlKCksXG4gIHBvZXRyeTogaTE4bi5wcm9qZWN0VHlwZVBvZXRyeSgpLFxuICB0aGViYWRndXlzOiBpMThuLnByb2plY3RUeXBlVGhlYmFkZ3V5cygpLFxuICBzcHJpdGVsYWI6IGkxOG4ucHJvamVjdFR5cGVTcHJpdGVMYWIoKSxcbiAgbXVzaWM6IGkxOG4ucHJvamVjdFR5cGVNdXNpYygpLFxufTtcbiIsImltcG9ydCBmb250Q29uc3RhbnRzIGZyb20gJ0BjZG8vYXBwcy9mb250Q29uc3RhbnRzJztcblxuaW1wb3J0IHN0eWxlQ29uc3RhbnRzIGZyb20gJy4uLy4uL3N0eWxlQ29uc3RhbnRzJztcbmltcG9ydCBjb2xvciBmcm9tICcuLi8uLi91dGlsL2NvbG9yJztcblxuLy8gQ29uc3RhbnRzIGZvciBSZWFjdCB0YWJsZXNcblxuLy8gU3R5bGVzIGZvciBhIHJlYWN0dGFidWxhciB0YWJsZVxuLyoqXG4gKiBAdHlwZSB7e1xuICogICB0YWJsZVRleHQ6IHtcbiAqICAgICB0ZXh0T3ZlcmZsb3c/OiBzdHJpbmc7XG4gKiAgICAgb3ZlcmZsb3c/OiBzdHJpbmc7XG4gKiAgICAgd2hpdGVTcGFjZT86IFwibm9ybWFsXCIgfCBcIm5vd3JhcFwiIHwgXCJwcmVcIiB8IFwicHJlLWxpbmVcIiB8IFwicHJlLXdyYXBcIjtcbiAqICAgfTtcbiAqICAgdGFibGU6IHtcbiAqICAgICBib3JkZXJXaWR0aD86IHN0cmluZztcbiAqICAgICBib3JkZXJTdHlsZT86IHN0cmluZztcbiAqICAgICBib3JkZXJDb2xvcj86IHN0cmluZztcbiAqICAgICB3aWR0aD86IHN0cmluZztcbiAqICAgICBiYWNrZ3JvdW5kQ29sb3I/OiBzdHJpbmcsXG4gKiAgIH07XG4gKiAgIGNlbGw6IHtcbiAqICAgICBtYXhXaWR0aD86IG51bWJlcjtcbiAqICAgICBib3JkZXI/OiBzdHJpbmc7XG4gKiAgICAgYm9yZGVyQ29sb3I/OiBzdHJpbmc7XG4gKiAgICAgcGFkZGluZz86IG51bWJlcjtcbiAqICAgICBmb250U2l6ZT86IG51bWJlcjtcbiAqICAgfTtcbiAqICAgaGVhZGVyQ2VsbDoge1xuICogICAgIGJhY2tncm91bmRDb2xvcj86IHN0cmluZztcbiAqICAgICBmb250V2VpZ2h0Pzogc3RyaW5nO1xuICogICAgIGJvcmRlckNvbG9yPzogc3RyaW5nO1xuICogICAgIGJvcmRlclN0eWxlPzogc3RyaW5nO1xuICogICAgIGJvcmRlckJvdHRvbVdpZHRoPzogbnVtYmVyO1xuICogICAgIGJvcmRlclRvcFdpZHRoPzogbnVtYmVyO1xuICogICAgIGJvcmRlckxlZnRXaWR0aD86IG51bWJlcjtcbiAqICAgICBib3JkZXJSaWdodFdpZHRoPzogbnVtYmVyO1xuICogICAgIHBhZGRpbmdUb3A/OiBudW1iZXI7XG4gKiAgICAgcGFkZGluZ0JvdHRvbT86IG51bWJlcjtcbiAqICAgICBjb2xvcj86IHN0cmluZztcbiAqICAgICB0ZXh0QWxpZ24/OiBzdHJpbmc7XG4gKiAgIH07XG4gKiAgIGZsZXhDZWxsOiB7XG4gKiAgICAgZGlzcGxheT86IHN0cmluZztcbiAqICAgICBhbGlnbkl0ZW1zPzogc3RyaW5nO1xuICogICB9O1xuICogfX1cbiAqL1xuZXhwb3J0IGNvbnN0IHRhYmxlTGF5b3V0U3R5bGVzID0ge1xuICB0YWJsZVRleHQ6IHtcbiAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICB9LFxuICB0YWJsZToge1xuICAgIGJvcmRlcldpZHRoOiAxLFxuICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgIGJvcmRlckNvbG9yOiBjb2xvci5ib3JkZXJfZ3JheSxcbiAgICB3aWR0aDogc3R5bGVDb25zdGFudHNbJ2NvbnRlbnQtd2lkdGgnXSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLnRhYmxlX2xpZ2h0X3JvdyxcbiAgfSxcbiAgY2VsbDoge1xuICAgIG1heFdpZHRoOiAyMDAsXG4gICAgYm9yZGVyOiAnMXB4IHNvbGlkJyxcbiAgICBib3JkZXJDb2xvcjogY29sb3IuYm9yZGVyX2xpZ2h0X2dyYXksXG4gICAgcGFkZGluZzogMTAsXG4gICAgZm9udFNpemU6IDE0LFxuICB9LFxuICBoZWFkZXJDZWxsOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci50YWJsZV9oZWFkZXIsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIGJvcmRlckNvbG9yOiBjb2xvci5ib3JkZXJfbGlnaHRfZ3JheSxcbiAgICBib3JkZXJTdHlsZTogJ3NvbGlkJyxcbiAgICBib3JkZXJCb3R0b21XaWR0aDogMSxcbiAgICBib3JkZXJUb3BXaWR0aDogMCxcbiAgICBib3JkZXJMZWZ0V2lkdGg6IDAsXG4gICAgYm9yZGVyUmlnaHRXaWR0aDogMSxcbiAgICBwYWRkaW5nVG9wOiAyMCxcbiAgICBwYWRkaW5nQm90dG9tOiAyMCxcbiAgICBjb2xvcjogY29sb3IuY2hhcmNvYWwsXG4gICAgdGV4dEFsaWduOiAnaW5oZXJpdCcsXG4gIH0sXG4gIGZsZXhDZWxsOiB7XG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxuICBsaW5rOiB7XG4gICAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXNlbWktYm9sZCddLFxuICAgIGZvbnRTaXplOiAxNCxcbiAgICB0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLFxuICB9LFxuICB1bnNvcnRhYmxlSGVhZGVyOiB7XG4gICAgcGFkZGluZ0xlZnQ6IDI1LFxuICB9LFxuICB1bnNvcnRhYmxlSGVhZGVyUlRMOiB7XG4gICAgcGFkZGluZ1JpZ2h0OiAyNSxcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBwbFRhYmxlTGF5b3V0U3R5bGVzID0ge1xuICBsaW5rOiB7XG4gICAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXNlbWktYm9sZCddLFxuICAgIGZvbnRTaXplOiAxNCxcbiAgICBjb2xvcjogY29sb3IubmV1dHJhbF9kYXJrLFxuICAgIHRleHREZWNvcmF0aW9uOiAndW5kZXJsaW5lJyxcbiAgfSxcbiAgc2VjdGlvbkNvZGVMaW5rOiB7XG4gICAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXNlbWktYm9sZCddLFxuICAgIGZvbnRTaXplOiAxNCxcbiAgICBjb2xvcjogY29sb3IuYnJhbmRfc2Vjb25kYXJ5X2RlZmF1bHQsXG4gIH0sXG4gIGN1cnJlbnRVbml0OiB7XG4gICAgbWFyZ2luVG9wOiAxMCxcbiAgICBmb250U2l6ZTogMTQsXG4gIH0sXG4gIGNvbEJ1dHRvbjoge1xuICAgIHBhZGRpbmdUb3A6IDIwLFxuICAgIHBhZGRpbmdMZWZ0OiAyMCxcbiAgICBwYWRkaW5nQm90dG9tOiAyMCxcbiAgICB3aWR0aDogNDAsXG4gIH0sXG4gIHBhcnRpY2lwYW50VHlwZUNlbGw6IHtcbiAgICBmb250U2l6ZTogMTQsXG4gIH0sXG4gIGxlYXZlQnV0dG9uOiB7XG4gICAgZm9udFNpemU6IDE0LFxuICB9LFxufTtcblxuLy8gU2V0dGluZ3MgZm9yIFdyYXBwZWRTb3J0YWJsZVxuZXhwb3J0IGNvbnN0IHNvcnRhYmxlT3B0aW9ucyA9IHtcbiAgLy8gRGltIGluYWN0aXZlIHNvcnRpbmcgaWNvbnMgaW4gdGhlIGNvbHVtbiBoZWFkZXJzXG4gIGRlZmF1bHQ6IHtjb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC4yICknfSxcbn07XG5cbmV4cG9ydCBjb25zdCBOQU1FX0NFTExfSU5QVVRfV0lEVEggPSAxNjA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgc29ydCBmcm9tICdzb3J0YWJ1bGFyJztcblxuaW1wb3J0IEZvbnRBd2Vzb21lIGZyb20gJy4uLy4uL2xlZ2FjeVNoYXJlZENvbXBvbmVudHMvRm9udEF3ZXNvbWUnO1xuXG4vKipcbiAqIFNvcnRhYmxlIHRyYW5zZm9ybSB0aGF0IHdyYXBzIGEgUmVhY3RhYnVsYXIgdHJhbnNmb3JtIGdlbmVyYXRlZCBieSBzb3J0LnNvcnQgc28gdGhhdFxuICogaW5zdGVhZCBvZiBhcHBseWluZyBzb3J0IGNsYXNzZXMgdG8gdGhlIGhlYWRlciBjZWxsIGl0IGFkZHMgdGhlIGFwcHJvcHJpYXRlIEZvbnRBd2Vzb21lXG4gKiBjb21wb25lbnQgdG8gdGhlIGNlbGwgY29udGVudHMuXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6IG9iamVjdFtdfSBnZXRTb3J0aW5nQ29sdW1uc1xuICogQHBhcmFtIHtmdW5jdGlvbihudW1iZXIpOiBvYmplY3R9IG9uU29ydFxuICogQHBhcmFtIHtvYmplY3R9IHN0eWxlcyAtIG9wdGlvbmFsIHN0eWxlcyB0byBhcHBseSB0byB0aGUgc29ydCBpY29ucywgaW4gc3RhdGVzIHtkZWZhdWx0LCBzb3J0QXNjLCBzb3J0RGVzY31cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgdGhlIGNvbnRhaW5lciBkaXYge2NvbnRhaW5lcn1cbiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCk6IG9iamVjdH0gYSBuZXcgY2VsbCB0cmFuc2Zvcm0gZnVuY3Rpb25cbiAqIEBzZWUgaHR0cDovL3JlYWN0YWJ1bGFyLmpzLm9yZy8jL2NvbHVtbi1kZWZpbml0aW9uL3RyYW5zZm9ybXNcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0YWJ1bGFyL3JlYWN0YWJ1bGFyL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3JlYWN0YWJ1bGFyLXNvcnQvc3JjL3NvcnQuanNcbiAqL1xuZnVuY3Rpb24gd3JhcHBlZFNvcnRhYmxlKGdldFNvcnRpbmdDb2x1bW5zLCBvblNvcnQsIHN0eWxlcyA9IHt9KSB7XG4gIGNvbnN0IGJhc2ljU29ydGFibGUgPSBzb3J0LnNvcnQoe2dldFNvcnRpbmdDb2x1bW5zLCBvblNvcnR9KTtcblxuICByZXR1cm4gKGxhYmVsLCBjb2x1bW5JbmZvKSA9PiB7XG4gICAgY29uc3Qge2NsYXNzTmFtZTogbmV3Q2xhc3NOYW1lLCAuLi5uZXdQcm9wc30gPSBiYXNpY1NvcnRhYmxlKFxuICAgICAgbGFiZWwsXG4gICAgICBjb2x1bW5JbmZvXG4gICAgKTtcblxuICAgIC8vIERldGVjdCBuZXcgY2xhc3NlcyBhcHBsaWVkIGJ5IHNvcnQgdHJhbnNmb3JtOiBzb3J0LW5vbmUsIHNvcnQtYXNjLCBzb3J0LWRlc2NcbiAgICAvLyBJbnN0ZWFkIG9mIGFwcGx5aW5nIHRob3NlIGNsYXNzZXMsIGFkZCBkaWZmZXJlbnQgRm9udEF3ZXNvbWUgaWNvbnNcbiAgICBsZXQgc29ydEljb24gPSAoXG4gICAgICA8Rm9udEF3ZXNvbWUgaWNvbj1cInNvcnRcIiBjbGFzc05hbWU9XCJmYS1md1wiIHN0eWxlPXtzdHlsZXMuZGVmYXVsdH0gLz5cbiAgICApO1xuICAgIGlmICgvc29ydC1hc2MvLnRlc3QobmV3Q2xhc3NOYW1lKSkge1xuICAgICAgc29ydEljb24gPSAoXG4gICAgICAgIDxGb250QXdlc29tZSBpY29uPVwic29ydC1hc2NcIiBjbGFzc05hbWU9XCJmYS1md1wiIHN0eWxlPXtzdHlsZXMuc29ydEFzY30gLz5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICgvc29ydC1kZXNjLy50ZXN0KG5ld0NsYXNzTmFtZSkpIHtcbiAgICAgIHNvcnRJY29uID0gKFxuICAgICAgICA8Rm9udEF3ZXNvbWVcbiAgICAgICAgICBpY29uPVwic29ydC1kZXNjXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJmYS1md1wiXG4gICAgICAgICAgc3R5bGU9e3N0eWxlcy5zb3J0RGVzY31cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gRGlzYWJsZSB3cmFwcGluZyBvbiB0aGUgc29ydGluZyBpY29uIHRvIGVuc3VyZSB0aGF0IHRoZSBoZWFkZXIgd2lsbFxuICAgIC8vIG5ldmVyIHdyYXAgc3VjaCB0aGF0IHRoZSBzb3J0aW5nIGljb24gaXMgb24gYSByb3cgYWxsIG9uIGl0cyBvd24uXG4gICAgLy9cbiAgICAvLyBOb3RlIHRoYXQgd2UgY291bGQgYXBwbHkgdGhpcyBzdHlsZSB0byB0aGUgd2hvbGUgaGVhZGVyIGNlbGwsIGJ1dCB0aGF0XG4gICAgLy8gd291bGQgcHJldmVudCBhbnkgd3JhcHBpbmcgZnJvbSBoYXBwZW5pbmcgYXQgYWxsOyBiZWNhdXNlIHdlIHdhbnQgdG9cbiAgICAvLyBhbGxvdyBmb3IgdGhlIHBvc3NpYmlsaXR5IG9mIGxvbmcgaGVhZGVyIG5hbWVzIHRoYXQgX3Nob3VsZF8gd3JhcCwgdGhpc1xuICAgIC8vIHByb3ZpZGVzIGEgbmljZSBjb21wcm9taXNlLlxuICAgIGNvbnN0IHNvcnRJY29uU3BhblN0eWxlID0ge3doaXRlU3BhY2U6ICdub3dyYXAnfTtcblxuICAgIHJldHVybiB7XG4gICAgICAuLi5uZXdQcm9wcyxcbiAgICAgIHN0eWxlOiBPYmplY3QuYXNzaWduKHt9LCB7Y3Vyc29yOiAncG9pbnRlcid9KSxcbiAgICAgIGNoaWxkcmVuOiAoXG4gICAgICAgIDxzcGFuIHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgICAgICA8c3BhbiBrZXk9XCJpY29uXCIgc3R5bGU9e3NvcnRJY29uU3BhblN0eWxlfT5cbiAgICAgICAgICAgIHtzb3J0SWNvbn1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPHNwYW4ga2V5PVwibGFiZWxcIj57bGFiZWx9PC9zcGFuPlxuICAgICAgICA8L3NwYW4+XG4gICAgICApLFxuICAgIH07XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCB3cmFwcGVkU29ydGFibGU7XG4iLCJ2YXIgYmFzZUZvck93biA9IHJlcXVpcmUoJy4vX2Jhc2VGb3JPd24nKSxcbiAgICBjcmVhdGVCYXNlRWFjaCA9IHJlcXVpcmUoJy4vX2NyZWF0ZUJhc2VFYWNoJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yRWFjaGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuXG4gKi9cbnZhciBiYXNlRWFjaCA9IGNyZWF0ZUJhc2VFYWNoKGJhc2VGb3JPd24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VFYWNoO1xuIiwidmFyIGJhc2VFYWNoID0gcmVxdWlyZSgnLi9fYmFzZUVhY2gnKSxcbiAgICBpc0FycmF5TGlrZSA9IHJlcXVpcmUoJy4vaXNBcnJheUxpa2UnKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5tYXBgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYmFzZU1hcChjb2xsZWN0aW9uLCBpdGVyYXRlZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IGlzQXJyYXlMaWtlKGNvbGxlY3Rpb24pID8gQXJyYXkoY29sbGVjdGlvbi5sZW5ndGgpIDogW107XG5cbiAgYmFzZUVhY2goY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGtleSwgY29sbGVjdGlvbikge1xuICAgIHJlc3VsdFsrK2luZGV4XSA9IGl0ZXJhdGVlKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24pO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlTWFwO1xuIiwidmFyIGFycmF5TWFwID0gcmVxdWlyZSgnLi9fYXJyYXlNYXAnKSxcbiAgICBiYXNlR2V0ID0gcmVxdWlyZSgnLi9fYmFzZUdldCcpLFxuICAgIGJhc2VJdGVyYXRlZSA9IHJlcXVpcmUoJy4vX2Jhc2VJdGVyYXRlZScpLFxuICAgIGJhc2VNYXAgPSByZXF1aXJlKCcuL19iYXNlTWFwJyksXG4gICAgYmFzZVNvcnRCeSA9IHJlcXVpcmUoJy4vX2Jhc2VTb3J0QnknKSxcbiAgICBiYXNlVW5hcnkgPSByZXF1aXJlKCcuL19iYXNlVW5hcnknKSxcbiAgICBjb21wYXJlTXVsdGlwbGUgPSByZXF1aXJlKCcuL19jb21wYXJlTXVsdGlwbGUnKSxcbiAgICBpZGVudGl0eSA9IHJlcXVpcmUoJy4vaWRlbnRpdHknKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5Jyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ub3JkZXJCeWAgd2l0aG91dCBwYXJhbSBndWFyZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb25bXXxPYmplY3RbXXxzdHJpbmdbXX0gaXRlcmF0ZWVzIFRoZSBpdGVyYXRlZXMgdG8gc29ydCBieS5cbiAqIEBwYXJhbSB7c3RyaW5nW119IG9yZGVycyBUaGUgc29ydCBvcmRlcnMgb2YgYGl0ZXJhdGVlc2AuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBzb3J0ZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGJhc2VPcmRlckJ5KGNvbGxlY3Rpb24sIGl0ZXJhdGVlcywgb3JkZXJzKSB7XG4gIGlmIChpdGVyYXRlZXMubGVuZ3RoKSB7XG4gICAgaXRlcmF0ZWVzID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBmdW5jdGlvbihpdGVyYXRlZSkge1xuICAgICAgaWYgKGlzQXJyYXkoaXRlcmF0ZWUpKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBiYXNlR2V0KHZhbHVlLCBpdGVyYXRlZS5sZW5ndGggPT09IDEgPyBpdGVyYXRlZVswXSA6IGl0ZXJhdGVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGl0ZXJhdGVlO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGl0ZXJhdGVlcyA9IFtpZGVudGl0eV07XG4gIH1cblxuICB2YXIgaW5kZXggPSAtMTtcbiAgaXRlcmF0ZWVzID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBiYXNlVW5hcnkoYmFzZUl0ZXJhdGVlKSk7XG5cbiAgdmFyIHJlc3VsdCA9IGJhc2VNYXAoY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGtleSwgY29sbGVjdGlvbikge1xuICAgIHZhciBjcml0ZXJpYSA9IGFycmF5TWFwKGl0ZXJhdGVlcywgZnVuY3Rpb24oaXRlcmF0ZWUpIHtcbiAgICAgIHJldHVybiBpdGVyYXRlZSh2YWx1ZSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHsgJ2NyaXRlcmlhJzogY3JpdGVyaWEsICdpbmRleCc6ICsraW5kZXgsICd2YWx1ZSc6IHZhbHVlIH07XG4gIH0pO1xuXG4gIHJldHVybiBiYXNlU29ydEJ5KHJlc3VsdCwgZnVuY3Rpb24ob2JqZWN0LCBvdGhlcikge1xuICAgIHJldHVybiBjb21wYXJlTXVsdGlwbGUob2JqZWN0LCBvdGhlciwgb3JkZXJzKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZU9yZGVyQnk7XG4iLCIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnNvcnRCeWAgd2hpY2ggdXNlcyBgY29tcGFyZXJgIHRvIGRlZmluZSB0aGVcbiAqIHNvcnQgb3JkZXIgb2YgYGFycmF5YCBhbmQgcmVwbGFjZXMgY3JpdGVyaWEgb2JqZWN0cyB3aXRoIHRoZWlyIGNvcnJlc3BvbmRpbmdcbiAqIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHNvcnQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wYXJlciBUaGUgZnVuY3Rpb24gdG8gZGVmaW5lIHNvcnQgb3JkZXIuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYmFzZVNvcnRCeShhcnJheSwgY29tcGFyZXIpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblxuICBhcnJheS5zb3J0KGNvbXBhcmVyKTtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgYXJyYXlbbGVuZ3RoXSA9IGFycmF5W2xlbmd0aF0udmFsdWU7XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VTb3J0Qnk7XG4iLCJ2YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKlxuICogQ29tcGFyZXMgdmFsdWVzIHRvIHNvcnQgdGhlbSBpbiBhc2NlbmRpbmcgb3JkZXIuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgc29ydCBvcmRlciBpbmRpY2F0b3IgZm9yIGB2YWx1ZWAuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVBc2NlbmRpbmcodmFsdWUsIG90aGVyKSB7XG4gIGlmICh2YWx1ZSAhPT0gb3RoZXIpIHtcbiAgICB2YXIgdmFsSXNEZWZpbmVkID0gdmFsdWUgIT09IHVuZGVmaW5lZCxcbiAgICAgICAgdmFsSXNOdWxsID0gdmFsdWUgPT09IG51bGwsXG4gICAgICAgIHZhbElzUmVmbGV4aXZlID0gdmFsdWUgPT09IHZhbHVlLFxuICAgICAgICB2YWxJc1N5bWJvbCA9IGlzU3ltYm9sKHZhbHVlKTtcblxuICAgIHZhciBvdGhJc0RlZmluZWQgPSBvdGhlciAhPT0gdW5kZWZpbmVkLFxuICAgICAgICBvdGhJc051bGwgPSBvdGhlciA9PT0gbnVsbCxcbiAgICAgICAgb3RoSXNSZWZsZXhpdmUgPSBvdGhlciA9PT0gb3RoZXIsXG4gICAgICAgIG90aElzU3ltYm9sID0gaXNTeW1ib2wob3RoZXIpO1xuXG4gICAgaWYgKCghb3RoSXNOdWxsICYmICFvdGhJc1N5bWJvbCAmJiAhdmFsSXNTeW1ib2wgJiYgdmFsdWUgPiBvdGhlcikgfHxcbiAgICAgICAgKHZhbElzU3ltYm9sICYmIG90aElzRGVmaW5lZCAmJiBvdGhJc1JlZmxleGl2ZSAmJiAhb3RoSXNOdWxsICYmICFvdGhJc1N5bWJvbCkgfHxcbiAgICAgICAgKHZhbElzTnVsbCAmJiBvdGhJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICghdmFsSXNEZWZpbmVkICYmIG90aElzUmVmbGV4aXZlKSB8fFxuICAgICAgICAhdmFsSXNSZWZsZXhpdmUpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICBpZiAoKCF2YWxJc051bGwgJiYgIXZhbElzU3ltYm9sICYmICFvdGhJc1N5bWJvbCAmJiB2YWx1ZSA8IG90aGVyKSB8fFxuICAgICAgICAob3RoSXNTeW1ib2wgJiYgdmFsSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlICYmICF2YWxJc051bGwgJiYgIXZhbElzU3ltYm9sKSB8fFxuICAgICAgICAob3RoSXNOdWxsICYmIHZhbElzRGVmaW5lZCAmJiB2YWxJc1JlZmxleGl2ZSkgfHxcbiAgICAgICAgKCFvdGhJc0RlZmluZWQgJiYgdmFsSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICFvdGhJc1JlZmxleGl2ZSkge1xuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgfVxuICByZXR1cm4gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb21wYXJlQXNjZW5kaW5nO1xuIiwidmFyIGNvbXBhcmVBc2NlbmRpbmcgPSByZXF1aXJlKCcuL19jb21wYXJlQXNjZW5kaW5nJyk7XG5cbi8qKlxuICogVXNlZCBieSBgXy5vcmRlckJ5YCB0byBjb21wYXJlIG11bHRpcGxlIHByb3BlcnRpZXMgb2YgYSB2YWx1ZSB0byBhbm90aGVyXG4gKiBhbmQgc3RhYmxlIHNvcnQgdGhlbS5cbiAqXG4gKiBJZiBgb3JkZXJzYCBpcyB1bnNwZWNpZmllZCwgYWxsIHZhbHVlcyBhcmUgc29ydGVkIGluIGFzY2VuZGluZyBvcmRlci4gT3RoZXJ3aXNlLFxuICogc3BlY2lmeSBhbiBvcmRlciBvZiBcImRlc2NcIiBmb3IgZGVzY2VuZGluZyBvciBcImFzY1wiIGZvciBhc2NlbmRpbmcgc29ydCBvcmRlclxuICogb2YgY29ycmVzcG9uZGluZyB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbltdfHN0cmluZ1tdfSBvcmRlcnMgVGhlIG9yZGVyIHRvIHNvcnQgYnkgZm9yIGVhY2ggcHJvcGVydHkuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBzb3J0IG9yZGVyIGluZGljYXRvciBmb3IgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVNdWx0aXBsZShvYmplY3QsIG90aGVyLCBvcmRlcnMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBvYmpDcml0ZXJpYSA9IG9iamVjdC5jcml0ZXJpYSxcbiAgICAgIG90aENyaXRlcmlhID0gb3RoZXIuY3JpdGVyaWEsXG4gICAgICBsZW5ndGggPSBvYmpDcml0ZXJpYS5sZW5ndGgsXG4gICAgICBvcmRlcnNMZW5ndGggPSBvcmRlcnMubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIHJlc3VsdCA9IGNvbXBhcmVBc2NlbmRpbmcob2JqQ3JpdGVyaWFbaW5kZXhdLCBvdGhDcml0ZXJpYVtpbmRleF0pO1xuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIGlmIChpbmRleCA+PSBvcmRlcnNMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHZhciBvcmRlciA9IG9yZGVyc1tpbmRleF07XG4gICAgICByZXR1cm4gcmVzdWx0ICogKG9yZGVyID09ICdkZXNjJyA/IC0xIDogMSk7XG4gICAgfVxuICB9XG4gIC8vIEZpeGVzIGFuIGBBcnJheSNzb3J0YCBidWcgaW4gdGhlIEpTIGVuZ2luZSBlbWJlZGRlZCBpbiBBZG9iZSBhcHBsaWNhdGlvbnNcbiAgLy8gdGhhdCBjYXVzZXMgaXQsIHVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcywgdG8gcHJvdmlkZSB0aGUgc2FtZSB2YWx1ZSBmb3JcbiAgLy8gYG9iamVjdGAgYW5kIGBvdGhlcmAuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamFzaGtlbmFzL3VuZGVyc2NvcmUvcHVsbC8xMjQ3XG4gIC8vIGZvciBtb3JlIGRldGFpbHMuXG4gIC8vXG4gIC8vIFRoaXMgYWxzbyBlbnN1cmVzIGEgc3RhYmxlIHNvcnQgaW4gVjggYW5kIG90aGVyIGVuZ2luZXMuXG4gIC8vIFNlZSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD05MCBmb3IgbW9yZSBkZXRhaWxzLlxuICByZXR1cm4gb2JqZWN0LmluZGV4IC0gb3RoZXIuaW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29tcGFyZU11bHRpcGxlO1xuIiwidmFyIGlzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBgYmFzZUVhY2hgIG9yIGBiYXNlRWFjaFJpZ2h0YCBmdW5jdGlvbi5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZWFjaEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGl0ZXJhdGUgb3ZlciBhIGNvbGxlY3Rpb24uXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtmcm9tUmlnaHRdIFNwZWNpZnkgaXRlcmF0aW5nIGZyb20gcmlnaHQgdG8gbGVmdC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJhc2UgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJhc2VFYWNoKGVhY2hGdW5jLCBmcm9tUmlnaHQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gICAgaWYgKGNvbGxlY3Rpb24gPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGNvbGxlY3Rpb247XG4gICAgfVxuICAgIGlmICghaXNBcnJheUxpa2UoY29sbGVjdGlvbikpIHtcbiAgICAgIHJldHVybiBlYWNoRnVuYyhjb2xsZWN0aW9uLCBpdGVyYXRlZSk7XG4gICAgfVxuICAgIHZhciBsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aCxcbiAgICAgICAgaW5kZXggPSBmcm9tUmlnaHQgPyBsZW5ndGggOiAtMSxcbiAgICAgICAgaXRlcmFibGUgPSBPYmplY3QoY29sbGVjdGlvbik7XG5cbiAgICB3aGlsZSAoKGZyb21SaWdodCA/IGluZGV4LS0gOiArK2luZGV4IDwgbGVuZ3RoKSkge1xuICAgICAgaWYgKGl0ZXJhdGVlKGl0ZXJhYmxlW2luZGV4XSwgaW5kZXgsIGl0ZXJhYmxlKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUJhc2VFYWNoO1xuIiwidmFyIGJhc2VPcmRlckJ5ID0gcmVxdWlyZSgnLi9fYmFzZU9yZGVyQnknKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5Jyk7XG5cbi8qKlxuICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5zb3J0QnlgIGV4Y2VwdCB0aGF0IGl0IGFsbG93cyBzcGVjaWZ5aW5nIHRoZSBzb3J0XG4gKiBvcmRlcnMgb2YgdGhlIGl0ZXJhdGVlcyB0byBzb3J0IGJ5LiBJZiBgb3JkZXJzYCBpcyB1bnNwZWNpZmllZCwgYWxsIHZhbHVlc1xuICogYXJlIHNvcnRlZCBpbiBhc2NlbmRpbmcgb3JkZXIuIE90aGVyd2lzZSwgc3BlY2lmeSBhbiBvcmRlciBvZiBcImRlc2NcIiBmb3JcbiAqIGRlc2NlbmRpbmcgb3IgXCJhc2NcIiBmb3IgYXNjZW5kaW5nIHNvcnQgb3JkZXIgb2YgY29ycmVzcG9uZGluZyB2YWx1ZXMuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7QXJyYXlbXXxGdW5jdGlvbltdfE9iamVjdFtdfHN0cmluZ1tdfSBbaXRlcmF0ZWVzPVtfLmlkZW50aXR5XV1cbiAqICBUaGUgaXRlcmF0ZWVzIHRvIHNvcnQgYnkuXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBbb3JkZXJzXSBUaGUgc29ydCBvcmRlcnMgb2YgYGl0ZXJhdGVlc2AuXG4gKiBAcGFyYW0tIHtPYmplY3R9IFtndWFyZF0gRW5hYmxlcyB1c2UgYXMgYW4gaXRlcmF0ZWUgZm9yIG1ldGhvZHMgbGlrZSBgXy5yZWR1Y2VgLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgc29ydGVkIGFycmF5LlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgdXNlcnMgPSBbXG4gKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQ4IH0sXG4gKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM0IH0sXG4gKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH0sXG4gKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM2IH1cbiAqIF07XG4gKlxuICogLy8gU29ydCBieSBgdXNlcmAgaW4gYXNjZW5kaW5nIG9yZGVyIGFuZCBieSBgYWdlYCBpbiBkZXNjZW5kaW5nIG9yZGVyLlxuICogXy5vcmRlckJ5KHVzZXJzLCBbJ3VzZXInLCAnYWdlJ10sIFsnYXNjJywgJ2Rlc2MnXSk7XG4gKiAvLyA9PiBvYmplY3RzIGZvciBbWydiYXJuZXknLCAzNl0sIFsnYmFybmV5JywgMzRdLCBbJ2ZyZWQnLCA0OF0sIFsnZnJlZCcsIDQwXV1cbiAqL1xuZnVuY3Rpb24gb3JkZXJCeShjb2xsZWN0aW9uLCBpdGVyYXRlZXMsIG9yZGVycywgZ3VhcmQpIHtcbiAgaWYgKGNvbGxlY3Rpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBpZiAoIWlzQXJyYXkoaXRlcmF0ZWVzKSkge1xuICAgIGl0ZXJhdGVlcyA9IGl0ZXJhdGVlcyA9PSBudWxsID8gW10gOiBbaXRlcmF0ZWVzXTtcbiAgfVxuICBvcmRlcnMgPSBndWFyZCA/IHVuZGVmaW5lZCA6IG9yZGVycztcbiAgaWYgKCFpc0FycmF5KG9yZGVycykpIHtcbiAgICBvcmRlcnMgPSBvcmRlcnMgPT0gbnVsbCA/IFtdIDogW29yZGVyc107XG4gIH1cbiAgcmV0dXJuIGJhc2VPcmRlckJ5KGNvbGxlY3Rpb24sIGl0ZXJhdGVlcywgb3JkZXJzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvcmRlckJ5O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFByb2plY3RzTGlzdCBmcm9tICcuL1Byb2plY3RzTGlzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBQcm9qZWN0c0xpc3QsXG59O1xuXG5jb25zdCBTVFVCX1BST0pFQ1RTX0RBVEEgPSBbXG4gIHtcbiAgICBjaGFubmVsOiAnQUJDREVGR0hJSktMTTAxMjM0JyxcbiAgICBuYW1lOiAnQW50ZWxvcGUgRnJlZXdheScsXG4gICAgc3R1ZGVudE5hbWU6ICdBbGljZScsXG4gICAgdHlwZTogJ2FwcGxhYicsXG4gICAgdXBkYXRlZEF0OiAnMjAxNi0xMi0zMVQyMzo1OTo1OS45OTktMDg6MDAnLFxuICB9LFxuICB7XG4gICAgY2hhbm5lbDogJ0FBQUFCQkJCQ0NDQ0RERERFRScsXG4gICAgbmFtZTogJ0NhdHMgYW5kIEtpdHRlbnMnLFxuICAgIHN0dWRlbnROYW1lOiAnQ2hhcmxpZScsXG4gICAgdGh1bWJuYWlsVXJsOiAnL21lZGlhL2NvbW1vbl9pbWFnZXMvc3RpY2tlcnMvY2F0LnBuZycsXG4gICAgdHlwZTogJ3dlYmxhYicsXG4gICAgdXBkYXRlZEF0OiAnMjAxNi0xMS0zMFQwMDowMDowMC4wMDEtMDg6MDAnLFxuICB9LFxuICB7XG4gICAgY2hhbm5lbDogJ05PUFFSU1RVVldYWVo1Njc4NzknLFxuICAgIG5hbWU6ICdCYXR5b3RlJyxcbiAgICBzdHVkZW50TmFtZTogJ0JvYicsXG4gICAgdGh1bWJuYWlsVXJsOiAnL21lZGlhL2NvbW1vbl9pbWFnZXMvc3RpY2tlcnMvYmF0LnBuZycsXG4gICAgdHlwZTogJ2dhbWVsYWInLFxuICAgIHVwZGF0ZWRBdDogJzIwMTctMDEtMDFUMDA6MDA6MDAuMDAxLTA4OjAwJyxcbiAgfSxcbl07XG5cbmNvbnN0IFRlbXBsYXRlID0gYXJncyA9PiAoXG4gIDxQcm9qZWN0c0xpc3RcbiAgICBwcm9qZWN0c0RhdGE9e1NUVUJfUFJPSkVDVFNfREFUQX1cbiAgICBzdHVkaW9VcmxQcmVmaXg9eydodHRwczovL3N0dWRpby5jb2RlLm9yZyd9XG4gICAgc2hvd1Byb2plY3RUaHVtYm5haWxzXG4gICAgey4uLmFyZ3N9XG4gIC8+XG4pO1xuXG5leHBvcnQgY29uc3QgV2l0aFRodW1ibmFpbHMgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcblxuZXhwb3J0IGNvbnN0IFdpdGhvdXRUaHVtYm5haWxzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5XaXRob3V0VGh1bWJuYWlscy5hcmdzID0ge1xuICBzaG93UHJvamVjdFRodW1ibmFpbHM6IGZhbHNlLFxufTtcblxuZXhwb3J0IGNvbnN0IExvY2FsaXplZFdpdGhUaHVtYm5haWxzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5Mb2NhbGl6ZWRXaXRoVGh1bWJuYWlscy5hcmdzID0ge1xuICBsb2NhbGVDb2RlOiAnZXMtTVgnLFxufTtcbiJdLCJuYW1lcyI6WyJfbG9kYXNoIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX3JlYWN0IiwiX2V4Y2x1ZGVkIiwib2JqIiwiX19lc01vZHVsZSIsIl9leHRlbmRzIiwiT2JqZWN0IiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImV4Y2x1ZGVkIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJzb3VyY2VLZXlzIiwia2V5cyIsImluZGV4T2YiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJzb3VyY2VTeW1ib2xLZXlzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJGb250QXdlc29tZSIsIl9yZWYiLCJpY29uIiwiY2xhc3NOYW1lIiwidGl0bGUiLCJwcm9wcyIsIm5ld1Byb3BzIiwiXyIsImNvbmNhdCIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiZSIsInIiLCJfdHlwZW9mIiwidCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1Iiwic2V0IiwiV2Vha01hcCIsIm8iLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwiX3NldFByb3RvdHlwZU9mIiwicCIsInNldFByb3RvdHlwZU9mIiwiU1RBVFVTIiwiTE9BRElORyIsIkxPQURFRCIsIkVSUk9SIiwiX2RlZmluZVByb3BlcnR5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsIl90b1ByaW1pdGl2ZSIsInRvUHJpbWl0aXZlIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiTnVtYmVyIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiX0NvbXBvbmVudCIsIkltYWdlV2l0aFN0YXR1cyIsIl90aGlzIiwiaGFuZGxlSW1hZ2VMb2FkIiwiaGFuZGxlSW1hZ2VFcnJvciIsInN0YXRlIiwiaW1hZ2VTdGF0dXMiLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsIl9wcm90byIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwibmV4dFByb3BzIiwidGhpcyIsInNyYyIsInNldFN0YXRlIiwicmVuZGVyIiwic3R5bGUiLCJ3cmFwcGVyU3R5bGUiLCJ3aWR0aCIsImhlaWdodCIsIm9uTG9hZCIsIm9uRXJyb3IiLCJhbHQiLCJDb21wb25lbnQiLCJudW1iZXIiLCJvYmplY3QiLCJfb3JkZXJCeSIsIlRhYmxlIiwic29ydCIsIl9sb2NhbGUiLCJfSW1hZ2VXaXRoU3RhdHVzIiwiX3RhYmxlQ29uc3RhbnRzIiwiX3dyYXBwZWRfc29ydGFibGUiLCJfcHJvamVjdFR5cGVNYXAiLCJDT0xVTU5TIiwiVEhVTUJOQUlMIiwiUFJPSkVDVF9OQU1FIiwiU1RVREVOVF9OQU1FIiwiQVBQX1RZUEUiLCJMQVNUX0VESVRFRCIsIkNPTFVNTlNfV0lUSE9VVF9USFVNQk5BSUxTIiwidHlwZUZvcm1hdHRlciIsInR5cGUiLCJQUk9KRUNUX1RZUEVfTUFQIiwidGh1bWJuYWlsRm9ybWF0dGVyIiwidGh1bWJuYWlsVXJsIiwic3R5bGVzIiwidGh1bWJuYWlsV3JhcHBlciIsIlByb2plY3RzTGlzdCIsIl9SZWFjdCRDb21wb25lbnQiLCJzb3J0aW5nQ29sdW1ucyIsInNlbGVjdGVkQ29sdW1uIiwiYnlDb2x1bW4iLCJzb3J0aW5nT3JkZXIiLCJGSVJTVCIsImFzYyIsImRlc2MiLCJuYW1lIiwicm93RGF0YSIsImVuY29kZVVSSUNvbXBvbmVudCIsImNoYW5uZWwiLCJ1cmwiLCJzdHVkaW9VcmxQcmVmaXgiLCJocmVmIiwidGFibGVMYXlvdXRTdHlsZXMiLCJsaW5rIiwicmVsIiwiZGF0ZVN0cmluZyIsIkRhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJsb2NhbGVDb2RlIiwic29ydGFibGUiLCJ0aHVtYm5haWxDb2x1bW4iLCJwcm9wZXJ0eSIsImhlYWRlciIsImhlYWRlckNlbGwiLCJjZWxsIiwiZm9ybWF0dGVycyIsInN0YW5kYXJkQ29sdW1ucyIsImxhYmVsIiwiY29tbW9uTXNnIiwicHJvamVjdE5hbWUiLCJ0cmFuc2Zvcm1zIiwibmFtZUZvcm1hdHRlciIsInN0dWRlbnROYW1lIiwicHJvamVjdFR5cGUiLCJsYXN0RWRpdGVkIiwiZGF0ZUZvcm1hdHRlciIsInNob3dQcm9qZWN0VGh1bWJuYWlscyIsInNvcnRpbmdDb2x1bW4iLCJkaXJlY3Rpb24iLCJwb3NpdGlvbiIsIndyYXBwZWRTb3J0YWJsZSIsImdldFNvcnRpbmdDb2x1bW5zIiwib25Tb3J0Iiwic29ydGFibGVPcHRpb25zIiwiY29sdW1ucyIsImdldENvbHVtbnMiLCJzb3J0ZWRSb3dzIiwic29ydGVyIiwib3JkZXJCeSIsInByb2plY3RzRGF0YSIsIlByb3ZpZGVyIiwiaWQiLCJ0YWJsZSIsIkhlYWRlciIsIkJvZHkiLCJyb3dzIiwicm93S2V5IiwiUmVhY3QiLCJhcnJheSIsImJvb2wiLCJ0aHVtYm5haWxDZWxsIiwiYm9yZGVyIiwibWluV2lkdGgiLCJwYWRkaW5nIiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsImFkYXB0YXRpb25zIiwiaTE4biIsInByb2plY3RUeXBlQWRhcHRhdGlvbnMiLCJhbGdlYnJhX2dhbWUiLCJwcm9qZWN0VHlwZUFsZ2VicmEiLCJhcHBsYWIiLCJwcm9qZWN0VHlwZUFwcGxhYiIsImFydGlzdCIsInByb2plY3RUeXBlQXJ0aXN0IiwiZWNvc3lzdGVtcyIsInByb2plY3RUeXBlRWNvc3lzdGVtcyIsImZyb3plbiIsInByb2plY3RUeXBlRnJvemVuIiwiZ3VtYmFsbCIsInByb2plY3RUeXBlR3VtYmFsbCIsImluZmluaXR5IiwicHJvamVjdFR5cGVJbmZpbml0eSIsImljZWFnZSIsInByb2plY3RUeXBlSWNlYWdlIiwibWluZWNyYWZ0X2FkdmVudHVyZXIiLCJwcm9qZWN0VHlwZU1pbmVjcmFmdCIsIm1pbmVjcmFmdF9kZXNpZ25lciIsIm1pbmVjcmFmdF9oZXJvIiwibWluZWNyYWZ0X2FxdWF0aWMiLCJnYW1lX2Rlc2lnbiIsInByb2plY3RUeXBlR2FtZURlc2lnbiIsImdhbWVsYWIiLCJwcm9qZWN0VHlwZUdhbWVsYWIiLCJwbGF5bGFiIiwicHJvamVjdFR5cGVQbGF5bGFiIiwid2VibGFiIiwicHJvamVjdFR5cGVXZWJsYWIiLCJib3VuY2UiLCJwcm9qZWN0VHlwZUJvdW5jZSIsImZsYXBweSIsInByb2plY3RUeXBlRmxhcHB5Iiwic3RhcndhcnMiLCJwcm9qZWN0VHlwZVN0YXJ3YXJzIiwic3RhcndhcnNibG9ja3MiLCJwcm9qZWN0VHlwZVN0YXJ3YXJzQmxvY2tzIiwic3BvcnRzIiwicHJvamVjdFR5cGVTcG9ydHMiLCJiYXNrZXRiYWxsIiwicHJvamVjdFR5cGVCYXNrZXRiYWxsIiwiYXJ0aXN0X2sxIiwicHJvamVjdFR5cGVBcnRpc3RQcmVSZWFkZXIiLCJwbGF5bGFiX2sxIiwicHJvamVjdFR5cGVQbGF5bGFiUHJlUmVhZGVyIiwiZXZhbCIsInByb2plY3RUeXBlRXZhbCIsImNhbGMiLCJwcm9qZWN0VHlwZUNhbGMiLCJkYW5jZSIsInByb2plY3RUeXBlRGFuY2UiLCJzcHJpdGVsYWIiLCJwcm9qZWN0VHlwZVNwcml0ZUxhYiIsImphdmFsYWIiLCJwcm9qZWN0VHlwZUphdmFsYWIiLCJtdXNpYyIsInByb2plY3RUeXBlTXVzaWMiLCJwb2V0cnkiLCJwcm9qZWN0VHlwZVBvZXRyeSIsInBvZXRyeV9ob2MiLCJweXRob25sYWIiLCJwcm9qZWN0VHlwZVB5dGhvbmxhYiIsInRoZWJhZGd1eXMiLCJwcm9qZWN0VHlwZVRoZWJhZGd1eXMiLCJzY2llbmNlIiwicHJvamVjdFR5cGVTY2llbmNlIiwic3RvcnkiLCJwcm9qZWN0VHlwZVN0b3J5IiwidGltZV9jYXBzdWxlIiwicHJvamVjdFR5cGVUaW1lQ2Fwc3VsZSIsInRyYW5zZm9ybWVycyIsInByb2plY3RUeXBlVHJhbnNmb3JtZXJzIiwicHJvamVjdFR5cGVEcmF3aW5nIiwicHJvamVjdFR5cGVFdmVudHMiLCJwcm9qZWN0VHlwZUsxIiwiX2ZvbnRDb25zdGFudHMiLCJfc3R5bGVDb25zdGFudHMiLCJfY29sb3IiLCJvd25LZXlzIiwiZmlsdGVyIiwicHVzaCIsIl9vYmplY3RTcHJlYWQiLCJmb3JFYWNoIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJ0YWJsZVRleHQiLCJ0ZXh0T3ZlcmZsb3ciLCJvdmVyZmxvdyIsIndoaXRlU3BhY2UiLCJib3JkZXJXaWR0aCIsImJvcmRlclN0eWxlIiwiYm9yZGVyQ29sb3IiLCJjb2xvciIsImJvcmRlcl9ncmF5Iiwic3R5bGVDb25zdGFudHMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0YWJsZV9saWdodF9yb3ciLCJtYXhXaWR0aCIsImJvcmRlcl9saWdodF9ncmF5IiwiZm9udFNpemUiLCJ0YWJsZV9oZWFkZXIiLCJmb250V2VpZ2h0IiwiYm9yZGVyQm90dG9tV2lkdGgiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlckxlZnRXaWR0aCIsImJvcmRlclJpZ2h0V2lkdGgiLCJwYWRkaW5nVG9wIiwicGFkZGluZ0JvdHRvbSIsImNoYXJjb2FsIiwidGV4dEFsaWduIiwiZmxleENlbGwiLCJmb250Q29uc3RhbnRzIiwidGV4dERlY29yYXRpb24iLCJ1bnNvcnRhYmxlSGVhZGVyIiwicGFkZGluZ0xlZnQiLCJ1bnNvcnRhYmxlSGVhZGVyUlRMIiwicGFkZGluZ1JpZ2h0IiwibmV1dHJhbF9kYXJrIiwic2VjdGlvbkNvZGVMaW5rIiwiYnJhbmRfc2Vjb25kYXJ5X2RlZmF1bHQiLCJjdXJyZW50VW5pdCIsIm1hcmdpblRvcCIsImNvbEJ1dHRvbiIsInBhcnRpY2lwYW50VHlwZUNlbGwiLCJsZWF2ZUJ1dHRvbiIsImRlZmF1bHQiLCJfRm9udEF3ZXNvbWUiLCJ1bmRlZmluZWQiLCJiYXNpY1NvcnRhYmxlIiwiY29sdW1uSW5mbyIsIl9iYXNpY1NvcnRhYmxlIiwibmV3Q2xhc3NOYW1lIiwic29ydEljb24iLCJ0ZXN0Iiwic29ydEFzYyIsInNvcnREZXNjIiwiY3Vyc29yIiwiY2hpbGRyZW4iLCJjb250YWluZXIiLCJiYXNlRm9yT3duIiwiYmFzZUVhY2giLCJjcmVhdGVCYXNlRWFjaCIsImlzQXJyYXlMaWtlIiwiYmFzZU1hcCIsImNvbGxlY3Rpb24iLCJpdGVyYXRlZSIsImluZGV4IiwicmVzdWx0IiwiQXJyYXkiLCJhcnJheU1hcCIsImJhc2VHZXQiLCJiYXNlSXRlcmF0ZWUiLCJiYXNlU29ydEJ5IiwiYmFzZVVuYXJ5IiwiY29tcGFyZU11bHRpcGxlIiwiaWRlbnRpdHkiLCJpc0FycmF5IiwiYmFzZU9yZGVyQnkiLCJpdGVyYXRlZXMiLCJvcmRlcnMiLCJvdGhlciIsImNvbXBhcmVyIiwiaXNTeW1ib2wiLCJjb21wYXJlQXNjZW5kaW5nIiwidmFsSXNEZWZpbmVkIiwidmFsSXNOdWxsIiwidmFsSXNSZWZsZXhpdmUiLCJ2YWxJc1N5bWJvbCIsIm90aElzRGVmaW5lZCIsIm90aElzTnVsbCIsIm90aElzUmVmbGV4aXZlIiwib3RoSXNTeW1ib2wiLCJvYmpDcml0ZXJpYSIsImNyaXRlcmlhIiwib3RoQ3JpdGVyaWEiLCJvcmRlcnNMZW5ndGgiLCJlYWNoRnVuYyIsImZyb21SaWdodCIsIml0ZXJhYmxlIiwiZ3VhcmQiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJlcnIiLCJFcnJvciIsImdldFNoaW0iLCJSZWFjdFByb3BUeXBlcyIsImZ1bmMiLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiZWxlbWVudCIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIl9Qcm9qZWN0c0xpc3QiLCJjb21wb25lbnQiLCJTVFVCX1BST0pFQ1RTX0RBVEEiLCJ1cGRhdGVkQXQiLCJUZW1wbGF0ZSIsImFyZ3MiXSwic291cmNlUm9vdCI6IiJ9