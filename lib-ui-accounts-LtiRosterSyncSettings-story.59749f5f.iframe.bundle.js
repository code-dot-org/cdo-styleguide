(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[8569],{"./generated-scripts/sharedConstants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AbuseConstants:()=>AbuseConstants,AiInteractionStatus:()=>AiInteractionStatus,AiTutorInteractionStatus:()=>AiTutorInteractionStatus,AiTutorTypes:()=>AiTutorTypes,AichatErrorType:()=>AichatErrorType,AllPublishableProjectTypes:()=>AllPublishableProjectTypes,AlwaysPublishableProjectTypes:()=>AlwaysPublishableProjectTypes,ArtistAutorunOptions:()=>ArtistAutorunOptions,CensusConstants:()=>CensusConstants,ChildAccountComplianceStates:()=>ChildAccountComplianceStates,ConditionallyPublishableProjectTypes:()=>ConditionallyPublishableProjectTypes,DanceSongManifestFilename:()=>DanceSongManifestFilename,DefaultLocale:()=>DefaultLocale,EmailLinks:()=>EmailLinks,ErrorSeverityLevels:()=>ErrorSeverityLevels,FeaturedProjectConstants:()=>FeaturedProjectConstants,FeaturedProjectStatus:()=>FeaturedProjectStatus,LevelKind:()=>LevelKind,LevelStatus:()=>LevelStatus,LmsLinks:()=>LmsLinks,PlGradeValue:()=>PlGradeValue,PostMilestoneMode:()=>PostMilestoneMode,RestrictedPublishProjectTypes:()=>RestrictedPublishProjectTypes,RubricAiEvaluationStatus:()=>RubricAiEvaluationStatus,RubricUnderstandingLevels:()=>RubricUnderstandingLevels,SectionLoginType:()=>SectionLoginType,StudentGradeLevels:()=>StudentGradeLevels,UserTypes:()=>UserTypes});const DefaultLocale="en-US",ArtistAutorunOptions={full_auto_run:"FULL_AUTO_RUN"},LevelKind={peer_review:"peer_review",assessment:"assessment",puzzle:"puzzle",unplugged:"unplugged",level:"level",stage_extras:"stage_extras"},LevelStatus={not_tried:"not_tried",submitted:"submitted",perfect:"perfect",passed:"passed",attempted:"attempted",review_accepted:"review_accepted",review_rejected:"review_rejected",dots_disabled:"dots_disabled",free_play_complete:"free_play_complete",completed_assessment:"completed_assessment"},SectionLoginType={word:"word",picture:"picture",email:"email",google_classroom:"google_classroom",clever:"clever",lti_v1:"lti_v1"},StudentGradeLevels=["K","1","2","3","4","5","6","7","8","9","10","11","12","Other"],PlGradeValue="pl",PostMilestoneMode={all:"all",successful_runs_and_final_level_only:"successful_runs_and_final_level_only",final_level_only:"final_level_only"},AlwaysPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys"],AllPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys","applab","gamelab","spritelab"],ConditionallyPublishableProjectTypes=["applab","gamelab"],AbuseConstants={ABUSE_THRESHOLD:15},ErrorSeverityLevels={WARN:2,ERROR:3,FATAL:4},RestrictedPublishProjectTypes=["spritelab"],RubricUnderstandingLevels={EXTENSIVE:3,CONVINCING:2,LIMITED:1,NONE:0},RubricAiEvaluationStatus={QUEUED:0,RUNNING:1,SUCCESS:2,FAILURE:1e3,PII_VIOLATION:1001,PROFANITY_VIOLATION:1002,REQUEST_TOO_LARGE:1003},EmailLinks={PRIVACY_POLICY_URL:"https://code.org/privacy",CONTACT_US_URL:"https://code.org/contact",TOS_URL:"https://code.org/tos",STUDENT_PRIVACY_PLEDGE_URL:"https://studentprivacypledge.org/signatories/",COMMON_SENSE_MEDIA_URL:"https://privacy.commonsense.org/evaluation/code.org",CDO_SUPPORT_MAILTO:"mailto:support@code.org"},ChildAccountComplianceStates={LOCKED_OUT:"l",REQUEST_SENT:"s",PERMISSION_GRANTED:"g"},CensusConstants={CURRENT_CENSUS_SCHOOL_YEAR:2023},DanceSongManifestFilename="songManifest2024_v2.json",AiInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",OK:"ok",UNKNOWN:"unknown"},AichatErrorType={PROFANITY_MODEL:"profanity_model",PROFANITY_USER:"profanity_user"},AiTutorInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",OK:"ok",UNKNOWN:"unknown"},AiTutorTypes={COMPILATION:"compilation",VALIDATION:"validation",GENERAL_CHAT:"general_chat"},FeaturedProjectStatus={active:"active",bookmarked:"bookmarked",archived:"archived"},FeaturedProjectConstants={MAX_REQUESTS_PER_CATEGORY:15},LmsLinks={INTEGRATION_GUIDE_URL:"https://support.code.org/hc/en-us/articles/23120014459405-Learning-Management-System-LMS-and-Single-Sign-On-SSO-Integrations-and-Support-for-Code-org",INSTALL_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621907533965-Install-Code-org-Integrations-for-your-Learning-Management-System",INSTALL_GUIDE_FOR_CANVAS_URL:"https://support.code.org/hc/en-us/articles/23123273783437-Install-the-Code-org-Integration-for-Canvas",ROSTER_SYNC_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621978654605-Sync-Rosters-with-your-Learning-Management-System",INTEGRATION_EARLY_ACCESS_URL:"https://docs.google.com/forms/d/e/1FAIpQLScjfVR4CZs8Utf5vI4mz3e1q8vdH6RNIgTUWygZXN0oovBSQg/viewform",INTEGRATION_BUG_REPORT_URL:"https://support.code.org/hc/en-us/requests/new?ticket_form_id=14998494738829&tf_23889708=lms_eaf",ADDITIONAL_FEEDBACK_URL:"https://studio.code.org/form/lms_integration_modal_feedback",SUPPORTED_METHODS_URL:"https://github.com/code-dot-org/code-dot-org/blob/staging/docs/lti-integration.md#option-2-manual-entry"},UserTypes={STUDENT:"student",TEACHER:"teacher"}},"./src/lib/ui/accounts/LtiRosterSyncSettings.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=LtiRosterSyncSettings;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_toggle=_interopRequireDefault(__webpack_require__("./src/componentLibrary/toggle/index.ts")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function LtiRosterSyncSettings(props){var enabledLabel=_locale.default.ltiSectionSyncEnabled(),disabledLabel=_locale.default.ltiSectionSyncDisabled(),settingsDescription=_locale.default.ltiSectionSyncSettingsDescription({syncDocsUrl:_sharedConstants.LmsLinks.ROSTER_SYNC_INSTRUCTIONS_URL}),_useState2=_slicedToArray((0,_react.useState)(props.ltiRosterSyncEnabled),2),enabled=_useState2[0],setEnabled=_useState2[1],_useState4=_slicedToArray((0,_react.useState)(enabled?enabledLabel:disabledLabel),2),label=_useState4[0],setLabel=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(!1),2),changed=_useState6[0],setChanged=_useState6[1];return _react.default.createElement("div",null,_react.default.createElement("hr",null),_react.default.createElement("h2",null,_locale.default.ltiSectionSyncSettingsTitle()),_react.default.createElement(_SafeMarkdown.default,{markdown:settingsDescription}),_react.default.createElement(_toggle.default,{onChange:function onChange(){setEnabled(!enabled),setLabel(label===enabledLabel?disabledLabel:enabledLabel),setChanged(!0)},checked:enabled,label,size:"s",name:"lti_roster_sync_enabled"}),_react.default.createElement("button",{type:"button",className:"btn",style:styles.button,onClick:function handleSubmit(){var eventPayload={lms_name:props.lmsName},eventName=enabled?"lti_opt_out_toggle_on":"lti_opt_out_toggle_off";_AnalyticsReporter.default.sendEvent(eventName,eventPayload,_AnalyticsConstants.PLATFORMS.STATSIG);var form=document.getElementById(props.formId);form.elements.user_lti_roster_sync_enabled.value=enabled,form.submit()},tabIndex:"0",disabled:!changed},_locale.default.ltiSectionSyncSettingsButtonText()))}var styles={button:{float:"right"}};LtiRosterSyncSettings.propTypes={ltiRosterSyncEnabled:_propTypes.default.bool.isRequired,formId:_propTypes.default.string.isRequired,lmsName:_propTypes.default.string},module.exports=exports.default},"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var rendered=(this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact).processSync(this.props.markdown).contents,markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=_redactableMarkdown.default.create().getParser().use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHTML:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"});exports.default=SafeMarkdown;module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{"use strict";function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/lib/ui/accounts/LtiRosterSyncSettings.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_LtiRosterSyncSettings=_interopRequireDefault(__webpack_require__("./src/lib/ui/accounts/LtiRosterSyncSettings.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_LtiRosterSyncSettings.default};(exports.Default=function Template(args){return _react.default.createElement(_LtiRosterSyncSettings.default,args)}.bind({})).args={ltiRosterSyncEnabled:!0,formId:""}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLXVpLWFjY291bnRzLUx0aVJvc3RlclN5bmNTZXR0aW5ncy1zdG9yeS44MTY1OTQxOC5pZnJhbWUuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiIwK0NBTU8sTUFBTUEsY0FBZ0IsUUFFaEJDLHFCQUF1QixDQUNsQyxjQUFpQixpQkFHTkMsVUFBWSxDQUN2QixZQUFlLGNBQ2YsV0FBYyxhQUNkLE9BQVUsU0FDVixVQUFhLFlBQ2IsTUFBUyxRQUNULGFBQWdCLGdCQUdMQyxZQUFjLENBQ3pCLFVBQWEsWUFDYixVQUFhLFlBQ2IsUUFBVyxVQUNYLE9BQVUsU0FDVixVQUFhLFlBQ2IsZ0JBQW1CLGtCQUNuQixnQkFBbUIsa0JBQ25CLGNBQWlCLGdCQUNqQixtQkFBc0IscUJBQ3RCLHFCQUF3Qix3QkFHYkMsaUJBQW1CLENBQzlCLEtBQVEsT0FDUixRQUFXLFVBQ1gsTUFBUyxRQUNULGlCQUFvQixtQkFDcEIsT0FBVSxTQUNWLE9BQVUsVUFHQ0MsbUJBQXFCLENBQ2hDLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsS0FDQSxLQUNBLEtBQ0EsU0FHV0MsYUFBZSxLQUVmQyxrQkFBb0IsQ0FDL0IsSUFBTyxNQUNQLHFDQUF3Qyx1Q0FDeEMsaUJBQW9CLG9CQUdUQyw4QkFBZ0MsQ0FDM0MsU0FDQSxTQUNBLFVBQ0EsVUFDQSxTQUNBLFdBQ0EsdUJBQ0EscUJBQ0EsaUJBQ0Esb0JBQ0EsV0FDQSxpQkFDQSxzQkFDQSxTQUNBLFNBQ0EsU0FDQSxhQUNBLFlBQ0EsYUFDQSxRQUNBLFNBQ0EsYUFDQSxjQUdXQywyQkFBNkIsQ0FDeEMsU0FDQSxTQUNBLFVBQ0EsVUFDQSxTQUNBLFdBQ0EsdUJBQ0EscUJBQ0EsaUJBQ0Esb0JBQ0EsV0FDQSxpQkFDQSxzQkFDQSxTQUNBLFNBQ0EsU0FDQSxhQUNBLFlBQ0EsYUFDQSxRQUNBLFNBQ0EsYUFDQSxhQUNBLFNBQ0EsVUFDQSxhQUdXQyxxQ0FBdUMsQ0FDbEQsU0FDQSxXQUdXQyxlQUFpQixD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ZUFBaUIsQ0FDbkJDLE1BQU9WLEtBQ1ByRyxLQUFNcUcsS0FDTlcsS0FBTVgsS0FDTlksT0FBUVosS0FDUmEsT0FBUWIsS0FDUm5HLE9BQVFtRyxLQUNSYyxPQUFRZCxLQUVSZSxJQUFLZixLQUNMZ0IsUUFBU1IsUUFDVFMsUUFBU2pCLEtBQ1RrQixXQUFZVixRQUNaVyxLQUFNbkIsS0FDTm9CLFNBQVVaLFFBQ1ZhLE1BQU9iLFFBQ1BjLFVBQVdkLFFBQ1hlLE1BQU9mLFFBQ1BnQixNQUFPaEIsU0FNVCxPQUhBQyxlQUFlZ0IsZUFBaUIxQixjQUNoQ1UsZUFBZS9HLFVBQVkrRyxlQUVwQkEsY0FDVCxDLCtGQ2hDRTNHLE9BQU9DLFFBQVUsb0JBQVEsd0RBQVIsRSxnRkNmbkJELE9BQU9DLFFBRm9CLDhDLDZOQ1QzQixJQUFBdEgsT0FBQUYsdUJBQUFDLG9CQUFBLGtDQUNBa1AsdUJBQUFuUCx1QkFBQUMsb0JBQUEsb0RBQTRELFNBQUFELHVCQUFBOEIsS0FBQSxPQUFBQSxLQUFBQSxJQUFBeEIsV0FBQXdCLElBQUEsU0FBQUEsSUFBQSxDQUFBMEYsUUFBQUEsUUFFN0MsQ0FDYjRILFVBQVd2TCx1QkFBQUEsVUFhTzJELFFBQUFBLFFBTkgsU0FBWDZILFNBQVdDLE1BQUksT0FBSXBQLE9BQUEsUUFBQWlGLGNBQUNnSyx1QkFBQSxRQUEwQkcsS0FBUSxFQU01Qm5ILEtBQUssQ0FBQyxJQUM5Qm1ILEtBQU8sQ0FDYjVLLHNCQUFzQixFQUN0QmlDLE9BQVEsRyIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL2dlbmVyYXRlZC1zY3JpcHRzL3NoYXJlZENvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvbGliL3VpL2FjY291bnRzL0x0aVJvc3RlclN5bmNTZXR0aW5ncy5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9TYWZlTWFya2Rvd24uanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvcGx1Z2lucy9leHRlcm5hbExpbmtzLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2xpYi91aS9hY2NvdW50cy9MdGlSb3N0ZXJTeW5jU2V0dGluZ3Muc3RvcnkuanN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG5cbi8vIFRoaXMgaXMgYSBnZW5lcmF0ZWQgZmlsZSBhbmQgU0hPVUxEIE5PVCBCRSBFRElURUQgTUFOVUFMTFkhIVxuLy8gQ29udGVudHMgYXJlIGdlbmVyYXRlZCBhcyBwYXJ0IG9mIGdydW50IGJ1aWxkXG4vLyBTb3VyY2Ugb2YgdHJ1dGggaXMgbGliL2Nkby9zaGFyZWRfY29uc3RhbnRzLnJiIGFuZCBmaWxlcyBpbiBsaWIvY2RvL3NoYXJlZF9jb25zdGFudHMvXG5cbmV4cG9ydCBjb25zdCBEZWZhdWx0TG9jYWxlID0gJ2VuLVVTJztcblxuZXhwb3J0IGNvbnN0IEFydGlzdEF1dG9ydW5PcHRpb25zID0ge1xuICBcImZ1bGxfYXV0b19ydW5cIjogXCJGVUxMX0FVVE9fUlVOXCJcbn07XG5cbmV4cG9ydCBjb25zdCBMZXZlbEtpbmQgPSB7XG4gIFwicGVlcl9yZXZpZXdcIjogXCJwZWVyX3Jldmlld1wiLFxuICBcImFzc2Vzc21lbnRcIjogXCJhc3Nlc3NtZW50XCIsXG4gIFwicHV6emxlXCI6IFwicHV6emxlXCIsXG4gIFwidW5wbHVnZ2VkXCI6IFwidW5wbHVnZ2VkXCIsXG4gIFwibGV2ZWxcIjogXCJsZXZlbFwiLFxuICBcInN0YWdlX2V4dHJhc1wiOiBcInN0YWdlX2V4dHJhc1wiXG59O1xuXG5leHBvcnQgY29uc3QgTGV2ZWxTdGF0dXMgPSB7XG4gIFwibm90X3RyaWVkXCI6IFwibm90X3RyaWVkXCIsXG4gIFwic3VibWl0dGVkXCI6IFwic3VibWl0dGVkXCIsXG4gIFwicGVyZmVjdFwiOiBcInBlcmZlY3RcIixcbiAgXCJwYXNzZWRcIjogXCJwYXNzZWRcIixcbiAgXCJhdHRlbXB0ZWRcIjogXCJhdHRlbXB0ZWRcIixcbiAgXCJyZXZpZXdfYWNjZXB0ZWRcIjogXCJyZXZpZXdfYWNjZXB0ZWRcIixcbiAgXCJyZXZpZXdfcmVqZWN0ZWRcIjogXCJyZXZpZXdfcmVqZWN0ZWRcIixcbiAgXCJkb3RzX2Rpc2FibGVkXCI6IFwiZG90c19kaXNhYmxlZFwiLFxuICBcImZyZWVfcGxheV9jb21wbGV0ZVwiOiBcImZyZWVfcGxheV9jb21wbGV0ZVwiLFxuICBcImNvbXBsZXRlZF9hc3Nlc3NtZW50XCI6IFwiY29tcGxldGVkX2Fzc2Vzc21lbnRcIlxufTtcblxuZXhwb3J0IGNvbnN0IFNlY3Rpb25Mb2dpblR5cGUgPSB7XG4gIFwid29yZFwiOiBcIndvcmRcIixcbiAgXCJwaWN0dXJlXCI6IFwicGljdHVyZVwiLFxuICBcImVtYWlsXCI6IFwiZW1haWxcIixcbiAgXCJnb29nbGVfY2xhc3Nyb29tXCI6IFwiZ29vZ2xlX2NsYXNzcm9vbVwiLFxuICBcImNsZXZlclwiOiBcImNsZXZlclwiLFxuICBcImx0aV92MVwiOiBcImx0aV92MVwiXG59O1xuXG5leHBvcnQgY29uc3QgU3R1ZGVudEdyYWRlTGV2ZWxzID0gW1xuICBcIktcIixcbiAgXCIxXCIsXG4gIFwiMlwiLFxuICBcIjNcIixcbiAgXCI0XCIsXG4gIFwiNVwiLFxuICBcIjZcIixcbiAgXCI3XCIsXG4gIFwiOFwiLFxuICBcIjlcIixcbiAgXCIxMFwiLFxuICBcIjExXCIsXG4gIFwiMTJcIixcbiAgXCJPdGhlclwiXG5dO1xuXG5leHBvcnQgY29uc3QgUGxHcmFkZVZhbHVlID0gJ3BsJztcblxuZXhwb3J0IGNvbnN0IFBvc3RNaWxlc3RvbmVNb2RlID0ge1xuICBcImFsbFwiOiBcImFsbFwiLFxuICBcInN1Y2Nlc3NmdWxfcnVuc19hbmRfZmluYWxfbGV2ZWxfb25seVwiOiBcInN1Y2Nlc3NmdWxfcnVuc19hbmRfZmluYWxfbGV2ZWxfb25seVwiLFxuICBcImZpbmFsX2xldmVsX29ubHlcIjogXCJmaW5hbF9sZXZlbF9vbmx5XCJcbn07XG5cbmV4cG9ydCBjb25zdCBBbHdheXNQdWJsaXNoYWJsZVByb2plY3RUeXBlcyA9IFtcbiAgXCJhcnRpc3RcIixcbiAgXCJmcm96ZW5cIixcbiAgXCJwbGF5bGFiXCIsXG4gIFwiZ3VtYmFsbFwiLFxuICBcImljZWFnZVwiLFxuICBcImluZmluaXR5XCIsXG4gIFwibWluZWNyYWZ0X2FkdmVudHVyZXJcIixcbiAgXCJtaW5lY3JhZnRfZGVzaWduZXJcIixcbiAgXCJtaW5lY3JhZnRfaGVyb1wiLFxuICBcIm1pbmVjcmFmdF9hcXVhdGljXCIsXG4gIFwic3RhcndhcnNcIixcbiAgXCJzdGFyd2Fyc2Jsb2Nrc1wiLFxuICBcInN0YXJ3YXJzYmxvY2tzX2hvdXJcIixcbiAgXCJmbGFwcHlcIixcbiAgXCJib3VuY2VcIixcbiAgXCJzcG9ydHNcIixcbiAgXCJiYXNrZXRiYWxsXCIsXG4gIFwiYXJ0aXN0X2sxXCIsXG4gIFwicGxheWxhYl9rMVwiLFxuICBcImRhbmNlXCIsXG4gIFwicG9ldHJ5XCIsXG4gIFwicG9ldHJ5X2hvY1wiLFxuICBcInRoZWJhZGd1eXNcIlxuXTtcblxuZXhwb3J0IGNvbnN0IEFsbFB1Ymxpc2hhYmxlUHJvamVjdFR5cGVzID0gW1xuICBcImFydGlzdFwiLFxuICBcImZyb3plblwiLFxuICBcInBsYXlsYWJcIixcbiAgXCJndW1iYWxsXCIsXG4gIFwiaWNlYWdlXCIsXG4gIFwiaW5maW5pdHlcIixcbiAgXCJtaW5lY3JhZnRfYWR2ZW50dXJlclwiLFxuICBcIm1pbmVjcmFmdF9kZXNpZ25lclwiLFxuICBcIm1pbmVjcmFmdF9oZXJvXCIsXG4gIFwibWluZWNyYWZ0X2FxdWF0aWNcIixcbiAgXCJzdGFyd2Fyc1wiLFxuICBcInN0YXJ3YXJzYmxvY2tzXCIsXG4gIFwic3RhcndhcnNibG9ja3NfaG91clwiLFxuICBcImZsYXBweVwiLFxuICBcImJvdW5jZVwiLFxuICBcInNwb3J0c1wiLFxuICBcImJhc2tldGJhbGxcIixcbiAgXCJhcnRpc3RfazFcIixcbiAgXCJwbGF5bGFiX2sxXCIsXG4gIFwiZGFuY2VcIixcbiAgXCJwb2V0cnlcIixcbiAgXCJwb2V0cnlfaG9jXCIsXG4gIFwidGhlYmFkZ3V5c1wiLFxuICBcImFwcGxhYlwiLFxuICBcImdhbWVsYWJcIixcbiAgXCJzcHJpdGVsYWJcIlxuXTtcblxuZXhwb3J0IGNvbnN0IENvbmRpdGlvbmFsbHlQdWJsaXNoYWJsZVByb2plY3RUeXBlcyA9IFtcbiAgXCJhcHBsYWJcIixcbiAgXCJnYW1lbGFiXCJcbl07XG5cbmV4cG9ydCBjb25zdCBBYnVzZUNvbnN0YW50cyA9IHtcbiAgXCJBQlVTRV9USFJFU0hPTERcIjogMTVcbn07XG5cbmV4cG9ydCBjb25zdCBFcnJvclNldmVyaXR5TGV2ZWxzID0ge1xuICBcIldBUk5cIjogMixcbiAgXCJFUlJPUlwiOiAzLFxuICBcIkZBVEFMXCI6IDRcbn07XG5cbmV4cG9ydCBjb25zdCBSZXN0cmljdGVkUHVibGlzaFByb2plY3RUeXBlcyA9IFtcbiAgXCJzcHJpdGVsYWJcIlxuXTtcblxuZXhwb3J0IGNvbnN0IFJ1YnJpY1VuZGVyc3RhbmRpbmdMZXZlbHMgPSB7XG4gIFwiRVhURU5TSVZFXCI6IDMsXG4gIFwiQ09OVklOQ0lOR1wiOiAyLFxuICBcIkxJTUlURURcIjogMSxcbiAgXCJOT05FXCI6IDBcbn07XG5cbmV4cG9ydCBjb25zdCBSdWJyaWNBaUV2YWx1YXRpb25TdGF0dXMgPSB7XG4gIFwiUVVFVUVEXCI6IDAsXG4gIFwiUlVOTklOR1wiOiAxLFxuICBcIlNVQ0NFU1NcIjogMixcbiAgXCJGQUlMVVJFXCI6IDEwMDAsXG4gIFwiUElJX1ZJT0xBVElPTlwiOiAxMDAxLFxuICBcIlBST0ZBTklUWV9WSU9MQVRJT05cIjogMTAwMixcbiAgXCJSRVFVRVNUX1RPT19MQVJHRVwiOiAxMDAzXG59O1xuXG5leHBvcnQgY29uc3QgRW1haWxMaW5rcyA9IHtcbiAgXCJQUklWQUNZX1BPTElDWV9VUkxcIjogXCJodHRwczovL2NvZGUub3JnL3ByaXZhY3lcIixcbiAgXCJDT05UQUNUX1VTX1VSTFwiOiBcImh0dHBzOi8vY29kZS5vcmcvY29udGFjdFwiLFxuICBcIlRPU19VUkxcIjogXCJodHRwczovL2NvZGUub3JnL3Rvc1wiLFxuICBcIlNUVURFTlRfUFJJVkFDWV9QTEVER0VfVVJMXCI6IFwiaHR0cHM6Ly9zdHVkZW50cHJpdmFjeXBsZWRnZS5vcmcvc2lnbmF0b3JpZXMvXCIsXG4gIFwiQ09NTU9OX1NFTlNFX01FRElBX1VSTFwiOiBcImh0dHBzOi8vcHJpdmFjeS5jb21tb25zZW5zZS5vcmcvZXZhbHVhdGlvbi9jb2RlLm9yZ1wiLFxuICBcIkNET19TVVBQT1JUX01BSUxUT1wiOiBcIm1haWx0bzpzdXBwb3J0QGNvZGUub3JnXCJcbn07XG5cbmV4cG9ydCBjb25zdCBDaGlsZEFjY291bnRDb21wbGlhbmNlU3RhdGVzID0ge1xuICBcIkxPQ0tFRF9PVVRcIjogXCJsXCIsXG4gIFwiUkVRVUVTVF9TRU5UXCI6IFwic1wiLFxuICBcIlBFUk1JU1NJT05fR1JBTlRFRFwiOiBcImdcIlxufTtcblxuZXhwb3J0IGNvbnN0IENlbnN1c0NvbnN0YW50cyA9IHtcbiAgXCJDVVJSRU5UX0NFTlNVU19TQ0hPT0xfWUVBUlwiOiAyMDIzXG59O1xuXG5leHBvcnQgY29uc3QgRGFuY2VTb25nTWFuaWZlc3RGaWxlbmFtZSA9ICdzb25nTWFuaWZlc3QyMDI0X3YyLmpzb24nO1xuXG5leHBvcnQgY29uc3QgQWlJbnRlcmFjdGlvblN0YXR1cyA9IHtcbiAgXCJFUlJPUlwiOiBcImVycm9yXCIsXG4gIFwiUElJX1ZJT0xBVElPTlwiOiBcInBpaV92aW9sYXRpb25cIixcbiAgXCJQUk9GQU5JVFlfVklPTEFUSU9OXCI6IFwicHJvZmFuaXR5X3Zpb2xhdGlvblwiLFxuICBcIk9LXCI6IFwib2tcIixcbiAgXCJVTktOT1dOXCI6IFwidW5rbm93blwiXG59O1xuXG5leHBvcnQgY29uc3QgQWljaGF0RXJyb3JUeXBlID0ge1xuICBcIlBST0ZBTklUWV9NT0RFTFwiOiBcInByb2Zhbml0eV9tb2RlbFwiLFxuICBcIlBST0ZBTklUWV9VU0VSXCI6IFwicHJvZmFuaXR5X3VzZXJcIlxufTtcblxuZXhwb3J0IGNvbnN0IEFpVHV0b3JJbnRlcmFjdGlvblN0YXR1cyA9IHtcbiAgXCJFUlJPUlwiOiBcImVycm9yXCIsXG4gIFwiUElJX1ZJT0xBVElPTlwiOiBcInBpaV92aW9sYXRpb25cIixcbiAgXCJQUk9GQU5JVFlfVklPTEFUSU9OXCI6IFwicHJvZmFuaXR5X3Zpb2xhdGlvblwiLFxuICBcIk9LXCI6IFwib2tcIixcbiAgXCJVTktOT1dOXCI6IFwidW5rbm93blwiXG59O1xuXG5leHBvcnQgY29uc3QgQWlUdXRvclR5cGVzID0ge1xuICBcIkNPTVBJTEFUSU9OXCI6IFwiY29tcGlsYXRpb25cIixcbiAgXCJWQUxJREFUSU9OXCI6IFwidmFsaWRhdGlvblwiLFxuICBcIkdFTkVSQUxfQ0hBVFwiOiBcImdlbmVyYWxfY2hhdFwiXG59O1xuXG5leHBvcnQgY29uc3QgRmVhdHVyZWRQcm9qZWN0U3RhdHVzID0ge1xuICBcImFjdGl2ZVwiOiBcImFjdGl2ZVwiLFxuICBcImJvb2ttYXJrZWRcIjogXCJib29rbWFya2VkXCIsXG4gIFwiYXJjaGl2ZWRcIjogXCJhcmNoaXZlZFwiXG59O1xuXG5leHBvcnQgY29uc3QgRmVhdHVyZWRQcm9qZWN0Q29uc3RhbnRzID0ge1xuICBcIk1BWF9SRVFVRVNUU19QRVJfQ0FURUdPUllcIjogMTVcbn07XG5cbmV4cG9ydCBjb25zdCBMbXNMaW5rcyA9IHtcbiAgXCJJTlRFR1JBVElPTl9HVUlERV9VUkxcIjogXCJodHRwczovL3N1cHBvcnQuY29kZS5vcmcvaGMvZW4tdXMvYXJ0aWNsZXMvMjMxMjAwMTQ0NTk0MDUtTGVhcm5pbmctTWFuYWdlbWVudC1TeXN0ZW0tTE1TLWFuZC1TaW5nbGUtU2lnbi1Pbi1TU08tSW50ZWdyYXRpb25zLWFuZC1TdXBwb3J0LWZvci1Db2RlLW9yZ1wiLFxuICBcIklOU1RBTExfSU5TVFJVQ1RJT05TX1VSTFwiOiBcImh0dHBzOi8vc3VwcG9ydC5jb2RlLm9yZy9oYy9lbi11cy9hcnRpY2xlcy8yMzYyMTkwNzUzMzk2NS1JbnN0YWxsLUNvZGUtb3JnLUludGVncmF0aW9ucy1mb3IteW91ci1MZWFybmluZy1NYW5hZ2VtZW50LVN5c3RlbVwiLFxuICBcIklOU1RBTExfR1VJREVfRk9SX0NBTlZBU19VUkxcIjogXCJodHRwczovL3N1cHBvcnQuY29kZS5vcmcvaGMvZW4tdXMvYXJ0aWNsZXMvMjMxMjMyNzM3ODM0MzctSW5zdGFsbC10aGUtQ29kZS1vcmctSW50ZWdyYXRpb24tZm9yLUNhbnZhc1wiLFxuICBcIlJPU1RFUl9TWU5DX0lOU1RSVUNUSU9OU19VUkxcIjogXCJodHRwczovL3N1cHBvcnQuY29kZS5vcmcvaGMvZW4tdXMvYXJ0aWNsZXMvMjM2MjE5Nzg2NTQ2MDUtU3luYy1Sb3N0ZXJzLXdpdGgteW91ci1MZWFybmluZy1NYW5hZ2VtZW50LVN5c3RlbVwiLFxuICBcIklOVEVHUkFUSU9OX0VBUkxZX0FDQ0VTU19VUkxcIjogXCJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9mb3Jtcy9kL2UvMUZBSXBRTFNjamZWUjRDWnM4VXRmNXZJNG16M2UxcTh2ZEg2Uk5JZ1RVV3lnWlhOMG9vdkJTUWcvdmlld2Zvcm1cIixcbiAgXCJJTlRFR1JBVElPTl9CVUdfUkVQT1JUX1VSTFwiOiBcImh0dHBzOi8vc3VwcG9ydC5jb2RlLm9yZy9oYy9lbi11cy9yZXF1ZXN0cy9uZXc/dGlja2V0X2Zvcm1faWQ9MTQ5OTg0OTQ3Mzg4MjkmdGZfMjM4ODk3MDg9bG1zX2VhZlwiLFxuICBcIkFERElUSU9OQUxfRkVFREJBQ0tfVVJMXCI6IFwiaHR0cHM6Ly9zdHVkaW8uY29kZS5vcmcvZm9ybS9sbXNfaW50ZWdyYXRpb25fbW9kYWxfZmVlZGJhY2tcIixcbiAgXCJTVVBQT1JURURfTUVUSE9EU19VUkxcIjogXCJodHRwczovL2dpdGh1Yi5jb20vY29kZS1kb3Qtb3JnL2NvZGUtZG90LW9yZy9ibG9iL3N0YWdpbmcvZG9jcy9sdGktaW50ZWdyYXRpb24ubWQjb3B0aW9uLTItbWFudWFsLWVudHJ5XCJcbn07XG5cbmV4cG9ydCBjb25zdCBVc2VyVHlwZXMgPSB7XG4gIFwiU1RVREVOVFwiOiBcInN0dWRlbnRcIixcbiAgXCJURUFDSEVSXCI6IFwidGVhY2hlclwiXG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwge3VzZVN0YXRlfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5pbXBvcnQgVG9nZ2xlIGZyb20gJ0BjZG8vYXBwcy9jb21wb25lbnRMaWJyYXJ5L3RvZ2dsZSc7XG5pbXBvcnQge0xtc0xpbmtzfSBmcm9tICdAY2RvL2dlbmVyYXRlZC1zY3JpcHRzL3NoYXJlZENvbnN0YW50cyc7XG5pbXBvcnQgU2FmZU1hcmtkb3duIGZyb20gJ0BjZG8vYXBwcy90ZW1wbGF0ZXMvU2FmZU1hcmtkb3duJztcbmltcG9ydCBhbmFseXRpY3NSZXBvcnRlciBmcm9tICdAY2RvL2FwcHMvbGliL3V0aWwvQW5hbHl0aWNzUmVwb3J0ZXInO1xuaW1wb3J0IHtQTEFURk9STVN9IGZyb20gJ0BjZG8vYXBwcy9saWIvdXRpbC9BbmFseXRpY3NDb25zdGFudHMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMdGlSb3N0ZXJTeW5jU2V0dGluZ3MocHJvcHMpIHtcbiAgY29uc3QgZW5hYmxlZExhYmVsID0gaTE4bi5sdGlTZWN0aW9uU3luY0VuYWJsZWQoKTtcbiAgY29uc3QgZGlzYWJsZWRMYWJlbCA9IGkxOG4ubHRpU2VjdGlvblN5bmNEaXNhYmxlZCgpO1xuICBjb25zdCBzZXR0aW5nc0Rlc2NyaXB0aW9uID0gaTE4bi5sdGlTZWN0aW9uU3luY1NldHRpbmdzRGVzY3JpcHRpb24oe1xuICAgIHN5bmNEb2NzVXJsOiBMbXNMaW5rcy5ST1NURVJfU1lOQ19JTlNUUlVDVElPTlNfVVJMLFxuICB9KTtcbiAgY29uc3QgW2VuYWJsZWQsIHNldEVuYWJsZWRdID0gdXNlU3RhdGUocHJvcHMubHRpUm9zdGVyU3luY0VuYWJsZWQpO1xuICBjb25zdCBbbGFiZWwsIHNldExhYmVsXSA9IHVzZVN0YXRlKGVuYWJsZWQgPyBlbmFibGVkTGFiZWwgOiBkaXNhYmxlZExhYmVsKTtcbiAgY29uc3QgW2NoYW5nZWQsIHNldENoYW5nZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGhhbmRsZVN1Ym1pdCA9ICgpID0+IHtcbiAgICBjb25zdCBldmVudFBheWxvYWQgPSB7XG4gICAgICBsbXNfbmFtZTogcHJvcHMubG1zTmFtZSxcbiAgICB9O1xuICAgIGNvbnN0IGV2ZW50TmFtZSA9IGVuYWJsZWRcbiAgICAgID8gJ2x0aV9vcHRfb3V0X3RvZ2dsZV9vbidcbiAgICAgIDogJ2x0aV9vcHRfb3V0X3RvZ2dsZV9vZmYnO1xuICAgIGFuYWx5dGljc1JlcG9ydGVyLnNlbmRFdmVudChldmVudE5hbWUsIGV2ZW50UGF5bG9hZCwgUExBVEZPUk1TLlNUQVRTSUcpO1xuXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHByb3BzLmZvcm1JZCk7XG4gICAgZm9ybS5lbGVtZW50c1sndXNlcl9sdGlfcm9zdGVyX3N5bmNfZW5hYmxlZCddLnZhbHVlID0gZW5hYmxlZDtcbiAgICBmb3JtLnN1Ym1pdCgpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxociAvPlxuICAgICAgPGgyPntpMThuLmx0aVNlY3Rpb25TeW5jU2V0dGluZ3NUaXRsZSgpfTwvaDI+XG4gICAgICA8U2FmZU1hcmtkb3duIG1hcmtkb3duPXtzZXR0aW5nc0Rlc2NyaXB0aW9ufSAvPlxuICAgICAgPFRvZ2dsZVxuICAgICAgICBvbkNoYW5nZT17KCkgPT4ge1xuICAgICAgICAgIHNldEVuYWJsZWQoIWVuYWJsZWQpO1xuICAgICAgICAgIHNldExhYmVsKGxhYmVsID09PSBlbmFibGVkTGFiZWwgPyBkaXNhYmxlZExhYmVsIDogZW5hYmxlZExhYmVsKTtcbiAgICAgICAgICBzZXRDaGFuZ2VkKHRydWUpO1xuICAgICAgICB9fVxuICAgICAgICBjaGVja2VkPXtlbmFibGVkfVxuICAgICAgICBsYWJlbD17bGFiZWx9XG4gICAgICAgIHNpemU9eydzJ31cbiAgICAgICAgbmFtZT17J2x0aV9yb3N0ZXJfc3luY19lbmFibGVkJ31cbiAgICAgIC8+XG4gICAgICA8YnV0dG9uXG4gICAgICAgIHR5cGU9eydidXR0b24nfVxuICAgICAgICBjbGFzc05hbWU9eydidG4nfVxuICAgICAgICBzdHlsZT17c3R5bGVzLmJ1dHRvbn1cbiAgICAgICAgb25DbGljaz17aGFuZGxlU3VibWl0fVxuICAgICAgICB0YWJJbmRleD17JzAnfVxuICAgICAgICBkaXNhYmxlZD17IWNoYW5nZWR9XG4gICAgICA+XG4gICAgICAgIHtpMThuLmx0aVNlY3Rpb25TeW5jU2V0dGluZ3NCdXR0b25UZXh0KCl9XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBidXR0b246IHtcbiAgICBmbG9hdDogJ3JpZ2h0JyxcbiAgfSxcbn07XG5cbkx0aVJvc3RlclN5bmNTZXR0aW5ncy5wcm9wVHlwZXMgPSB7XG4gIGx0aVJvc3RlclN5bmNFbmFibGVkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBmb3JtSWQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbG1zTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFBhcnNlciBmcm9tICdAY29kZS1kb3Qtb3JnL3JlZGFjdGFibGUtbWFya2Rvd24nO1xuXG5pbXBvcnQge1xuICBkZXRhaWxzLFxuICBjbGlja2FibGVUZXh0LFxuICBleHBhbmRhYmxlSW1hZ2VzLFxuICB2aXN1YWxDb2RlQmxvY2ssXG4gIHhtbEFzVG9wTGV2ZWxCbG9jayxcbn0gZnJvbSAnQGNvZGUtZG90LW9yZy9yZW1hcmstcGx1Z2lucyc7XG5cbmltcG9ydCByZW1hcmtSZWh5cGUgZnJvbSAncmVtYXJrLXJlaHlwZSc7XG5pbXBvcnQgcmVoeXBlUmF3IGZyb20gJ3JlaHlwZS1yYXcnO1xuaW1wb3J0IHJlaHlwZVNhbml0aXplIGZyb20gJ3JlaHlwZS1zYW5pdGl6ZSc7XG5pbXBvcnQgcmVoeXBlUmVhY3QgZnJvbSAncmVoeXBlLXJlYWN0JztcbmltcG9ydCBkZWZhdWx0U2FuaXRpemF0aW9uU2NoZW1hIGZyb20gJ2hhc3QtdXRpbC1zYW5pdGl6ZS9saWIvZ2l0aHViLmpzb24nO1xuXG5pbXBvcnQgZXh0ZXJuYWxMaW5rcyBmcm9tICcuL3BsdWdpbnMvZXh0ZXJuYWxMaW5rcyc7XG5cbi8qKlxuICogQmFzaWMgY29tcG9uZW50IGZvciByZW5kZXJpbmcgYSBtYXJrZG93biBzdHJpbmcgYXMgSFRNTCwgd2l0aCBzYW5pdGl6YXRpb24uXG4gKiBDYW4gc2FmZWx5IHJlbmRlciBtYXJrZG93biBldmVuIGZyb20gdW50cnVzdGVkIHNvdXJjZXMsIHdpdGhvdXQgcG90ZW50aWFsbHlcbiAqIGV4cG9zaW5nIHVzIHRvIGFuIFhTUyBpbmplY3Rpb24uXG4gKi9cbmNsYXNzIFNhZmVNYXJrZG93biBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgbWFya2Rvd246IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBvcGVuRXh0ZXJuYWxMaW5rc0luTmV3VGFiOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIC8vIFdlIG9ubHkgb3BlbiBleHRlcm5hbCBsaW5rcyBpbiBhIG5ldyB0YWIgaWYgaXQncyBleHBsaWNpdGx5IHNwZWNpZmllZFxuICAgIC8vIHRoYXQgd2UgZG8gc287IHRoaXMgaXMgYWJzb2x1dGVseSBub3Qgc29tZXRoaW5nIHdlIHdhbnQgdG8gZG8gYXMgYVxuICAgIC8vIGdlbmVyYWwgcHJhY3RpY2UsIGJ1dCB1bmZvcnR1bmF0ZWx5IHRoZXJlIGFyZSBzb21lIHNpdHVhdGlvbnMgaW4gd2hpY2hcbiAgICAvLyBpdCBpcyBjdXJyZW50bHkgYSByZXF1aXJlbWVudC5cbiAgICBjb25zdCBwYXJzZXIgPSB0aGlzLnByb3BzLm9wZW5FeHRlcm5hbExpbmtzSW5OZXdUYWJcbiAgICAgID8gbWFya2Rvd25Ub1JlYWN0RXh0ZXJuYWxMaW5rc1xuICAgICAgOiBtYXJrZG93blRvUmVhY3Q7XG5cbiAgICBjb25zdCByZW5kZXJlZCA9IHBhcnNlci5wcm9jZXNzU3luYyh0aGlzLnByb3BzLm1hcmtkb3duKS5jb250ZW50cztcblxuICAgIGNvbnN0IG1hcmtkb3duUHJvcHMgPSB7fTtcbiAgICBpZiAodGhpcy5wcm9wcy5jbGFzc05hbWUpIHtcbiAgICAgIG1hcmtkb3duUHJvcHMuY2xhc3NOYW1lID0gdGhpcy5wcm9wcy5jbGFzc05hbWU7XG4gICAgfVxuICAgIC8vIHJlaHlwZS1yZWFjdCB3aWxsIG9ubHkgd3JhcCB0aGUgY29tcGlsZWQgbWFya2Rvd24gaW4gYSA8ZGl2PiB0YWdcbiAgICAvLyBpZiBpdCBuZWVkcyB0byAoaWUsIGlmIHRoZXJlIHdvdWxkIG90aGVyd2lzZSBiZSBtdWx0aXBsZSBlbGVtZW50c1xuICAgIC8vIHJldHVybmVkKSBvciB3ZSdyZSBhc3NpZ25pbmcgcHJvcHMuIFdlIHByZWZlciBjb25zaXN0ZW5jeSBvdmVyIGZsZXhpYmlsaXR5LFxuICAgIC8vIHNvIGhlcmUgd2Ugd3JhcCB0aGUgcmVzdWx0IGluIGEgZGl2IGlmIGl0IHdhc24ndCBhbHJlYWR5XG4gICAgaWYgKFxuICAgICAgcmVuZGVyZWQgJiZcbiAgICAgIHJlbmRlcmVkLnR5cGUgPT09ICdkaXYnICYmXG4gICAgICAhT2JqZWN0LmtleXMobWFya2Rvd25Qcm9wcykubGVuZ3RoXG4gICAgKSB7XG4gICAgICByZXR1cm4gcmVuZGVyZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiA8ZGl2IHsuLi5tYXJrZG93blByb3BzfT57cmVuZGVyZWR9PC9kaXY+O1xuICAgIH1cbiAgfVxufVxuXG4vLyBjcmVhdGUgY3VzdG9tIHNhbml0aXphdGlvbiBzY2hlbWEgYXMgcGVyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vc3ludGF4LXRyZWUvaGFzdC11dGlsLXNhbml0aXplI3NjaGVtYVxuLy8gdG8gc3VwcG9ydCBvdXIgY3VzdG9tIHN5bnRheGVzXG5jb25zdCBzY2hlbWEgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0U2FuaXRpemF0aW9uU2NoZW1hKTtcblxuLy8gV2UgdXNlIGEgX2xvdF8gb2YgaW1hZ2UgZm9ybWF0dGluZyBzdHVmZiBpbiBvdXJcbi8vIGluc3RydWN0aW9ucywgcGFydGljdWxhcmx5IGluIENTUFxuc2NoZW1hLmF0dHJpYnV0ZXMuaW1nLnB1c2goJ2hlaWdodCcsICd3aWR0aCcpO1xuXG4vLyBBZGQgc3VwcG9ydCBmb3IgZXhwYW5kYWJsZUltYWdlc1xuc2NoZW1hLnRhZ05hbWVzLnB1c2goJ3NwYW4nKTtcbnNjaGVtYS5hdHRyaWJ1dGVzLnNwYW4gPSBbJ2RhdGFVcmwnLCAnY2xhc3NOYW1lJ107XG5cbi8vIEFkZCBzdXBwb3J0IGZvciBpbmxpbmUgc3R5bGVzIChncm9zcylcbi8vIFRPRE8gcmVwbGFjZSBhbGwgaW5saW5lIHN0eWxlcyBpbiBvdXIgY3VycmljdWx1bSBjb250ZW50IHdpdGhcbi8vIHNlbWFudGljYWxseS1zaWduaWZpY2FudCBjb250ZW50XG5zY2hlbWEuYXR0cmlidXRlc1snKiddLnB1c2goJ3N0eWxlJywgJ2NsYXNzTmFtZScpO1xuXG4vLyBDbGlja2FibGVUZXh0IHVzZXMgZGF0YS1pZCBvbiBhIGJvbGQgdGFnLlxuc2NoZW1hLmF0dHJpYnV0ZXNbJ2InXSA9IFsnZGF0YUlkJ107XG5cbi8vIEFkZCBzdXBwb3J0IGZvciBCbG9ja2x5IFhNTFxuc2NoZW1hLmNsb2JiZXIgPSBbXTtcbmNvbnN0IGJsb2NrbHlUYWdzID0gW1xuICAnYmxvY2snLFxuICAnZnVuY3Rpb25hbF9pbnB1dCcsXG4gICdtdXRhdGlvbicsXG4gICduZXh0JyxcbiAgJ3N0YXRlbWVudCcsXG4gICd0aXRsZScsXG4gICdmaWVsZCcsXG4gICd2YWx1ZScsXG4gICd4bWwnLFxuXTtcbnNjaGVtYS50YWdOYW1lcyA9IHNjaGVtYS50YWdOYW1lcy5jb25jYXQoYmxvY2tseVRhZ3MpO1xubGV0IGJsb2NrbHlDb21wb25lbnRXcmFwcGVycyA9IHt9O1xuYmxvY2tseVRhZ3MuZm9yRWFjaCh0YWcgPT4ge1xuICBzY2hlbWEuYXR0cmlidXRlc1t0YWddID0gWydibG9ja190ZXh0JywgJ2lkJywgJ2lubGluZScsICduYW1lJywgJ3R5cGUnXTtcblxuICAvLyBDcmVhdGUgYSBSZWFjdCBjb21wb25lbnQgdG8gd3JhcCBlYWNoIEJsb2NrbHkgdGFnLiBTaW5jZSB0aGVzZSBlbGVtZW50cyB1bHRpbWF0ZWx5XG4gIC8vIHJlbmRlciBhcyBSZWFjdCBjb21wb25lbnRzLCBjcmVhdGluZyBhIHdyYXBwZXIgbWFrZXMgdGhlbSB2YWxpZCAod2hlcmVhcyA8eG1sPlxuICAvLyBpcyBub3QgYSB2YWxpZCBSZWFjdCB0YWcpLlxuICBibG9ja2x5Q29tcG9uZW50V3JhcHBlcnNbdGFnXSA9IGZ1bmN0aW9uIChwcm9wcykge1xuICAgIGNvbnN0IEJsb2NrbHlFbGVtZW50ID0gdGFnO1xuICAgIC8vIFRoZSBcImlzXCIgYXR0cmlidXRlIHByZXZlbnRzIFJlYWN0IGZyb20gd2FybmluZyBhYm91dCB1bnJlY29nbml6ZWQgdGFnczpcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzExMTg0I2lzc3VlY29tbWVudC0zMzU5NDI0MzlcbiAgICByZXR1cm4gPEJsb2NrbHlFbGVtZW50IGlzPXt0YWd9IHsuLi5wcm9wc30gLz47XG4gIH07XG59KTtcblxuY29uc3QgbWFya2Rvd25Ub1JlYWN0ID0gUGFyc2VyLmNyZWF0ZSgpXG4gIC5nZXRQYXJzZXIoKVxuICAvLyBpbmNsdWRlIGN1c3RvbSBwbHVnaW5zXG4gIC51c2UoW1xuICAgIGNsaWNrYWJsZVRleHQsXG4gICAgZXhwYW5kYWJsZUltYWdlcyxcbiAgICB2aXN1YWxDb2RlQmxvY2ssXG4gICAgeG1sQXNUb3BMZXZlbEJsb2NrLFxuICAgIGRldGFpbHMsXG4gIF0pXG4gIC8vIGNvbnZlcnQgbWFya2Rvd24gdG8gYW4gSFRNTCBBYnN0cmFjdCBTeW50YXggVHJlZSAoSEFTVClcbiAgLnVzZShyZW1hcmtSZWh5cGUsIHtcbiAgICAvLyBpbmNsdWRlIGFueSByYXcgSFRNTCBpbiB0aGUgbWFya2Rvd24gYXMgcmF3IEhUTUwgbm9kZXMgaW4gdGhlIEhBU1RcbiAgICBhbGxvd0Rhbmdlcm91c0hUTUw6IHRydWUsXG4gIH0pXG4gIC8vIHBhcnNlIHRoZSByYXcgSFRNTCBub2RlcyBpbiB0aGUgSEFTVCB0byBhY3R1YWwgSEFTVCBub2Rlc1xuICAudXNlKHJlaHlwZVJhdylcbiAgLy8gc2FuaXRpemUgdGhlIEhBU1RcbiAgLnVzZShyZWh5cGVTYW5pdGl6ZSwgc2NoZW1hKVxuICAvLyBjb252ZXJ0IHRoZSBIQVNUIHRvIFJlYWN0XG4gIC51c2UocmVoeXBlUmVhY3QsIHtcbiAgICBjcmVhdGVFbGVtZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50LFxuICAgIC8vIFVzZSBSZWFjdCBjb21wb25lbnQgd3JhcHBlcnMgZm9yIEJsb2NrbHkgWE1MIGVsZW1lbnRzIHRvIHByZXZlbnRcbiAgICAvLyBSZWFjdCBmcm9tIHdhcm5pbmcgdXMgYWJvdXQgaW52YWxpZCBjb21wb25lbnRzLlxuICAgIGNvbXBvbmVudHM6IGJsb2NrbHlDb21wb25lbnRXcmFwcGVycyxcbiAgfSk7XG5cbmNvbnN0IG1hcmtkb3duVG9SZWFjdEV4dGVybmFsTGlua3MgPSBtYXJrZG93blRvUmVhY3QoKS51c2UoZXh0ZXJuYWxMaW5rcywge1xuICBsaW5rczogJ2FsbCcsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgU2FmZU1hcmtkb3duO1xuIiwiLyoqXG4gKiBPcGVuIGV4dGVybmFsIGxpbmtzIGluIGEgbmV3IHRhYi5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXh0ZXJuYWxMaW5rcyhvcHRpb25zID0ge30pIHtcbiAgY29uc3QgUGFyc2VyID0gdGhpcy5QYXJzZXI7XG4gIGNvbnN0IHRva2VuaXplcnMgPSBQYXJzZXIucHJvdG90eXBlLmlubGluZVRva2VuaXplcnM7XG4gIGNvbnN0IG9yaWdpbmFsID0gdG9rZW5pemVycy5saW5rO1xuICBjb25zdCBhbGwgPSBvcHRpb25zLmxpbmtzID09PSAnYWxsJztcblxuICB0b2tlbml6ZXJzLmxpbmsgPSBmdW5jdGlvbiAoZWF0LCB2YWx1ZSwgc2lsZW50KSB7XG4gICAgY29uc3QgbGluayA9IG9yaWdpbmFsLmNhbGwodGhpcywgZWF0LCB2YWx1ZSwgc2lsZW50KTtcbiAgICBpZiAobGluayAmJiBsaW5rLnR5cGUgPT09ICdsaW5rJyAmJiAoYWxsIHx8IGlzRXh0ZXJuYWxMaW5rKGxpbmsudXJsKSkpIHtcbiAgICAgIGxpbmsuZGF0YSA9IGxpbmsuZGF0YSB8fCB7fTtcbiAgICAgIGxpbmsuZGF0YS5oUHJvcGVydGllcyA9IGxpbmsuZGF0YS5oUHJvcGVydGllcyB8fCB7fTtcblxuICAgICAgY29uc3QgcHJvcHMgPSBsaW5rLmRhdGEuaFByb3BlcnRpZXM7XG4gICAgICBwcm9wcy50YXJnZXQgPSBwcm9wcy50YXJnZXQgfHwgJ19ibGFuayc7XG4gICAgICBwcm9wcy5yZWwgPSAnbm9yZWZlcnJlciBub29wZW5lcic7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxpbms7XG4gIH07XG4gIHRva2VuaXplcnMubGluay5sb2NhdG9yID0gb3JpZ2luYWwubG9jYXRvcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRXh0ZXJuYWxMaW5rKHVybCkge1xuICByZXR1cm4gIS9odHRwcz86XFwvXFwvKFteLl0rXFwuKSpjb2RlLm9yZyg6WzAtOV0rKT9cXC8vLnRlc3QoZnVsbHlRdWFsaWZpZWQodXJsKSk7XG59XG5cbmxldCBhO1xuZnVuY3Rpb24gZnVsbHlRdWFsaWZpZWQocGF0aCkge1xuICBhID0gYSB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gIGEuaHJlZiA9IHBhdGg7XG4gIHJldHVybiBhLmhyZWY7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEx0aVJvc3RlclN5bmNTZXR0aW5ncyBmcm9tICcuL0x0aVJvc3RlclN5bmNTZXR0aW5ncyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBMdGlSb3N0ZXJTeW5jU2V0dGluZ3MsXG59O1xuXG4vL1xuLy8gVEVNUExBVEVcbi8vXG5cbmNvbnN0IFRlbXBsYXRlID0gYXJncyA9PiA8THRpUm9zdGVyU3luY1NldHRpbmdzIHsuLi5hcmdzfSAvPjtcblxuLy9cbi8vIFNUT1JJRVNcbi8vXG5cbmV4cG9ydCBjb25zdCBEZWZhdWx0ID0gVGVtcGxhdGUuYmluZCh7fSk7XG5EZWZhdWx0LmFyZ3MgPSB7XG4gIGx0aVJvc3RlclN5bmNFbmFibGVkOiB0cnVlLFxuICBmb3JtSWQ6ICcnLFxufTtcbiJdLCJuYW1lcyI6WyJEZWZhdWx0TG9jYWxlIiwiQXJ0aXN0QXV0b3J1bk9wdGlvbnMiLCJMZXZlbEtpbmQiLCJMZXZlbFN0YXR1cyIsIlNlY3Rpb25Mb2dpblR5cGUiLCJTdHVkZW50R3JhZGVMZXZlbHMiLCJQbEdyYWRlVmFsdWUiLCJQb3N0TWlsZXN0b25lTW9kZSIsIkFsd2F5c1B1Ymxpc2hhYmxlUHJvamVjdFR5cGVzIiwiQWxsUHVibGlzaGFibGVQcm9qZWN0VHlwZXMiLCJDb25kaXRpb25hbGx5UHVibGlzaGFibGVQcm9qZWN0VHlwZXMiLCJBYnVzZUNvbnN0YW50cyIsIkVycm9yU2V2ZXJpdHlMZXZlbHMiLCJSZXN0cmljdGVkUHVibGlzaFByb2plY3RUeXBlcyIsIlJ1YnJpY1VuZGVyc3RhbmRpbmdMZXZlbHMiLCJSdWJyaWNBaUV2YWx1YXRpb25TdGF0dXMiLCJFbWFpbExpbmtzIiwiQ2hpbGRBY2NvdW50Q29tcGxpYW5jZVN0YXRlcyIsIkNlbnN1c0NvbnN0YW50cyIsIkRhbmNlU29uZ01hbmlmZXN0RmlsZW5hbWUiLCJBaUludGVyYWN0aW9uU3RhdHVzIiwiQWljaGF0RXJyb3JUeXBlIiwiQWlUdXRvckludGVyYWN0aW9uU3RhdHVzIiwiQWlUdXRvclR5cGVzIiwiRmVhdHVyZWRQcm9qZWN0U3RhdHVzIiwiRmVhdHVyZWRQcm9qZWN0Q29uc3RhbnRzIiwiTG1zTGlua3MiLCJVc2VyVHlwZXMiLCJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsImUiLCJyIiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJ0IiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2xvY2FsZSIsIl90b2dnbGUiLCJfc2hhcmVkQ29uc3RhbnRzIiwiX1NhZmVNYXJrZG93biIsIl9BbmFseXRpY3NSZXBvcnRlciIsIl9BbmFseXRpY3NDb25zdGFudHMiLCJXZWFrTWFwIiwib2JqIiwiX3NsaWNlZFRvQXJyYXkiLCJhcnIiLCJfYXJyYXlXaXRoSG9sZXMiLCJBcnJheSIsImlzQXJyYXkiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJsIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJmIiwibyIsIm5leHQiLCJkb25lIiwicHVzaCIsInZhbHVlIiwibGVuZ3RoIiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJfbm9uSXRlcmFibGVSZXN0IiwiVHlwZUVycm9yIiwibGVuIiwiYXJyMiIsIkx0aVJvc3RlclN5bmNTZXR0aW5ncyIsInByb3BzIiwiZW5hYmxlZExhYmVsIiwiaTE4biIsImx0aVNlY3Rpb25TeW5jRW5hYmxlZCIsImRpc2FibGVkTGFiZWwiLCJsdGlTZWN0aW9uU3luY0Rpc2FibGVkIiwic2V0dGluZ3NEZXNjcmlwdGlvbiIsImx0aVNlY3Rpb25TeW5jU2V0dGluZ3NEZXNjcmlwdGlvbiIsInN5bmNEb2NzVXJsIiwiUk9TVEVSX1NZTkNfSU5TVFJVQ1RJT05TX1VSTCIsIl91c2VTdGF0ZTIiLCJ1c2VTdGF0ZSIsImx0aVJvc3RlclN5bmNFbmFibGVkIiwiZW5hYmxlZCIsInNldEVuYWJsZWQiLCJfdXNlU3RhdGU0IiwibGFiZWwiLCJzZXRMYWJlbCIsIl91c2VTdGF0ZTYiLCJjaGFuZ2VkIiwic2V0Q2hhbmdlZCIsImNyZWF0ZUVsZW1lbnQiLCJsdGlTZWN0aW9uU3luY1NldHRpbmdzVGl0bGUiLCJtYXJrZG93biIsIm9uQ2hhbmdlIiwiY2hlY2tlZCIsInNpemUiLCJ0eXBlIiwiY2xhc3NOYW1lIiwic3R5bGUiLCJzdHlsZXMiLCJidXR0b24iLCJvbkNsaWNrIiwiaGFuZGxlU3VibWl0IiwiZXZlbnRQYXlsb2FkIiwibG1zX25hbWUiLCJsbXNOYW1lIiwiZXZlbnROYW1lIiwiYW5hbHl0aWNzUmVwb3J0ZXIiLCJzZW5kRXZlbnQiLCJQTEFURk9STVMiLCJTVEFUU0lHIiwiZm9ybSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJmb3JtSWQiLCJlbGVtZW50cyIsInN1Ym1pdCIsInRhYkluZGV4IiwiZGlzYWJsZWQiLCJsdGlTZWN0aW9uU3luY1NldHRpbmdzQnV0dG9uVGV4dCIsImZsb2F0IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYm9vbCIsImlzUmVxdWlyZWQiLCJzdHJpbmciLCJtb2R1bGUiLCJleHBvcnRzIiwiX3JlZGFjdGFibGVNYXJrZG93biIsIl9yZW1hcmtQbHVnaW5zIiwiX3JlbWFya1JlaHlwZSIsIl9yZWh5cGVSYXciLCJfcmVoeXBlU2FuaXRpemUiLCJfcmVoeXBlUmVhY3QiLCJfZ2l0aHViIiwiX2V4dGVybmFsTGlua3MiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJhcmd1bWVudHMiLCJzb3VyY2UiLCJrZXkiLCJhcHBseSIsIl9zZXRQcm90b3R5cGVPZiIsInAiLCJzZXRQcm90b3R5cGVPZiIsIlNhZmVNYXJrZG93biIsIl9SZWFjdCRDb21wb25lbnQiLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsInJlbmRlciIsInJlbmRlcmVkIiwidGhpcyIsIm9wZW5FeHRlcm5hbExpbmtzSW5OZXdUYWIiLCJtYXJrZG93blRvUmVhY3RFeHRlcm5hbExpbmtzIiwibWFya2Rvd25Ub1JlYWN0IiwicHJvY2Vzc1N5bmMiLCJjb250ZW50cyIsIm1hcmtkb3duUHJvcHMiLCJrZXlzIiwiUmVhY3QiLCJDb21wb25lbnQiLCJfZGVmaW5lUHJvcGVydHkiLCJfdG9Qcm9wZXJ0eUtleSIsIl90b1ByaW1pdGl2ZSIsInRvUHJpbWl0aXZlIiwiU3RyaW5nIiwiTnVtYmVyIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwic2NoZW1hIiwiZGVmYXVsdFNhbml0aXphdGlvblNjaGVtYSIsImF0dHJpYnV0ZXMiLCJpbWciLCJ0YWdOYW1lcyIsInNwYW4iLCJjbG9iYmVyIiwiYmxvY2tseVRhZ3MiLCJjb25jYXQiLCJibG9ja2x5Q29tcG9uZW50V3JhcHBlcnMiLCJmb3JFYWNoIiwidGFnIiwiQmxvY2tseUVsZW1lbnQiLCJpcyIsIlBhcnNlciIsImdldFBhcnNlciIsInVzZSIsImNsaWNrYWJsZVRleHQiLCJleHBhbmRhYmxlSW1hZ2VzIiwidmlzdWFsQ29kZUJsb2NrIiwieG1sQXNUb3BMZXZlbEJsb2NrIiwiZGV0YWlscyIsInJlbWFya1JlaHlwZSIsImFsbG93RGFuZ2Vyb3VzSFRNTCIsInJlaHlwZVJhdyIsInJlaHlwZVNhbml0aXplIiwicmVoeXBlUmVhY3QiLCJjb21wb25lbnRzIiwiZXh0ZXJuYWxMaW5rcyIsImxpbmtzIiwiaXNFeHRlcm5hbExpbmsiLCJ1cmwiLCJmdWxseVF1YWxpZmllZCIsInBhdGgiLCJocmVmIiwib3B0aW9ucyIsInVuZGVmaW5lZCIsInRva2VuaXplcnMiLCJpbmxpbmVUb2tlbml6ZXJzIiwib3JpZ2luYWwiLCJsaW5rIiwiYWxsIiwiZWF0Iiwic2lsZW50IiwiZGF0YSIsImhQcm9wZXJ0aWVzIiwicmVsIiwibG9jYXRvciIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImVyciIsIkVycm9yIiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJmdW5jIiwibnVtYmVyIiwib2JqZWN0Iiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJfTHRpUm9zdGVyU3luY1NldHRpbmdzIiwiY29tcG9uZW50IiwiVGVtcGxhdGUiLCJhcmdzIl0sInNvdXJjZVJvb3QiOiIifQ==