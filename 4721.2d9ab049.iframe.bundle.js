"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[4721],{"./src/redux/unitSelectionRedux.js":(__unused_webpack_module,exports)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}Object.defineProperty(exports,"__esModule",{value:!0}),exports.asyncLoadCoursesWithProgress=exports.START_LOADING_COURSES=exports.SET_SCRIPT=exports.SET_COURSES=exports.FINISHED_LOADING_COURSES=void 0,exports.default=function unitSelection(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_COURSES){var firstCourse=action.coursesWithProgress[0],firstUnit=firstCourse?firstCourse.units[0]:null;return _objectSpread(_objectSpread({},state),{},{coursesWithProgress:action.coursesWithProgress,scriptId:null===state.scriptId?null==firstUnit?void 0:firstUnit.id:state.scriptId})}if(action.type===SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{scriptId:action.scriptId});if(action.type===START_LOADING_COURSES)return _objectSpread(_objectSpread({},state),{},{isLoadingCoursesWithProgress:!0});if(action.type===FINISHED_LOADING_COURSES)return _objectSpread(_objectSpread({},state),{},{isLoadingCoursesWithProgress:!1});return state},exports.startLoadingCoursesWithProgress=exports.setScriptId=exports.setCoursesWithProgress=exports.getSelectedScriptName=exports.getSelectedScriptFriendlyName=exports.getSelectedScriptDescription=exports.finishedLoadingCoursesWithProgress=exports.doesCurrentCourseUseFeedback=void 0;var SET_SCRIPT=exports.SET_SCRIPT="unitSelection/SET_SCRIPT",SET_COURSES=exports.SET_COURSES="unitSelection/SET_COURSES",START_LOADING_COURSES=exports.START_LOADING_COURSES="unitSelection/START_LOADING_COURSES",FINISHED_LOADING_COURSES=exports.FINISHED_LOADING_COURSES="unitSelection/FINISHED_LOADING_COURSES",setCoursesWithProgress=(exports.setScriptId=function setScriptId(scriptId){return{type:SET_SCRIPT,scriptId}},exports.setCoursesWithProgress=function setCoursesWithProgress(coursesWithProgress){return{type:SET_COURSES,coursesWithProgress}}),startLoadingCoursesWithProgress=exports.startLoadingCoursesWithProgress=function startLoadingCoursesWithProgress(){return{type:START_LOADING_COURSES}},finishedLoadingCoursesWithProgress=exports.finishedLoadingCoursesWithProgress=function finishedLoadingCoursesWithProgress(){return{type:FINISHED_LOADING_COURSES}},getSelectedUnit=function getSelectedUnit(state){var unit,scriptId=state.unitSelection.scriptId;return scriptId?(state.unitSelection.coursesWithProgress.forEach((function(course){var tempUnit=course.units.find((function(unit){return scriptId===unit.id}));tempUnit&&(unit=tempUnit)})),unit):null},initialState=(exports.getSelectedScriptName=function getSelectedScriptName(state){return getSelectedUnit(state)?getSelectedUnit(state).key:null},exports.getSelectedScriptFriendlyName=function getSelectedScriptFriendlyName(state){return getSelectedUnit(state)?getSelectedUnit(state).name:null},exports.getSelectedScriptDescription=function getSelectedScriptDescription(state){return getSelectedUnit(state)?getSelectedUnit(state).description:null},exports.doesCurrentCourseUseFeedback=function doesCurrentCourseUseFeedback(state){var _getSelectedUnit;return!(null===(_getSelectedUnit=getSelectedUnit(state))||void 0===_getSelectedUnit||!_getSelectedUnit.is_feedback_enabled)},exports.asyncLoadCoursesWithProgress=function asyncLoadCoursesWithProgress(){return function(dispatch,getState){var state=getState(),selectedSection=state.teacherSections.sections[state.teacherSections.selectedSectionId];!state.unitSelection.isLoadingCoursesWithProgress&&selectedSection&&(dispatch(startLoadingCoursesWithProgress()),fetch("/dashboardapi/section_courses/".concat(selectedSection.id),{method:"GET",headers:{"Content-Type":"application/json; charset=utf-8"}}).then((function(response){if(!response.ok)throw new Error("Error(".concat(response.status,": ").concat(response.statusText,")"));return response.json()})).then((function(coursesWithProgress){var reorderedCourses=[].concat(_toConsumableArray(coursesWithProgress.filter((function(course){return course.id!==selectedSection.course_version_id}))),_toConsumableArray(coursesWithProgress.filter((function(course){return course.id===selectedSection.course_version_id})))).reverse();dispatch(setCoursesWithProgress(reorderedCourses)),dispatch(finishedLoadingCoursesWithProgress())})).catch((function(err){console.error(err.message),dispatch(finishedLoadingCoursesWithProgress())})))}},{scriptId:null,coursesWithProgress:[],isLoadingCoursesWithProgress:!1})},"./src/templates/sectionProgress/sectionProgressConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitDataPropType=exports.tooltipIdForStudent=exports.studentTableRowType=exports.scrollbarWidth=exports.ViewType=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");exports.unitDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,csf:_propTypes.default.bool,hasStandards:_propTypes.default.bool,title:_propTypes.default.string,path:_propTypes.default.string,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({levels:_propTypes.default.arrayOf(_propTypes.default.object).isRequired})),family_name:_propTypes.default.string,version_year:_propTypes.default.string,name:_propTypes.default.string}),exports.ViewType={SUMMARY:"summary",DETAIL:"detail",STANDARDS:"standards"},exports.studentTableRowType=_propTypes.default.shape({id:_propTypes.default.string.isRequired,student:_progressTypes.studentType.isRequired,expansionIndex:_propTypes.default.number.isRequired,isExpanded:_propTypes.default.bool,useDarkBackground:_propTypes.default.bool}),exports.tooltipIdForStudent=function tooltipIdForStudent(studentId){return"tooltipIdForStudent".concat(studentId)},exports.scrollbarWidth=function getScrollbarWidth(){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var inner=document.createElement("div");outer.appendChild(inner);var scrollbarWidth=outer.offsetWidth-inner.offsetWidth;return outer.parentNode.removeChild(outer),scrollbarWidth}()},"./src/templates/sectionProgress/sectionProgressRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.collapseMetadataForStudents=exports.addExpandedLesson=exports.addDataByUnit=void 0,exports.default=function sectionProgress(){var _action$level,_action$level$subleve,state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===_unitSelectionRedux.SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:INITIAL_LESSON_OF_INTEREST});if(action.type===SET_CURRENT_VIEW)return _objectSpread(_objectSpread({},state),{},{currentView:action.viewType});if(action.type===START_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!0});if(action.type===FINISH_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!1});if(action.type===START_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!0});if(action.type===FINISH_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!1});if(action.type===SET_LESSON_OF_INTEREST)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:action.lessonOfInterest});if(action.type===ADD_DATA_BY_UNIT)return _objectSpread(_objectSpread({},state),{},{unitDataByUnit:_objectSpread(_objectSpread({},state.unitDataByUnit),action.data.unitDataByUnit),studentLevelProgressByUnit:_objectSpread(_objectSpread({},state.studentLevelProgressByUnit),action.data.studentLevelProgressByUnit),studentLessonProgressByUnit:_objectSpread(_objectSpread({},state.studentLessonProgressByUnit),action.data.studentLessonProgressByUnit),studentLastUpdateByUnit:_objectSpread(_objectSpread({},state.studentLastUpdateByUnit),action.data.studentLastUpdateByUnit)});if(action.type===LOAD_EXPANDED_LESSONS_FROM_LOCAL_STORAGE){var expandedLessonIds=getLocalStorage(action.unitId,action.sectionId);return _objectSpread(_objectSpread({},state),{},{expandedLessonIds:_objectSpread(_objectSpread({},state.expandedLessonIds),{},_defineProperty({},action.sectionId,expandedLessonIds))})}if(action.type===ADD_EXPANDED_LESSON){if(action.lesson.lockable||!(0,_progressHelpers.lessonHasLevels)(action.lesson))return state;_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_V2_LESSON_EXPAND,{sectionId:action.sectionId,lessonId:action.lesson.id});var newSectionExpandedLessonIds=_lodash.default.uniq([].concat(_toConsumableArray(state.expandedLessonIds[action.sectionId]||[]),[action.lesson.id]));return saveExpandedLessonIdsToLocalStorage(action.unitId,action.sectionId,newSectionExpandedLessonIds),_objectSpread(_objectSpread({},state),{},{expandedLessonIds:_objectSpread(_objectSpread({},state.expandedLessonIds),{},_defineProperty({},action.sectionId,newSectionExpandedLessonIds))})}if(action.type===REMOVE_EXPANDED_LESSON){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_V2_LESSON_COLLAPSE,{sectionId:action.sectionId,lessonId:action.lessonId});var _newSectionExpandedLessonIds=state.expandedLessonIds[action.sectionId].filter((function(lessonId){return lessonId!==action.lessonId}));return saveExpandedLessonIdsToLocalStorage(action.unitId,action.sectionId,_newSectionExpandedLessonIds),_objectSpread(_objectSpread({},state),{},{expandedLessonIds:_objectSpread(_objectSpread({},state.expandedLessonIds),{},_defineProperty({},action.sectionId,_newSectionExpandedLessonIds))})}if(action.type===TOGGLE_EXPANDED_CHOICE_LEVEL){if(state.expandedChoiceLevelIds.includes(action.level.id))return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_V2_COLLAPSE_CHOICE_LEVEL,{sectionId:action.sectionId,levelId:action.level.id}),_objectSpread(_objectSpread({},state),{},{expandedChoiceLevelIds:state.expandedChoiceLevelIds.filter((function(l){return l!==action.level.id}))});if((null===(_action$level=action.level)||void 0===_action$level||null===(_action$level$subleve=_action$level.sublevels)||void 0===_action$level$subleve?void 0:_action$level$subleve.length)>0)return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_V2_EXPAND_CHOICE_LEVEL,{sectionId:action.sectionId,levelId:action.level.id}),_objectSpread(_objectSpread({},state),{},{expandedChoiceLevelIds:[].concat(_toConsumableArray(state.expandedChoiceLevelIds),[action.level.id])})}if(action.type===EXPAND_METADATA_FOR_STUDENTS)return _objectSpread(_objectSpread({},state),{},{expandedMetadataStudentIds:_lodash.default.uniq([].concat(_toConsumableArray(state.expandedMetadataStudentIds),_toConsumableArray(action.studentIds)))});if(action.type===COLLAPSE_METADATA_FOR_STUDENTS)return _objectSpread(_objectSpread({},state),{},{expandedMetadataStudentIds:state.expandedMetadataStudentIds.filter((function(studentId){return!action.studentIds.includes(studentId)}))});return state},exports.toggleExpandedChoiceLevel=exports.startRefreshingProgress=exports.startLoadingProgress=exports.setLessonOfInterest=exports.setCurrentView=exports.removeExpandedLesson=exports.loadExpandedLessonsFromLocalStorage=exports.jumpToLessonDetails=exports.getCurrentUnitData=exports.finishRefreshingProgress=exports.finishLoadingProgress=exports.expandMetadataForStudents=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_unitSelectionRedux=__webpack_require__("./src/redux/unitSelectionRedux.js"),_utils=__webpack_require__("./src/utils.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_CURRENT_VIEW="sectionProgress/SET_CURRENT_VIEW",SET_LESSON_OF_INTEREST="sectionProgress/SET_LESSON_OF_INTEREST",START_LOADING_PROGRESS="sectionProgress/START_LOADING_PROGRESS",FINISH_LOADING_PROGRESS="sectionProgress/FINISH_LOADING_PROGRESS",START_REFRESHING_PROGRESS="sectionProgress/START_REFRESHING_PROGRESS",FINISH_REFRESHING_PROGRESS="sectionProgress/FINISH_REFRESHING_PROGRESS",ADD_DATA_BY_UNIT="sectionProgress/ADD_DATA_BY_UNIT",LOAD_EXPANDED_LESSONS_FROM_LOCAL_STORAGE="sectionProgress/LOAD_EXPANDED_LESSONS_FROM_LOCAL_STORAGE",ADD_EXPANDED_LESSON="sectionProgress/ADD_EXPANDED_LESSON",REMOVE_EXPANDED_LESSON="sectionProgress/REMOVE_EXPANDED_LESSON",TOGGLE_EXPANDED_CHOICE_LEVEL="sectionProgress/TOGGLE_EXPANDED_CHOICE_LEVEL",EXPAND_METADATA_FOR_STUDENTS="sectionProgress/EXPAND_METADATA_FOR_STUDENTS",COLLAPSE_METADATA_FOR_STUDENTS="sectionProgress/COLLAPSE_METADATA_FOR_STUDENTS",setLessonOfInterest=(exports.startLoadingProgress=function startLoadingProgress(){return{type:START_LOADING_PROGRESS}},exports.finishLoadingProgress=function finishLoadingProgress(){return{type:FINISH_LOADING_PROGRESS}},exports.startRefreshingProgress=function startRefreshingProgress(){return{type:START_REFRESHING_PROGRESS}},exports.finishRefreshingProgress=function finishRefreshingProgress(){return{type:FINISH_REFRESHING_PROGRESS}},exports.setLessonOfInterest=function setLessonOfInterest(lessonOfInterest){return{type:SET_LESSON_OF_INTEREST,lessonOfInterest}}),setCurrentView=exports.setCurrentView=function setCurrentView(viewType){return{type:SET_CURRENT_VIEW,viewType}},INITIAL_LESSON_OF_INTEREST=(exports.addDataByUnit=function addDataByUnit(data){return{type:ADD_DATA_BY_UNIT,data}},exports.loadExpandedLessonsFromLocalStorage=function loadExpandedLessonsFromLocalStorage(unitId,sectionId){return{type:LOAD_EXPANDED_LESSONS_FROM_LOCAL_STORAGE,unitId,sectionId}},exports.addExpandedLesson=function addExpandedLesson(unitId,sectionId,lesson){return{type:ADD_EXPANDED_LESSON,unitId,sectionId,lesson}},exports.removeExpandedLesson=function removeExpandedLesson(unitId,sectionId,lessonId){return{type:REMOVE_EXPANDED_LESSON,unitId,sectionId,lessonId}},exports.toggleExpandedChoiceLevel=function toggleExpandedChoiceLevel(sectionId,level){return{type:TOGGLE_EXPANDED_CHOICE_LEVEL,sectionId,level}},exports.expandMetadataForStudents=function expandMetadataForStudents(studentIds){return{type:EXPAND_METADATA_FOR_STUDENTS,studentIds}},exports.collapseMetadataForStudents=function collapseMetadataForStudents(studentIds){return{type:COLLAPSE_METADATA_FOR_STUDENTS,studentIds}},1),initialState={section:{},currentView:_sectionProgressConstants.ViewType.SUMMARY,unitDataByUnit:{},studentLevelProgressByUnit:{},studentLessonProgressByUnit:{},studentLastUpdateByUnit:{},lessonOfInterest:INITIAL_LESSON_OF_INTEREST,isLoadingProgress:!1,isRefreshingProgress:!1,expandedLessonIds:{},expandedChoiceLevelIds:[],expandedMetadataStudentIds:[]};exports.jumpToLessonDetails=function jumpToLessonDetails(lessonOfInterest){return function(dispatch,getState){var state=getState();dispatch(setLessonOfInterest(lessonOfInterest)),dispatch(setCurrentView(_sectionProgressConstants.ViewType.DETAIL)),_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"view_change_toggle",data_json:JSON.stringify({section_id:state.teacherSections.selectedSectionId,old_view:_sectionProgressConstants.ViewType.SUMMARY,new_view:_sectionProgressConstants.ViewType.DETAIL,script_id:state.unitSelection.scriptId})},{includeUserId:!0})}},exports.getCurrentUnitData=function getCurrentUnitData(state){return state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId]};var getExpandedLessonLocalStorageString=function getExpandedLessonLocalStorageString(unitId,sectionId){return"expandedLessonProgressV2-".concat(unitId,"-").concat(sectionId)},saveExpandedLessonIdsToLocalStorage=function saveExpandedLessonIdsToLocalStorage(unitId,sectionId,lessonIds){(0,_utils.trySetLocalStorage)(getExpandedLessonLocalStorageString(unitId,sectionId),JSON.stringify(lessonIds))},getLocalStorage=function getLocalStorage(unitId,sectionId){try{return JSON.parse((0,_utils.tryGetLocalStorage)(getExpandedLessonLocalStorageString(unitId,sectionId),[]))||[]}catch(e){return[]}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQVFDLFdBQzVDLE1BRUMsRUFFVCxDQUFFLE1BQU9rRSxHQUVQLE1BQU8sRUFDVCxDQUNGLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvcmVkdXgvdW5pdFNlbGVjdGlvblJlZHV4LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvc2VjdGlvblByb2dyZXNzL3NlY3Rpb25Qcm9ncmVzc0NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3NlY3Rpb25Qcm9ncmVzcy9zZWN0aW9uUHJvZ3Jlc3NSZWR1eC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBSZWR1Y2VyIGZvciBzY3JpcHQgc2VsZWN0aW9uIGluIHRlYWNoZXIgZGFzaGJvYXJkLlxuLy8gVGFiIHNwZWNpZmljIHJlZHVjZXJzIGNhbiBpbXBvcnQgYWN0aW9ucyBmcm9tIHRoaXMgZmlsZVxuLy8gaWYgdGhleSBuZWVkIHRvIHJlc3BvbmQgdG8gYSBzY3JpcHQgY2hhbmdpbmcuXG5cbi8vIEFjdGlvbiB0eXBlIGNvbnN0YW50c1xuZXhwb3J0IGNvbnN0IFNFVF9TQ1JJUFQgPSAndW5pdFNlbGVjdGlvbi9TRVRfU0NSSVBUJztcbmV4cG9ydCBjb25zdCBTRVRfQ09VUlNFUyA9ICd1bml0U2VsZWN0aW9uL1NFVF9DT1VSU0VTJztcblxuZXhwb3J0IGNvbnN0IFNUQVJUX0xPQURJTkdfQ09VUlNFUyA9ICd1bml0U2VsZWN0aW9uL1NUQVJUX0xPQURJTkdfQ09VUlNFUyc7XG5leHBvcnQgY29uc3QgRklOSVNIRURfTE9BRElOR19DT1VSU0VTID1cbiAgJ3VuaXRTZWxlY3Rpb24vRklOSVNIRURfTE9BRElOR19DT1VSU0VTJztcblxuLy8gQWN0aW9uIGNyZWF0b3JzXG5leHBvcnQgY29uc3Qgc2V0U2NyaXB0SWQgPSBzY3JpcHRJZCA9PiAoe3R5cGU6IFNFVF9TQ1JJUFQsIHNjcmlwdElkfSk7XG5leHBvcnQgY29uc3Qgc2V0Q291cnNlc1dpdGhQcm9ncmVzcyA9IGNvdXJzZXNXaXRoUHJvZ3Jlc3MgPT4gKHtcbiAgdHlwZTogU0VUX0NPVVJTRVMsXG4gIGNvdXJzZXNXaXRoUHJvZ3Jlc3MsXG59KTtcblxuZXhwb3J0IGNvbnN0IHN0YXJ0TG9hZGluZ0NvdXJzZXNXaXRoUHJvZ3Jlc3MgPSAoKSA9PiAoe1xuICB0eXBlOiBTVEFSVF9MT0FESU5HX0NPVVJTRVMsXG59KTtcbmV4cG9ydCBjb25zdCBmaW5pc2hlZExvYWRpbmdDb3Vyc2VzV2l0aFByb2dyZXNzID0gKCkgPT4gKHtcbiAgdHlwZTogRklOSVNIRURfTE9BRElOR19DT1VSU0VTLFxufSk7XG5cbi8vIFNlbGVjdG9yc1xuY29uc3QgZ2V0U2VsZWN0ZWRVbml0ID0gc3RhdGUgPT4ge1xuICBjb25zdCBzY3JpcHRJZCA9IHN0YXRlLnVuaXRTZWxlY3Rpb24uc2NyaXB0SWQ7XG4gIGlmICghc2NyaXB0SWQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGxldCB1bml0O1xuICBzdGF0ZS51bml0U2VsZWN0aW9uLmNvdXJzZXNXaXRoUHJvZ3Jlc3MuZm9yRWFjaChjb3Vyc2UgPT4ge1xuICAgIGNvbnN0IHRlbXBVbml0ID0gY291cnNlLnVuaXRzLmZpbmQodW5pdCA9PiBzY3JpcHRJZCA9PT0gdW5pdC5pZCk7XG4gICAgaWYgKHRlbXBVbml0KSB7XG4gICAgICB1bml0ID0gdGVtcFVuaXQ7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHVuaXQ7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0U2VsZWN0ZWRTY3JpcHROYW1lID0gc3RhdGUgPT4ge1xuICByZXR1cm4gZ2V0U2VsZWN0ZWRVbml0KHN0YXRlKSA/IGdldFNlbGVjdGVkVW5pdChzdGF0ZSkua2V5IDogbnVsbDtcbn07XG5cbi8qIEdldCB0aGUgdXNlciBmcmllbmRseSBuYW1lIG9mIGEgc2NyaXB0KHRoZSB1bml0IG9yIGNvdXJzZSBuYW1lKSAqL1xuZXhwb3J0IGNvbnN0IGdldFNlbGVjdGVkU2NyaXB0RnJpZW5kbHlOYW1lID0gc3RhdGUgPT4ge1xuICByZXR1cm4gZ2V0U2VsZWN0ZWRVbml0KHN0YXRlKSA/IGdldFNlbGVjdGVkVW5pdChzdGF0ZSkubmFtZSA6IG51bGw7XG59O1xuXG4vKiBHZXQgdGhlIGRlc2NyaXB0aW9uIG9mIGEgc2NyaXB0KHRoZSB1bml0IG9yIGNvdXJzZSBuYW1lKSAqL1xuZXhwb3J0IGNvbnN0IGdldFNlbGVjdGVkU2NyaXB0RGVzY3JpcHRpb24gPSBzdGF0ZSA9PiB7XG4gIHJldHVybiBnZXRTZWxlY3RlZFVuaXQoc3RhdGUpID8gZ2V0U2VsZWN0ZWRVbml0KHN0YXRlKS5kZXNjcmlwdGlvbiA6IG51bGw7XG59O1xuXG5leHBvcnQgY29uc3QgZG9lc0N1cnJlbnRDb3Vyc2VVc2VGZWVkYmFjayA9IHN0YXRlID0+IHtcbiAgcmV0dXJuICEhZ2V0U2VsZWN0ZWRVbml0KHN0YXRlKT8uaXNfZmVlZGJhY2tfZW5hYmxlZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhc3luY0xvYWRDb3Vyc2VzV2l0aFByb2dyZXNzID0gKCkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xuICBjb25zdCBzdGF0ZSA9IGdldFN0YXRlKCk7XG4gIGNvbnN0IHNlbGVjdGVkU2VjdGlvbiA9XG4gICAgc3RhdGUudGVhY2hlclNlY3Rpb25zLnNlY3Rpb25zW3N0YXRlLnRlYWNoZXJTZWN0aW9ucy5zZWxlY3RlZFNlY3Rpb25JZF07XG5cbiAgaWYgKHN0YXRlLnVuaXRTZWxlY3Rpb24uaXNMb2FkaW5nQ291cnNlc1dpdGhQcm9ncmVzcyB8fCAhc2VsZWN0ZWRTZWN0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZGlzcGF0Y2goc3RhcnRMb2FkaW5nQ291cnNlc1dpdGhQcm9ncmVzcygpKTtcblxuICBmZXRjaChgL2Rhc2hib2FyZGFwaS9zZWN0aW9uX2NvdXJzZXMvJHtzZWxlY3RlZFNlY3Rpb24uaWR9YCwge1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgaGVhZGVyczoge1xuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JyxcbiAgICB9LFxuICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvcigke3Jlc3BvbnNlLnN0YXR1c306ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH0pYCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSlcbiAgICAudGhlbihjb3Vyc2VzV2l0aFByb2dyZXNzID0+IHtcbiAgICAgIC8vIFJlb3JkZXIgY291cnNlc1dpdGhQcm9ncmVzcyBzbyB0aGF0IHRoZSBjdXJyZW50IHNlY3Rpb24gaXMgYXQgdGhlIHRvcCBhbmQgb3RoZXIgc2VjdGlvbnMgYXJlIGluIG9yZGVyIGZyb20gbmV3ZXN0IHRvIG9sZGVzdFxuICAgICAgY29uc3QgcmVvcmRlcmVkQ291cnNlcyA9IFtcbiAgICAgICAgLi4uY291cnNlc1dpdGhQcm9ncmVzcy5maWx0ZXIoXG4gICAgICAgICAgY291cnNlID0+IGNvdXJzZS5pZCAhPT0gc2VsZWN0ZWRTZWN0aW9uLmNvdXJzZV92ZXJzaW9uX2lkXG4gICAgICAgICksXG4gICAgICAgIC4uLmNvdXJzZXNXaXRoUHJvZ3Jlc3MuZmlsdGVyKFxuICAgICAgICAgIGNvdXJzZSA9PiBjb3Vyc2UuaWQgPT09IHNlbGVjdGVkU2VjdGlvbi5jb3Vyc2VfdmVyc2lvbl9pZFxuICAgICAgICApLFxuICAgICAgXS5yZXZlcnNlKCk7XG4gICAgICBkaXNwYXRjaChzZXRDb3Vyc2VzV2l0aFByb2dyZXNzKHJlb3JkZXJlZENvdXJzZXMpKTtcbiAgICAgIGRpc3BhdGNoKGZpbmlzaGVkTG9hZGluZ0NvdXJzZXNXaXRoUHJvZ3Jlc3MoKSk7XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyLm1lc3NhZ2UpO1xuICAgICAgZGlzcGF0Y2goZmluaXNoZWRMb2FkaW5nQ291cnNlc1dpdGhQcm9ncmVzcygpKTtcbiAgICB9KTtcbn07XG5cbi8vIEluaXRpYWwgc3RhdGUgb2YgdW5pdFNlbGVjdGlvblJlZHV4XG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gIHNjcmlwdElkOiBudWxsLFxuICBjb3Vyc2VzV2l0aFByb2dyZXNzOiBbXSxcbiAgaXNMb2FkaW5nQ291cnNlc1dpdGhQcm9ncmVzczogZmFsc2UsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1bml0U2VsZWN0aW9uKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pIHtcbiAgaWYgKGFjdGlvbi50eXBlID09PSBTRVRfQ09VUlNFUykge1xuICAgIGxldCBmaXJzdENvdXJzZSA9IGFjdGlvbi5jb3Vyc2VzV2l0aFByb2dyZXNzWzBdO1xuXG4gICAgY29uc3QgZmlyc3RVbml0ID0gZmlyc3RDb3Vyc2UgPyBmaXJzdENvdXJzZS51bml0c1swXSA6IG51bGw7XG5cbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBjb3Vyc2VzV2l0aFByb2dyZXNzOiBhY3Rpb24uY291cnNlc1dpdGhQcm9ncmVzcyxcbiAgICAgIHNjcmlwdElkOiBzdGF0ZS5zY3JpcHRJZCA9PT0gbnVsbCA/IGZpcnN0VW5pdD8uaWQgOiBzdGF0ZS5zY3JpcHRJZCxcbiAgICB9O1xuICB9XG5cbiAgaWYgKGFjdGlvbi50eXBlID09PSBTRVRfU0NSSVBUKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgc2NyaXB0SWQ6IGFjdGlvbi5zY3JpcHRJZCxcbiAgICB9O1xuICB9XG5cbiAgaWYgKGFjdGlvbi50eXBlID09PSBTVEFSVF9MT0FESU5HX0NPVVJTRVMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc0xvYWRpbmdDb3Vyc2VzV2l0aFByb2dyZXNzOiB0cnVlLFxuICAgIH07XG4gIH1cblxuICBpZiAoYWN0aW9uLnR5cGUgPT09IEZJTklTSEVEX0xPQURJTkdfQ09VUlNFUykge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIGlzTG9hZGluZ0NvdXJzZXNXaXRoUHJvZ3Jlc3M6IGZhbHNlLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4gc3RhdGU7XG59XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQge3N0dWRlbnRUeXBlfSBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL3Byb2dyZXNzL3Byb2dyZXNzVHlwZXMnO1xuXG4vKipcbiAqIFNoYXBlIGZvciB1bml0RGF0YVxuICogVGhlIGRhdGEgd2UgZ2V0IGZyb20gdGhlIHNlcnZlcidzIGNhbGwgdG8gdW5pdC5zdW1tYXJpemUuIFRoZSBmb3JtYXRcbiAqIGVuZHMgdXAgYmVpbmcgc2ltaWxhciB0byB0aGF0IHdoaWNoIHdlIHNlbmQgdG8gaW5pdFByb2dyZXNzIGluIHByb2dyZXNzUmVkdXguXG4gKiBUaGUgaW1wb3J0YW50IHBhcnQgaXMgdW5pdERhdGEubGVzc29ucywgd2hpY2ggZ2V0cyB1c2VkIGJ5IGxldmVsc1dpdGhMZXNzb25cbiAqIE5vdGU6IHVuaXQgd2FzIHByZXZpb3VzbHkgbmFtZWQgc2NyaXB0XG4gKi9cbmV4cG9ydCBjb25zdCB1bml0RGF0YVByb3BUeXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgY3NmOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGFzU3RhbmRhcmRzOiBQcm9wVHlwZXMuYm9vbCxcbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHBhdGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGxlc3NvbnM6IFByb3BUeXBlcy5hcnJheU9mKFxuICAgIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBsZXZlbHM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vYmplY3QpLmlzUmVxdWlyZWQsXG4gICAgfSlcbiAgKSxcbiAgZmFtaWx5X25hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHZlcnNpb25feWVhcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbn0pO1xuXG4vLyBUeXBlcyBvZiB2aWV3cyBvZiB0aGUgcHJvZ3Jlc3MgdGFiXG5leHBvcnQgY29uc3QgVmlld1R5cGUgPSB7XG4gIFNVTU1BUlk6ICdzdW1tYXJ5JywgLy8gbGVzc29uc1xuICBERVRBSUw6ICdkZXRhaWwnLCAvLyBsZXZlbHNcbiAgU1RBTkRBUkRTOiAnc3RhbmRhcmRzJyxcbn07XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gU3R1ZGVudFRhYmxlUm93XG4gKiBBbiBvYmplY3Qgd3JhcHBpbmcgYXJvdW5kIGBzdHVkZW50VHlwZWAgdXNlZCB0byBtYW5hZ2UgdGhlXG4gKiBleHBhbmRlZC9jb2xsYXBzZWQgc3RhdGUgb2Ygc2VjdGlvbiBwcm9ncmVzcyB0YWJsZSByb3dzLlxuICpcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpZFxuICogQHByb3BlcnR5IHtzdHVkZW50VHlwZX0gc3R1ZGVudFxuICogQHByb3BlcnR5IHtudW1iZXJ9IGV4cGFuc2lvbkluZGV4IDAgZm9yIHRoZSBwcmltYXJ5IHJvdyxcbiAqIG90aGVyd2lzZSAxLWJhc2VkIGluZGV4IG9mIGV4cGFuZGVkIHJvd1xuICogQHByb3BlcnR5IHtib29sfSBpc0V4cGFuZGVkIHVzZWQgYnkgcHJpbWFyeSByb3cgdG8gdHJhY2sgc3RhdGVcbiAqIEBwcm9wZXJ0eSB7Ym9vbH0gdXNlRGFya0JhY2tncm91bmQgdXNlZCBieSBwcmltYXJ5IHJvdyB0byBkZXRlcm1pbmUgYmFja2dyb3VuZCBjb2xvclxuICovXG5leHBvcnQgY29uc3Qgc3R1ZGVudFRhYmxlUm93VHlwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIGlkOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHN0dWRlbnQ6IHN0dWRlbnRUeXBlLmlzUmVxdWlyZWQsXG4gIGV4cGFuc2lvbkluZGV4OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGlzRXhwYW5kZWQ6IFByb3BUeXBlcy5ib29sLFxuICB1c2VEYXJrQmFja2dyb3VuZDogUHJvcFR5cGVzLmJvb2wsXG59KTtcblxuZXhwb3J0IGNvbnN0IHRvb2x0aXBJZEZvclN0dWRlbnQgPSBzdHVkZW50SWQgPT5cbiAgYHRvb2x0aXBJZEZvclN0dWRlbnQke3N0dWRlbnRJZH1gO1xuXG5leHBvcnQgY29uc3Qgc2Nyb2xsYmFyV2lkdGggPSBnZXRTY3JvbGxiYXJXaWR0aCgpO1xuXG5mdW5jdGlvbiBnZXRTY3JvbGxiYXJXaWR0aCgpIHtcbiAgLy8gQ3JlYXRpbmcgaW52aXNpYmxlIGNvbnRhaW5lclxuICBjb25zdCBvdXRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBvdXRlci5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gIG91dGVyLnN0eWxlLm92ZXJmbG93ID0gJ3Njcm9sbCc7IC8vIGZvcmNpbmcgc2Nyb2xsYmFyIHRvIGFwcGVhclxuICBvdXRlci5zdHlsZS5tc092ZXJmbG93U3R5bGUgPSAnc2Nyb2xsYmFyJzsgLy8gbmVlZGVkIGZvciBXaW5KUyBhcHBzXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQob3V0ZXIpO1xuXG4gIC8vIENyZWF0aW5nIGlubmVyIGVsZW1lbnQgYW5kIHBsYWNpbmcgaXQgaW4gdGhlIGNvbnRhaW5lclxuICBjb25zdCBpbm5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBvdXRlci5hcHBlbmRDaGlsZChpbm5lcik7XG5cbiAgLy8gQ2FsY3VsYXRpbmcgZGlmZmVyZW5jZSBiZXR3ZWVuIGNvbnRhaW5lcidzIGZ1bGwgd2lkdGggYW5kIHRoZSBjaGlsZCB3aWR0aFxuICBjb25zdCBzY3JvbGxiYXJXaWR0aCA9IG91dGVyLm9mZnNldFdpZHRoIC0gaW5uZXIub2Zmc2V0V2lkdGg7XG5cbiAgLy8gUmVtb3ZpbmcgdGVtcG9yYXJ5IGVsZW1lbnRzIGZyb20gdGhlIERPTVxuICBvdXRlci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG91dGVyKTtcblxuICByZXR1cm4gc2Nyb2xsYmFyV2lkdGg7XG59XG4iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQge0VWRU5UU30gZnJvbSAnQGNkby9hcHBzL2xpYi91dGlsL0FuYWx5dGljc0NvbnN0YW50cyc7XG5pbXBvcnQgYW5hbHl0aWNzUmVwb3J0ZXIgZnJvbSAnQGNkby9hcHBzL2xpYi91dGlsL0FuYWx5dGljc1JlcG9ydGVyJztcbmltcG9ydCB7U0VUX1NDUklQVH0gZnJvbSAnQGNkby9hcHBzL3JlZHV4L3VuaXRTZWxlY3Rpb25SZWR1eCc7XG5pbXBvcnQge3RyeVNldExvY2FsU3RvcmFnZSwgdHJ5R2V0TG9jYWxTdG9yYWdlfSBmcm9tICdAY2RvL2FwcHMvdXRpbHMnO1xuXG5pbXBvcnQgZmlyZWhvc2VDbGllbnQgZnJvbSAnLi4vLi4vbGliL3V0aWwvZmlyZWhvc2UnO1xuaW1wb3J0IHtsZXNzb25IYXNMZXZlbHN9IGZyb20gJy4uL3Byb2dyZXNzL3Byb2dyZXNzSGVscGVycyc7XG5cbmltcG9ydCB7Vmlld1R5cGV9IGZyb20gJy4vc2VjdGlvblByb2dyZXNzQ29uc3RhbnRzJztcblxuY29uc3QgU0VUX0NVUlJFTlRfVklFVyA9ICdzZWN0aW9uUHJvZ3Jlc3MvU0VUX0NVUlJFTlRfVklFVyc7XG5jb25zdCBTRVRfTEVTU09OX09GX0lOVEVSRVNUID0gJ3NlY3Rpb25Qcm9ncmVzcy9TRVRfTEVTU09OX09GX0lOVEVSRVNUJztcbmNvbnN0IFNUQVJUX0xPQURJTkdfUFJPR1JFU1MgPSAnc2VjdGlvblByb2dyZXNzL1NUQVJUX0xPQURJTkdfUFJPR1JFU1MnO1xuY29uc3QgRklOSVNIX0xPQURJTkdfUFJPR1JFU1MgPSAnc2VjdGlvblByb2dyZXNzL0ZJTklTSF9MT0FESU5HX1BST0dSRVNTJztcbmNvbnN0IFNUQVJUX1JFRlJFU0hJTkdfUFJPR1JFU1MgPSAnc2VjdGlvblByb2dyZXNzL1NUQVJUX1JFRlJFU0hJTkdfUFJPR1JFU1MnO1xuY29uc3QgRklOSVNIX1JFRlJFU0hJTkdfUFJPR1JFU1MgPSAnc2VjdGlvblByb2dyZXNzL0ZJTklTSF9SRUZSRVNISU5HX1BST0dSRVNTJztcbmNvbnN0IEFERF9EQVRBX0JZX1VOSVQgPSAnc2VjdGlvblByb2dyZXNzL0FERF9EQVRBX0JZX1VOSVQnO1xuXG5jb25zdCBMT0FEX0VYUEFOREVEX0xFU1NPTlNfRlJPTV9MT0NBTF9TVE9SQUdFID1cbiAgJ3NlY3Rpb25Qcm9ncmVzcy9MT0FEX0VYUEFOREVEX0xFU1NPTlNfRlJPTV9MT0NBTF9TVE9SQUdFJztcbmNvbnN0IEFERF9FWFBBTkRFRF9MRVNTT04gPSAnc2VjdGlvblByb2dyZXNzL0FERF9FWFBBTkRFRF9MRVNTT04nO1xuY29uc3QgUkVNT1ZFX0VYUEFOREVEX0xFU1NPTiA9ICdzZWN0aW9uUHJvZ3Jlc3MvUkVNT1ZFX0VYUEFOREVEX0xFU1NPTic7XG5cbmNvbnN0IFRPR0dMRV9FWFBBTkRFRF9DSE9JQ0VfTEVWRUwgPVxuICAnc2VjdGlvblByb2dyZXNzL1RPR0dMRV9FWFBBTkRFRF9DSE9JQ0VfTEVWRUwnO1xuXG5jb25zdCBFWFBBTkRfTUVUQURBVEFfRk9SX1NUVURFTlRTID1cbiAgJ3NlY3Rpb25Qcm9ncmVzcy9FWFBBTkRfTUVUQURBVEFfRk9SX1NUVURFTlRTJztcbmNvbnN0IENPTExBUFNFX01FVEFEQVRBX0ZPUl9TVFVERU5UUyA9XG4gICdzZWN0aW9uUHJvZ3Jlc3MvQ09MTEFQU0VfTUVUQURBVEFfRk9SX1NUVURFTlRTJztcblxuLy8gQWN0aW9uIGNyZWF0b3JzXG5leHBvcnQgY29uc3Qgc3RhcnRMb2FkaW5nUHJvZ3Jlc3MgPSAoKSA9PiAoe3R5cGU6IFNUQVJUX0xPQURJTkdfUFJPR1JFU1N9KTtcbmV4cG9ydCBjb25zdCBmaW5pc2hMb2FkaW5nUHJvZ3Jlc3MgPSAoKSA9PiAoe3R5cGU6IEZJTklTSF9MT0FESU5HX1BST0dSRVNTfSk7XG5leHBvcnQgY29uc3Qgc3RhcnRSZWZyZXNoaW5nUHJvZ3Jlc3MgPSAoKSA9PiAoe1xuICB0eXBlOiBTVEFSVF9SRUZSRVNISU5HX1BST0dSRVNTLFxufSk7XG5leHBvcnQgY29uc3QgZmluaXNoUmVmcmVzaGluZ1Byb2dyZXNzID0gKCkgPT4gKHtcbiAgdHlwZTogRklOSVNIX1JFRlJFU0hJTkdfUFJPR1JFU1MsXG59KTtcbmV4cG9ydCBjb25zdCBzZXRMZXNzb25PZkludGVyZXN0ID0gbGVzc29uT2ZJbnRlcmVzdCA9PiAoe1xuICB0eXBlOiBTRVRfTEVTU09OX09GX0lOVEVSRVNULFxuICBsZXNzb25PZkludGVyZXN0LFxufSk7XG5leHBvcnQgY29uc3Qgc2V0Q3VycmVudFZpZXcgPSB2aWV3VHlwZSA9PiAoe3R5cGU6IFNFVF9DVVJSRU5UX1ZJRVcsIHZpZXdUeXBlfSk7XG5leHBvcnQgY29uc3QgYWRkRGF0YUJ5VW5pdCA9IGRhdGEgPT4gKHtcbiAgdHlwZTogQUREX0RBVEFfQllfVU5JVCxcbiAgZGF0YSxcbn0pO1xuXG5leHBvcnQgY29uc3QgbG9hZEV4cGFuZGVkTGVzc29uc0Zyb21Mb2NhbFN0b3JhZ2UgPSAodW5pdElkLCBzZWN0aW9uSWQpID0+ICh7XG4gIHR5cGU6IExPQURfRVhQQU5ERURfTEVTU09OU19GUk9NX0xPQ0FMX1NUT1JBR0UsXG4gIHVuaXRJZCxcbiAgc2VjdGlvbklkLFxufSk7XG5cbmV4cG9ydCBjb25zdCBhZGRFeHBhbmRlZExlc3NvbiA9ICh1bml0SWQsIHNlY3Rpb25JZCwgbGVzc29uKSA9PiAoe1xuICB0eXBlOiBBRERfRVhQQU5ERURfTEVTU09OLFxuICB1bml0SWQsXG4gIHNlY3Rpb25JZCxcbiAgbGVzc29uLFxufSk7XG5cbmV4cG9ydCBjb25zdCByZW1vdmVFeHBhbmRlZExlc3NvbiA9ICh1bml0SWQsIHNlY3Rpb25JZCwgbGVzc29uSWQpID0+ICh7XG4gIHR5cGU6IFJFTU9WRV9FWFBBTkRFRF9MRVNTT04sXG4gIHVuaXRJZCxcbiAgc2VjdGlvbklkLFxuICBsZXNzb25JZCxcbn0pO1xuXG5leHBvcnQgY29uc3QgdG9nZ2xlRXhwYW5kZWRDaG9pY2VMZXZlbCA9IChzZWN0aW9uSWQsIGxldmVsKSA9PiAoe1xuICB0eXBlOiBUT0dHTEVfRVhQQU5ERURfQ0hPSUNFX0xFVkVMLFxuICBzZWN0aW9uSWQsXG4gIGxldmVsLFxufSk7XG5cbmV4cG9ydCBjb25zdCBleHBhbmRNZXRhZGF0YUZvclN0dWRlbnRzID0gc3R1ZGVudElkcyA9PiAoe1xuICB0eXBlOiBFWFBBTkRfTUVUQURBVEFfRk9SX1NUVURFTlRTLFxuICBzdHVkZW50SWRzLFxufSk7XG5leHBvcnQgY29uc3QgY29sbGFwc2VNZXRhZGF0YUZvclN0dWRlbnRzID0gc3R1ZGVudElkcyA9PiAoe1xuICB0eXBlOiBDT0xMQVBTRV9NRVRBREFUQV9GT1JfU1RVREVOVFMsXG4gIHN0dWRlbnRJZHMsXG59KTtcblxuY29uc3QgSU5JVElBTF9MRVNTT05fT0ZfSU5URVJFU1QgPSAxO1xuXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gIHNlY3Rpb246IHt9LFxuICBjdXJyZW50VmlldzogVmlld1R5cGUuU1VNTUFSWSxcbiAgdW5pdERhdGFCeVVuaXQ6IHt9LFxuICBzdHVkZW50TGV2ZWxQcm9ncmVzc0J5VW5pdDoge30sXG4gIHN0dWRlbnRMZXNzb25Qcm9ncmVzc0J5VW5pdDoge30sXG4gIHN0dWRlbnRMYXN0VXBkYXRlQnlVbml0OiB7fSxcbiAgbGVzc29uT2ZJbnRlcmVzdDogSU5JVElBTF9MRVNTT05fT0ZfSU5URVJFU1QsXG4gIGlzTG9hZGluZ1Byb2dyZXNzOiBmYWxzZSxcbiAgaXNSZWZyZXNoaW5nUHJvZ3Jlc3M6IGZhbHNlLFxuICBleHBhbmRlZExlc3Nvbklkczoge30sXG4gIGV4cGFuZGVkQ2hvaWNlTGV2ZWxJZHM6IFtdLFxuICBleHBhbmRlZE1ldGFkYXRhU3R1ZGVudElkczogW10sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZWN0aW9uUHJvZ3Jlc3Moc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikge1xuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNFVF9TQ1JJUFQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBsZXNzb25PZkludGVyZXN0OiBJTklUSUFMX0xFU1NPTl9PRl9JTlRFUkVTVCxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0VUX0NVUlJFTlRfVklFVykge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIGN1cnJlbnRWaWV3OiBhY3Rpb24udmlld1R5cGUsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNUQVJUX0xPQURJTkdfUFJPR1JFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc0xvYWRpbmdQcm9ncmVzczogdHJ1ZSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gRklOSVNIX0xPQURJTkdfUFJPR1JFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc0xvYWRpbmdQcm9ncmVzczogZmFsc2UsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNUQVJUX1JFRlJFU0hJTkdfUFJPR1JFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc1JlZnJlc2hpbmdQcm9ncmVzczogdHJ1ZSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gRklOSVNIX1JFRlJFU0hJTkdfUFJPR1JFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc1JlZnJlc2hpbmdQcm9ncmVzczogZmFsc2UsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNFVF9MRVNTT05fT0ZfSU5URVJFU1QpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBsZXNzb25PZkludGVyZXN0OiBhY3Rpb24ubGVzc29uT2ZJbnRlcmVzdCxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gQUREX0RBVEFfQllfVU5JVCkge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHVuaXREYXRhQnlVbml0OiB7XG4gICAgICAgIC4uLnN0YXRlLnVuaXREYXRhQnlVbml0LFxuICAgICAgICAuLi5hY3Rpb24uZGF0YS51bml0RGF0YUJ5VW5pdCxcbiAgICAgIH0sXG4gICAgICBzdHVkZW50TGV2ZWxQcm9ncmVzc0J5VW5pdDoge1xuICAgICAgICAuLi5zdGF0ZS5zdHVkZW50TGV2ZWxQcm9ncmVzc0J5VW5pdCxcbiAgICAgICAgLi4uYWN0aW9uLmRhdGEuc3R1ZGVudExldmVsUHJvZ3Jlc3NCeVVuaXQsXG4gICAgICB9LFxuICAgICAgc3R1ZGVudExlc3NvblByb2dyZXNzQnlVbml0OiB7XG4gICAgICAgIC4uLnN0YXRlLnN0dWRlbnRMZXNzb25Qcm9ncmVzc0J5VW5pdCxcbiAgICAgICAgLi4uYWN0aW9uLmRhdGEuc3R1ZGVudExlc3NvblByb2dyZXNzQnlVbml0LFxuICAgICAgfSxcbiAgICAgIHN0dWRlbnRMYXN0VXBkYXRlQnlVbml0OiB7XG4gICAgICAgIC4uLnN0YXRlLnN0dWRlbnRMYXN0VXBkYXRlQnlVbml0LFxuICAgICAgICAuLi5hY3Rpb24uZGF0YS5zdHVkZW50TGFzdFVwZGF0ZUJ5VW5pdCxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IExPQURfRVhQQU5ERURfTEVTU09OU19GUk9NX0xPQ0FMX1NUT1JBR0UpIHtcbiAgICBjb25zdCBleHBhbmRlZExlc3NvbklkcyA9IGdldExvY2FsU3RvcmFnZShhY3Rpb24udW5pdElkLCBhY3Rpb24uc2VjdGlvbklkKTtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBleHBhbmRlZExlc3Nvbklkczoge1xuICAgICAgICAuLi5zdGF0ZS5leHBhbmRlZExlc3NvbklkcyxcbiAgICAgICAgW2FjdGlvbi5zZWN0aW9uSWRdOiBleHBhbmRlZExlc3NvbklkcyxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IEFERF9FWFBBTkRFRF9MRVNTT04pIHtcbiAgICBpZiAoYWN0aW9uLmxlc3Nvbi5sb2NrYWJsZSB8fCAhbGVzc29uSGFzTGV2ZWxzKGFjdGlvbi5sZXNzb24pKSB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuXG4gICAgYW5hbHl0aWNzUmVwb3J0ZXIuc2VuZEV2ZW50KEVWRU5UUy5QUk9HUkVTU19WMl9MRVNTT05fRVhQQU5ELCB7XG4gICAgICBzZWN0aW9uSWQ6IGFjdGlvbi5zZWN0aW9uSWQsXG4gICAgICBsZXNzb25JZDogYWN0aW9uLmxlc3Nvbi5pZCxcbiAgICB9KTtcblxuICAgIGNvbnN0IG5ld1NlY3Rpb25FeHBhbmRlZExlc3NvbklkcyA9IF8udW5pcShbXG4gICAgICAuLi4oc3RhdGUuZXhwYW5kZWRMZXNzb25JZHNbYWN0aW9uLnNlY3Rpb25JZF0gfHwgW10pLFxuICAgICAgYWN0aW9uLmxlc3Nvbi5pZCxcbiAgICBdKTtcbiAgICBzYXZlRXhwYW5kZWRMZXNzb25JZHNUb0xvY2FsU3RvcmFnZShcbiAgICAgIGFjdGlvbi51bml0SWQsXG4gICAgICBhY3Rpb24uc2VjdGlvbklkLFxuICAgICAgbmV3U2VjdGlvbkV4cGFuZGVkTGVzc29uSWRzXG4gICAgKTtcblxuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIGV4cGFuZGVkTGVzc29uSWRzOiB7XG4gICAgICAgIC4uLnN0YXRlLmV4cGFuZGVkTGVzc29uSWRzLFxuICAgICAgICBbYWN0aW9uLnNlY3Rpb25JZF06IG5ld1NlY3Rpb25FeHBhbmRlZExlc3NvbklkcyxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFJFTU9WRV9FWFBBTkRFRF9MRVNTT04pIHtcbiAgICBhbmFseXRpY3NSZXBvcnRlci5zZW5kRXZlbnQoRVZFTlRTLlBST0dSRVNTX1YyX0xFU1NPTl9DT0xMQVBTRSwge1xuICAgICAgc2VjdGlvbklkOiBhY3Rpb24uc2VjdGlvbklkLFxuICAgICAgbGVzc29uSWQ6IGFjdGlvbi5sZXNzb25JZCxcbiAgICB9KTtcblxuICAgIGNvbnN0IG5ld1NlY3Rpb25FeHBhbmRlZExlc3NvbklkcyA9IHN0YXRlLmV4cGFuZGVkTGVzc29uSWRzW1xuICAgICAgYWN0aW9uLnNlY3Rpb25JZFxuICAgIF0uZmlsdGVyKGxlc3NvbklkID0+IGxlc3NvbklkICE9PSBhY3Rpb24ubGVzc29uSWQpO1xuICAgIHNhdmVFeHBhbmRlZExlc3Nvbklkc1RvTG9jYWxTdG9yYWdlKFxuICAgICAgYWN0aW9uLnVuaXRJZCxcbiAgICAgIGFjdGlvbi5zZWN0aW9uSWQsXG4gICAgICBuZXdTZWN0aW9uRXhwYW5kZWRMZXNzb25JZHNcbiAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgZXhwYW5kZWRMZXNzb25JZHM6IHtcbiAgICAgICAgLi4uc3RhdGUuZXhwYW5kZWRMZXNzb25JZHMsXG4gICAgICAgIFthY3Rpb24uc2VjdGlvbklkXTogbmV3U2VjdGlvbkV4cGFuZGVkTGVzc29uSWRzLFxuICAgICAgfSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gVE9HR0xFX0VYUEFOREVEX0NIT0lDRV9MRVZFTCkge1xuICAgIGlmIChzdGF0ZS5leHBhbmRlZENob2ljZUxldmVsSWRzLmluY2x1ZGVzKGFjdGlvbi5sZXZlbC5pZCkpIHtcbiAgICAgIGFuYWx5dGljc1JlcG9ydGVyLnNlbmRFdmVudChFVkVOVFMuUFJPR1JFU1NfVjJfQ09MTEFQU0VfQ0hPSUNFX0xFVkVMLCB7XG4gICAgICAgIHNlY3Rpb25JZDogYWN0aW9uLnNlY3Rpb25JZCxcbiAgICAgICAgbGV2ZWxJZDogYWN0aW9uLmxldmVsLmlkLFxuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBleHBhbmRlZENob2ljZUxldmVsSWRzOiBzdGF0ZS5leHBhbmRlZENob2ljZUxldmVsSWRzLmZpbHRlcihcbiAgICAgICAgICBsID0+IGwgIT09IGFjdGlvbi5sZXZlbC5pZFxuICAgICAgICApLFxuICAgICAgfTtcbiAgICB9IGVsc2UgaWYgKGFjdGlvbi5sZXZlbD8uc3VibGV2ZWxzPy5sZW5ndGggPiAwKSB7XG4gICAgICBhbmFseXRpY3NSZXBvcnRlci5zZW5kRXZlbnQoRVZFTlRTLlBST0dSRVNTX1YyX0VYUEFORF9DSE9JQ0VfTEVWRUwsIHtcbiAgICAgICAgc2VjdGlvbklkOiBhY3Rpb24uc2VjdGlvbklkLFxuICAgICAgICBsZXZlbElkOiBhY3Rpb24ubGV2ZWwuaWQsXG4gICAgICB9KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBleHBhbmRlZENob2ljZUxldmVsSWRzOiBbXG4gICAgICAgICAgLi4uc3RhdGUuZXhwYW5kZWRDaG9pY2VMZXZlbElkcyxcbiAgICAgICAgICBhY3Rpb24ubGV2ZWwuaWQsXG4gICAgICAgIF0sXG4gICAgICB9O1xuICAgIH1cbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IEVYUEFORF9NRVRBREFUQV9GT1JfU1RVREVOVFMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBleHBhbmRlZE1ldGFkYXRhU3R1ZGVudElkczogXy51bmlxKFtcbiAgICAgICAgLi4uc3RhdGUuZXhwYW5kZWRNZXRhZGF0YVN0dWRlbnRJZHMsXG4gICAgICAgIC4uLmFjdGlvbi5zdHVkZW50SWRzLFxuICAgICAgXSksXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IENPTExBUFNFX01FVEFEQVRBX0ZPUl9TVFVERU5UUykge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIGV4cGFuZGVkTWV0YWRhdGFTdHVkZW50SWRzOiBzdGF0ZS5leHBhbmRlZE1ldGFkYXRhU3R1ZGVudElkcy5maWx0ZXIoXG4gICAgICAgIHN0dWRlbnRJZCA9PiAhYWN0aW9uLnN0dWRlbnRJZHMuaW5jbHVkZXMoc3R1ZGVudElkKVxuICAgICAgKSxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHN0YXRlO1xufVxuXG5leHBvcnQgY29uc3QganVtcFRvTGVzc29uRGV0YWlscyA9IGxlc3Nvbk9mSW50ZXJlc3QgPT4ge1xuICByZXR1cm4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xuICAgIGNvbnN0IHN0YXRlID0gZ2V0U3RhdGUoKTtcbiAgICBkaXNwYXRjaChzZXRMZXNzb25PZkludGVyZXN0KGxlc3Nvbk9mSW50ZXJlc3QpKTtcbiAgICBkaXNwYXRjaChzZXRDdXJyZW50VmlldyhWaWV3VHlwZS5ERVRBSUwpKTtcbiAgICBmaXJlaG9zZUNsaWVudC5wdXRSZWNvcmQoXG4gICAgICB7XG4gICAgICAgIHN0dWR5OiAndGVhY2hlcl9kYXNoYm9hcmRfYWN0aW9ucycsXG4gICAgICAgIHN0dWR5X2dyb3VwOiAncHJvZ3Jlc3MnLFxuICAgICAgICBldmVudDogJ3ZpZXdfY2hhbmdlX3RvZ2dsZScsXG4gICAgICAgIGRhdGFfanNvbjogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHNlY3Rpb25faWQ6IHN0YXRlLnRlYWNoZXJTZWN0aW9ucy5zZWxlY3RlZFNlY3Rpb25JZCxcbiAgICAgICAgICBvbGRfdmlldzogVmlld1R5cGUuU1VNTUFSWSxcbiAgICAgICAgICBuZXdfdmlldzogVmlld1R5cGUuREVUQUlMLFxuICAgICAgICAgIHNjcmlwdF9pZDogc3RhdGUudW5pdFNlbGVjdGlvbi5zY3JpcHRJZCxcbiAgICAgICAgfSksXG4gICAgICB9LFxuICAgICAge2luY2x1ZGVVc2VySWQ6IHRydWV9XG4gICAgKTtcbiAgfTtcbn07XG5cbi8vIFNlbGVjdG9yIGZ1bmN0aW9uc1xuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgdW5pdCBkYXRhIGZvciB0aGUgc2VjdGlvbiBpbiB0aGUgc2VsZWN0ZWQgdW5pdFxuICogQHJldHVybnMge3VuaXREYXRhUHJvcFR5cGV9IG9iamVjdCBjb250YWluaW5nIG1ldGFkYXRhIGFib3V0IHRoZSB1bml0IHN0cnVjdHVyZVxuICovXG5leHBvcnQgY29uc3QgZ2V0Q3VycmVudFVuaXREYXRhID0gc3RhdGUgPT4ge1xuICByZXR1cm4gc3RhdGUuc2VjdGlvblByb2dyZXNzLnVuaXREYXRhQnlVbml0W3N0YXRlLnVuaXRTZWxlY3Rpb24uc2NyaXB0SWRdO1xufTtcblxuY29uc3QgZ2V0RXhwYW5kZWRMZXNzb25Mb2NhbFN0b3JhZ2VTdHJpbmcgPSAodW5pdElkLCBzZWN0aW9uSWQpID0+XG4gIGBleHBhbmRlZExlc3NvblByb2dyZXNzVjItJHt1bml0SWR9LSR7c2VjdGlvbklkfWA7XG5cbmNvbnN0IHNhdmVFeHBhbmRlZExlc3Nvbklkc1RvTG9jYWxTdG9yYWdlID0gKHVuaXRJZCwgc2VjdGlvbklkLCBsZXNzb25JZHMpID0+IHtcbiAgdHJ5U2V0TG9jYWxTdG9yYWdlKFxuICAgIGdldEV4cGFuZGVkTGVzc29uTG9jYWxTdG9yYWdlU3RyaW5nKHVuaXRJZCwgc2VjdGlvbklkKSxcbiAgICBKU09OLnN0cmluZ2lmeShsZXNzb25JZHMpXG4gICk7XG59O1xuXG5jb25zdCBnZXRMb2NhbFN0b3JhZ2UgPSAodW5pdElkLCBzZWN0aW9uSWQpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gKFxuICAgICAgSlNPTi5wYXJzZShcbiAgICAgICAgdHJ5R2V0TG9jYWxTdG9yYWdlKFxuICAgICAgICAgIGdldEV4cGFuZGVkTGVzc29uTG9jYWxTdG9yYWdlU3RyaW5nKHVuaXRJZCwgc2VjdGlvbklkKSxcbiAgICAgICAgICBbXVxuICAgICAgICApXG4gICAgICApIHx8IFtdXG4gICAgKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElmIHdlIGZhaWwgdG8gcGFyc2UgdGhlIGxvY2FsIHN0b3JhZ2UsIGRlZmF1bHQgdG8gbm90aGluZyBleHBhbmRlZC5cbiAgICByZXR1cm4gW107XG4gIH1cbn07XG4iXSwibmFtZXMiOlsidW5pdFNlbGVjdGlvbiIsInN0YXRlIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiaW5pdGlhbFN0YXRlIiwiYWN0aW9uIiwidHlwZSIsIlNFVF9DT1VSU0VTIiwiZmlyc3RDb3Vyc2UiLCJjb3Vyc2VzV2l0aFByb2dyZXNzIiwiZmlyc3RVbml0IiwidW5pdHMiLCJfb2JqZWN0U3ByZWFkIiwic2NyaXB0SWQiLCJpZCIsIlNFVF9TQ1JJUFQiLCJTVEFSVF9MT0FESU5HX0NPVVJTRVMiLCJpc0xvYWRpbmdDb3Vyc2VzV2l0aFByb2dyZXNzIiwiRklOSVNIRURfTE9BRElOR19DT1VSU0VTIiwiZXhwb3J0cyIsInNldENvdXJzZXNXaXRoUHJvZ3Jlc3MiLCJzZXRTY3JpcHRJZCIsInN0YXJ0TG9hZGluZ0NvdXJzZXNXaXRoUHJvZ3Jlc3MiLCJmaW5pc2hlZExvYWRpbmdDb3Vyc2VzV2l0aFByb2dyZXNzIiwiZ2V0U2VsZWN0ZWRVbml0IiwidW5pdCIsImZvckVhY2giLCJjb3Vyc2UiLCJ0ZW1wVW5pdCIsImZpbmQiLCJnZXRTZWxlY3RlZFNjcmlwdE5hbWUiLCJrZXkiLCJnZXRTZWxlY3RlZFNjcmlwdEZyaWVuZGx5TmFtZSIsIm5hbWUiLCJnZXRTZWxlY3RlZFNjcmlwdERlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb24iLCJkb2VzQ3VycmVudENvdXJzZVVzZUZlZWRiYWNrIiwiX2dldFNlbGVjdGVkVW5pdCIsImlzX2ZlZWRiYWNrX2VuYWJsZWQiLCJhc3luY0xvYWRDb3Vyc2VzV2l0aFByb2dyZXNzIiwiZGlzcGF0Y2giLCJnZXRTdGF0ZSIsInNlbGVjdGVkU2VjdGlvbiIsInRlYWNoZXJTZWN0aW9ucyIsInNlY3Rpb25zIiwic2VsZWN0ZWRTZWN0aW9uSWQiLCJmZXRjaCIsImNvbmNhdCIsIm1ldGhvZCIsImhlYWRlcnMiLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsIkVycm9yIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImpzb24iLCJyZW9yZGVyZWRDb3Vyc2VzIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiZmlsdGVyIiwiY291cnNlX3ZlcnNpb25faWQiLCJyZXZlcnNlIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwibWVzc2FnZSIsIl9wcm9wVHlwZXMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsInJlcXVpcmUiLCJfcHJvZ3Jlc3NUeXBlcyIsIlByb3BUeXBlcyIsInNoYXBlIiwibnVtYmVyIiwiaXNSZXF1aXJlZCIsImNzZiIsImJvb2wiLCJoYXNTdGFuZGFyZHMiLCJ0aXRsZSIsInN0cmluZyIsInBhdGgiLCJsZXNzb25zIiwiYXJyYXlPZiIsImxldmVscyIsIm9iamVjdCIsImZhbWlseV9uYW1lIiwidmVyc2lvbl95ZWFyIiwiU1VNTUFSWSIsIkRFVEFJTCIsIlNUQU5EQVJEUyIsInN0dWRlbnQiLCJzdHVkZW50VHlwZSIsImV4cGFuc2lvbkluZGV4IiwiaXNFeHBhbmRlZCIsInVzZURhcmtCYWNrZ3JvdW5kIiwidG9vbHRpcElkRm9yU3R1ZGVudCIsInN0dWRlbnRJZCIsImdldFNjcm9sbGJhcldpZHRoIiwib3V0ZXIiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsInZpc2liaWxpdHkiLCJvdmVyZmxvdyIsIm1zT3ZlcmZsb3dTdHlsZSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImlubmVyIiwic2Nyb2xsYmFyV2lkdGgiLCJvZmZzZXRXaWR0aCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInNlY3Rpb25Qcm9ncmVzcyIsIl9hY3Rpb24kbGV2ZWwiLCJfYWN0aW9uJGxldmVsJHN1YmxldmUiLCJsZXNzb25PZkludGVyZXN0IiwiSU5JVElBTF9MRVNTT05fT0ZfSU5URVJFU1QiLCJTRVRfQ1VSUkVOVF9WSUVXIiwiY3VycmVudFZpZXciLCJ2aWV3VHlwZSIsIlNUQVJUX0xPQURJTkdfUFJPR1JFU1MiLCJpc0xvYWRpbmdQcm9ncmVzcyIsIkZJTklTSF9MT0FESU5HX1BST0dSRVNTIiwiU1RBUlRfUkVGUkVTSElOR19QUk9HUkVTUyIsImlzUmVmcmVzaGluZ1Byb2dyZXNzIiwiRklOSVNIX1JFRlJFU0hJTkdfUFJPR1JFU1MiLCJTRVRfTEVTU09OX09GX0lOVEVSRVNUIiwiQUREX0RBVEFfQllfVU5JVCIsInVuaXREYXRhQnlVbml0IiwiZGF0YSIsInN0dWRlbnRMZXZlbFByb2dyZXNzQnlVbml0Iiwic3R1ZGVudExlc3NvblByb2dyZXNzQnlVbml0Iiwic3R1ZGVudExhc3RVcGRhdGVCeVVuaXQiLCJMT0FEX0VYUEFOREVEX0xFU1NPTlNfRlJPTV9MT0NBTF9TVE9SQUdFIiwiZXhwYW5kZWRMZXNzb25JZHMiLCJnZXRMb2NhbFN0b3JhZ2UiLCJ1bml0SWQiLCJzZWN0aW9uSWQiLCJfZGVmaW5lUHJvcGVydHkiLCJBRERfRVhQQU5ERURfTEVTU09OIiwibGVzc29uIiwibG9ja2FibGUiLCJsZXNzb25IYXNMZXZlbHMiLCJhbmFseXRpY3NSZXBvcnRlciIsInNlbmRFdmVudCIsIkVWRU5UUyIsIlBST0dSRVNTX1YyX0xFU1NPTl9FWFBBTkQiLCJsZXNzb25JZCIsIm5ld1NlY3Rpb25FeHBhbmRlZExlc3NvbklkcyIsIl8iLCJ1bmlxIiwic2F2ZUV4cGFuZGVkTGVzc29uSWRzVG9Mb2NhbFN0b3JhZ2UiLCJSRU1PVkVfRVhQQU5ERURfTEVTU09OIiwiUFJPR1JFU1NfVjJfTEVTU09OX0NPTExBUFNFIiwiVE9HR0xFX0VYUEFOREVEX0NIT0lDRV9MRVZFTCIsImV4cGFuZGVkQ2hvaWNlTGV2ZWxJZHMiLCJpbmNsdWRlcyIsImxldmVsIiwiUFJPR1JFU1NfVjJfQ09MTEFQU0VfQ0hPSUNFX0xFVkVMIiwibGV2ZWxJZCIsImwiLCJzdWJsZXZlbHMiLCJQUk9HUkVTU19WMl9FWFBBTkRfQ0hPSUNFX0xFVkVMIiwiRVhQQU5EX01FVEFEQVRBX0ZPUl9TVFVERU5UUyIsImV4cGFuZGVkTWV0YWRhdGFTdHVkZW50SWRzIiwic3R1ZGVudElkcyIsIkNPTExBUFNFX01FVEFEQVRBX0ZPUl9TVFVERU5UUyIsIl9sb2Rhc2giLCJfQW5hbHl0aWNzQ29uc3RhbnRzIiwiX0FuYWx5dGljc1JlcG9ydGVyIiwiX3VuaXRTZWxlY3Rpb25SZWR1eCIsIl91dGlscyIsIl9maXJlaG9zZSIsIl9wcm9ncmVzc0hlbHBlcnMiLCJfc2VjdGlvblByb2dyZXNzQ29uc3RhbnRzIiwiX3R5cGVvZiIsIm8iLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiYXJyIiwiX2FycmF5V2l0aG91dEhvbGVzIiwiQXJyYXkiLCJpc0FycmF5IiwiX2FycmF5TGlrZVRvQXJyYXkiLCJfaXRlcmFibGVUb0FycmF5IiwiaXRlciIsImZyb20iLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJtaW5MZW4iLCJuIiwiT2JqZWN0IiwidG9TdHJpbmciLCJjYWxsIiwic2xpY2UiLCJ0ZXN0IiwiX25vbkl0ZXJhYmxlU3ByZWFkIiwiVHlwZUVycm9yIiwibGVuIiwiaSIsImFycjIiLCJvd25LZXlzIiwiZSIsInIiLCJ0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsIl90b1ByaW1pdGl2ZSIsInRvUHJpbWl0aXZlIiwiU3RyaW5nIiwiTnVtYmVyIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJzZXRMZXNzb25PZkludGVyZXN0Iiwic3RhcnRMb2FkaW5nUHJvZ3Jlc3MiLCJmaW5pc2hMb2FkaW5nUHJvZ3Jlc3MiLCJzdGFydFJlZnJlc2hpbmdQcm9ncmVzcyIsImZpbmlzaFJlZnJlc2hpbmdQcm9ncmVzcyIsInNldEN1cnJlbnRWaWV3IiwiYWRkRGF0YUJ5VW5pdCIsImxvYWRFeHBhbmRlZExlc3NvbnNGcm9tTG9jYWxTdG9yYWdlIiwiYWRkRXhwYW5kZWRMZXNzb24iLCJyZW1vdmVFeHBhbmRlZExlc3NvbiIsInRvZ2dsZUV4cGFuZGVkQ2hvaWNlTGV2ZWwiLCJleHBhbmRNZXRhZGF0YUZvclN0dWRlbnRzIiwiY29sbGFwc2VNZXRhZGF0YUZvclN0dWRlbnRzIiwic2VjdGlvbiIsIlZpZXdUeXBlIiwianVtcFRvTGVzc29uRGV0YWlscyIsImZpcmVob3NlQ2xpZW50IiwicHV0UmVjb3JkIiwic3R1ZHkiLCJzdHVkeV9ncm91cCIsImV2ZW50IiwiZGF0YV9qc29uIiwiSlNPTiIsInN0cmluZ2lmeSIsInNlY3Rpb25faWQiLCJvbGRfdmlldyIsIm5ld192aWV3Iiwic2NyaXB0X2lkIiwiaW5jbHVkZVVzZXJJZCIsImdldEN1cnJlbnRVbml0RGF0YSIsImdldEV4cGFuZGVkTGVzc29uTG9jYWxTdG9yYWdlU3RyaW5nIiwibGVzc29uSWRzIiwidHJ5U2V0TG9jYWxTdG9yYWdlIiwicGFyc2UiLCJ0cnlHZXRMb2NhbFN0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9