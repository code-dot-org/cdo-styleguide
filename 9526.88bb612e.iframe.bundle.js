"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[9526],{"./src/accounts/constants.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SingleSignOnProviders=exports.OAuthSectionTypes=exports.LmsLoginTypeNames=exports.LmsLoginInstructionUrls=void 0;var _utils=__webpack_require__("./src/utils.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts");exports.OAuthSectionTypes=(0,_utils.makeEnum)(_sharedConstants.SectionLoginType.google_classroom,_sharedConstants.SectionLoginType.clever,"microsoft_classroom"),exports.SingleSignOnProviders={google:"google_oauth2",microsoft:"microsoft_v2_auth",clever:"clever",facebook:"facebook",lti_v1:_sharedConstants.SectionLoginType.lti_v1},exports.LmsLoginTypeNames={clever:"Clever",google_classroom:"Google Classroom",canvas:"Canvas",canvas_cloud:"Canvas",canvas_beta_cloud:"Canvas Beta",canvas_test_cloud:"Canvas Test",schoology:"Schoology"},exports.LmsLoginInstructionUrls={clever:"https://support.code.org/hc/en-us/articles/115002716111-Setting-Up-Sections-with-Clever-Sync",google_classroom:"https://support.code.org/hc/en-us/articles/115001319312-Setting-Up-Sections-with-Google-Classroom-Sync",canvas:"https://support.code.org/hc/en-us/articles/23621973451405-Create-and-sync-rosters-with-Canvas",schoology:"https://support.code.org/hc/en-us/articles/23622036958093-Create-and-sync-rosters-with-Schoology"}},"./src/generated/curriculum/sharedCourseConstants.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PublishedState=exports.ParticipantAudiencesByType=exports.ParticipantAudience=exports.InstructorAudience=exports.InstructionType=exports.DeviceTypes=exports.DeviceCompatibilityLevels=exports.CurriculumUmbrella=exports.CurriculumTopicTags=exports.CurriculumContentArea=exports.CourseOfferingSchoolSubjects=exports.CourseOfferingMarketingInitiatives=exports.CourseOfferingHeaders=exports.CourseOfferingCurriculumTypes=exports.CourseOfferingCsTopics=void 0;exports.PublishedState={in_development:"in_development",pilot:"pilot",beta:"beta",preview:"preview",stable:"stable",sunsetting:"sunsetting",deprecated:"deprecated"},exports.InstructionType={teacher_led:"teacher_led",self_paced:"self_paced"},exports.ParticipantAudience={facilitator:"facilitator",teacher:"teacher",student:"student"},exports.InstructorAudience={universal_instructor:"universal_instructor",plc_reviewer:"plc_reviewer",facilitator:"facilitator",teacher:"teacher"},exports.CurriculumUmbrella={CSF:"CSF",CSD:"CSD",CSP:"CSP",CSA:"CSA",CSC:"CSC",HOC:"HOC",AI:"AI",CSA_self_paced_pl:"CSA Self Paced PL",CSP_self_paced_pl:"CSP Self Paced PL",CSD_self_paced_pl:"CSD Self Paced PL",CSF_self_paced_pl:"CSF Self Paced PL",CSC_self_paced_pl:"CSC Self Paced PL",CSC_k_5_self_paced_pl:"CSC K-5 self-paced PL",student_self_paced:"Student Self Paced Courses",pd_workshop_activity_csf:"PD Workshop Activity CSF",pd_workshop_activity_csd:"PD Workshop Activity CSD",pd_workshop_activity_csp:"PD Workshop Activity CSP",pd_workshop_activity_csa:"PD Workshop Activity CSA",foundations_of_cs:"Foundations of CS",foundations_of_programming:"Foundations of Programming",CSC_K_5:"CSC K-5",CSC_6_8:"CSC 6-8",CSC_9_12:"CSC 9-12",special_topics_k_5:"K-5 Special topics",special_topics_6_8:"6-8 Special topics",special_topics_9_12:"9-12 Special topics",foundations_of_cs_selfpaced_pl:"Foundations of CS selfpaced pl",ai_for_teachers_selfpaced_pl:"AI for teachers selfpaced pl",special_topics_curriculum_selfpaced_pl_k_5:"K-5 Special topics curriculum selfpaced pl",special_topics_curriculum_selfpaced_pl_6_8:"6-8 Special topics curriculum selfpaced pl",special_topics_curriculum_selfpaced_pl_9_12:"9-12 Special topics curriculum selfpaced pl",pedagogy_special_topics_selfpaced_pl:"Pedagogy special topics selfpaced pl",cs_basics_selfpaced_pl:"CS Basics selfpaced pl"},exports.CurriculumTopicTags={ai:"AI",maker:"Maker",music_lab:"Music lab"},exports.CurriculumContentArea={curriculum_k_5:"K-5 Curriculum",curriculum_6_8:"6-8 Curriculum",curriculum_9_12:"9-12 Curriculum",hoc:"HOC",pl_workshop_activities:"PL Workshop activities",self_paced_pl_k_5:"K-5 self-paced PL",self_paced_pl_6_8:"6-8 self-paced PL",self_paced_pl_9_12:"9-12 self-paced PL",skills_focused_self_paced_pl:"Skills-focused self-paced PL",other:"Other"},exports.CourseOfferingCurriculumTypes={module:"Module",course:"Course",standalone_unit:"Standalone Unit",hoc:"Hour of Code",pl:"Professional Learning"},exports.CourseOfferingHeaders={favorites:"Favorites",labs_and_skills:"Labs and Skills",minecraft:"Minecraft",hello_world:"Hello World",popular_media:"Popular Media",sports:"Sports",express:"Express",csf:"CS Fundamentals",csc:"CS Connections",year_long:"Year Long",csa_labs:"CSA Labs",self_paced:"Self-Paced",teacher_led:"Teacher-Led",collections:"Collections",workshops_k5:"K-5 Workshops",summer_workshops_612:"6-12 Summer Workshops",virtual_academic_year_workshops_612:"6â€“12 Virtual Academic Year Workshops",unsupported:"Unsupported"},exports.CourseOfferingMarketingInitiatives={hoc:"HOC",csc:"CSC",csf:"CSF",csa:"CSA",csp:"CSP",csd:"CSD"},exports.CourseOfferingCsTopics=["art_and_design","app_design","artificial_intelligence","cybersecurity","data","digital_literacy","games_and_animations","internet","physical_computing","web_design","programming"],exports.CourseOfferingSchoolSubjects=["math","science","english_language_arts","history"],exports.DeviceTypes=["computer","chromebook","tablet","mobile","no_device"],exports.DeviceCompatibilityLevels=["ideal","not_recommended","incompatible"],exports.ParticipantAudiencesByType={student:["student"],teacher:["student","teacher"],facilitator:["student","teacher","facilitator"]}},"./src/templates/teacherDashboard/teacherSectionsReduxSelectors.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.USER_EDITABLE_SECTION_PROPS=void 0,exports.assignedCourseOffering=function assignedCourseOffering(state){var _getRoot=getRoot(state),sectionBeingEdited=_getRoot.sectionBeingEdited;return _getRoot.courseOfferings[null==sectionBeingEdited?void 0:sectionBeingEdited.courseOfferingId]},exports.assignmentPaths=exports.assignmentNames=void 0,exports.getAssignmentName=function getAssignmentName(state,sectionId){var _getRoot3=getRoot(state),sections=_getRoot3.sections,courseOfferings=_getRoot3.courseOfferings;return assignmentNames(courseOfferings,sections[sectionId])[0]},exports.getRoot=getRoot,exports.getSectionRows=function getSectionRows(state,sectionIds){var _getRoot2=getRoot(state),sections=_getRoot2.sections,courseOfferings=_getRoot2.courseOfferings,courseOfferingsAreLoaded=_getRoot2.courseOfferingsAreLoaded;return sectionIds.map((function(id){return _objectSpread(_objectSpread({},_lodash.default.pick(sections[id],["id","name","courseVersionName","courseDisplayName","loginType","loginTypeName","studentCount","code","participantType","grades","providerManaged","hidden"])),{},{assignmentNames:assignmentNames(courseOfferings,sections[id]),assignmentPaths:assignmentPaths(courseOfferings,sections[id]),courseOfferingsAreLoaded})}))},exports.getVisibleSections=function getVisibleSections(state){var allSections=Object.values(getRoot(state).sections);return sortSectionsList(allSections||[]).filter((function(section){return!section.hidden}))},exports.hiddenPlSectionIds=function hiddenPlSectionIds(state){return(state=getRoot(state)).sectionIds.filter((function(id){return state.sections[id].hidden&&state.sections[id].participantType!==_sharedCourseConstants.ParticipantAudience.student}))},exports.hiddenSectionIds=function hiddenSectionIds(state){return(state=getRoot(state)).sectionIds.filter((function(id){return state.sections[id].hidden}))},exports.hiddenStudentSectionIds=function hiddenStudentSectionIds(state){return(state=getRoot(state)).sectionIds.filter((function(id){return state.sections[id].hidden&&state.sections[id].participantType===_sharedCourseConstants.ParticipantAudience.student}))},exports.isAddingSection=function isAddingSection(state){return!!(state.sectionBeingEdited&&state.sectionBeingEdited.id<0)},exports.isRosterDialogOpen=function isRosterDialogOpen(state){return getRoot(state).isRosterDialogOpen},exports.isSaveInProgress=function isSaveInProgress(state){return getRoot(state).saveInProgress},exports.isSectionProviderManaged=isSectionProviderManaged,exports.ltiSyncResult=function ltiSyncResult(state){return getRoot(state).ltiSyncResult},exports.newSectionData=function newSectionData(participantType){return{id:PENDING_NEW_SECTION_ID,name:"",loginType:void 0,grades:[""],providerManaged:!1,lessonExtras:!0,pairingAllowed:!0,ttsAutoplayEnabled:!1,sharingDisabled:!1,studentCount:0,participantType,code:"",courseId:null,courseOfferingId:null,courseVersionId:null,courseDisplayName:null,unitId:null,unitName:null,isAssignedStandaloneCourse:!1,hidden:!1,restrictSection:!1,aiTutorEnabled:!1}},exports.rosterProvider=rosterProvider,exports.rosterProviderName=rosterProviderName,exports.sectionCode=function sectionCode(state,sectionId){return(getRoot(state).sections[sectionId]||{}).code},exports.sectionFromServerSection=void 0,exports.sectionName=function sectionName(state,sectionId){return(getRoot(state).sections[sectionId]||{}).name},exports.sectionProvider=function sectionProvider(state,sectionId){if(isSectionProviderManaged(state,sectionId))return rosterProvider(state);return null},exports.sectionProviderName=function sectionProviderName(state,sectionId){if(isSectionProviderManaged(state,sectionId))return rosterProviderName(state);return null},exports.sectionUnitName=function sectionUnitName(state,sectionId){return(getRoot(state).sections[sectionId]||{}).courseVersionName},exports.sectionsForDropdown=function sectionsForDropdown(state,courseOfferingId,courseVersionId,unitId){return sortedSectionsList(state.sections).map((function(section){return _objectSpread(_objectSpread({},section),{},{isAssigned:null!==unitId&&section.unitId===unitId||null!==courseOfferingId&&section.courseOfferingId===courseOfferingId&&null!==courseVersionId&&section.courseVersionId===courseVersionId})}))},exports.sectionsNameAndId=function sectionsNameAndId(state){return sortSectionsList(state.sectionIds.map((function(id){return{id:parseInt(id,10),name:state.sections[id].name}})))},exports.selectedSectionSelector=function selectedSectionSelector(state){var selectedSectionId=getRoot(state).selectedSectionId;return selectedSectionId?getRoot(state).sections[selectedSectionId]:null},exports.serverSectionFromSection=function serverSectionFromSection(section){return _objectSpread(_objectSpread({},section),{},{login_type:section.loginType,lesson_extras:section.lessonExtras,pairing_allowed:section.pairingAllowed,tts_autoplay_enabled:section.ttsAutoplayEnabled,sharing_disabled:section.sharingDisabled,course_offering_id:section.courseOfferingId,course_version_id:section.courseVersionId,unit_id:section.unitId,course_id:section.courseId,restrict_section:section.restrictSection,participant_type:section.participantType,ai_tutor_enabled:section.aiTutorEnabled})},exports.studentShape=exports.studentFromServerStudent=exports.sortedSectionsList=exports.sortSectionsList=void 0,exports.syncEnabled=function syncEnabled(state,sectionId){return(getRoot(state).sections[sectionId]||{}).syncEnabled};var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_sharedCourseConstants=__webpack_require__("./src/generated/curriculum/sharedCourseConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.USER_EDITABLE_SECTION_PROPS=["name","loginType","lessonExtras","pairingAllowed","ttsAutoplayEnabled","participantType","courseId","courseOfferingId","courseVersionId","unitId","grades","hidden","restrictSection","codeReviewExpiresAt","aiTutorEnabled"];var PENDING_NEW_SECTION_ID=-1;function getRoot(state){return state.teacherSections}function rosterProvider(state){return getRoot(state).rosterProvider}function rosterProviderName(state){return getRoot(state).rosterProviderName}function isSectionProviderManaged(state,sectionId){return!!(getRoot(state).sections[sectionId]||{}).providerManaged}exports.sectionFromServerSection=function sectionFromServerSection(serverSection){return{id:serverSection.id,name:serverSection.name,courseVersionName:serverSection.courseVersionName,unitName:serverSection.unitName,isAssignedStandaloneCourse:serverSection.isAssignedStandaloneCourse,createdAt:serverSection.createdAt,loginType:serverSection.login_type,loginTypeName:serverSection.login_type_name,grades:serverSection.grades,providerManaged:serverSection.providerManaged||!1,lessonExtras:serverSection.lesson_extras,pairingAllowed:serverSection.pairing_allowed,ttsAutoplayEnabled:serverSection.tts_autoplay_enabled,sharingDisabled:serverSection.sharing_disabled,studentCount:serverSection.studentCount,code:serverSection.code,courseOfferingId:serverSection.course_offering_id,courseVersionId:serverSection.course_version_id,courseDisplayName:serverSection.course_display_name,unitId:serverSection.unit_id,courseId:serverSection.course_id,hidden:serverSection.hidden,restrictSection:serverSection.restrict_section,postMilestoneDisabled:serverSection.post_milestone_disabled,codeReviewExpiresAt:serverSection.code_review_expires_at?Date.parse(serverSection.code_review_expires_at):null,isAssignedCSA:serverSection.is_assigned_csa,participantType:serverSection.participant_type,sectionInstructors:serverSection.section_instructors,syncEnabled:serverSection.sync_enabled,aiTutorEnabled:serverSection.ai_tutor_enabled,anyStudentHasProgress:serverSection.any_student_has_progress}},exports.studentFromServerStudent=function studentFromServerStudent(serverStudent,sectionId){return{sectionId,id:serverStudent.id,name:serverStudent.name,familyName:serverStudent.family_name,sharingDisabled:serverStudent.sharing_disabled,secretPicturePath:serverStudent.secret_picture_path,secretPictureName:serverStudent.secret_picture_name,secretWords:serverStudent.secret_words,userType:serverStudent.user_type}};var assignmentsForSection=function assignmentsForSection(courseOfferings,section){var assignments=[];if(section.courseOfferingId&&section.courseVersionId){var _courseOfferings$sect,courseVersion=null===(_courseOfferings$sect=courseOfferings[section.courseOfferingId])||void 0===_courseOfferings$sect?void 0:_courseOfferings$sect.course_versions[section.courseVersionId];courseVersion&&(assignments.push(courseVersion),section.unitId&&"UnitGroup"===courseVersion.type&&courseVersion.units[section.unitId]&&assignments.push(courseVersion.units[section.unitId]))}return assignments},assignmentNames=exports.assignmentNames=function assignmentNames(courseOfferings,section){return assignmentsForSection(courseOfferings,section).map((function(assignment){return assignment?assignment.name:""}))},assignmentPaths=exports.assignmentPaths=function assignmentPaths(courseOfferings,section){return assignmentsForSection(courseOfferings,section).map((function(assignment){return assignment?assignment.path:""}))};var sortedSectionsList=exports.sortedSectionsList=function sortedSectionsList(sectionsObject){return sortSectionsList(Object.values(sectionsObject))},sortSectionsList=exports.sortSectionsList=function sortSectionsList(sectionsList){return sectionsList.sort((function(a,b){return b.id-a.id}))};exports.studentShape=_propTypes.default.shape({sectionId:_propTypes.default.number,id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,familyName:_propTypes.default.string,sharingDisabled:_propTypes.default.bool,secretPicturePath:_propTypes.default.string,secretWords:_propTypes.default.string})},"./src/templates/teacherDashboard/teacherSectionsRedux.ts":function(__unused_webpack_module,exports,__webpack_require__){var _a,_b,_c,__assign=this&&this.__assign||function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__read=this&&this.__read||function(o,n){var m="function"==typeof Symbol&&o[Symbol.iterator];if(!m)return o;var r,e,i=m.call(o),ar=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)ar.push(r.value)}catch(error){e={error}}finally{try{r&&!r.done&&(m=i.return)&&m.call(i)}finally{if(e)throw e.error}}return ar},__spreadArray=this&&this.__spreadArray||function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateSelectedSection=exports.updateSectionAiTutorEnabled=exports.startLoadingSectionData=exports.setStudentsForCurrentSection=exports.setSections=exports.setSectionCodeReviewExpiresAt=exports.setRosterProviderName=exports.setRosterProvider=exports.setPageType=exports.setCourseOfferings=exports.setCoteacherInviteForPl=exports.setCoteacherInvite=exports.setAuthProviders=exports.selectSection=exports.rosterImportFailed=exports.removeSection=exports.finishLoadingSectionData=exports.editSectionProperties=exports.cancelImportRosterFlow=exports.cancelEditingSection=exports.beginEditingSection=exports.beginCreatingSection=exports.pageTypes=exports.importOrUpdateRoster=exports.beginImportRosterFlow=exports.unassignSection=exports.assignToSection=exports.asyncLoadCoteacherInvite=exports.asyncLoadSectionData=exports.removeSectionOrThrow=exports.finishEditingSection=exports.toggleSectionHidden=exports.__testInterface__=exports.SELECT_SECTION=exports.NO_SECTION=void 0;var toolkit_1=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js"),lodash_1=__importDefault(__webpack_require__("./node_modules/lodash/lodash.js")),constants_1=__webpack_require__("./src/accounts/constants.js"),sharedCourseConstants_1=__webpack_require__("./src/generated/curriculum/sharedCourseConstants.js"),AnalyticsConstants_1=__webpack_require__("./src/metrics/AnalyticsConstants.js"),AnalyticsReporter_1=__importDefault(__webpack_require__("./src/metrics/AnalyticsReporter.js")),firehose_1=__importDefault(__webpack_require__("./src/metrics/firehose.js")),sharedConstants_1=__webpack_require__("./generated-scripts/sharedConstants.ts"),teacherSectionsReduxSelectors_1=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsReduxSelectors.js");exports.NO_SECTION=null,exports.SELECT_SECTION="teacherSections/selectSection";var initialState={nextTempId:-1,studioUrl:"",providers:[],sectionIds:[],studentSectionIds:[],plSectionIds:[],selectedSectionId:exports.NO_SECTION,selectedSectionName:"",courseOfferings:[],courseOfferingsAreLoaded:!1,availableParticipantTypes:[],sections:{},selectedStudents:[],sectionsAreLoaded:!1,showSectionEditDialog:!1,saveInProgress:!1,asyncLoadComplete:!1,isRosterDialogOpen:!1,rosterProvider:null,rosterProviderName:null,classrooms:null,sectionBeingEdited:null,loadError:null,pageType:"",ltiSyncResult:null,isLoadingSectionData:!1,initialUnitName:null},mapProviderToSectionType=function(provider){return"google_oauth2"===provider?constants_1.OAuthSectionTypes.google_classroom:provider},sectionFromServerSection=function(section){return(0,teacherSectionsReduxSelectors_1.sectionFromServerSection)(section)},sectionSlice=(0,toolkit_1.createSlice)({name:"teacherSections",initialState,reducers:{setAuthProviders:function(state,action){state.providers=action.payload.map(mapProviderToSectionType)},setRosterProvider:function(state,action){action.payload&&(constants_1.OAuthSectionTypes[action.payload]||action.payload===sharedConstants_1.SectionLoginType.lti_v1)&&(state.rosterProvider=action.payload)},setPageType:function(state,action){state.pageType=action.payload},selectSection:function(state,action){if(action.payload){var id=parseInt(action.payload.toString(),10);state.sectionIds.includes(id)?(state.selectedSectionId=id,state.selectedSectionName=state.sections[id].name):(state.selectedSectionId=exports.NO_SECTION,state.selectedSectionName="")}else state.selectedSectionId=exports.NO_SECTION,state.selectedSectionName=""},updateSelectedSection:function(state,action){var sectionId=action.payload.id;sectionId&&(state.sections[sectionId]=__assign(__assign({},state.sections[sectionId]),sectionFromServerSection(action.payload)))},setSections:{reducer:function(state,action){var sections=action.payload.sections.map(sectionFromServerSection),selectedSectionId=action.payload.autoSelectOnlySection&&1===Object.keys(sections).length?action.payload.sections[0].id:state.selectedSectionId;sections.forEach((function(section){var prevSection=state.sections[section.id];prevSection&&Object.keys(section).forEach((function(key){if(void 0===section[key]&&void 0!==prevSection[key])throw new Error("SET_SECTIONS called multiple times in a way that would remove data")}))}));var sectionIds=lodash_1.default.uniq(state.sectionIds.concat(sections.map((function(section){return section.id})))),studentSectionIds=sections.filter((function(section){return section.participantType===sharedCourseConstants_1.ParticipantAudience.student})).map((function(section){return section.id})),plSectionIds=sections.filter((function(section){return section.participantType!==sharedCourseConstants_1.ParticipantAudience.student})).map((function(section){return section.id}));state.sectionsAreLoaded=!0,state.selectedSectionId=selectedSectionId,state.sectionIds=sectionIds,state.studentSectionIds=studentSectionIds,state.plSectionIds=plSectionIds,state.sections=__assign(__assign({},state.sections),lodash_1.default.keyBy(sections,"id"))},prepare:function(sections,autoSelectOnlySection){return void 0===autoSelectOnlySection&&(autoSelectOnlySection=!0),{payload:{sections,autoSelectOnlySection}}}},startLoadingSectionData:function(state){state.isLoadingSectionData=!0},finishLoadingSectionData:function(state){state.isLoadingSectionData=!1},setStudentsForCurrentSection:{reducer:function(state,action){var selectedStudents=(action.payload.students||[]).map((function(student){return(0,teacherSectionsReduxSelectors_1.studentFromServerStudent)(student,action.payload.sectionId)}));state.selectedStudents=selectedStudents},prepare:function(sectionId,students){return{payload:{sectionId,students}}}},setRosterProviderName:function(state,action){state.rosterProviderName=action.payload},updateSectionAiTutorEnabled:function(state,action){var _a=action.payload,sectionId=_a.sectionId,aiTutorEnabled=_a.aiTutorEnabled;state.sections[sectionId].aiTutorEnabled=aiTutorEnabled},setCourseOfferings:function(state,action){state.courseOfferings=action.payload,state.courseOfferingsAreLoaded=!0},setAvailableParticipantTypes:function(state,action){state.availableParticipantTypes=action.payload},setSectionCodeReviewExpiresAt:{reducer:function(state,action){if(!state.sections[action.payload.sectionId])throw new Error("section does not exist");state.sections[action.payload.sectionId].codeReviewExpiresAt=action.payload.codeReviewExpiresAt?Date.parse(action.payload.codeReviewExpiresAt):null},prepare:function(sectionId,codeReviewExpiresAt){return{payload:{sectionId,codeReviewExpiresAt}}}},removeSection:function(state,action){var sectionId=action.payload;state.sections[sectionId];state.sectionIds=lodash_1.default.without(state.sectionIds,sectionId),state.studentSectionIds=lodash_1.default.without(state.studentSectionIds,sectionId),state.plSectionIds=lodash_1.default.without(state.plSectionIds,sectionId),state.sections=lodash_1.default.omit(state.sections,sectionId)},beginCreatingSection:{reducer:function(state,action){var initialSectionData=(0,teacherSectionsReduxSelectors_1.newSectionData)(action.payload.participantType);action.payload.courseOfferingId&&(initialSectionData.courseOfferingId=action.payload.courseOfferingId),action.payload.courseVersionId&&(initialSectionData.courseVersionId=action.payload.courseVersionId),action.payload.unitId&&(initialSectionData.unitId=action.payload.unitId),state.initialCourseId=initialSectionData.courseId,state.initialUnitId=initialSectionData.unitId,state.initialCourseOfferingId=initialSectionData.courseOfferingId,state.initialCourseVersionId=initialSectionData.courseVersionId,state.initialLoginType=initialSectionData.loginType,state.initialUnitName=initialSectionData.unitName,state.sectionBeingEdited=initialSectionData},prepare:function(courseOfferingId,courseVersionId,unitId,participantType){return{payload:{courseOfferingId,courseVersionId,unitId,participantType}}}},beginEditingSection:{reducer:function(state,action){var silent=!!action.payload.silent,initialParticipantType=1===state.availableParticipantTypes.length?state.availableParticipantTypes[0]:void 0,initialSectionData=action.payload.sectionId?__assign({},state.sections[action.payload.sectionId]):(0,teacherSectionsReduxSelectors_1.newSectionData)(initialParticipantType);state.initialCourseId=initialSectionData.courseId,state.initialUnitId=initialSectionData.unitId,state.initialCourseOfferingId=initialSectionData.courseOfferingId,state.initialCourseVersionId=initialSectionData.courseVersionId,state.initialLoginType=initialSectionData.loginType,state.sectionBeingEdited=initialSectionData,state.showSectionEditDialog=!silent},prepare:function(sectionId,silent){return void 0===sectionId&&(sectionId=null),void 0===silent&&(silent=!1),{payload:{sectionId,silent}}}},editSectionProperties:function(state,action){if(!state.sectionBeingEdited)throw new Error("Cannot edit section properties; no section is currently being edited.");for(var key in action.payload)if(!teacherSectionsReduxSelectors_1.USER_EDITABLE_SECTION_PROPS.includes(key))throw new Error("Cannot edit property ".concat(key,"; it's not allowed."));action.payload.participantType&&action.payload.participantType!==sharedCourseConstants_1.ParticipantAudience.student&&(state.sectionBeingEdited.loginType=sharedConstants_1.SectionLoginType.email,state.sectionBeingEdited.grades=[sharedConstants_1.PlGradeValue]),action.payload.unitId&&void 0===action.payload.lessonExtras&&(state.sectionBeingEdited.lessonExtras=!0),action.payload.unitId&&void 0===action.payload.ttsAutoplayEnabled&&(state.sectionBeingEdited.ttsAutoplayEnabled=!1),state.sectionBeingEdited=__assign(__assign({},state.sectionBeingEdited),action.payload)},startSaveRequest:function(state){state.saveInProgress=!0},finishSaveRequest:function(state,action){var section=sectionFromServerSection(action.payload.serverSection),oldSectionId=action.payload.sectionId,isNewSection=section.id!==oldSectionId;isNewSection&&(state.sectionIds.includes(oldSectionId)?state.sectionIds=state.sectionIds.map((function(id){return id===oldSectionId?section.id:id})):state.sectionIds=__spreadArray([section.id],__read(state.sectionIds),!1)),delete state.sections[oldSectionId],state.sections[section.id]=__assign(__assign({},state.sections[section.id]),section),state.studentSectionIds=Object.values(state.sections).filter((function(section){return section.participantType===sharedCourseConstants_1.ParticipantAudience.student})).map((function(section){return section.id})),state.plSectionIds=Object.values(state.sections).filter((function(section){return section.participantType!==sharedCourseConstants_1.ParticipantAudience.student})).map((function(section){return section.id})),section.loginType!==state.initialLoginType&&firehose_1.default.putRecord({study:"teacher-dashboard",study_group:"edit-section-details",event:"change-login-type",data_json:JSON.stringify({sectionId:section.id,initialLoginType:state.initialLoginType,updatedLoginType:section.loginType})},{includeUserId:!0});var assignmentData={section_id:section.id,section_creation_timestamp:section.createdAt,page_name:state.pageType};section.unitId!==state.initialUnitId&&(assignmentData.unit_id=section.unitId),section.courseId!==state.initialCourseId&&(assignmentData.course_id=section.courseId),section.courseOfferingId!==state.initialCourseOfferingId&&(assignmentData.course_offering_id=section.courseOfferingId),section.courseVersionId!==state.initialCourseVersionId&&(assignmentData.course_version_id=section.courseVersionId),section.unitName!==state.initialUnitName&&(assignmentData.unitName=section.unitName),(assignmentData.unit_id||assignmentData.course_id)&&firehose_1.default.putRecord({study:"assignment",study_group:"v1",event:isNewSection?"create_section":"edit_section_details",data_json:JSON.stringify(assignmentData)},{includeUserId:!0}),state.sectionBeingEdited=null,state.saveInProgress=!1},failSaveRequest:function(state){state.saveInProgress=!1},beginAsyncLoad:function(state){state.asyncLoadComplete=!1},endAsyncLoad:function(state){state.asyncLoadComplete=!0},cancelEditingSection:function(state){state.sectionBeingEdited=null},setCoteacherInvite:function(state,action){state.coteacherInvite=action.payload},setCoteacherInviteForPl:function(state,action){state.coteacherInviteForPl=action.payload},beginImportRosterFlow:function(state){state.isRosterDialogOpen=!0,state.classrooms=null},importRosterFlowListLoaded:function(state,action){state.classrooms=action.payload},cancelImportRosterFlow:function(state){state.isRosterDialogOpen=!1,state.rosterProvider=null,state.classrooms=null},rosterImportFailed:function(state,action){state.loadError={status:action.payload.status,message:action.payload.message}},rosterImportRequest:function(state){state.classrooms=null},rosterImportSuccess:function(state,action){state.isRosterDialogOpen=!1,state.sectionBeingEdited=__assign(__assign({},state.sections[action.payload]),{hidden:!1})},ltiRosterImportSuccess:function(state,action){state.ltiSyncResult=action.payload}}});exports.__testInterface__={EDIT_SECTION_REQUEST:"teacherSections/startSaveRequest",EDIT_SECTION_SUCCESS:"teacherSections/finishSaveRequest",IMPORT_ROSTER_FLOW_BEGIN:"teacherSections/beginImportRosterFlow",IMPORT_ROSTER_FLOW_LIST_LOADED:"teacherSections/importRosterFlowListLoaded",PENDING_NEW_SECTION_ID:-1,USER_EDITABLE_SECTION_PROPS:teacherSectionsReduxSelectors_1.USER_EDITABLE_SECTION_PROPS};exports.toggleSectionHidden=function(sectionId){return function(dispatch,getState){dispatch((0,exports.beginEditingSection)(sectionId,!0));var currentlyHidden=getState().teacherSections.sections[sectionId].hidden;return dispatch((0,exports.editSectionProperties)({hidden:!currentlyHidden})),firehose_1.default.putRecord({study:"teacher_dashboard_actions",study_group:"toggleSectionHidden",event:currentlyHidden?"restoreSection":"archiveSection",data_json:JSON.stringify({section_id:sectionId})}),dispatch((0,exports.finishEditingSection)())}};exports.finishEditingSection=function(){return function(dispatch,getState){var section=getState().teacherSections.sectionBeingEdited;if(!section)throw new Error("section does not exist");return new Promise((function(resolve,reject){(function(dispatch,getState){dispatch(startSaveRequest());var state=getState().teacherSections,section=state.sectionBeingEdited;if(!section)throw new Error("section does not exist");return(0,teacherSectionsReduxSelectors_1.isAddingSection)(state)?$.ajax({url:"/dashboardapi/sections",method:"POST",contentType:"application/json;charset=UTF-8",data:JSON.stringify((0,teacherSectionsReduxSelectors_1.serverSectionFromSection)(section))}):$.ajax({url:"/dashboardapi/sections/".concat(section.id),method:"PATCH",contentType:"application/json;charset=UTF-8",data:JSON.stringify((0,teacherSectionsReduxSelectors_1.serverSectionFromSection)(section))})})(dispatch,getState).done((function(result){dispatch(finishSaveRequest({sectionId:section.id,serverSection:result})),resolve(result)})).fail((function(jqXhr,status){dispatch(failSaveRequest()),reject(status)}))}))}};exports.removeSectionOrThrow=function(sectionId){return function(dispatch,getState){if(!getState().teacherSections.sections[sectionId])throw new Error("section does not exist");dispatch((0,exports.removeSection)(sectionId))}};function fetchJSON(url,params){return new Promise((function(resolve,reject){$.getJSON(url,params).done(resolve).fail((function(jqxhr){return reject(new Error("\n        url: ".concat(url,"\n        status: ").concat(jqxhr.status,"\n        statusText: ").concat(jqxhr.statusText,"\n        responseText: ").concat(jqxhr.responseText,"\n      ")))}))}))}exports.asyncLoadSectionData=function(id){return function(dispatch){dispatch(beginAsyncLoad());var promises=[fetchJSON("/dashboardapi/sections").then((function(sections){return dispatch((0,exports.setSections)(sections))})),fetchJSON("/dashboardapi/sections/valid_course_offerings").then((function(offerings){return dispatch((0,exports.setCourseOfferings)(offerings))})),fetchJSON("/dashboardapi/sections/available_participant_types").then((function(participantTypes){return dispatch(setAvailableParticipantTypes(participantTypes.availableParticipantTypes))}))];return id&&promises.push(fetchJSON("/dashboardapi/sections/".concat(id,"/students")).then((function(students){return dispatch((0,exports.setStudentsForCurrentSection)(id,students))}))),Promise.all(promises).catch((function(err){console.error(err.message)})).then((function(){dispatch(endAsyncLoad())}))}};exports.asyncLoadCoteacherInvite=function(){return function(dispatch){fetchJSON("/api/v1/section_instructors").then((function(response){var sectionInstructors=response,coteacherInviteForPl=sectionInstructors.find((function(instructorInvite){return"invited"===instructorInvite.status&&"student"!==instructorInvite.participant_type})),coteacherInviteForClassrooms=sectionInstructors.find((function(instructorInvite){return"invited"===instructorInvite.status&&"student"===instructorInvite.participant_type}));dispatch((0,exports.setCoteacherInvite)(coteacherInviteForClassrooms)),dispatch((0,exports.setCoteacherInviteForPl)(coteacherInviteForPl))})).catch((function(err){console.error(err.message)}))}};exports.assignToSection=function(sectionId,courseId,courseOfferingId,courseVersionId,unitId,pageType){return firehose_1.default.putRecord({study:"assignment",event:"course-assigned-to-section",data_json:JSON.stringify({sectionId,unitId,courseId,date:new Date},removeNullValues)},{includeUserId:!0}),function(dispatch,getState){var section=getState().teacherSections.sections[sectionId];return(courseOfferingId&&section.courseOfferingId!==courseOfferingId||courseVersionId&&section.courseVersionId!==courseVersionId||unitId&&section.unitId!==unitId)&&AnalyticsReporter_1.default.sendEvent(AnalyticsConstants_1.EVENTS.CURRICULUM_ASSIGNED,{sectionName:section.name,sectionId,sectionLoginType:section.loginType,previousUnitId:section.unitId,previousCourseId:section.courseOfferingId,previousCourseVersionId:section.courseVersionId,newUnitId:unitId,newCourseId:courseOfferingId,newCourseVersionId:courseVersionId},AnalyticsConstants_1.PLATFORMS.BOTH),dispatch((0,exports.beginEditingSection)(sectionId,!0)),dispatch((0,exports.editSectionProperties)({courseId,courseOfferingId,courseVersionId,unitId})),dispatch((0,exports.finishEditingSection)())}};function removeNullValues(key,val){if(null!=val)return val}exports.unassignSection=function(sectionId,location){return function(dispatch,getState){dispatch((0,exports.beginEditingSection)(sectionId,!0));var _a=getState().teacherSections,initialCourseId=_a.initialCourseId,initialUnitId=_a.initialUnitId;return dispatch((0,exports.editSectionProperties)({courseId:null,courseOfferingId:null,courseVersionId:null,unitId:null})),firehose_1.default.putRecord({study:"assignment",event:"course-unassigned-from-section",data_json:JSON.stringify({sectionId,scriptId:initialUnitId,courseId:initialCourseId,location,date:new Date},removeNullValues)},{includeUserId:!0}),dispatch((0,exports.finishEditingSection)())}};var urlByProvider=((_a={})[constants_1.OAuthSectionTypes.google_classroom]="/dashboardapi/google_classrooms",_a[constants_1.OAuthSectionTypes.clever]="/dashboardapi/clever_classrooms",_a);exports.beginImportRosterFlow=function(){return function(dispatch,getState){var state=getState().teacherSections,provider=state.rosterProvider;return provider&&Object.keys(urlByProvider).includes(provider)?state.isRosterDialogOpen?Promise.resolve():(dispatch(sectionSlice.actions.beginImportRosterFlow()),new Promise((function(resolve,reject){var url=urlByProvider[provider];$.ajax(url).done((function(response){dispatch(importRosterFlowListLoaded(response.courses||[])),resolve()})).fail((function(result){var message=result.responseJSON?result.responseJSON.error:"Unknown error.";dispatch((0,exports.rosterImportFailed)({status:result.status,message})),reject(new Error(message))}))}))):Promise.reject(new Error("Unable to begin import roster flow without a provider"))}};var importUrlByProvider=((_b={})[constants_1.OAuthSectionTypes.google_classroom]="/dashboardapi/import_google_classroom",_b[constants_1.OAuthSectionTypes.clever]="/dashboardapi/import_clever_classroom",_b[sharedConstants_1.SectionLoginType.lti_v1]="/lti/v1/sync_course",_b);exports.importOrUpdateRoster=function(courseId,courseName){return function(dispatch,getState){var provider=getState().teacherSections.rosterProvider;if(!provider)throw new Error("Roster provider has not been set.");var sectionId,importSectionUrl=importUrlByProvider[provider];return dispatch(rosterImportRequest()),provider===sharedConstants_1.SectionLoginType.lti_v1?fetch("".concat(importSectionUrl,"?section_code=").concat(courseId),{headers:{Accept:"application/json"}}).then((function(response){return response.json()})).then((function(results){return dispatch(ltiRosterImportSuccess(results))})):fetchJSON(importSectionUrl,{courseId,courseName}).then((function(newSection){return sectionId=newSection.id})).then((function(){return dispatch((0,exports.asyncLoadSectionData)())})).then((function(){return dispatch(rosterImportSuccess(sectionId))}))}},exports.pageTypes={level:"level",scriptOverview:"script_overview",courseOverview:"course_overview",lessonExtras:"lesson_extras",homepage:"homepage"};var _d=sectionSlice.actions,beginAsyncLoad=_d.beginAsyncLoad,endAsyncLoad=_d.endAsyncLoad,failSaveRequest=_d.failSaveRequest,finishSaveRequest=_d.finishSaveRequest,importRosterFlowListLoaded=_d.importRosterFlowListLoaded,ltiRosterImportSuccess=_d.ltiRosterImportSuccess,rosterImportRequest=_d.rosterImportRequest,rosterImportSuccess=_d.rosterImportSuccess,setAvailableParticipantTypes=_d.setAvailableParticipantTypes,startSaveRequest=_d.startSaveRequest;exports.beginCreatingSection=(_c=sectionSlice.actions).beginCreatingSection,exports.beginEditingSection=_c.beginEditingSection,exports.cancelEditingSection=_c.cancelEditingSection,exports.cancelImportRosterFlow=_c.cancelImportRosterFlow,exports.editSectionProperties=_c.editSectionProperties,exports.finishLoadingSectionData=_c.finishLoadingSectionData,exports.removeSection=_c.removeSection,exports.rosterImportFailed=_c.rosterImportFailed,exports.selectSection=_c.selectSection,exports.setAuthProviders=_c.setAuthProviders,exports.setCoteacherInvite=_c.setCoteacherInvite,exports.setCoteacherInviteForPl=_c.setCoteacherInviteForPl,exports.setCourseOfferings=_c.setCourseOfferings,exports.setPageType=_c.setPageType,exports.setRosterProvider=_c.setRosterProvider,exports.setRosterProviderName=_c.setRosterProviderName,exports.setSectionCodeReviewExpiresAt=_c.setSectionCodeReviewExpiresAt,exports.setSections=_c.setSections,exports.setStudentsForCurrentSection=_c.setStudentsForCurrentSection,exports.startLoadingSectionData=_c.startLoadingSectionData,exports.updateSectionAiTutorEnabled=_c.updateSectionAiTutorEnabled,exports.updateSelectedSection=_c.updateSelectedSection,exports.default=sectionSlice.reducer}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,