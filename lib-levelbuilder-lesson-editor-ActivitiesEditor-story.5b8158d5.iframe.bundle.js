(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[5368,7408,6845],{"./src/lib/levelbuilder/MarkdownEnabledTextarea.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.markdownFeaturesShape=exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_StyledCodeBlock=__webpack_require__("./src/templates/lessonOverview/StyledCodeBlock.jsx"),_UploadImageDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/UploadImageDialog.jsx")),_FindResourceDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/FindResourceDialog.jsx")),_FindProgrammingExpressionDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/FindProgrammingExpressionDialog.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var markdownFeaturesShape=exports.markdownFeaturesShape=_propTypes.default.shape({imageUpload:_propTypes.default.bool,programmingExpression:_propTypes.default.bool,resourceLink:_propTypes.default.bool}),MarkdownEnabledTextarea=exports.default=function(_React$Component){function MarkdownEnabledTextarea(props){var _this;return _defineProperty(_this=_React$Component.call(this,props)||this,"handleOpenUploadImage",(function(){_this.setState({uploadImageOpen:!0})})),_defineProperty(_this,"handleOpenAddResourceLink",(function(){_this.setState({addResourceLinkOpen:!0})})),_defineProperty(_this,"handleOpenAddProgrammingExpression",(function(){_this.setState({addProgrammingExpressionOpen:!0})})),_defineProperty(_this,"handleCloseUploadImage",(function(){_this.setState({uploadImageOpen:!1})})),_defineProperty(_this,"handleCloseAddResourceLink",(function(){_this.setState({addResourceLinkOpen:!1})})),_defineProperty(_this,"handleCloseAddProgrammingExpression",(function(){_this.setState({addProgrammingExpressionOpen:!1})})),_defineProperty(_this,"handleConfirmAddResourceLink",(function(resourceKey){resourceKey&&_this.changeMarkdown(_this.props.markdown+"\n\n[r ".concat(resourceKey,"]")),_this.handleCloseAddResourceLink()})),_defineProperty(_this,"handleUploadImage",(function(url,expandable){var param=expandable?"expandable":"";_this.changeMarkdown(_this.props.markdown+"\n\n![".concat(param,"](").concat(url,")"))})),_defineProperty(_this,"handleAddProgrammingExpression",(function(programmingExpression){programmingExpression&&_this.changeMarkdown(_this.props.markdown+(0,_StyledCodeBlock.buildProgrammingExpressionMarkdown)(programmingExpression)),_this.handleCloseAddProgrammingExpression()})),_this.state={},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MarkdownEnabledTextarea,_React$Component);var _proto=MarkdownEnabledTextarea.prototype;return _proto.changeMarkdown=function changeMarkdown(newMarkdown){var e={target:{value:newMarkdown}};this.props.handleMarkdownChange(e)},_proto.render=function render(){return _react.default.createElement("div",null,_react.default.createElement("div",{style:{margin:5}},_react.default.createElement("textarea",{name:this.props.name,onChange:this.props.handleMarkdownChange,rows:this.props.inputRows||5,style:styles.input,value:this.props.markdown}),Object.values(this.props.features).includes(!0)&&_react.default.createElement("div",{className:"btn-toolbar"},_react.default.createElement("div",{className:"btn-group"},_react.default.createElement("span",{className:"btn dropdown-toggle","data-toggle":"dropdown"},"Addâ€¦ ",_react.default.createElement("span",{className:"caret"})),_react.default.createElement("ul",{className:"dropdown-menu"},this.props.features.imageUpload&&_react.default.createElement("li",null,_react.default.createElement("a",{onClick:this.handleOpenUploadImage},"Image")),this.props.features.resourceLink&&_react.default.createElement("li",null,_react.default.createElement("a",{onClick:this.handleOpenAddResourceLink},"Resource")),this.props.features.programmingExpression&&_react.default.createElement("li",null,_react.default.createElement("a",{onClick:this.handleOpenAddProgrammingExpression},"Code Block")))))),this.props.features.imageUpload&&_react.default.createElement(_UploadImageDialog.default,{handleClose:this.handleCloseUploadImage,isOpen:!!this.state.uploadImageOpen,uploadImage:this.handleUploadImage}),this.props.features.resourceLink&&_react.default.createElement(_FindResourceDialog.default,{handleClose:this.handleCloseAddResourceLink,handleConfirm:this.handleConfirmAddResourceLink,isOpen:!!this.state.addResourceLinkOpen}),this.props.features.programmingExpression&&_react.default.createElement(_FindProgrammingExpressionDialog.default,{handleClose:this.handleCloseAddProgrammingExpression,handleConfirm:this.handleAddProgrammingExpression,isOpen:!!this.state.addProgrammingExpressionOpen}))},MarkdownEnabledTextarea}(_react.default.Component);_defineProperty(MarkdownEnabledTextarea,"propTypes",{markdown:_propTypes.default.string,name:_propTypes.default.string,inputRows:_propTypes.default.number,handleMarkdownChange:_propTypes.default.func.isRequired,features:markdownFeaturesShape}),_defineProperty(MarkdownEnabledTextarea,"defaultProps",{features:{}});var styles={container:{flex:"1 1 500px",maxWidth:970,margin:5},input:{width:"100%",boxSizing:"border-box",padding:"4px 6px",color:"#555",border:"1px solid #ccc",borderRadius:4,margin:0},icon:{marginRight:7}}},"./src/lib/levelbuilder/OrderControls.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_ActivitySection=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/activities/ActivitySection.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_Activity=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/activities/Activity.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var OrderControls=exports.default=function(_Component){function OrderControls(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",{showConfirm:!1}),_defineProperty(_this,"handleMoveUp",(function(){_this.props.move("up")})),_defineProperty(_this,"handleMoveDown",(function(){_this.props.move("down")})),_defineProperty(_this,"handleRemove",(function(){_this.setState({showConfirm:!0})})),_defineProperty(_this,"handleConfirm",(function(){_this.setState({showConfirm:!1}),_this.props.remove()})),_defineProperty(_this,"handleClose",(function(){_this.setState({showConfirm:!1})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(OrderControls,_Component),OrderControls.prototype.render=function render(){var showConfirm=this.state.showConfirm,_this$props=this.props,name=_this$props.name,item=_this$props.item,itemType=_this$props.itemType,text='Are you sure you want to remove "'.concat(name,'" and all its contents from the script?');return _react.default.createElement("div",{style:styles.controls},_react.default.createElement("i",{onMouseDown:this.handleMoveUp,style:styles.controlIcon,className:"fa fa-caret-up"}),_react.default.createElement("i",{onMouseDown:this.handleMoveDown,style:styles.controlIcon,className:"fa fa-caret-down"}),_react.default.createElement("i",{onMouseDown:this.handleRemove,style:styles.controlIcon,className:"fa fa-trash"}),_react.default.createElement(_BaseDialog.default,{isOpen:showConfirm,handleClose:this.handleClose,useUpdatedStyles:!0,style:styles.dialog},_react.default.createElement("h2",null,text),item&&itemType&&_react.default.createElement("div",{style:styles.previewContainer},_react.default.createElement("h4",null,"Preview of Content To Delete: "),_react.default.createElement("div",{style:styles.preview},"activity"===itemType&&_react.default.createElement(_Activity.default,{activity:item}),"activitySection"===itemType&&_react.default.createElement(_ActivitySection.default,{section:item}))),_react.default.createElement(_DialogFooter.default,{rightAlign:!0},_react.default.createElement(_Button.default,{text:"Cancel",onClick:this.handleClose,color:_Button.default.ButtonColor.gray}),_react.default.createElement(_Button.default,{text:"Delete",onClick:this.handleConfirm,color:_Button.default.ButtonColor.red}))))},OrderControls}(_react.Component);_defineProperty(OrderControls,"propTypes",{move:_propTypes.default.func.isRequired,remove:_propTypes.default.func.isRequired,name:_propTypes.default.string.isRequired,item:_propTypes.default.object,itemType:_propTypes.default.oneOf(["activity","activitySection"])});var styles={controls:{display:"flex"},controlIcon:{margin:"0 5px",cursor:"pointer",fontSize:20},previewContainer:{color:_color.default.default_text},preview:{border:"1px solid #ccc",padding:"5px 25px"},dialog:_objectSpread(_objectSpread({paddingLeft:20,paddingRight:20,paddingBottom:20,width:970},_fontConstants.default["main-font-regular"]),{},{marginLeft:-500})};module.exports=exports.default},"./src/lib/levelbuilder/constants.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tokenMargin=exports.borderRadius=void 0;exports.borderRadius=3,exports.tokenMargin=7},"./src/lib/levelbuilder/lesson-editor/ActivitiesEditor.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedActivitiesEditor=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_ActivityCardAndPreview=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/ActivityCardAndPreview.jsx")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_activitiesEditorRedux=__webpack_require__("./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js"),_reactDom=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/index.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ActivitiesEditor=function(_Component){function ActivitiesEditor(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"handleAddActivity",(function(){_this.props.addActivity(_this.props.activities.length,_this.generateActivityKey(),_this.generateActivitySectionKey())})),_defineProperty(_this,"generateActivityKey",(function(){for(var activityNumber=_this.props.activities.length+1;_this.props.activities.some((function(activity){return activity.key==="activity-".concat(activityNumber)}));)activityNumber++;return"activity-".concat(activityNumber)})),_defineProperty(_this,"generateActivitySectionKey",(function(){var activitySectionNumber=1,activitySectionKeys=[];for(_this.props.activities.forEach((function(activity){activity.activitySections.forEach((function(section){activitySectionKeys.push(section.key)}))}));activitySectionKeys.includes("activitySection-".concat(activitySectionNumber));)activitySectionNumber++;return"activitySection-".concat(activitySectionNumber)})),_defineProperty(_this,"sectionRefs",[]),_defineProperty(_this,"setActivitySectionRef",(function(sectionRef,activityPos,sectionPos){_this.sectionRefs[activityPos]=_this.sectionRefs[activityPos]||[],_this.sectionRefs[activityPos][sectionPos]=sectionRef})),_defineProperty(_this,"sectionMetrics",[]),_defineProperty(_this,"updateActivitySectionMetrics",(function(){_this.sectionMetrics=[],_this.sectionRefs.forEach((function(sectionRefs,activityPos){sectionRefs.forEach((function(ref,sectionPos){var node=_reactDom.default.findDOMNode(ref),rect=!!node&&node.getBoundingClientRect();_this.sectionMetrics[activityPos]=_this.sectionMetrics[activityPos]||[],_this.sectionMetrics[activityPos][sectionPos]=rect}))}))})),_defineProperty(_this,"clearTargetActivitySection",(function(){_this.setState({targetActivityPos:null,targetActivitySectionPos:null})})),_defineProperty(_this,"updateTargetActivitySection",(function(y){_this.sectionMetrics.forEach((function(sectionMetrics,activityPos){sectionMetrics.forEach((function(rect,sectionPos){y>rect.top&&y<rect.top+rect.height&&_this.setState({targetActivityPos:activityPos,targetActivitySectionPos:sectionPos})}))}))})),_this.state={targetActivityPos:null,targetActivitySectionPos:null},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ActivitiesEditor,_Component),ActivitiesEditor.prototype.render=function render(){var _this2=this,_this$props=this.props,activities=_this$props.activities,allowMajorCurriculumChanges=_this$props.allowMajorCurriculumChanges;return _react.default.createElement("div",{style:styles.activityEditAndPreview},activities.map((function(activity){return _react.default.createElement(_ActivityCardAndPreview.default,{key:activity.key,activity,generateActivitySectionKey:_this2.generateActivitySectionKey,activitiesCount:activities.length,setActivitySectionRef:_this2.setActivitySectionRef,updateTargetActivitySection:_this2.updateTargetActivitySection,clearTargetActivitySection:_this2.clearTargetActivitySection,targetActivityPos:_this2.state.targetActivityPos,targetActivitySectionPos:_this2.state.targetActivitySectionPos,activitySectionMetrics:_this2.sectionMetrics,updateActivitySectionMetrics:_this2.updateActivitySectionMetrics,hasLessonPlan:_this2.props.hasLessonPlan,allowMajorCurriculumChanges})})),_react.default.createElement("div",null,this.props.hasLessonPlan&&_react.default.createElement("button",{onMouseDown:this.handleAddActivity,className:"btn add-activity",style:styles.addActivity,type:"button"},_react.default.createElement("i",{style:{marginRight:7},className:"fa fa-plus-circle"}),"Activity")),_react.default.createElement("input",{type:"hidden",name:"activities",value:(0,_activitiesEditorRedux.getSerializedActivities)(this.props.activities)}))},ActivitiesEditor}(_react.Component);_defineProperty(ActivitiesEditor,"propTypes",{hasLessonPlan:_propTypes.default.bool.isRequired,allowMajorCurriculumChanges:_propTypes.default.bool.isRequired,activities:_propTypes.default.arrayOf(_shapes.activityShape).isRequired,addActivity:_propTypes.default.func.isRequired});var styles={activityEditAndPreview:{margin:10},addActivity:{fontSize:14,color:"white",background:_color.default.cyan,border:"1px solid ".concat(_color.default.cyan),boxShadow:"none"}};exports.UnconnectedActivitiesEditor=ActivitiesEditor,exports.default=(0,_reactRedux.connect)((function(state){return{activities:state.activities}}),{addActivity:_activitiesEditorRedux.addActivity})(ActivitiesEditor)},"./src/lib/levelbuilder/lesson-editor/ActivityCard.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedActivityCard=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_constants=__webpack_require__("./src/lib/levelbuilder/constants.js"),_OrderControls=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/OrderControls.jsx")),_ActivitySectionCard=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/ActivitySectionCard.jsx")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_activitiesEditorRedux=__webpack_require__("./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js"),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ActivityCard=function(_Component){function ActivityCard(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"handleAddActivitySection",(function(){_this.props.addActivitySection(_this.props.activity.position,_this.props.generateActivitySectionKey())})),_defineProperty(_this,"handleMoveActivity",(function(direction){(1!==_this.props.activity.position&&"up"===direction||_this.props.activity.position!==_this.props.activitiesCount&&"down"===direction)&&_this.props.moveActivity(_this.props.activity.position,direction)})),_defineProperty(_this,"handleRemoveActivity",(function(){_this.props.removeActivity(_this.props.activity.position)})),_defineProperty(_this,"handleChangeDisplayName",(function(event){_this.props.updateActivityField(_this.props.activity.position,"displayName",event.target.value)})),_defineProperty(_this,"handleChangeDuration",(function(event){_this.props.updateActivityField(_this.props.activity.position,"duration",Number.isNaN(parseInt(event.target.value))?"":parseInt(event.target.value))})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ActivityCard,_Component),ActivityCard.prototype.render=function render(){var _this2=this,_this$props=this.props,activity=_this$props.activity,setActivitySectionRef=_this$props.setActivitySectionRef,updateTargetActivitySection=_this$props.updateTargetActivitySection,clearTargetActivitySection=_this$props.clearTargetActivitySection,updateActivitySectionMetrics=_this$props.updateActivitySectionMetrics,hasLessonPlan=_this$props.hasLessonPlan,allowMajorCurriculumChanges=_this$props.allowMajorCurriculumChanges,levelsInActivity=0;return activity.activitySections.forEach((function(activitySection){levelsInActivity+=activitySection.scriptLevels.length})),_react.default.createElement("div",{className:"uitest-activity-card"},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.activityHeader),this.props.collapsed&&{marginBottom:10})},_react.default.createElement("div",{style:styles.activityHeaderComponents},_react.default.createElement("div",{style:styles.inputsAndIcon},hasLessonPlan&&_react.default.createElement("div",null,_react.default.createElement(_FontAwesome.default,{icon:this.props.collapsed?"expand":"compress",onClick:this.props.handleCollapse}),_react.default.createElement("label",{style:styles.labelAndInput},_react.default.createElement("span",{style:styles.label},"Activity:"),_react.default.createElement("input",{value:activity.displayName,style:{width:200},onChange:this.handleChangeDisplayName,className:"uitest-activity-name-input"}))),_react.default.createElement("label",{style:styles.labelAndInput},_react.default.createElement("span",{style:styles.label},"Duration:"),_react.default.createElement("input",{value:activity.duration,style:{width:35},onChange:this.handleChangeDuration,className:"uitest-activity-duration-input"}),_react.default.createElement("span",{style:{fontSize:10}},"(mins)"))),hasLessonPlan&&(allowMajorCurriculumChanges||0===levelsInActivity)&&_react.default.createElement(_OrderControls.default,{name:activity.displayName||"Unnamed Activity",move:this.handleMoveActivity,remove:this.handleRemoveActivity,item:this.props.activity,itemType:"activity"}))),_react.default.createElement("div",{style:styles.activityBody,hidden:this.props.collapsed},activity.activitySections.map((function(section){return _react.default.createElement(_ActivitySectionCard.default,{key:section.key,activitySection:section,activityPosition:activity.position,activitySectionsCount:activity.activitySections.length,activitiesCount:_this2.props.activitiesCount,ref:function ref(_ref){setActivitySectionRef(_ref,activity.position,section.position)},activitySectionMetrics:_this2.props.activitySectionMetrics,updateTargetActivitySection,clearTargetActivitySection,targetActivityPos:_this2.props.targetActivityPos,targetActivitySectionPos:_this2.props.targetActivitySectionPos,updateActivitySectionMetrics,hasLessonPlan,allowMajorCurriculumChanges})})),_react.default.createElement("button",{onMouseDown:this.handleAddActivitySection.bind(),className:"btn add-activity-section",style:styles.addButton,type:"button"},_react.default.createElement("i",{style:{marginRight:7},className:"fa fa-plus-circle"}),"Activity Section")))},ActivityCard}(_react.Component);_defineProperty(ActivityCard,"propTypes",{activity:_shapes.activityShape.isRequired,generateActivitySectionKey:_propTypes.default.func.isRequired,activitiesCount:_propTypes.default.number.isRequired,setActivitySectionRef:_propTypes.default.func.isRequired,updateTargetActivitySection:_propTypes.default.func.isRequired,clearTargetActivitySection:_propTypes.default.func.isRequired,targetActivityPos:_propTypes.default.number,targetActivitySectionPos:_propTypes.default.number,activitySectionMetrics:_propTypes.default.array.isRequired,updateActivitySectionMetrics:_propTypes.default.func.isRequired,handleCollapse:_propTypes.default.func.isRequired,collapsed:_propTypes.default.bool.isRequired,hasLessonPlan:_propTypes.default.bool.isRequired,allowMajorCurriculumChanges:_propTypes.default.bool.isRequired,addActivitySection:_propTypes.default.func.isRequired,removeActivity:_propTypes.default.func.isRequired,moveActivity:_propTypes.default.func.isRequired,updateActivityField:_propTypes.default.func.isRequired});var styles={activityHeader:{fontSize:18,color:"white",background:_color.default.cyan,borderTopLeftRadius:_constants.borderRadius,borderTopRightRadius:_constants.borderRadius,padding:10},activityHeaderComponents:{display:"flex",justifyContent:"space-between",alignItems:"center",flexWrap:"wrap",overflow:"hidden"},activityBody:{background:_color.default.lightest_cyan,borderBottomLeftRadius:_constants.borderRadius,borderBottomRightRadius:_constants.borderRadius,padding:10,marginBottom:20},addButton:{fontSize:14,color:"#5b6770",background:"white",border:"1px solid #ccc",boxShadow:"none",margin:"0 10px 10px 10px"},button:{marginLeft:10},label:{fontSize:18,marginRight:5},labelAndInput:{marginLeft:10,display:"flex",alignItems:"center",justifyContent:"flex-start"},inputsAndIcon:{display:"flex",alignItems:"center",justifyContent:"flex-start",flexWrap:"wrap",flex:"1 1"}};exports.UnconnectedActivityCard=ActivityCard,exports.default=(0,_reactRedux.connect)((function(state){return{}}),{addActivitySection:_activitiesEditorRedux.addActivitySection,moveActivity:_activitiesEditorRedux.moveActivity,removeActivity:_activitiesEditorRedux.removeActivity,updateActivityField:_activitiesEditorRedux.updateActivityField})(ActivityCard)},"./src/lib/levelbuilder/lesson-editor/ActivityCardAndPreview.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_ActivityCard=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/ActivityCard.jsx")),_Activity=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/activities/Activity.jsx")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ActivityCardAndPreview=exports.default=function(_Component){function ActivityCardAndPreview(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"handleCollapse",(function(){_this.setState({collapsed:!_this.state.collapsed})})),_this.state={collapsed:!1},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ActivityCardAndPreview,_Component),ActivityCardAndPreview.prototype.render=function render(){var _this$props=this.props,activity=_this$props.activity,allowMajorCurriculumChanges=_this$props.allowMajorCurriculumChanges;return _react.default.createElement("div",{style:styles.cardAndPreview},_react.default.createElement("div",{style:styles.editor},_react.default.createElement(_ActivityCard.default,{activity,generateActivitySectionKey:this.props.generateActivitySectionKey,activitiesCount:this.props.activitiesCount,setActivitySectionRef:this.props.setActivitySectionRef,updateTargetActivitySection:this.props.updateTargetActivitySection,clearTargetActivitySection:this.props.clearTargetActivitySection,targetActivityPos:this.props.targetActivityPos,targetActivitySectionPos:this.props.targetActivitySectionPos,activitySectionMetrics:this.props.activitySectionMetrics,updateActivitySectionMetrics:this.props.updateActivitySectionMetrics,handleCollapse:this.handleCollapse,collapsed:this.state.collapsed,hasLessonPlan:this.props.hasLessonPlan,allowMajorCurriculumChanges})),_react.default.createElement("div",{style:styles.preview},_react.default.createElement("div",{style:styles.previewBox},this.state.collapsed?_react.default.createElement("span",{style:styles.noPreview},"This activity has been collapsed. Expand activity to see preview."):_react.default.createElement(_Activity.default,{activity}))))},ActivityCardAndPreview}(_react.Component);_defineProperty(ActivityCardAndPreview,"propTypes",{activity:_shapes.activityShape,generateActivitySectionKey:_propTypes.default.func.isRequired,activitiesCount:_propTypes.default.number,setActivitySectionRef:_propTypes.default.func.isRequired,updateTargetActivitySection:_propTypes.default.func.isRequired,clearTargetActivitySection:_propTypes.default.func.isRequired,targetActivityPos:_propTypes.default.number,targetActivitySectionPos:_propTypes.default.number,activitySectionMetrics:_propTypes.default.array.isRequired,updateActivitySectionMetrics:_propTypes.default.func.isRequired,hasLessonPlan:_propTypes.default.bool.isRequired,allowMajorCurriculumChanges:_propTypes.default.bool.isRequired});var styles={cardAndPreview:{display:"flex",flexDirection:"row",margin:10,width:"100%"},editor:{width:"55%"},preview:{width:"45%",marginLeft:20},previewBox:{border:"1px solid black",padding:"0px 25px 10px 25px"},noPreview:{fontStyle:"italic"}};module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/ActivitySectionCard.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedActivitySectionCard=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactDom=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_LevelToken=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LevelToken.jsx")),_OrderControls=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/OrderControls.jsx")),_RemoveLevelDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/RemoveLevelDialog.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_constants=__webpack_require__("./src/lib/levelbuilder/constants.js"),_activitiesEditorRedux=__webpack_require__("./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js"),_ActivitySectionCardButtons=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/ActivitySectionCardButtons.jsx")),_StyledCodeBlock=__webpack_require__("./src/templates/lessonOverview/StyledCodeBlock.jsx");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ActivitySectionCard=function(_Component){function ActivitySectionCard(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"levelTokenMetrics",{}),_defineProperty(_this,"state",{levelPosToRemove:null,currentYOffsets:[],draggedLevelPos:null}),_defineProperty(_this,"initialDragState",{dragHeight:null,initialClientY:null,initialScrollTop:null,newPosition:null,startingYMidpoints:null}),_defineProperty(_this,"dragState",_this.initialDragState),_defineProperty(_this,"handleDragStart",(function(position,_ref){var clientY=_ref.clientY;_this.forceUpdate((function(){var startingYMidpoints=_this.props.activitySection.scriptLevels.map((function(scriptLevel){var metrics=_this.levelTokenMetrics[scriptLevel.position];return metrics.top+metrics.height/2}));_this.dragState={dragHeight:_this.levelTokenMetrics[position].height+_constants.tokenMargin,initialClientY:clientY,lastClientY:clientY,initialScrollTop:$(window).scrollTop(),newPosition:position,startingYMidpoints},_this.setState({draggedLevelPos:position},(function(){return _this.props.updateActivitySectionMetrics()})),window.addEventListener("selectstart",_this.preventSelect),window.addEventListener("mousemove",_this.handleDrag),window.addEventListener("scroll",_this.handleScroll),window.addEventListener("mouseup",_this.handleDragStop)}))})),_defineProperty(_this,"handleDrag",(function(_ref2){var clientY=_ref2.clientY;_this.dragState.lastClientY=clientY,_this.handleDragOrScroll()})),_defineProperty(_this,"handleDragOrScroll",(function(){var clientY=_this.dragState.lastClientY,deltaClientY=clientY-_this.dragState.initialClientY,deltaScrollTop=$(window).scrollTop()-_this.dragState.initialScrollTop,draggedYPos=_this.levelTokenMetrics[_this.state.draggedLevelPos].top,newPosition=_this.state.draggedLevelPos,currentYOffsets=_this.dragState.startingYMidpoints.map((function(startingYMidpoint,index){var midpoint=startingYMidpoint-deltaScrollTop,position=index+1;return position===_this.state.draggedLevelPos?deltaClientY+deltaScrollTop:position<_this.state.draggedLevelPos&&draggedYPos<midpoint?(newPosition--,_this.dragState.dragHeight):position>_this.state.draggedLevelPos&&draggedYPos+_this.dragState.dragHeight>midpoint?(newPosition++,-_this.dragState.dragHeight):0}));_this.dragState.newPosition=newPosition,_this.setState({currentYOffsets}),_this.props.updateTargetActivitySection(clientY),_this.triggerScroll(clientY)})),_defineProperty(_this,"handleScroll",(function(){_this.props.updateActivitySectionMetrics(),_this.handleDragOrScroll()})),_defineProperty(_this,"triggerScroll",(function(clientY){if(clientY<100){var step=.2*(100-clientY),scrollTop=$(window).scrollTop();$(window).scrollTop(scrollTop-step)}var bottom=$(window).height()-clientY;if(bottom<100){var _step=.2*(100-bottom),_scrollTop=$(window).scrollTop();$(window).scrollTop(_scrollTop+_step)}})),_defineProperty(_this,"handleDragStop",(function(){window.removeEventListener("selectstart",_this.preventSelect),window.removeEventListener("mousemove",_this.handleDrag),window.removeEventListener("scroll",_this.handleScroll),window.removeEventListener("mouseup",_this.handleDragStop);var _this$props=_this.props,activitySection=_this$props.activitySection,activityPosition=_this$props.activityPosition,targetActivityPos=_this$props.targetActivityPos,targetActivitySectionPos=_this$props.targetActivitySectionPos;targetActivityPos===activityPosition&&targetActivitySectionPos===activitySection.position?_this.state.draggedLevelPos!==_this.dragState.newPosition&&_this.props.reorderLevel(activityPosition,activitySection.position,_this.state.draggedLevelPos,_this.dragState.newPosition):targetActivityPos&&targetActivitySectionPos&&_this.props.moveLevelToActivitySection(activityPosition,activitySection.position,_this.state.draggedLevelPos,targetActivityPos,targetActivitySectionPos),_this.props.clearTargetActivitySection(),_this.dragState=_this.initialDragState,_this.setState({draggedLevelPos:null,currentYOffsets:[]})})),_defineProperty(_this,"toggleRemarks",(function(){_this.props.updateActivitySectionField(_this.props.activityPosition,_this.props.activitySection.position,"remarks",!_this.props.activitySection.remarks)})),_defineProperty(_this,"handleMoveActivitySection",(function(direction){var firstActivitySectionInLesson=1===_this.props.activitySection.position&&1===_this.props.activityPosition,lastActivitySectionInLesson=_this.props.activitySection.position===_this.props.activitySectionsCount&&_this.props.activityPosition===_this.props.activitiesCount;(!firstActivitySectionInLesson&&"up"===direction||!lastActivitySectionInLesson&&"down"===direction)&&_this.props.moveActivitySection(_this.props.activityPosition,_this.props.activitySection.position,direction)})),_defineProperty(_this,"handleRemoveActivitySection",(function(){_this.props.removeActivitySection(_this.props.activityPosition,_this.props.activitySection.position)})),_defineProperty(_this,"handleChangeDisplayName",(function(event){_this.props.updateActivitySectionField(_this.props.activityPosition,_this.props.activitySection.position,"displayName",event.target.value)})),_defineProperty(_this,"handleChangeDuration",(function(event){_this.props.updateActivitySectionField(_this.props.activityPosition,_this.props.activitySection.position,"duration",event.target.value)})),_defineProperty(_this,"handleChangeProgressionName",(function(event){_this.props.updateActivitySectionField(_this.props.activityPosition,_this.props.activitySection.position,"progressionName",event.target.value)})),_defineProperty(_this,"handleChangeText",(function(event){_this.props.updateActivitySectionField(_this.props.activityPosition,_this.props.activitySection.position,"text",event.target.value)})),_defineProperty(_this,"appendMarkdownSyntax",(function(strToAppend){var currentText=_this.props.activitySection.text;_this.props.updateActivitySectionField(_this.props.activityPosition,_this.props.activitySection.position,"text",currentText+strToAppend)})),_defineProperty(_this,"insertMarkdownSyntaxAtSelection",(function(newText){if(!_this.editorTextAreaRef)return _this.appendMarkdownSyntax(newText);var currentText=_this.props.activitySection.text,selectionStart=_this.editorTextAreaRef.selectionStart,selectionEnd=_this.editorTextAreaRef.selectionEnd||selectionStart,resultingText=currentText.slice(0,selectionStart)+newText+currentText.slice(selectionEnd);_this.props.updateActivitySectionField(_this.props.activityPosition,_this.props.activitySection.position,"text",resultingText)})),_defineProperty(_this,"appendProgrammingExpressionLink",(function(programmingExpression){_this.appendMarkdownSyntax((0,_StyledCodeBlock.buildProgrammingExpressionMarkdown)(programmingExpression))})),_defineProperty(_this,"appendResourceLink",(function(resourceKey){_this.appendMarkdownSyntax("\n[r ".concat(resourceKey,"]"))})),_defineProperty(_this,"appendVocabularyLink",(function(vocabularyKey){_this.appendMarkdownSyntax("\n[v ".concat(vocabularyKey,"]"))})),_defineProperty(_this,"appendSlide",(function(){_this.insertMarkdownSyntaxAtSelection('<i class="fa fa-list-alt" aria-hidden="true"></i> ')})),_defineProperty(_this,"handleRemoveLevel",(function(levelPos){_this.setState({levelPosToRemove:levelPos})})),_defineProperty(_this,"handleClose",(function(){_this.setState({levelPosToRemove:null})})),_defineProperty(_this,"handleAddLevel",(function(level){var newLevelPosition=_this.props.activitySection.scriptLevels.length+1;_this.props.addLevel(_this.props.activityPosition,_this.props.activitySection.position,{id:_activitiesEditorRedux.NEW_LEVEL_ID,levels:[{id:level.id,name:level.name,url:"/levels/".concat(level.id,"/edit"),icon:level.icon||"fa-desktop",isUnplugged:level.isUnplugged,isConceptLevel:level.isConceptLevel,skin:level.skin,videoKey:level.videoKey,concepts:level.concepts,conceptDifficulty:level.conceptDifficulty}],activeId:level.id,key:level.key,position:newLevelPosition,kind:"puzzle",bonus:!1,assessment:!1,challenge:!1,expand:!1})})),_defineProperty(_this,"handleUploadImage",(function(url,expandable){var param=expandable?"expandable":"";_this.appendMarkdownSyntax("\n\n![".concat(param,"](").concat(url,")"))})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ActivitySectionCard,_Component);var _proto=ActivitySectionCard.prototype;return _proto.preventSelect=function preventSelect(e){e.preventDefault()},_proto.render=function render(){var _this2=this,_this$props2=this.props,activitySection=_this$props2.activitySection,targetActivityPos=_this$props2.targetActivityPos,targetActivitySectionPos=_this$props2.targetActivitySectionPos,activityPosition=_this$props2.activityPosition,hasLessonPlan=_this$props2.hasLessonPlan,allowMajorCurriculumChanges=_this$props2.allowMajorCurriculumChanges,_this$state=this.state,draggedLevelPos=_this$state.draggedLevelPos,levelPosToRemove=_this$state.levelPosToRemove,isTargetActivitySection=targetActivityPos===activityPosition&&targetActivitySectionPos===activitySection.position;return _react.default.createElement("div",{style:isTargetActivitySection?styles.targetActivitySectionCard:styles.activitySectionCard},_react.default.createElement("div",{style:styles.activitySectionCardHeader},_react.default.createElement("label",{style:styles.headerLabel},hasLessonPlan&&_react.default.createElement("span",null,_react.default.createElement("span",{style:styles.title},"Title:"),_react.default.createElement("input",{style:styles.titleInput,value:this.props.activitySection.displayName,onChange:this.handleChangeDisplayName}),_react.default.createElement("span",{style:styles.title},"Duration:"),_react.default.createElement("input",{style:styles.durationInput,value:this.props.activitySection.duration,onChange:this.handleChangeDuration})),(allowMajorCurriculumChanges||0===activitySection.scriptLevels.length)&&_react.default.createElement(_OrderControls.default,{name:this.props.activitySection.displayName||"Unnamed Activity Section",move:this.handleMoveActivitySection,remove:this.handleRemoveActivitySection,item:this.props.activitySection,itemType:"activitySection"})),hasLessonPlan&&_react.default.createElement("div",{style:styles.checkboxesAndButtons},_react.default.createElement("span",{style:styles.checkboxes},_react.default.createElement("label",{style:styles.labelAndCheckbox},"Remarks",_react.default.createElement("input",{checked:this.props.activitySection.remarks,onChange:this.toggleRemarks,type:"checkbox",style:styles.checkbox}))))),hasLessonPlan&&_react.default.createElement("textarea",{value:this.props.activitySection.text,ref:function ref(_ref3){return _this2.editorTextAreaRef=_ref3},rows:Math.max(this.props.activitySection.text.split(/\r\n|\r|\n/).length+1,2),style:styles.input,onChange:this.handleChangeText}),this.props.activitySection.scriptLevels.length>0&&_react.default.createElement("div",null,_react.default.createElement("label",null,_react.default.createElement("span",{style:styles.title},"Progression Title:"),_react.default.createElement("input",{style:styles.titleInput,value:this.props.activitySection.progressionName,onChange:this.handleChangeProgressionName})),this.props.activitySection.scriptLevels.map((function(scriptLevel){return _react.default.createElement(_LevelToken.default,{ref:function ref(levelToken){if(levelToken){var metrics=_reactDom.default.findDOMNode(levelToken).getBoundingClientRect();_this2.levelTokenMetrics[scriptLevel.position]=metrics}},key:scriptLevel.position+"_"+scriptLevel.activeId[0],scriptLevel,removeLevel:_this2.handleRemoveLevel,activitySectionPosition:_this2.props.activitySection.position,activityPosition,dragging:!!draggedLevelPos,draggedLevelPos:scriptLevel.position===draggedLevelPos,delta:_this2.state.currentYOffsets[scriptLevel.position-1]||0,handleDragStart:_this2.handleDragStart,allowMajorCurriculumChanges})}))),_react.default.createElement(_ActivitySectionCardButtons.default,{activitySection:this.props.activitySection,addLevel:this.handleAddLevel,uploadImage:this.handleUploadImage,activityPosition:this.props.activityPosition,appendProgrammingExpressionLink:this.appendProgrammingExpressionLink,appendResourceLink:this.appendResourceLink,appendVocabularyLink:this.appendVocabularyLink,appendSlide:this.appendSlide,hasLessonPlan,allowMajorCurriculumChanges,isLastActivity:this.props.activityPosition===this.props.activitiesCount,isLastActivitySection:this.props.activitySection.position===this.props.activitySectionsCount}),_react.default.createElement(_RemoveLevelDialog.default,{activitySection:this.props.activitySection,activityPosition,levelPosToRemove,handleClose:this.handleClose}))},ActivitySectionCard}(_react.Component);_defineProperty(ActivitySectionCard,"propTypes",{activitySection:_shapes.activitySectionShape.isRequired,activityPosition:_propTypes.default.number.isRequired,activitySectionsCount:_propTypes.default.number.isRequired,activitiesCount:_propTypes.default.number.isRequired,activitySectionMetrics:_propTypes.default.array.isRequired,updateTargetActivitySection:_propTypes.default.func.isRequired,clearTargetActivitySection:_propTypes.default.func.isRequired,targetActivityPos:_propTypes.default.number,targetActivitySectionPos:_propTypes.default.number,updateActivitySectionMetrics:_propTypes.default.func.isRequired,hasLessonPlan:_propTypes.default.bool.isRequired,allowMajorCurriculumChanges:_propTypes.default.bool.isRequired,moveActivitySection:_propTypes.default.func.isRequired,removeActivitySection:_propTypes.default.func.isRequired,updateActivitySectionField:_propTypes.default.func.isRequired,reorderLevel:_propTypes.default.func.isRequired,moveLevelToActivitySection:_propTypes.default.func.isRequired,addLevel:_propTypes.default.func.isRequired});var styles={checkbox:{margin:"0 0 0 7px"},activitySectionCard:{fontSize:18,background:"white",borderWidth:1,borderStyle:"solid",borderColor:"#ccc",borderRadius:_constants.borderRadius,padding:20,margin:10},activitySectionCardHeader:{color:"#5b6770",marginBottom:15,overflow:"hidden"},headerLabel:{display:"flex",justifyContent:"space-between"},labelAndCheckbox:{fontSize:13,marginTop:3,marginRight:10},input:{width:"100%"},bottomControls:{height:30,display:"flex",justifyContent:"space-between"},checkboxesAndButtons:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between"},checkboxes:{display:"flex",flexDirection:"row",alignItems:"center"},title:{marginRight:5},titleInput:{width:275,marginRight:10},durationInput:{width:50}};styles.targetActivitySectionCard=_objectSpread(_objectSpread({},styles.activitySectionCard),{},{borderWidth:5,borderColor:_color.default.cyan,padding:16});exports.UnconnectedActivitySectionCard=ActivitySectionCard,exports.default=(0,_reactRedux.connect)((function(state){return{}}),{reorderLevel:_activitiesEditorRedux.reorderLevel,moveLevelToActivitySection:_activitiesEditorRedux.moveLevelToActivitySection,addLevel:_activitiesEditorRedux.addLevel,moveActivitySection:_activitiesEditorRedux.moveActivitySection,removeActivitySection:_activitiesEditorRedux.removeActivitySection,updateActivitySectionField:_activitiesEditorRedux.updateActivitySectionField},null,{forwardRef:!0})(ActivitySectionCard)},"./src/lib/levelbuilder/lesson-editor/ActivitySectionCardButtons.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedActivitySectionCardButtons=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_AddLevelDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/AddLevelDialog.jsx")),_UploadImageDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/UploadImageDialog.jsx")),_LessonTipIconWithTooltip=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LessonTipIconWithTooltip.jsx")),_FindProgrammingExpressionDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/FindProgrammingExpressionDialog.jsx")),_FindResourceDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/FindResourceDialog.jsx")),_FindVocabularyDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/FindVocabularyDialog.jsx")),_EditTipDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/EditTipDialog.jsx")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_activitiesEditorRedux=__webpack_require__("./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var AddButton=function AddButton(props){var className="btn";return props.className&&(className+=" "+props.className),_react.default.createElement("button",{onClick:props.handler,className,style:styles.addButton,type:"button"},_react.default.createElement("i",{style:{marginRight:7},className:"fa fa-plus-circle"}),props.displayText)};AddButton.propTypes={className:_propTypes.default.string,displayText:_propTypes.default.string.isRequired,handler:_propTypes.default.func};var ActivitySectionCardButtons=function(_Component){function ActivitySectionCardButtons(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"handleOpenAddLevel",(function(){_this.setState({addLevelOpen:!0})})),_defineProperty(_this,"handleCloseAddLevel",(function(){_this.setState({addLevelOpen:!1})})),_defineProperty(_this,"handleOpenUploadImage",(function(){_this.setState({uploadImageOpen:!0})})),_defineProperty(_this,"handleCloseUploadImage",(function(){_this.setState({uploadImageOpen:!1})})),_defineProperty(_this,"handleEditTip",(function(tip){_this.setState({tipToEdit:tip,editingExistingTip:!0})})),_defineProperty(_this,"handleOpenAddTip",(function(){_this.setState({tipToEdit:{key:_this.generateTipKey(),type:"teachingTip",markdown:""}})})),_defineProperty(_this,"generateTipKey",(function(){for(var tipNumber=_this.props.activitySection.tips.length+1;_this.props.activitySection.tips.some((function(tip){return tip.key==="tip-".concat(tipNumber)}));)tipNumber++;return"tip-".concat(tipNumber)})),_defineProperty(_this,"handleCloseAddTip",(function(tip){tip&&(_this.state.editingExistingTip?_this.props.updateTip(_this.props.activityPosition,_this.props.activitySection.position,tip):_this.props.addTip(_this.props.activityPosition,_this.props.activitySection.position,tip)),_this.setState({tipToEdit:null,editingExistingTip:!1})})),_defineProperty(_this,"handleOpenAddProgrammingExpression",(function(){_this.setState({addProgrammingExpressionOpen:!0})})),_defineProperty(_this,"handleOpenAddResource",(function(){_this.setState({addResourceOpen:!0})})),_defineProperty(_this,"handleOpenAddVocabulary",(function(){_this.setState({addVocabularyOpen:!0})})),_defineProperty(_this,"handleAddSlide",(function(){_this.props.appendSlide()})),_defineProperty(_this,"handleCloseAddProgrammingExpression",(function(programmingExpression){_this.setState({addProgrammingExpressionOpen:!1},_this.props.appendProgrammingExpressionLink(programmingExpression))})),_defineProperty(_this,"handleCloseAddResource",(function(resourceKey){_this.setState({addResourceOpen:!1},_this.props.appendResourceLink(resourceKey))})),_defineProperty(_this,"handleCloseAddVocabulary",(function(vocabularyKey){_this.setState({addVocabularyOpen:!1},_this.props.appendVocabularyLink(vocabularyKey))})),_defineProperty(_this,"handleDeleteTip",(function(tipKey){_this.props.removeTip(_this.props.activityPosition,_this.props.activitySection.position,tipKey)})),_this.state={editingExistingTip:!1,addProgrammingExpressionOpen:!1,addResourceOpen:!1,addVocabularyOpen:!1,addLevelOpen:!1,uploadImageOpen:!1,tipToEdit:null},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ActivitySectionCardButtons,_Component),ActivitySectionCardButtons.prototype.render=function render(){var _this2=this,_this$props=this.props,allowMajorCurriculumChanges=_this$props.allowMajorCurriculumChanges,isLastActivitySection=_this$props.isLastActivitySection,isLastActivity=_this$props.isLastActivity;return _react.default.createElement("div",null,_react.default.createElement("div",{style:styles.bottomControls},_react.default.createElement("span",null,(allowMajorCurriculumChanges||isLastActivity&&isLastActivitySection)&&_react.default.createElement(AddButton,{className:"uitest-open-add-level-button",displayText:"Level",handler:this.handleOpenAddLevel}),this.props.hasLessonPlan&&_react.default.createElement("span",null,_react.default.createElement(AddButton,{displayText:"Callout",handler:this.handleOpenAddTip}),_react.default.createElement(AddButton,{displayText:"Code Doc",handler:this.handleOpenAddProgrammingExpression}),_react.default.createElement(AddButton,{displayText:"Resource",handler:this.handleOpenAddResource}),this.props.vocabularies.length>0&&_react.default.createElement(AddButton,{displayText:"Vocab",handler:this.handleOpenAddVocabulary}),_react.default.createElement(AddButton,{displayText:"Slide",handler:this.handleAddSlide}),_react.default.createElement(AddButton,{displayText:"Image",handler:this.handleOpenUploadImage}))),this.props.hasLessonPlan&&this.props.activitySection.tips.length>0&&_react.default.createElement("span",null,this.props.activitySection.tips.map((function(tip){return _react.default.createElement(_LessonTipIconWithTooltip.default,{tip,key:tip.key,onClick:_this2.handleEditTip})})))),this.props.hasLessonPlan&&_react.default.createElement("div",null,_react.default.createElement(_FindResourceDialog.default,{isOpen:this.state.addResourceOpen,handleConfirm:this.handleCloseAddResource,handleClose:function handleClose(){return _this2.setState({addResourceOpen:!1})}}),_react.default.createElement(_FindVocabularyDialog.default,{isOpen:this.state.addVocabularyOpen,handleConfirm:this.handleCloseAddVocabulary,handleClose:function handleClose(){return _this2.setState({addVocabularyOpen:!1})},vocabularies:this.props.vocabularies}),_react.default.createElement(_FindProgrammingExpressionDialog.default,{isOpen:this.state.addProgrammingExpressionOpen,handleConfirm:this.handleCloseAddProgrammingExpression,handleClose:function handleClose(){return _this2.setState({addProgrammingExpressionOpen:!1})}}),this.state.tipToEdit&&_react.default.createElement(_EditTipDialog.default,{isOpen:!0,handleConfirm:this.handleCloseAddTip,tip:this.state.tipToEdit,handleDelete:this.handleDeleteTip})),_react.default.createElement(_AddLevelDialog.default,{isOpen:this.state.addLevelOpen,handleConfirm:this.handleCloseAddLevel,addLevel:this.props.addLevel,activitySection:this.props.activitySection,activityPosition:this.props.activityPosition,allowMajorCurriculumChanges:this.props.allowMajorCurriculumChanges}),_react.default.createElement(_UploadImageDialog.default,{isOpen:this.state.uploadImageOpen,handleClose:this.handleCloseUploadImage,uploadImage:this.props.uploadImage}))},ActivitySectionCardButtons}(_react.Component);_defineProperty(ActivitySectionCardButtons,"propTypes",{activitySection:_shapes.activitySectionShape.isRequired,activityPosition:_propTypes.default.number.isRequired,addTip:_propTypes.default.func.isRequired,addLevel:_propTypes.default.func.isRequired,uploadImage:_propTypes.default.func.isRequired,updateTip:_propTypes.default.func.isRequired,removeTip:_propTypes.default.func.isRequired,appendProgrammingExpressionLink:_propTypes.default.func.isRequired,appendResourceLink:_propTypes.default.func.isRequired,appendVocabularyLink:_propTypes.default.func.isRequired,appendSlide:_propTypes.default.func.isRequired,hasLessonPlan:_propTypes.default.bool.isRequired,vocabularies:_propTypes.default.arrayOf(_shapes.vocabularyShape).isRequired,allowMajorCurriculumChanges:_propTypes.default.bool.isRequired,isLastActivitySection:_propTypes.default.bool.isRequired,isLastActivity:_propTypes.default.bool.isRequired});var styles={bottomControls:{height:30,display:"flex",justifyContent:"space-between"},addButton:{fontSize:14,background:"#eee",border:"1px solid #ddd",boxShadow:"inset 0 1px 0 0 rgba(255, 255, 255, 0.8)",margin:"0 5px 0 0"}};exports.UnconnectedActivitySectionCardButtons=ActivitySectionCardButtons,exports.default=(0,_reactRedux.connect)((function(state){return{vocabularies:state.vocabularies}}),{addTip:_activitiesEditorRedux.addTip,updateTip:_activitiesEditorRedux.updateTip,removeTip:_activitiesEditorRedux.removeTip})(ActivitySectionCardButtons)},"./src/lib/levelbuilder/lesson-editor/AddLevelDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_AddLevelDialogTop=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/AddLevelDialogTop.jsx")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_LevelToken=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LevelToken.jsx")),_RemoveLevelDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/RemoveLevelDialog.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_LessonEditorDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LessonEditorDialog.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var AddLevelDialog=exports.default=function(_Component){function AddLevelDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",{levelPosToRemove:null}),_defineProperty(_this,"handleRemoveLevel",(function(levelPos){_this.setState({levelPosToRemove:levelPos})})),_defineProperty(_this,"handleCloseRemoveLevelDialog",(function(){_this.setState({levelPosToRemove:null})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AddLevelDialog,_Component),AddLevelDialog.prototype.render=function render(){var _this2=this;return _react.default.createElement(_LessonEditorDialog.default,{isOpen:this.props.isOpen,handleClose:this.props.handleConfirm,style:styles.dialog},_react.default.createElement("h2",null,"Add Levels"),_react.default.createElement("div",{style:styles.dialogContent,className:"uitest-level-dialog-content"},_react.default.createElement(_AddLevelDialogTop.default,{addLevel:this.props.addLevel,currentLevelIds:this.props.activitySection.scriptLevels.map((function(scriptLevel){return scriptLevel.activeId}))}),_react.default.createElement("div",{style:styles.bottomArea},_react.default.createElement("h4",null,"Levels in Progression"),_react.default.createElement("div",{style:styles.levelsBox},this.props.activitySection.scriptLevels.map((function(scriptLevel){return _react.default.createElement(_LevelToken.default,{key:scriptLevel.position+"_"+scriptLevel.activeId[0],scriptLevel,removeLevel:_this2.handleRemoveLevel,activitySectionPosition:_this2.props.activitySection.position,activityPosition:_this2.props.activityPosition,allowMajorCurriculumChanges:_this2.props.allowMajorCurriculumChanges})}))))),_react.default.createElement(_RemoveLevelDialog.default,{activitySection:this.props.activitySection,activityPosition:this.props.activityPosition,levelPosToRemove:this.state.levelPosToRemove,handleClose:this.handleCloseRemoveLevelDialog}),_react.default.createElement(_DialogFooter.default,{rightAlign:!0},_react.default.createElement(_Button.default,{text:_locale.default.closeAndSave(),onClick:this.props.handleConfirm,color:_Button.default.ButtonColor.brandSecondaryDefault,className:"save-add-levels-button"})))},AddLevelDialog}(_react.Component);_defineProperty(AddLevelDialog,"propTypes",{isOpen:_propTypes.default.bool.isRequired,handleConfirm:_propTypes.default.func.isRequired,addLevel:_propTypes.default.func.isRequired,activityPosition:_propTypes.default.number.isRequired,activitySection:_shapes.activitySectionShape.isRequired,allowMajorCurriculumChanges:_propTypes.default.bool.isRequired});var styles={dialog:{width:970,marginLeft:-500},dialogContent:{display:"flex",flexDirection:"column"},topArea:{display:"flex",flexDirection:"column",margin:15},bottomArea:{display:"flex",flexDirection:"column",margin:15},textArea:{width:"95%"},levelsBox:{border:"1px solid black",width:"95%",height:"100%",padding:10},filtersAndLevels:{display:"flex",flexDirection:"column"}};module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/AddLevelDialogTop.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedAddLevelDialogTop=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_ToggleGroup=_interopRequireDefault(__webpack_require__("./src/templates/ToggleGroup.jsx")),_AddLevelTable=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/AddLevelTable.jsx")),_AddLevelFilters=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/AddLevelFilters.jsx")),_CreateNewLevelInputs=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/CreateNewLevelInputs.jsx")),_jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_queryString=_interopRequireDefault(__webpack_require__("./node_modules/query-string/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function AddLevelDialogTop(props){var _useState2=_slicedToArray((0,_react.useState)("Find Level"),2),methodOfAddingLevel=_useState2[0],setMethodOfAddingLevel=_useState2[1],_useState4=_slicedToArray((0,_react.useState)([]),2),levels=_useState4[0],setLevels=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(!0),2),loadingLevels=_useState6[0],setLoadingLevels=_useState6[1],_useState8=_slicedToArray((0,_react.useState)(1),2),currentPage=_useState8[0],setCurrentPage=_useState8[1],_useState10=_slicedToArray((0,_react.useState)(""),2),levelName=_useState10[0],setLevelName=_useState10[1],_useState12=_slicedToArray((0,_react.useState)(props.searchOptions.levelOptions[0][1]),2),levelType=_useState12[0],setLevelType=_useState12[1],_useState14=_slicedToArray((0,_react.useState)(props.searchOptions.scriptOptions[0][1]),2),unitId=_useState14[0],setUnitId=_useState14[1],_useState16=_slicedToArray((0,_react.useState)(props.searchOptions.ownerOptions[0][1]),2),ownerId=_useState16[0],setOwnerId=_useState16[1],_useState18=_slicedToArray((0,_react.useState)(0),2),numPages=_useState18[0],setNumPages=_useState18[1];(0,_react.useEffect)((function(){handleSearch()}),[currentPage]);var handleSearch=function handleSearch(){var queryParams={page:currentPage};levelName&&(queryParams.name=levelName),levelType&&(queryParams.level_type=levelType),unitId&&(queryParams.script_id=unitId),ownerId&&(queryParams.owner_id=ownerId);var url="/levels/get_filtered_levels?"+_queryString.default.stringify(queryParams);_jquery.default.ajax({url,method:"GET",contentType:"application/json;charset=UTF-8"}).done((function(data,_,request){setLevels(data.levels),setNumPages(data.numPages),setLoadingLevels(!1)}))};return _react.default.createElement("div",null,!loadingLevels&&_react.default.createElement("div",{style:styles.topArea},_react.default.createElement(_ToggleGroup.default,{selected:methodOfAddingLevel,onChange:function onChange(value){return setMethodOfAddingLevel(value)}},_react.default.createElement("button",{type:"button",value:"Find Level"},"Find Level"),_react.default.createElement("button",{type:"button",value:"Create New Level"},"Create New Level")),"Find Level"===methodOfAddingLevel&&_react.default.createElement("div",{style:styles.filtersAndLevels},_react.default.createElement(_AddLevelFilters.default,{handleSearch,handleChangeLevelName:function handleChangeLevelName(event){return setLevelName(event.target.value)},handleChangeLevelType:function handleChangeLevelType(event){return setLevelType(event.target.value)},handleChangeUnit:function handleChangeUnit(event){return setUnitId(event.target.value)},handleChangeOwner:function handleChangeOwner(event){return setOwnerId(event.target.value)},ownerId,unitId,levelName,levelType}),_react.default.createElement(_AddLevelTable.default,{setCurrentPage:function setCurrentPageAndSearch(value){setCurrentPage(value),handleSearch()},currentPage,addLevel:props.addLevel,levels,currentLevelIds:props.currentLevelIds,numPages})),"Create New Level"===methodOfAddingLevel&&_react.default.createElement(_CreateNewLevelInputs.default,{levelOptions:props.searchOptions.levelOptions,addLevel:props.addLevel})),loadingLevels&&_react.default.createElement(_FontAwesome.default,{icon:"spinner",className:"fa-spin"}))}AddLevelDialogTop.propTypes={addLevel:_propTypes.default.func.isRequired,currentLevelIds:_propTypes.default.array,searchOptions:_propTypes.default.object.isRequired};var styles={dialog:_objectSpread(_objectSpread({paddingLeft:20,paddingRight:20,paddingBottom:20,width:1100},_fontConstants.default["main-font-regular"]),{},{marginLeft:-600}),dialogContent:{display:"flex",flexDirection:"column"},topArea:{display:"flex",flexDirection:"column",margin:15},bottomArea:{display:"flex",flexDirection:"column",margin:15},textArea:{width:"95%"},levelsBox:{border:"1px solid black",width:"95%",height:"100%",padding:10},filtersAndLevels:{display:"flex",flexDirection:"column"}};exports.UnconnectedAddLevelDialogTop=AddLevelDialogTop,exports.default=(0,_reactRedux.connect)((function(state){return{searchOptions:state.levelSearchingInfo.searchOptions}}))(AddLevelDialogTop)},"./src/lib/levelbuilder/lesson-editor/AddLevelFilters.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedAddLevelFilters=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var AddLevelFilters=function(_Component){function AddLevelFilters(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"handleSearch",_lodash.default.debounce((function(){_this.props.handleSearch()}),1e3,{leading:!0,trailing:!1})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AddLevelFilters,_Component),AddLevelFilters.prototype.render=function render(){return _react.default.createElement("div",{style:styles.filters},_react.default.createElement("label",{style:styles.label},"By Name:",_react.default.createElement("input",{className:"uitest-add-level-name-input",style:styles.input,onChange:this.props.handleChangeLevelName,value:this.props.levelName})),_react.default.createElement("label",{style:styles.label},"By Type:",_react.default.createElement("select",{style:styles.dropdown,onChange:this.props.handleChangeLevelType,value:this.props.levelType,id:"add-level-type"},this.props.searchOptions.levelOptions.map((function(levelType){return _react.default.createElement("option",{key:levelType[0],value:levelType[1]},levelType[0])})))),_react.default.createElement("label",{style:styles.label},"By Unit:",_react.default.createElement("select",{style:styles.dropdown,onChange:this.props.handleChangeUnit,value:this.props.unitId},this.props.searchOptions.scriptOptions.map((function(unit){return _react.default.createElement("option",{key:unit[0],value:unit[1]},unit[0])})))),_react.default.createElement("label",{style:styles.label},"By Owner:",_react.default.createElement("select",{style:styles.dropdown,onChange:this.props.handleChangeOwner,value:this.props.ownerId},this.props.searchOptions.ownerOptions.map((function(owner){return _react.default.createElement("option",{key:owner[1],value:owner[1]},owner[0])})))),_react.default.createElement("button",{type:"button",onClick:this.handleSearch},_react.default.createElement(_FontAwesome.default,{icon:"search"})))},AddLevelFilters}(_react.Component);_defineProperty(AddLevelFilters,"propTypes",{handleSearch:_propTypes.default.func.isRequired,handleChangeLevelName:_propTypes.default.func.isRequired,handleChangeLevelType:_propTypes.default.func.isRequired,handleChangeUnit:_propTypes.default.func.isRequired,handleChangeOwner:_propTypes.default.func.isRequired,ownerId:_propTypes.default.string.isRequired,unitId:_propTypes.default.string.isRequired,levelType:_propTypes.default.string.isRequired,levelName:_propTypes.default.string.isRequired,searchOptions:_propTypes.default.object.isRequired});var styles={filters:{display:"flex",flexDirection:"row",alignItems:"center"},input:{width:195,margin:5},dropdown:{width:150,margin:5},label:{marginRight:15}};exports.UnconnectedAddLevelFilters=AddLevelFilters,exports.default=(0,_reactRedux.connect)((function(state){return{searchOptions:state.levelSearchingInfo.searchOptions}}))(AddLevelFilters)},"./src/lib/levelbuilder/lesson-editor/AddLevelTable.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_PaginationWrapper=_interopRequireDefault(__webpack_require__("./src/templates/PaginationWrapper.jsx")),_AddLevelTableRow=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/AddLevelTableRow.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function AddLevelTable(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AddLevelTable,_Component),AddLevelTable.prototype.render=function render(){var _this=this;return _react.default.createElement("div",null,_react.default.createElement("table",{style:{width:"100%"}},_react.default.createElement("thead",null,_react.default.createElement("tr",null,_react.default.createElement("th",{style:{width:"13%"}},"Actions"),_react.default.createElement("th",{style:{width:"33%"}},"Name"),_react.default.createElement("th",{style:{width:"18%"}},"Type"),_react.default.createElement("th",{style:{width:"15%"}},"Owner"),_react.default.createElement("th",{style:{width:"20%"}},"Last Updated"))),_react.default.createElement("tbody",null,this.props.levels.map((function(level){return _react.default.createElement(_AddLevelTableRow.default,{key:level.id,addLevel:_this.props.addLevel,isInLesson:!!_this.props.currentLevelIds&&_this.props.currentLevelIds.includes(level.id),level})})))),0===this.props.levels.length&&_react.default.createElement("div",{style:{color:_color.default.red}},"There are no levels matching the search you entered."),_react.default.createElement(_PaginationWrapper.default,{totalPages:this.props.numPages,currentPage:this.props.currentPage,onChangePage:this.props.setCurrentPage}))},AddLevelTable}(_react.Component),"propTypes",{addLevel:_propTypes.default.func.isRequired,levels:_propTypes.default.array.isRequired,currentPage:_propTypes.default.number.isRequired,setCurrentPage:_propTypes.default.func.isRequired,numPages:_propTypes.default.number.isRequired,currentLevelIds:_propTypes.default.array}),module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/AddLevelTableRow.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var AddLevelTableRow=exports.default=function(_Component){function AddLevelTableRow(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"handleAddLevel",(function(level){_this.setState({error:null}),_this.props.addLevel(level)})),_defineProperty(_this,"determineErrorMessage",(function(error,newLevelName){return"Validation failed: Name has already been taken"===error?"A level named ".concat(newLevelName," already exists"):error})),_defineProperty(_this,"handleCloneAndAddLevel",(function(level){_this.setState({creatingClonedLevel:!0,error:null});var newLevelName=prompt("Enter new level name");newLevelName?_jquery.default.ajax({url:"/levels/".concat(level.id,"/clone?name=").concat(newLevelName,"&do_not_redirect=true"),method:"POST",dataType:"json",contentType:"application/json;charset=UTF-8"}).done((function(data){_this.props.addLevel(data),_this.setState({creatingClonedLevel:!1})})).fail((function(error){_this.setState({creatingClonedLevel:!1,error:_this.determineErrorMessage(error.responseText,newLevelName)})})):_this.setState({creatingClonedLevel:!1,error:"Please provide name for the cloned level"})})),_this.state={creatingClonedLevel:!1,error:null},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AddLevelTableRow,_Component),AddLevelTableRow.prototype.render=function render(){var _this$props=this.props,level=_this$props.level,isInLesson=_this$props.isInLesson;return _react.default.createElement("tr",{key:level.id,style:isInLesson?{color:_color.default.white,backgroundColor:_color.default.teal}:{}},_react.default.createElement("td",null,_react.default.createElement("button",{onClick:this.handleAddLevel.bind(this,level),type:"button"},_react.default.createElement(_FontAwesome.default,{icon:"plus"})),_react.default.createElement("button",{type:"button",onClick:this.handleCloneAndAddLevel.bind(this,level),disabled:this.state.creatingClonedLevel},_react.default.createElement(_FontAwesome.default,{icon:"files-o"})),this.state.creatingClonedLevel&&_react.default.createElement(_FontAwesome.default,{icon:"spinner",className:"fa-spin"}),this.state.error&&_react.default.createElement("div",{style:{color:_color.default.red}},this.state.error)),_react.default.createElement("td",null,_react.default.createElement("div",null,level.name)),_react.default.createElement("td",null,_react.default.createElement("div",null,level.type)),_react.default.createElement("td",null,_react.default.createElement("div",null,level.owner)),_react.default.createElement("td",null,_react.default.createElement("div",null,level.updated_at)))},AddLevelTableRow}(_react.Component);_defineProperty(AddLevelTableRow,"propTypes",{addLevel:_propTypes.default.func.isRequired,level:_propTypes.default.object.isRequired,isInLesson:_propTypes.default.bool.isRequired}),module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/CreateNewLevelInputs.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var CreateNewLevelInputs=exports.default=function(_Component){function CreateNewLevelInputs(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"handleInputChange",(function(event){_this.setState({levelName:event.target.value,error:null})})),_defineProperty(_this,"handleChangeLevelType",(function(event){_this.setState({levelType:event.target.value,error:null})})),_defineProperty(_this,"handleCreateLevel",(function(){_this.setState({creatingLevel:!0,error:null}),""===_this.state.levelName||""===_this.state.levelType?_this.setState({creatingLevel:!1,error:""===_this.state.levelType?"Please choose a level type":"Please enter a level name"}):_jquery.default.ajax({url:"/levels?do_not_redirect=true",method:"POST",dataType:"json",data:JSON.stringify({type:_this.state.levelType,name:_this.state.levelName,published:!0}),contentType:"application/json;charset=UTF-8"}).done((function(data){_this.props.addLevel(data),_this.setState({creatingLevel:!1})})).fail((function(error){console.log(error.responseText);var details=error.responseText&&error.responseText.split("\n")[0],message="Could not create level: ".concat(details);_this.setState({creatingLevel:!1,error:message})}))})),_this.state={levelName:"",levelType:_this.props.levelOptions[0][1],creatingLevel:!1,error:null},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CreateNewLevelInputs,_Component),CreateNewLevelInputs.prototype.render=function render(){return _react.default.createElement("div",null,_react.default.createElement("label",null,"Level Type:",_react.default.createElement("select",{onChange:this.handleChangeLevelType,value:this.state.levelType,style:styles.input},this.props.levelOptions.map((function(levelType){return _react.default.createElement("option",{key:levelType[0],value:levelType[1]},levelType[0])})))),_react.default.createElement("label",null,"Level Name:",_react.default.createElement("input",{onChange:this.handleInputChange,value:this.state.levelName,style:styles.input})),_react.default.createElement("div",null,_react.default.createElement("button",{type:"button",onClick:this.handleCreateLevel,disabled:this.state.creatingLevel},_react.default.createElement("span",null,"Create and Add")),this.state.creatingLevel&&_react.default.createElement(_FontAwesome.default,{icon:"spinner",className:"fa-spin"}),this.state.error&&_react.default.createElement("span",{style:{color:_color.default.red}},this.state.error)))},CreateNewLevelInputs}(_react.Component);_defineProperty(CreateNewLevelInputs,"propTypes",{levelOptions:_propTypes.default.array.isRequired,addLevel:_propTypes.default.func.isRequired});var styles={input:{marginLeft:5}};module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/EditTipDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_LessonTip=_interopRequireWildcard(__webpack_require__("./src/templates/lessonOverview/activities/LessonTip.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_ConfirmDeleteButton=_interopRequireDefault(__webpack_require__("./src/storage/dataBrowser/ConfirmDeleteButton.jsx")),_LessonEditorDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LessonEditorDialog.jsx")),_MarkdownEnabledTextarea=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/MarkdownEnabledTextarea.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var EditTipDialog=exports.default=function(_Component){function EditTipDialog(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"handleTextChange",(function(event){var newTip=_lodash.default.cloneDeep(_this.state.tip),markdown=event.target.value;newTip.markdown=markdown,_this.setState({tip:newTip})})),_defineProperty(_this,"handleTipTypeChange",(function(event){var newTip=_lodash.default.cloneDeep(_this.state.tip),type=event.target.value;newTip.type=type,_this.setState({tip:newTip})})),_defineProperty(_this,"handleCloseAndSave",(function(){_this.props.handleConfirm(_this.state.tip)})),_defineProperty(_this,"handleClose",(function(){_this.props.handleConfirm()})),_defineProperty(_this,"handleDelete",(function(){_this.props.handleDelete(_this.state.tip.key),_this.props.handleConfirm()})),_this.state={tip:_this.props.tip},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(EditTipDialog,_Component),EditTipDialog.prototype.render=function render(){return _react.default.createElement(_LessonEditorDialog.default,{isOpen:this.props.isOpen,handleClose:this.handleClose},_react.default.createElement("div",{style:styles.dialogContent},_react.default.createElement("h2",null,"Add Callout"),_react.default.createElement("select",{onChange:this.handleTipTypeChange,value:this.state.tip.type},Object.values(_LessonTip.tipTypes).map((function(tipType,index){return _react.default.createElement("option",{value:Object.keys(_LessonTip.tipTypes)[index],key:"tip-".concat(index)},tipType.displayName)}))),_react.default.createElement(_MarkdownEnabledTextarea.default,{markdown:this.state.tip.markdown,name:"callout",inputRows:5,handleMarkdownChange:this.handleTextChange,features:{imageUpload:!0}}),_react.default.createElement(_LessonTip.default,{tip:this.state.tip})),_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_ConfirmDeleteButton.default,{title:"Delete Callout?",body:"Are you sure you want to remove the ".concat(_LessonTip.tipTypes[this.state.tip.type].displayName,' with key "').concat(this.state.tip.key,'" from the Activity?'),buttonText:"Delete",containerStyle:styles.confirmDeleteButton,onConfirmDelete:this.handleDelete}),_react.default.createElement(_Button.default,{text:_locale.default.saveAndClose(),onClick:this.handleCloseAndSave,color:_Button.default.ButtonColor.brandSecondaryDefault})))},EditTipDialog}(_react.Component);_defineProperty(EditTipDialog,"propTypes",{isOpen:_propTypes.default.bool.isRequired,tip:_shapes.tipShape.isRequired,handleConfirm:_propTypes.default.func.isRequired,handleDelete:_propTypes.default.func.isRequired});var styles={dialogContent:{display:"flex",flexDirection:"column"},textArea:{width:"95%"},confirmDeleteButton:{display:"flex",alignItems:"center"}};module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/FindProgrammingExpressionDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SearchForm=exports.ProgrammingExpressionTable=exports.FindProgrammingExpressionDialog=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_queryString=_interopRequireDefault(__webpack_require__("./node_modules/query-string/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_StyledCodeBlock=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/StyledCodeBlock.jsx")),_PaginationWrapper=_interopRequireDefault(__webpack_require__("./src/templates/PaginationWrapper.jsx")),_LessonEditorDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LessonEditorDialog.jsx")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SearchForm=exports.SearchForm=function SearchForm(props){return _react.default.createElement("form",{className:"form-search"},_react.default.createElement("input",{type:"text",className:"input-large search-query",onChange:props.onSearch,placeholder:"search by name"}),_react.default.createElement("select",{className:"input-small search-query",style:{marginLeft:4},onChange:props.onFilter},_react.default.createElement("option",{value:""},"filter"),props.programmingEnvironments.map((function(environment){return _react.default.createElement("option",{value:environment.name,key:environment.id},environment.name)}))))};SearchForm.propTypes={onSearch:_propTypes.default.func.isRequired,onFilter:_propTypes.default.func.isRequired,programmingEnvironments:_propTypes.default.array};var ProgrammingExpressionTable=exports.ProgrammingExpressionTable=function ProgrammingExpressionTable(props){return props.programmingExpressions&&0!==props.programmingExpressions.length?_react.default.createElement("table",{style:{marginBottom:0},className:"table table-striped table-bordered"},_react.default.createElement("thead",null,_react.default.createElement("tr",null,_react.default.createElement("th",null),_react.default.createElement("th",null,"Expression"),_react.default.createElement("th",null,"Environment"))),_react.default.createElement("tbody",null,props.programmingExpressions.map((function(programmingExpression){return _react.default.createElement("tr",{key:programmingExpression.uniqueKey},_react.default.createElement("td",null,_react.default.createElement("input",{type:"radio",name:"programmingExpression",value:programmingExpression.uniqueKey,onChange:props.handleSelect})),_react.default.createElement("td",null,_react.default.createElement(_StyledCodeBlock.default,{programmingExpression})),_react.default.createElement("td",null,programmingExpression.programmingEnvironmentName))})))):null};ProgrammingExpressionTable.propTypes={programmingExpressions:_propTypes.default.arrayOf(_propTypes.default.shape({color:_propTypes.default.string,link:_propTypes.default.string,syntax:_propTypes.default.string.isRequired,programmingEnvironmentName:_propTypes.default.string.isRequired,uniqueKey:_propTypes.default.string.isRequired})),handleSelect:_propTypes.default.func.isRequired};var FindProgrammingExpressionDialog=exports.FindProgrammingExpressionDialog=function(_Component){function FindProgrammingExpressionDialog(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"handleConfirm",(function(e){e.preventDefault(),_this.state.selectedProgrammingExpression&&_this.props.handleConfirm(_this.state.selectedProgrammingExpression)})),_defineProperty(_this,"handleSearch",(function(e){_this.setState({searchQuery:e.target.value})})),_defineProperty(_this,"handleFilter",(function(e){_this.setState({filteredProgrammingEnvironment:e.target.value})})),_defineProperty(_this,"handleSelectProgrammingExpression",(function(e){_this.setState({selectedProgrammingExpression:_this.state.programmingExpressions.find((function(expression){return expression.uniqueKey===e.target.value}))})})),_defineProperty(_this,"setCurrentPage",(function(value){_this.setState({currentPage:value})})),_this.state={currentPage:1,numPages:0},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(FindProgrammingExpressionDialog,_Component);var _proto=FindProgrammingExpressionDialog.prototype;return _proto.componentDidUpdate=function componentDidUpdate(prevProps,prevState){(this.state.searchQuery!==prevState.searchQuery||this.state.filteredProgrammingEnvironment!==prevState.filteredProgrammingEnvironment||this.state.currentPage!==prevState.currentPage)&&this.doSearch()},_proto.doSearch=function doSearch(){var _this2=this;if(this.state.searchQuery){var params={page:this.state.currentPage,query:this.state.searchQuery};this.state.filteredProgrammingEnvironment&&(params.programmingEnvironmentName=this.state.filteredProgrammingEnvironment),fetch("/programming_expressions/search?"+_queryString.default.stringify(params)).then((function(response){return response.json()})).then((function(data){_this2.setState({programmingExpressions:data.programmingExpressions,numPages:data.numPages})}))}},_proto.render=function render(){return _react.default.createElement(_LessonEditorDialog.default,{isOpen:this.props.isOpen,handleClose:this.props.handleClose},_react.default.createElement("h2",null,"Add Programming Expression Documentation Link"),_react.default.createElement(SearchForm,{onSearch:this.handleSearch,onFilter:this.handleFilter,programmingEnvironments:this.props.programmingEnvironments}),_react.default.createElement(ProgrammingExpressionTable,{programmingExpressions:this.state.programmingExpressions,handleSelect:this.handleSelectProgrammingExpression}),_react.default.createElement("div",{style:{padding:20}},_react.default.createElement(_PaginationWrapper.default,{totalPages:this.state.numPages,currentPage:this.state.currentPage,onChangePage:this.setCurrentPage})),_react.default.createElement(_DialogFooter.default,{rightAlign:!0},_react.default.createElement(_Button.default,{text:"Close and Add",onClick:this.handleConfirm,color:_Button.default.ButtonColor.brandSecondaryDefault})))},FindProgrammingExpressionDialog}(_react.Component);_defineProperty(FindProgrammingExpressionDialog,"propTypes",{isOpen:_propTypes.default.bool.isRequired,handleConfirm:_propTypes.default.func.isRequired,handleClose:_propTypes.default.func.isRequired,programmingEnvironments:_propTypes.default.array});exports.default=(0,_reactRedux.connect)((function(state){var _state$levelSearching;return{programmingEnvironments:null==state||null===(_state$levelSearching=state.levelSearchingInfo)||void 0===_state$levelSearching?void 0:_state$levelSearching.programmingEnvironments}}))(FindProgrammingExpressionDialog)},"./src/lib/levelbuilder/lesson-editor/FindResourceDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedFindResourceDialog=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_LessonEditorDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LessonEditorDialog.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var FindResourceDialog=function(_Component){function FindResourceDialog(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"onResourceSelect",(function(e){_this.setState({selectedResourceKey:e.target.value})})),_defineProperty(_this,"formatResourceName",(function(resource){var formattedName=resource.name;return resource.type&&(formattedName+=" - ".concat(resource.type)),formattedName})),_this.state={selectedResourceKey:_this.props.resources.length>0?_this.props.resources[0].markdownKey:""},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(FindResourceDialog,_Component),FindResourceDialog.prototype.render=function render(){var _this2=this;return _react.default.createElement(_LessonEditorDialog.default,{isOpen:this.props.isOpen,handleClose:this.props.handleClose},_react.default.createElement("h2",null,"Add Resource"),_react.default.createElement("label",null,_react.default.createElement("span",null,"Add link to resource:"),_react.default.createElement("select",{onChange:this.onResourceSelect,value:this.state.selectedResourceKey},this.props.resources.map((function(resource){return _react.default.createElement("option",{key:resource.key,value:resource.markdownKey},_this2.formatResourceName(resource))})))),_react.default.createElement("p",null,_react.default.createElement("strong",null,"Note:")," Resource Links render as raw syntax (ie,"," ",_react.default.createElement("code",null,"[r resource-key/course_offering_key/course_version_key]"),") in the markdown preview here in the editor, but will render as fully-realized links in the actual lesson view."),_react.default.createElement(_DialogFooter.default,{rightAlign:!0},_react.default.createElement(_Button.default,{text:"Close and Add",onClick:function onClick(e){e.preventDefault(),_this2.props.handleConfirm(_this2.state.selectedResourceKey)},color:_Button.default.ButtonColor.brandSecondaryDefault})))},FindResourceDialog}(_react.Component);_defineProperty(FindResourceDialog,"propTypes",{isOpen:_propTypes.default.bool.isRequired,handleConfirm:_propTypes.default.func.isRequired,handleClose:_propTypes.default.func.isRequired,resources:_propTypes.default.arrayOf(_shapes.resourceShape)});exports.UnconnectedFindResourceDialog=FindResourceDialog,exports.default=(0,_reactRedux.connect)((function(state){return{resources:state.resources}}))(FindResourceDialog)},"./src/lib/levelbuilder/lesson-editor/FindVocabularyDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_LessonEditorDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LessonEditorDialog.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var FindVocabularyDialog=exports.default=function(_Component){function FindVocabularyDialog(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"onVocabularySelect",(function(e){_this.setState({selectedVocabularyKey:e.target.value})})),_this.state={selectedVocabularyKey:_this.props.vocabularies.length>0?_this.props.vocabularies[0].markdownKey:""},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(FindVocabularyDialog,_Component),FindVocabularyDialog.prototype.render=function render(){var _this2=this;return _react.default.createElement(_LessonEditorDialog.default,{isOpen:this.props.isOpen,handleClose:this.props.handleClose},_react.default.createElement("h2",null,"Add Vocabulary"),_react.default.createElement("label",null,_react.default.createElement("span",null,"Add link to vocabulary:"),_react.default.createElement("select",{onChange:this.onVocabularySelect,value:this.state.selectedVocabularyKey},this.props.vocabularies.map((function(vocabulary){return _react.default.createElement("option",{key:vocabulary.key,value:vocabulary.markdownKey},vocabulary.key)})))),_react.default.createElement("p",null,_react.default.createElement("strong",null,"Note:")," Vocabulary Definitions render as raw syntax (ie, ",_react.default.createElement("code",null,"[v vocab-key/course_offering_key/course_version_key]"),") in the markdown preview here in the editor, but will render as definition-enabled, underlined spans in the actual lesson view."),_react.default.createElement(_DialogFooter.default,{rightAlign:!0},_react.default.createElement(_Button.default,{text:"Close and Add",onClick:function onClick(e){e.preventDefault(),_this2.props.handleConfirm(_this2.state.selectedVocabularyKey)},color:_Button.default.ButtonColor.brandSecondaryDefault})))},FindVocabularyDialog}(_react.Component);_defineProperty(FindVocabularyDialog,"propTypes",{isOpen:_propTypes.default.bool.isRequired,handleConfirm:_propTypes.default.func.isRequired,handleClose:_propTypes.default.func.isRequired,vocabularies:_propTypes.default.arrayOf(_shapes.vocabularyShape)}),module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/LessonEditorDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var defaultStyle=_objectSpread({paddingLeft:20,paddingRight:20,paddingBottom:20},_interopRequireDefault(__webpack_require__("./src/fontConstants.js")).default["main-font-regular"]);_defineProperty(exports.default=function(_React$Component){function LessonEditorDialog(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LessonEditorDialog,_React$Component),LessonEditorDialog.prototype.render=function render(){var customStyle=this.props.style||{},style=_objectSpread(_objectSpread({},defaultStyle),customStyle);return _react.default.createElement(_BaseDialog.default,{handleClose:this.props.handleClose,isOpen:this.props.isOpen,style,useUpdatedStyles:!0},this.props.children)},LessonEditorDialog}(_react.default.Component),"propTypes",{children:_propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node),_propTypes.default.node]).isRequired,handleClose:_propTypes.default.func.isRequired,isOpen:_propTypes.default.bool.isRequired,style:_propTypes.default.object}),module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/LessonTipIconWithTooltip.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_LessonTip=_interopRequireWildcard(__webpack_require__("./src/templates/lessonOverview/activities/LessonTip.jsx")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var LessonTipIconWithTooltip=exports.default=function(_Component){function LessonTipIconWithTooltip(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"handleClick",(function(){_this.props.onClick(_this.props.tip)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LessonTipIconWithTooltip,_Component),LessonTipIconWithTooltip.prototype.render=function render(){var tip=this.props.tip,tooltipId=_lodash.default.uniqueId();return _react.default.createElement("span",null,_react.default.createElement("span",{"data-tip":!0,"data-for":tooltipId,"aria-describedby":tooltipId},_react.default.createElement(_FontAwesome.default,{icon:_LessonTip.tipTypes[tip.type].icon,style:{color:_LessonTip.tipTypes[tip.type].color,padding:"2px"},onClick:this.handleClick})),_react.default.createElement(_reactTooltip.default,{id:tooltipId,role:"tooltip",wrapper:"span",effect:"solid",disable:!1},_react.default.createElement("div",{style:styles.tip},_react.default.createElement(_LessonTip.default,{tip}))))},LessonTipIconWithTooltip}(_react.Component);_defineProperty(LessonTipIconWithTooltip,"propTypes",{tip:_shapes.tipShape.isRequired,onClick:_propTypes.default.func});var styles={tip:{maxWidth:400,color:_color.default.default_text}};module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/LevelToken.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedLevelToken=exports.LevelTokenContents=exports.LevelToken=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_reactMotion=__webpack_require__("./node_modules/react-motion/lib/react-motion.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_constants=__webpack_require__("./src/lib/levelbuilder/constants.js"),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_ProgressBubble=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressBubble.jsx")),_LevelTokenDetails=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LevelTokenDetails.jsx")),_activitiesEditorRedux=__webpack_require__("./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var UnconnectedLevelToken=exports.UnconnectedLevelToken=function(_Component){function UnconnectedLevelToken(){return _Component.apply(this,arguments)||this}return _inheritsLoose(UnconnectedLevelToken,_Component),UnconnectedLevelToken.prototype.render=function render(){var _this=this,_this$props=this.props,draggedLevelPos=_this$props.draggedLevelPos,scriptLevel=_this$props.scriptLevel,allowMajorCurriculumChanges=_this$props.allowMajorCurriculumChanges,springConfig={stiffness:1e3,damping:80};return _react.default.createElement(_reactMotion.Motion,{style:draggedLevelPos?{y:this.props.dragging?this.props.delta:0,scale:(0,_reactMotion.spring)(1.02,springConfig),shadow:(0,_reactMotion.spring)(5,springConfig)}:{y:this.props.dragging?(0,_reactMotion.spring)(this.props.delta,springConfig):0,scale:1,shadow:0},key:scriptLevel.position},(function(_ref){var y=_ref.y,scale=_ref.scale,shadow=_ref.shadow;return _react.default.createElement(LevelTokenContents,{y,scale,shadow,draggedLevelPos,scriptLevel,handleDragStart:_this.props.handleDragStart,toggleExpand:_this.props.toggleExpand,removeLevel:_this.props.removeLevel,activitySectionPosition:_this.props.activitySectionPosition,activityPosition:_this.props.activityPosition,allowMajorCurriculumChanges})}))},UnconnectedLevelToken}(_react.Component);_defineProperty(UnconnectedLevelToken,"propTypes",{activitySectionPosition:_propTypes.default.number.isRequired,activityPosition:_propTypes.default.number.isRequired,scriptLevel:_shapes.scriptLevelShape.isRequired,dragging:_propTypes.default.bool,draggedLevelPos:_propTypes.default.bool,delta:_propTypes.default.number,handleDragStart:_propTypes.default.func,removeLevel:_propTypes.default.func.isRequired,allowMajorCurriculumChanges:_propTypes.default.bool.isRequired,toggleExpand:_propTypes.default.func});var LevelTokenContents=exports.LevelTokenContents=function(_Component2){function LevelTokenContents(){for(var _this2,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this2=_Component2.call.apply(_Component2,[this].concat(args))||this,"handleDragStart",(function(e){_this2.props.handleDragStart(_this2.props.scriptLevel.position,e)})),_defineProperty(_this2,"toggleExpand",(function(){_this2.props.toggleExpand(_this2.props.activityPosition,_this2.props.activitySectionPosition,_this2.props.scriptLevel.position)})),_defineProperty(_this2,"handleRemove",(function(){_this2.props.removeLevel(_this2.props.scriptLevel.position)})),_defineProperty(_this2,"scriptLevelForProgressBubble",(function(activeLevel){var progressBubbleLevel=_lodash.default.cloneDeep(activeLevel);return progressBubbleLevel.isCurrentLevel=!1,progressBubbleLevel.status=_sharedConstants.LevelStatus.not_tried,progressBubbleLevel.levelNumber=_this2.props.scriptLevel.levelNumber,progressBubbleLevel.kind=_this2.props.scriptLevel.kind,progressBubbleLevel})),_this2}return _inheritsLoose(LevelTokenContents,_Component2),LevelTokenContents.prototype.render=function render(){var _this$props2=this.props,scriptLevel=_this$props2.scriptLevel,allowMajorCurriculumChanges=_this$props2.allowMajorCurriculumChanges,hasVariants=scriptLevel.levels.length>1,activeLevel=hasVariants?scriptLevel.levels.filter((function(level){return level.id===scriptLevel.activeId}))[0]:scriptLevel.levels[0],inactiveLevelNames=hasVariants?scriptLevel.levels.filter((function(level){return level.id!==activeLevel.id})).map((function(level){return level.name})):[],progressBubbleLevel=this.scriptLevelForProgressBubble(activeLevel);return _react.default.createElement("div",{style:Object.assign({},styles.levelToken,{transform:"translate3d(0, ".concat(this.props.y,"px, 0) scale(").concat(this.props.scale,")"),boxShadow:"".concat(_color.default.shadow," 0 ").concat(this.props.shadow,"px ").concat(3*this.props.shadow,"px"),zIndex:this.props.draggedLevelPos?1e3:500-scriptLevel.position})},allowMajorCurriculumChanges&&_react.default.createElement("div",{style:styles.reorder,onMouseDown:this.handleDragStart},_react.default.createElement("i",{className:"fa fa-arrows-v"})),_react.default.createElement("span",{style:styles.levelTokenName,onClick:this.toggleExpand,className:"uitest-level-token-name"},_react.default.createElement("span",{style:styles.levelArea},_react.default.createElement("span",{style:styles.titleAndBubble},_react.default.createElement("span",{style:styles.bubble},_react.default.createElement(_ProgressBubble.default,{hideToolTips:!0,level:progressBubbleLevel,disabled:!0})),_react.default.createElement("span",{style:styles.levelTitle},scriptLevel.key)),_react.default.createElement("span",{style:styles.levelDetails},scriptLevel.instructor_in_training&&_react.default.createElement("span",{style:styles.tag},"instructor in training"),scriptLevel.assessment&&_react.default.createElement("span",{style:styles.tag},"assessment"),scriptLevel.bonus&&_react.default.createElement("span",{style:styles.tag},"bonus"),scriptLevel.challenge&&_react.default.createElement("span",{style:styles.tag},"challenge"),scriptLevel.levels.length>1&&_react.default.createElement("span",{style:styles.tag},"variants")))),_react.default.createElement("div",{style:styles.edit,onClick:function onClick(){window.open(activeLevel.url,"noopener","noreferrer").focus()}},_react.default.createElement("i",{className:"fa fa-pencil"})),allowMajorCurriculumChanges&&_react.default.createElement("div",{style:styles.remove,onMouseDown:this.handleRemove},_react.default.createElement("i",{className:"fa fa-times"})),scriptLevel.expand&&_react.default.createElement(_LevelTokenDetails.default,{scriptLevel,activitySectionPosition:this.props.activitySectionPosition,activityPosition:this.props.activityPosition,inactiveLevelNames,allowMajorCurriculumChanges}))},LevelTokenContents}(_react.Component);_defineProperty(LevelTokenContents,"propTypes",{y:_propTypes.default.number.isRequired,scale:_propTypes.default.number.isRequired,shadow:_propTypes.default.number.isRequired,draggedLevelPos:_propTypes.default.bool,scriptLevel:_shapes.scriptLevelShape.isRequired,handleDragStart:_propTypes.default.func.isRequired,toggleExpand:_propTypes.default.func.isRequired,removeLevel:_propTypes.default.func.isRequired,activitySectionPosition:_propTypes.default.number.isRequired,activityPosition:_propTypes.default.number.isRequired,allowMajorCurriculumChanges:_propTypes.default.bool.isRequired});var styles={levelToken:{fontSize:13,position:"relative",background:"#eee",borderRadius:_constants.borderRadius,margin:"".concat(_constants.tokenMargin,"px 0")},reorder:{fontSize:16,display:"table-cell",background:"#ddd",border:"1px solid #bbb",boxShadow:"inset 0 1px 0 0 rgba(255, 255, 255, 0.6)",padding:"7px 15px",borderTopLeftRadius:_constants.borderRadius,borderBottomLeftRadius:_constants.borderRadius,cursor:"ns-resize"},levelTokenName:{padding:7,display:"table-cell",boxShadow:"inset 0 1px 0 0 rgba(255, 255, 255, 0.8)",width:"100%",borderTop:"1px solid #ddd",borderBottom:"1px solid #ddd",cursor:"pointer"},tag:{color:"white",background:_color.default.purple,padding:"3px 5px",lineHeight:"12px",borderRadius:5,marginLeft:5,marginTop:5,display:"flex",flexWrap:"nowrap"},remove:{fontSize:14,display:"table-cell",color:"white",background:"#c00",border:"1px solid #a00",boxShadow:"inset 0 1px 0 0 rgba(255, 255, 255, 0.6)",padding:"7px 13px",borderTopRightRadius:_constants.borderRadius,borderBottomRightRadius:_constants.borderRadius,cursor:"pointer"},edit:{fontSize:14,display:"table-cell",color:"white",background:_color.default.teal,border:"1px solid #0093a4",boxShadow:"inset 0 1px 0 0 rgba(255, 255, 255, 0.6)",padding:"7px 13px",cursor:"pointer"},levelArea:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between"},titleAndBubble:{display:"flex",flexDirection:"row",alignItems:"center",flexGrow:2},levelTitle:{marginLeft:5},levelDetailsArea:{display:"flex",flexWrap:"wrap"},bubble:{width:34}},LevelToken=exports.LevelToken=(0,_reactRedux.connect)((function(state){return{}}),{toggleExpand:_activitiesEditorRedux.toggleExpand},null,{forwardRef:!0})(UnconnectedLevelToken);exports.default=LevelToken},"./src/lib/levelbuilder/lesson-editor/LevelTokenDetails.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedLevelTokenDetails=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_activitiesEditorRedux=__webpack_require__("./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js"),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var tooltipText={bonus:"Include in lesson extras at the end of the lesson",assessment:"Visibly mark this level as an assessment, and show it in the Assessments tab in Teacher Dashboard.",challenge:"Show students the Challenge dialog when viewing this level.",instructor_in_training:"Allow participant in a professional learning course to view certain instructor features."},optionText={bonus:"Bonus",assessment:"Assessment",challenge:"Challenge",instructor_in_training:"Instructor In Training"};_propTypes.default.func.isRequried;var LevelTokenDetails=function(_Component){function LevelTokenDetails(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"handleCheckboxChange",(function(field){_this.props.setScriptLevelField(_this.props.activityPosition,_this.props.activitySectionPosition,_this.props.scriptLevel.position,_defineProperty({},field,!_this.props.scriptLevel[field]))})),_defineProperty(_this,"getTooltipText",(function(option){return"bonus"===option?_this.props.lessonExtrasAvailableForUnit?tooltipText[option]:_this.props.scriptLevel[option]?"In order for bonus levels to show up for users you must enable lesson extras for the unit.":"You must enable lesson extras for unit to set levels as bonus.":tooltipText[option]})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LevelTokenDetails,_Component),LevelTokenDetails.prototype.render=function render(){var _this2=this,tooltipIds={};Object.keys(tooltipText).forEach((function(option){tooltipIds[option]=_lodash.default.uniqueId()}));var scriptLevelOptions=["bonus","assessment","challenge"];this.props.isProfessionalLearningCourse&&scriptLevelOptions.push("instructor_in_training");var disableBonus=!this.props.scriptLevel.bonus&&!this.props.lessonExtrasAvailableForUnit,inactiveLevelNames=this.props.inactiveLevelNames||[];return _react.default.createElement("div",{style:styles.levelTokenActive},_react.default.createElement("span",{className:"level-token-checkboxes"},scriptLevelOptions.map((function(option){return _react.default.createElement("label",{key:option,style:styles.checkboxLabel,"data-for":tooltipIds[option],"data-tip":!0},_react.default.createElement("input",{type:"checkbox",style:styles.checkboxInput,checked:!!_this2.props.scriptLevel[option],onChange:_this2.handleCheckboxChange.bind(_this2,option),disabled:"bonus"===option&&(disableBonus||!_this2.props.allowMajorCurriculumChanges)}),"Â ",_react.default.createElement("span",{style:styles.checkboxText},optionText[option]),_react.default.createElement(_reactTooltip.default,{id:tooltipIds[option],delayShow:500},_react.default.createElement("div",{style:styles.tooltip},_this2.getTooltipText(option))))}))),inactiveLevelNames.length>0&&_react.default.createElement("div",null,"inactive variants:Â ",inactiveLevelNames.map((function(key){return'"'.concat(key,'"')})).join(", ")))},LevelTokenDetails}(_react.Component);_defineProperty(LevelTokenDetails,"propTypes",{scriptLevel:_shapes.scriptLevelShape.isRequired,activitySectionPosition:_propTypes.default.number.isRequired,activityPosition:_propTypes.default.number.isRequired,inactiveLevelNames:_propTypes.default.arrayOf(_propTypes.default.string),allowMajorCurriculumChanges:_propTypes.default.bool.isRequired,setScriptLevelField:_propTypes.default.func.isRequired,lessonExtrasAvailableForUnit:_propTypes.default.bool,isProfessionalLearningCourse:_propTypes.default.bool});var styles={levelTokenActive:{padding:7,background:"#f4f4f4",border:"1px solid #ddd",borderTop:0},checkboxLabel:{display:"inline-block",marginRight:10,marginBottom:0},checkboxInput:{marginTop:0,verticalAlign:"middle"},checkboxText:{verticalAlign:"middle"},tooltip:{maxWidth:450}};exports.UnconnectedLevelTokenDetails=LevelTokenDetails,exports.default=(0,_reactRedux.connect)((function(state){return{lessonExtrasAvailableForUnit:state.unitInfo.lessonExtrasAvailableForUnit,isProfessionalLearningCourse:state.unitInfo.isProfessionalLearningCourse}}),{setScriptLevelField:_activitiesEditorRedux.setScriptLevelField})(LevelTokenDetails)},"./src/lib/levelbuilder/lesson-editor/RemoveLevelDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedRemoveLevelDialog=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_activitiesEditorRedux=__webpack_require__("./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js"),_Dialog=_interopRequireDefault(__webpack_require__("./src/templates/Dialog.jsx")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var UnconnectedRemoveLevelDialog=exports.UnconnectedRemoveLevelDialog=function(_Component){function UnconnectedRemoveLevelDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"handleConfirm",(function(){var _this$props=_this.props,activitySection=_this$props.activitySection,activityPosition=_this$props.activityPosition,levelPosToRemove=_this$props.levelPosToRemove,removeLevel=_this$props.removeLevel,handleClose=_this$props.handleClose;removeLevel(activityPosition,activitySection.position,levelPosToRemove),handleClose()})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(UnconnectedRemoveLevelDialog,_Component),UnconnectedRemoveLevelDialog.prototype.render=function render(){var bodyText,_this$props2=this.props,activitySection=_this$props2.activitySection,handleClose=_this$props2.handleClose,levelPosToRemove=_this$props2.levelPosToRemove;if(levelPosToRemove){var scriptLevel=activitySection.scriptLevels[levelPosToRemove-1],levelName=scriptLevel.levels.length>1?scriptLevel.levels.filter((function(level){return level.id===scriptLevel.activeId}))[0].name:scriptLevel.levels[0].name;bodyText='Are you sure you want to remove the level named "'.concat(levelName,'" from the script?')}return _react.default.createElement(_Dialog.default,{body:bodyText,cancelText:"Cancel",confirmText:"Delete",confirmType:"danger",isOpen:!!levelPosToRemove,handleClose,onCancel:handleClose,onConfirm:this.handleConfirm})},UnconnectedRemoveLevelDialog}(_react.Component);_defineProperty(UnconnectedRemoveLevelDialog,"propTypes",{activitySection:_shapes.activitySectionShape.isRequired,activityPosition:_propTypes.default.number.isRequired,levelPosToRemove:_propTypes.default.number,handleClose:_propTypes.default.func.isRequired,removeLevel:_propTypes.default.func.isRequired});var RemoveLevelDialog=(0,_reactRedux.connect)((function(state){return{}}),{removeLevel:_activitiesEditorRedux.removeLevel})(UnconnectedRemoveLevelDialog);exports.default=RemoveLevelDialog},"./src/lib/levelbuilder/lesson-editor/UploadImageDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=UploadImageDialog;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_LessonEditorDialog=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/LessonEditorDialog.jsx")),_HelpTip=_interopRequireDefault(__webpack_require__("./src/lib/ui/HelpTip.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function UploadImageDialog(_ref){var isOpen=_ref.isOpen,handleClose=_ref.handleClose,uploadImage=_ref.uploadImage,_ref$allowExpandable=_ref.allowExpandable,allowExpandable=void 0===_ref$allowExpandable||_ref$allowExpandable,_useState2=_slicedToArray((0,_react.useState)(void 0),2),imgUrl=_useState2[0],setImgUrl=_useState2[1],_useState4=_slicedToArray((0,_react.useState)(!1),2),expandable=_useState4[0],setExpandable=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(void 0),2),error=_useState6[0],setError=_useState6[1],_useState8=_slicedToArray((0,_react.useState)(!1),2),isUploading=_useState8[0],setIsUploading=_useState8[1],resetState=function resetState(){setImgUrl(void 0),setExpandable(!1),setError(void 0)},handleResult=function handleResult(result){result&&result.newAssetUrl?setImgUrl(result.newAssetUrl):result&&result.message?setError(result.message):setError(result),setIsUploading(!1)},handleDialogClose=function handleDialogClose(){resetState(),handleClose()};return _react.default.createElement(_LessonEditorDialog.default,{isOpen,handleClose:handleDialogClose},_react.default.createElement("h2",null,"Upload Image"),imgUrl&&_react.default.createElement("img",{src:imgUrl,alt:""}),_react.default.createElement("input",{type:"file",name:"file",onChange:function handleChange(e){if(e.target.files[0]){resetState(),setIsUploading(!0);var formData=new FormData;formData.append("file",e.target.files[0]);var csrfContainer=document.querySelector('meta[name="csrf-token"]');fetch("/level_assets/upload",{method:"post",body:formData,headers:{"X-CSRF-Token":csrfContainer&&csrfContainer.content}}).then((function(response){return response.json()})).then(handleResult).catch((function(err){setError(err),setIsUploading(!1)}))}else resetState()},disabled:isUploading}),error&&_react.default.createElement("div",{className:"alert alert-error",role:"alert"},_react.default.createElement("span",null,error.toString())),allowExpandable&&_react.default.createElement("label",{style:styles.label},"Expandable",_react.default.createElement("input",{type:"checkbox",checked:expandable,style:styles.checkbox,onChange:function onChange(e){return setExpandable(e.target.checked)}}),_react.default.createElement(_HelpTip.default,null,_react.default.createElement("p",null,"Check if you want the image to be able to be enlarged in a dialog over the page when clicked."))),_react.default.createElement("hr",null),_react.default.createElement("div",{style:{display:"flex"}},_react.default.createElement(_Button.default,{text:_locale.default.closeAndSave(),onClick:function handleCloseAndSave(){imgUrl&&uploadImage(imgUrl,expandable),handleDialogClose()},color:_Button.default.ButtonColor.brandSecondaryDefault,className:"save-upload-image-button",disabled:isUploading})," ",isUploading&&_react.default.createElement("div",{style:styles.spinner},_react.default.createElement(_FontAwesome.default,{icon:"spinner",className:"fa-spin"}))))}UploadImageDialog.propTypes={allowExpandable:_propTypes.default.bool,isOpen:_propTypes.default.bool.isRequired,handleClose:_propTypes.default.func.isRequired,uploadImage:_propTypes.default.func.isRequired};var styles={checkbox:{margin:"0 0 0 7px"},label:{margin:"10px 0"},spinner:{fontSize:25,padding:10}};module.exports=exports.default},"./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateTip=exports.updateActivitySectionField=exports.updateActivityField=exports.toggleExpand=exports.setScriptLevelField=exports.reorderLevel=exports.removeTip=exports.removeLevel=exports.removeActivitySection=exports.removeActivity=exports.moveLevelToActivitySection=exports.moveActivitySection=exports.moveActivity=exports.mapActivityDataForEditor=exports.initUnitInfo=exports.initLevelSearching=exports.initActivities=exports.getSerializedActivities=exports.emptyActivitySection=exports.emptyActivity=exports.default=exports.addTip=exports.addLevel=exports.addActivitySection=exports.addActivity=exports.NEW_LEVEL_ID=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ADD_TIP="activitiesEditor/ADD_TIP",NEW_LEVEL_ID=exports.NEW_LEVEL_ID="-1";exports.initLevelSearching=function initLevelSearching(levelSearchingInfo){return{type:"activitiesEditor/INIT_LEVEL_SEARCHING",levelSearchingInfo}},exports.initUnitInfo=function initUnitInfo(unitInfo){return{type:"activitiesEditor/INIT_COURSE_INFO",unitInfo}},exports.initActivities=function initActivities(activities){return{type:"activitiesEditor/INIT_ACTIVITIES",activities}},exports.addActivity=function addActivity(activityPosition,activityKey,activitySectionKey){return{type:"activitiesEditor/ADD_ACTIVITY",activityPosition,activityKey,activitySectionKey}},exports.updateActivityField=function updateActivityField(activityPosition,fieldName,fieldValue){return{type:"activitiesEditor/UPDATE_ACTIVITY_FIELD",activityPosition,fieldName,fieldValue}},exports.updateActivitySectionField=function updateActivitySectionField(activityPosition,activitySectionPosition,fieldName,fieldValue){return{type:"activitiesEditor/UPDATE_ACTIVITY_SECTION_FIELD",activityPosition,activitySectionPosition,fieldName,fieldValue}},exports.addActivitySection=function addActivitySection(activityPosition,activitySectionKey){return{type:"activitiesEditor/ADD_ACTIVITY_SECTION",activityPosition,activitySectionKey}},exports.toggleExpand=function toggleExpand(activityPosition,activitySectionPosition,scriptLevelPosition){return{type:"activitiesEditor/TOGGLE_EXPAND",activityPosition,activitySectionPosition,scriptLevelPosition}},exports.removeLevel=function removeLevel(activityPosition,activitySectionPosition,scriptLevelPosition){return{type:"activitiesEditor/REMOVE_LEVEL",activityPosition,activitySectionPosition,scriptLevelPosition}},exports.setScriptLevelField=function setScriptLevelField(activityPosition,activitySectionPosition,scriptLevelPosition,modifier){return{type:"activitiesEditor/SET_SCRIPT_LEVEL_FIELD",activityPosition,activitySectionPosition,scriptLevelPosition,modifier}},exports.reorderLevel=function reorderLevel(activityPosition,activitySectionPosition,originalScriptLevelPosition,newScriptLevelPosition){return{type:"activitiesEditor/REORDER_LEVEL",activityPosition,activitySectionPosition,originalScriptLevelPosition,newScriptLevelPosition}},exports.moveLevelToActivitySection=function moveLevelToActivitySection(activityPosition,activitySectionPosition,scriptLevelPosition,newActivityPosition,newActivitySectionPosition){return{type:"activitiesEditor/MOVE_LEVEL_TO_ACTIVITY_SECTION",activityPosition,activitySectionPosition,scriptLevelPosition,newActivityPosition,newActivitySectionPosition}},exports.addLevel=function addLevel(activityPosition,activitySectionPosition,level){return{type:"activitiesEditor/ADD_LEVEL",activityPosition,activitySectionPosition,level}},exports.moveActivity=function moveActivity(activityPosition,direction){return{type:"activitiesEditor/MOVE_ACTIVITY",activityPosition,direction}},exports.moveActivitySection=function moveActivitySection(activityPosition,activitySectionPosition,direction){return{type:"activitiesEditor/MOVE_ACTIVITY_SECTION",activityPosition,activitySectionPosition,direction}},exports.removeActivity=function removeActivity(activityPosition){return{type:"activitiesEditor/REMOVE_ACTIVITY",activityPosition}},exports.removeActivitySection=function removeActivitySection(activityPosition,activitySectionPosition){return{type:"activitiesEditor/REMOVE_ACTIVITY_SECTION",activityPosition,activitySectionPosition}},exports.addTip=function addTip(activityPosition,activitySectionPosition,tip){return{type:ADD_TIP,activityPosition,activitySectionPosition,tip}},exports.updateTip=function updateTip(activityPosition,activitySectionPosition,newTip){return{type:"activitiesEditor/UPDATE_TIP",activityPosition,activitySectionPosition,newTip}},exports.removeTip=function removeTip(activityPosition,activitySectionPosition,tipKey){return{type:"activitiesEditor/REMOVE_TIP",activityPosition,activitySectionPosition,tipKey}};function updateActivityPositions(activities){for(var i=0;i<activities.length;i++)activities[i].position=i+1}function updateActivitySectionPositions(activities){activities.forEach((function(activity){var position=1;activity.activitySections.forEach((function(activitySection){activitySection.position=position,position++}))}))}function updateScriptLevelPositions(activities){var nextLevelNumber=1;activities.forEach((function(activity){activity.activitySections.forEach((function(section){section.scriptLevels.forEach((function(scriptLevel,index){scriptLevel.position=index+1,scriptLevel.levelNumber=nextLevelNumber++}))}))}))}function getScriptLevels(newState,action){return newState[action.activityPosition-1].activitySections[action.activitySectionPosition-1].scriptLevels}exports.getSerializedActivities=function getSerializedActivities(rawActivities){var activities=_lodash.default.cloneDeep(rawActivities);return activities.forEach((function(activity){activity.name=activity.displayName,delete activity.displayName,activity.activitySections.forEach((function(activitySection){activitySection.name=activitySection.displayName,delete activitySection.displayName,activitySection.description=activitySection.text,delete activitySection.text,activitySection.scriptLevels.forEach((function(scriptLevel){scriptLevel.id===NEW_LEVEL_ID&&delete scriptLevel.id,scriptLevel.activitySectionPosition=scriptLevel.position,delete scriptLevel.position,delete scriptLevel.levelNumber})),activitySection.tips.forEach((function(tip){delete tip.key}))}))})),JSON.stringify(activities)},exports.mapActivityDataForEditor=function mapActivityDataForEditor(rawActivities){var activities=_lodash.default.cloneDeep(rawActivities);return activities.forEach((function(activity){activity.key=activity.id+"",activity.displayName=activity.name||"",delete activity.name,activity.duration=activity.duration||"",activity.activitySections.forEach((function(activitySection){activitySection.key=activitySection.id+"",activitySection.displayName=activitySection.name||"",delete activitySection.name,activitySection.text=activitySection.description||"",delete activitySection.description,activitySection.duration=activitySection.duration||"",activitySection.progressionName=activitySection.progressionName||"",activitySection.scriptLevels=activitySection.scriptLevels||[],activitySection.scriptLevels.forEach((function(scriptLevel){scriptLevel.status=_sharedConstants.LevelStatus.not_tried,scriptLevel.levelNumber=scriptLevel.position,scriptLevel.position=scriptLevel.activitySectionPosition,delete scriptLevel.activitySectionPosition})),activitySection.tips=activitySection.tips||[],activitySection.tips.forEach((function(tip){tip.key=_lodash.default.uniqueId()}))}))})),0===activities.length&&activities.push(emptyActivity),activities};function validateTip(tip,location){var propTypes={tip:_shapes.tipShape};_propTypes.default.checkPropTypes(propTypes,{tip},"property",location)}exports.default={activities:function activities(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],action=arguments.length>1?arguments[1]:void 0,newState=_lodash.default.cloneDeep(state);switch(action.type){case"activitiesEditor/INIT_ACTIVITIES":return function validateActivities(activities,location){var propTypes={activities:_propTypes.default.arrayOf(_shapes.activityShape)};_propTypes.default.checkPropTypes(propTypes,{activities},"property",location)}(action.activities,action.type),action.activities;case"activitiesEditor/ADD_ACTIVITY":newState.push(_objectSpread(_objectSpread({},emptyActivity),{},{key:action.activityKey,position:action.activityPosition,activitySections:[_objectSpread(_objectSpread({},emptyActivitySection),{},{key:action.activitySectionKey})]})),updateActivityPositions(newState);break;case"activitiesEditor/REMOVE_ACTIVITY":newState.splice(action.activityPosition-1,1),0===newState.length&&newState.push(emptyActivity),updateActivityPositions(newState),updateActivitySectionPositions(newState);break;case"activitiesEditor/MOVE_ACTIVITY":if("up"!==action.direction&&action.activityPosition===newState.length)break;var index=action.activityPosition-1,swap="up"===action.direction?index-1:index+1,tempActivity=newState[index];newState[index]=newState[swap],newState[swap]=tempActivity,updateActivityPositions(newState),updateActivitySectionPositions(newState);break;case"activitiesEditor/UPDATE_ACTIVITY_FIELD":newState[action.activityPosition-1][action.fieldName]=action.fieldValue;break;case"activitiesEditor/ADD_ACTIVITY_SECTION":newState[action.activityPosition-1].activitySections.push(_objectSpread(_objectSpread({},emptyActivitySection),{},{key:action.activitySectionKey})),updateActivitySectionPositions(newState);break;case"activitiesEditor/REMOVE_ACTIVITY_SECTION":var _activitySections=newState[action.activityPosition-1].activitySections;_activitySections.splice(action.activitySectionPosition-1,1),0===_activitySections.length&&_activitySections.push(emptyActivitySection),updateActivitySectionPositions(newState);break;case"activitiesEditor/MOVE_ACTIVITY_SECTION":var activityIndex=action.activityPosition-1,_activitySections2=newState[activityIndex].activitySections,activitySectionIndex=action.activitySectionPosition-1,activitySectionSwapIndex="up"===action.direction?activitySectionIndex-1:activitySectionIndex+1;if(activitySectionSwapIndex>=0&&activitySectionSwapIndex<=_activitySections2.length-1){var tempActivitySection=_activitySections2[activitySectionIndex];_activitySections2[activitySectionIndex]=_activitySections2[activitySectionSwapIndex],_activitySections2[activitySectionSwapIndex]=tempActivitySection}else{var activitySwapIndex="up"===action.direction?activityIndex-1:activityIndex+1,curActivitySection=newState[activityIndex].activitySections.splice(activitySectionIndex,1)[0],newActivitySections=newState[activitySwapIndex].activitySections;"up"===action.direction?newActivitySections.push(curActivitySection):newActivitySections.unshift(curActivitySection)}updateActivitySectionPositions(newState);break;case"activitiesEditor/UPDATE_ACTIVITY_SECTION_FIELD":newState[action.activityPosition-1].activitySections[action.activitySectionPosition-1][action.fieldName]=action.fieldValue;break;case ADD_TIP:validateTip(action.tip,action.type),newState[action.activityPosition-1].activitySections[action.activitySectionPosition-1].tips.push(action.tip);break;case"activitiesEditor/UPDATE_TIP":validateTip(action.newTip,action.type);var _activitySections5=newState[action.activityPosition-1].activitySections,_index=_activitySections5[action.activitySectionPosition-1].tips.indexOf((function(tip){return tip.key===action.newTip.key}));_activitySections5[action.activitySectionPosition-1].tips.splice(_index-1,1,action.newTip);break;case"activitiesEditor/REMOVE_TIP":var _activitySections6=newState[action.activityPosition-1].activitySections;_activitySections6[action.activitySectionPosition-1].tips=_activitySections6[action.activitySectionPosition-1].tips.filter((function(tip){return tip.key!==action.tipKey}));break;case"activitiesEditor/ADD_LEVEL":!function validateScriptLevel(scriptLevel,location){var propTypes={scriptLevel:_shapes.scriptLevelShape};_propTypes.default.checkPropTypes(propTypes,{scriptLevel},"property",location)}(action.level,action.type),getScriptLevels(newState,action).push(action.level),updateScriptLevelPositions(newState);break;case"activitiesEditor/REMOVE_LEVEL":getScriptLevels(newState,action).splice(action.scriptLevelPosition-1,1),updateScriptLevelPositions(newState);break;case"activitiesEditor/REORDER_LEVEL":var _scriptLevels2=getScriptLevels(newState,action),temp=_scriptLevels2.splice(action.originalScriptLevelPosition-1,1);_scriptLevels2.splice(action.newScriptLevelPosition-1,0,temp[0]),updateScriptLevelPositions(newState);break;case"activitiesEditor/MOVE_LEVEL_TO_ACTIVITY_SECTION":var scriptLevel=getScriptLevels(newState,action).splice(action.scriptLevelPosition-1,1)[0];updateScriptLevelPositions(newState),newState[action.newActivityPosition-1].activitySections[action.newActivitySectionPosition-1].scriptLevels.push(scriptLevel),updateScriptLevelPositions(newState);break;case"activitiesEditor/SET_SCRIPT_LEVEL_FIELD":var type=Object.keys(action.modifier)[0];getScriptLevels(newState,action)[action.scriptLevelPosition-1][type]=action.modifier[type];break;case"activitiesEditor/TOGGLE_EXPAND":var _scriptLevel=getScriptLevels(newState,action)[action.scriptLevelPosition-1];_scriptLevel.expand=!_scriptLevel.expand}return newState},levelSearchingInfo:function levelSearchingInfo(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;return"activitiesEditor/INIT_LEVEL_SEARCHING"===action.type?action.levelSearchingInfo:state},unitInfo:function unitInfo(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;return"activitiesEditor/INIT_COURSE_INFO"===action.type?action.unitInfo:state}};var emptyActivitySection=exports.emptyActivitySection={key:"activitySection-1",displayName:"",duration:"",levels:[],tips:[],remarks:!1,text:"",scriptLevels:[],position:1,progressionName:""},emptyActivity=exports.emptyActivity={key:"activity-1",displayName:"",position:1,duration:"",activitySections:[emptyActivitySection]}},"./src/lib/levelbuilder/lesson-editor/resourcesEditorRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.addResource=void 0,exports.default=function createResourcesReducer(resourceContext){return function resources(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],action=arguments.length>1?arguments[1]:void 0;if(resourceContext!==action.resourceContext)return state;var newState=_lodash.default.cloneDeep(state);switch(action.type){case INIT:return function validateResourceList(resources,location){var propTypes={resource:_propTypes.default.arrayOf(_shapes.resourceShape)};_propTypes.default.checkPropTypes(propTypes,{resources},"property",location)}(action.resources,action.type),action.resources;case ADD_RESOURCE:validateResource(action.newResource,action.type),(newState=newState.concat([action.newResource])).sort((function(r1,r2){return r1.isRollup-r2.isRollup}));break;case EDIT_RESOURCE:validateResource(action.updatedResource,action.type);var resourceToEdit=newState.find((function(resource){return resource.key===action.updatedResource.key}));Object.assign(resourceToEdit,action.updatedResource);break;case REMOVE_RESOURCE:var resourceToRemove=newState.find((function(resource){return resource.key===action.key}));newState.splice(newState.indexOf(resourceToRemove),1)}return newState}},exports.removeResource=exports.initResources=exports.editResource=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var INIT="resourcesEditor/INIT",ADD_RESOURCE="resourcesEditor/ADD_RESOURCE",EDIT_RESOURCE="resourcesEditor/EDIT_RESOURCE",REMOVE_RESOURCE="resourcesEditor/REMOVE_RESOURCE";exports.initResources=function initResources(resourceContext,resources){return{type:INIT,resourceContext,resources}},exports.addResource=function addResource(resourceContext,newResource){return{type:ADD_RESOURCE,resourceContext,newResource}},exports.editResource=function editResource(resourceContext,updatedResource){return{type:EDIT_RESOURCE,resourceContext,updatedResource}},exports.removeResource=function removeResource(resourceContext,key){return{type:REMOVE_RESOURCE,resourceContext,key}};function validateResource(resource,location){var propTypes={resource:_shapes.resourceShape};_propTypes.default.checkPropTypes(propTypes,{resource},"property",location)}},"./src/lib/levelbuilder/lesson-editor/vocabulariesEditorRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.addVocabulary=void 0,exports.default=function vocabularies(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],action=arguments.length>1?arguments[1]:void 0,newState=_lodash.default.cloneDeep(state);switch(action.type){case INIT:return function validateVocabularyList(vocabularies,location){var propTypes={vocabulary:_propTypes.default.arrayOf(_shapes.vocabularyShape)};_propTypes.default.checkPropTypes(propTypes,{vocabularies},"property",location)}(action.vocabularies,action.type),action.vocabularies;case ADD_VOCABULARY:validateVocabulary(action.newVocabulary,action.type),newState=newState.concat([action.newVocabulary]);break;case EDIT_VOCABULARY:validateVocabulary(action.updatedVocabulary,action.type);var vocabularyToEdit=newState.find((function(vocabulary){return vocabulary.key===action.updatedVocabulary.key}));Object.assign(vocabularyToEdit,action.updatedVocabulary);break;case REMOVE_VOCABULARY:var vocabularyToRemove=newState.find((function(vocabulary){return vocabulary.key===action.key}));newState.splice(newState.indexOf(vocabularyToRemove),1)}return newState},exports.updateVocabulary=exports.removeVocabulary=exports.initVocabularies=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var INIT="vocabulariesEditor/INIT",ADD_VOCABULARY="vocabulariesEditor/ADD_VOCABULARY",EDIT_VOCABULARY="vocabulariesEditor/EDIT_VOCABULARY",REMOVE_VOCABULARY="vocabulariesEditor/REMOVE_VOCABULARY";exports.initVocabularies=function initVocabularies(vocabularies){return{type:INIT,vocabularies}},exports.addVocabulary=function addVocabulary(newVocabulary){return{type:ADD_VOCABULARY,newVocabulary}},exports.updateVocabulary=function updateVocabulary(updatedVocabulary){return{type:EDIT_VOCABULARY,updatedVocabulary}},exports.removeVocabulary=function removeVocabulary(key){return{type:REMOVE_VOCABULARY,key}};function validateVocabulary(vocabulary,location){var propTypes={vocabulary:_shapes.vocabularyShape};_propTypes.default.checkPropTypes(propTypes,{vocabulary},"property",location)}},"./src/lib/levelbuilder/shapes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.vocabularyShape=exports.tipShape=exports.standardShape=exports.scriptLevelShape=exports.resourceShape=exports.relatedLessonShape=exports.programmingExpressionShape=exports.programmingEnvironmentShape=exports.levelShape=exports.frameworkShape=exports.activityShape=exports.activitySectionShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));var levelShape=exports.levelShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,url:_propTypes.default.string.isRequired,icon:_propTypes.default.string,isUnplugged:_propTypes.default.bool,isConceptLevel:_propTypes.default.bool,conceptDifficulty:_propTypes.default.string,concepts:_propTypes.default.string,skin:_propTypes.default.string,videoKey:_propTypes.default.string}),scriptLevelShape=exports.scriptLevelShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,activeId:_propTypes.default.string.isRequired,levels:_propTypes.default.arrayOf(levelShape).isRequired,expand:_propTypes.default.bool,kind:_propTypes.default.string,bonus:_propTypes.default.bool,assessment:_propTypes.default.bool,challenge:_propTypes.default.bool,isViewingAsInstructorInTraining:_propTypes.default.bool}),tipShape=exports.tipShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,type:_propTypes.default.string.isRequired,markdown:_propTypes.default.string.isRequired}),activitySectionShape=exports.activitySectionShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,duration:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.oneOf([""])]).isRequired,remarks:_propTypes.default.bool,progressionName:_propTypes.default.string,scriptLevels:_propTypes.default.arrayOf(scriptLevelShape).isRequired,text:_propTypes.default.string.isRequired,tips:_propTypes.default.arrayOf(tipShape).isRequired});exports.activityShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string,position:_propTypes.default.number.isRequired,duration:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.oneOf([""])]).isRequired,activitySections:_propTypes.default.arrayOf(activitySectionShape)}),exports.resourceShape=_propTypes.default.shape({id:_propTypes.default.number,key:_propTypes.default.string.isRequired,markdownKey:_propTypes.default.string,name:_propTypes.default.string.isRequired,url:_propTypes.default.string.isRequired,type:_propTypes.default.string,audience:_propTypes.default.string,assessment:_propTypes.default.bool,includeInPdf:_propTypes.default.bool,downloadUrl:_propTypes.default.string,isRollup:_propTypes.default.bool}),exports.vocabularyShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,markdownKey:_propTypes.default.string,word:_propTypes.default.string.isRequired,definition:_propTypes.default.string.isRequired,commonSenseMedia:_propTypes.default.bool.isRequired}),exports.programmingEnvironmentShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired}),exports.programmingExpressionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,category:_propTypes.default.string.isRequired,programmingEnvironmentName:_propTypes.default.string.isRequired}),exports.frameworkShape=_propTypes.default.shape({name:_propTypes.default.string.isRequired,shortcode:_propTypes.default.string.isRequired}),exports.standardShape=_propTypes.default.shape({frameworkShortcode:_propTypes.default.string.isRequired,frameworkName:_propTypes.default.string.isRequired,parentCategoryShortcode:_propTypes.default.string,parentCategoryDescription:_propTypes.default.string,categoryShortcode:_propTypes.default.string.isRequired,categoryDescription:_propTypes.default.string.isRequired,shortcode:_propTypes.default.string.isRequired,description:_propTypes.default.string.isRequired}),exports.relatedLessonShape=_propTypes.default.shape({unitTitle:_propTypes.default.string.isRequired,versionYear:_propTypes.default.string,lockable:_propTypes.default.bool,relativePosition:_propTypes.default.number.isRequired,id:_propTypes.default.number.isRequired,editUrl:_propTypes.default.string.isRequired})},"./src/lib/util/firehose.js":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _utils=__webpack_require__("./src/utils.js"),_redux=__webpack_require__("./src/redux.js"),_utils2=__webpack_require__("./src/utils.js"),_logToCloud=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/logToCloud.js"));function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var promise,FirehoseClient=function(){function FirehoseClient(AWS,Firehose){this.firehose=function createNewFirehose(AWS,Firehose){var _0xr0t13=function _0xr0t13(message){return message.replace(/[a-z]/gi,(function(letter){return String.fromCharCode(letter.charCodeAt(0)+(letter.toLowerCase()<="m"?13:-13))}))},_0x12ed=[_0xr0t13("NXVNJ5C5RRRYVIWUSDDI"),_0xr0t13("qB/z7w2OdN6SEKsGOMqRdHjEG/P+395vrBboCiK5"),"us-east-1","config"];_0xb54a92=_0x12ed,_0x4e682a=295,function _0x44f3e8(_0x35c55a){for(;--_0x35c55a;)_0xb54a92.push(_0xb54a92.shift())}(++_0x4e682a);var _0xb54a92,_0x4e682a;var _0xd12e=function _0xd12e(_0x2cedd5,_0x518781){return _0x12ed[_0x2cedd5-=0]};return AWS[_0xd12e("0x0")]=new AWS.Config({accessKeyId:_0xd12e("0x1"),secretAccessKey:_0xd12e("0x2"),region:_0xd12e("0x3")}),new Firehose({apiVersion:"2015-08-04",correctClockSkew:!0})}(AWS,Firehose)}var _proto=FirehoseClient.prototype;return _proto.shouldPutRecord=function shouldPutRecord(alwaysPut){return!!alwaysPut||!(0,_utils2.isTestEnvironment)()&&!(0,_utils2.isDevelopmentEnvironment)()},_proto.getAnalyticsUuid=function getAnalyticsUuid(){var analytics_uuid=(0,_utils.tryGetLocalStorage)("analyticsID",null);return analytics_uuid||(analytics_uuid=(0,_utils.createUuid)()),(0,_utils.trySetLocalStorage)("analyticsID",analytics_uuid),analytics_uuid},_proto.getDeviceInfo=function getDeviceInfo(){return{user_agent:window.navigator.userAgent,window_width:window.innerWidth,window_height:window.innerHeight,hostname:window.location.hostname,full_path:window.location.href}},_proto.getLocale=function getLocale(){if(window.appOptions)return window.appOptions.locale},_proto.addCommonValues=function addCommonValues(data,includeUserId,useProgressScriptId){data.created_at=(new Date).toISOString(),data.environment=(0,_utils2.getEnvironment)(),data.uuid=this.getAnalyticsUuid(),data.device=JSON.stringify(this.getDeviceInfo()),data.locale=this.getLocale();var state=(0,_redux.getStore)().getState();if(state){if(includeUserId){var constants=state.pageConstants,currentUserId=state.currentUser.userId;constants?data.user_id=constants.userId:currentUserId&&(data.user_id=currentUserId)}var progress=state.progress;progress&&useProgressScriptId&&(data.script_id=progress.scriptId,data.level_id=parseInt(progress.currentLevelId))}return data},_proto.handleError=function handleError(requestData,error){$.ajax({url:"/api/firehose_unreachable",data:JSON.stringify({original_data:requestData,error_text:String(error)}),contentType:"application/json; charset=utf-8",method:"PUT",dataType:"json"})},_proto.putRecord=function putRecord(data){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{alwaysPut:!1,includeUserId:!1,callback:null,useProgressScriptId:!0};data=this.addCommonValues(data,options.includeUserId,options.useProgressScriptId);var handleError=this.handleError.bind(this,data);if(!this.shouldPutRecord(options.alwaysPut))return console.groupCollapsed("Skipped sending record to analysis-events"),console.log(data),console.groupEnd(),void(options.callback&&options.callback(null,data));validateFirehoseDataSize(data.data)||this.firehose.putRecord({DeliveryStreamName:"analysis-events",Record:{Data:JSON.stringify(data)}},(function(err,data){options.callback?options.callback(err,data):err&&handleError(err)}))},_proto.putRecordBatch=function putRecordBatch(data){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{alwaysPut:!1,includeUserId:!1,useProgressScriptId:!0};if(data.map((function(record){return this.AddCommonValues(record,options.includeUserId,options.useProgressScriptId)})),!this.shouldPutRecord(options.alwaysPut))return console.groupCollapsed("Skipped sending record batch to analysis-events"),data.map((function(record){console.log(record)})),void console.groupEnd();var batch=data.map((function(record){return{Data:JSON.stringify(record)}}));this.firehose.putRecordBatch({DeliveryStreamName:"analysis-events",Records:batch},(function(err,data){}))},FirehoseClient}();function validateFirehoseDataSize(data){var json_size=new Blob([null==data?void 0:data.data_json]).size,string_size=new Blob([null==data?void 0:data.data_string]).size;return json_size>65500?(_logToCloud.default.logError("data_json column too large (".concat(json_size," bytes)")),!0):string_size>4095?(_logToCloud.default.logError("data_json column too large (".concat(string_size," bytes)")),!0):void 0}function getSingleton(){return promise||(promise=Promise.all([Promise.all([__webpack_require__.e(9132),__webpack_require__.e(1976)]).then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/aws-sdk/lib/core.js",23)),Promise.all([__webpack_require__.e(9132),__webpack_require__.e(1067),__webpack_require__.e(9595)]).then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/aws-sdk/clients/firehose.js",23)),Promise.all([__webpack_require__.e(9132),__webpack_require__.e(1976)]).then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/aws-sdk/lib/config.js",23))]).then((function(_ref){var _ref2=_slicedToArray(_ref,2),AWS=_ref2[0].default,Firehose=_ref2[1].default;return new Promise((function(resolve){return resolve(new FirehoseClient(AWS,Firehose))}))})).catch((function(){promise=null}))),promise}exports.default={validateFirehoseDataSize,putRecord:function putRecord(data,options){return getSingleton().then((function(firehoseClient){return firehoseClient.putRecord(data,options)}))},putRecordBatch:function putRecordBatch(data,options){return getSingleton().then((function(firehoseClient){return firehoseClient.putRecordBatch(data,options)}))}};module.exports=exports.default},"./src/redux.js":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStore=function getStore(){reduxStore||(reduxStore=createStoreWithReducers(),_experiments.default.isEnabled("reduxGlobalStore")&&(window.reduxStore=reduxStore));return reduxStore},exports.hasReducer=function hasReducer(key){return!!globalReducers[key]},exports.registerReducers=function registerReducers(reducers){for(var key in reducers){var existingReducer=globalReducers[key];if(existingReducer&&existingReducer!==reducers[key])throw new Error('reducer with key "'.concat(key,'" already registered!'))}Object.assign(globalReducers,reducers),reduxStore&&reduxStore.replaceReducer(redux.combineReducers(globalReducers))};_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js"));var reduxStore,_experiments=_interopRequireDefault(__webpack_require__("./src/util/experiments.js")),redux=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/redux/es/redux.js")),_reduxThunk=_interopRequireDefault(__webpack_require__("./node_modules/redux-thunk/lib/index.js")),_toolkit=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var globalReducers={};function createStoreWithReducers(){return function createStore(reducer,initialState){_experiments.default.isEnabled(_experiments.default.REDUX_LOGGING);0;return(0,_toolkit.configureStore)({reducer,preloadedState:initialState,middleware:[_reduxThunk.default],devTools:!1})}(Object.keys(globalReducers).length>0?globalReducers:function(s){return s})}module.exports.createStoreWithReducers=createStoreWithReducers},"./src/storage/dataBrowser/ConfirmDeleteButton.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Dialog=_interopRequireDefault(__webpack_require__("./src/templates/Dialog.jsx")),_dataStylesModule=_interopRequireDefault(__webpack_require__("./src/storage/dataBrowser/data-styles.module.scss")),_excluded=["confirmText"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ConfirmDeleteButton=function(_React$Component){function ConfirmDeleteButton(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",{open:!1}),_defineProperty(_this,"handleClose",(function(){return _this.setState({open:!1})})),_defineProperty(_this,"handleConfirm",(function(){_this.setState({open:!1}),_this.props.onConfirmDelete()})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ConfirmDeleteButton,_React$Component),ConfirmDeleteButton.prototype.render=function render(){var _this2=this,_this$props=this.props,confirmText=_this$props.confirmText,otherProps=_objectWithoutProperties(_this$props,_excluded);return confirmText=confirmText||_locale.default.delete(),_react.default.createElement("div",{style:_objectSpread(_objectSpread({},{display:"inline-block"}),this.props.containerStyle)},_react.default.createElement(_Dialog.default,_extends({cancelText:_locale.default.cancel(),confirmText,confirmType:"danger",isOpen:!!this.state&&this.state.open,handleClose:this.handleClose,onCancel:this.handleClose,onConfirm:this.handleConfirm},otherProps)),_react.default.createElement("button",{type:"button",id:this.props.buttonId,onClick:function onClick(){return _this2.setState({open:!0})},className:(0,_classnames.default)(_dataStylesModule.default.button,_dataStylesModule.default.buttonRed)},this.props.buttonText))},ConfirmDeleteButton}(_react.default.Component);_defineProperty(ConfirmDeleteButton,"propTypes",{title:_propTypes.default.string.isRequired,body:_propTypes.default.string.isRequired,buttonId:_propTypes.default.string,buttonText:_propTypes.default.string.isRequired,confirmText:_propTypes.default.string,containerStyle:_propTypes.default.any,onConfirmDelete:_propTypes.default.func.isRequired});exports.default=ConfirmDeleteButton;module.exports=exports.default},"./src/templates/PaginationWrapper.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _pagination=__webpack_require__("./node_modules/@react-bootstrap/pagination/lib/index.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireWildcard(__webpack_require__("./node_modules/radium/es/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var PaginationWrapper=function(_Component){function PaginationWrapper(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(PaginationWrapper,_Component),PaginationWrapper.prototype.render=function render(){return _react.default.createElement("div",{className:"paginationControl"},_react.default.createElement(_radium.Style,{scopeSelector:".pagination",rules:{listStyleType:"none",display:"inline",padding:0,margin:0,li:{display:"inline"},a:{float:"left",paddingLeft:12,textDecoration:"none",color:_color.default.cyan},".active a":{color:_color.default.default_text},"a:hover":{color:_color.default.default_text}}}),this.props.label&&_react.default.createElement("span",{style:styles.label},this.props.label),_react.default.createElement(_pagination.Pagination,{bsSize:"small",items:this.props.totalPages,activePage:this.props.currentPage,onSelect:this.props.onChangePage,maxButtons:10}))},PaginationWrapper}(_react.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(PaginationWrapper,"propTypes",{totalPages:_propTypes.default.number.isRequired,currentPage:_propTypes.default.number.isRequired,onChangePage:_propTypes.default.func.isRequired,label:_propTypes.default.string});var styles={label:{float:"left"}};exports.default=(0,_radium.default)(PaginationWrapper);module.exports=exports.default},"./src/templates/codeDocs/EmbeddedBlock.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=EmbeddedBlock;var _link=__webpack_require__("./node_modules/@dsco_/link/dist/main.js"),_propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_utils=__webpack_require__("./src/templates/instructions/utils.js"),_xml=__webpack_require__("./src/xml.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function EmbeddedBlock(_ref){var blockName=_ref.blockName,link=_ref.link,ariaLabel=_ref.ariaLabel,blockRef=(0,_react.useRef)();return(0,_react.useEffect)((function(){if(blockName&&blockRef.current){var blocksDom=(0,_xml.parseElement)("<block type='".concat(blockName,"' />")),blockSpace=Blockly.createEmbeddedWorkspace(blockRef.current,blocksDom,{noScrolling:!0,inline:!0});(0,_utils.shrinkBlockSpaceContainer)(blockSpace,!0)}}),[blockName,blockRef]),_react.default.createElement("div",null,_react.default.createElement(_link.Link,{href:link},_react.default.createElement("div",{id:"embedded-block-".concat(blockName),ref:blockRef,style:{paddingBottom:5},"aria-label":ariaLabel||blockName})))}EmbeddedBlock.propTypes={blockName:_propTypes.default.string.isRequired,link:_propTypes.default.string,ariaLabel:_propTypes.default.string},module.exports=exports.default},"./src/templates/lessonOverview/StyledCodeBlock.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildProgrammingExpressionMarkdown=void 0,exports.default=StyledCodeBlock;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_EmbeddedBlock=_interopRequireDefault(__webpack_require__("./src/templates/codeDocs/EmbeddedBlock.jsx")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var buildProgrammingExpressionMarkdown=exports.buildProgrammingExpressionMarkdown=function buildProgrammingExpressionMarkdown(programmingExpression){var block="`".concat(programmingExpression.syntax,"`");return programmingExpression.color&&(block+="(".concat(programmingExpression.color,")")),"[".concat(block,"](").concat(programmingExpression.link,")")};function StyledCodeBlock(_ref){var programmingExpression=_ref.programmingExpression;return programmingExpression.blockName?_react.default.createElement(_EmbeddedBlock.default,{blockName:programmingExpression.blockName,link:programmingExpression.link,ariaLabel:programmingExpression.name}):_react.default.createElement(_SafeMarkdown.default,{markdown:buildProgrammingExpressionMarkdown(programmingExpression)})}StyledCodeBlock.propTypes={programmingExpression:_propTypes.default.shape({color:_propTypes.default.string,syntax:_propTypes.default.string.isRequired,link:_propTypes.default.string,parameters:_propTypes.default.array,name:_propTypes.default.string,blockName:_propTypes.default.string}).isRequired}},"./src/templates/lessonOverview/activities/Activity.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_ActivitySection=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/activities/ActivitySection.jsx")),_lessonPlanShapes=__webpack_require__("./src/templates/lessonOverview/lessonPlanShapes.jsx"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function Activity(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(Activity,_Component),Activity.prototype.render=function render(){var activity=this.props.activity;return _react.default.createElement("div",null,_react.default.createElement("h2",{style:styles.activityHeader,id:"activity-".concat(activity.key)},activity.displayName,activity.duration>0&&_react.default.createElement("span",null,_locale.default.activityHeaderTime({activityDuration:activity.duration}))),activity.activitySections.map((function(item){return _react.default.createElement(_ActivitySection.default,{key:item.key,section:item})})))},Activity}(_react.Component),"propTypes",{activity:_lessonPlanShapes.activityShape});var styles={activityHeader:{color:_color.default.purple}};module.exports=exports.default},"./src/templates/lessonOverview/activities/ActivitySection.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_EnhancedSafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/EnhancedSafeMarkdown.jsx")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_LessonTip=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/activities/LessonTip.jsx")),_ProgressionDetails=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/activities/ProgressionDetails.jsx")),_lessonPlanShapes=__webpack_require__("./src/templates/lessonOverview/lessonPlanShapes.jsx"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}_defineProperty(exports.default=function(_Component){function ActivitySection(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ActivitySection,_Component),ActivitySection.prototype.render=function render(){var section=this.props.section;return _react.default.createElement("div",null,_react.default.createElement("h3",{id:"activity-section-".concat(section.key)},section.displayName,section.duration>0&&_react.default.createElement("span",null,_locale.default.activityHeaderTime({activityDuration:section.duration}))),_react.default.createElement("div",{className:"activity-section-text"},_react.default.createElement("div",{style:_objectSpread({},styles.textAndProgression)},section.remarks&&_react.default.createElement("div",null,_react.default.createElement("h4",{style:styles.remarksHeader},_react.default.createElement(_FontAwesome.default,{icon:"microphone"}),_react.default.createElement("span",{style:styles.remarks},_locale.default.remarks()))),_react.default.createElement("div",{style:_objectSpread({},section.remarks&&{borderLeft:"5px solid #CCC",paddingLeft:5,marginBottom:5})},_react.default.createElement(_EnhancedSafeMarkdown.default,{markdown:section.text,expandableImages:!0})))),section.scriptLevels.length>0&&_react.default.createElement("div",{style:styles.progression},_react.default.createElement(_ProgressionDetails.default,{section})),_react.default.createElement("div",{className:"activity-section-text"},section.tips.map((function(tip,index){return _react.default.createElement(_LessonTip.default,{key:"tip-".concat(index),tip})}))))},ActivitySection}(_react.Component),"propTypes",{section:_lessonPlanShapes.activitySectionShape});var styles={activitySection:{display:"flex",flexDirection:"row",width:"100%"},tipIcons:{display:"flex",flexDirection:"column",width:20,padding:5,alignItems:"center"},tips:{display:"flex",flexDirection:"column"},remarks:{marginLeft:5,fontStyle:"italic"},remarksHeader:{marginTop:0},textAndProgression:{display:"flex",flexDirection:"column",width:"100%"},progression:{marginBottom:5}};module.exports=exports.default},"./src/templates/lessonOverview/activities/LessonTip.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tipTypes=exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var tipTypes=exports.tipTypes={teachingTip:{displayName:_locale.default.teachingTip(),icon:"lightbulb-o",color:_color.default.orange,backgroundColor:_color.default.lightest_orange},contentCorner:{displayName:_locale.default.contentCorner(),icon:"graduation-cap",color:_color.default.teal,backgroundColor:_color.default.lightest_teal},discussionGoal:{displayName:_locale.default.discussionGoal(),icon:"comments",color:_color.default.purple,backgroundColor:_color.default.lightest_purple},assessmentOpportunity:{displayName:_locale.default.assessmentOpportunity(),icon:"check-circle",color:_color.default.purple,backgroundColor:_color.default.lightest_purple}},LessonTip=function(_Component){function LessonTip(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",{expanded:!0}),_defineProperty(_this,"getTabStyle",(function(){var expanded=_this.state.expanded,tipColor=tipTypes[_this.props.tip.type].color,expandedColors={color:_color.default.white,backgroundColor:tipColor},collapsedColors={color:tipColor,backgroundColor:_color.default.white},defaultStyle=expanded?expandedColors:collapsedColors,hoverStyle=expanded?collapsedColors:expandedColors;return _objectSpread(_objectSpread(_objectSpread({},styles.tab),defaultStyle),{},{borderColor:tipColor,":hover":hoverStyle})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LessonTip,_Component),LessonTip.prototype.render=function render(){var _this2=this,expanded=this.state.expanded,caretIcon=expanded?"caret-up":"caret-down";return _react.default.createElement("div",{style:styles.tip},_react.default.createElement("div",{style:this.getTabStyle(),onClick:function onClick(){return _this2.setState({expanded:!expanded})},className:"unit-test-tip-tab"},_react.default.createElement(_FontAwesome.default,{icon:tipTypes[this.props.tip.type].icon,style:styles.icon}),_react.default.createElement("span",null,tipTypes[this.props.tip.type].displayName),_react.default.createElement(_FontAwesome.default,{icon:caretIcon,style:styles.caret})),expanded&&_react.default.createElement("div",{style:_objectSpread(_objectSpread(_objectSpread({},styles.box),{borderColor:tipTypes[this.props.tip.type].color}),{backgroundColor:tipTypes[this.props.tip.type].backgroundColor})},_react.default.createElement(_SafeMarkdown.default,{markdown:this.props.tip.markdown})))},LessonTip}(_react.Component);_defineProperty(LessonTip,"propTypes",{tip:_propTypes.default.object});var styles={tab:{borderStyle:"solid solid none solid",borderTopLeftRadius:10,borderTopRightRadius:10,borderWidth:1,padding:"5px 10px",width:200},box:{borderStyle:"solid",borderWidth:1,padding:10},icon:{marginLeft:7,marginRight:5},caret:{float:"right"},tip:{marginBottom:5}};exports.default=(0,_radium.default)(LessonTip)},"./src/templates/lessonOverview/activities/ProgressionDetails.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_ProgressLevelSet=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressLevelSet.jsx")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_LevelDetailsDialog=_interopRequireDefault(__webpack_require__("./src/templates/lessonOverview/activities/LevelDetailsDialog.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressionDetails=exports.default=function(_Component){function ProgressionDetails(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",{previewingLevel:null}),_defineProperty(_this,"handleBubbleClick",(function(level){_this.setState({previewingLevel:level}),_firehose.default.putRecord({study:"lesson-plan",study_group:"teacher-lesson-plan",event:"click-level-preview",data_json:JSON.stringify({scriptLevelId:level.id})},{includeUserId:!0})})),_defineProperty(_this,"convertScriptLevelForProgression",(function(scriptLevel){var subLevelsForProgression=scriptLevel.sublevels?scriptLevel.sublevels.map((function(l){return l.isSublevel=!0,l})):void 0,activeLevel=scriptLevel.levels.length>1?scriptLevel.levels.filter((function(level){return level.id===scriptLevel.activeId}))[0]:scriptLevel.levels[0];return{id:activeLevel.id,status:_sharedConstants.LevelStatus.not_tried,url:scriptLevel.url,name:_this.props.section.progressionName?_this.props.section.progressionName:activeLevel.name,kind:scriptLevel.kind,icon:activeLevel.icon,isConceptLevel:activeLevel.isConceptLevel,isUnplugged:scriptLevel.display_as_unplugged,levelNumber:scriptLevel.levelNumber,bonus:scriptLevel.bonus,level:activeLevel,sublevels:subLevelsForProgression,exampleSolutions:scriptLevel.exampleSolutions}})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressionDetails,_Component),ProgressionDetails.prototype.render=function render(){var _this2=this,section=this.props.section;return _react.default.createElement("div",null,this.state.previewingLevel&&_react.default.createElement(_LevelDetailsDialog.default,{scriptLevel:this.state.previewingLevel,handleClose:function handleClose(){return _this2.setState({previewingLevel:null})}}),_react.default.createElement("div",{style:styles.progressionBox},_react.default.createElement(_ProgressLevelSet.default,{name:section.progressionName,levels:section.scriptLevels.map((function(scriptLevel){return _this2.convertScriptLevelForProgression(scriptLevel)})),disabled:!1,selectedSectionId:null,onBubbleClick:this.handleBubbleClick})))},ProgressionDetails}(_react.Component);_defineProperty(ProgressionDetails,"propTypes",{section:_propTypes.default.object});var styles={progressionBox:{margin:"10px, 0px",padding:"0px 10px 10px 10px"},description:{marginTop:10}};module.exports=exports.default},"./src/templates/lessonOverview/lessonPlanShapes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tipShape=exports.studentLessonShape=exports.standardShape=exports.scriptLevelShape=exports.navigationLessonShape=exports.levelShape=exports.lessonShape=exports.activityShape=exports.activitySectionShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));var levelShape=exports.levelShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,icon:_propTypes.default.string,isUnplugged:_propTypes.default.bool,isConceptLevel:_propTypes.default.bool,conceptDifficulty:_propTypes.default.string,concepts:_propTypes.default.string,skin:_propTypes.default.string,videoKey:_propTypes.default.string}),scriptLevelShape=exports.scriptLevelShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,activeId:_propTypes.default.string.isRequired,levels:_propTypes.default.arrayOf(levelShape).isRequired,expand:_propTypes.default.bool,kind:_propTypes.default.string,bonus:_propTypes.default.bool,assessment:_propTypes.default.bool,challenge:_propTypes.default.bool,isViewingAsInstructorInTraining:_propTypes.default.bool}),tipShape=exports.tipShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,type:_propTypes.default.string.isRequired,markdown:_propTypes.default.string.isRequired}),activitySectionShape=exports.activitySectionShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,duration:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.oneOf([""])]),remarks:_propTypes.default.bool,progressionName:_propTypes.default.string,scriptLevels:_propTypes.default.arrayOf(scriptLevelShape).isRequired,text:_propTypes.default.string.isRequired,tips:_propTypes.default.arrayOf(tipShape).isRequired});exports.activityShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string,position:_propTypes.default.number.isRequired,duration:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.oneOf([""])]).isRequired,activitySections:_propTypes.default.arrayOf(activitySectionShape)}),exports.lessonShape=_propTypes.default.shape({unit:_propTypes.default.shape({lessonGroups:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string.isRequired,userFacing:_propTypes.default.bool.isRequired,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,link:_propTypes.default.string.isRequired})).isRequired})).isRequired}).isRequired,id:_propTypes.default.number.isRequired,position:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,duration:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,overview:_propTypes.default.string.isRequired,purpose:_propTypes.default.string.isRequired,preparation:_propTypes.default.string.isRequired,resources:_propTypes.default.object,vocabularies:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,programmingExpressions:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,objectives:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,assessmentOpportunities:_propTypes.default.string,lessonPlanPdfUrl:_propTypes.default.string,courseVersionStandardsUrl:_propTypes.default.string}),exports.studentLessonShape=_propTypes.default.shape({unit:_propTypes.default.shape({lessonGroups:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string.isRequired,userFacing:_propTypes.default.bool.isRequired,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,link:_propTypes.default.string.isRequired})).isRequired})).isRequired}).isRequired,id:_propTypes.default.number.isRequired,position:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string.isRequired,overview:_propTypes.default.string.isRequired,resources:_propTypes.default.arrayOf(_propTypes.default.object),vocabularies:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,programmingExpressions:_propTypes.default.arrayOf(_propTypes.default.object).isRequired,studentLessonPlanPdfUrl:_propTypes.default.string}),exports.navigationLessonShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,unit:_propTypes.default.shape({lessonGroups:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string.isRequired,userFacing:_propTypes.default.bool.isRequired,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,link:_propTypes.default.string.isRequired})).isRequired})).isRequired}).isRequired}),exports.standardShape=_propTypes.default.shape({frameworkName:_propTypes.default.string.isRequired,parentCategoryShortcode:_propTypes.default.string,parentCategoryDescription:_propTypes.default.string,categoryShortcode:_propTypes.default.string.isRequired,categoryDescription:_propTypes.default.string.isRequired,shortcode:_propTypes.default.string.isRequired,description:_propTypes.default.string.isRequired})},"./src/turtle/api.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _utils=__webpack_require__("./src/utils.js"),_=__webpack_require__("./node_modules/lodash/lodash.js"),ArtistAPI=function ArtistAPI(){this.log=[]};module.exports=ArtistAPI,ArtistAPI.prototype.random=function(values){return(0,_utils.randomValue)(values)},ArtistAPI.prototype.drawCircle=function(size,id){for(var i=0;i<36;i++)this.moveForward(size,id),this.turnRight(10,id)},ArtistAPI.prototype.drawSnowflake=function(type,id){var i,j,k,random_colour=function random_colour(){var colors=Blockly.FieldColour.COLOURS;return colors[Math.floor(Math.random()*colors.length)]};switch("random"===type&&(type=_.sample(["fractal","flower","spiral","line","parallelogram","square"])),type){case"fractal":for(i=0;i<8;i++){for(this.jumpForward(45,id),this.turnLeft(45,id),j=0;j<3;j++){for(k=0;k<3;k++)this.moveForward(15,id),this.moveBackward(15,id),this.turnRight(45,id);this.turnLeft(90,id),this.moveBackward(15,id),this.turnLeft(45,id)}this.turnRight(90,id)}break;case"flower":for(i=0;i<5;i++)this.drawCircle(2,id),this.drawCircle(4,id),this.turnRight(72,id);break;case"spiral":for(i=0;i<20;i++)this.drawCircle(3,id),this.moveForward(20,id),this.turnRight(18,id);break;case"line":for(i=0;i<90;i++)this.penColour(random_colour()),this.moveForward(50,id),this.moveBackward(50,id),this.turnRight(4,id);this.penColour("#FFFFFF",id);break;case"parallelogram":for(i=0;i<10;i++){for(j=0;j<2;j++)this.moveForward(50,id),this.turnRight(60,id),this.moveForward(50,id),this.turnRight(120,id);this.turnRight(36,id)}break;case"square":for(i=0;i<10;i++){for(j=0;j<4;j++)this.moveForward(50,id),this.turnRight(90,id);this.turnRight(36,id)}}},ArtistAPI.prototype.moveForward=function(distance,id){this.log.push(["FD",distance,id])},ArtistAPI.prototype.moveBackward=function(distance,id){this.log.push(["FD",-distance,id])},ArtistAPI.prototype.moveUp=function(distance,id){this.log.push(["MV",distance,0,id])},ArtistAPI.prototype.moveDown=function(distance,id){this.log.push(["MV",distance,180,id])},ArtistAPI.prototype.moveLeft=function(distance,id){this.log.push(["MV",distance,270,id])},ArtistAPI.prototype.moveRight=function(distance,id){this.log.push(["MV",distance,90,id])},ArtistAPI.prototype.jumpTo=function(position,id){this.log.push(["JT",position,id])},ArtistAPI.prototype.jumpToXY=function(x,y,id){this.log.push(["JT",[x,y],id])},ArtistAPI.prototype.moveUpRight=function(distance,id){this.log.push(["MD",distance,45,id])},ArtistAPI.prototype.moveDownRight=function(distance,id){this.log.push(["MD",distance,135,id])},ArtistAPI.prototype.moveDownLeft=function(distance,id){this.log.push(["MD",distance,225,id])},ArtistAPI.prototype.moveUpLeft=function(distance,id){this.log.push(["MD",distance,315,id])},ArtistAPI.prototype.jumpUp=function(distance,id){this.log.push(["JD",distance,0,id])},ArtistAPI.prototype.jumpDown=function(distance,id){this.log.push(["JD",distance,180,id])},ArtistAPI.prototype.jumpLeft=function(distance,id){this.log.push(["JD",distance,270,id])},ArtistAPI.prototype.jumpRight=function(distance,id){this.log.push(["JD",distance,90,id])},ArtistAPI.prototype.jumpUpRight=function(distance,id){this.log.push(["JD",distance,45,id])},ArtistAPI.prototype.jumpDownRight=function(distance,id){this.log.push(["JD",distance,135,id])},ArtistAPI.prototype.jumpDownLeft=function(distance,id){this.log.push(["JD",distance,225,id])},ArtistAPI.prototype.jumpUpLeft=function(distance,id){this.log.push(["JD",distance,315,id])},ArtistAPI.prototype.jumpForward=function(distance,id){this.log.push(["JF",distance,id])},ArtistAPI.prototype.jumpBackward=function(distance,id){this.log.push(["JF",-distance,id])},ArtistAPI.prototype.turnRight=function(angle,id){this.log.push(["RT",angle,id])},ArtistAPI.prototype.turnLeft=function(angle,id){this.log.push(["RT",-angle,id])},ArtistAPI.prototype.pointTo=function(angle,id){this.log.push(["PT",angle,id])},ArtistAPI.prototype.globalAlpha=function(alpha,id){this.log.push(["GA",alpha,id])},ArtistAPI.prototype.penUp=function(id){this.log.push(["PU",id])},ArtistAPI.prototype.penDown=function(id){this.log.push(["PD",id])},ArtistAPI.prototype.penWidth=function(width,id){this.log.push(["PW",Math.max(width,0),id])},ArtistAPI.prototype.penColour=function(colour,id){this.log.push(["PC",colour,id])},ArtistAPI.prototype.penPattern=function(pattern,id){this.log.push(["PS",pattern,id])},ArtistAPI.prototype.hideTurtle=function(id){this.log.push(["HT",id])},ArtistAPI.prototype.showTurtle=function(id){this.log.push(["ST",id])},ArtistAPI.prototype.drawShape=function(sticker,size,id){this.log.push(["shape",sticker,size,id])},ArtistAPI.prototype.drawSticker=function(sticker,size,id){this.log.push(["sticker",sticker,size,id])},ArtistAPI.prototype.setArtist=function(artist,id){this.log.push(["setArtist",artist,id])}},"./test/unit/lib/levelbuilder/lesson-editor/activitiesTestData.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.searchOptions=exports.sampleActivityForLessonWithoutLessonPlan=exports.sampleActivities=void 0;exports.sampleActivities=[{key:"activity-1",displayName:"Main Activity",position:1,duration:20,activitySections:[{key:"section-3",position:1,displayName:"Making programs",duration:10,remarks:!0,scriptLevels:[],text:"Simple text",tips:[]},{key:"section-1",position:2,displayName:"",duration:0,remarks:!1,scriptLevels:[],text:"Details about this section",tips:[{key:"tip-1",type:"teachingTip",markdown:"Teaching tip content"},{key:"tip-2",type:"discussionGoal",markdown:"Discussion Goal content"}]},{tips:[],key:"progression-1",position:3,displayName:"",duration:0,remarks:!1,text:"This progression teaches you programming!",progressionName:"Programming Progression Name",scriptLevels:[{id:"10",levels:[{name:"Level 1",id:"1",url:"levels/598/edit",icon:"fa-desktop",isUnplugged:!1,isConceptLevel:!0,skin:null,videoKey:null,concepts:"",conceptDifficulty:""}],position:1,levelNumber:1,activeId:"1",kind:"puzzle",bonus:!1,assessment:!1,challenge:!1,expand:!1},{id:"11",levels:[{name:"Level 2",id:"2",url:"/levels/598/edit",icon:"fa-desktop",isUnplugged:!1,isConceptLevel:!0,skin:null,videoKey:null,concepts:"",conceptDifficulty:""},{name:"Level 3",id:"3",url:"/levels/598/edit",icon:"fa-desktop",isUnplugged:!1,isConceptLevel:!0,skin:null,videoKey:null,concepts:"",conceptDifficulty:""}],position:2,levelNumber:2,activeId:"2",kind:"assessment",bonus:!1,assessment:!0,challenge:!1,expand:!1}]}]}],exports.sampleActivityForLessonWithoutLessonPlan={key:"activity-1",displayName:"",position:1,duration:0,activitySections:[{tips:[],key:"progression-1",position:1,displayName:"",duration:0,remarks:!1,text:"",progressionName:"Programming Progression Name",scriptLevels:[{id:"10",levels:[{name:"LevelGroup 1",id:"1",url:"levels/598/edit",icon:"fa-desktop",isUnplugged:!1,isConceptLevel:!1,skin:null,videoKey:null,concepts:"",conceptDifficulty:""}],position:1,levelNumber:1,activeId:"1",kind:"puzzle",bonus:!1,assessment:!0,challenge:!1,expand:!1}]}]},exports.searchOptions={levelOptions:[["All types",""],["Applab","Applab"],["Dancelab","Dancelab"]],scriptOptions:[["All scripts",""],["Script 1","script-1"],["Script 2","script-2"]],ownerOptions:[["Any owner",""],["Levelbuilder 1",1],["Levelbuilder 2",2]]}},"./test/util/clearTimeoutsBetweenTests.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.clearTimeoutsBetweenTests=function clearTimeoutsBetweenTests(){var timeoutList=[],intervalList=[],leftover=[],setTimeoutNative=window.setTimeout,setIntervalNative=window.setInterval,clearTimeoutNative=window.clearTimeout,clearIntervalNative=window.clearInterval;window.setTimeout=function(){var result=setTimeoutNative.apply(void 0,arguments);return timeoutList.push(result),result},window.setInterval=function(){var result=setIntervalNative.apply(void 0,arguments);return intervalList.push(result),result},window.clearTimeout=function(id){var index=timeoutList.indexOf(id);return-1!==index&&timeoutList.splice(index,1),clearTimeoutNative(id)},window.clearInterval=function(id){var index=intervalList.indexOf(id);return-1!==index&&intervalList.splice(index,1),clearIntervalNative(id)},afterEach((function(){var testName=this&&this.currentTest&&this.currentTest.fullTitle();timeoutList.forEach((function(id){testName?leftover.push("(timeout)  "+testName):(leftover.push("(timeout)  Unknown test"),console.log("clearing leftover timeout")),clearTimeoutNative(id)})),intervalList.forEach((function(id){testName?leftover.push("(interval) "+testName):(leftover.push("(interval) Unknown test"),console.log("clearing leftover interval")),clearIntervalNative(id)})),timeoutList=[],intervalList=[]})),after((function(){console.log("Leftover timeouts/intervals: "+leftover.length)}))}},"./test/util/testUtils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"allowConsoleErrors",{enumerable:!0,get:function get(){return _throwOnConsole.allowConsoleErrors}}),Object.defineProperty(exports,"allowConsoleWarnings",{enumerable:!0,get:function get(){return _throwOnConsole.allowConsoleWarnings}}),Object.defineProperty(exports,"clearTimeoutsBetweenTests",{enumerable:!0,get:function get(){return _clearTimeoutsBetweenTests.clearTimeoutsBetweenTests}}),exports.createKeyEvent=function createKeyEvent(type,keyConfig){var keyboardEvent=new Event(type);return keyboardEvent.which=keyConfig.which,keyboardEvent.keyCode=keyConfig.keyCode,keyboardEvent.altKey=keyConfig.altKey,keyboardEvent.metaKey=keyConfig.metaKey,keyboardEvent.ctrlKey=keyConfig.ctrlKey,keyboardEvent.shiftKey=keyConfig.shiftKey,keyboardEvent},exports.createMouseEvent=function createMouseEvent(type,clientX,clientY){var evt,e={bubbles:!0,cancelable:"mousemove"!==type,view:window,detail:0,screenX:void 0,screenY:void 0,clientX,clientY,ctrlKey:!1,altKey:!1,shiftKey:!1,metaKey:!1,button:0,relatedTarget:void 0};if("function"==typeof document.createEvent)(evt=document.createEvent("MouseEvents")).initMouseEvent(type,e.bubbles,e.cancelable,e.view,e.detail,e.screenX,e.screenY,e.clientX,e.clientY,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,e.button,document.body.parentNode);else if(document.createEventObject){for(var prop in evt=document.createEventObject(),e)evt[prop]=e[prop];evt.button={0:1,1:4,2:2}[evt.button]||evt.button}return evt},exports.debugMode=function debugMode(){return-1!==location.search.substring(1).split("&").indexOf("debug")},exports.dragToVisualization=function dragToVisualization(type,left,top){var element=(0,_jquery.default)("[data-element-type='"+type+"']"),screenOffset=element.offset(),mousedown=_jquery.default.Event("mousedown",{which:1,pageX:screenOffset.left,pageY:screenOffset.top});element.trigger(mousedown);var drag=_jquery.default.Event("mousemove",{pageX:(0,_jquery.default)("#visualization").offset().left+left,pageY:(0,_jquery.default)("#visualization").offset().top+top});switch((0,_jquery.default)(document).trigger(drag),type){case"BUTTON":case"TEXT_INPUT":case"TEXT_AREA":case"RADIO_BUTTON":case"LABEL":case"SLIDER":case"CHECKBOX":case"DROPDOWN":(0,_jquery.default)(".draggingParent").first().children().first().css("box-sizing","border-box")}var halfWidth=(0,_jquery.default)(".draggingParent").width()/2,drag2=_jquery.default.Event("mousemove",{pageX:(0,_jquery.default)("#visualization").offset().left+left+halfWidth,pageY:(0,_jquery.default)("#visualization").offset().top+top});(0,_jquery.default)(document).trigger(drag2);var mouseup=_jquery.default.Event("mouseup",{pageX:(0,_jquery.default)("#visualization").offset().left+left+halfWidth,pageY:(0,_jquery.default)("#visualization").offset().top+top});(0,_jquery.default)(document).trigger(mouseup)},exports.enforceDocumentBodyCleanup=function enforceDocumentBodyCleanup(_ref,runTestCases){var initialInnerHTML,_ref$checkEveryTest=_ref.checkEveryTest,checkEveryTest=void 0!==_ref$checkEveryTest&&_ref$checkEveryTest,beforeFn=checkEveryTest?beforeEach:before,afterFn=checkEveryTest?afterEach:after;describe("",(function(){beforeFn((function(){initialInnerHTML||(initialInnerHTML=document.body.innerHTML),_sinon.default.spy(document.body,"addEventListener"),_sinon.default.spy(document.body,"removeEventListener")})),afterFn((function(){if(initialInnerHTML!==document.body.innerHTML)throw new Error("Test modified document.body.innerHTML:\n\nInitial:\n"+initialInnerHTML+"\n\nAfter:\n"+document.body.innerHTML);if(document.body.addEventListener.callCount!==document.body.removeEventListener.callCount)throw new Error("Added "+document.body.addEventListener.callCount+" event listener(s) to document.body, but only removed "+document.body.removeEventListener.callCount+" listeners");document.body.addEventListener.restore(),document.body.removeEventListener.restore()})),describe("",runTestCases)}))},exports.forEveryBooleanPermutation=function forEveryBooleanPermutation(fn){for(var argCount=fn.length,numPermutations=Math.pow(2,argCount),i=0;i<numPermutations;i++)fn.apply(null,(numberOfBooleans=argCount,function zeroPadLeft(string,desiredWidth){return("0".repeat(desiredWidth)+string).slice(-desiredWidth)}(i.toString(2),numberOfBooleans).split("").map((function(x){return"1"===x}))));var numberOfBooleans},exports.generateArtistAnswer=function generateArtistAnswer(generatedCode){var api=new(__webpack_require__("./src/turtle/api.js"));return api.log=[],generatedCode(api),api.log},exports.replaceOnWindow=function replaceOnWindow(key,newValue){if(Object.prototype.hasOwnProperty.call(originalWindowValues,key))throw new Error("Can't replace 'window.".concat(key,"' - it's already been replaced."));originalWindowValues[key]=window[key],window[key]=newValue},exports.restoreOnWindow=function restoreOnWindow(key){if(!Object.prototype.hasOwnProperty.call(originalWindowValues,key))throw new Error("Can't restore 'window.".concat(key,"' - it wasn't replaced."));window[key]=originalWindowValues[key],delete originalWindowValues[key]},exports.sandboxDocumentBody=function sandboxDocumentBody(){var originalDocumentBody,runOncePerTest=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],storeBody=function storeBody(){return originalDocumentBody=document.body.innerHTML},restoreBody=function restoreBody(){return document.body.innerHTML=originalDocumentBody};runOncePerTest?(beforeEach(storeBody),afterEach(restoreBody)):(before(storeBody),after(restoreBody))},exports.setAceText=function setAceText(text){var aceEditor=window.__TestInterface.getDroplet().aceEditor;aceEditor.textInput.focus(),aceEditor.setValue(text)},exports.setExternalGlobals=function setExternalGlobals(){var beforeFunc=arguments.length>0&&void 0!==arguments[0]?arguments[0]:before,afterFunc=arguments.length>1&&void 0!==arguments[1]?arguments[1]:after;window.React=_react.default,window.dashboard=_objectSpread(_objectSpread({},window.dashboard),{},{assets,project});var sandbox=_sinon.default.createSandbox();beforeFunc((function(){sandbox.stub(project,"clearHtml"),sandbox.stub(project,"exceedsAbuseThreshold").returns(!1),sandbox.stub(project,"hasPrivacyProfanityViolation").returns(!1),sandbox.stub(project,"getCurrentId").returns("fake_id"),sandbox.stub(project,"isEditing").returns(!0),sandbox.stub(project,"getMakerAPIs").returns(!1),sandbox.stub(assets.listStore,"reset"),sandbox.stub(assets.listStore,"add").returns([]),sandbox.stub(assets.listStore,"remove").returns([]),sandbox.stub(assets.listStore,"list").returns([])})),afterFunc((function(){sandbox.restore()})),window.trackEvent=function(){}},exports.stubWindowDashboard=function stubWindowDashboard(value){var originalDashboard;before((function(){return originalDashboard=window.dashboard})),after((function(){return window.dashboard=originalDashboard})),beforeEach((function(){return window.dashboard=value}))},exports.stubWindowPegasus=function stubWindowPegasus(value){var originalPegasus;before((function(){return originalPegasus=window.pegasus})),after((function(){return window.pegasus=originalPegasus})),beforeEach((function(){return window.pegasus=value}))},Object.defineProperty(exports,"throwOnConsoleErrorsEverywhere",{enumerable:!0,get:function get(){return _throwOnConsole.throwOnConsoleErrorsEverywhere}}),Object.defineProperty(exports,"throwOnConsoleWarningsEverywhere",{enumerable:!0,get:function get(){return _throwOnConsole.throwOnConsoleWarningsEverywhere}}),exports.typeAceText=function typeAceText(text){var aceEditor=window.__TestInterface.getDroplet().aceEditor;aceEditor.textInput.focus(),aceEditor.onTextInput(text)};var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_sinon=_interopRequireDefault(__webpack_require__("./node_modules/sinon/lib/sinon.js")),_throwOnConsole=__webpack_require__("./test/util/throwOnConsole.js"),_clearTimeoutsBetweenTests=__webpack_require__("./test/util/clearTimeoutsBetweenTests.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var assets=__webpack_require__("./src/code-studio/assets.js"),project=__webpack_require__("./src/code-studio/initApp/project.js");var originalWindowValues={}},"./test/util/throwOnConsole.js":(__unused_webpack_module,exports)=>{"use strict";function throwOnConsoleEverywhere(methodName){var throwing=!0,wrappedMethod=null;return{throwEverywhere:function throwEverywhere(){beforeEach((function(){var testTitle;this.currentTest&&(testTitle=this.currentTest.title),wrappedMethod=console[methodName],console[methodName]=function(msg){var prefix=throwing?"":"[ignoring]";if(wrappedMethod.call(console,prefix,msg),throwing)throw console[methodName]=wrappedMethod,wrappedMethod=null,new Error("Call to console.".concat(methodName,' from "').concat(testTitle,'": ').concat(msg,"\n").concat(function getStack(){var stack;try{throw new Error}catch(e){stack=e.stack}return stack}()))}})),afterEach((function(){wrappedMethod&&(console[methodName]=wrappedMethod),wrappedMethod=null}))},allow:function allow(){beforeEach((function(){throwing=!1})),afterEach((function(){throwing=!0}))}}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.throwOnConsoleWarningsEverywhere=exports.throwOnConsoleErrorsEverywhere=exports.allowConsoleWarnings=exports.allowConsoleErrors=void 0;var consoleErrorFunctions=throwOnConsoleEverywhere("error"),consoleWarningFunctions=(exports.throwOnConsoleErrorsEverywhere=consoleErrorFunctions.throwEverywhere,exports.allowConsoleErrors=consoleErrorFunctions.allow,throwOnConsoleEverywhere("warn"));exports.throwOnConsoleWarningsEverywhere=consoleWarningFunctions.throwEverywhere,exports.allowConsoleWarnings=consoleWarningFunctions.allow},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/componentLibrary/typography/typography.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/css-loader/dist/runtime/getUrl.js"),_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__),___CSS_LOADER_URL_IMPORT_0___=new URL(__webpack_require__("./fonts/barlowSemiCondensed/BarlowSemiCondensed-SemiBold.ttf"),__webpack_require__.b),___CSS_LOADER_URL_IMPORT_1___=new URL(__webpack_require__("./fonts/barlowSemiCondensed/BarlowSemiCondensed-Medium.ttf"),__webpack_require__.b),___CSS_LOADER_EXPORT___=_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()),___CSS_LOADER_URL_REPLACEMENT_0___=_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___),___CSS_LOADER_URL_REPLACEMENT_1___=_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);___CSS_LOADER_EXPORT___.push([module.id,'@font-face{font-family:"Barlow Semi Condensed Semibold";font-style:normal;font-weight:600;src:url('+___CSS_LOADER_URL_REPLACEMENT_0___+') format("truetype"),local("?")}@font-face{font-family:"Barlow Semi Condensed Medium";font-style:normal;font-weight:500;src:url('+___CSS_LOADER_URL_REPLACEMENT_1___+') format("truetype"),local("?")}html{font-size:100%}.ox01LszGG04aDD7QUbJF{color:#292f36;margin:0 0 .5em 0;font-family:"Barlow Semi Condensed Semibold",sans-serif;font-size:3rem;line-height:1.16}.MWdGPEUtv3_cMEG3jyp4{color:#292f36;margin:0 0 .5em 0;font-family:"Barlow Semi Condensed Semibold",sans-serif;font-size:2.125rem;line-height:1.24}.c1BgmtfeL7LEPYK8S46L{color:#292f36;margin:0 0 .5em 0;font-family:"Barlow Semi Condensed Semibold",sans-serif;font-size:1.75rem;line-height:1.28}.Rpgv_o9Qx_N31He_klT3{color:#292f36;margin:0 0 .5em 0;font-family:"Barlow Semi Condensed Medium",sans-serif;font-size:1.5rem;line-height:1.32}.Mi2VJ2nn7woBU14Tq7Oj{color:#292f36;margin:0 0 .5em 0;font-family:"Metropolis",sans-serif;font-weight:600;font-style:normal;font-size:1.25rem;line-height:1.4}.NPhzWa5l5OXTc33Qf7d4{color:#292f36;margin:0 0 .5em 0;font-family:"Metropolis",sans-serif;font-weight:600;font-style:normal;font-size:1rem;line-height:1.48}._xvfJnTyspUbiGH8uqNk{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;color:#292f36;margin-bottom:1em;font-size:1.25rem;line-height:1.4}.Jqn_2_GWo4_UgA8GYGK2{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;color:#292f36;margin-bottom:1em;font-size:1rem;line-height:1.48}.mgS1ZvrnJWRsIve2VRVl{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;color:#292f36;margin-bottom:1em;font-size:.875rem;line-height:1.54}.iHLOFC7TOVenbq6Q7FpE{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;color:#292f36;margin-bottom:1em;font-size:.75rem;line-height:1.64}.yJSiSVIE8LZ7ySb89I83{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;color:#292f36;margin-bottom:1em;font-family:"Metropolis",sans-serif;font-weight:600;font-style:normal;text-transform:uppercase;letter-spacing:.04rem;font-size:.875rem;line-height:1.6}._8ooMcBUKB5yKjWgWvbmn{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;color:#292f36;margin-bottom:1em;font-family:"Metropolis",sans-serif;font-weight:600;font-style:normal;text-transform:uppercase;letter-spacing:.04rem;font-size:.75rem;line-height:1.64}.CySV0rXEo2VhmvrH0nGe{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;color:#292f36;margin-bottom:1em;font-family:"Metropolis",sans-serif;font-weight:600;font-style:normal;text-transform:uppercase;letter-spacing:.04rem;font-size:.625rem;line-height:1.76}strong,.UydEnv8nCgsy1HD5zs3A{font-family:"Metropolis",sans-serif;font-weight:600;font-style:normal}.zVyLzpgeTbgZR7iL7W3e{font-family:"Metropolis",sans-serif;font-weight:700;font-style:normal}em,.iy9JXp90GbB2a3R6KioK{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;font-style:italic}strong em,em strong,.iy9JXp90GbB2a3R6KioK .UydEnv8nCgsy1HD5zs3A,.UydEnv8nCgsy1HD5zs3A .iy9JXp90GbB2a3R6KioK{font-family:"Metropolis",sans-serif;font-weight:600;font-style:normal;font-style:italic}.iy9JXp90GbB2a3R6KioK .zVyLzpgeTbgZR7iL7W3e,.zVyLzpgeTbgZR7iL7W3e .iy9JXp90GbB2a3R6KioK,em .zVyLzpgeTbgZR7iL7W3e,.zVyLzpgeTbgZR7iL7W3e em{font-family:"Metropolis",sans-serif;font-weight:700;font-style:normal;font-style:italic}figcaption,.D9nU76XUYzpmxX_BA_oI{font-family:"Metropolis",sans-serif;font-weight:400;font-style:normal;font-size:.75rem;margin:.5em 0 1em;line-height:1.64}',"",{version:3,sources:["webpack://./src/componentLibrary/typography/typography.module.scss","webpack://./../shared/css/color.scss","webpack://./../shared/css/font.scss"],names:[],mappings:"AASA,WACE,4CAAA,CACA,iBAAA,CACA,eAAA,CACA,yEACE,CAIJ,WACE,0CAAA,CACA,iBAAA,CACA,eAAA,CACA,yEAAA,CAGF,KACE,cAAA,CAuMF,sBAvIE,aC0Fa,CDzFb,iBAAA,CAKA,uDEyB6B,CFxB7B,cAAA,CACA,gBAAA,CAgIF,sBAxIE,aC0Fa,CDzFb,iBAAA,CAYA,uDEkB6B,CFjB7B,kBAAA,CACA,gBAAA,CA0HF,sBAzIE,aC0Fa,CDzFb,iBAAA,CAmBA,uDEW6B,CFV7B,iBAAA,CACA,gBAAA,CAoHF,sBA1IE,aC0Fa,CDzFb,iBAAA,CA0BA,qDEK2B,CFJ3B,gBAAA,CACA,gBAAA,CA8GF,sBA3IE,aC0Fa,CDzFb,iBAAA,CEbA,mCAtEgB,CAuEhB,eA9DsB,CA+DtB,iBAAA,CF6CA,iBAAA,CACA,eAAA,CAwGF,sBA5IE,aC0Fa,CDzFb,iBAAA,CEbA,mCAtEgB,CAuEhB,eA9DsB,CA+DtB,iBAAA,CFoDA,cAAA,CACA,gBAAA,CAqGF,sBElLE,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CFiFA,aCyCa,CDxCb,iBAAA,CAKA,iBAAA,CACA,eAAA,CA0FF,sBEpLE,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CFiFA,aCyCa,CDxCb,iBAAA,CAWA,cAAA,CACA,gBAAA,CAuFF,sBEvLE,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CFiFA,aCyCa,CDxCb,iBAAA,CAiBA,iBAAA,CACA,gBAAA,CAmFF,sBEzLE,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CFiFA,aCyCa,CDxCb,iBAAA,CAuBA,gBAAA,CACA,gBAAA,CAkFF,sBE9LE,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CFiFA,aCyCa,CDxCb,iBAAA,CE9DA,mCAtEgB,CAuEhB,eA9DsB,CA+DtB,iBAAA,CF2FA,wBAAA,CACA,qBAAA,CAKA,iBAAA,CACA,eAAA,CAsEF,uBEhME,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CFiFA,aCyCa,CDxCb,iBAAA,CE9DA,mCAtEgB,CAuEhB,eA9DsB,CA+DtB,iBAAA,CF2FA,wBAAA,CACA,qBAAA,CAWA,gBAAA,CACA,gBAAA,CAkEF,sBElME,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CFiFA,aCyCa,CDxCb,iBAAA,CE9DA,mCAtEgB,CAuEhB,eA9DsB,CA+DtB,iBAAA,CF2FA,wBAAA,CACA,qBAAA,CAiBA,iBAAA,CACA,gBAAA,CA+DF,6BE/KE,mCAtEgB,CAuEhB,eA9DsB,CA+DtB,iBAAA,CFiLF,sBExKE,mCAjFgB,CAkFhB,eAxEiB,CAyEjB,iBAAA,CF0KF,yBE7ME,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CAKA,iBAAA,CFyMF,4GE1LE,mCAtEgB,CAuEhB,eA9DsB,CA+DtB,iBAAA,CAKA,iBAAA,CF0LF,0IEtLE,mCAjFgB,CAkFhB,eAxEiB,CAyEjB,iBAAA,CAKA,iBAAA,CFwLF,iCEhOE,mCAhDgB,CAiDhB,eA1CoB,CA2CpB,iBAAA,CF+JA,gBAAA,CACA,iBAAA,CACA,gBAAA",sourcesContent:['@import "color", "font";\n\n/* This file is being copied and adopted to shared/css/typography.scss\n   Updating styles in this file will require a manual sync of the that file.\n*/\n\n// TODO: [DSCO-64] (https://codedotorg.atlassian.net/browse/DSCO-64)\n//  Once we move Typography to DSCO_ - make sure we delete apps/fonts/ folder,\n//  since that folder is only needed for scss modules\n@font-face {\n  font-family: "Barlow Semi Condensed Semibold";\n  font-style: normal;\n  font-weight: 600;\n  src:\n    url("/fonts/barlowSemiCondensed/BarlowSemiCondensed-SemiBold.ttf") format("truetype"),\n    local("?");\n}\n\n@font-face {\n  font-family: "Barlow Semi Condensed Medium";\n  font-style: normal;\n  font-weight: 500;\n  src: url("/fonts/barlowSemiCondensed/BarlowSemiCondensed-Medium.ttf") format("truetype"), local("?");\n}\n\nhtml {\n  font-size: 100%;\n}\n\n// This stylesheet can be imported to maintain typographic\n// consistency across Dashboard and Pegasus sites.\n\n// Includes heading, paragraph, and caption styles.\n\n// We\'re using mixins to style semantic tags and also creating\n// identical classes for potential use on other elements if needed.\n\n// ----------------------------------------\n// v 2.0.1\n// ----------------------------------------\n\n// Sizes\n// Most of the typography elements have a set of different sizes (defined by "-one", "-two", "-three", "-four" suffixes).\n// (Not applicable to Headings and elements without those suffixes)\n// Common rule for all of those sizes are following:\n// 1. "-one" is bigger size.\n// 2. "-two" is a DEFAULT size, used in most of cases.\n// 3. "-three" is smaller size.\n// 4. "-four" is the smallest size.\n\n// Values\n// font-size uses rem\n// - works when the root font-size is 100% which uses the\n// browser default font-size of 16px (3rem = 16 x 3 = 48px)\n\n// margin uses em\n// - sets the margin relative to the parent element rather than the root\n// example:\n//  Imagine that we have h1 with font-size: 3rem (48px) and we want to set margin-bottom to it.\n//    - Setting margin-bottom to 0.5rem == 8px (html.font_size * 0.5) >>> rem is relative to root element (html tag) which is 16px\n//    - Setting margin-bottom to 0.5em == 24px (h1.font-size * 0.5) >>> em is relative to element itself or it\'s parent.\n//      Our h1 element has a font-size of 3rem (48px), so 0.5em will be equal to 48 * 0.5 = 24px margin-bottom.\n\n// Read more about rem vs em:\n// https://www.digitalocean.com/community/tutorials/css-rem-vs-em-units\n\n// line-height uses unitless numbers\n// - this multiplies the line-height by the element\'s font-size\n// and is the preferred way to set line-height according to Mozilla\n// https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\n// ----------------------------------------\n\n// Heading styles\n// Heading mixins are used to maintain accessible heading hierarchy\n// when design calls for a different style (semantic h3, h5 styling).\n\n// Use .heading-[xx] classes on single elements in the markup.\n// This is an h3 heading that will look like an h5.\n// - example: h3.heading-sm\n\n// Use @include [mixin-name] in stylesheets for widespread use.\n\n/* â€” example: all h3s in a ul need to look like h5s\n    ul.icon-list {\n      h3 { @include heading-sm }\n    }\n*/\n\n@mixin heading-common {\n  color: $neutral-dark;\n  margin: 0 0 0.5em 0;\n}\n\n@mixin heading-xxl {\n  @include heading-common;\n  font-family: $barlowSemiCondensed-semibold;\n  font-size: 3rem;\n  line-height: 1.16;\n}\n\n@mixin heading-xl {\n  @include heading-common;\n  font-family: $barlowSemiCondensed-semibold;\n  font-size: 2.125rem;\n  line-height: 1.24;\n}\n\n@mixin heading-lg {\n  @include heading-common;\n  font-family: $barlowSemiCondensed-semibold;\n  font-size: 1.75rem;\n  line-height: 1.28;\n}\n\n@mixin heading-md {\n  @include heading-common;\n  font-family: $barlowSemiCondensed-medium;\n  font-size: 1.5rem;\n  line-height: 1.32;\n}\n\n@mixin heading-sm {\n  @include heading-common;\n  @include main-font-semi-bold;\n  font-size: 1.25rem;\n  line-height: 1.40;\n}\n\n@mixin heading-xs {\n  @include heading-common;\n  @include main-font-semi-bold;\n  font-size: 1rem;\n  line-height: 1.48;\n}\n\n// Paragraph styles\n@mixin paragraph-common {\n  @include main-font-regular;\n  color: $neutral-dark;\n  margin-bottom: 1em;\n}\n\n@mixin body-one {\n  @include paragraph-common;\n  font-size: 1.25rem;\n  line-height: 1.4;\n}\n\n@mixin body-two {\n  @include paragraph-common;\n  font-size: 1rem;\n  line-height: 1.48;\n}\n\n@mixin body-three {\n  @include paragraph-common;\n  font-size: 0.875rem;\n  line-height: 1.54;\n}\n\n@mixin body-four {\n  @include paragraph-common;\n  font-size: 0.75rem;\n  line-height: 1.64;\n}\n\n// Overline styles\n@mixin overline-common {\n  @include paragraph-common;\n  @include main-font-semi-bold;\n  text-transform: uppercase;\n  letter-spacing: 0.04rem;\n}\n\n@mixin overline-one {\n  @include overline-common;\n  font-size: 0.875rem;\n  line-height: 1.6;\n}\n\n@mixin overline-two {\n  @include overline-common;\n  font-size: 0.75rem;\n  line-height: 1.64;\n}\n\n@mixin overline-three {\n  @include overline-common;\n  font-size: 0.625rem;\n  line-height: 1.76;\n}\n\n// Strong and Em styles\n@mixin strong {\n  @include main-font-semi-bold;\n}\n\n@mixin extra-strong {\n  @include main-font-bold;\n}\n\n@mixin em {\n  @include main-font-regular-italic;\n}\n\n@mixin strong-em {\n  @include main-font-semi-bold-italic;\n}\n\n@mixin extra-strong-em {\n  @include main-font-bold-italic;\n}\n\n// Caption styles\n@mixin figcaption {\n  @include main-font-regular;\n  font-size: 0.75rem;\n  margin: 0.5em 0 1em;\n  line-height: 1.64;\n}\n\n// ----------------------------------------\n\n// Headings\n.heading-xxl { @include heading-xxl; }\n.heading-xl { @include heading-xl; }\n.heading-lg { @include heading-lg; }\n.heading-md { @include heading-md; }\n.heading-sm { @include heading-sm; }\n.heading-xs { @include heading-xs; }\n\n// Paragraphs\n// Use on larger paragraphs\n.body-one { @include body-one; }\n// Use on default paragraphs\n.body-two { @include body-two; }\n// Use on course block descriptions or anywhere\n// else that needs smaller paragraph text\n.body-three { @include body-three; }\n// Use on smallest paragraph text\n.body-four { @include body-four; }\n\n// Overlines\n// Use on small uppercase labels or descriptions\n// (Bigger size)\n.overline-one { @include overline-one; }\n// (Default size)\n.overline-two { @include overline-two; }\n// (Smaller size)\n.overline-three { @include overline-three; }\n\n// Use in paragraphs to bold text\nstrong,\n.strong { @include strong; }\n// Use in paragraphs to italicize text\n\n.extra-strong {\n  @include extra-strong;\n}\n\nem,\n.em { @include em; }\n\nstrong em,\nem strong,\n.em .strong,\n.strong .em {\n  @include strong-em;\n}\n\n.em .extra-strong,\n.extra-strong .em,\nem .extra-strong,\n.extra-strong em {\n  @include extra-strong-em;\n}\n\n// Captions\n// Use on figcaption elements that accompany images or videos\nfigcaption,\n.figcaption { @include figcaption; }\n',"// colors from https://www.dropbox.com/s/ycjiwt8vxlmv2ih/Code.org_stylesheet_v2_09.05.13.pdf\n\n// Please keep this file simple; it should only contain color definitions\n//   and aliases.  Variables defined in this file are exported to\n//   apps/src/util/color.js during the apps build process.\n\n$black: #000;\n$background_black: #121416;\n$dark_gray: #2D3139;\n$darkest_gray: #292F36;\n$dark_slate_gray: #282c34;\n$darkest_slate_gray: #25292d;\n$dark_charcoal: #4d575f;\n$charcoal: #5b6770;\n$light_gray: #949ca2;\n$lighter_gray: #c6cacd;\n$lightest_gray: #e7e8ea;\n$background_gray: #f2f2f2;\n$dimgray: #696969;\n$white: #fff;\n$default_blue: #3670b3;\n\n$dark_teal: #0094a3;\n$teal: #0093a4;\n$applab_button_teal: #1abc9c;\n$light_teal: #59cad3;\n$lightish_teal: #80d6de;\n$lighter_teal: #a6e3e8;\n$lightest_teal: #d9f3f5;\n$ai_rubric_cyan: #3cfff8;\n\n$purple: #8c52ba;\n$light_purple: #a69bc1;\n$lighter_purple: #cfc9de;\n$lightest_purple: #ebe8f1;\n\n$cyan: #0094ca;\n$light_cyan: #59b9dc;\n$lighter_cyan: #a6daed;\n$lightest_cyan: #d9eff7;\n$almost_white_cyan: #f5fcff;\n\n$orange: #ffa400;\n$light_orange: #ffc459;\n$lighter_orange: #ffe0a6;\n$lightest_orange: #fff2d9;\n$dark_orange: #ff8600;\n\n$green: #b9bf15;\n$light_green: #d1d567;\n$lighter_green: #e7e9ad;\n$lightest_green: #f5f5dc;\n$highlight_green: #8afc9b;\n\n$yellow: #ffb81d;\n$light_yellow: #ffdb74;\n$lighter_yellow: #ffebb5;\n$lightest_yellow: #fff7df;\n\n$goldenrod: #daa520;\n\n$header_text: $white;\n$bkgnd_color: $teal;\n$inset_color: $lighter_gray;\n$dark_color: $purple;\n$hdr_color: $purple;\n\n// Some extra colors.\n$red: #c00;\n$lightest_red: #fcc;\n$dark_red: #d62911;\n$realgreen: #008000;\n$realyellow: #ff0;\n$mustardyellow: #efcd1c;\n$twitter_blue: #00aced;\n$facebook_blue: #3b5998;\n$linkedin_blue: #0077B5;\n$dark_blue: #00647f;\n$blockly_flyout_gray: #ddd;\n$default_text: #333;\n$border_gray: #bbb;\n$border_light_gray: #d8d8d8;\n$table_header: #ececec;\n$table_light_row: #fcfcfc;\n$table_dark_row: #f4f4f4;\n\n// Progress colors.\n$level_submitted: $purple;\n$level_perfect: rgb(14, 190, 14);\n$level_passed: rgb(159, 212, 159);\n$level_attempted: $realyellow;\n$level_not_tried: #fefefe;\n$level_current: $orange;\n$level_review_rejected: $red;\n$level_review_accepted: rgb(11, 142, 11); // TODO: $level_passed;\n$assessment: $cyan;\n$workspace_running_background: #e5e5e5;\n\n// Experimental Sprite Lab validation colors.\n$dark_purple: #682A77;\n$bright_green: #0ebe0e;\n$neon_pink: #e9118f;\n\n// Links (used in apps).\n$link_color: #0596ce;\n\n// Shadow.\n$shadow: rgba(0, 0, 0, 0.3);\n\n// Colors that are taken from bootstrap, and not necessarily part of our core theme.\n$bootstrap_button_blue: #337ab7;\n$bootstrap_button_red: #d9534f;\n$bootstrap_error_background: #f2dede;\n$bootstrap_error_text: #b94a48;\n$bootstrap_v3_error_text: #a94442;\n$bootstrap_error_border: #ebccd1;\n$bootstrap_warning_background: #fcf8e3;\n$bootstrap_warning_text: #c09853;\n$bootstrap_warning_border: #faebcc;\n$bootstrap_border_color: #cccccc;\n$bootstrap_success_background: #dff0d8;\n$bootstrap_success_text: #468847;\n$bootstrap_success_border: #d6e9c6;\n\n// Colors taken from droplet, not part of our core theme.\n$droplet_light_green: #d3e965;\n$droplet_blue: #64b5f6;\n$droplet_bright_blue: #19c3e1;\n$droplet_yellow: #fff176;\n$droplet_orange: #ffb74d;\n$droplet_red: #f78183;\n$droplet_cyan: #4dd0e1;\n$droplet_pink: #f57ac6;\n$droplet_purple: #bb77c7;\n$droplet_green: #68d995;\n$droplet_white: $white;\n\n// Oceans: deep blue background.\n$oceans_deep_blue: rgb(2, 0, 28);\n\n// Dark theme background (used by default in Music Lab)\n$dark_black: #121212;\n\n// ===----===----===---- Phase 1 Colors: ----===----===----===\n// Brand\n$brand_primary_light: #E0F8F9;\n$brand_primary_default: #009EB0;\n$brand_primary_dark: #007785;\n\n$brand_secondary_light: #E0D1EC;\n$brand_secondary_default: #8C52BA;\n$brand_secondary_dark: #6C468A;\n\n$brand_accent_default: #ED6060;\n\n$brand_teal_5: #DFF2F4;\n\n//Product\n$product_affirmative_default: #3EA33E;\n\n$product_negative_light: #FDEBE9;\n$product_negative_default: #E5311A;\n$product_negative_dark: #AA2513;\n\n$product_caution_default: #F9CB28;\n\n$product_information_default: #007ACC;\n\n// Neutral\n$neutral_white: #FFFFFF;\n$neutral_light: #F7F8FA;\n$neutral_dark10: #EAECEF;\n$neutral_dark20: #D1D4D8;\n$neutral_dark30: #BEC2C7;\n$neutral_dark40: #ABB0B6;\n$neutral_dark50: #989EA5;\n$neutral_dark60: #858C94;\n$neutral_dark70: #727A83;\n$neutral_dark80: #5F6872;\n$neutral_dark90: #4C5661;\n$neutral_dark: #292F36;\n\n//Brands\n$google_brand_color: #0F9D58;\n$microsoft_brand_color: #FFB900;\n$facebook_brand_color: #3B5998;\n$clever_brand_color: #1464FF;\n\n// ===----===----===---- Design system colors: ----===----===----===\n\n$light_primary_100: #E0F8F9;\n$light_primary_500: #0093A4;\n$light_primary_700: #007785;\n\n$light_secondary_100: #E2D4EE;\n$light_secondary_500: #8C52BA;\n$light_secondary_700: #6C468A;\n\n$light_gray_50: #F7F8FA;\n$light_gray_100: #EAECEF;\n$light_gray_200: #D1D4D8;\n$light_gray_300: #BEC2C7;\n$light_gray_400: #ABB0B6;\n$light_gray_500: #989EA5;\n$light_gray_600: #858C94;\n$light_gray_700: #727A83;\n$light_gray_800: #5F6872;\n$light_gray_900: #4C5661;\n$light_gray_950: #394450;\n\n$light_affirmative_100: #E2F1E2;\n$light_affirmative_500: #3EA33E;\n$light_affirmative_700: #2D742D;\n\n$light_negative_100: #FBE0DD;\n$light_negative_500: #E5311A;\n$light_negative_700: #B24949;\n\n$light_caution_100: #FEF7DF;\n$light_caution_500: #F9CB28;\n$light_caution_700: #C7A220;\n\n$light_accent_100: #FAD7D7;\n$light_accent_500: #ED6060;\n$light_accent_700: #D84C4C;\n\n$light_aqua_100: #CEFFFD;\n$light_aqua_500: #3CFFF8;\n$light_aqua_700: #30CCC6;\n\n$light_orange_100: #FFEDCC;\n$light_orange_500: #FFA400;\n$light_orange_700: #CC8300;\n\n$light_info_100: #DCEFFB;\n$light_info_500: #1892E3;\n$light_info_700: #1375B6;\n\n$light_white: #FFFFFF;\n\n$light_black: #292F36;\n\n$light_black_opacity_90: rgba(41, 47, 54, 0.90);\n$light_black_opacity-80: rgba(41, 47, 54, 0.80);\n$light_black_opacity-70: rgba(41, 47, 54, 0.70);\n$light_black_opacity-60: rgba(41, 47, 54, 0.60);\n$light_black_opacity-50: rgba(41, 47, 54, 0.50);\n$light_black_opacity-40: rgba(41, 47, 54, 0.40);\n$light_black_opacity-30: rgba(41, 47, 54, 0.30);\n$light_black_opacity-20: rgba(41, 47, 54, 0.20);\n$light_black_opacity-10: rgba(41, 47, 54, 0.10);\n","// Common site-wide fonts, put here for easy access from all scss files\n\n// Please note (!): use only single quotes (' ') for strings (!) to allow our custom converter to work properly.\n// This file is being transpiled to js object.\n// (So it can be used in jsx/tsx files for inline styles. This is made mostly for legacy.\n// Try to avoid use of inline styles if you're creating new component).\n// Keeping that in mind -\n\n$metropolis-font: 'Metropolis', sans-serif;\n\n$main-font: $metropolis-font;\n\n$thin-font-weight: 100;\n$extra-light-font-weight: 200;\n$light-font-weight: 300;\n$regular-font-weight: 400;\n$medium-font-weight: 500;\n$semi-bold-font-weight: 600;\n$bold-font-weight: 700;\n$extra-bold-font-weight: 800;\n$black-font-weight: 900;\n\n@mixin main-font-thin {\n  font-family: $main-font;\n  font-weight: $thin-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-thin-italic {\n  @include main-font-thin;\n  font-style: italic;\n}\n\n@mixin main-font-extra-light {\n  font-family: $main-font;\n  font-weight: $extra-light-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-extra-light-italic {\n  @include main-font-extra-light;\n  font-style: italic;\n}\n\n@mixin main-font-light {\n  font-family: $main-font;\n  font-weight: $light-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-light-italic {\n  @include main-font-light;\n  font-style: italic;\n}\n\n@mixin main-font-regular {\n  font-family: $main-font;\n  font-weight: $regular-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-regular-italic {\n  @include main-font-regular;\n  font-style: italic;\n}\n\n@mixin main-font-medium {\n  font-family: $main-font;\n  font-weight: $medium-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-medium-italic {\n  @include main-font-medium;\n  font-style: italic;\n}\n\n@mixin main-font-semi-bold {\n  font-family: $main-font;\n  font-weight: $semi-bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-semi-bold-italic {\n  @include main-font-semi-bold;\n  font-style: italic;\n}\n\n@mixin main-font-bold {\n  font-family: $main-font;\n  font-weight: $bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-bold-italic {\n  @include main-font-bold;\n  font-style: italic;\n}\n\n@mixin main-font-extra-bold {\n  font-family: $main-font;\n  font-weight: $extra-bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-extra-bold-italic {\n  @include main-font-extra-bold;\n  font-style: italic;\n}\n\n@mixin main-font-black {\n  font-family: $main-font;\n  font-weight: $black-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-black-italic {\n  @include main-font-black;\n  font-style: italic;\n}\n\n$barlowSemiCondensed-semibold: 'Barlow Semi Condensed Semibold', sans-serif;\n$barlowSemiCondensed-medium: 'Barlow Semi Condensed Medium', sans-serif;\n\n$code-font: 'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace;\n\n/*\n   If you are changing the location of these files,\n   see the readme in this directory for more detail on manual steps to take when uploading new files.\n */\n$font-awesome-core-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css';\n$font-awesome-brands-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css';\n$font-awesome-solid-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css';\n$font-awesome-regular-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css';\n$font-awesome-v4-fonts-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css';\n$font-awesome-v4-shims-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css';\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"heading-xxl":"ox01LszGG04aDD7QUbJF","heading-xl":"MWdGPEUtv3_cMEG3jyp4","heading-lg":"c1BgmtfeL7LEPYK8S46L","heading-md":"Rpgv_o9Qx_N31He_klT3","heading-sm":"Mi2VJ2nn7woBU14Tq7Oj","heading-xs":"NPhzWa5l5OXTc33Qf7d4","body-one":"_xvfJnTyspUbiGH8uqNk","body-two":"Jqn_2_GWo4_UgA8GYGK2","body-three":"mgS1ZvrnJWRsIve2VRVl","body-four":"iHLOFC7TOVenbq6Q7FpE","overline-one":"yJSiSVIE8LZ7ySb89I83","overline-two":"_8ooMcBUKB5yKjWgWvbmn","overline-three":"CySV0rXEo2VhmvrH0nGe",strong:"UydEnv8nCgsy1HD5zs3A","extra-strong":"zVyLzpgeTbgZR7iL7W3e",em:"iy9JXp90GbB2a3R6KioK",figcaption:"D9nU76XUYzpmxX_BA_oI"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/storage/dataBrowser/data-styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'.uYItL77TWcU0wtVbhTfw{height:45px}.hzi4zAQLtOeALKbcN1HF{padding:10px;border:1px solid gray;font-size:14px;max-width:350px;overflow:hidden}.hzi4zAQLtOeALKbcN1HF.pEv7nG0FjvBfyWDiVoGw{background-color:#d9f3f5}.hzi4zAQLtOeALKbcN1HF.QFx0DJcXsNZPlS6OSqkP{background-color:#d9f3f5;width:142px}.QJTdjytrQErkwBhyZuMb{background-color:#0093a4;border:1px solid gray;max-width:350px;padding:6px 10px;white-space:nowrap}.aL4qZazwqcLIPHl9fJFo{font-family:"Metropolis",sans-serif;font-weight:700;font-style:normal;color:#8c52ba;cursor:pointer}.vhcuGCSnanVtqh5MHMXu{display:inline-block;font-size:14px;line-height:20px;margin:0;padding:4px 12px;text-align:center;vertical-align:middle}.zehBIP29hpzIXp82knQ8{background-color:#fff;color:#000}.amzC_L72ues1STeirgwv{margin-right:10px;min-width:60px}.ymtkCADAvOyMnTc9TWB0{background-color:#d9534f;color:#fff}.Y34eEaDAmZWf41x33l5I{background-color:#337ab7;color:#fff}.aN85sU65aHSMhw7cqksL{margin-right:10px;min-width:60px}.k6pRSfcUhlMOgNeyKeSi{margin-left:5px;background-color:#f2f2f2}.IjgyOPtpufaXlzS3sObU{width:calc(100% - 14px);height:20px;border:1px solid gray;border-radius:5px;padding:4px 6px}',"",{version:3,sources:["webpack://./src/storage/dataBrowser/data-styles.module.scss","webpack://./../shared/css/color.scss","webpack://./../shared/css/font.scss"],names:[],mappings:"AAWA,sBACE,WANW,CASb,sBACE,YATa,CAUb,qBAAA,CACA,cAAA,CACA,eAVe,CAWf,eAAA,CAEA,2CACE,wBCKY,CDFd,2CACE,wBCCY,CAAA,WDpBS,CAwBzB,sBACE,wBCVK,CDWL,qBAAA,CACA,eA1Be,CA2Bf,gBAAA,CACA,kBAAA,CAGF,sBEiDE,mCAjFgB,CAkFhB,eAxEiB,CAyEjB,iBAAA,CFjDA,aCXO,CDYP,cAAA,CAGF,sBACE,oBAAA,CACA,cAAA,CACA,gBAAA,CACA,QAAA,CACA,gBAAA,CACA,iBAAA,CACA,qBAAA,CAEA,sBACE,qBAAA,CACA,UAAA,CAEA,sBACE,iBAAA,CACA,cAAA,CAIJ,sBACE,wBC6CmB,CD5CnB,UAAA,CAGF,sBACE,wBCuCoB,CDtCpB,UAAA,CAEA,sBACE,iBAAA,CACA,cAAA,CAIJ,sBACE,eAAA,CACA,wBCjEc,CDqElB,sBACE,uBAAA,CACA,WAAA,CACA,qBAAA,CACA,iBAAA,CACA,eAAA",sourcesContent:["/**\n * @file Styles shared by various react components in the applab data browser.\n */\n\n@import 'color', 'font';\n\n$row-height: 45px;\n$cell-padding: 10px;\n$edit-button-cell-width: 142px;\n$max-cell-width: 350px;\n\n.row {\n  height: $row-height;\n}\n\n.cell {\n  padding: $cell-padding;\n  border: 1px solid gray;\n  font-size: 14px;\n  max-width: $max-cell-width;\n  overflow: hidden;\n\n  &.addButton {\n    background-color: $lightest_teal;\n  }\n\n  &.editButton {\n    background-color: $lightest_teal;\n    width: $edit-button-cell-width;\n  }\n}\n\n.headerCell {\n  background-color: $teal;\n  border: 1px solid gray;\n  max-width: $max-cell-width;\n  padding: 6px 10px;\n  white-space: nowrap;\n}\n\n.link {\n  @include main-font-bold;\n  color: $purple;\n  cursor: pointer;\n}\n\n.button {\n  display: inline-block;\n  font-size: 14px;\n  line-height: 20px;\n  margin: 0;\n  padding: 4px 12px;\n  text-align: center;\n  vertical-align: middle;\n\n  &White {\n    background-color: white;\n    color: black;\n\n    &Edit {\n      margin-right: 10px;\n      min-width: 60px;\n    }\n  }\n\n  &Red {\n    background-color: $bootstrap_button_red;\n    color: white;\n  }\n\n  &Blue {\n    background-color: $bootstrap_button_blue;\n    color: white;\n\n    &Save {\n      margin-right: 10px;\n      min-width: 60px;\n    }\n  }\n\n  &Gray {\n    margin-left: 5px;\n    background-color: $background_gray;\n  }\n}\n\n.input {\n  width: calc(100% - 14px);\n  height: 20px;\n  border: 1px solid gray;\n  border-radius: 5px;\n  padding: 4px 6px;\n}\n","// colors from https://www.dropbox.com/s/ycjiwt8vxlmv2ih/Code.org_stylesheet_v2_09.05.13.pdf\n\n// Please keep this file simple; it should only contain color definitions\n//   and aliases.  Variables defined in this file are exported to\n//   apps/src/util/color.js during the apps build process.\n\n$black: #000;\n$background_black: #121416;\n$dark_gray: #2D3139;\n$darkest_gray: #292F36;\n$dark_slate_gray: #282c34;\n$darkest_slate_gray: #25292d;\n$dark_charcoal: #4d575f;\n$charcoal: #5b6770;\n$light_gray: #949ca2;\n$lighter_gray: #c6cacd;\n$lightest_gray: #e7e8ea;\n$background_gray: #f2f2f2;\n$dimgray: #696969;\n$white: #fff;\n$default_blue: #3670b3;\n\n$dark_teal: #0094a3;\n$teal: #0093a4;\n$applab_button_teal: #1abc9c;\n$light_teal: #59cad3;\n$lightish_teal: #80d6de;\n$lighter_teal: #a6e3e8;\n$lightest_teal: #d9f3f5;\n$ai_rubric_cyan: #3cfff8;\n\n$purple: #8c52ba;\n$light_purple: #a69bc1;\n$lighter_purple: #cfc9de;\n$lightest_purple: #ebe8f1;\n\n$cyan: #0094ca;\n$light_cyan: #59b9dc;\n$lighter_cyan: #a6daed;\n$lightest_cyan: #d9eff7;\n$almost_white_cyan: #f5fcff;\n\n$orange: #ffa400;\n$light_orange: #ffc459;\n$lighter_orange: #ffe0a6;\n$lightest_orange: #fff2d9;\n$dark_orange: #ff8600;\n\n$green: #b9bf15;\n$light_green: #d1d567;\n$lighter_green: #e7e9ad;\n$lightest_green: #f5f5dc;\n$highlight_green: #8afc9b;\n\n$yellow: #ffb81d;\n$light_yellow: #ffdb74;\n$lighter_yellow: #ffebb5;\n$lightest_yellow: #fff7df;\n\n$goldenrod: #daa520;\n\n$header_text: $white;\n$bkgnd_color: $teal;\n$inset_color: $lighter_gray;\n$dark_color: $purple;\n$hdr_color: $purple;\n\n// Some extra colors.\n$red: #c00;\n$lightest_red: #fcc;\n$dark_red: #d62911;\n$realgreen: #008000;\n$realyellow: #ff0;\n$mustardyellow: #efcd1c;\n$twitter_blue: #00aced;\n$facebook_blue: #3b5998;\n$linkedin_blue: #0077B5;\n$dark_blue: #00647f;\n$blockly_flyout_gray: #ddd;\n$default_text: #333;\n$border_gray: #bbb;\n$border_light_gray: #d8d8d8;\n$table_header: #ececec;\n$table_light_row: #fcfcfc;\n$table_dark_row: #f4f4f4;\n\n// Progress colors.\n$level_submitted: $purple;\n$level_perfect: rgb(14, 190, 14);\n$level_passed: rgb(159, 212, 159);\n$level_attempted: $realyellow;\n$level_not_tried: #fefefe;\n$level_current: $orange;\n$level_review_rejected: $red;\n$level_review_accepted: rgb(11, 142, 11); // TODO: $level_passed;\n$assessment: $cyan;\n$workspace_running_background: #e5e5e5;\n\n// Experimental Sprite Lab validation colors.\n$dark_purple: #682A77;\n$bright_green: #0ebe0e;\n$neon_pink: #e9118f;\n\n// Links (used in apps).\n$link_color: #0596ce;\n\n// Shadow.\n$shadow: rgba(0, 0, 0, 0.3);\n\n// Colors that are taken from bootstrap, and not necessarily part of our core theme.\n$bootstrap_button_blue: #337ab7;\n$bootstrap_button_red: #d9534f;\n$bootstrap_error_background: #f2dede;\n$bootstrap_error_text: #b94a48;\n$bootstrap_v3_error_text: #a94442;\n$bootstrap_error_border: #ebccd1;\n$bootstrap_warning_background: #fcf8e3;\n$bootstrap_warning_text: #c09853;\n$bootstrap_warning_border: #faebcc;\n$bootstrap_border_color: #cccccc;\n$bootstrap_success_background: #dff0d8;\n$bootstrap_success_text: #468847;\n$bootstrap_success_border: #d6e9c6;\n\n// Colors taken from droplet, not part of our core theme.\n$droplet_light_green: #d3e965;\n$droplet_blue: #64b5f6;\n$droplet_bright_blue: #19c3e1;\n$droplet_yellow: #fff176;\n$droplet_orange: #ffb74d;\n$droplet_red: #f78183;\n$droplet_cyan: #4dd0e1;\n$droplet_pink: #f57ac6;\n$droplet_purple: #bb77c7;\n$droplet_green: #68d995;\n$droplet_white: $white;\n\n// Oceans: deep blue background.\n$oceans_deep_blue: rgb(2, 0, 28);\n\n// Dark theme background (used by default in Music Lab)\n$dark_black: #121212;\n\n// ===----===----===---- Phase 1 Colors: ----===----===----===\n// Brand\n$brand_primary_light: #E0F8F9;\n$brand_primary_default: #009EB0;\n$brand_primary_dark: #007785;\n\n$brand_secondary_light: #E0D1EC;\n$brand_secondary_default: #8C52BA;\n$brand_secondary_dark: #6C468A;\n\n$brand_accent_default: #ED6060;\n\n$brand_teal_5: #DFF2F4;\n\n//Product\n$product_affirmative_default: #3EA33E;\n\n$product_negative_light: #FDEBE9;\n$product_negative_default: #E5311A;\n$product_negative_dark: #AA2513;\n\n$product_caution_default: #F9CB28;\n\n$product_information_default: #007ACC;\n\n// Neutral\n$neutral_white: #FFFFFF;\n$neutral_light: #F7F8FA;\n$neutral_dark10: #EAECEF;\n$neutral_dark20: #D1D4D8;\n$neutral_dark30: #BEC2C7;\n$neutral_dark40: #ABB0B6;\n$neutral_dark50: #989EA5;\n$neutral_dark60: #858C94;\n$neutral_dark70: #727A83;\n$neutral_dark80: #5F6872;\n$neutral_dark90: #4C5661;\n$neutral_dark: #292F36;\n\n//Brands\n$google_brand_color: #0F9D58;\n$microsoft_brand_color: #FFB900;\n$facebook_brand_color: #3B5998;\n$clever_brand_color: #1464FF;\n\n// ===----===----===---- Design system colors: ----===----===----===\n\n$light_primary_100: #E0F8F9;\n$light_primary_500: #0093A4;\n$light_primary_700: #007785;\n\n$light_secondary_100: #E2D4EE;\n$light_secondary_500: #8C52BA;\n$light_secondary_700: #6C468A;\n\n$light_gray_50: #F7F8FA;\n$light_gray_100: #EAECEF;\n$light_gray_200: #D1D4D8;\n$light_gray_300: #BEC2C7;\n$light_gray_400: #ABB0B6;\n$light_gray_500: #989EA5;\n$light_gray_600: #858C94;\n$light_gray_700: #727A83;\n$light_gray_800: #5F6872;\n$light_gray_900: #4C5661;\n$light_gray_950: #394450;\n\n$light_affirmative_100: #E2F1E2;\n$light_affirmative_500: #3EA33E;\n$light_affirmative_700: #2D742D;\n\n$light_negative_100: #FBE0DD;\n$light_negative_500: #E5311A;\n$light_negative_700: #B24949;\n\n$light_caution_100: #FEF7DF;\n$light_caution_500: #F9CB28;\n$light_caution_700: #C7A220;\n\n$light_accent_100: #FAD7D7;\n$light_accent_500: #ED6060;\n$light_accent_700: #D84C4C;\n\n$light_aqua_100: #CEFFFD;\n$light_aqua_500: #3CFFF8;\n$light_aqua_700: #30CCC6;\n\n$light_orange_100: #FFEDCC;\n$light_orange_500: #FFA400;\n$light_orange_700: #CC8300;\n\n$light_info_100: #DCEFFB;\n$light_info_500: #1892E3;\n$light_info_700: #1375B6;\n\n$light_white: #FFFFFF;\n\n$light_black: #292F36;\n\n$light_black_opacity_90: rgba(41, 47, 54, 0.90);\n$light_black_opacity-80: rgba(41, 47, 54, 0.80);\n$light_black_opacity-70: rgba(41, 47, 54, 0.70);\n$light_black_opacity-60: rgba(41, 47, 54, 0.60);\n$light_black_opacity-50: rgba(41, 47, 54, 0.50);\n$light_black_opacity-40: rgba(41, 47, 54, 0.40);\n$light_black_opacity-30: rgba(41, 47, 54, 0.30);\n$light_black_opacity-20: rgba(41, 47, 54, 0.20);\n$light_black_opacity-10: rgba(41, 47, 54, 0.10);\n","// Common site-wide fonts, put here for easy access from all scss files\n\n// Please note (!): use only single quotes (' ') for strings (!) to allow our custom converter to work properly.\n// This file is being transpiled to js object.\n// (So it can be used in jsx/tsx files for inline styles. This is made mostly for legacy.\n// Try to avoid use of inline styles if you're creating new component).\n// Keeping that in mind -\n\n$metropolis-font: 'Metropolis', sans-serif;\n\n$main-font: $metropolis-font;\n\n$thin-font-weight: 100;\n$extra-light-font-weight: 200;\n$light-font-weight: 300;\n$regular-font-weight: 400;\n$medium-font-weight: 500;\n$semi-bold-font-weight: 600;\n$bold-font-weight: 700;\n$extra-bold-font-weight: 800;\n$black-font-weight: 900;\n\n@mixin main-font-thin {\n  font-family: $main-font;\n  font-weight: $thin-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-thin-italic {\n  @include main-font-thin;\n  font-style: italic;\n}\n\n@mixin main-font-extra-light {\n  font-family: $main-font;\n  font-weight: $extra-light-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-extra-light-italic {\n  @include main-font-extra-light;\n  font-style: italic;\n}\n\n@mixin main-font-light {\n  font-family: $main-font;\n  font-weight: $light-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-light-italic {\n  @include main-font-light;\n  font-style: italic;\n}\n\n@mixin main-font-regular {\n  font-family: $main-font;\n  font-weight: $regular-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-regular-italic {\n  @include main-font-regular;\n  font-style: italic;\n}\n\n@mixin main-font-medium {\n  font-family: $main-font;\n  font-weight: $medium-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-medium-italic {\n  @include main-font-medium;\n  font-style: italic;\n}\n\n@mixin main-font-semi-bold {\n  font-family: $main-font;\n  font-weight: $semi-bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-semi-bold-italic {\n  @include main-font-semi-bold;\n  font-style: italic;\n}\n\n@mixin main-font-bold {\n  font-family: $main-font;\n  font-weight: $bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-bold-italic {\n  @include main-font-bold;\n  font-style: italic;\n}\n\n@mixin main-font-extra-bold {\n  font-family: $main-font;\n  font-weight: $extra-bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-extra-bold-italic {\n  @include main-font-extra-bold;\n  font-style: italic;\n}\n\n@mixin main-font-black {\n  font-family: $main-font;\n  font-weight: $black-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-black-italic {\n  @include main-font-black;\n  font-style: italic;\n}\n\n$barlowSemiCondensed-semibold: 'Barlow Semi Condensed Semibold', sans-serif;\n$barlowSemiCondensed-medium: 'Barlow Semi Condensed Medium', sans-serif;\n\n$code-font: 'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace;\n\n/*\n   If you are changing the location of these files,\n   see the readme in this directory for more detail on manual steps to take when uploading new files.\n */\n$font-awesome-core-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css';\n$font-awesome-brands-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css';\n$font-awesome-solid-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css';\n$font-awesome-regular-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css';\n$font-awesome-v4-fonts-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css';\n$font-awesome-v4-shims-url: 'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css';\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={row:"uYItL77TWcU0wtVbhTfw",cell:"hzi4zAQLtOeALKbcN1HF",addButton:"pEv7nG0FjvBfyWDiVoGw",editButton:"QFx0DJcXsNZPlS6OSqkP",headerCell:"QJTdjytrQErkwBhyZuMb",link:"aL4qZazwqcLIPHl9fJFo",button:"vhcuGCSnanVtqh5MHMXu",buttonWhite:"zehBIP29hpzIXp82knQ8",buttonWhiteEdit:"amzC_L72ues1STeirgwv",buttonRed:"ymtkCADAvOyMnTc9TWB0",buttonBlue:"Y34eEaDAmZWf41x33l5I",buttonBlueSave:"aN85sU65aHSMhw7cqksL",buttonGray:"k6pRSfcUhlMOgNeyKeSi",input:"IjgyOPtpufaXlzS3sObU"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/nise sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/nise sync recursive",module.exports=webpackEmptyContext},"./src/componentLibrary/typography/typography.module.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_typography_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/componentLibrary/typography/typography.module.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_typography_module_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_typography_module_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_typography_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_typography_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./src/storage/dataBrowser/data-styles.module.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_data_styles_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/storage/dataBrowser/data-styles.module.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_data_styles_module_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_data_styles_module_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_data_styles_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_data_styles_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./src/componentLibrary/typography/Typography.tsx":function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var classnames_1=__importDefault(__webpack_require__("./node_modules/classnames/index.js")),react_1=__importStar(__webpack_require__("./node_modules/react/index.js")),typography_module_scss_1=__importDefault(__webpack_require__("./src/componentLibrary/typography/typography.module.scss")),Typography=function(_a){var semanticTag=_a.semanticTag,visualAppearance=_a.visualAppearance,children=_a.children,className=_a.className,style=_a.style,props=__rest(_a,["semanticTag","visualAppearance","children","className","style"]),Tag=semanticTag;return react_1.default.createElement(Tag,__assign({className:(0,classnames_1.default)(typography_module_scss_1.default[visualAppearance],className),style},props),children)};exports.default=(0,react_1.memo)(Typography);try{Typography.displayName="Typography",Typography.__docgenInfo={description:"",displayName:"Typography",props:{semanticTag:{defaultValue:null,description:"",name:"semanticTag",required:!0,type:{name:"enum",value:[{value:'"em"'},{value:'"figcaption"'},{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'},{value:'"p"'},{value:'"span"'},{value:'"strong"'}]}},visualAppearance:{defaultValue:null,description:"",name:"visualAppearance",required:!0,type:{name:"enum",value:[{value:'"em"'},{value:'"figcaption"'},{value:'"strong"'},{value:'"heading-xxl"'},{value:'"heading-xl"'},{value:'"heading-lg"'},{value:'"heading-md"'},{value:'"heading-sm"'},{value:'"heading-xs"'},{value:'"body-one"'},{value:'"body-two"'},{value:'"body-three"'},{value:'"body-four"'},{value:'"overline-one"'},{value:'"overline-two"'},{value:'"overline-three"'},{value:'"extra-strong"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/componentLibrary/typography/Typography.tsx#Typography"]={docgenInfo:Typography.__docgenInfo,name:"Typography",path:"src/componentLibrary/typography/Typography.tsx#Typography"})}catch(__react_docgen_typescript_loader_error){}},"./src/lib/levelbuilder/lesson-editor/ActivitiesEditor.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WhenMajorChangesNotAllowed=exports.ForLessonWithoutLessonPlan=exports.ForLessonWithLessonPlan=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_ActivitiesEditor=_interopRequireDefault(__webpack_require__("./src/lib/levelbuilder/lesson-editor/ActivitiesEditor.jsx")),_redux=__webpack_require__("./src/redux.js"),_activitiesEditorRedux=_interopRequireWildcard(__webpack_require__("./src/lib/levelbuilder/lesson-editor/activitiesEditorRedux.js")),_resourcesEditorRedux=_interopRequireWildcard(__webpack_require__("./src/lib/levelbuilder/lesson-editor/resourcesEditorRedux.js")),_vocabulariesEditorRedux=_interopRequireWildcard(__webpack_require__("./src/lib/levelbuilder/lesson-editor/vocabulariesEditorRedux.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_activitiesTestData=__webpack_require__("./test/unit/lib/levelbuilder/lesson-editor/activitiesTestData.js");__webpack_require__("./test/util/testUtils.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default={component:_ActivitiesEditor.default};var resourcesEditor=(0,_resourcesEditorRedux.default)("lessonResource"),createStoreWithLessonPlan=function createStoreWithLessonPlan(){(0,_redux.registerReducers)(_objectSpread(_objectSpread({},_activitiesEditorRedux.default),{},{resources:resourcesEditor,vocabularies:_vocabulariesEditorRedux.default}));var store=(0,_redux.createStoreWithReducers)();return store.dispatch((0,_activitiesEditorRedux.initActivities)(_activitiesTestData.sampleActivities)),store.dispatch((0,_activitiesEditorRedux.initLevelSearching)({searchOptions:_activitiesTestData.searchOptions,programmingEnvironments:[]})),store.dispatch((0,_resourcesEditorRedux.initResources)("lessonResource",[])),store.dispatch((0,_vocabulariesEditorRedux.initVocabularies)([])),store},createStoreWithoutLessonPlan=function createStoreWithoutLessonPlan(){(0,_redux.registerReducers)(_objectSpread(_objectSpread({},_activitiesEditorRedux.default),{},{resources:resourcesEditor,vocabularies:_vocabulariesEditorRedux.default}));var store=(0,_redux.createStoreWithReducers)();return store.dispatch((0,_activitiesEditorRedux.initActivities)([_activitiesTestData.sampleActivityForLessonWithoutLessonPlan])),store.dispatch((0,_activitiesEditorRedux.initLevelSearching)({searchOptions:_activitiesTestData.searchOptions,programmingEnvironments:[]})),store.dispatch((0,_resourcesEditorRedux.initResources)("lessonResource",[])),store.dispatch((0,_vocabulariesEditorRedux.initVocabularies)([])),store};var TemplateStoreWithoutLessonPlan=function TemplateStoreWithoutLessonPlan(args){return _react.default.createElement(_reactRedux.Provider,{store:createStoreWithoutLessonPlan()},_react.default.createElement(_ActivitiesEditor.default,args))};(exports.ForLessonWithLessonPlan=function TemplateStoreWithLessonPlan(args){return _react.default.createElement(_reactRedux.Provider,{store:createStoreWithLessonPlan()},_react.default.createElement(_ActivitiesEditor.default,args))}.bind({})).args={hasLessonPlan:!0,allowMajorCurriculumChanges:!0},(exports.ForLessonWithoutLessonPlan=TemplateStoreWithoutLessonPlan.bind({})).args={hasLessonPlan:!1,allowMajorCurriculumChanges:!0},(exports.WhenMajorChangesNotAllowed=TemplateStoreWithoutLessonPlan.bind({})).args={hasLessonPlan:!0,allowMajorCurriculumChanges:!1}},"./fonts/barlowSemiCondensed/BarlowSemiCondensed-Medium.ttf":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"98a7f00b2ee77813a131.ttf"},"./fonts/barlowSemiCondensed/BarlowSemiCondensed-SemiBold.ttf":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"c0e9a01d31a5aecb006f.ttf"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,