"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1097],{"./src/code-studio/pd/workshop_dashboard/components/survey_results/text_responses.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactBootstrap=__webpack_require__("./node_modules/react-bootstrap/es/index.js"),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_he=_interopRequireDefault(__webpack_require__("./node_modules/he/he.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var TextResponses=function(_React$Component){function TextResponses(){return _React$Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(TextResponses,_React$Component);var _proto=TextResponses.prototype;return _proto.renderResponseBullets=function renderResponseBullets(){var _this=this;if(Array.isArray(this.props.answers)){var answers=this.props.answers.map((function(answer,i){return _this.renderBullet(answer,i)}));if(this.props.showAverage){var average=this.computeAverageForAnswers(this.props.answers);answers.unshift(_react.default.createElement("li",{key:Object.keys(this.props.answers).length},"Average: ",average))}return answers}return Object.keys(this.props.answers).map((function(facilitator_name,i){var answers=_this.props.answers[facilitator_name].map((function(feedback,j){return _this.renderBullet(feedback,j)}));if(_this.props.showAverage){var _average=_this.computeAverageForAnswers(_this.props.answers[facilitator_name]);answers.unshift(_react.default.createElement("li",{key:Object.keys(_this.props.answers[facilitator_name]).length},"Average: ",_average))}return _react.default.createElement("li",{key:i},_this.props.facilitators&&_this.props.facilitators[facilitator_name]?_this.props.facilitators[facilitator_name]:facilitator_name,_react.default.createElement("ul",null,answers))}))},_proto.computeAverageForAnswers=function computeAverageForAnswers(answers){var numericAnswers=answers.filter((function(answer){return!isNaN(Number(answer))}));return(numericAnswers.reduce((function(sum,answer){var x=parseInt(answer);return x>0?sum+x:sum}),0)/numericAnswers.length).toFixed(2)},_proto.renderBullet=function renderBullet(text,key){var trimmedText=_lodash.default.trim(_he.default.decode(text));if(trimmedText)return _react.default.createElement("li",{key},trimmedText)},_proto.render=function render(){return _react.default.createElement(_reactBootstrap.Well,null,_react.default.createElement("b",null,this.props.question),this.renderResponseBullets())},TextResponses}(_react.default.Component);exports.default=TextResponses,function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(TextResponses,"propTypes",{question:_propTypes.default.string.isRequired,answers:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object]).isRequired,showAverage:_propTypes.default.bool,facilitators:_propTypes.default.object}),module.exports=exports.default},"./src/code-studio/pd/workshop_dashboard/components/survey_results/text_responses.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.GeneralTextResponses=exports.GeneralResponsesWithAnAverage=exports.FacilitatorSpecificTextResponses=exports.FacilitatorResponsesWithAverages=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_text_responses=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/workshop_dashboard/components/survey_results/text_responses.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _default={component:_text_responses.default};exports.default=_default;var Template=function Template(args){return _react.default.createElement(_text_responses.default,args)},GeneralTextResponses=Template.bind({});exports.GeneralTextResponses=GeneralTextResponses,GeneralTextResponses.args={name:"General text responses",question:"What is your favorite food?",answers:["Tacos","Pizza","Burritos","Vegetable Fried Rice"]};var FacilitatorSpecificTextResponses=Template.bind({});exports.FacilitatorSpecificTextResponses=FacilitatorSpecificTextResponses,FacilitatorSpecificTextResponses.args={name:"Facilitator specific text responses",question:"What snacks do you want your facilitator to bring?",answers:{"Facilitator 1":["Chips","Apples","Nachos","Nachos","Cookies"],"Facilitator 2":["Fries","Carrots","Carrots","Peppers","Donuts"]}};var GeneralResponsesWithAnAverage=Template.bind({});exports.GeneralResponsesWithAnAverage=GeneralResponsesWithAnAverage,GeneralResponsesWithAnAverage.args={name:"General responses with an average",question:"How many tacos do you want?",answers:["1","2","3","6","3","3","2","0","Dunno"],showAverage:!0};var FacilitatorResponsesWithAverages=Template.bind({});exports.FacilitatorResponsesWithAverages=FacilitatorResponsesWithAverages,FacilitatorResponsesWithAverages.args={name:"Facilitator responses with averages",question:"On a scale of 1 to 5, how good was the facilitator's cooking?",answers:{"Facilitator 1":["3","4","5","5","4","5","5"],"Facilitator 2":["2","3","1","1","1","2","Dunno"]},showAverage:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,