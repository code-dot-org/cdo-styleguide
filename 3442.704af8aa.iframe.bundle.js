"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3442],{"./src/code-studio/components/AddAssetButtonRow.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.assetButtonStyles=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/Button.jsx")),_browserDetector=__webpack_require__("./src/util/browser-detector.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_AssetUploader=_interopRequireDefault(__webpack_require__("./src/code-studio/components/AssetUploader.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var assetButtonStyles=exports.assetButtonStyles={button:{paddingLeft:10,paddingRight:10,marginTop:5,fontSize:"large",fontWeight:"lighter",marginRight:10},buttonRow:{display:"flex",flexFlow:"row",alignItems:"center"}},RecordButton=function RecordButton(_ref){var onSelectRecord=_ref.onSelectRecord,disabled=_ref.disabled;return _react.default.createElement("span",null,_react.default.createElement(_Button.default,{onClick:onSelectRecord,id:"record-asset",className:"share",text:_locale.default.recordAudio(),icon:"microphone",style:assetButtonStyles.button,size:"large",disabled}))};RecordButton.propTypes={onSelectRecord:_propTypes.default.func,disabled:_propTypes.default.bool},function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_React$Component){function AddAssetButtonRow(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AddAssetButtonRow,_React$Component),AddAssetButtonRow.prototype.render=function render(){var shouldShowRecordButton=!this.props.hideAudioRecording;return(0,_browserDetector.isIE11)()&&(shouldShowRecordButton=!1),_react.default.createElement("div",{style:assetButtonStyles.buttonRow},_react.default.createElement(_AssetUploader.default,{uploadsEnabled:this.props.uploadsEnabled,allowedExtensions:this.props.allowedExtensions,api:this.props.api,onUploadStart:this.props.onUploadStart,onUploadDone:this.props.onUploadDone,onUploadError:this.props.onUploadError}),shouldShowRecordButton&&_react.default.createElement(RecordButton,{onSelectRecord:this.props.onSelectRecord,disabled:!this.props.uploadsEnabled||this.props.recordDisabled}),_react.default.createElement("span",{id:"manage-asset-status"},this.props.statusMessage))},AddAssetButtonRow}(_react.default.Component),"propTypes",{uploadsEnabled:_propTypes.default.bool.isRequired,allowedExtensions:_propTypes.default.string,api:_propTypes.default.object,onUploadStart:_propTypes.default.func.isRequired,onUploadDone:_propTypes.default.func.isRequired,onUploadError:_propTypes.default.func.isRequired,onSelectRecord:_propTypes.default.func.isRequired,statusMessage:_propTypes.default.string,recordDisabled:_propTypes.default.bool,hideAudioRecording:_propTypes.default.bool})},"./src/code-studio/components/AssetManager.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.ImageMode=exports.AudioErrorType=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_assetPrefix=__webpack_require__("./src/assetManagement/assetPrefix.js"),_clientApi=__webpack_require__("./src/clientApi.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/metrics/firehose.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_assetListStore=_interopRequireDefault(__webpack_require__("./src/code-studio/assets/assetListStore.js")),_AddAssetButtonRow=_interopRequireDefault(__webpack_require__("./src/code-studio/components/AddAssetButtonRow.jsx")),_AssetRow=_interopRequireDefault(__webpack_require__("./src/code-studio/components/AssetRow.jsx")),_AudioRecorder=_interopRequireDefault(__webpack_require__("./src/code-studio/components/AudioRecorder.jsx")),_recorders=__webpack_require__("./src/code-studio/components/recorders.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var AudioErrorType=exports.AudioErrorType={NONE:"none",INITIALIZE:"initialize",SAVE:"save"},errorMessages=(exports.ImageMode={FILE:"file",ICON:"icon",URL:"url",DEFAULT:"default"},{403:"Quota exceeded. Please delete some files and try again.",413:"The file is too large.",415:"This type of file is not supported.",500:"The server responded with an error.",unknown:"An unknown error occurred."});function getErrorMessage(status){return errorMessages[status]||errorMessages.unknown}var AssetManager=exports.default=function(_React$Component){function AssetManager(props){var _this;return _defineProperty(_this=_React$Component.call(this,props)||this,"onStarterAssetsReceived",(function(result){var response=JSON.parse(result.response);_this.setState({starterAssets:response.starter_assets})})),_defineProperty(_this,"onStarterAssetsFailure",(function(xhr){_this.setState({statusMessage:"Error loading starter assets: "+getErrorMessage(xhr.status)})})),_defineProperty(_this,"onAssetListReceived",(function(result){_assetListStore.default.reset(result.files),_this.setState({assets:_assetListStore.default.list(_this.props.allowedExtensions)})})),_defineProperty(_this,"onAssetListFailure",(function(_ref){var status=_ref.status;_this.props.useFilesApi&&404===status?_this.onAssetListReceived({files:[]}):_this.setState({statusMessage:"Error loading asset list: "+getErrorMessage(status)})})),_defineProperty(_this,"onUploadStart",(function(data){_this.setState({statusMessage:"Uploading..."}),data.submit()})),_defineProperty(_this,"onUploadDone",(function(result){var newState={statusMessage:'File "'+result.filename+'" successfully uploaded!'};_this.props.isStartMode?newState.starterAssets=[].concat(_toConsumableArray(_this.state.starterAssets),[result]):(_assetListStore.default.add(result),_this.props.assetsChanged&&_this.props.assetsChanged(),newState.assets=_assetListStore.default.list(_this.props.allowedExtensions)),_this.setState(newState)})),_defineProperty(_this,"onUploadError",(function(status){_this.setState({statusMessage:"Error uploading file: "+getErrorMessage(status)}),_firehose.default.putRecord({study:"project-data-integrity",study_group:"v4",event:"asset-upload-error",project_id:_this.props.projectId,data_int:status})})),_defineProperty(_this,"onSelectRecord",(function(){_this.setState({recordingAudio:!0})})),_defineProperty(_this,"deleteAssetRow",(function(name){_assetListStore.default.remove(name),_this.props.assetsChanged&&_this.props.assetsChanged(),_firehose.default.putRecord({study:"delete-asset",study_group:_this.props.assetChosen&&"function"==typeof _this.props.assetChosen?"choose-assets":"manage-assets",event:"confirm",project_id:_this.props.projectId,data_json:JSON.stringify({assetName:name,elementId:_this.props.elementId})}),_this.setState({assets:_assetListStore.default.list(_this.props.allowedExtensions),statusMessage:'File "'.concat(name,'" successfully deleted!')})})),_defineProperty(_this,"deleteStarterAssetRow",(function(name){var starterAssets=_toConsumableArray(_this.state.starterAssets).filter((function(asset){return asset.filename!==name}));_this.setState({starterAssets,statusMessage:'File "'.concat(name,'" successfully deleted!')})})),_defineProperty(_this,"afterAudioSaved",(function(err){_this.setState({recordingAudio:!1,audioErrorType:err})})),_defineProperty(_this,"defaultAssetProps",(function(asset){return{key:asset.filename,name:asset.filename,timestamp:asset.timestamp,type:asset.category,size:asset.size,soundPlayer:_this.props.soundPlayer,imagePicker:_this.props.imagePicker,projectId:_this.props.projectId,elementId:_this.props.elementId}})),_defineProperty(_this,"getStarterAssetRows",(function(){if(!_this.props.levelName||0===_this.state.starterAssets.length)return[];var boundApi=_clientApi.starterAssets.withLevelName(_this.props.levelName);return _this.state.starterAssets.map((function(asset){return _react.default.createElement(_AssetRow.default,_extends({},_this.defaultAssetProps(asset),{api:boundApi,onChoose:_this.props.assetChosen&&function(){return _this.props.assetChosen(_assetPrefix.STARTER_ASSET_PREFIX+asset.filename,asset.timestamp)},onDelete:function onDelete(){return _this.deleteStarterAssetRow(asset.filename)},levelName:_this.props.levelName,hideDelete:!_this.props.isStartMode}))}))})),_defineProperty(_this,"getAssetRows",(function(){var api=_this.props.useFilesApi?_clientApi.files:_clientApi.assets;return _this.state.assets.map((function(asset){return _react.default.createElement(_AssetRow.default,_extends({},_this.defaultAssetProps(asset),{api,onChoose:_this.props.assetChosen&&function(){return _this.props.assetChosen(asset.filename,asset.timestamp)},onDelete:function onDelete(){return _this.deleteAssetRow(asset.filename)}}))}))})),_defineProperty(_this,"uploadApi",(function(){if(_this.props.isStartMode)return _clientApi.starterAssets.withLevelName(_this.props.levelName);var api=_this.props.useFilesApi?_clientApi.files:_clientApi.assets;return api.getProjectId()||(api=api.withProjectId(_this.props.projectId)),api})),_this.state={assets:null,starterAssets:null,statusMessage:props.uploadsEnabled?"":"This project has been reported for abusive content, so uploading new assets is disabled.",recordingAudio:!1,audioErrorType:AudioErrorType.NONE},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AssetManager,_React$Component);var _proto=AssetManager.prototype;return _proto.componentDidMount=function componentDidMount(){this.props.levelName?_clientApi.starterAssets.getStarterAssets(this.props.levelName,this.onStarterAssetsReceived,this.onStarterAssetsFailure):this.setState({starterAssets:[]});var api=this.props.useFilesApi?_clientApi.files:_clientApi.assets;api.getProjectId()||(api=api.withProjectId(this.props.projectId)),api.getProjectId()?api.getFiles(this.onAssetListReceived,this.onAssetListFailure):this.setState({assets:[]})},_proto.render=function render(){var assetList,displayAudioRecorder=this.state.audioErrorType!==AudioErrorType.INITIALIZE&&this.state.recordingAudio,buttons=_react.default.createElement("div",null,this.state.audioErrorType===AudioErrorType.SAVE&&_react.default.createElement("div",null,_locale.default.audioSaveError()),this.state.audioErrorType===AudioErrorType.INITIALIZE&&_react.default.createElement("div",null,_locale.default.audioInitializeError()),displayAudioRecorder&&_react.default.createElement(_AudioRecorder.default,{onUploadDone:this.onUploadDone,afterAudioSaved:this.afterAudioSaved,recordingFileType:this.props.recordingFileType,imagePicker:this.props.imagePicker}),_react.default.createElement(_AddAssetButtonRow.default,{uploadsEnabled:this.props.uploadsEnabled,allowedExtensions:this.props.allowedExtensions,api:this.uploadApi(),onUploadStart:this.onUploadStart,onUploadDone:this.onUploadDone,onUploadError:this.onUploadError,onSelectRecord:this.onSelectRecord,statusMessage:this.state.statusMessage,recordDisabled:this.state.recordingAudio,hideAudioRecording:this.props.disableAudioRecording}));if(null===this.state.assets||null===this.state.starterAssets)assetList=_react.default.createElement("div",{style:{margin:"1em 0",textAlign:"center"}},_react.default.createElement("i",{className:"fa fa-spinner fa-spin",style:{fontSize:"32px"}}));else if(0===this.state.assets.length&&0===this.state.starterAssets.length){var emptyText=".mp3"===this.props.allowedExtensions?_react.default.createElement("div",null,_react.default.createElement("div",null,_locale.default.manageAssetsSoundLibraryMessage({soundLibraryButtonText:_locale.default.soundLibrary()})),_react.default.createElement("div",null,_locale.default.manageAssetsSoundUploadMessage({assetUploaderButtonText:_locale.default.uploadFile()}))):_react.default.createElement("div",null,_locale.default.manageAssetsDefaultMessage({assetUploaderButtonText:_locale.default.uploadFile()}));assetList=_react.default.createElement("div",null,_react.default.createElement("div",{style:styles.emptyText},emptyText),buttons)}else{var rows=[].concat(_toConsumableArray(this.getStarterAssetRows()),_toConsumableArray(this.getAssetRows()));assetList=_react.default.createElement("div",null,_react.default.createElement("div",{style:{maxHeight:"380px",overflowY:"scroll",margin:"1em 0"}},_react.default.createElement("table",{style:{width:"100%"}},_react.default.createElement("tbody",null,rows))),buttons)}return assetList},AssetManager}(_react.default.Component);_defineProperty(AssetManager,"propTypes",{assetChosen:_propTypes.default.func,assetsChanged:_propTypes.default.func,allowedExtensions:_propTypes.default.string,uploadsEnabled:_propTypes.default.bool.isRequired,useFilesApi:_propTypes.default.bool,soundPlayer:_propTypes.default.object,disableAudioRecording:_propTypes.default.bool,recordingFileType:_propTypes.default.oneOf(Object.values(_recorders.RecordingFileType)),projectId:_propTypes.default.string,levelName:_propTypes.default.string,isStartMode:_propTypes.default.bool,imagePicker:_propTypes.default.bool,elementId:_propTypes.default.string});var styles={emptyText:{margin:"1em 0",fontSize:"16px",lineHeight:"20px"}}},"./src/code-studio/components/AssetRow.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/metrics/firehose.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_AssetThumbnail=_interopRequireDefault(__webpack_require__("./src/code-studio/components/AssetThumbnail.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var AssetRow=exports.default=function(_React$Component){function AssetRow(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",{action:"normal",actionText:"",attemptedUsedDelete:!1}),_defineProperty(_this,"confirmDelete",(function(){_this.setState({action:"confirming delete",actionText:""}),_firehose.default.putRecord({study:"delete-asset",study_group:_this.props.onChoose&&"function"==typeof _this.props.onChoose?"choose-assets":"manage-assets",event:"initiate",project_id:_this.props.projectId,data_json:JSON.stringify({assetName:_this.props.name,elementId:_this.props.elementId})})})),_defineProperty(_this,"cancelDelete",(function(){_this.setState({action:"normal",actionText:""})})),_defineProperty(_this,"handleDelete",(function(){_this.setState({action:"deleting",actionText:""}),_this.props.api.deleteFile(_this.props.name,_this.props.onDelete,(function(){_this.setState({action:"confirming delete",actionText:_locale.default.errorDeleting()})}))})),_defineProperty(_this,"chooseAsset",(function(){_this.props.imagePicker||_firehose.default.putRecord({study:"sound-dialog-2",study_group:"library-tab",event:"choose-uploaded-sound",data_json:_this.props.name},{includeUserId:!0}),_this.props.onChoose()})),_defineProperty(_this,"attemptBadDelete",(function(){_this.setState({attemptedUsedDelete:!0})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AssetRow,_React$Component),AssetRow.prototype.render=function render(){var actions,flex;this.props.onChoose?flex=_react.default.createElement("button",{type:"button",onClick:this.chooseAsset},_locale.default.choose()):flex=(this.props.size/1e3).toFixed(2)+" kb";var usage=(0,_jquery.default)("#visualization").find('[src*="'.concat(encodeURIComponent(this.props.name),'"]')).length;switch(this.state.action){case"normal":actions=_react.default.createElement("td",{width:"250",style:{textAlign:"right"}},flex,!this.props.hideDelete&&_react.default.createElement("button",{type:"button",className:usage>0?"":"btn-danger",onClick:usage>0?this.attemptBadDelete:this.confirmDelete},_react.default.createElement("i",{className:"fa fa-trash-o"})),this.state.attemptedUsedDelete&&_react.default.createElement("div",{style:styles.deleteWarning},_locale.default.cannotDeleteUsedImage()));break;case"confirming delete":actions=_react.default.createElement("td",{width:"250",style:{textAlign:"right"}},_react.default.createElement("button",{type:"button",className:"btn-danger",onClick:this.handleDelete},"Delete File"),_react.default.createElement("button",{type:"button",onClick:this.cancelDelete},"Cancel"),_react.default.createElement("div",{style:styles.deleteWarning},_locale.default.confirmDeleteExplanation()),this.state.actionText);break;case"deleting":actions=_react.default.createElement("td",{width:"250",style:{textAlign:"right"}},_react.default.createElement("i",{className:"fa fa-spinner fa-spin",style:{fontSize:"32px",marginRight:"15px"}}))}return _react.default.createElement("tr",{className:"assetRow",onDoubleClick:this.props.onChoose},_react.default.createElement("td",{width:"80"},_react.default.createElement(_AssetThumbnail.default,{type:this.props.type,name:this.props.name,timestamp:this.props.timestamp,api:this.props.api,soundPlayer:this.props.soundPlayer,levelName:this.props.levelName})),_react.default.createElement("td",null,this.props.name),actions)},AssetRow}(_react.default.Component);_defineProperty(AssetRow,"propTypes",{name:_propTypes.default.string.isRequired,timestamp:_propTypes.default.string,type:_propTypes.default.oneOf(["image","audio","video","pdf","doc"]).isRequired,size:_propTypes.default.number,api:_propTypes.default.object.isRequired,onChoose:_propTypes.default.func,onDelete:_propTypes.default.func.isRequired,soundPlayer:_propTypes.default.object,projectId:_propTypes.default.string,levelName:_propTypes.default.string,hideDelete:_propTypes.default.bool,imagePicker:_propTypes.default.bool,elementId:_propTypes.default.string});var styles={deleteWarning:{paddingLeft:"34px",textAlign:"left",color:_color.default.red}};module.exports=exports.default},"./src/code-studio/components/AssetThumbnail.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.styles=exports.default=void 0;var _Class,_Class2,_Class3,_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_clientApi=__webpack_require__("./src/clientApi.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var defaultIcons={image:"fa fa-picture-o",audio:"fa fa-music",video:"fa fa-video-camera",pdf:"fa fa-file-pdf-o",doc:"fa fa-file-text-o",unknown:"fa fa-question"},assetThumbnailStyle={width:"auto",maxWidth:"100%",height:"auto",maxHeight:"100%",marginTop:"50%",transform:"translateY(-50%)",msTransform:"translateY(-50%)",WebkitTransform:"translateY(-50%)"},assetIconStyle={margin:"15px 0",fontSize:"32px"},styles=exports.styles={wrapper:{width:60,height:60,margin:"10px auto"},background:{background:"#eee",border:"1px solid #ccc",textAlign:"center"},audioIcon:{color:_color.default.purple,marginLeft:"auto",marginRight:"auto",display:"block"},audioWrapper:{display:"flex"}},AssetThumbnail=function(_React$Component){function AssetThumbnail(props){var _this;_defineProperty(_this=_React$Component.call(this,props)||this,"clickSoundControl",(function(){_this.state.isPlayingAudio&&_this.props.soundPlayer?(_this.setState({isPlayingAudio:!1}),_this.props.soundPlayer.stopPlayingURL(_this.srcPath)):_this.props.soundPlayer&&(_this.setState({isPlayingAudio:!0}),_this.props.soundPlayer.play(_this.srcPath,{onEnded:function onEnded(){_this.setState({isPlayingAudio:!1})}}))}));var api=_this.props.api||_clientApi.assets;_this.props.levelName?api=api.withLevelName(_this.props.levelName):_this.props.projectId&&(api=api.withProjectId(_this.props.projectId));var basePath=api.basePath(_this.props.name),cacheBustSuffix="";if(_this.props.timestamp){var date=new Date(_this.props.timestamp);cacheBustSuffix="?t=".concat(date.valueOf())}return _this.srcPath="".concat(basePath).concat(cacheBustSuffix),"audio"===_this.props.type&&_this.props.soundPlayer&&_this.props.soundPlayer.register({id:_this.srcPath,mp3:_this.srcPath}),_this.state={isPlayingAudio:!1},_this}return _inheritsLoose(AssetThumbnail,_React$Component),AssetThumbnail.prototype.render=function render(){var _this$props=this.props,type=_this$props.type,iconStyle=_this$props.iconStyle,style=_this$props.style;return _react.default.createElement("div",{className:"assetThumbnail"},"audio"===type?_react.default.createElement(AudioThumbnail,{clickSoundControl:this.clickSoundControl,isPlaying:this.state.isPlayingAudio}):_react.default.createElement("div",{style:_objectSpread(_objectSpread(_objectSpread({},styles.wrapper),style),styles.background)},"image"===type?_react.default.createElement(ImageThumbnail,{src:this.srcPath}):_react.default.createElement(DefaultThumbnail,{type,iconStyle})))},AssetThumbnail}(_react.default.Component);_defineProperty(AssetThumbnail,"propTypes",{name:_propTypes.default.string.isRequired,timestamp:_propTypes.default.string,type:_propTypes.default.oneOf(["image","audio","video","pdf","doc"]).isRequired,style:_propTypes.default.object,iconStyle:_propTypes.default.object,api:_propTypes.default.object,projectId:_propTypes.default.string,levelName:_propTypes.default.string,soundPlayer:_propTypes.default.object});exports.default=AssetThumbnail;var AudioThumbnail=(_Class=function(_React$Component2){function AudioThumbnail(){return _React$Component2.apply(this,arguments)||this}return _inheritsLoose(AudioThumbnail,_React$Component2),AudioThumbnail.prototype.render=function render(){var playIcon=this.props.isPlaying?"fa-pause-circle":"fa-play-circle";return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.wrapper),styles.audioWrapper)},_react.default.createElement("i",{onClick:this.props.clickSoundControl,className:"fa "+playIcon+" fa-4x",style:styles.audioIcon}))},AudioThumbnail}(_react.default.Component),_defineProperty(_Class,"propTypes",{clickSoundControl:_propTypes.default.func,isPlaying:_propTypes.default.bool}),_Class),ImageThumbnail=(_Class2=function(_React$Component3){function ImageThumbnail(){return _React$Component3.apply(this,arguments)||this}return _inheritsLoose(ImageThumbnail,_React$Component3),ImageThumbnail.prototype.render=function render(){return _react.default.createElement("a",{href:this.props.src,target:"_blank",rel:"noopener noreferrer"},_react.default.createElement("img",{src:this.props.src,style:assetThumbnailStyle,id:"ui-image-thumbnail",alt:""}))},ImageThumbnail}(_react.default.Component),_defineProperty(_Class2,"propTypes",{src:_propTypes.default.string}),_Class2),DefaultThumbnail=(_Class3=function(_React$Component4){function DefaultThumbnail(){return _React$Component4.apply(this,arguments)||this}return _inheritsLoose(DefaultThumbnail,_React$Component4),DefaultThumbnail.prototype.render=function render(){return _react.default.createElement("i",{className:defaultIcons[this.props.type]||defaultIcons.unknown,style:_objectSpread(_objectSpread({},assetIconStyle),this.props.iconStyle)})},DefaultThumbnail}(_react.default.Component),_defineProperty(_Class3,"propTypes",{type:_propTypes.default.oneOf(["image","audio","video","pdf","doc"]).isRequired,iconStyle:_propTypes.default.object}),_Class3)},"./src/code-studio/components/AssetUploader.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/Button.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_AddAssetButtonRow=__webpack_require__("./src/code-studio/components/AddAssetButtonRow.jsx"),_HiddenUploader=_interopRequireDefault(__webpack_require__("./src/code-studio/components/HiddenUploader.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var AssetUploader=exports.default=function(_React$Component){function AssetUploader(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"fileUploadClicked",(function(){return _this.refs.uploader.openFileChooser()})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AssetUploader,_React$Component),AssetUploader.prototype.render=function render(){var api=this.props.api,url=api.getUploadUrl(),uploadDone=api.wrapUploadDoneCallback(this.props.onUploadDone),uploadStart=api.wrapUploadStartCallback(this.props.onUploadStart);return _react.default.createElement("span",null,_react.default.createElement(_HiddenUploader.default,{ref:"uploader",toUrl:url,allowedExtensions:this.props.allowedExtensions,onUploadStart:uploadStart,onUploadDone:uploadDone,onUploadError:this.props.onUploadError}),_react.default.createElement(_Button.default,{onClick:this.fileUploadClicked,className:"share",id:"upload-asset",disabled:!this.props.uploadsEnabled,icon:"upload",text:_locale.default.uploadFile(),style:_AddAssetButtonRow.assetButtonStyles.button,size:"large"}))},AssetUploader}(_react.default.Component);_defineProperty(AssetUploader,"propTypes",{onUploadStart:_propTypes.default.func.isRequired,onUploadDone:_propTypes.default.func.isRequired,onUploadError:_propTypes.default.func,allowedExtensions:_propTypes.default.string,uploadsEnabled:_propTypes.default.bool.isRequired,api:_propTypes.default.object.isRequired}),module.exports=exports.default},"./src/code-studio/components/AudioRecorder.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_clientApi=__webpack_require__("./src/clientApi.js"),_Button=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/Button.jsx")),_firehose=_interopRequireDefault(__webpack_require__("./src/metrics/firehose.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_AddAssetButtonRow=__webpack_require__("./src/code-studio/components/AddAssetButtonRow.jsx"),_AssetManager=__webpack_require__("./src/code-studio/components/AssetManager.jsx"),_recorders=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/code-studio/components/recorders.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var AudioRecorder=exports.default=function(_React$Component){function AudioRecorder(props){var _this;return _defineProperty(_this=_React$Component.call(this,props)||this,"componentDidMount",(function(){navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?(_this.recorder=(0,_recorders.default)(_this.props.recordingFileType),navigator.mediaDevices.getUserMedia({audio:!0}).then(_this.recorder.init).then((function(){return _this.setState({loading:!1})})).catch((function(){return _this.props.afterAudioSaved(_AssetManager.AudioErrorType.INITIALIZE)}))):_this.props.afterAudioSaved(_AssetManager.AudioErrorType.INITIALIZE)})),_defineProperty(_this,"saveAudio",(function(blob){_this.setState({loading:!0}),_clientApi.assets.putAsset(_this.state.audioName+_this.recorder.getExtension(),blob,(function(xhr){_this.setState({audioName:"",loading:!1});var result=JSON.parse(xhr.response);result.filename=decodeURI(result.filename),_this.props.onUploadDone(result),_this.props.afterAudioSaved(_AssetManager.AudioErrorType.NONE)}),(function(error){_this.setState({loading:!1}),console.error("Audio Failed to Save: ".concat(error)),_this.props.afterAudioSaved(_AssetManager.AudioErrorType.SAVE)}))})),_defineProperty(_this,"onNameChange",(function(event){_this.setState({audioName:event.target.value})})),_defineProperty(_this,"onCancel",(function(){_this.setState({audioName:"",recording:!1},(function(){_this.props.afterAudioSaved(_AssetManager.AudioErrorType.NONE),_this.recorder.isRecording()&&(clearTimeout(_this.recordTimeout),_this.recorder.stopRecording())}))})),_defineProperty(_this,"toggleRecord",(function(){_this.state.recording?_this.stopRecordingAndSave():_this.startRecording()})),_defineProperty(_this,"startRecording",(function(){var studyGroup=_this.props.imagePicker?"manage-assets":"library-tab";_this.recorder.startRecording().then((function(){_firehose.default.putRecord({study:"sound-dialog-2",study_group:studyGroup,event:"record-sound",data_json:_this.state.audioName},{includeUserId:!0}),_this.setState({recording:!_this.state.recording})})),_this.recordTimeout=setTimeout(_this.stopRecordingAndSave,3e4)})),_defineProperty(_this,"stopRecordingAndSave",(function(){_this.state.recording&&(clearTimeout(_this.recordTimeout),_this.recorder.stopRecording().then((function(blob){_this.saveAudio(blob)})),_this.setState({recording:!_this.state.recording}))})),_this.timeout=null,_this.recorder=null,_this.state={audioName:"",recording:!1,loading:!0},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(AudioRecorder,_React$Component),AudioRecorder.prototype.render=function render(){return _react.default.createElement("div",null,_react.default.createElement("div",{style:styles.buttonRow},_react.default.createElement("input",{type:"text",placeholder:_locale.default.soundName(),onChange:this.onNameChange,value:this.state.audioName}),this.state.recording&&_react.default.createElement("span",{style:_AddAssetButtonRow.assetButtonStyles.button},_react.default.createElement("i",{style:styles.recordingIcon,className:"fa fa-circle"}),_locale.default.recording()),_react.default.createElement("span",null,this.state.loading&&this.state.audioName.length>0&&_react.default.createElement("div",{style:styles.spinner},_react.default.createElement("i",{className:"fa fa-spinner fa-spin",style:{fontSize:"20px"}})),_react.default.createElement(_Button.default,{onClick:this.toggleRecord,id:"start-stop-record",style:_AddAssetButtonRow.assetButtonStyles.button,color:_Button.default.ButtonColor.blue,icon:this.state.recording?"stop":"circle",text:this.state.recording?_locale.default.stop():_locale.default.record(),size:"large",disabled:0===this.state.audioName.length||this.state.loading}),_react.default.createElement(_Button.default,{onClick:this.onCancel,id:"cancel-record",style:_AddAssetButtonRow.assetButtonStyles.button,color:_Button.default.ButtonColor.gray,text:_locale.default.cancel(),size:"large"}))))},AudioRecorder}(_react.default.Component);_defineProperty(AudioRecorder,"propTypes",{onUploadDone:_propTypes.default.func,afterAudioSaved:_propTypes.default.func,recordingFileType:_propTypes.default.oneOf(Object.values(_recorders.RecordingFileType)),imagePicker:_propTypes.default.bool});var styles={buttonRow:{display:"flex",flexFlow:"row",justifyContent:"space-between",alignItems:"center"},recordingIcon:{color:"red",margin:5},warning:{textAlign:"left",color:_color.default.red},spinner:{display:"inline-block",verticalAlign:"top",marginTop:"16px",marginRight:"10px"}};module.exports=exports.default},"./src/code-studio/components/HiddenUploader.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/metrics/firehose.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var HiddenUploader=exports.default=function(_React$Component){function HiddenUploader(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"openFileChooser",(function(){return _this.refs.uploader.click()})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(HiddenUploader,_React$Component);var _proto=HiddenUploader.prototype;return _proto.componentDidMount=function componentDidMount(){var props=this.props;(0,_jquery.default)(this.refs.uploader).fileupload({dataType:"json",url:this.props.toUrl,replaceFileInput:!1,add:function add(e,data){props.onUploadStart(data);var audioFileName=data.files[0].name.includes("mp3")?data.files[0].name:null;audioFileName&&_firehose.default.putRecord({study:"sound-dialog-2",study_group:"library-file",event:"upload-file",data_json:audioFileName},{includeUserId:!0})},done:function done(e,data){props.onUploadDone(data.result)},error:function error(e,data){props.onUploadError&&props.onUploadError(e.status)}})},_proto.componentWillUnmount=function componentWillUnmount(){(0,_jquery.default)(this.refs.uploader).fileupload("destroy")},_proto.render=function render(){return _react.default.createElement("input",{ref:"uploader",className:"uitest-hidden-uploader",type:"file",style:{display:"none"},accept:this.props.allowedExtensions||"*"})},HiddenUploader}(_react.default.Component);_defineProperty(HiddenUploader,"propTypes",{toUrl:_propTypes.default.string.isRequired,allowedExtensions:_propTypes.default.string,onUploadStart:_propTypes.default.func.isRequired,onUploadDone:_propTypes.default.func.isRequired,onUploadError:_propTypes.default.func}),window.dashboard=window.dashboard||{},window.dashboard.HiddenUploader=HiddenUploader,module.exports=exports.default}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,