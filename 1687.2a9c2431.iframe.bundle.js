"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1687],{"./generated-scripts/sharedConstants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AbuseConstants:()=>AbuseConstants,AiInteractionStatus:()=>AiInteractionStatus,AiTutorInteractionStatus:()=>AiTutorInteractionStatus,AiTutorTypes:()=>AiTutorTypes,AichatErrorType:()=>AichatErrorType,AllPublishableProjectTypes:()=>AllPublishableProjectTypes,AlwaysPublishableProjectTypes:()=>AlwaysPublishableProjectTypes,ArtistAutorunOptions:()=>ArtistAutorunOptions,CensusConstants:()=>CensusConstants,ChildAccountComplianceStates:()=>ChildAccountComplianceStates,ConditionallyPublishableProjectTypes:()=>ConditionallyPublishableProjectTypes,DanceSongManifestFilename:()=>DanceSongManifestFilename,DefaultLocale:()=>DefaultLocale,EmailLinks:()=>EmailLinks,ErrorSeverityLevels:()=>ErrorSeverityLevels,FeaturedProjectConstants:()=>FeaturedProjectConstants,FeaturedProjectStatus:()=>FeaturedProjectStatus,LevelKind:()=>LevelKind,LevelStatus:()=>LevelStatus,LmsLinks:()=>LmsLinks,PlGradeValue:()=>PlGradeValue,PostMilestoneMode:()=>PostMilestoneMode,RestrictedPublishProjectTypes:()=>RestrictedPublishProjectTypes,RubricAiEvaluationStatus:()=>RubricAiEvaluationStatus,RubricUnderstandingLevels:()=>RubricUnderstandingLevels,SectionLoginType:()=>SectionLoginType,StudentGradeLevels:()=>StudentGradeLevels,UserTypes:()=>UserTypes});const DefaultLocale="en-US",ArtistAutorunOptions={full_auto_run:"FULL_AUTO_RUN"},LevelKind={peer_review:"peer_review",assessment:"assessment",puzzle:"puzzle",unplugged:"unplugged",level:"level",stage_extras:"stage_extras"},LevelStatus={not_tried:"not_tried",submitted:"submitted",perfect:"perfect",passed:"passed",attempted:"attempted",review_accepted:"review_accepted",review_rejected:"review_rejected",dots_disabled:"dots_disabled",free_play_complete:"free_play_complete",completed_assessment:"completed_assessment"},SectionLoginType={word:"word",picture:"picture",email:"email",google_classroom:"google_classroom",clever:"clever",lti_v1:"lti_v1"},StudentGradeLevels=["K","1","2","3","4","5","6","7","8","9","10","11","12","Other"],PlGradeValue="pl",PostMilestoneMode={all:"all",successful_runs_and_final_level_only:"successful_runs_and_final_level_only",final_level_only:"final_level_only"},AlwaysPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys","music"],AllPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys","music","applab","gamelab","spritelab"],ConditionallyPublishableProjectTypes=["applab","gamelab"],AbuseConstants={ABUSE_THRESHOLD:15},ErrorSeverityLevels={WARN:2,ERROR:3,FATAL:4},RestrictedPublishProjectTypes=["spritelab"],RubricUnderstandingLevels={EXTENSIVE:3,CONVINCING:2,LIMITED:1,NONE:0},RubricAiEvaluationStatus={QUEUED:0,RUNNING:1,SUCCESS:2,FAILURE:1e3,PII_VIOLATION:1001,PROFANITY_VIOLATION:1002,REQUEST_TOO_LARGE:1003},EmailLinks={PRIVACY_POLICY_URL:"https://code.org/privacy",CONTACT_US_URL:"https://code.org/contact",TOS_URL:"https://code.org/tos",STUDENT_PRIVACY_PLEDGE_URL:"https://studentprivacypledge.org/signatories/",COMMON_SENSE_MEDIA_URL:"https://privacy.commonsense.org/evaluation/code.org",CDO_SUPPORT_MAILTO:"mailto:support@code.org"},ChildAccountComplianceStates={GRACE_PERIOD:"p",LOCKED_OUT:"l",PERMISSION_GRANTED:"g"},CensusConstants={CURRENT_CENSUS_SCHOOL_YEAR:2023},DanceSongManifestFilename="songManifest2024_v2.json",AiInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",OK:"ok",UNKNOWN:"unknown"},AichatErrorType={PROFANITY_MODEL:"profanity_model",PROFANITY_USER:"profanity_user"},AiTutorInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",OK:"ok",UNKNOWN:"unknown"},AiTutorTypes={COMPILATION:"compilation",VALIDATION:"validation",GENERAL_CHAT:"general_chat"},FeaturedProjectStatus={active:"active",bookmarked:"bookmarked",archived:"archived"},FeaturedProjectConstants={MAX_REQUESTS_PER_CATEGORY:15},LmsLinks={INTEGRATION_GUIDE_URL:"https://support.code.org/hc/en-us/articles/23120014459405-Learning-Management-System-LMS-and-Single-Sign-On-SSO-Integrations-and-Support-for-Code-org",INSTALL_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621907533965-Install-Code-org-Integrations-for-your-Learning-Management-System",INSTALL_GUIDE_FOR_CANVAS_URL:"https://support.code.org/hc/en-us/articles/23123273783437-Install-the-Code-org-Integration-for-Canvas",ROSTER_SYNC_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621978654605-Sync-Rosters-with-your-Learning-Management-System",INTEGRATION_EARLY_ACCESS_URL:"https://docs.google.com/forms/d/e/1FAIpQLScjfVR4CZs8Utf5vI4mz3e1q8vdH6RNIgTUWygZXN0oovBSQg/viewform",INTEGRATION_BUG_REPORT_URL:"https://support.code.org/hc/en-us/requests/new?ticket_form_id=14998494738829&tf_23889708=lms_eaf",ADDITIONAL_FEEDBACK_URL:"https://studio.code.org/form/lms_integration_modal_feedback",SUPPORTED_METHODS_URL:"https://github.com/code-dot-org/code-dot-org/blob/staging/docs/lti-integration.md#option-2-manual-entry"},UserTypes={STUDENT:"student",TEACHER:"teacher"}},"./src/generated/curriculum/sharedCourseConstants.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PublishedState=exports.ParticipantAudiencesByType=exports.ParticipantAudience=exports.InstructorAudience=exports.InstructionType=exports.DeviceTypes=exports.DeviceCompatibilityLevels=exports.CurriculumUmbrella=exports.CourseOfferingSchoolSubjects=exports.CourseOfferingMarketingInitiatives=exports.CourseOfferingHeaders=exports.CourseOfferingCurriculumTypes=exports.CourseOfferingCsTopics=void 0;exports.PublishedState={in_development:"in_development",pilot:"pilot",beta:"beta",preview:"preview",stable:"stable",sunsetting:"sunsetting",deprecated:"deprecated"},exports.InstructionType={teacher_led:"teacher_led",self_paced:"self_paced"},exports.ParticipantAudience={facilitator:"facilitator",teacher:"teacher",student:"student"},exports.InstructorAudience={universal_instructor:"universal_instructor",plc_reviewer:"plc_reviewer",facilitator:"facilitator",teacher:"teacher"},exports.CurriculumUmbrella={CSF:"CSF",CSD:"CSD",CSP:"CSP",CSA:"CSA",CSC:"CSC",HOC:"HOC",AI:"AI",CSA_self_paced_pl:"CSA Self Paced PL",CSP_self_paced_pl:"CSP Self Paced PL",CSD_self_paced_pl:"CSD Self Paced PL",CSF_self_paced_pl:"CSF Self Paced PL",CSC_self_paced_pl:"CSC Self Paced PL",student_self_paced:"Student Self Paced Courses",pd_workshop_activity_csf:"PD Workshop Activity CSF",pd_workshop_activity_csd:"PD Workshop Activity CSD",pd_workshop_activity_csp:"PD Workshop Activity CSP",pd_workshop_activity_csa:"PD Workshop Activity CSA",foundations_of_cs:"Foundations of CS",foundations_of_programming:"Foundations of Programming"},exports.CourseOfferingCurriculumTypes={module:"Module",course:"Course",standalone_unit:"Standalone Unit",hoc:"Hour of Code",pl:"Professional Learning"},exports.CourseOfferingHeaders={favorites:"Favorites",labs_and_skills:"Labs and Skills",minecraft:"Minecraft",hello_world:"Hello World",popular_media:"Popular Media",sports:"Sports",express:"Express",csf:"CS Fundamentals",csc:"CS Connections",year_long:"Year Long",csa_labs:"CSA Labs",self_paced:"Self-Paced",teacher_led:"Teacher-Led",collections:"Collections",workshops_k5:"K-5 Workshops",summer_workshops_612:"6-12 Summer Workshops",virtual_academic_year_workshops_612:"6â€“12 Virtual Academic Year Workshops",unsupported:"Unsupported"},exports.CourseOfferingMarketingInitiatives={hoc:"HOC",csc:"CSC",csf:"CSF",csa:"CSA",csp:"CSP",csd:"CSD"},exports.CourseOfferingCsTopics=["art_and_design","app_design","artificial_intelligence","cybersecurity","data","digital_literacy","games_and_animations","internet","physical_computing","web_design","programming"],exports.CourseOfferingSchoolSubjects=["math","science","english_language_arts","history"],exports.DeviceTypes=["computer","chromebook","tablet","mobile","no_device"],exports.DeviceCompatibilityLevels=["ideal","not_recommended","incompatible"],exports.ParticipantAudiencesByType={student:["student"],teacher:["student","teacher"],facilitator:["student","teacher","facilitator"]}},"./src/lib/ui/accounts/constants.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.OAuthSectionTypes=exports.OAuthProviders=void 0;var _utils=__webpack_require__("./src/utils.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");exports.OAuthSectionTypes=(0,_utils.makeEnum)(_sharedConstants.SectionLoginType.google_classroom,_sharedConstants.SectionLoginType.clever,"microsoft_classroom"),exports.OAuthProviders={google:"google_oauth2",microsoft:"microsoft_v2_auth",clever:"clever",facebook:"facebook"}},"./src/templates/teacherDashboard/teacherSectionsRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.assignToSection=exports.__testInterface__=exports.SELECT_SECTION=exports.NO_SECTION=void 0,exports.assignedCourseOffering=function assignedCourseOffering(state){var _getRoot=getRoot(state),sectionBeingEdited=_getRoot.sectionBeingEdited;return _getRoot.courseOfferings[null==sectionBeingEdited?void 0:sectionBeingEdited.courseOfferingId]},exports.cancelImportRosterFlow=exports.cancelEditingSection=exports.beginImportRosterFlow=exports.beginGoogleImportRosterFlow=exports.beginEditingSection=exports.beginCreatingSection=exports.asyncLoadSectionData=exports.asyncLoadCourseOfferings=exports.asyncLoadCoteacherInvite=exports.assignmentPaths=exports.assignmentNames=void 0,exports.default=function teacherSections(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_AUTH_PROVIDERS)return _objectSpread(_objectSpread({},state),{},{providers:action.providers.map((function(provider){return mapProviderToSectionType(provider)}))});if(action.type===SET_PAGE_TYPE)return _objectSpread(_objectSpread({},state),{},{pageType:action.pageType});if(action.type===SET_COURSE_OFFERINGS)return _objectSpread(_objectSpread({},state),{},{courseOfferings:action.courseOfferings,courseOfferingsAreLoaded:!0});if(action.type===SET_AVAILABLE_PARTICIPANT_TYPES)return _objectSpread(_objectSpread({},state),{},{availableParticipantTypes:action.availableParticipantTypes});if(action.type===SET_STUDENT_SECTION){var selectedStudents=(action.students||[]).map((function(student){return studentFromServerStudent(student,action.sectionId)}));return _objectSpread(_objectSpread({},state),{},{selectedStudents})}if(action.type===SET_SECTIONS){var sections=action.sections.map((function(section){return sectionFromServerSection(section)})),selectedSectionId=state.selectedSectionId;1===Object.keys(action.sections).length&&(selectedSectionId=action.sections[0].id),sections.forEach((function(section){var prevSection=state.sections[section.id];prevSection&&Object.keys(section).forEach((function(key){if(void 0===section[key]&&void 0!==prevSection[key])throw new Error("SET_SECTIONS called multiple times in a way that would remove data")}))}));var sectionIds=_lodash.default.uniq(state.sectionIds.concat(sections.map((function(section){return section.id})))),studentSectionIds=sections.filter((function(section){return section.participantType===_sharedCourseConstants.ParticipantAudience.student})).map((function(section){return section.id})),plSectionIds=sections.filter((function(section){return section.participantType!==_sharedCourseConstants.ParticipantAudience.student})).map((function(section){return section.id}));return _objectSpread(_objectSpread({},state),{},{sectionsAreLoaded:!0,selectedSectionId,sectionIds,studentSectionIds,plSectionIds,sections:_objectSpread(_objectSpread({},state.sections),_lodash.default.keyBy(sections,"id"))})}if(action.type===SET_COTEACHER_INVITE)return _objectSpread(_objectSpread({},state),{},{coteacherInvite:action.coteacherInvite});if(action.type===SET_COTEACHER_INVITE_FOR_PL)return _objectSpread(_objectSpread({},state),{},{coteacherInviteForPl:action.coteacherInviteForPl});if(action.type===SELECT_SECTION){var sectionId;return(sectionId=action.sectionId?parseInt(action.sectionId):NO_SECTION)===NO_SECTION||state.sectionIds.includes(parseInt(sectionId,10))||(sectionId=NO_SECTION),_objectSpread(_objectSpread({},state),{},{selectedSectionId:sectionId})}if(action.type===REMOVE_SECTION){var _sectionId=action.sectionId;if(!state.sections[_sectionId])throw new Error("section does not exist");return _objectSpread(_objectSpread({},state),{},{sectionIds:_lodash.default.without(state.sectionIds,_sectionId),studentSectionIds:_lodash.default.without(state.studentSectionIds,_sectionId),plSectionIds:_lodash.default.without(state.plSectionIds,_sectionId),sections:_lodash.default.omit(state.sections,_sectionId)})}if(action.type===TOGGLE_SECTION_HIDDEN){var _sectionId2=action.sectionId;if(!state.sections[_sectionId2])throw new Error("section does not exist");return _objectSpread(_objectSpread({},state),{},{sections:_objectSpread(_objectSpread({},state.sections),{},_defineProperty({},_sectionId2,_objectSpread(_objectSpread({},state.sections[_sectionId2]),{},{hidden:!state.sections[_sectionId2].hidden})))})}if(action.type===SET_SECTION_CODE_REVIEW_EXPIRES_AT){var _sectionId3=action.sectionId,codeReviewExpiresAt=action.codeReviewExpiresAt;if(!state.sections[_sectionId3])throw new Error("section does not exist");return _objectSpread(_objectSpread({},state),{},{sections:_objectSpread(_objectSpread({},state.sections),{},_defineProperty({},_sectionId3,_objectSpread(_objectSpread({},state.sections[_sectionId3]),{},{codeReviewExpiresAt:codeReviewExpiresAt?Date.parse(codeReviewExpiresAt):null})))})}if(action.type===CREATE_SECTION_BEGIN){var initialSectionData=newSectionData(action.participantType);return action.courseOfferingId&&(initialSectionData.courseOfferingId=action.courseOfferingId),action.courseVersionId&&(initialSectionData.courseVersionId=action.courseVersionId),action.unitId&&(initialSectionData.unitId=action.unitId),_objectSpread(_objectSpread({},state),{},{initialCourseId:initialSectionData.courseId,initialUnitId:initialSectionData.unitId,initialCourseOfferingId:initialSectionData.courseOfferingId,initialCourseVersionId:initialSectionData.courseVersionId,initialLoginType:initialSectionData.loginType,sectionBeingEdited:initialSectionData})}if(action.type===EDIT_SECTION_BEGIN){var initialParticipantType=1===state.availableParticipantTypes.length?state.availableParticipantTypes[0]:void 0,_initialSectionData=action.sectionId?_objectSpread({},state.sections[action.sectionId]):newSectionData(initialParticipantType);return _objectSpread(_objectSpread({},state),{},{initialCourseId:_initialSectionData.courseId,initialUnitId:_initialSectionData.unitId,initialCourseOfferingId:_initialSectionData.courseOfferingId,initialCourseVersionId:_initialSectionData.courseVersionId,initialLoginType:_initialSectionData.loginType,sectionBeingEdited:_initialSectionData,showSectionEditDialog:!action.silent})}if(action.type===EDIT_SECTION_PROPERTIES){if(!state.sectionBeingEdited)throw new Error("Cannot edit section properties; no section is currently being edited.");for(var key in action.props)if(!USER_EDITABLE_SECTION_PROPS.includes(key))throw new Error("Cannot edit property ".concat(key,"; it's not allowed."));var loginTypeSettings={},gradeSettings={};action.props.participantType&&action.props.participantType!==_sharedCourseConstants.ParticipantAudience.student&&(loginTypeSettings.loginType=_sharedConstants.SectionLoginType.email,gradeSettings.grades=[_sharedConstants.PlGradeValue]);var lessonExtraSettings={};action.props.unitId&&void 0===action.props.lessonExtras&&(lessonExtraSettings.lessonExtras=!0);var ttsAutoplayEnabledSettings={};return action.props.unitId&&void 0===action.props.ttsAutoplayEnabled&&(ttsAutoplayEnabledSettings.ttsAutoplayEnabled=!1),_objectSpread(_objectSpread({},state),{},{sectionBeingEdited:_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},state.sectionBeingEdited),lessonExtraSettings),ttsAutoplayEnabledSettings),loginTypeSettings),gradeSettings),action.props)})}if(action.type===EDIT_SECTION_CANCEL)return _objectSpread(_objectSpread({},state),{},{sectionBeingEdited:null});if(action.type===EDIT_SECTION_REQUEST)return _objectSpread(_objectSpread({},state),{},{saveInProgress:!0});if(action.type===EDIT_SECTION_SUCCESS){var _section3=sectionFromServerSection(action.serverSection),oldSectionId=action.sectionId,newSection=_section3.id!==oldSectionId,newSectionIds=state.sectionIds;newSection&&(newSectionIds=state.sectionIds.includes(oldSectionId)?state.sectionIds.map((function(id){return id===oldSectionId?_section3.id:id})):[_section3.id].concat(function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(state.sectionIds)));var newSections=_lodash.default.omit(state.sections,oldSectionId);newSections[_section3.id]=_objectSpread(_objectSpread({},state.sections[_section3.id]),_section3);var newStudentSectionIds=Object.values(newSections).filter((function(section){return section.participantType===_sharedCourseConstants.ParticipantAudience.student})).map((function(section){return section.id})),newPlSectionIds=Object.values(newSections).filter((function(section){return section.participantType!==_sharedCourseConstants.ParticipantAudience.student})).map((function(section){return section.id}));_section3.loginType!==state.initialLoginType&&_firehose.default.putRecord({study:"teacher-dashboard",study_group:"edit-section-details",event:"change-login-type",data_json:JSON.stringify({sectionId:_section3.id,initialLoginType:state.initialLoginType,updatedLoginType:_section3.loginType})},{includeUserId:!0});var assignmentData={section_id:_section3.id,section_creation_timestamp:_section3.createdAt,page_name:state.pageType};return _section3.unitId!==state.initialUnitId&&(assignmentData.unit_id=_section3.unitId),_section3.courseId!==state.initialCourseId&&(assignmentData.course_id=_section3.courseId),_section3.courseOfferingId!==state.initialCourseOfferingId&&(assignmentData.course_offering_id=_section3.courseOfferingId),_section3.courseVersionId!==state.initialCourseVersionId&&(assignmentData.course_version_id=_section3.courseVersionId),void 0===assignmentData.unit_id&&void 0===assignmentData.course_id||_firehose.default.putRecord({study:"assignment",study_group:"v1",event:newSection?"create_section":"edit_section_details",data_json:JSON.stringify(assignmentData)},{includeUserId:!0}),_objectSpread(_objectSpread({},state),{},{sectionIds:newSectionIds,sections:newSections,studentSectionIds:newStudentSectionIds,plSectionIds:newPlSectionIds,sectionBeingEdited:null,saveInProgress:!1})}if(action.type===EDIT_SECTION_FAILURE)return _objectSpread(_objectSpread({},state),{},{saveInProgress:!1});if(action.type===ASYNC_LOAD_BEGIN)return _objectSpread(_objectSpread({},state),{},{asyncLoadComplete:!1});if(action.type===ASYNC_LOAD_END)return _objectSpread(_objectSpread({},state),{},{asyncLoadComplete:!0});if(action.type===SET_ROSTER_PROVIDER&&(_constants.OAuthSectionTypes[action.rosterProvider]||action.rosterProvider===_sharedConstants.SectionLoginType.lti_v1))return _objectSpread(_objectSpread({},state),{},{rosterProvider:action.rosterProvider});if(action.type===SET_ROSTER_PROVIDER_NAME)return _objectSpread(_objectSpread({},state),{},{rosterProviderName:action.rosterProviderName});if(action.type===IMPORT_ROSTER_FLOW_BEGIN)return _objectSpread(_objectSpread({},state),{},{isRosterDialogOpen:!0,classrooms:null});if(action.type===IMPORT_ROSTER_FLOW_LIST_LOADED)return _objectSpread(_objectSpread({},state),{},{classrooms:action.classrooms.slice()});if(action.type===IMPORT_ROSTER_FLOW_LIST_LOAD_FAILED)return _objectSpread(_objectSpread({},state),{},{loadError:{status:action.status,message:action.message}});if(action.type===IMPORT_ROSTER_FLOW_CANCEL)return _objectSpread(_objectSpread({},state),{},{isRosterDialogOpen:!1,rosterProvider:null,classrooms:null});if(action.type===IMPORT_ROSTER_REQUEST)return _objectSpread(_objectSpread({},state),{},{classrooms:null});if(action.type===IMPORT_ROSTER_SUCCESS)return _objectSpread(_objectSpread({},state),{},{isRosterDialogOpen:!1,sectionBeingEdited:_objectSpread(_objectSpread({},state.sections[action.sectionId]),{},{hidden:!1})});if(action.type===IMPORT_LTI_ROSTER_SUCCESS)return _objectSpread(_objectSpread({},state),{},{ltiSyncResult:action.results});if(action.type===SET_SHOW_LOCK_SECTION_FIELD)return _objectSpread(_objectSpread({},state),{},{showLockSectionField:action.showLockSectionField});if(action.type===UPDATE_SECTION_AI_TUTOR_ENABLED){var _sectionId4=action.sectionId,aiTutorEnabled=action.aiTutorEnabled;if(!state.sections[_sectionId4])throw new Error("section does not exist");return _objectSpread(_objectSpread({},state),{},{sections:_objectSpread(_objectSpread({},state.sections),{},_defineProperty({},_sectionId4,_objectSpread(_objectSpread({},state.sections[_sectionId4]),{},{aiTutorEnabled})))})}return state},exports.finishEditingSection=exports.editSectionProperties=void 0,exports.getAssignmentName=function getAssignmentName(state,sectionId){var _getRoot3=getRoot(state),sections=_getRoot3.sections,courseOfferings=_getRoot3.courseOfferings;return assignmentNames(courseOfferings,sections[sectionId])[0]},exports.getSectionRows=function getSectionRows(state,sectionIds){var _getRoot2=getRoot(state),sections=_getRoot2.sections,courseOfferings=_getRoot2.courseOfferings,courseOfferingsAreLoaded=_getRoot2.courseOfferingsAreLoaded;return sectionIds.map((function(id){return _objectSpread(_objectSpread({},_lodash.default.pick(sections[id],["id","name","courseVersionName","loginType","loginTypeName","studentCount","code","participantType","grades","providerManaged","hidden"])),{},{assignmentNames:assignmentNames(courseOfferings,sections[id]),assignmentPaths:assignmentPaths(courseOfferings,sections[id]),courseOfferingsAreLoaded})}))},exports.getVisibleSections=function getVisibleSections(state){var allSections=Object.values(getRoot(state).sections);return sortSectionsList(allSections||[]).filter((function(section){return!section.hidden}))},exports.hiddenPlSectionIds=function hiddenPlSectionIds(state){return(state=getRoot(state)).sectionIds.filter((function(id){return state.sections[id].hidden&&state.sections[id].participantType!==_sharedCourseConstants.ParticipantAudience.student}))},exports.hiddenSectionIds=function hiddenSectionIds(state){return(state=getRoot(state)).sectionIds.filter((function(id){return state.sections[id].hidden}))},exports.hiddenStudentSectionIds=function hiddenStudentSectionIds(state){return(state=getRoot(state)).sectionIds.filter((function(id){return state.sections[id].hidden&&state.sections[id].participantType===_sharedCourseConstants.ParticipantAudience.student}))},exports.importOrUpdateRoster=void 0,exports.isAddingSection=isAddingSection,exports.isRosterDialogOpen=isRosterDialogOpen,exports.isSaveInProgress=function isSaveInProgress(state){return getRoot(state).saveInProgress},exports.isSectionProviderManaged=isSectionProviderManaged,exports.ltiSyncResult=function ltiSyncResult(state){return getRoot(state).ltiSyncResult},exports.removeSection=exports.pageTypes=exports.mapProviderToSectionType=void 0,exports.rosterProvider=rosterProvider,exports.rosterProviderName=rosterProviderName,exports.sectionCode=function sectionCode(state,sectionId){return(getRoot(state).sections[sectionId]||{}).code},exports.sectionFromServerSection=void 0,exports.sectionName=function sectionName(state,sectionId){return(getRoot(state).sections[sectionId]||{}).name},exports.sectionProvider=function sectionProvider(state,sectionId){if(isSectionProviderManaged(state,sectionId))return rosterProvider(state);return null},exports.sectionProviderName=function sectionProviderName(state,sectionId){if(isSectionProviderManaged(state,sectionId))return rosterProviderName(state);return null},exports.sectionUnitName=function sectionUnitName(state,sectionId){return(getRoot(state).sections[sectionId]||{}).courseVersionName},exports.sectionsForDropdown=function sectionsForDropdown(state,courseOfferingId,courseVersionId,unitId){return sortedSectionsList(state.sections).map((function(section){return _objectSpread(_objectSpread({},section),{},{isAssigned:null!==unitId&&section.unitId===unitId||null!==courseOfferingId&&section.courseOfferingId===courseOfferingId&&null!==courseVersionId&&section.courseVersionId===courseVersionId})}))},exports.sectionsNameAndId=function sectionsNameAndId(state){return sortSectionsList(state.sectionIds.map((function(id){return{id:parseInt(id,10),name:state.sections[id].name}})))},exports.selectSection=void 0,exports.selectedSection=function selectedSection(state){var selectedSectionId=getRoot(state).selectedSectionId;return selectedSectionId?getRoot(state).sections[selectedSectionId]:null},exports.serverSectionFromSection=serverSectionFromSection,exports.submitEditingSection=exports.studentShape=exports.studentFromServerStudent=exports.sortedSectionsList=exports.sortSectionsList=exports.setStudentsForCurrentSection=exports.setShowLockSectionField=exports.setSections=exports.setSectionCodeReviewExpiresAt=exports.setRosterProviderName=exports.setRosterProvider=exports.setPageType=exports.setCourseOfferings=exports.setCoteacherInviteForPl=exports.setCoteacherInvite=exports.setAvailableParticipantTypes=exports.setAuthProviders=void 0,exports.syncEnabled=function syncEnabled(state,sectionId){return(getRoot(state).sections[sectionId]||{}).syncEnabled},exports.updateSectionAiTutorEnabled=exports.unassignSection=exports.toggleSectionHidden=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_sharedCourseConstants=__webpack_require__("./src/generated/curriculum/sharedCourseConstants.js"),_constants=__webpack_require__("./src/lib/ui/accounts/constants.js"),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var USER_EDITABLE_SECTION_PROPS=["name","loginType","lessonExtras","pairingAllowed","ttsAutoplayEnabled","participantType","courseId","courseOfferingId","courseVersionId","unitId","grades","hidden","restrictSection","codeReviewExpiresAt","aiTutorEnabled"],PENDING_NEW_SECTION_ID=-1,NO_SECTION=exports.NO_SECTION=null,urlByProvider=_defineProperty(_defineProperty({},_constants.OAuthSectionTypes.google_classroom,"/dashboardapi/google_classrooms"),_constants.OAuthSectionTypes.clever,"/dashboardapi/clever_classrooms"),importUrlByProvider=_defineProperty(_defineProperty(_defineProperty({},_constants.OAuthSectionTypes.google_classroom,"/dashboardapi/import_google_classroom"),_constants.OAuthSectionTypes.clever,"/dashboardapi/import_clever_classroom"),_sharedConstants.SectionLoginType.lti_v1,"/lti/v1/sync_course"),SET_COURSE_OFFERINGS="teacherDashboard/SET_COURSE_OFFERINGS",SET_AVAILABLE_PARTICIPANT_TYPES="teacherDashboard/SET_AVAILABLE_PARTICIPANT_TYPES",SET_STUDENT_SECTION="teacherDashboard/SET_STUDENT_SECTION",SET_PAGE_TYPE="teacherDashboard/SET_PAGE_TYPE",SET_SHOW_LOCK_SECTION_FIELD="teacherDashboard/SET_SHOW_LOCK_SECTION_FIELD",SET_AUTH_PROVIDERS="teacherDashboard/SET_AUTH_PROVIDERS",SET_SECTIONS="teacherDashboard/SET_SECTIONS",SET_COTEACHER_INVITE="teacherDashboard/SET_COTEACHER_INVITE",SET_COTEACHER_INVITE_FOR_PL="teacherDashboard/SET_COTEACHER_INVITE_FOR_PL",SELECT_SECTION=exports.SELECT_SECTION="teacherDashboard/SELECT_SECTION",REMOVE_SECTION="teacherDashboard/REMOVE_SECTION",TOGGLE_SECTION_HIDDEN="teacherSections/TOGGLE_SECTION_HIDDEN",CREATE_SECTION_BEGIN="teacherDashboard/CREATE_SECTION_BEGIN",EDIT_SECTION_BEGIN="teacherDashboard/EDIT_SECTION_BEGIN",EDIT_SECTION_PROPERTIES="teacherDashboard/EDIT_SECTION_PROPERTIES",EDIT_SECTION_CANCEL="teacherDashboard/EDIT_SECTION_CANCEL",EDIT_SECTION_REQUEST="teacherDashboard/EDIT_SECTION_REQUEST",EDIT_SECTION_SUCCESS="teacherDashboard/EDIT_SECTION_SUCCESS",EDIT_SECTION_FAILURE="teacherDashboard/EDIT_SECTION_FAILURE",SET_SECTION_CODE_REVIEW_EXPIRES_AT="teacherSections/SET_SECTION_CODE_REVIEW_EXPIRES_AT",ASYNC_LOAD_BEGIN="teacherSections/ASYNC_LOAD_BEGIN",ASYNC_LOAD_END="teacherSections/ASYNC_LOAD_END",SET_ROSTER_PROVIDER="teacherSections/SET_ROSTER_PROVIDER",SET_ROSTER_PROVIDER_NAME="teacherSections/SET_ROSTER_PROVIDER_NAME",IMPORT_ROSTER_FLOW_BEGIN="teacherSections/IMPORT_ROSTER_FLOW_BEGIN",IMPORT_ROSTER_FLOW_LIST_LOADED="teacherSections/IMPORT_ROSTER_FLOW_LIST_LOADED",IMPORT_ROSTER_FLOW_LIST_LOAD_FAILED="teacherSections/IMPORT_ROSTER_FLOW_LIST_LOAD_FAILED",IMPORT_ROSTER_FLOW_CANCEL="teacherSections/IMPORT_ROSTER_FLOW_CANCEL",IMPORT_ROSTER_REQUEST="teacherSections/IMPORT_ROSTER_REQUEST",IMPORT_ROSTER_SUCCESS="teacherSections/IMPORT_ROSTER_SUCCESS",IMPORT_LTI_ROSTER_SUCCESS="teacherSections/IMPORT_LTI_ROSTER_SUCCESS",UPDATE_SECTION_AI_TUTOR_ENABLED="teacherSections/UPDATE_SECTION_AI_TUTOR_ENABLED",setRosterProvider=(exports.__testInterface__={EDIT_SECTION_REQUEST,EDIT_SECTION_SUCCESS,IMPORT_ROSTER_FLOW_BEGIN,IMPORT_ROSTER_FLOW_LIST_LOADED,PENDING_NEW_SECTION_ID,USER_EDITABLE_SECTION_PROPS},exports.setAuthProviders=function setAuthProviders(providers){return{type:SET_AUTH_PROVIDERS,providers}},exports.setRosterProvider=function setRosterProvider(rosterProvider){return{type:SET_ROSTER_PROVIDER,rosterProvider}}),setCourseOfferings=(exports.setRosterProviderName=function setRosterProviderName(rosterProviderName){return{type:SET_ROSTER_PROVIDER_NAME,rosterProviderName}},exports.setCourseOfferings=function setCourseOfferings(courseOfferings){return{type:SET_COURSE_OFFERINGS,courseOfferings}}),setAvailableParticipantTypes=exports.setAvailableParticipantTypes=function setAvailableParticipantTypes(availableParticipantTypes){return{type:SET_AVAILABLE_PARTICIPANT_TYPES,availableParticipantTypes}},setStudentsForCurrentSection=exports.setStudentsForCurrentSection=function setStudentsForCurrentSection(sectionId,studentInfo){return{type:SET_STUDENT_SECTION,sectionId,students:studentInfo}},setSections=(exports.setPageType=function setPageType(pageType){return{type:SET_PAGE_TYPE,pageType}},exports.setShowLockSectionField=function setShowLockSectionField(showLockSectionField){return{type:SET_SHOW_LOCK_SECTION_FIELD,showLockSectionField}},exports.setSectionCodeReviewExpiresAt=function setSectionCodeReviewExpiresAt(sectionId,codeReviewExpiresAt){return{type:SET_SECTION_CODE_REVIEW_EXPIRES_AT,sectionId,codeReviewExpiresAt}},exports.updateSectionAiTutorEnabled=function updateSectionAiTutorEnabled(sectionId,aiTutorEnabled){return{type:UPDATE_SECTION_AI_TUTOR_ENABLED,sectionId,aiTutorEnabled}},exports.pageTypes={level:"level",scriptOverview:"script_overview",courseOverview:"course_overview",lessonExtras:"lesson_extras",homepage:"homepage"},exports.setSections=function setSections(sections){return{type:SET_SECTIONS,sections}});exports.selectSection=function selectSection(sectionId){return{type:SELECT_SECTION,sectionId}},exports.removeSection=function removeSection(sectionId){return{type:REMOVE_SECTION,sectionId}},exports.toggleSectionHidden=function toggleSectionHidden(sectionId){return function(dispatch,getState){dispatch(beginEditingSection(sectionId,!0));var currentlyHidden=getRoot(getState()).sections[sectionId].hidden;return dispatch(editSectionProperties({hidden:!currentlyHidden})),_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"toggleSectionHidden",event:currentlyHidden?"restoreSection":"archiveSection",data_json:JSON.stringify({section_id:sectionId})}),dispatch(finishEditingSection())}};function removeNullValues(key,val){if(null!=val)return val}exports.assignToSection=function assignToSection(sectionId,courseId,courseOfferingId,courseVersionId,unitId,pageType){return _firehose.default.putRecord({study:"assignment",event:"course-assigned-to-section",data_json:JSON.stringify({sectionId,unitId,courseId,date:new Date},removeNullValues)},{includeUserId:!0}),function(dispatch,getState){var section=getState().teacherSections.sections[sectionId];return(courseOfferingId&&section.courseOfferingId!==courseOfferingId||courseVersionId&&section.courseVersionId!==courseVersionId||unitId&&section.unitId!==unitId)&&_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.CURRICULUM_ASSIGNED,{sectionName:section.name,sectionId,sectionLoginType:section.loginType,previousUnitId:section.unitId,previousCourseId:section.courseOfferingId,previousCourseVersionId:section.courseVersionId,newUnitId:unitId,newCourseId:courseOfferingId,newCourseVersionId:courseVersionId}),dispatch(beginEditingSection(sectionId,!0)),dispatch(editSectionProperties({courseId,courseOfferingId,courseVersionId,unitId})),dispatch(finishEditingSection(pageType))}},exports.unassignSection=function unassignSection(sectionId,location){return function(dispatch,getState){dispatch(beginEditingSection(sectionId,!0));var _getState$teacherSect=getState().teacherSections,initialCourseId=_getState$teacherSect.initialCourseId,initialUnitId=_getState$teacherSect.initialUnitId;return dispatch(editSectionProperties({courseId:null,courseOfferingId:null,courseVersionId:null,unitId:null})),_firehose.default.putRecord({study:"assignment",event:"course-unassigned-from-section",data_json:JSON.stringify({sectionId,scriptId:initialUnitId,courseId:initialCourseId,location,date:new Date},removeNullValues)},{includeUserId:!0}),dispatch(finishEditingSection())}},exports.beginCreatingSection=function beginCreatingSection(courseOfferingId,courseVersionId,unitId,participantType){return{type:CREATE_SECTION_BEGIN,courseOfferingId,courseVersionId,unitId,participantType}};var beginEditingSection=exports.beginEditingSection=function beginEditingSection(){return{type:EDIT_SECTION_BEGIN,sectionId:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,silent:arguments.length>1&&void 0!==arguments[1]&&arguments[1]}},editSectionProperties=exports.editSectionProperties=function editSectionProperties(props){return{type:EDIT_SECTION_PROPERTIES,props}},submitEditingSection=(exports.cancelEditingSection=function cancelEditingSection(){return{type:EDIT_SECTION_CANCEL}},exports.submitEditingSection=function submitEditingSection(dispatch,getState){dispatch({type:EDIT_SECTION_REQUEST});var state=getState().teacherSections,section=state.sectionBeingEdited,dataUrl=isAddingSection(state)?"/dashboardapi/sections":"/dashboardapi/sections/".concat(section.id),httpMethod=isAddingSection(state)?"POST":"PATCH";return _jquery.default.ajax({url:dataUrl,method:httpMethod,contentType:"application/json;charset=UTF-8",data:JSON.stringify(serverSectionFromSection(section))})}),finishEditingSection=exports.finishEditingSection=function finishEditingSection(){return function(dispatch,getState){var section=getState().teacherSections.sectionBeingEdited;return new Promise((function(resolve,reject){submitEditingSection(dispatch,getState).done((function(result){dispatch({type:EDIT_SECTION_SUCCESS,sectionId:section.id,serverSection:result}),resolve(result)})).fail((function(jqXhr,status){dispatch({type:EDIT_SECTION_FAILURE}),reject(status)}))}))}},asyncLoadSectionData=exports.asyncLoadSectionData=function asyncLoadSectionData(id){return function(dispatch){dispatch({type:ASYNC_LOAD_BEGIN});var promises=[fetchJSON("/dashboardapi/sections").then((function(sections){return dispatch(setSections(sections))})),fetchJSON("/dashboardapi/sections/valid_course_offerings").then((function(offerings){return dispatch(setCourseOfferings(offerings))})),fetchJSON("/dashboardapi/sections/available_participant_types").then((function(participantTypes){return dispatch(setAvailableParticipantTypes(participantTypes.availableParticipantTypes))}))];return id&&promises.push(fetchJSON("/dashboardapi/sections/".concat(id,"/students")).then((function(students){return dispatch(setStudentsForCurrentSection(id,students))}))),Promise.all(promises).catch((function(err){console.error(err.message)})).then((function(){dispatch({type:ASYNC_LOAD_END})}))}},setCoteacherInvite=(exports.asyncLoadCourseOfferings=function asyncLoadCourseOfferings(){return function(dispatch){fetchJSON("/dashboardapi/sections/valid_course_offerings").then((function(offerings){return dispatch(setCourseOfferings(offerings))})).catch((function(err){console.error(err.message)}))}},exports.setCoteacherInvite=function setCoteacherInvite(coteacherInvite){return{type:SET_COTEACHER_INVITE,coteacherInvite}}),setCoteacherInviteForPl=exports.setCoteacherInviteForPl=function setCoteacherInviteForPl(coteacherInviteForPl){return{type:SET_COTEACHER_INVITE_FOR_PL,coteacherInviteForPl}};exports.asyncLoadCoteacherInvite=function asyncLoadCoteacherInvite(){return function(dispatch){fetchJSON("/api/v1/section_instructors").then((function(sectionInstructors){var coteacherInviteForPl=sectionInstructors.find((function(instructorInvite){return"invited"===instructorInvite.status&&"student"!==instructorInvite.participant_type})),coteacherInviteForClassrooms=sectionInstructors.find((function(instructorInvite){return"invited"===instructorInvite.status&&"student"===instructorInvite.participant_type}));dispatch(setCoteacherInvite(coteacherInviteForClassrooms)),dispatch(setCoteacherInviteForPl(coteacherInviteForPl))})).catch((function(err){console.error(err.message)}))}};function fetchJSON(url,params){return new Promise((function(resolve,reject){_jquery.default.getJSON(url,params).done(resolve).fail((function(jqxhr){return reject(new Error("\n        url: ".concat(url,"\n        status: ").concat(jqxhr.status,"\n        statusText: ").concat(jqxhr.statusText,"\n        responseText: ").concat(jqxhr.responseText,"\n      ")))}))}))}var beginImportRosterFlow=exports.beginImportRosterFlow=function beginImportRosterFlow(){return function(dispatch,getState){var state=getState(),provider=getRoot(state).rosterProvider;return provider?isRosterDialogOpen(state)?Promise.resolve():(dispatch({type:IMPORT_ROSTER_FLOW_BEGIN}),new Promise((function(resolve,reject){_jquery.default.ajax(urlByProvider[provider]).success((function(response){dispatch({type:IMPORT_ROSTER_FLOW_LIST_LOADED,classrooms:response.courses||[]}),resolve()})).fail((function(result){var message=result.responseJSON?result.responseJSON.error:"Unknown error.";dispatch({type:IMPORT_ROSTER_FLOW_LIST_LOAD_FAILED,status:result.status,message}),reject(new Error(message))}))}))):Promise.reject(new Error("Unable to begin import roster flow without a provider"))}},initialState=(exports.cancelImportRosterFlow=function cancelImportRosterFlow(){return{type:IMPORT_ROSTER_FLOW_CANCEL}},exports.beginGoogleImportRosterFlow=function beginGoogleImportRosterFlow(){return function(dispatch){dispatch(setRosterProvider(_constants.OAuthSectionTypes.google_classroom)),dispatch(beginImportRosterFlow())}},exports.importOrUpdateRoster=function importOrUpdateRoster(courseId,courseName){return function(dispatch,getState){var sectionId,provider=getRoot(getState()).rosterProvider,importSectionUrl=importUrlByProvider[provider];return dispatch({type:IMPORT_ROSTER_REQUEST}),provider===_sharedConstants.SectionLoginType.lti_v1?fetch("".concat(importSectionUrl,"?section_code=").concat(courseId),{headers:{Accept:"application/json"}}).then((function(response){return response.json()})).then((function(results){return dispatch({type:IMPORT_LTI_ROSTER_SUCCESS,sectionId,results})})):fetchJSON(importSectionUrl,{courseId,courseName}).then((function(newSection){return sectionId=newSection.id})).then((function(){return dispatch(asyncLoadSectionData())})).then((function(){return dispatch({type:IMPORT_ROSTER_SUCCESS,sectionId})}))}},{nextTempId:-1,studioUrl:"",providers:[],sectionIds:[],studentSectionIds:[],plSectionIds:[],selectedSectionId:NO_SECTION,courseOfferings:{},courseOfferingsAreLoaded:!1,availableParticipantTypes:[],sections:{},selectedStudents:[],sectionsAreLoaded:!1,sectionBeingEdited:null,showSectionEditDialog:!1,saveInProgress:!1,asyncLoadComplete:!1,isRosterDialogOpen:!1,rosterProvider:null,classrooms:null,loadError:null,pageType:"",showLockSectionField:null,ltiSyncResult:null});function newSectionData(participantType){return{id:PENDING_NEW_SECTION_ID,name:"",loginType:void 0,grades:[""],providerManaged:!1,lessonExtras:!0,pairingAllowed:!0,ttsAutoplayEnabled:!1,sharingDisabled:!1,studentCount:0,participantType,code:"",courseId:null,courseOfferingId:null,courseVersionId:null,unitId:null,hidden:!1,restrictSection:!1,aiTutorEnabled:!1}}var mapProviderToSectionType=exports.mapProviderToSectionType=function mapProviderToSectionType(provider){return"google_oauth2"===provider?_constants.OAuthSectionTypes.google_classroom:provider};function getRoot(state){return state.teacherSections}function isRosterDialogOpen(state){return getRoot(state).isRosterDialogOpen}function rosterProvider(state){return getRoot(state).rosterProvider}function rosterProviderName(state){return getRoot(state).rosterProviderName}function isSectionProviderManaged(state,sectionId){return!!(getRoot(state).sections[sectionId]||{}).providerManaged}var sectionFromServerSection=exports.sectionFromServerSection=function sectionFromServerSection(serverSection){return{id:serverSection.id,name:serverSection.name,courseVersionName:serverSection.courseVersionName,createdAt:serverSection.createdAt,loginType:serverSection.login_type,loginTypeName:serverSection.login_type_name,grades:serverSection.grades,providerManaged:serverSection.providerManaged||!1,lessonExtras:serverSection.lesson_extras,pairingAllowed:serverSection.pairing_allowed,ttsAutoplayEnabled:serverSection.tts_autoplay_enabled,sharingDisabled:serverSection.sharing_disabled,studentCount:serverSection.studentCount,code:serverSection.code,courseOfferingId:serverSection.course_offering_id,courseVersionId:serverSection.course_version_id,unitId:serverSection.unit_id,courseId:serverSection.course_id,hidden:serverSection.hidden,restrictSection:serverSection.restrict_section,postMilestoneDisabled:serverSection.post_milestone_disabled,codeReviewExpiresAt:serverSection.code_review_expires_at?Date.parse(serverSection.code_review_expires_at):null,isAssignedCSA:serverSection.is_assigned_csa,participantType:serverSection.participant_type,sectionInstructors:serverSection.section_instructors,syncEnabled:serverSection.sync_enabled,aiTutorEnabled:serverSection.ai_tutor_enabled}},studentFromServerStudent=exports.studentFromServerStudent=function studentFromServerStudent(serverStudent,sectionId){return{sectionId,id:serverStudent.id,name:serverStudent.name,familyName:serverStudent.family_name,sharingDisabled:serverStudent.sharing_disabled,secretPicturePath:serverStudent.secret_picture_path,secretPictureName:serverStudent.secret_picture_name,secretWords:serverStudent.secret_words,userType:serverStudent.user_type}};function serverSectionFromSection(section){return _objectSpread(_objectSpread({},section),{},{login_type:section.loginType,lesson_extras:section.lessonExtras,pairing_allowed:section.pairingAllowed,tts_autoplay_enabled:section.ttsAutoplayEnabled,sharing_disabled:section.sharingDisabled,course_offering_id:section.courseOfferingId,course_version_id:section.courseVersionId,unit_id:section.unitId,course_id:section.courseId,restrict_section:section.restrictSection,participant_type:section.participantType,ai_tutor_enabled:section.aiTutorEnabled})}var assignmentsForSection=function assignmentsForSection(courseOfferings,section){var assignments=[];if(section.courseOfferingId&&section.courseVersionId){var _courseOfferings$sect,courseVersion=null===(_courseOfferings$sect=courseOfferings[section.courseOfferingId])||void 0===_courseOfferings$sect?void 0:_courseOfferings$sect.course_versions[section.courseVersionId];courseVersion&&(assignments.push(courseVersion),section.unitId&&"UnitGroup"===courseVersion.type&&courseVersion.units[section.unitId]&&assignments.push(courseVersion.units[section.unitId]))}return assignments},assignmentNames=exports.assignmentNames=function assignmentNames(courseOfferings,section){return assignmentsForSection(courseOfferings,section).map((function(assignment){return assignment?assignment.name:""}))},assignmentPaths=exports.assignmentPaths=function assignmentPaths(courseOfferings,section){return assignmentsForSection(courseOfferings,section).map((function(assignment){return assignment?assignment.path:""}))};function isAddingSection(state){return!!(state.sectionBeingEdited&&state.sectionBeingEdited.id<0)}var sortedSectionsList=exports.sortedSectionsList=function sortedSectionsList(sectionsObject){return sortSectionsList(Object.values(sectionsObject))},sortSectionsList=exports.sortSectionsList=function sortSectionsList(sectionsList){return sectionsList.sort((function(a,b){return b.id-a.id}))};exports.studentShape=_propTypes.default.shape({sectionId:_propTypes.default.number,id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,familyName:_propTypes.default.string,sharingDisabled:_propTypes.default.bool,secretPicturePath:_propTypes.default.string,secretWords:_propTypes.default.string})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,