/*! For license information please see templates-certificates-petition-PetitionCallToAction-story.d4b0001f.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3498],{"./src/lib/util/urlHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaTagDescription=exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION=exports.ADD_A_PERSONAL_LOGIN_HELP_URL=void 0,exports.pegasus=function pegasus(relativeUrl){if(window.dashboard&&window.dashboard.CODE_ORG_URL)return window.dashboard.CODE_ORG_URL+relativeUrl;return relativeUrl},exports.setPegasusOrigin=function setPegasusOrigin(origin){window.dashboard=window.dashboard||{},window.dashboard.CODE_ORG_URL=origin},exports.setStudioOrigin=function setStudioOrigin(origin){window.pegasus=window.pegasus||{},window.pegasus.STUDIO_URL=origin},exports.studio=function studio(relativeUrl){if(window.pegasus&&window.pegasus.STUDIO_URL)return window.pegasus.STUDIO_URL+relativeUrl;return relativeUrl};var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}exports.metaTagDescription=_lodash.default.memoize((function(relativeUrl){return fetch(relativeUrl).then((function(response){return Promise.all([response.status,response.text()])})).then((function(_ref){var _ref2=_slicedToArray(_ref,2),status=_ref2[0],text=_ref2[1];return status<200||status>=300?relativeUrl:(0,_jquery.default)(text).filter("meta[name='description']").attr("content")||relativeUrl})).catch((function(error){return relativeUrl}))})),exports.ADD_A_PERSONAL_LOGIN_HELP_URL="https://support.code.org/hc/en-us/articles/115001475131-Adding-a-personal-login-to-a-teacher-created-account",exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION="https://support.code.org/hc/en-us/articles/360015983631"},"./src/templates/certificates/petition/ControlledFieldGroup.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactBootstrap=__webpack_require__("./node_modules/react-bootstrap/es/index.js"),_excluded=["children","componentClass","helpText","id","isErrored","label"],_excluded2=["id","placeholderOrLabel","componentClass"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var stylingForComponent=function stylingForComponent(componentClass){return"select"===componentClass?"dropdown":"grey_input"},FieldGroup=function FieldGroup(_ref){var children=_ref.children,componentClass=_ref.componentClass,helpText=_ref.helpText,id=_ref.id,isErrored=_ref.isErrored,label=_ref.label,props=_objectWithoutProperties(_ref,_excluded);return _react.default.createElement(_reactBootstrap.FormGroup,{controlId:id},label&&_react.default.createElement("span",{className:"dropdown-label"},label),_react.default.createElement(_reactBootstrap.FormControl,_extends({componentClass,className:(0,_classnames.default)("field",isErrored?"has-error":"",stylingForComponent(componentClass))},props),children),helpText&&_react.default.createElement(_reactBootstrap.HelpBlock,{className:(0,_classnames.default)("help",stylingForComponent(componentClass))},helpText))};FieldGroup.propTypes={children:_propTypes.default.node,componentClass:_propTypes.default.string,helpText:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.node]),id:_propTypes.default.string.isRequired,isErrored:_propTypes.default.bool,label:_propTypes.default.string};var ControlledFieldGroup=function ControlledFieldGroup(_ref2){var id=_ref2.id,placeholderOrLabel=_ref2.placeholderOrLabel,componentClass=_ref2.componentClass,props=_objectWithoutProperties(_ref2,_excluded2),overlappingProps={id,name:id,key:id};return"select"===componentClass?_react.default.createElement(FieldGroup,_extends({},overlappingProps,{label:placeholderOrLabel,componentClass},props)):_react.default.createElement(FieldGroup,_extends({},overlappingProps,{placeholder:placeholderOrLabel,type:"text"},props))};ControlledFieldGroup.propTypes={id:_propTypes.default.string.isRequired,placeholderOrLabel:_propTypes.default.string.isRequired,componentClass:_propTypes.default.string,onChange:_propTypes.default.func.isRequired,value:_propTypes.default.string.isRequired};exports.default=ControlledFieldGroup;module.exports=exports.default},"./src/templates/certificates/petition/PetitionCallToAction.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_PetitionForm=_interopRequireDefault(__webpack_require__("./src/templates/certificates/petition/PetitionForm.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}__webpack_require__("./style/code-studio/petition.scss");exports.default=function PetitionCallToAction(props){return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement("div",{id:"petition-block",className:"petition-block"},_react.default.createElement("h1",{id:"petition-message",className:"petition-message"},_locale.default.petitionMessage()),_react.default.createElement("h2",{id:"sign-message",className:"petition-sign-message"},_locale.default.petitionSignMessage()),_react.default.createElement(_PetitionForm.default,props)))};module.exports=exports.default},"./src/templates/certificates/petition/PetitionForm.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=__webpack_require__("./node_modules/lodash/lodash.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactBootstrap=__webpack_require__("./node_modules/react-bootstrap/es/index.js"),_urlHelpers=__webpack_require__("./src/lib/util/urlHelpers.js"),_ControlledFieldGroup=_interopRequireDefault(__webpack_require__("./src/templates/certificates/petition/ControlledFieldGroup.jsx")),_petitionHelpers=__webpack_require__("./src/templates/certificates/petition/petitionHelpers.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var PetitionForm=function PetitionForm(_ref){_ref.tutorial;var _useState2=_slicedToArray((0,_react.useState)((0,_lodash.mapValues)(_petitionHelpers.keyValidation,(function(){return""}))),2),data=_useState2[0],setData=_useState2[1],_useState4=_slicedToArray((0,_react.useState)([]),2),invalidFields=_useState4[0],setInvalidFields=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(""),2),errorMessage=_useState6[0],setErrorMessage=_useState6[1],handleChange=(0,_react.useCallback)((function(e){e.persist(),setData((function(data){return _objectSpread(_objectSpread({},data),{},_defineProperty({},e.target.name,e.target.value))})),setInvalidFields((0,_lodash.without)(invalidFields,e.target.name))}),[invalidFields]),handleSubmit=(0,_react.useCallback)((function(e){var _find;e.preventDefault();var sanitizedData={};Object.keys(data).forEach((function(field){sanitizedData="string"==typeof data[field]?_objectSpread(_objectSpread({},sanitizedData),{},_defineProperty({},field,data[field].trim())):_objectSpread(_objectSpread({},sanitizedData),{},_defineProperty({},field,data[field]))})),sanitizedData.role_s=(null===(_find=(0,_lodash.find)(_petitionHelpers.professionOptions,{text:data.role_s}))||void 0===_find?void 0:_find.dataString)||"other";var currentInvalidFields=(0,_petitionHelpers.getInvalidFields)(sanitizedData);0!==currentInvalidFields.length?(setInvalidFields(currentInvalidFields),setErrorMessage((0,_petitionHelpers.getErrorMessage)(sanitizedData))):(setErrorMessage(""),sendDataToEndpoint((0,_petitionHelpers.getAgeSafeData)(sanitizedData)))}),[data]),sendDataToEndpoint=function sendDataToEndpoint(data){_jquery.default.ajax({url:"/v2/forms/Petition",type:"post",contentType:"application/json; charset=UTF-8",data:JSON.stringify(data)}).done((function handleSuccessfulSubmit(){window.location.href=(0,_urlHelpers.pegasus)("/promote/thanks")})).fail((function handleFailedSubmit(){setErrorMessage(_locale.default.formServerError())}))};return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement("form",{id:"petition-form",className:"petition-form",onSubmit:handleSubmit},_react.default.createElement("div",{className:"petition-space"},errorMessage),_react.default.createElement(_ControlledFieldGroup.default,{id:"name",name:"name_s",placeholderOrLabel:_locale.default.name(),isErrored:invalidFields.includes("name_s"),onChange:handleChange,value:data.name_s||""}),_react.default.createElement(_ControlledFieldGroup.default,{id:"email",name:"email_s",placeholderOrLabel:_locale.default.email(),isErrored:invalidFields.includes("email_s"),helpText:_locale.default.usedForInfrequentUpdates(),onChange:handleChange,value:data.email_s||""}),_react.default.createElement(_ControlledFieldGroup.default,{id:"zip-or-country",name:"zip_code_or_country_s",placeholderOrLabel:_locale.default.zipOrCountry(),isErrored:invalidFields.includes("zip_code_or_country_s"),helpText:_locale.default.enterCountry(),onChange:handleChange,value:data.zip_code_or_country_s||""}),_react.default.createElement(_ControlledFieldGroup.default,{id:"age",name:"age_i",placeholderOrLabel:_locale.default.age(),isErrored:invalidFields.includes("age_i"),helpText:_react.default.createElement("a",{href:(0,_urlHelpers.pegasus)("/privacy")},_locale.default.privacyPracticesForChildren()),componentClass:"select",onChange:handleChange,value:data.age_i||""},["-"].concat(_toConsumableArray((0,_lodash.range)(1,101))).map((function(age,index){return _react.default.createElement("option",{key:index,value:age},age)}))),_react.default.createElement(_ControlledFieldGroup.default,{id:"profession",name:"role_s",placeholderOrLabel:_locale.default.iAmA(),isErrored:invalidFields.includes("role_s"),componentClass:"select",onChange:handleChange,value:data.role_s||""},_petitionHelpers.professionOptions.map((function(_ref2){var text=_ref2.text;return _react.default.createElement("option",{key:text,value:text},text)}))),_react.default.createElement(_reactBootstrap.Button,{className:"petition-button",bsStyle:"primary",key:"submit",id:"submit",type:"submit"},_locale.default.iAgree())))};PetitionForm.propTypes={tutorial:_propTypes.default.string};exports.default=PetitionForm;module.exports=exports.default},"./src/templates/certificates/petition/petitionHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.professionOptions=exports.keyValidation=exports.getInvalidFields=exports.getErrorMessage=exports.getAgeSafeData=void 0;var _lodash=__webpack_require__("./node_modules/lodash/lodash.js"),_formatValidation=__webpack_require__("./src/util/formatValidation.js"),_locale=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/util/locale-do-not-import.js"));var keyValidation=exports.keyValidation={name_s:{isValid:function isValid(value){return!!value}},email_s:{isValid:_formatValidation.isEmail},zip_code_or_country_s:{isValid:function isValid(){return!0}},age_i:{isValid:_formatValidation.isInt},role_s:{isValid:function isValid(){return!0}}},getInvalidFields=exports.getInvalidFields=function getInvalidFields(data){if(!Object.keys(keyValidation).every((function(key){return(0,_lodash.has)(data,key)})))throw new Error("The data must have keys from all fields in keyValidation");var invalidFields=[];return(0,_lodash.forEach)(data,(function(value,key){keyValidation[key]&&!keyValidation[key].isValid(value)&&invalidFields.push(key)})),invalidFields};exports.getErrorMessage=function getErrorMessage(data){var invalidFields=getInvalidFields(data);return 0===invalidFields.length?"":1===invalidFields.length?_locale.default.formErrorBelow():_locale.default.formErrorsBelow()},exports.getAgeSafeData=function getAgeSafeData(data){return data.age_i<16?(0,_lodash.merge)(data,{email_s:"anonymous@code.org",name_s:""}):data},exports.professionOptions=[{text:"-",dataString:"other"},{text:_locale.default.student(),dataString:"student"},{text:_locale.default.parent(),dataString:"parent"},{text:_locale.default.educator(),dataString:"educator"},{text:_locale.default.administrator(),dataString:"administrator"},{text:_locale.default.softwareEngineer(),dataString:"engineer"},{text:_locale.default.noneOfTheAbove(),dataString:"other"}]},"./src/util/formatValidation.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isZipCode=exports.isPercent=exports.isInt=exports.isEmail=void 0;var EMAIL_REGEX=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ZIP_CODE_REGEX=(exports.isEmail=function isEmail(address){if(!address||""===address.trim())return!1;if(!EMAIL_REGEX.test(address))return!1;var domain=address.split("@")[1];if(!domain)return!1;var domainParts=domain.split(".");return!(domainParts.length<2)&&!domainParts.includes("")},/^\d{5}([\W-]?\d{4})?$/);exports.isZipCode=function isZipCode(value){return ZIP_CODE_REGEX.test(value)},exports.isInt=function isInt(value){var newValue=value.replace(/,/g,"");return parseInt(newValue,10).toString()===newValue},exports.isPercent=function isPercent(value){var percent=parseFloat(value);return 0<=percent&&percent<=100}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./style/code-studio/petition.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'.petition-block{display:flex;flex-flow:column wrap;text-align:center;background-color:#fff;padding:10px}.petition-block input.field,.petition-block select.field{background-color:#e2e4e3;color:#595959;padding:5px;border-width:1px;margin:0}.petition-block input.field:focus,.petition-block select.field:focus{border-color:#66afe9;outline:0;box-shadow:0 0 8px #66afe9}.petition-block input.has-error,.petition-block select.has-error{border-color:#a94442}.petition-block input.has-error:focus,.petition-block select.has-error:focus{box-shadow:0 0 6px #ce8483;border-color:#843534}.petition-block input.grey_input{width:150px}.petition-block span.grey_input{width:160px}.petition-block select.dropdown{width:93px}.petition-block span.dropdown{width:130px}.petition-block .dropdown-label{margin:0 4px 0 0;color:#5b6770;width:100px;font-size:14px;vertical-align:middle}.petition-block .help,.petition-block .help a,.petition-block .help a:hover{font-size:12px;line-height:18px;margin:10px 0 0 0;text-decoration:none;color:#5b6770}.petition-message{font-family:"Metropolis","Noto Sans","Noto Sans Math","Noto Sans Arabic","Noto Sans Armenian","Noto Sans Bengali","Noto Sans SC","Noto Sans TC","Noto Sans Devanagari","Noto Sans Georgian","Noto Sans Hebrew","Noto Sans JP","Noto Sans Kannada","Noto Sans Khmer","Noto Sans KR","Noto Sans Myanmar","Noto Sans Sinhala","Noto Sans Tamil","Noto Sans Telugu","Noto Sans Thai","Noto Sans Thaana",sans-serif;font-weight:600;font-style:normal;margin:0;font-size:21px;line-height:28px;color:#5b6770}.petition-sign-message{font-family:"Metropolis","Noto Sans","Noto Sans Math","Noto Sans Arabic","Noto Sans Armenian","Noto Sans Bengali","Noto Sans SC","Noto Sans TC","Noto Sans Devanagari","Noto Sans Georgian","Noto Sans Hebrew","Noto Sans JP","Noto Sans Kannada","Noto Sans Khmer","Noto Sans KR","Noto Sans Myanmar","Noto Sans Sinhala","Noto Sans Tamil","Noto Sans Telugu","Noto Sans Thai","Noto Sans Thaana",sans-serif;font-weight:400;font-style:normal;font-size:18px;line-height:20px;font-weight:400;margin:10px 0 2px 0;color:#5b6770}.petition-form{font-size:12px;line-height:18px;color:#dcdcdc;text-align:left;display:flex;flex-flow:row wrap;flex:1 100%;justify-content:space-around}.petition-space{font-family:"Metropolis","Noto Sans","Noto Sans Math","Noto Sans Arabic","Noto Sans Armenian","Noto Sans Bengali","Noto Sans SC","Noto Sans TC","Noto Sans Devanagari","Noto Sans Georgian","Noto Sans Hebrew","Noto Sans JP","Noto Sans Kannada","Noto Sans Khmer","Noto Sans KR","Noto Sans Myanmar","Noto Sans Sinhala","Noto Sans Tamil","Noto Sans Telugu","Noto Sans Thai","Noto Sans Thaana",sans-serif;font-weight:700;font-style:normal;flex:1 100%;height:18px;margin:0 0 2px 0;color:#ff8000;font-size:14px;text-align:center}.petition-button{font-family:"Metropolis","Noto Sans","Noto Sans Math","Noto Sans Arabic","Noto Sans Armenian","Noto Sans Bengali","Noto Sans SC","Noto Sans TC","Noto Sans Devanagari","Noto Sans Georgian","Noto Sans Hebrew","Noto Sans JP","Noto Sans Kannada","Noto Sans Khmer","Noto Sans KR","Noto Sans Myanmar","Noto Sans Sinhala","Noto Sans Tamil","Noto Sans Telugu","Noto Sans Thai","Noto Sans Thaana",sans-serif;font-weight:600;font-style:normal;min-width:100px;margin:0;padding:4px 12px;height:30px}@media screen and (max-width: 969px){.petition-block{width:auto}.petition-block .help,.petition-block .help a{margin:0}.petition-block .petition-button{margin:10px 0 0 0}.petition-block .form-group{margin:10px 0 0 0;width:160px}.petition-sign-message{margin-bottom:10px}.petition-form{flex-flow:column wrap;align-items:center}}',"",{version:3,sources:["webpack://./style/code-studio/petition.scss","webpack://./../shared/css/font.scss"],names:[],mappings:"AAEA,gBACE,YAAA,CACA,qBAAA,CACA,iBAAA,CACA,qBAAA,CACA,YAAA,CAEA,yDAEE,wBAAA,CACA,aAAA,CACA,WAAA,CACA,gBAAA,CACA,QAAA,CAEA,qEACE,oBAAA,CACA,SAAA,CACA,0BAAA,CAIJ,iEAEE,oBAAA,CAEA,6EACE,0BAAA,CACA,oBAAA,CAIJ,iCACE,WAAA,CAGF,gCACE,WAAA,CAGF,gCACE,UAAA,CAGF,8BACE,WAAA,CAGF,gCACE,gBAAA,CACA,aAAA,CACA,WAAA,CACA,cAAA,CACA,qBAAA,CAGF,4EAGE,cAAA,CACA,gBAAA,CACA,iBAAA,CACA,oBAAA,CACA,aAAA,CAIJ,kBCaE,8YApEU,CAqEV,eA9DsB,CA+DtB,iBAAA,CDbA,QAAA,CACA,cAAA,CACA,gBAAA,CACA,aAAA,CAGF,uBCjBE,8YA9CU,CA+CV,eA1CoB,CA2CpB,iBAAA,CDiBA,cAAA,CACA,gBAAA,CACA,eAAA,CACA,mBAAA,CACA,aAAA,CAGF,eACE,cAAA,CACA,gBAAA,CACA,aAAA,CACA,eAAA,CACA,YAAA,CACA,kBAAA,CACA,WAAA,CACA,4BAAA,CAGF,gBCJE,8YA/EU,CAgFV,eAxEiB,CAyEjB,iBAAA,CDIA,WAAA,CACA,WAAA,CACA,gBAAA,CACA,aAAA,CACA,cAAA,CACA,iBAAA,CAGF,iBCzBE,8YApEU,CAqEV,eA9DsB,CA+DtB,iBAAA,CDyBA,eAAA,CACA,QAAA,CACA,gBAAA,CACA,WAAA,CAIF,qCACE,gBACE,UAAA,CAEA,8CAEE,QAAA,CAGF,iCACE,iBAAA,CAGF,4BACE,iBAAA,CACA,WAAA,CAIJ,uBACE,kBAAA,CAGF,eACE,qBAAA,CACA,kBAAA,CAAA",sourcesContent:['@import "font";\n\n.petition-block {\n  display: flex;\n  flex-flow: column wrap;\n  text-align: center;\n  background-color: white;\n  padding: 10px;\n\n  input.field,\n  select.field {\n    background-color: #e2e4e3;\n    color: #595959;\n    padding: 5px;\n    border-width: 1px;\n    margin: 0;\n\n    &:focus {\n      border-color: #66afe9;\n      outline: 0;\n      box-shadow: 0 0 8px #66afe9;\n    }\n  }\n\n  input.has-error,\n  select.has-error {\n    border-color: #a94442;\n\n    &:focus {\n      box-shadow: 0 0 6px #ce8483;\n      border-color: #843534;\n    }\n  }\n\n  input.grey_input {\n    width: 150px;\n  }\n\n  span.grey_input {\n    width: 160px;\n  }\n\n  select.dropdown {\n    width: 93px;\n  }\n\n  span.dropdown {\n    width: 130px;\n  }\n\n  .dropdown-label {\n    margin: 0 4px 0 0;\n    color: #5b6770;\n    width: 100px;\n    font-size: 14px;\n    vertical-align: middle;\n  }\n\n  .help,\n  .help a,\n  .help a:hover {\n    font-size: 12px;\n    line-height: 18px;\n    margin: 10px 0 0 0;\n    text-decoration: none;\n    color: #5b6770;\n  }\n}\n\n.petition-message {\n  @include main-font-semi-bold;\n  margin: 0;\n  font-size: 21px;\n  line-height: 28px;\n  color: #5b6770;\n}\n\n.petition-sign-message {\n  @include main-font-regular;\n  font-size: 18px;\n  line-height: 20px;\n  font-weight: 400;\n  margin: 10px 0 2px 0;\n  color: #5b6770;\n}\n\n.petition-form {\n  font-size: 12px;\n  line-height: 18px;\n  color: #dcdcdc;\n  text-align: left;\n  display: flex;\n  flex-flow: row wrap;\n  flex: 1 100%;\n  justify-content: space-around;\n}\n\n.petition-space {\n  @include main-font-bold;\n  flex: 1 100%;\n  height: 18px;\n  margin: 0 0 2px 0;\n  color: #ff8000;\n  font-size: 14px;\n  text-align: center;\n}\n\n.petition-button {\n  @include main-font-semi-bold;\n  min-width: 100px;\n  margin: 0;\n  padding: 4px 12px;\n  height: 30px;\n}\n\n// Mobile and anything less than 970px\n@media screen and (max-width: 969px) {\n  .petition-block {\n    width: auto;\n\n    .help,\n    .help a {\n      margin: 0;\n    }\n\n    .petition-button {\n      margin: 10px 0 0 0;\n    }\n\n    .form-group {\n      margin: 10px 0 0 0;\n      width: 160px;\n    }\n  }\n\n  .petition-sign-message {\n    margin-bottom: 10px;\n  }\n\n  .petition-form {\n    flex-flow: column wrap;\n    align-items: center;\n  }\n}\n',"// Common site-wide fonts, put here for easy access from all scss files\n\n// Please note (!): use only single quotes (' ') for strings (!) to allow our custom converter to work properly.\n// This file is being transpiled to js object.\n// (So it can be used in jsx/tsx files for inline styles. This is made mostly for legacy.\n// Try to avoid use of inline styles if you're creating new component).\n// Keeping that in mind -\n\n$metropolis-font: 'Metropolis';\n$noto-sans-fonts: 'Noto Sans', 'Noto Sans Math', 'Noto Sans Arabic', 'Noto Sans Armenian', 'Noto Sans Bengali',\n'Noto Sans SC', 'Noto Sans TC', 'Noto Sans Devanagari', 'Noto Sans Georgian', 'Noto Sans Hebrew', 'Noto Sans JP',\n'Noto Sans Kannada', 'Noto Sans Khmer', 'Noto Sans KR', 'Noto Sans Myanmar', 'Noto Sans Sinhala',\n'Noto Sans Tamil', 'Noto Sans Telugu', 'Noto Sans Thai', 'Noto Sans Thaana';\n\n$main-font: $metropolis-font, $noto-sans-fonts, sans-serif;\n\n$thin-font-weight: 100;\n$extra-light-font-weight: 200;\n$light-font-weight: 300;\n$regular-font-weight: 400;\n$medium-font-weight: 500;\n$semi-bold-font-weight: 600;\n$bold-font-weight: 700;\n$extra-bold-font-weight: 800;\n$black-font-weight: 900;\n\n@mixin main-font-thin {\n  font-family: $main-font;\n  font-weight: $thin-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-thin-italic {\n  @include main-font-thin;\n  font-style: italic;\n}\n\n@mixin main-font-extra-light {\n  font-family: $main-font;\n  font-weight: $extra-light-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-extra-light-italic {\n  @include main-font-extra-light;\n  font-style: italic;\n}\n\n@mixin main-font-light {\n  font-family: $main-font;\n  font-weight: $light-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-light-italic {\n  @include main-font-light;\n  font-style: italic;\n}\n\n@mixin main-font-regular {\n  font-family: $main-font;\n  font-weight: $regular-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-regular-italic {\n  @include main-font-regular;\n  font-style: italic;\n}\n\n@mixin main-font-medium {\n  font-family: $main-font;\n  font-weight: $medium-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-medium-italic {\n  @include main-font-medium;\n  font-style: italic;\n}\n\n@mixin main-font-semi-bold {\n  font-family: $main-font;\n  font-weight: $semi-bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-semi-bold-italic {\n  @include main-font-semi-bold;\n  font-style: italic;\n}\n\n@mixin main-font-bold {\n  font-family: $main-font;\n  font-weight: $bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-bold-italic {\n  @include main-font-bold;\n  font-style: italic;\n}\n\n@mixin main-font-extra-bold {\n  font-family: $main-font;\n  font-weight: $extra-bold-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-extra-bold-italic {\n  @include main-font-extra-bold;\n  font-style: italic;\n}\n\n@mixin main-font-black {\n  font-family: $main-font;\n  font-weight: $black-font-weight;\n  font-style: normal;\n}\n\n@mixin main-font-black-italic {\n  @include main-font-black;\n  font-style: italic;\n}\n\n$barlowSemiCondensed-semibold: 'Barlow Semi Condensed Semibold', $noto-sans-fonts, sans-serif;\n$barlowSemiCondensed-medium: 'Barlow Semi Condensed Medium', $noto-sans-fonts, sans-serif;\n\n$code-font: 'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace;\n\n/*\n   Font Awesome S3 Bucket URLs\n   Current version: 6.6.0\n   If you are changing the location of these files,\n   see the readme in this directory for more detail on manual steps to take when uploading new files.\n */\n$font-awesome-core-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/fontawesome.min.css';\n$font-awesome-brands-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/brands.min.css';\n$font-awesome-solid-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/solid.min.css';\n$font-awesome-regular-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/regular.min.css';\n$font-awesome-v4-fonts-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/v4-font-face.min.css';\n$font-awesome-v4-shims-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/v4-shims.min.css';\n$font-awesome-v4-shims-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/v4-shims.min.css';\n$font-awesome-duotone-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/duotone.min.css';\n$font-awesome-custom-icons-url: 'https://dsco.code.org/assets/font-awesome-pro/1728421354/css/custom-icons.min.css';\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./style/code-studio/petition.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_petition_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./style/code-studio/petition.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_petition_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_petition_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_petition_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_petition_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/certificates/petition/PetitionCallToAction.story.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_PetitionCallToAction=_interopRequireDefault(__webpack_require__("./src/templates/certificates/petition/PetitionCallToAction.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_PetitionCallToAction.default};(exports.Default=function Template(args){return _react.default.createElement(_PetitionCallToAction.default,args)}.bind({})).args={gaPagePath:"congrats/coursetest-2050"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,