/*! For license information please see templates-Button-story.6f7aa723.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1913],{"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/Button.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.PendingButton=exports.OrangeButtonWithStyledIcon=exports.DisabledButtons=exports.ButtonsWithIcons=exports.ButtonWithOnClick=exports.ButtonWithHref=exports.ButtonStyledAsText=exports.ButtonSizes=exports.ButtonColors=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _default={component:_Button.default};exports.default=_default;exports.ButtonSizes=function ButtonSizes(){return _react.default.createElement("div",null,Object.values(_Button.default.ButtonSize).map((function(size){return _react.default.createElement(_Button.default,{__useDeprecatedTag:!0,size,text:size,href:"/foo/bar",style:{margin:2},key:size})})))};exports.ButtonColors=function ButtonColors(){return _react.default.createElement("div",null,Object.values(_Button.default.ButtonColor).map((function(color){return _react.default.createElement(_Button.default,{__useDeprecatedTag:!0,color,text:color,href:"/foo/bar",style:{margin:2},key:color})})))};exports.DisabledButtons=function DisabledButtons(){return _react.default.createElement("div",null,Object.values(_Button.default.ButtonColor).map((function(color){return _react.default.createElement(_Button.default,{__useDeprecatedTag:!0,disabled:!0,color,text:color,href:"/foo/bar",style:{margin:2},key:color})})))};exports.ButtonsWithIcons=function ButtonsWithIcons(){return _react.default.createElement("div",null,Object.values(_Button.default.ButtonSize).map((function(size){return _react.default.createElement("div",{key:"".concat(size,"-row")},Object.values(_Button.default.ButtonColor).map((function(color){return _react.default.createElement(_Button.default,{__useDeprecatedTag:!0,icon:"file-text",size,color,text:color,href:"/foo/bar",style:{margin:2},key:"".concat(size,"-").concat(color)})})))})))};exports.ButtonWithHref=function ButtonWithHref(){return _react.default.createElement(_Button.default,{__useDeprecatedTag:!0,href:"/foo/bar",text:"Batman & Robin"})};exports.ButtonStyledAsText=function ButtonStyledAsText(){return _react.default.createElement(_Button.default,{styleAsText:!0,text:"Batman & Robin",onClick:(0,_addonActions.action)("click")})};exports.ButtonWithOnClick=function ButtonWithOnClick(){return _react.default.createElement(_Button.default,{__useDeprecatedTag:!0,onClick:(0,_addonActions.action)("click"),text:"Batman & Robin"})};exports.OrangeButtonWithStyledIcon=function OrangeButtonWithStyledIcon(){return _react.default.createElement(_Button.default,{__useDeprecatedTag:!0,href:"/foo/bar",color:_Button.default.ButtonColor.brandSecondaryDefault,icon:"caret-down",iconStyle:{fontSize:24,position:"relative",top:3},text:"Assign Course"})};exports.PendingButton=function PendingButton(){return _react.default.createElement(_Button.default,{__useDeprecatedTag:!0,href:"/foo/bar",size:_Button.default.ButtonSize.large,text:"Continue",isPending:!0,pendingText:"Pending..."})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLUJ1dHRvbi1zdG9yeS5mNjhjZjFkYi5pZnJhbWUuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7d0lBQUEsbUNBT0MsV0FDQSxhQUVBLElBQUlBLE9BQVMsQ0FBQyxFQUFFQyxlQUdoQixTQUFTQyxhQUdSLElBRkEsSUFBSUMsUUFBVSxHQUVMQyxFQUFJLEVBQUdBLEVBQUlDLFVBQVVDLE9BQVFGLElBQUssQ0FDMUMsSUFBSUcsSUFBTUYsVUFBVUQsR0FDcEIsR0FBS0csSUFBTCxDQUVBLElBQUlDLGVBQWlCRCxJQUVyQixHQUFnQixXQUFaQyxTQUFvQyxXQUFaQSxRQUMzQkwsUUFBUU0sS0FBS0YsVUFDUCxHQUFJRyxNQUFNQyxRQUFRSixNQUN4QixHQUFJQSxJQUFJRCxPQUFRLENBQ2YsSUFBSU0sTUFBUVYsV0FBV1csTUFBTSxLQUFNTixLQUMvQkssT0FDSFQsUUFBUU0sS0FBS0csTUFFZixPQUNNLEdBQWdCLFdBQVpKLFFBQXNCLENBQ2hDLEdBQUlELElBQUlPLFdBQWFDLE9BQU9DLFVBQVVGLFdBQWFQLElBQUlPLFNBQVNBLFdBQVdHLFNBQVMsaUJBQWtCLENBQ3JHZCxRQUFRTSxLQUFLRixJQUFJTyxZQUNqQixRQUNELENBRUEsSUFBSyxJQUFJSSxPQUFPWCxJQUNYUCxPQUFPbUIsS0FBS1osSUFBS1csTUFBUVgsSUFBSVcsTUFDaENmLFFBQVFNLEtBQUtTLElBR2hCLENBeEJrQixDQXlCbkIsQ0FFQSxPQUFPZixRQUFRaUIsS0FBSyxJQUNyQixDQUVxQ0MsT0FBT0MsU0FDM0NwQixXQUFXcUIsUUFBVXJCLFdBQ3JCbUIsT0FBT0MsUUFBVXBCLGlCQUtoQixLQUZ3Qiw4QkFBRixXQUN0QixPQUFPQSxVQUNQLGdCQUZvQixPQUVwQiw2Q0FJSCxDQXBEQSwwRUNEQW1CLE9BQU9DLFFBQVUsU0FBVUUsd0JBQ3pCLElBQUlDLEtBQU8sR0E2RlgsT0EzRkFBLEtBQUtYLFNBQVcsU0FBU0EsV0FDdkIsT0FBT1ksS0FBS0MsS0FBSSxTQUFVQyxNQUN4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QUFqQkssaUJBQWlCLE9BQzVCLDZCQUFDLGdCQUFELENBQVFYLG9CQUFrQixFQUFDRSxLQUFLLFdBQVdELEtBQUssa0JBRHBCLDZCQUlJLFNBQXJCVyxxQkFBcUIsT0FDaEMsNkJBQUMsZ0JBQUQsQ0FBUUMsYUFBYSxFQUFNWixLQUFLLGlCQUFpQmEsU0FBUyxFQUFBQyxjQUFBQSxRQUFPLFVBRGpDLDRCQUlELFNBQXBCQyxvQkFBb0IsT0FDL0IsNkJBQUMsZ0JBQUQsQ0FBUWhCLG9CQUFrQixFQUFDYyxTQUFTLEVBQUFDLGNBQUFBLFFBQU8sU0FBVWQsS0FBSyxrQkFEM0IscUNBSVMsU0FBN0JnQiw2QkFBNkIsT0FDeEMsNkJBQUMsZ0JBQUQsQ0FDRWpCLG9CQUFrQixFQUNsQkUsS0FBSyxXQUNMSSxNQUFPWCxRQUFBQSxRQUFPVSxZQUFZYSxzQkFDMUJSLEtBQUssYUFDTFMsVUFBVyxDQUFDQyxTQUFVLEdBQUlDLFNBQVUsV0FBWUMsSUFBSyxHQUNyRHJCLEtBQUssaUJBUGlDLHdCQVdiLFNBQWhCc0IsZ0JBQWdCLE9BQzNCLDZCQUFDLGdCQUFELENBQ0V2QixvQkFBa0IsRUFDbEJFLEtBQUssV0FDTEgsS0FBTUosUUFBQUEsUUFBT0csV0FBVzBCLE1BQ3hCdkIsS0FBSyxXQUNMd0IsV0FBVyxFQUNYQyxZQUFZLGNBUGEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL0J1dHRvbi5zdG9yeS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXHR2YXIgbmF0aXZlQ29kZVN0cmluZyA9ICdbbmF0aXZlIGNvZGVdJztcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xuXHRcdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGlmIChhcmcudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcgJiYgIWFyZy50b1N0cmluZy50b1N0cmluZygpLmluY2x1ZGVzKCdbbmF0aXZlIGNvZGVdJykpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIFN5bWJvbC5mb3IgJiZcbiAgICBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykpIHx8XG4gICAgMHhlYWM3O1xuXG4gIHZhciBpc1ZhbGlkRWxlbWVudCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJlxuICAgICAgb2JqZWN0ICE9PSBudWxsICYmXG4gICAgICBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgfTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKGlzVmFsaWRFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbic7XG5pbXBvcnQge2FjdGlvbn0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1hY3Rpb25zJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBjb21wb25lbnQ6IEJ1dHRvbixcbn07XG5cbmV4cG9ydCBjb25zdCBCdXR0b25TaXplcyA9ICgpID0+IChcbiAgPGRpdj5cbiAgICB7T2JqZWN0LnZhbHVlcyhCdXR0b24uQnV0dG9uU2l6ZSkubWFwKHNpemUgPT4gKFxuICAgICAgPEJ1dHRvblxuICAgICAgICBfX3VzZURlcHJlY2F0ZWRUYWdcbiAgICAgICAgc2l6ZT17c2l6ZX1cbiAgICAgICAgdGV4dD17c2l6ZX1cbiAgICAgICAgaHJlZj1cIi9mb28vYmFyXCJcbiAgICAgICAgc3R5bGU9e3ttYXJnaW46IDJ9fVxuICAgICAgICBrZXk9e3NpemV9XG4gICAgICAvPlxuICAgICkpfVxuICA8L2Rpdj5cbik7XG5cbmV4cG9ydCBjb25zdCBCdXR0b25Db2xvcnMgPSAoKSA9PiAoXG4gIDxkaXY+XG4gICAge09iamVjdC52YWx1ZXMoQnV0dG9uLkJ1dHRvbkNvbG9yKS5tYXAoY29sb3IgPT4gKFxuICAgICAgPEJ1dHRvblxuICAgICAgICBfX3VzZURlcHJlY2F0ZWRUYWdcbiAgICAgICAgY29sb3I9e2NvbG9yfVxuICAgICAgICB0ZXh0PXtjb2xvcn1cbiAgICAgICAgaHJlZj1cIi9mb28vYmFyXCJcbiAgICAgICAgc3R5bGU9e3ttYXJnaW46IDJ9fVxuICAgICAgICBrZXk9e2NvbG9yfVxuICAgICAgLz5cbiAgICApKX1cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgY29uc3QgRGlzYWJsZWRCdXR0b25zID0gKCkgPT4gKFxuICA8ZGl2PlxuICAgIHtPYmplY3QudmFsdWVzKEJ1dHRvbi5CdXR0b25Db2xvcikubWFwKGNvbG9yID0+IChcbiAgICAgIDxCdXR0b25cbiAgICAgICAgX191c2VEZXByZWNhdGVkVGFnXG4gICAgICAgIGRpc2FibGVkXG4gICAgICAgIGNvbG9yPXtjb2xvcn1cbiAgICAgICAgdGV4dD17Y29sb3J9XG4gICAgICAgIGhyZWY9XCIvZm9vL2JhclwiXG4gICAgICAgIHN0eWxlPXt7bWFyZ2luOiAyfX1cbiAgICAgICAga2V5PXtjb2xvcn1cbiAgICAgIC8+XG4gICAgKSl9XG4gIDwvZGl2PlxuKTtcblxuZXhwb3J0IGNvbnN0IEJ1dHRvbnNXaXRoSWNvbnMgPSAoKSA9PiAoXG4gIDxkaXY+XG4gICAge09iamVjdC52YWx1ZXMoQnV0dG9uLkJ1dHRvblNpemUpLm1hcChzaXplID0+IChcbiAgICAgIDxkaXYga2V5PXtgJHtzaXplfS1yb3dgfT5cbiAgICAgICAge09iamVjdC52YWx1ZXMoQnV0dG9uLkJ1dHRvbkNvbG9yKS5tYXAoY29sb3IgPT4gKFxuICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgIF9fdXNlRGVwcmVjYXRlZFRhZ1xuICAgICAgICAgICAgaWNvbj1cImZpbGUtdGV4dFwiXG4gICAgICAgICAgICBzaXplPXtzaXplfVxuICAgICAgICAgICAgY29sb3I9e2NvbG9yfVxuICAgICAgICAgICAgdGV4dD17Y29sb3J9XG4gICAgICAgICAgICBocmVmPVwiL2Zvby9iYXJcIlxuICAgICAgICAgICAgc3R5bGU9e3ttYXJnaW46IDJ9fVxuICAgICAgICAgICAga2V5PXtgJHtzaXplfS0ke2NvbG9yfWB9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICApKX1cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgY29uc3QgQnV0dG9uV2l0aEhyZWYgPSAoKSA9PiAoXG4gIDxCdXR0b24gX191c2VEZXByZWNhdGVkVGFnIGhyZWY9XCIvZm9vL2JhclwiIHRleHQ9XCJCYXRtYW4gJiBSb2JpblwiIC8+XG4pO1xuXG5leHBvcnQgY29uc3QgQnV0dG9uU3R5bGVkQXNUZXh0ID0gKCkgPT4gKFxuICA8QnV0dG9uIHN0eWxlQXNUZXh0PXt0cnVlfSB0ZXh0PVwiQmF0bWFuICYgUm9iaW5cIiBvbkNsaWNrPXthY3Rpb24oJ2NsaWNrJyl9IC8+XG4pO1xuXG5leHBvcnQgY29uc3QgQnV0dG9uV2l0aE9uQ2xpY2sgPSAoKSA9PiAoXG4gIDxCdXR0b24gX191c2VEZXByZWNhdGVkVGFnIG9uQ2xpY2s9e2FjdGlvbignY2xpY2snKX0gdGV4dD1cIkJhdG1hbiAmIFJvYmluXCIgLz5cbik7XG5cbmV4cG9ydCBjb25zdCBPcmFuZ2VCdXR0b25XaXRoU3R5bGVkSWNvbiA9ICgpID0+IChcbiAgPEJ1dHRvblxuICAgIF9fdXNlRGVwcmVjYXRlZFRhZ1xuICAgIGhyZWY9XCIvZm9vL2JhclwiXG4gICAgY29sb3I9e0J1dHRvbi5CdXR0b25Db2xvci5icmFuZFNlY29uZGFyeURlZmF1bHR9XG4gICAgaWNvbj1cImNhcmV0LWRvd25cIlxuICAgIGljb25TdHlsZT17e2ZvbnRTaXplOiAyNCwgcG9zaXRpb246ICdyZWxhdGl2ZScsIHRvcDogM319XG4gICAgdGV4dD1cIkFzc2lnbiBDb3Vyc2VcIlxuICAvPlxuKTtcblxuZXhwb3J0IGNvbnN0IFBlbmRpbmdCdXR0b24gPSAoKSA9PiAoXG4gIDxCdXR0b25cbiAgICBfX3VzZURlcHJlY2F0ZWRUYWdcbiAgICBocmVmPVwiL2Zvby9iYXJcIlxuICAgIHNpemU9e0J1dHRvbi5CdXR0b25TaXplLmxhcmdlfVxuICAgIHRleHQ9XCJDb250aW51ZVwiXG4gICAgaXNQZW5kaW5nPXt0cnVlfVxuICAgIHBlbmRpbmdUZXh0PVwiUGVuZGluZy4uLlwiXG4gIC8+XG4pO1xuIl0sIm5hbWVzIjpbImhhc093biIsImhhc093blByb3BlcnR5IiwiY2xhc3NOYW1lcyIsImNsYXNzZXMiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJnIiwiYXJnVHlwZSIsInB1c2giLCJBcnJheSIsImlzQXJyYXkiLCJpbm5lciIsImFwcGx5IiwidG9TdHJpbmciLCJPYmplY3QiLCJwcm90b3R5cGUiLCJpbmNsdWRlcyIsImtleSIsImNhbGwiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyIsImRlZmF1bHQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsImlkIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwic2hpbSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJlcnIiLCJFcnJvciIsIm5hbWUiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiaW5zdGFuY2VPZiIsIm5vZGUiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnRCeVNlbGVjdG9yIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJnZXRUYXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJhcHBlbmRDaGlsZCIsImluc2VydFN0eWxlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsImNvbXBvbmVudCIsIkJ1dHRvbiIsIkJ1dHRvblNpemVzIiwidmFsdWVzIiwiQnV0dG9uU2l6ZSIsInNpemUiLCJfX3VzZURlcHJlY2F0ZWRUYWciLCJ0ZXh0IiwiaHJlZiIsIm1hcmdpbiIsIkJ1dHRvbkNvbG9ycyIsIkJ1dHRvbkNvbG9yIiwiY29sb3IiLCJEaXNhYmxlZEJ1dHRvbnMiLCJkaXNhYmxlZCIsIkJ1dHRvbnNXaXRoSWNvbnMiLCJpY29uIiwiQnV0dG9uV2l0aEhyZWYiLCJCdXR0b25TdHlsZWRBc1RleHQiLCJzdHlsZUFzVGV4dCIsIm9uQ2xpY2siLCJhY3Rpb24iLCJCdXR0b25XaXRoT25DbGljayIsIk9yYW5nZUJ1dHRvbldpdGhTdHlsZWRJY29uIiwiYnJhbmRTZWNvbmRhcnlEZWZhdWx0IiwiaWNvblN0eWxlIiwiZm9udFNpemUiLCJwb3NpdGlvbiIsInRvcCIsIlBlbmRpbmdCdXR0b24iLCJsYXJnZSIsImlzUGVuZGluZyIsInBlbmRpbmdUZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==