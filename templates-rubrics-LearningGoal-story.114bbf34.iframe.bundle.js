"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3701],{"./src/templates/rubrics/LearningGoal.jsx":(module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=LearningGoal;var _classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_typography=__webpack_require__("./src/componentLibrary/typography/index.ts"),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_AnalyticsConstants=__webpack_require__("./src/metrics/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/metrics/AnalyticsReporter.js")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_HttpClient=_interopRequireDefault(__webpack_require__("./src/util/HttpClient.ts")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_AiAssessment=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/AiAssessment.jsx")),_AiAssessmentFeedbackContext=_interopRequireWildcard(__webpack_require__("./src/templates/rubrics/AiAssessmentFeedbackContext.jsx")),_EvidenceLevels=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/EvidenceLevels.jsx")),_rubricHelpers=__webpack_require__("./src/templates/rubrics/rubricHelpers.js"),_rubricShapes=__webpack_require__("./src/templates/rubrics/rubricShapes.jsx"),_rubricsModule=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/rubrics.module.scss"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var invalidUnderstanding=-1;function LearningGoal(_ref){var learningGoal=_ref.learningGoal,teacherHasEnabledAi=_ref.teacherHasEnabledAi,canProvideFeedback=_ref.canProvideFeedback,reportingData=_ref.reportingData,studentLevelInfo=_ref.studentLevelInfo,aiUnderstanding=_ref.aiUnderstanding,aiConfidence=_ref.aiConfidence,submittedEvaluation=_ref.submittedEvaluation,isStudent=_ref.isStudent,feedbackAdded=_ref.feedbackAdded,setFeedbackAdded=_ref.setFeedbackAdded,aiEvalInfo=_ref.aiEvalInfo,STATUS=Object.freeze({NOT_STARTED:0,IN_PROGRESS:1,FINISHED:2,ERROR:3}),_useState2=_slicedToArray((0,_react.useState)(!1),2),isOpen=_useState2[0],setIsOpen=_useState2[1],_useState4=_slicedToArray((0,_react.useState)(_AiAssessmentFeedbackContext.NO_FEEDBACK),2),aiFeedback=_useState4[0],setAiFeedback=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(null),2),aiFeedbackId=_useState6[0],setAiFeedbackId=_useState6[1],_useState8=_slicedToArray((0,_react.useState)(STATUS.NOT_STARTED),2),autosaveStatus=_useState8[0],setAutosaveStatus=_useState8[1],_useState10=_slicedToArray((0,_react.useState)(null),2),learningGoalEval=_useState10[0],setLearningGoalEval=_useState10[1],_useState12=_slicedToArray((0,_react.useState)(""),2),displayFeedback=_useState12[0],setDisplayFeedback=_useState12[1],_useState14=_slicedToArray((0,_react.useState)(invalidUnderstanding),2),displayUnderstanding=_useState14[0],setDisplayUnderstanding=_useState14[1],teacherFeedback=(0,_react.useRef)(""),understandingLevel=(0,_react.useRef)(invalidUnderstanding),aiEnabled=!(!learningGoal.aiEnabled||!teacherHasEnabledAi),autosaveTimer=(0,_react.useRef)(),handleFeedbackChange=function handleFeedbackChange(event){studentLevelInfo.user_id&&learningGoal.id&&(autosaveTimer.current&&clearTimeout(autosaveTimer.current),teacherFeedback.current=event.target.value,setDisplayFeedback(teacherFeedback.current),autosaveTimer.current=setTimeout((function(){autosave()}),2e3))},autosave=function autosave(){setAutosaveStatus(STATUS.IN_PROGRESS);var bodyData=JSON.stringify({studentId:studentLevelInfo.user_id,learningGoalId:learningGoal.id,feedback:teacherFeedback.current,understanding:understandingLevel.current});_HttpClient.default.put("".concat("/learning_goal_teacher_evaluations","/").concat(learningGoalEval.id),bodyData,!0,{"Content-Type":"application/json"}).then((function(){setAutosaveStatus(STATUS.FINISHED),feedbackAdded||setFeedbackAdded(!0)})).catch((function(error){console.error(error),setAutosaveStatus(STATUS.ERROR)})),clearTimeout(autosaveTimer.current)};(0,_react.useEffect)((function(){if(studentLevelInfo&&learningGoal.id){var body=JSON.stringify({userId:studentLevelInfo.user_id,learningGoalId:learningGoal.id});_HttpClient.default.post("".concat("/learning_goal_teacher_evaluations","/get_or_create_evaluation"),body,!0,{"Content-Type":"application/json"}).then((function(response){return response.json()})).then((function(json){setLearningGoalEval(json),json.feedback&&(teacherFeedback.current=json.feedback,setDisplayFeedback(teacherFeedback.current)),json.understanding>=0&&null!==json.understanding&&(setDisplayUnderstanding(json.understanding),understandingLevel.current=json.understanding)})).catch((function(error){return console.log(error)}))}}),[studentLevelInfo,learningGoal]);return _react.default.createElement("details",{className:"".concat(_rubricsModule.default.learningGoalRow," uitest-learning-goal-row")},_react.default.createElement("summary",{className:_rubricsModule.default.learningGoalHeader,onClick:function handleClick(){if(!isStudent){var eventName=isOpen?_AnalyticsConstants.EVENTS.TA_RUBRIC_LEARNING_GOAL_COLLAPSED_EVENT:_AnalyticsConstants.EVENTS.TA_RUBRIC_LEARNING_GOAL_EXPANDED_EVENT;_AnalyticsReporter.default.sendEvent(eventName,_objectSpread(_objectSpread({},reportingData||{}),{},{learningGoalKey:learningGoal.key,learningGoal:learningGoal.learningGoal}))}setIsOpen(!isOpen)}},_react.default.createElement("div",{className:_rubricsModule.default.learningGoalHeaderLeftSide},_react.default.createElement(_typography.Heading6,null,learningGoal.learningGoal)),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalHeaderRightSide},aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(AiToken,null),canProvideFeedback&&aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(_typography.BodyThreeText,null,_locale.default.approve()),canProvideFeedback&&!aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(_typography.BodyThreeText,null,_locale.default.evaluate()),displayUnderstanding>=0&&_react.default.createElement(_typography.BodyThreeText,null,_rubricHelpers.UNDERSTANDING_LEVEL_STRINGS[displayUnderstanding]),submittedEvaluation&&_react.default.createElement("div",{className:_rubricsModule.default.submittedEvaluation},null!==submittedEvaluation.understanding&&_react.default.createElement(_typography.BodyThreeText,null,_rubricHelpers.UNDERSTANDING_LEVEL_STRINGS[submittedEvaluation.understanding]),submittedEvaluation.feedback&&_react.default.createElement(_FontAwesome.default,{icon:"message",className:"fa-regular",title:_locale.default.feedback()})))),_react.default.createElement("div",null,_react.default.createElement(_AiAssessmentFeedbackContext.default.Provider,{value:{aiFeedback,setAiFeedback,aiFeedbackId,setAiFeedbackId}},teacherHasEnabledAi&&!!studentLevelInfo&&!!aiEvalInfo&&void 0!==aiUnderstanding&&_react.default.createElement("div",{className:_rubricsModule.default.openedAiAssessment},_react.default.createElement(_AiAssessment.default,{isAiAssessed:learningGoal.aiEnabled,studentName:studentLevelInfo.name,aiConfidence,aiUnderstandingLevel:aiUnderstanding,aiEvalInfo}))),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalExpanded},!!submittedEvaluation&&function renderSubmittedFeedbackTextbox(){return _react.default.createElement("div",{className:_rubricsModule.default.feedbackArea},_react.default.createElement("label",{className:_rubricsModule.default.evidenceLevelLabel},_react.default.createElement("span",null,_locale.default.feedback()),_react.default.createElement("textarea",{className:_rubricsModule.default.inputTextbox,name:"teacherFeedback",value:submittedEvaluation.feedback,disabled:!0})))}(),_react.default.createElement(_EvidenceLevels.default,{learningGoalKey:learningGoal.key,isAiAssessed:aiEnabled,evidenceLevels:learningGoal.evidenceLevels,canProvideFeedback,understanding:displayUnderstanding,radioButtonCallback:function radioButtonCallback(radioButtonData){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.TA_RUBRIC_EVIDENCE_LEVEL_SELECTED,_objectSpread(_objectSpread({},reportingData||{}),{},{learningGoalId:learningGoal.id,learningGoal:learningGoal.learningGoal,newlySelectedEvidenceLevel:radioButtonData,previouslySelectedEvidenceLevel:understandingLevel.current})),setDisplayUnderstanding(radioButtonData),understandingLevel.current=radioButtonData,autosave()},submittedEvaluation,isStudent,isAutosaving:autosaveStatus===STATUS.IN_PROGRESS,arrowPositionCallback:function arrowPositionCallback(_){}}),learningGoal.tips&&!isStudent&&_react.default.createElement("div",null,_react.default.createElement(_typography.Heading6,null,_locale.default.tipsForEvaluation()),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalTips},_react.default.createElement(_SafeMarkdown.default,{markdown:learningGoal.tips}))),!!studentLevelInfo&&function renderAutoSaveTextbox(){return _react.default.createElement("div",{className:_rubricsModule.default.feedbackArea},_react.default.createElement("label",{className:_rubricsModule.default.evidenceLevelLabel},_react.default.createElement("span",null,_locale.default.feedback()),_react.default.createElement("textarea",{id:"ui-teacherFeedback",className:_rubricsModule.default.inputTextbox,name:"teacherFeedback",value:displayFeedback,onChange:handleFeedbackChange,disabled:!canProvideFeedback})),autosaveStatus===STATUS.IN_PROGRESS?_react.default.createElement("span",{className:_rubricsModule.default.autosaveMessage},_locale.default.saving()):autosaveStatus===STATUS.FINISHED&&_react.default.createElement("span",{id:"ui-autosaveConfirm",className:_rubricsModule.default.autosaveMessage},_react.default.createElement(_FontAwesome.default,{icon:"circle-check"})," ",_locale.default.savedToGallery()),autosaveStatus===STATUS.ERROR&&_react.default.createElement("span",{className:_rubricsModule.default.autosaveMessage},_locale.default.feedbackSaveError()))}())))}LearningGoal.propTypes={learningGoal:_rubricShapes.learningGoalShape.isRequired,teacherHasEnabledAi:_propTypes.default.bool,canProvideFeedback:_propTypes.default.bool,reportingData:_rubricShapes.reportingDataShape,studentLevelInfo:_rubricShapes.studentLevelInfoShape,aiUnderstanding:_propTypes.default.number,aiConfidence:_propTypes.default.number,submittedEvaluation:_rubricShapes.submittedEvaluationShape,isStudent:_propTypes.default.bool,feedbackAdded:_propTypes.default.bool,setFeedbackAdded:_propTypes.default.func,aiEvalInfo:_rubricShapes.aiEvaluationShape};var AiToken=function AiToken(){return _react.default.createElement("div",{className:"uitest-uses-ai"}," ",_react.default.createElement(_typography.BodyFourText,{className:(0,_classnames.default)(_rubricsModule.default.aiToken,_rubricsModule.default.aiTokenText)},_react.default.createElement(_typography.ExtraStrongText,null,_locale.default.usesAi())))};module.exports=exports.default},"./src/templates/rubrics/LearningGoal.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithTipsFeedbackAvailable=exports.AiEnabledFeedbackUnavailable=exports.AiEnabledFeedbackAvailable=exports.AiDisabledFeedbackUnavailable=exports.AiDisabledFeedbackAvailable=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts"),_LearningGoal=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/LearningGoal.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default={component:_LearningGoal.default};var defaultLearningGoal={key:"story-learning-goal",learningGoal:"Coding Proficiency",evidenceLevels:[{id:1,understanding:_sharedConstants.RubricUnderstandingLevels.EXTENSIVE,teacherDescription:"Student is able to write fully correct code"},{id:2,understanding:2,teacherDescription:"Student is able to write some correct code"},{id:3,understanding:_sharedConstants.RubricUnderstandingLevels.LIMITED,teacherDescription:"Student is able to write partially correct code"},{id:4,understanding:_sharedConstants.RubricUnderstandingLevels.NONE,teacherDescription:"Student is unable to write correct code"}]};exports.AiDisabledFeedbackUnavailable=function AiDisabledFeedbackUnavailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!1}),teacherHasEnabledAi:!0,canProvideFeedback:!1})},exports.AiDisabledFeedbackAvailable=function AiDisabledFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!1}),teacherHasEnabledAi:!0,canProvideFeedback:!0})},exports.AiEnabledFeedbackUnavailable=function AiEnabledFeedbackUnavailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!0}),teacherHasEnabledAi:!0,canProvideFeedback:!1})},exports.AiEnabledFeedbackAvailable=function AiEnabledFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!0}),teacherHasEnabledAi:!0,canProvideFeedback:!0})},exports.WithTipsFeedbackAvailable=function WithTipsFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{tips:"Show some tips for evaluation\n\nPossibly use newlines and _some_ **markdown**\n\n* bullet\n* points"}),canProvideFeedback:!0})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,