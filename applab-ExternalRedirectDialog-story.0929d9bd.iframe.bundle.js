"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[19],{"./src/applab/ExternalRedirectDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedExternalRedirectDialog=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_constants=__webpack_require__("./src/constants.js"),_urlHelpers=__webpack_require__("./src/lib/util/urlHelpers.js"),_Dialog=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/Dialog.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_applab=__webpack_require__("./src/applab/redux/applab.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var ExternalRedirectDialog=function(_React$Component){function ExternalRedirectDialog(){return _React$Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ExternalRedirectDialog,_React$Component);var _proto=ExternalRedirectDialog.prototype;return _proto.handleRedirect=function handleRedirect(url){window.open(url,"_blank","noopener,noreferrer"),this.props.handleClose()},_proto.render=function render(){var title,body,footer,_this=this;if(!(this.props.redirects&&this.props.redirects.length>0))return null;var response=this.props.redirects[0].response,url=this.props.redirects[0].url;return response===_applab.REDIRECT_RESPONSE.APPROVED?(title=_locale.default.redirectTitle(),body=_react.default.createElement("div",null,_react.default.createElement("h2",{style:styles.title},_locale.default.redirectConfirmation()),_react.default.createElement("p",{style:styles.url},url),_react.default.createElement("p",null,_locale.default.redirectExplanation(),_react.default.createElement("span",null,_react.default.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:(0,_urlHelpers.studio)("/report_abuse")},_locale.default.reportAbuse())))),footer=_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_Button.default,{onClick:this.props.handleClose,text:_locale.default.goBack(),color:_Button.default.ButtonColor.gray,style:{margin:0}}),_react.default.createElement(_Button.default,{onClick:function onClick(){return _this.handleRedirect(url)},text:_locale.default.continue(),color:_Button.default.ButtonColor.brandSecondaryDefault,style:{margin:0}}))):(response===_applab.REDIRECT_RESPONSE.UNSUPPORTED?(title=_locale.default.redirectUnsupportedTitle(),body=_react.default.createElement("p",null,_locale.default.redirectUnsupportedExplanation())):(title=_locale.default.redirectRejectTitle(),body=_react.default.createElement("p",null,_locale.default.redirectRejectExplanation())),footer=_react.default.createElement(_DialogFooter.default,{rightAlign:!0},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,onClick:this.props.handleClose,text:_locale.default.dialogOK(),color:_Button.default.ButtonColor.gray}))),_react.default.createElement(_Dialog.default,{title,fullWidth:window.innerWidth<_constants.BASE_DIALOG_WIDTH,isOpen:!0,handleClose:this.props.handleClose},_react.default.createElement(_Dialog.Body,null,body,footer))},ExternalRedirectDialog}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(ExternalRedirectDialog,"propTypes",{handleClose:_propTypes.default.func,redirects:_propTypes.default.array});var styles={title:{display:"inline",wordWrap:"break-word"},url:{display:"-webkit-box",WebkitLineClamp:3,WebkitBoxOrient:"vertical",overflow:"hidden",maxWidth:"100%",wordWrap:"break-word",maxHeight:"140px"}},UnconnectedExternalRedirectDialog=exports.UnconnectedExternalRedirectDialog=ExternalRedirectDialog;exports.default=(0,_reactRedux.connect)((function(state){return{redirects:state.redirectDisplay}}),(function(dispatch){return{handleClose:function handleClose(){dispatch(_applab.actions.dismissRedirectNotice())}}}))(UnconnectedExternalRedirectDialog)},"./src/lib/util/urlHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaTagDescription=exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION=exports.ADD_A_PERSONAL_LOGIN_HELP_URL=void 0,exports.pegasus=function pegasus(relativeUrl){if(window.dashboard&&window.dashboard.CODE_ORG_URL)return window.dashboard.CODE_ORG_URL+relativeUrl;return relativeUrl},exports.setPegasusOrigin=function setPegasusOrigin(origin){window.dashboard=window.dashboard||{},window.dashboard.CODE_ORG_URL=origin},exports.setStudioOrigin=function setStudioOrigin(origin){window.pegasus=window.pegasus||{},window.pegasus.STUDIO_URL=origin},exports.studio=function studio(relativeUrl){if(window.pegasus&&window.pegasus.STUDIO_URL)return window.pegasus.STUDIO_URL+relativeUrl;return relativeUrl};var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}exports.metaTagDescription=_lodash.default.memoize((function(relativeUrl){return fetch(relativeUrl).then((function(response){return Promise.all([response.status,response.text()])})).then((function(_ref){var _ref2=_slicedToArray(_ref,2),status=_ref2[0],text=_ref2[1];return status<200||status>=300?relativeUrl:(0,_jquery.default)(text).filter("meta[name='description']").attr("content")||relativeUrl})).catch((function(error){return relativeUrl}))})),exports.ADD_A_PERSONAL_LOGIN_HELP_URL="https://support.code.org/hc/en-us/articles/115001475131-Adding-a-personal-login-to-a-teacher-created-account",exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION="https://support.code.org/hc/en-us/articles/360015983631"},"./src/applab/ExternalRedirectDialog.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnsupportedSite=exports.RejectedSite=exports.ApprovedSite=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_ExternalRedirectDialog=__webpack_require__("./src/applab/ExternalRedirectDialog.jsx"),_applab=__webpack_require__("./src/applab/redux/applab.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_ExternalRedirectDialog.UnconnectedExternalRedirectDialog};var Template=function Template(args){return _react.default.createElement(_ExternalRedirectDialog.UnconnectedExternalRedirectDialog,_extends({},args,{handleClose:function handleClose(){}}))};(exports.ApprovedSite=Template.bind({})).args={redirects:[{url:"www.google.com/super_duper/long_url/should_be_wrapped/to-the-next-line.html",response:_applab.REDIRECT_RESPONSE.APPROVED}]},(exports.RejectedSite=Template.bind({})).args={redirects:[{url:"www.google.com",response:_applab.REDIRECT_RESPONSE.REJECTED}]},(exports.UnsupportedSite=Template.bind({})).args={redirects:[{url:"www.google.com",response:_applab.REDIRECT_RESPONSE.UNSUPPORTED}]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,