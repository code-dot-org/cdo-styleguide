/*! For license information please see code-studio-components-progress-ResourcesDropdown-story.4f19d014.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3495],{"./src/code-studio/components/progress/ResourcesDropdown.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_shapes=__webpack_require__("./src/lib/levelbuilder/shapes.jsx"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DropdownButton=_interopRequireDefault(__webpack_require__("./src/templates/DropdownButton.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ResourcesDropdown=exports.default=function(_React$Component){function ResourcesDropdown(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleDropdownClick",(function(){var study=_this.props.studentFacing?"student-resources":"teacher-resources";_this.props.unitGroupId?_this.recordFirehose(study,"unit-group","click-dropdown",{unitGroupId:_this.props.unitGroupId}):_this.props.unitId&&_this.recordFirehose(study,"unit","click-dropdown",{unitId:_this.props.unitId})})),_defineProperty(_this,"handleItemClick",(function(e,resource){e.preventDefault();var study=_this.props.studentFacing?"student-resources":"teacher-resources",resourceKey=resource.key,resourceUrl=resource.url,callback=function callback(){window.open(resourceUrl,"noopener","noreferrer")};_this.props.unitGroupId?_this.recordFirehose(study,"unit-group","click-resource",{unitGroupId:_this.props.unitGroupId,resourceKey},callback):_this.props.unitId&&_this.recordFirehose(study,"unit","click-resource",{unitId:_this.props.unitId,resourceKey},callback)})),_defineProperty(_this,"recordFirehose",(function(study,study_group,event,data_json,callback){_firehose.default.putRecord({study,study_group,event,data_json:JSON.stringify(data_json)},{includeUserId:!0,callback})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ResourcesDropdown,_React$Component),ResourcesDropdown.prototype.render=function render(){var _this2=this,dropdownResources=this.props.resources.map((function(resource){return _react.default.createElement("a",{key:resource.key,href:resource.url,onClick:function onClick(e){return _this2.handleItemClick(e,resource)}},resource.name)}));return _react.default.createElement("div",{style:styles.dropdown},_react.default.createElement(_DropdownButton.default,{text:this.props.studentFacing?_locale.default.studentResources():_locale.default.teacherResources(),color:this.props.studentFacing?_Button.default.ButtonColor.gray:_Button.default.ButtonColor.blue,size:this.props.studentFacing?_Button.default.ButtonSize.large:_Button.default.ButtonSize.default,onClick:this.handleDropdownClick},dropdownResources))},ResourcesDropdown}(_react.default.Component);_defineProperty(ResourcesDropdown,"propTypes",{resources:_propTypes.default.arrayOf(_shapes.resourceShape).isRequired,studentFacing:_propTypes.default.bool,unitGroupId:_propTypes.default.number,unitId:_propTypes.default.number});var styles={dropdown:{display:"inline-block",marginRight:5}};module.exports=exports.default},"./src/lib/levelbuilder/shapes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.vocabularyShape=exports.tipShape=exports.standardShape=exports.scriptLevelShape=exports.resourceShape=exports.relatedLessonShape=exports.programmingExpressionShape=exports.programmingEnvironmentShape=exports.levelShape=exports.frameworkShape=exports.activityShape=exports.activitySectionShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));var levelShape=exports.levelShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,url:_propTypes.default.string.isRequired,icon:_propTypes.default.string,isUnplugged:_propTypes.default.bool,isConceptLevel:_propTypes.default.bool,conceptDifficulty:_propTypes.default.string,concepts:_propTypes.default.string,skin:_propTypes.default.string,videoKey:_propTypes.default.string}),scriptLevelShape=exports.scriptLevelShape=_propTypes.default.shape({id:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,activeId:_propTypes.default.string.isRequired,levels:_propTypes.default.arrayOf(levelShape).isRequired,expand:_propTypes.default.bool,kind:_propTypes.default.string,bonus:_propTypes.default.bool,assessment:_propTypes.default.bool,challenge:_propTypes.default.bool,isViewingAsInstructorInTraining:_propTypes.default.bool}),tipShape=exports.tipShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,type:_propTypes.default.string.isRequired,markdown:_propTypes.default.string.isRequired}),activitySectionShape=exports.activitySectionShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,position:_propTypes.default.number.isRequired,displayName:_propTypes.default.string.isRequired,duration:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.oneOf([""])]).isRequired,remarks:_propTypes.default.bool,progressionName:_propTypes.default.string,scriptLevels:_propTypes.default.arrayOf(scriptLevelShape).isRequired,text:_propTypes.default.string.isRequired,tips:_propTypes.default.arrayOf(tipShape).isRequired});exports.activityShape=_propTypes.default.shape({key:_propTypes.default.string.isRequired,displayName:_propTypes.default.string,position:_propTypes.default.number.isRequired,duration:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.oneOf([""])]).isRequired,activitySections:_propTypes.default.arrayOf(activitySectionShape)}),exports.resourceShape=_propTypes.default.shape({id:_propTypes.default.number,key:_propTypes.default.string.isRequired,markdownKey:_propTypes.default.string,name:_propTypes.default.string.isRequired,url:_propTypes.default.string.isRequired,type:_propTypes.default.string,audience:_propTypes.default.string,assessment:_propTypes.default.bool,includeInPdf:_propTypes.default.bool,downloadUrl:_propTypes.default.string,isRollup:_propTypes.default.bool}),exports.vocabularyShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,markdownKey:_propTypes.default.string,word:_propTypes.default.string.isRequired,definition:_propTypes.default.string.isRequired,commonSenseMedia:_propTypes.default.bool.isRequired}),exports.programmingEnvironmentShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired}),exports.programmingExpressionShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,key:_propTypes.default.string.isRequired,name:_propTypes.default.string.isRequired,category:_propTypes.default.string.isRequired,programmingEnvironmentName:_propTypes.default.string.isRequired}),exports.frameworkShape=_propTypes.default.shape({name:_propTypes.default.string.isRequired,shortcode:_propTypes.default.string.isRequired}),exports.standardShape=_propTypes.default.shape({frameworkShortcode:_propTypes.default.string.isRequired,frameworkName:_propTypes.default.string.isRequired,parentCategoryShortcode:_propTypes.default.string,parentCategoryDescription:_propTypes.default.string,categoryShortcode:_propTypes.default.string.isRequired,categoryDescription:_propTypes.default.string.isRequired,shortcode:_propTypes.default.string.isRequired,description:_propTypes.default.string.isRequired}),exports.relatedLessonShape=_propTypes.default.shape({unitTitle:_propTypes.default.string.isRequired,versionYear:_propTypes.default.string,lockable:_propTypes.default.bool,relativePosition:_propTypes.default.number.isRequired,id:_propTypes.default.number.isRequired,editUrl:_propTypes.default.string.isRequired})},"./src/logToCloud.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _experiments=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/util/experiments.js"));function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}var PageAction=(0,__webpack_require__("./src/utils.js").makeEnum)("DropletTransitionError","SanitizedLevelHtml","UserJavaScriptError","RunButtonClick","StartWebRequest","StaticResourceFetchError","PegasusSectionsRedirect","DancePartyOnInit","BrambleError","BrambleFilesystemResetSuccess","BrambleFilesystemResetFailed","JotFormFrameLoaded","JotFormLoadFailed","BlockLoadFailed","MapboxMarkerLoadError","LoadScriptProgressStarted","LoadScriptProgressFinished","SectionProgressRenderedWithData","JavabuilderWebSocketConnectionError","NoValidAmplitudeEventNameError"),REPORT_PAGE_SIZE=_experiments.default.isEnabled("logPageSize")||Math.random()<.01;module.exports={PageAction,addPageAction:function addPageAction(actionName,value,sampleRate){if(void 0===sampleRate&&(sampleRate=1),window.newrelic)if(PageAction[actionName])if("object"===_typeof(value)){if(!(Math.random()>sampleRate)){for(var prop in value)"boolean"==typeof value[prop]&&(value[prop]=value[prop].toString()),"string"==typeof value[prop]&&(value[prop]=value[prop].substring(0,4095));window.newrelic.addPageAction(actionName,value)}}else console.log("Expected value to be an object");else console.log("Unknown actionName: "+actionName)},setCustomAttribute:function setCustomAttribute(key,value){window.newrelic&&window.newrelic.setCustomAttribute(key,value)},loadFinished:function loadFinished(){window.newrelic&&window.newrelic.finished()},logError:function logError(e){window.newrelic&&window.newrelic.noticeError(e)},reportPageSize:function reportPageSize(){if(REPORT_PAGE_SIZE)try{var _step,resources=performance&&performance.getEntriesByType("resource"),totalDownloadSize=0,jsDownloadSize=0,jsFileRegex=/\.js$/,_iterator=_createForOfIteratorHelper(resources);try{for(_iterator.s();!(_step=_iterator.n()).done;){var resource=_step.value;if(void 0===resource.transferSize||void 0===resource.encodedBodySize)return;totalDownloadSize+=resource.transferSize,jsFileRegex.test(resource.name)&&(jsDownloadSize+=resource.transferSize)}}catch(err){_iterator.e(err)}finally{_iterator.f()}if(!window.newrelic)return;window.newrelic.setCustomAttribute("totalDownloadSize",totalDownloadSize),window.newrelic.setCustomAttribute("jsDownloadSize",jsDownloadSize)}catch(e){this.logError(e)}}}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/code-studio/components/progress/ResourcesDropdown.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.MigratedTeacherResources=exports.MigratedStudentResources=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_ResourcesDropdown=_interopRequireDefault(__webpack_require__("./src/code-studio/components/progress/ResourcesDropdown.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var migratedSampleResources=[{key:"key1",name:"Curriculum",url:"https://example.com/a"},{key:"key2",name:"Vocabulary",url:"https://example.com/b"}],Template=(exports.default={component:_ResourcesDropdown.default},function Template(args){return _react.default.createElement(_ResourcesDropdown.default,_extends({resources:migratedSampleResources},args))});exports.MigratedTeacherResources=Template.bind({});(exports.MigratedStudentResources=Template.bind({})).args={studentFacing:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,