"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1055],{"./src/applab/constants.js":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"ABSOLUTE_REGEXP",{enumerable:!0,get:function get(){return _assetPrefix.ABSOLUTE_REGEXP}}),exports.CLASSIC_THEME_INDEX=exports.CAPTURE_TICK_COUNT=exports.ApplabInterfaceMode=exports.APP_WIDTH=exports.APP_HEIGHT=exports.ANIMATION_LENGTH_MS=void 0,Object.defineProperty(exports,"DATA_URL_PREFIX_REGEX",{enumerable:!0,get:function get(){return _assetPrefix.DATA_URL_PREFIX_REGEX}}),exports.FOOTER_HEIGHT=exports.DESIGN_ELEMENT_ID_PREFIX=exports.DEFAULT_THEME_INDEX=void 0,Object.defineProperty(exports,"ICON_PREFIX",{enumerable:!0,get:function get(){return _assetPrefix.ICON_PREFIX}}),Object.defineProperty(exports,"ICON_PREFIX_REGEX",{enumerable:!0,get:function get(){return _assetPrefix.ICON_PREFIX_REGEX}}),exports.themeOptionsForSelect=exports.themeOptions=exports.getAppWidth=exports.fontFamilyStyles=exports.fontFamilyOptions=exports.defaultFontSizeStyle=exports.WIDGET_WIDTH=exports.NEW_SCREEN=exports.IMPORT_SCREEN=void 0;var _assetPrefix=__webpack_require__("./src/assetManagement/assetPrefix.js"),utils=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/utils.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}exports.FOOTER_HEIGHT=30;var APP_WIDTH=exports.APP_WIDTH=320,WIDGET_WIDTH=exports.WIDGET_WIDTH=600,THEME_ICON_BASE_URL=(exports.getAppWidth=function getAppWidth(config){return null!=config&&config.widgetMode?WIDGET_WIDTH:APP_WIDTH},exports.APP_HEIGHT=480,exports.DESIGN_ELEMENT_ID_PREFIX="design_",exports.NEW_SCREEN="New screen...",exports.ApplabInterfaceMode=utils.makeEnum("CODE","DESIGN","DATA"),exports.ANIMATION_LENGTH_MS=200,exports.IMPORT_SCREEN="Import screen...",exports.CAPTURE_TICK_COUNT=300,exports.defaultFontSizeStyle="14px",exports.DEFAULT_THEME_INDEX=0,exports.CLASSIC_THEME_INDEX=1,exports.themeOptions=["default","classic","orange","citrus","ketchupAndMustard","lemonade","forest","watermelon","area51","polar","glowInTheDark","bubblegum","millennial","robot","coralReef","mintChip","lavender","cherryVanilla","berryPatch","cucumber","crushedVelvet","playtime","underTheSea","blueAndGold","blueSteel","darkscheme","twoTone","pastel","peachy"],"/blockly/media/applab/theme_dropdown/"),fontFamilyOptions=(exports.themeOptionsForSelect=[{option:"default",icon:THEME_ICON_BASE_URL+"default.png"},{option:"classic",icon:THEME_ICON_BASE_URL+"classic.png"},{option:"orange",icon:THEME_ICON_BASE_URL+"orange.png"},{option:"citrus",icon:THEME_ICON_BASE_URL+"citrus.png"},{option:"ketchupAndMustard",icon:THEME_ICON_BASE_URL+"ketchup_and_mustard.png"},{option:"lemonade",icon:THEME_ICON_BASE_URL+"lemonade.png"},{option:"forest",icon:THEME_ICON_BASE_URL+"forest.png"},{option:"watermelon",icon:THEME_ICON_BASE_URL+"watermelon.png"},{option:"area51",icon:THEME_ICON_BASE_URL+"area_51.png"},{option:"polar",icon:THEME_ICON_BASE_URL+"polar.png"},{option:"glowInTheDark",icon:THEME_ICON_BASE_URL+"glow_in_the_dark.png"},{option:"bubblegum",icon:THEME_ICON_BASE_URL+"bubblegum.png"},{option:"millennial",icon:THEME_ICON_BASE_URL+"millennial.png"},{option:"robot",icon:THEME_ICON_BASE_URL+"robot.png"},{option:"coralReef",icon:THEME_ICON_BASE_URL+"coral_reef.png"},{option:"mintChip",icon:THEME_ICON_BASE_URL+"mint_chip.png"},{option:"lavender",icon:THEME_ICON_BASE_URL+"lavender.png"},{option:"cherryVanilla",icon:THEME_ICON_BASE_URL+"cherry_vanilla.png"},{option:"berryPatch",icon:THEME_ICON_BASE_URL+"berry_patch.png"},{option:"cucumber",icon:THEME_ICON_BASE_URL+"cucumber.png"},{option:"crushedVelvet",icon:THEME_ICON_BASE_URL+"crushed_velvet.png"},{option:"playtime",icon:THEME_ICON_BASE_URL+"playtime.png"},{option:"underTheSea",icon:THEME_ICON_BASE_URL+"under_the_sea.png"},{option:"blueAndGold",icon:THEME_ICON_BASE_URL+"blue_and_gold.png"},{option:"blueSteel",icon:THEME_ICON_BASE_URL+"blue_steel.png"},{option:"darkscheme",icon:THEME_ICON_BASE_URL+"darkscheme.png"},{option:"twoTone",icon:THEME_ICON_BASE_URL+"two_tone.png"},{option:"pastel",icon:THEME_ICON_BASE_URL+"pastel.png"},{option:"peachy",icon:THEME_ICON_BASE_URL+"peachy.png"}],exports.fontFamilyOptions=["Arial","Georgia","Palatino","Times","Courier","Lucida Console","Arial Black","Comic","Impact","Lucida Sans","Tahoma","Trebuchet","Verdana"]),fontFamilyStyles=exports.fontFamilyStyles=["Arial, Helvetica, sans-serif","Georgia, serif",'"Palatino Linotype", "Book Antiqua", Palatino, serif','"Times New Roman", Times, serif','"Courier New", Courier, monospace','"Lucida Console", Monaco, monospace','"Arial Black", Gadget, sans-serif','"Comic Sans MS", cursive, sans-serif',"Impact, Charcoal, sans-serif",'"Lucida Sans Unicode", "Lucida Grande", sans-serif',"Tahoma, Geneva, sans-serif",'"Trebuchet MS", Helvetica, sans-serif',"Verdana, Geneva, sans-serif"];if(fontFamilyOptions.length!==fontFamilyStyles.length)throw new Error("fontFamilyOptions length must equal fontFamilyStyles length")},"./src/applab/locale-do-not-import.js":(module,__unused_webpack_exports,__webpack_require__)=>{var _i18nStringTracker=_interopRequireDefault(__webpack_require__("./src/util/i18nStringTracker.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var locale=(0,_interopRequireDefault(__webpack_require__("./src/util/safeLoadLocale.js")).default)("applab_locale");locale=(0,_i18nStringTracker.default)(locale,"applab"),module.exports=locale},"./src/assetManagement/assetPrefix.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.STARTER_ASSET_PREFIX_REGEX=exports.STARTER_ASSET_PREFIX=exports.SOUND_PREFIX_REGEX=exports.SOUND_PREFIX=exports.ICON_PREFIX_REGEX=exports.ICON_PREFIX=exports.DEFAULT_SOUND_PATH_PREFIX=exports.DATA_URL_PREFIX_REGEX=exports.ABSOLUTE_REGEXP=void 0,exports.fixPath=function fixPath(filename){var _state$pageConstants;if(ABSOLUTE_REGEXP.test(filename)&&"file:"!==window.location.protocol)return ABSOLUTE_CDO_CURRICULUM_REGEXP.test(filename)||ABSOLUTE_CDO_IMAGES_REGEXP.test(filename)?filename:MEDIA_PROXY+encodeURIComponent(filename.replace(/ /g,"%20"));if(0===(filename=filename||"").length)return"/blockly/media/1x1.gif";if(SOUND_PREFIX_REGEX.test(filename))return filename.replace(SOUND_PREFIX,soundPathPrefix);var state=(0,_redux.getStore)().getState();null!==(_state$pageConstants=state.pageConstants)&&void 0!==_state$pageConstants&&_state$pageConstants.isCurriculumLevel||(filename=filename.replace(STARTER_ASSET_PREFIX,""));if(STARTER_ASSET_PREFIX_REGEX.test(filename))return filename.replace(STARTER_ASSET_PREFIX,function starterAssetPathPrefix(levelName){return"/level_starter_assets/".concat(levelName,"/")}(state.level.name));if(-1!==filename.indexOf("/")||!channelId)return filename;return assetPathPrefix+channelId+"/"+encodeURIComponent(filename)},exports.init=function init(config){assetPathPrefix=config.assetPathPrefix||DEFAULT_ASSET_PATH_PREFIX,soundPathPrefix=config.soundPathPrefix||DEFAULT_SOUND_PATH_PREFIX,channelId=config.channel||DEFAULT_CHANNEL_ID},exports.renderIconToString=function renderIconToString(value,element){var canvas=document.createElement("canvas");canvas.width=canvas.height=400;var ctx=canvas.getContext("2d");ctx.font="300px FontAwesome, serif",ctx.textBaseline="middle",ctx.textAlign="center",ctx.fillStyle=element.getAttribute("data-icon-color")||"#000";var regex=new RegExp("^"+ICON_PREFIX+"fa-"),character="0x"+_icons.unicode[value.replace(regex,"")];return ctx.fillText(String.fromCharCode(character),200,200),canvas.toDataURL()};var _icons=__webpack_require__("./src/code-studio/components/icons.js"),_redux=__webpack_require__("./src/redux.js"),MEDIA_PROXY="//"+location.host+"/media?u=",ABSOLUTE_REGEXP=exports.ABSOLUTE_REGEXP=new RegExp("^https?://","i"),ABSOLUTE_CDO_CURRICULUM_REGEXP=new RegExp("^https://curriculum.code.org/","i"),ABSOLUTE_CDO_IMAGES_REGEXP=new RegExp("^https://images.code.org/","i"),ICON_PREFIX=(exports.DATA_URL_PREFIX_REGEX=new RegExp("^data:image"),exports.ICON_PREFIX="icon://"),SOUND_PREFIX=(exports.ICON_PREFIX_REGEX=new RegExp("^icon://"),exports.SOUND_PREFIX="sound://"),SOUND_PREFIX_REGEX=exports.SOUND_PREFIX_REGEX=new RegExp("^sound://"),STARTER_ASSET_PREFIX=exports.STARTER_ASSET_PREFIX="image://",STARTER_ASSET_PREFIX_REGEX=exports.STARTER_ASSET_PREFIX_REGEX=new RegExp("^image://"),DEFAULT_ASSET_PATH_PREFIX="/v3/assets/",DEFAULT_SOUND_PATH_PREFIX=exports.DEFAULT_SOUND_PATH_PREFIX="/api/v1/sound-library/",DEFAULT_CHANNEL_ID=void 0,assetPathPrefix=DEFAULT_ASSET_PATH_PREFIX,soundPathPrefix=DEFAULT_SOUND_PATH_PREFIX,channelId=DEFAULT_CHANNEL_ID},"./src/legacySharedComponents/FontAwesome.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/lib/util/ExtendableError.js":(module,exports)=>{function ExtendableError(message){this.message=message,this.name=this.constructor.name,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error(message).stack}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=ExtendableError,ExtendableError.prototype=Object.create(Error.prototype),ExtendableError.prototype.constructor=ExtendableError,module.exports=exports.default},"./src/maker/MakerError.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnsupportedBrowserError=exports.ConnectionFailedError=exports.ConnectionCanceledError=void 0,exports.wrapKnownMakerErrors=function wrapKnownMakerErrors(originalError){if(originalError.message.includes("A timeout occurred while connecting to the Board"))return new ConnectionFailedError(originalError.message);return originalError};var _ExtendableError2=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/lib/util/ExtendableError.js"));function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var MakerError=exports.default=function(_ExtendableError){function MakerError(){return _ExtendableError.apply(this,arguments)||this}return _inheritsLoose(MakerError,_ExtendableError),MakerError}(_ExtendableError2.default),ConnectionFailedError=(exports.UnsupportedBrowserError=function(_MakerError){function UnsupportedBrowserError(){return _MakerError.call(this,"Unsupported Browser.")||this}return _inheritsLoose(UnsupportedBrowserError,_MakerError),UnsupportedBrowserError}(MakerError),exports.ConnectionCanceledError=function(_MakerError2){function ConnectionCanceledError(){return _MakerError2.call(this,"Connection attempt canceled.")||this}return _inheritsLoose(ConnectionCanceledError,_MakerError2),ConnectionCanceledError}(MakerError),exports.ConnectionFailedError=function(_MakerError3){function ConnectionFailedError(reason){var _this;return(_this=_MakerError3.call(this,"Failed to establish a board connection.")||this).reason=reason,_this}return _inheritsLoose(ConnectionFailedError,_MakerError3),ConnectionFailedError}(MakerError))},"./src/maker/redux.js":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.disconnect=function disconnect(){return{type:DISCONNECT}},exports.enable=function enable(){return{type:ENABLE}},exports.getConnectionError=function getConnectionError(state){return getRoot(state).connectionError},exports.hasConnectionError=function hasConnectionError(state){return getRoot(state).connectionState===CONNECTION_ERROR},exports.isAvailable=function isAvailable(state){return!(!state||!state.maker)},exports.isConnected=function isConnected(state){return getRoot(state).connectionState===CONNECTED},exports.isConnecting=function isConnecting(state){return getRoot(state).connectionState===CONNECTING},exports.isEnabled=function isEnabled(state){return getRoot(state).enabled},exports.reducer=function reducer(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new MakerState,action=arguments.length>1?arguments[1]:void 0;if(action.type===ENABLE)return state.set("enabled",!0);if(action.type===START_CONNECTING)return state.set("connectionState",CONNECTING);if(action.type===REPORT_CONNECTED)return state.merge({connectionState:CONNECTED});if(action.type===REPORT_CONNECTION_ERROR)return state.merge({connectionState:CONNECTION_ERROR,connectionError:action.error});if(action.type===DISCONNECT)return state.merge({connectionState:DISCONNECTED,connectionError:null});if(action.type===USE_VIRTUAL_BOARD_ON_NEXT_RUN)return state.set("usingVirtualBoardNextTime",!0);return state},exports.reportConnected=function reportConnected(){return{type:REPORT_CONNECTED}},exports.reportConnectionError=function reportConnectionError(error){return{type:REPORT_CONNECTION_ERROR,error}},exports.shouldRunWithVirtualBoard=function shouldRunWithVirtualBoard(state){return getRoot(state).usingVirtualBoardNextTime},exports.startConnecting=function startConnecting(){return{type:START_CONNECTING}},exports.useVirtualBoardOnNextRun=function useVirtualBoardOnNextRun(){return{type:USE_VIRTUAL_BOARD_ON_NEXT_RUN}};var Immutable=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/immutable/dist/immutable.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}var DISCONNECTED="connectionState/DISCONNECTED",CONNECTING="connectionState/CONNECTING",CONNECTED="connectionState/CONNECTED",CONNECTION_ERROR="connectionState/CONNECTION_ERROR",MakerState=Immutable.Record({enabled:!1,connectionState:DISCONNECTED,connectionError:null,usingVirtualBoardNextTime:!1});function getRoot(state){return state&&state.maker||new MakerState}var ENABLE="maker/ENABLE";var START_CONNECTING="maker/START_CONNECTING";var REPORT_CONNECTED="maker/REPORT_CONNECTED";var REPORT_CONNECTION_ERROR="maker/REPORT_CONNECTION_ERROR";var DISCONNECT="maker/DISCONNECT";var USE_VIRTUAL_BOARD_ON_NEXT_RUN="maker/USE_VIRTUAL_BOARD_ON_NEXT_RUN"},"./src/maker/ui/MakerStatusOverlay.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedMakerStatusOverlay=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_locale=_interopRequireDefault(__webpack_require__("./src/applab/locale-do-not-import.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_layout=__webpack_require__("./src/redux/layout.ts"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_MakerError=__webpack_require__("./src/maker/MakerError.js"),_redux=__webpack_require__("./src/maker/redux.js"),_OverlayButton=_interopRequireDefault(__webpack_require__("./src/maker/ui/OverlayButton.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var overlayDimensionsPropTypes={width:_propTypes.default.number.isRequired,height:_propTypes.default.number.isRequired,scale:_propTypes.default.number},UnconnectedMakerStatusOverlay=exports.UnconnectedMakerStatusOverlay=function(_Component){function UnconnectedMakerStatusOverlay(){return _Component.apply(this,arguments)||this}return _inheritsLoose(UnconnectedMakerStatusOverlay,_Component),UnconnectedMakerStatusOverlay.prototype.render=function render(){var _this$props=this.props,width=_this$props.width,height=_this$props.height,scale=_this$props.scale,isConnecting=_this$props.isConnecting,isWrongBrowser=_this$props.isWrongBrowser,hasConnectionError=_this$props.hasConnectionError,handleTryAgain=_this$props.handleTryAgain,handleOpenSetupPage=_this$props.handleOpenSetupPage,dimensions={width,height,scale};return isConnecting?_react.default.createElement(WaitingToConnect,dimensions):isWrongBrowser?_react.default.createElement(UnsupportedBrowser,dimensions):hasConnectionError?_react.default.createElement(BoardNotFound,_extends({},dimensions,{handleTryAgain,useVirtualBoardOnNextRun:this.props.useVirtualBoardOnNextRun,handleOpenSetupPage})):null},UnconnectedMakerStatusOverlay}(_react.Component);_defineProperty(UnconnectedMakerStatusOverlay,"propTypes",_objectSpread(_objectSpread({},overlayDimensionsPropTypes),{},{isConnecting:_propTypes.default.bool.isRequired,isWrongBrowser:_propTypes.default.bool.isRequired,hasConnectionError:_propTypes.default.bool.isRequired,handleTryAgain:_propTypes.default.func.isRequired,useVirtualBoardOnNextRun:_propTypes.default.func.isRequired,handleOpenSetupPage:_propTypes.default.func.isRequired}));exports.default=(0,_reactRedux.connect)((function(state){return{scale:(0,_layout.getVisualizationScale)(state),isConnecting:(0,_redux.isConnecting)(state),isWrongBrowser:(0,_redux.getConnectionError)(state)instanceof _MakerError.UnsupportedBrowserError,hasConnectionError:(0,_redux.hasConnectionError)(state),handleOpenSetupPage:function handleOpenSetupPage(){window.open("/maker/setup","_blank","noopener,noreferrer")}}}),{useVirtualBoardOnNextRun:_redux.useVirtualBoardOnNextRun})(UnconnectedMakerStatusOverlay);var style={root:{position:"absolute",top:0,left:0,zIndex:4,overflow:"hidden",outline:"none",display:"flex",flexDirection:"column",alignItems:"center",color:_color.default.charcoal,backgroundColor:_color.default.lighter_gray},padding:{flex:"1 0 auto"},content:{flex:"0 0 auto",padding:"1em",textAlign:"center"},icon:{display:"block"},text:{margin:"1em"}},Overlay=function(_Component2){function Overlay(){return _Component2.apply(this,arguments)||this}return _inheritsLoose(Overlay,_Component2),Overlay.prototype.render=function render(){var rootStyle=_objectSpread(_objectSpread({},style.root),{},{width:this.props.width,height:this.props.height});if("number"==typeof this.props.scale){var transform="scale(".concat(this.props.scale,")");rootStyle.transform=transform,rootStyle.msTransform=transform,rootStyle.WebkitTransform=transform}return _react.default.createElement("div",{style:rootStyle},_react.default.createElement("div",{style:style.padding}),_react.default.createElement("div",{style:style.content},this.props.children),_react.default.createElement("div",{style:style.padding}))},Overlay}(_react.Component);_defineProperty(Overlay,"propTypes",_objectSpread(_objectSpread({},overlayDimensionsPropTypes),{},{children:_propTypes.default.any}));var WaitingToConnect=function(_Component3){function WaitingToConnect(){return _Component3.apply(this,arguments)||this}return _inheritsLoose(WaitingToConnect,_Component3),WaitingToConnect.prototype.render=function render(){return _react.default.createElement(Overlay,this.props,_react.default.createElement(Icon,{icon:"cog",spin:!0}),_react.default.createElement(Text,null,_locale.default.makerWaitingForConnect()))},WaitingToConnect}(_react.Component);_defineProperty(WaitingToConnect,"propTypes",overlayDimensionsPropTypes);var UnsupportedBrowser=function(_Component4){function UnsupportedBrowser(){return _Component4.apply(this,arguments)||this}return _inheritsLoose(UnsupportedBrowser,_Component4),UnsupportedBrowser.prototype.render=function render(){return _react.default.createElement(Overlay,this.props,_react.default.createElement(Icon,{icon:"exclamation-triangle"}),_react.default.createElement(Text,null,_locale.default.makerLevelRequires(),_react.default.createElement("br",null),_locale.default.makerSupportedBrowsers()))},UnsupportedBrowser}(_react.Component);_defineProperty(UnsupportedBrowser,"propTypes",_objectSpread({},overlayDimensionsPropTypes));var BoardNotFound=function(_Component5){function BoardNotFound(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component5.call.apply(_Component5,[this].concat(args))||this,"handleRunWithoutBoard",(function(){_this.props.useVirtualBoardOnNextRun(),_this.props.handleTryAgain()})),_this}return _inheritsLoose(BoardNotFound,_Component5),BoardNotFound.prototype.render=function render(){return _react.default.createElement(Overlay,this.props,_react.default.createElement(Icon,{icon:"exclamation-triangle"}),_react.default.createElement(Text,null,_locale.default.makerCheckPluggedIn()),_react.default.createElement(UniformWidth,null,_react.default.createElement(_OverlayButton.default,{primary:!0,text:_locale.default.makerTryAgain(),className:"try-again",onClick:this.props.handleTryAgain}),_react.default.createElement(_OverlayButton.default,{text:_locale.default.makerRunWithoutBoard(),className:"run-without-board",onClick:this.handleRunWithoutBoard}),_react.default.createElement(_OverlayButton.default,{text:_locale.default.makerSetupInstructions(),className:"setup-instructions",onClick:this.props.handleOpenSetupPage})))},BoardNotFound}(_react.Component);function UniformWidth(_ref){var children=_ref.children;return _react.default.createElement("div",{style:{display:"flex",flexDirection:"row",justifyContent:"center"}},_react.default.createElement("div",{style:{display:"flex",flexDirection:"column"}},children))}function Text(_ref2){var children=_ref2.children;return _react.default.createElement("div",{style:style.text},children)}function Icon(_ref3){var icon=_ref3.icon,_ref3$spin=_ref3.spin,classNames=["fa-5x"];return void 0!==_ref3$spin&&_ref3$spin&&classNames.push("fa-spin"),_react.default.createElement(_FontAwesome.default,{icon,className:classNames.join(" "),style:style.icon})}_defineProperty(BoardNotFound,"propTypes",_objectSpread(_objectSpread({},overlayDimensionsPropTypes),{},{handleTryAgain:_propTypes.default.func.isRequired,useVirtualBoardOnNextRun:_propTypes.default.func.isRequired,handleOpenSetupPage:_propTypes.default.func.isRequired})),UniformWidth.propTypes={children:_propTypes.default.any},Text.propTypes={children:_propTypes.default.any},Icon.propTypes={icon:_propTypes.default.string.isRequired,spin:_propTypes.default.bool}},"./src/maker/ui/OverlayButton.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var style=_objectSpread(_objectSpread({height:40,paddingLeft:30,paddingRight:30,boxSizing:"border-box",overflow:"hidden"},_fontConstants.default["main-font-regular"]),{},{fontSize:12,fontWeight:"bold",color:_color.default.charcoal,textDecoration:"none",backgroundColor:"transparent",borderStyle:"solid",borderColor:_color.default.charcoal,borderWidth:1,borderRadius:3,outline:"none",":hover":{color:_color.default.charcoal,borderColor:_color.default.white,backgroundColor:_color.default.white,cursor:"pointer",boxShadow:"none"}}),primaryStyle={backgroundColor:_color.default.charcoal,borderColor:_color.default.charcoal,color:_color.default.lighter_gray},OverlayButton=function(_Component){function OverlayButton(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(OverlayButton,_Component),OverlayButton.prototype.render=function render(){var composedStyle=_objectSpread(_objectSpread({},style),this.props.primary&&primaryStyle);return _react.default.createElement("button",{type:"button",className:this.props.className,style:composedStyle,onClick:this.props.onClick},this.props.text)},OverlayButton}(_react.Component);_defineProperty(OverlayButton,"propTypes",{className:_propTypes.default.string,primary:_propTypes.default.bool,text:_propTypes.default.string.isRequired,onClick:_propTypes.default.func.isRequired});exports.default=(0,_radium.default)(OverlayButton);module.exports=exports.default},"./src/redux.js":(module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStore=function getStore(){reduxStore||(reduxStore=createStoreWithReducers(),_experiments.default.isEnabled("reduxGlobalStore")&&(window.reduxStore=reduxStore));return reduxStore},exports.hasReducer=function hasReducer(key){return!!globalReducers[key]},exports.registerReducers=function registerReducers(reducers){for(var key in reducers){var existingReducer=globalReducers[key];if(existingReducer&&existingReducer!==reducers[key])throw new Error('reducer with key "'.concat(key,'" already registered!'))}Object.assign(globalReducers,reducers),reduxStore&&reduxStore.replaceReducer(redux.combineReducers(globalReducers))};var reduxStore,_toolkit=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js"),redux=(_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js")),function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/redux/es/redux.js"))),_reduxThunk=_interopRequireDefault(__webpack_require__("./node_modules/redux-thunk/lib/index.js")),_experiments=_interopRequireDefault(__webpack_require__("./src/util/experiments.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var globalReducers={};function createStoreWithReducers(){return function createStore(reducer,initialState){_experiments.default.isEnabled(_experiments.default.REDUX_LOGGING);0;return(0,_toolkit.configureStore)({reducer,preloadedState:initialState,middleware:[_reduxThunk.default],devTools:!1})}(Object.keys(globalReducers).length>0?globalReducers:function(s){return s})}module.exports.createStoreWithReducers=createStoreWithReducers},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./src/redux/layout.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getVisualizationScale=exports.setVisualizationScale=void 0;var toolkit_1=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js"),layoutSlice=(0,toolkit_1.createSlice)({name:"layout",initialState:{visualizationScale:null},reducers:{setVisualizationScale:function(state,action){state.visualizationScale=action.payload}}});exports.setVisualizationScale=layoutSlice.actions.setVisualizationScale;exports.getVisualizationScale=(0,toolkit_1.createSelector)((function(state){return state.layout}),(function(state){return null==state?void 0:state.visualizationScale})),exports.default=layoutSlice.reducer},"./src/maker/ui/MakerStatusOverlay.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WaitingToConnect=exports.UnsupportedBrowser=exports.ConnectionError=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/applab/constants.js"),_MakerStatusOverlay=__webpack_require__("./src/maker/ui/MakerStatusOverlay.jsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var commonProps={width:_constants.APP_WIDTH,height:_constants.APP_HEIGHT,isConnecting:!1,isWrongBrowser:!1,hasConnectionError:!1,handleTryAgain:(0,_addonActions.action)("Try Again"),useVirtualBoardOnNextRun:(0,_addonActions.action)("Use virtual board on next run"),handleDisableMaker:(0,_addonActions.action)("Disable Maker Toolkit"),handleOpenSetupPage:(0,_addonActions.action)("Open setup page")},Template=(exports.default={component:_MakerStatusOverlay.UnconnectedMakerStatusOverlay},function Template(args){return function wrapOverlay(overlay){var style={position:"relative",width:_constants.APP_WIDTH,height:_constants.APP_HEIGHT};return _react.default.createElement("div",{style},overlay)}(_react.default.createElement(_MakerStatusOverlay.UnconnectedMakerStatusOverlay,_extends({},commonProps,args)))});(exports.WaitingToConnect=Template.bind({})).args={isConnecting:!0},(exports.UnsupportedBrowser=Template.bind({})).args={isWrongBrowser:!0},(exports.ConnectionError=Template.bind({})).args={hasConnectionError:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,