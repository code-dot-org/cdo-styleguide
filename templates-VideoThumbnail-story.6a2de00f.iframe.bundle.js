/*! For license information please see templates-VideoThumbnail-story.6a2de00f.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3078],{"./src/code-studio/activityUtils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.resultFromStatus=exports.mergeActivityResult=exports.activityCssClass=void 0;var _constants=__webpack_require__("./src/constants.js"),_sharedConstants=__webpack_require__("./src/util/sharedConstants.js");exports.activityCssClass=function activityCssClass(result){return result&&result!==_constants.TestResults.NO_TESTS_RUN?result===_constants.TestResults.REVIEW_ACCEPTED_RESULT?_sharedConstants.LevelStatus.review_accepted:result===_constants.TestResults.REVIEW_REJECTED_RESULT?_sharedConstants.LevelStatus.review_rejected:result===_constants.TestResults.SUBMITTED_RESULT?_sharedConstants.LevelStatus.submitted:result>=_constants.TestResults.MINIMUM_OPTIMAL_RESULT?_sharedConstants.LevelStatus.perfect:result>=_constants.TestResults.MINIMUM_PASS_RESULT?_sharedConstants.LevelStatus.passed:_sharedConstants.LevelStatus.attempted:_sharedConstants.LevelStatus.not_tried};exports.resultFromStatus=function resultFromStatus(status){return status===_sharedConstants.LevelStatus.review_accepted?_constants.TestResults.REVIEW_ACCEPTED_RESULT:status===_sharedConstants.LevelStatus.review_rejected?_constants.TestResults.REVIEW_REJECTED_RESULT:status===_sharedConstants.LevelStatus.submitted?_constants.TestResults.SUBMITTED_RESULT:status===_sharedConstants.LevelStatus.free_play_complete?_constants.TestResults.FREE_PLAY:status===_sharedConstants.LevelStatus.perfect?_constants.TestResults.ALL_PASS:status===_sharedConstants.LevelStatus.passed?_constants.TestResults.MINIMUM_PASS_RESULT:_constants.TestResults.NO_TESTS_RUN};exports.mergeActivityResult=function mergeActivityResult(a,b){return b=b||0,0===(a=a||0)?b:0===b?a:Math.max(a,b)}},"./src/code-studio/clientState.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _utils=__webpack_require__("./src/utils.js"),_activityUtils=__webpack_require__("./src/code-studio/activityUtils.js"),sessionStorage=window.sessionStorage,clientState=module.exports={};function levelProgressByScript(){var progressJson=sessionStorage.getItem("progress");try{return progressJson?JSON.parse(progressJson):{}}catch(e){return{}}}function recordVisualElementSeen(visualElementType,visualElementId){var elementSeen,elementSeenJson=sessionStorage.getItem(visualElementType)||"{}";try{(elementSeen=JSON.parse(elementSeenJson))[visualElementId]=!0,(0,_utils.trySetSessionStorage)(visualElementType,JSON.stringify(elementSeen))}catch(e){(elementSeen={})[visualElementId]=!0,(0,_utils.trySetSessionStorage)(visualElementType,JSON.stringify(elementSeen))}}function hasSeenVisualElement(visualElementType,visualElementId){var elementSeenJson=sessionStorage.getItem(visualElementType)||"{}";try{return!0===JSON.parse(elementSeenJson)[visualElementId]}catch(e){return!1}}function createKey(scriptName,levelId,prefix){return(prefix?prefix+"_":"")+scriptName+"_"+levelId}clientState.queryParams=__webpack_require__("./src/code-studio/utils.js").queryParams,clientState.EXPIRY_DAYS=365,clientState.MAXIMUM_CACHABLE_RESULT=999,clientState.reset=function(){try{sessionStorage.clear()}catch(e){}},clientState.clearProgress=function(){sessionStorage.removeItem("progress"),sessionStorage.removeItem("lines"),function removeItemsWithPrefix(sessionStorage,prefix){Object.keys(sessionStorage).filter((function(key){return key.startsWith(prefix)})).forEach((function(key){return sessionStorage.removeItem(key)}))}(sessionStorage,"source_")},clientState.sourceForLevel=function(scriptName,levelId,timestamp){var data=sessionStorage.getItem(createKey(scriptName,levelId,"source"));if(data){var parsed;try{parsed=JSON.parse(data)}catch(e){return}if(!timestamp||parsed.timestamp>timestamp)return parsed.source}},clientState.writeSourceForLevel=function(scriptName,levelId,timestamp,source){void 0!==source&&(0,_utils.trySetSessionStorage)(createKey(scriptName,levelId,"source"),JSON.stringify({source,timestamp}))},clientState.trackProgress=function(scriptName,levelId,testResult){if(testResult&&!(testResult>clientState.MAXIMUM_CACHABLE_RESULT)){var progressData=levelProgressByScript();progressData[scriptName]||(progressData[scriptName]={});var savedResult=progressData[scriptName][levelId]||0,mergedResult=(0,_activityUtils.mergeActivityResult)(savedResult,testResult);mergedResult!==savedResult&&(progressData[scriptName][levelId]=mergedResult,(0,_utils.trySetSessionStorage)("progress",JSON.stringify(progressData)))}},clientState.levelProgress=function(scriptName){return levelProgressByScript()[scriptName]||{}},clientState.hasSeenVideo=function(videoId){return hasSeenVisualElement("video",videoId)},clientState.recordVideoSeen=function(videoId){recordVisualElementSeen("video",videoId)},clientState.hasSeenCallout=function(calloutId){return hasSeenVisualElement("callout",calloutId)},clientState.recordCalloutSeen=function(calloutId){recordVisualElementSeen("callout",calloutId)}},"./src/code-studio/url_test.js":module=>{module.exports=function testImageAccess(url){var element,successCallback=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){},failureCallback=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){},timeoutMs=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5e3,videoElement=arguments.length>4&&void 0!==arguments[4]&&arguments[4];element=videoElement?document.createElement("video"):new Image;var called=!1;function finish(callback){return function(){called||(called=!0,window.clearTimeout(timeout),callback())}}var timeout=window.setTimeout(finish(failureCallback),timeoutMs);element.onerror=finish(failureCallback),videoElement?element.ondurationchange=finish(successCallback):element.onload=finish(successCallback),element.src=url,window.testImages=window.testImages||[],window.testImages.push(element)}},"./src/code-studio/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.environmentSpecificCookieName=function environmentSpecificCookieName(name){var rack_env=window.dashboard.rack_env;if("production"===rack_env)return name;return"".concat(name,"_").concat(rack_env)},exports.getRootDomainFromHostname=function getRootDomainFromHostname(hostname){return hostname.split(".").slice(-2).join(".")},exports.hasQueryParam=function hasQueryParam(name){var parsedParams=queryParams();return Object.prototype.hasOwnProperty.call(parsedParams,name)},exports.queryParams=queryParams,exports.resetWindowLocation=function resetWindowLocation(){windowLocation=window.location},exports.setWindowLocation=function setWindowLocation(fakeLocation){windowLocation=fakeLocation},exports.updateQueryParam=function updateQueryParam(param,value){var useReplaceState=arguments.length>2&&void 0!==arguments[2]&&arguments[2],newString=_queryString.default.stringify(_objectSpread(_objectSpread({},_queryString.default.parse(windowLocation.search)),{},_defineProperty({},param,value))),newLocation=windowLocation.pathname;newString&&(newLocation+="?"+newString);var method=useReplaceState?"replaceState":"pushState";window.history[method](null,document.title,newLocation)};var _queryString=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/query-string/index.js"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var windowLocation=window.location;function queryParams(name){var parsed=_queryString.default.parse(windowLocation.search);return name?parsed[name]:parsed}},"./src/code-studio/videos.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_trackEvent=_interopRequireDefault(__webpack_require__("./src/util/trackEvent.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactDom=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/index.js")),_FallbackPlayerCaptionDialogLink=_interopRequireDefault(__webpack_require__("./src/templates/FallbackPlayerCaptionDialogLink.jsx")),_video=_interopRequireDefault(__webpack_require__("./node_modules/video.js/dist/video.es.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var currentVideoOptions,testImageAccess=__webpack_require__("./src/code-studio/url_test.js"),clientState=__webpack_require__("./src/code-studio/clientState.js"),TAB_NAV_CLASS=".ui-tabs-nav",MODAL_CLASS=".video-modal",videos=module.exports={};function onVideoEnded(){(0,_jquery.default)(MODAL_CLASS).trigger("ended")}function createVideo(options){var videoDiv=(0,_jquery.default)('<iframe id="video"/>').addClass("video-player").attr({src:options.src,allowfullscreen:"true",scrolling:"no"});return(0,_jquery.default)("<div id='videoTabContainer'></div>").append(videoDiv)}function resizeVideoPlayer(){var containerHeight,containerWidth,$div=(0,_jquery.default)(MODAL_CLASS),navBarHeight=$div.find(TAB_NAV_CLASS).outerHeight(),maxHeight=.8*window.innerHeight,maxWidth=.8*window.innerWidth;1.7777777777777777*(maxHeight-navBarHeight)<maxWidth?(containerHeight=maxHeight,containerWidth=1.7777777777777777*(maxHeight-navBarHeight)):(containerHeight=maxWidth/1.7777777777777777+navBarHeight,containerWidth=maxWidth),$div.height(containerHeight),$div.width(containerWidth);var top=(window.innerHeight-containerHeight)/2;$div.css({position:"fixed",top,left:"50%",marginLeft:containerWidth/-2+"px"});var availableHeight=getVideoHeight();(0,_jquery.default)(".video-player").height(availableHeight),(0,_jquery.default)("#notes-outer").height(availableHeight)}function getVideoHeight(){var container=(0,_jquery.default)(MODAL_CLASS);return container.innerHeight()-container.find(TAB_NAV_CLASS).outerHeight()}function setupVideoFallback(videoInfo,playerWidth,playerHeight,shouldStillAddCallback){shouldStillAddCallback=shouldStillAddCallback||function(){return!0},videoInfo.enable_fallback&&(videoInfo.force_fallback?addFallbackVideoPlayer(videoInfo,playerWidth,playerHeight):videos.onYouTubeBlocked((function(){shouldStillAddCallback()&&addFallbackVideoPlayer(videoInfo,playerWidth,playerHeight)}),videoInfo))}function addFallbackVideoPlayer(videoInfo,playerWidth,playerHeight){var containerDivStyle,fallbackPlayerID="fallbackPlayer"+Date.now(),extraVideoStyle="",dimensions="";"100%"===playerWidth&&"100%"===playerHeight?(containerDivStyle="position: absolute; top: 0; bottom: 0; left: 0; right: 0",extraVideoStyle="vjs-fill"):(containerDivStyle="",dimensions='width="'+playerWidth+'" height="'+playerHeight+'" ');var playerCode='<div style="'+containerDivStyle+'"><video id="'+fallbackPlayerID+'" '+dimensions+(videoInfo.autoplay?"autoplay ":"")+'class="video-js vjs-default-skin vjs-big-play-centered '+extraVideoStyle+'" controls preload="auto" poster="'+videoInfo.thumbnail+'"><source src="'+videoInfo.download+'" type="video/mp4"/></video></div>';(0,_jquery.default)("#videoTabContainer").empty(),(0,_jquery.default)("#videoTabContainer").append(playerCode);var videoPlayer=(0,_video.default)(fallbackPlayerID,{nativeControlsForTouch:!0},(function(){var $fallbackPlayer=(0,_jquery.default)("#"+fallbackPlayerID);function resizeFallbackPlayer(){var width=(0,_jquery.default)(MODAL_CLASS).innerWidth(),height=getVideoHeight();width&&height&&videoPlayer.dimensions(width,height)}this.on("error",(function(e){$fallbackPlayer.addClass("fallback-video-player-failed"),function hasNotesTab(){return(0,_jquery.default)('.dash_modal_body a[href="#notes-outer"]').length>0}()&&function openNotesTab(){var notesTabIndex=(0,_jquery.default)('.dash_modal_body a[href="#notes-outer"]').parent().index();(0,_jquery.default)(".ui-tabs").tabs("option","active",notesTabIndex)}()}));var resizeFallbackPlayerListener=_lodash.default.throttle(resizeFallbackPlayer,200);window.addEventListener("resize",resizeFallbackPlayerListener),window.addEventListener("scroll",resizeFallbackPlayerListener),resizeFallbackPlayer(),$fallbackPlayer.parents(".modal").one("hidden.bs.modal",(function(){window.removeEventListener("resize",resizeFallbackPlayerListener),window.removeEventListener("scroll",resizeFallbackPlayerListener),videoPlayer.dispose()}))})),analyticsData={url:location.href,video:videoInfo.download,fallback:"code.org"};videoPlayer.on("ready",(function(){return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_LOADED,analyticsData)})),videoPlayer.on("play",(function(){return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_STARTED,analyticsData)})),videoPlayer.on("pause",(function(){return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_PAUSED,analyticsData)})),videoPlayer.on("ended",(function(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_ENDED,analyticsData),onVideoEnded()})),function showFallbackPlayerCaptionLink(inDialog){var mountPoint=document.getElementById("fallback-player-caption-dialog-link");mountPoint&&_reactDom.default.render(_react.default.createElement(_FallbackPlayerCaptionDialogLink.default,{inDialog}),mountPoint)}(videoInfo.inDialog)}function upgradeInsecureOptions(options){options.src&&(options.src=options.src.replace(/^http:\/\//,"//")),options.download&&(options.download=options.download.replace(/^http:\/\//,"//"))}videos.createVideoWithFallback=function(parentElement,options,width,height,fullWidth,roundedCorners){upgradeInsecureOptions(options);var video=createVideo(options);return fullWidth?(video.addClass("video-player-full-width"),parentElement.addClass("video-content-full-width"),width="100%",height="100%"):video.width(width).height(height),roundedCorners&&video.addClass("video-player-rounded-corners"),parentElement&&parentElement.append(video),setupVideoFallback(options,width,height),video},window.onYouTubeIframeAPIReady=function(){var player=new YT.Player("video",{events:{onReady:function onReady(event){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.VIDEO_LOADED,{url:location.href,video:player.getVideoUrl()})},onStateChange:function onStateChange(state){var _amplitudeEventMap,amplitudeEvent=(_defineProperty(_amplitudeEventMap={},YT.PlayerState.PLAYING,_AnalyticsConstants.EVENTS.VIDEO_STARTED),_defineProperty(_amplitudeEventMap,YT.PlayerState.PAUSED,_AnalyticsConstants.EVENTS.VIDEO_PAUSED),_defineProperty(_amplitudeEventMap,YT.PlayerState.ENDED,_AnalyticsConstants.EVENTS.VIDEO_ENDED),_amplitudeEventMap)[state.data];amplitudeEvent&&_AnalyticsReporter.default.sendEvent(amplitudeEvent,{url:location.href,video:player.getVideoUrl()}),state.data===YT.PlayerState.ENDED&&onVideoEnded()},onError:function onError(error){if(currentVideoOptions){var size=error.target.f.getBoundingClientRect();addFallbackVideoPlayer(currentVideoOptions,size.width,size.height)}}}})},videos.showVideoDialog=function(options,forceShowVideo){if(void 0===forceShowVideo&&(forceShowVideo=!1),void 0===options.onClose&&(options.onClose=function(){}),clientState.hasSeenVideo(options.key)&&!1===forceShowVideo)return options.onClose(),void(options.redirect&&(window.location.href=options.redirect));options.inDialog=!0,upgradeInsecureOptions(options);var body=(0,_jquery.default)("<div/>"),content=(0,_jquery.default)("#notes-content").contents().clone();content.find(".video-name").text(options.name),body.append(content);var video=createVideo(options);body.append(video);var notesDiv=(0,_jquery.default)('<div id="notes-outer"><div id="notes"/></div>');body.append(notesDiv),function getShowNotes(key,success,error){_jquery.default.ajax({url:"/notes/"+key,success,error})}(options.key,(function(data){notesDiv.children("#notes").html(data)}),(function(){!function openVideoTab(){var notesTabIndex=(0,_jquery.default)('.dash_modal_body a[href="#videoTabContainer"]').parent().index();(0,_jquery.default)(".ui-tabs").tabs("option","active",notesTabIndex)}(),body.find('a[href="#notes-outer"]').parent().remove(),body.tabs("refresh")}));var dialog=new Dialog({body,redirect:options.redirect}),$div=(0,_jquery.default)(dialog.div);$div.addClass("video-modal"),(0,_jquery.default)(MODAL_CLASS).on("remove",(function(){video.removeAttr("src"),options.onClose(),clientState.recordVideoSeen(options.key);var event=document.createEvent("Event");event.initEvent("videoHidden",!0,!0),document.dispatchEvent(event)}));var tabHandler=function tabHandler(event,ui){var tab=ui.tab||ui.newTab,videoElement=(0,_jquery.default)("#video");if("#video"===tab.find("a").attr("href"))videoElement.attr("src",options.src);else{video.removeAttr("src");var videoJSElement=document.querySelector(".video-js");videoJSElement&&(0,_video.default)(videoJSElement).pause()}var selected=tab.parents(".ui-tabs").tabs("option","active");try{window.sessionStorage.setItem("lastTab",selected)}catch(exc){console.log("Caught exception in sessionStorage.setItem: ",exc)}},lastTab=window.sessionStorage.getItem("lastTab");body.tabs({event:"click touchend",activate:tabHandler,create:tabHandler,active:null!==lastTab?lastTab:0});var download=(0,_jquery.default)("<a/>").append((0,_jquery.default)('<i class="fa fa-download" />')).addClass("download-video btn").css("float","left").attr("href",options.download).click((function(){return(0,_trackEvent.default)("downloadvideo","startdownloadvideo",options.key),!0}));"rtl"===document.dir&&download.css("float","right");var nav=$div.find(TAB_NAV_CLASS);nav.append(download);var fallbackPlayerLinkDiv=(0,_jquery.default)('<div id="fallback-player-caption-dialog-link"><a style="opacity: 0; pointer-events: none">'+_locale.default.fallbackVideoClosedCaptioningLink()+"</a></div>").css({"padding-right":"40px","padding-top":"9px","text-align":"right"});nav.append(fallbackPlayerLinkDiv);var resizeVideoPlayerListener=_lodash.default.throttle(resizeVideoPlayer,200);if(window.addEventListener("scroll",resizeVideoPlayerListener),window.addEventListener("resize",resizeVideoPlayerListener),resizeVideoPlayer(),currentVideoOptions=options,window.YT&&window.YT.loaded)window.onYouTubeIframeAPIReady();else{var tag=document.createElement("script");tag.src="https://www.youtube.com/iframe_api";var firstScriptTag=document.getElementsByTagName("script")[0];firstScriptTag.parentNode.insertBefore(tag,firstScriptTag)}dialog.show();var videoModal=(0,_jquery.default)(MODAL_CLASS);videoModal.on("ended",(function(){dialog.hide()}));var event=document.createEvent("Event");event.initEvent("videoShown",!0,!0),document.dispatchEvent(event);var shouldStillAdd=!0;videoModal.one("hidden.bs.modal",(function(){window.removeEventListener("resize",resizeVideoPlayerListener),window.removeEventListener("scroll",resizeVideoPlayerListener),shouldStillAdd=!1}));var divHeight=getVideoHeight();setupVideoFallback(options,$div.width(),divHeight,(function(){return shouldStillAdd}))},videos.onYouTubeBlocked=function(youTubeBlockedCallback,videoInfo){var key=videoInfo?videoInfo.key:void 0,noCookie=!videoInfo||-1!==videoInfo.src.indexOf("youtube-nocookie.com");testImageAccess(function youTubeAvailabilityEndpointURL(noCookie){var url=window.document.URL.toString();if(url.indexOf("force_youtube_fallback")>=0)return"https://unreachable-test-subdomain.example.com/favicon.ico";if(url.indexOf("force_youtube_player")>=0)return"https://code.org/images/favicon.ico";return noCookie?"https://www.youtube-nocookie.com/favicon.ico":"https://www.youtube.com/favicon.ico"}(noCookie)+"?"+Math.random(),(function(){(0,_trackEvent.default)("showvideo","startVideoYouTube",key)}),(function(){(0,_trackEvent.default)("showvideo","startVideoFallback",key),youTubeBlockedCallback()}))}},"./src/fontConstants.js":module=>{module.exports={"metropolis-font":"'Metropolis', sans-serif","main-font":"'Metropolis', sans-serif","thin-font-weight":"100","extra-light-font-weight":"200","light-font-weight":"300","regular-font-weight":"400","medium-font-weight":"500","semi-bold-font-weight":"600","bold-font-weight":"700","extra-bold-font-weight":"800","black-font-weight":"900","main-font-thin":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"normal"},"main-font-thin-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"italic"},"main-font-extra-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"normal"},"main-font-extra-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"italic"},"main-font-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"normal"},"main-font-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"italic"},"main-font-regular":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"normal"},"main-font-regular-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"italic"},"main-font-medium":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"normal"},"main-font-medium-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"italic"},"main-font-semi-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"normal"},"main-font-semi-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"italic"},"main-font-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"normal"},"main-font-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"italic"},"main-font-extra-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"normal"},"main-font-extra-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"italic"},"main-font-black":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"normal"},"main-font-black-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"italic"},"barlowSemiCondensed-semibold":"'Barlow Semi Condensed Semibold', sans-serif","barlowSemiCondensed-medium":"'Barlow Semi Condensed Medium', sans-serif","code-font":"'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace","font-awesome-core-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css'","font-awesome-brands-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css'","font-awesome-solid-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css'","font-awesome-regular-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css'","font-awesome-v4-fonts-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css'","font-awesome-v4-shims-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css'"}},"./src/lib/util/urlHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaTagDescription=exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION=exports.ADD_A_PERSONAL_LOGIN_HELP_URL=void 0,exports.pegasus=function pegasus(relativeUrl){if(window.dashboard&&window.dashboard.CODE_ORG_URL)return window.dashboard.CODE_ORG_URL+relativeUrl;return relativeUrl},exports.setPegasusOrigin=function setPegasusOrigin(origin){window.dashboard=window.dashboard||{},window.dashboard.CODE_ORG_URL=origin},exports.setStudioOrigin=function setStudioOrigin(origin){window.pegasus=window.pegasus||{},window.pegasus.STUDIO_URL=origin},exports.studio=function studio(relativeUrl){if(window.pegasus&&window.pegasus.STUDIO_URL)return window.pegasus.STUDIO_URL+relativeUrl;return relativeUrl};var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var metaTagDescription=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")).default.memoize((function(relativeUrl){return fetch(relativeUrl).then((function(response){return Promise.all([response.status,response.text()])})).then((function(_ref){var _ref2=_slicedToArray(_ref,2),status=_ref2[0],text=_ref2[1];return status<200||status>=300?relativeUrl:(0,_jquery.default)(text).filter("meta[name='description']").attr("content")||relativeUrl})).catch((function(error){return relativeUrl}))}));exports.metaTagDescription=metaTagDescription;exports.ADD_A_PERSONAL_LOGIN_HELP_URL="https://support.code.org/hc/en-us/articles/115001475131-Adding-a-personal-login-to-a-teacher-created-account";exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION="https://support.code.org/hc/en-us/articles/360015983631"},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/constants.js"),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_assertThisInitialized(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_assertThisInitialized(_this),"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);exports.default=BaseDialog,_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/templates/FallbackPlayerCaptionDialogLink.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_urlHelpers=__webpack_require__("./src/lib/util/urlHelpers.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var FallbackPlayerCaptionDialogLink=function(_React$Component){function FallbackPlayerCaptionDialogLink(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_assertThisInitialized(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"state",{open:!1}),_defineProperty(_assertThisInitialized(_this),"open",(function(){return _this.setState({open:!0})})),_defineProperty(_assertThisInitialized(_this),"close",(function(){return _this.setState({open:!1})})),_this}return _inheritsLoose(FallbackPlayerCaptionDialogLink,_React$Component),FallbackPlayerCaptionDialogLink.prototype.render=function render(){return _react.default.createElement("div",null,_react.default.createElement(FallbackPlayerCaptionDialog,{isDialogOpen:this.state.open,handleClose:this.close}),!this.props.inDialog&&_react.default.createElement("span",null,"|  "),_react.default.createElement("a",{className:"ui-test-fallback-player-caption-dialog-link",onClick:this.open,style:styles.link},_locale.default.fallbackVideoClosedCaptioningLink()))},FallbackPlayerCaptionDialogLink}(_react.default.Component);exports.default=FallbackPlayerCaptionDialogLink,_defineProperty(FallbackPlayerCaptionDialogLink,"propTypes",{inDialog:_propTypes.default.bool});var FallbackPlayerCaptionDialog=function(_Component){function FallbackPlayerCaptionDialog(){return _Component.apply(this,arguments)||this}return _inheritsLoose(FallbackPlayerCaptionDialog,_Component),FallbackPlayerCaptionDialog.prototype.render=function render(){return _react.default.createElement(_BaseDialog.default,{useUpdatedStyles:!0,isOpen:this.props.isDialogOpen,style:styles.dialog,handleClose:this.props.handleClose},_react.default.createElement("h2",{className:"ui-test-fallback-player-caption-dialog"},_locale.default.fallbackVideoClosedCaptioningDialogHeading()),_react.default.createElement("div",null,_locale.default.fallbackVideoClosedCaptioningDialogBody()),_react.default.createElement("div",{style:styles.dialogLinkContainer},_react.default.createElement("a",{style:styles.dialogLink,href:(0,_urlHelpers.pegasus)("/educate/it"),target:"_blank",rel:"noopener noreferrer"},_locale.default.fallbackVideoClosedCaptioningDialogBodyLink())),_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,className:"ui-test-fallback-player-caption-dialog-close",text:_locale.default.fallbackVideoClosedCaptioningDialogClose(),onClick:this.props.handleClose,color:_Button.default.ButtonColor.brandSecondaryDefault})))},FallbackPlayerCaptionDialog}(_react.Component);_defineProperty(FallbackPlayerCaptionDialog,"propTypes",{isDialogOpen:_propTypes.default.bool.isRequired,handleClose:_propTypes.default.func});var styles={link:{cursor:"pointer"},dialog:function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({paddingLeft:20,paddingRight:20,paddingBottom:20,textAlign:"left"},_fontConstants.default["main-font-regular"]),dialogLinkContainer:{marginTop:20},dialogLink:{color:"#005580"}};module.exports=exports.default},"./src/templates/VideoThumbnail.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _videos=__webpack_require__("./src/code-studio/videos.js"),_propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_types=__webpack_require__("./src/templates/types.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var VideoThumbnail=function(_Component){function VideoThumbnail(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_Component.call.apply(_Component,[this].concat(args))||this),"onThumbnailClick",(function(){var video=_this.props.video;_this.props.onClick&&_this.props.onClick(),_this.props.openInNewTab?window.open(video.src,"_blank","noopener,noreferrer"):(0,_videos.showVideoDialog)({src:video.src,name:video.name,key:video.key,download:video.download,thumbnail:video.thumbnail,enable_fallback:video.enable_fallback,autoplay:video.autoplay},!0)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(VideoThumbnail,_Component),VideoThumbnail.prototype.render=function render(){var video=this.props.video;return _react.default.createElement("a",{style:styles.videoLink,onClick:this.onThumbnailClick},_react.default.createElement("img",{style:styles.videoThumbnail,src:video.thumbnail,alt:video.name}),_react.default.createElement("span",null,video.name))},VideoThumbnail}(_react.Component);exports.default=VideoThumbnail,_defineProperty(VideoThumbnail,"propTypes",{video:_types.videoDataShape,onClick:_propTypes.default.func,openInNewTab:_propTypes.default.bool});var styles={videoLink:{display:"inline-block",margin:8,fontWeight:"bold",fontSize:16,lineHeight:"25px",cursor:"pointer"},videoThumbnail:{borderRadius:5,height:40,width:"auto",marginRight:8}};module.exports=exports.default},"./src/templates/teacherDashboard/DialogFooter.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var style={aboveFooter:{height:"90px"},footer:{position:"absolute",height:"100px",padding:"0 20px",left:"0",right:"0",bottom:"0",background:"white",zIndex:"500"},buttonRow:{display:"flex",flexFlow:"row",justifyContent:"space-between"},rightAlign:{justifyContent:"flex-end"}},DialogFooter=function(_Component){function DialogFooter(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(DialogFooter,_Component),DialogFooter.prototype.render=function render(){var buttonRowStyle=this.props.rightAlign?_objectSpread(_objectSpread({},style.buttonRow),style.rightAlign):style.buttonRow;return _react.default.createElement("div",null,_react.default.createElement("div",{style:style.aboveFooter}),_react.default.createElement("div",{style:style.footer},_react.default.createElement("hr",null),_react.default.createElement("div",{style:buttonRowStyle},this.props.children)))},DialogFooter}(_react.Component);exports.default=DialogFooter,_defineProperty(DialogFooter,"propTypes",{rightAlign:_propTypes.default.bool,children:_propTypes.default.any}),module.exports=exports.default},"./src/templates/types.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.videoDataShape=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));var videoDataShape=_propTypes.default.shape({src:_propTypes.default.string.isRequired,name:_propTypes.default.string,key:_propTypes.default.string,download:_propTypes.default.string,thumbnail:_propTypes.default.string,enable_fallback:_propTypes.default.bool,autoplay:_propTypes.default.bool});exports.videoDataShape=videoDataShape},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",brand_teal_5:"#DFF2F4",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_500:"#94979B",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./src/util/sharedConstants.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserTypes=exports.StudentGradeLevels=exports.SectionLoginType=exports.RubricUnderstandingLevels=exports.RubricAiEvaluationStatus=exports.RestrictedPublishProjectTypes=exports.PostMilestoneMode=exports.PlGradeValue=exports.PiiTypes=exports.LmsLinks=exports.LevelStatus=exports.LevelKind=exports.FeaturedProjectStatus=exports.FeaturedProjectConstants=exports.ErrorSeverityLevels=exports.EmailLinks=exports.DanceSongManifestFilename=exports.ConditionallyPublishableProjectTypes=exports.ChildAccountComplianceStates=exports.CensusConstants=exports.ArtistAutorunOptions=exports.AlwaysPublishableProjectTypes=exports.AllPublishableProjectTypes=exports.AiTutorTypes=exports.AiTutorInteractionStatus=exports.AbuseConstants=void 0;exports.ArtistAutorunOptions={full_auto_run:"FULL_AUTO_RUN"};exports.LevelKind={peer_review:"peer_review",assessment:"assessment",puzzle:"puzzle",unplugged:"unplugged",level:"level",stage_extras:"stage_extras"};exports.LevelStatus={not_tried:"not_tried",submitted:"submitted",perfect:"perfect",passed:"passed",attempted:"attempted",review_accepted:"review_accepted",review_rejected:"review_rejected",dots_disabled:"dots_disabled",free_play_complete:"free_play_complete",completed_assessment:"completed_assessment"};exports.SectionLoginType={word:"word",picture:"picture",email:"email",google_classroom:"google_classroom",clever:"clever",lti_v1:"lti_v1"};exports.StudentGradeLevels=["K","1","2","3","4","5","6","7","8","9","10","11","12","Other"];exports.PlGradeValue="pl";exports.PostMilestoneMode={all:"all",successful_runs_and_final_level_only:"successful_runs_and_final_level_only",final_level_only:"final_level_only"};exports.AlwaysPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys"];exports.AllPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys","applab","gamelab","spritelab"];exports.ConditionallyPublishableProjectTypes=["applab","gamelab"];exports.AbuseConstants={ABUSE_THRESHOLD:15};exports.ErrorSeverityLevels={WARN:2,ERROR:3,FATAL:4};exports.RestrictedPublishProjectTypes=["spritelab"];exports.RubricUnderstandingLevels={EXTENSIVE:3,CONVINCING:2,LIMITED:1,NONE:0};exports.RubricAiEvaluationStatus={QUEUED:0,RUNNING:1,SUCCESS:2,FAILURE:1e3,PII_VIOLATION:1001,PROFANITY_VIOLATION:1002};exports.EmailLinks={PRIVACY_POLICY_URL:"https://code.org/privacy",CONTACT_US_URL:"https://code.org/contact",TOS_URL:"https://code.org/tos",STUDENT_PRIVACY_PLEDGE_URL:"https://studentprivacypledge.org/signatories/",COMMON_SENSE_MEDIA_URL:"https://privacy.commonsense.org/evaluation/code.org",CDO_SUPPORT_MAILTO:"mailto:support@code.org"};exports.ChildAccountComplianceStates={LOCKED_OUT:"l",REQUEST_SENT:"s",PERMISSION_GRANTED:"g"};exports.CensusConstants={CURRENT_CENSUS_SCHOOL_YEAR:2023};exports.DanceSongManifestFilename="songManifest2024_v2.json";exports.AiTutorInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",OK:"ok",UNKNOWN:"unknown"};exports.AiTutorTypes={COMPILATION:"compilation",VALIDATION:"validation",GENERAL_CHAT:"general_chat"};exports.PiiTypes={EMAIL:"email",PHONE:"phone",ADDRESS:"address"};exports.FeaturedProjectStatus={active:"active",bookmarked:"bookmarked",archived:"archived"};exports.FeaturedProjectConstants={MAX_REQUESTS_PER_CATEGORY:15};exports.LmsLinks={INTEGRATION_GUIDE_URL:"https://support.code.org/hc/en-us/articles/23120014459405-Learning-Management-System-LMS-and-Single-Sign-On-SSO-Integrations-and-Support-for-Code-org",INSTALL_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621907533965-Install-Code-org-Integrations-for-your-Learning-Management-System",INSTALL_GUIDE_FOR_CANVAS_URL:"https://support.code.org/hc/en-us/articles/23123273783437-Install-the-Code-org-Integration-for-Canvas",ROSTER_SYNC_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621978654605-Sync-Rosters-with-your-Learning-Management-System",INTEGRATION_EARLY_ACCESS_URL:"https://docs.google.com/forms/d/e/1FAIpQLScjfVR4CZs8Utf5vI4mz3e1q8vdH6RNIgTUWygZXN0oovBSQg/viewform",INTEGRATION_BUG_REPORT_URL:"https://support.code.org/hc/en-us/requests/new?ticket_form_id=14998494738829&tf_23889708=lms_eaf",ADDITIONAL_FEEDBACK_URL:"https://studio.code.org/form/lms_integration_modal_feedback",SUPPORTED_METHODS_URL:"https://github.com/code-dot-org/code-dot-org/blob/staging/docs/lti-integration.md#option-2-manual-entry"};exports.UserTypes={STUDENT:"student",TEACHER:"teacher"}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/VideoThumbnail.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Simple=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_VideoThumbnail=_interopRequireDefault(__webpack_require__("./src/templates/VideoThumbnail.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _default={component:_VideoThumbnail.default};exports.default=_default;var Simple=function Template(args){return _react.default.createElement(_VideoThumbnail.default,args)}.bind({});exports.Simple=Simple,Simple.args={video:{autoplay:!0,download:"https://videos.code.org/2015/csp/applab/functions.mp4",enable_fallback:!0,key:"csp_applab_functions",name:"Introduction to Functions",src:"https://www.youtube-nocookie.com/embed/yPWQfa4CHbw/?autoplay=1&enablejsapi=1&iv_load_policy=3&modestbranding=1&rel=0&showinfo=1&v=yPWQfa4CHbw&wmode=transparent",thumbnail:"https://studio.code.org/c/video_thumbnails/csp_applab_conditionals_2B.jpg"}}},"./node_modules/xtend/immutable.js":module=>{module.exports=function extend(){for(var target={},i=0;i<arguments.length;i++){var source=arguments[i];for(var key in source)hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};var hasOwnProperty=Object.prototype.hasOwnProperty},"?34aa":()=>{}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,