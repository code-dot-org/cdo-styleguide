"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[6172],{"./src/code-studio/pd/form_components_func/FormComponent.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getValidationState=exports.FormContext=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js"));exports.FormContext=_react.default.createContext({}),exports.getValidationState=function getValidationState(name,errors){if(errors.includes(name))return"error"}},"./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.useLabelFor=exports.useDefaultOptions=exports.LabelsContext=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_SafeMarkdown=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/templates/SafeMarkdown.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}var LabelsContext=exports.LabelsContext=_react.default.createContext({}),useLabelFor=exports.useLabelFor=function useLabelFor(name){var labels=(0,_react.useContext)(LabelsContext);return name in labels?_react.default.createElement("div",{className:"inline_markdown"},_react.default.createElement(_SafeMarkdown.default,{openExternalLinksInNewTab:!0,markdown:labels[name]})):(console.warn("Label missing for ".concat(name)),name)};exports.useDefaultOptions=function useDefaultOptions(name,label){return{name,label:useLabelFor(name)||label,controlWidth:{md:6},required:!0}}},"./src/code-studio/pd/form_components_func/form/Buttons.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.ButtonsWithAdditionalTextFieldsFromOptions=exports.ButtonsWithAdditionalTextFields=exports.ButtonsFromOptions=exports.Buttons=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_ButtonList=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/ButtonList.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var Buttons=exports.Buttons=function Buttons(props){var _useContext=(0,_react.useContext)(_FormComponent.FormContext),onChange=_useContext.onChange,data=_useContext.data,errors=_useContext.errors,name=props.name,_props$required=props.required,required=void 0===_props$required||_props$required;return _react.default.createElement(_ButtonList.default,_extends({key:name,groupName:name,required,onChange,selectedItems:data[name],validationState:(0,_FormComponent.getValidationState)(name,errors)},props))};Buttons.propTypes={name:_propTypes.default.string.isRequired,required:_propTypes.default.bool},(exports.ButtonsFromOptions=function ButtonsFromOptions(props){var options=(0,_react.useContext)(_FormComponent.FormContext).options,name=props.name;if(!options[name]||0===options[name].length)throw"Cannot create buttons for ".concat(name," without options");var answers=options[name];return _react.default.createElement(Buttons,_extends({answers},props))}).propTypes={name:_propTypes.default.string.isRequired};var ButtonsWithAdditionalTextFields=exports.ButtonsWithAdditionalTextFields=function ButtonsWithAdditionalTextFields(props){var _useContext3=(0,_react.useContext)(_FormComponent.FormContext),data=_useContext3.data,onChange=_useContext3.onChange,name=props.name,options=props.options,textFieldMap=props.textFieldMap,answers=options.map((function(answer){if(!(answer in textFieldMap))return answer;var textFieldName="".concat(name,"_").concat(textFieldMap[answer]);return{answerText:answer,inputValue:data[textFieldName],onInputChange:function onInputChange(newValue){return onChange(_defineProperty({},textFieldName,newValue))}}}));return _react.default.createElement(Buttons,_extends({answers},props))};ButtonsWithAdditionalTextFields.propTypes={name:_propTypes.default.string.isRequired,options:_propTypes.default.arrayOf(_propTypes.default.string).isRequired,textFieldMap:_propTypes.default.object.isRequired},(exports.ButtonsWithAdditionalTextFieldsFromOptions=function ButtonsWithAdditionalTextFieldsFromOptions(props){var options=(0,_react.useContext)(_FormComponent.FormContext).options,name=props.name;if(!options[name]||0===options[name].length)throw"Cannot create buttons for ".concat(name," without options");var componentOptions=options[name];return _react.default.createElement(ButtonsWithAdditionalTextFields,_extends({options:componentOptions},props))}).propTypes={name:_propTypes.default.string.isRequired}},"./src/code-studio/pd/form_components_func/form/FieldGroup.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.FieldGroup=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_FieldGroup=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/FieldGroup.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}(exports.FieldGroup=function FieldGroup(props){var _useContext=(0,_react.useContext)(_FormComponent.FormContext),errors=_useContext.errors,errorMessages=_useContext.errorMessages,onChange=_useContext.onChange,data=_useContext.data,name=props.name;return _react.default.createElement(_FieldGroup.default,_extends({key:name,id:name,validationState:(0,_FormComponent.getValidationState)(name,errors),errorMessage:errorMessages[name],onChange,value:data[name]||""},props))}).propTypes={name:_propTypes.default.string.isRequired}},"./src/code-studio/pd/form_components_func/form/SelectFieldGroup.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.SelectFieldGroupFromOptions=exports.SelectFieldGroup=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_FieldGroup=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/FieldGroup.jsx")),_utils=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/utils.js")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SelectFieldGroup=exports.SelectFieldGroup=function SelectFieldGroup(props){var renderedOptions,_useContext=(0,_react.useContext)(_FormComponent.FormContext),errors=_useContext.errors,errorMessages=_useContext.errorMessages,onChange=_useContext.onChange,data=_useContext.data,name=props.name,options=props.options,placeholder=props.placeholder;return renderedOptions=Array.isArray(options)?options.map((function(value){var _utils$normalizeAnswe=_utils.default.normalizeAnswer(value),answerText=_utils$normalizeAnswe.answerText,answerValue=_utils$normalizeAnswe.answerValue;return _react.default.createElement("option",{key:answerValue,value:answerValue},answerText)})):Object.keys(options).map((function(key){return _react.default.createElement("option",{key,value:key},options[key])})),_react.default.createElement(_FieldGroup.default,_extends({key:name,id:name,componentClass:"select",validationState:(0,_FormComponent.getValidationState)(name,errors),errorMessage:errorMessages[name],onChange,value:data[name]||""},props),placeholder&&_react.default.createElement("option",{key:"placeholder",value:""},placeholder),renderedOptions)};SelectFieldGroup.propTypes={name:_propTypes.default.string.isRequired,options:_propTypes.default.arrayOf(_propTypes.default.string),placeholder:_propTypes.default.string},(exports.SelectFieldGroupFromOptions=function SelectFieldGroupFromOptions(props){var componentOptions=(0,_react.useContext)(_FormComponent.FormContext).options[props.name];return _react.default.createElement(SelectFieldGroup,_extends({options:componentOptions},props))}).propTypes={name:_propTypes.default.string.isRequired}},"./src/code-studio/pd/form_components_func/form/SingleCheckbox.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.SingleCheckbox=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_SingleCheckbox=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/SingleCheckbox.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}(exports.SingleCheckbox=function SingleCheckbox(props){var _useContext=(0,_react.useContext)(_FormComponent.FormContext),errors=_useContext.errors,data=_useContext.data,onChange=_useContext.onChange,name=props.name,_props$required=props.required,required=void 0===_props$required||_props$required;return _react.default.createElement(_SingleCheckbox.default,_extends({name,required,validationState:(0,_FormComponent.getValidationState)(name,errors),value:data[name],onChange},props))}).propTypes={name:_propTypes.default.string.isRequired,required:_propTypes.default.bool}},"./src/code-studio/pd/form_components_func/form/UsPhoneNumberInput.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.UsPhoneNumberInput=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_UsPhoneNumberInput=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/UsPhoneNumberInput.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}(exports.UsPhoneNumberInput=function UsPhoneNumberInput(props){var _useContext=(0,_react.useContext)(_FormComponent.FormContext),errors=_useContext.errors,errorMessages=_useContext.errorMessages,onChange=_useContext.onChange,data=_useContext.data,name=props.name;return _react.default.createElement(_UsPhoneNumberInput.default,_extends({name,validationState:(0,_FormComponent.getValidationState)(name,errors),errorMessage:errorMessages[name],onChange,value:data[name]},props))}).propTypes={name:_propTypes.default.string.isRequired}},"./src/code-studio/pd/form_components_func/labeled/LabeledCheckBoxes.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledDynamicCheckBoxesWithAdditionalTextFields=exports.LabeledDynamicCheckBoxes=exports.LabeledCheckBoxesWithAdditionalTextFields=exports.LabeledCheckBoxes=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Buttons=__webpack_require__("./src/code-studio/pd/form_components_func/form/Buttons.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledCheckBoxes=function LabeledCheckBoxes(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"check"},props);return _react.default.createElement(_Buttons.ButtonsFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])},(exports.LabeledCheckBoxesWithAdditionalTextFields=function LabeledCheckBoxesWithAdditionalTextFields(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"check",textFieldMap:props.textFieldMap},props);return _react.default.createElement(_Buttons.ButtonsWithAdditionalTextFieldsFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),textFieldMap:_propTypes.default.object},(exports.LabeledDynamicCheckBoxes=function LabeledDynamicCheckBoxes(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"check",answers:props.options},props);return _react.default.createElement(_Buttons.Buttons,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),options:_propTypes.default.array},(exports.LabeledDynamicCheckBoxesWithAdditionalTextFields=function LabeledDynamicCheckBoxesWithAdditionalTextFields(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"check",options:props.options,textFieldMap:props.textFieldMap},props);return _react.default.createElement(_Buttons.ButtonsWithAdditionalTextFields,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),options:_propTypes.default.array,textFieldMap:_propTypes.default.object}},"./src/code-studio/pd/form_components_func/labeled/LabeledInput.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledNumberInput=exports.LabeledLargeInput=exports.LabeledInput=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_FieldGroup=__webpack_require__("./src/code-studio/pd/form_components_func/form/FieldGroup.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var LabeledInput=exports.LabeledInput=function LabeledInput(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"text"},props);return _react.default.createElement(_FieldGroup.FieldGroup,passProps)};LabeledInput.propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])},(exports.LabeledNumberInput=function LabeledNumberInput(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"number"},props);return _react.default.createElement(_FieldGroup.FieldGroup,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])};exports.LabeledLargeInput=function LabeledLargeInput(props){var passProps=_objectSpread({componentClass:"textarea",controlWidth:{md:12},rows:4,maxLength:500},props);return _react.default.createElement(LabeledInput,passProps)}},"./src/code-studio/pd/form_components_func/labeled/LabeledRadioButtons.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledRadioButtonsWithAdditionalTextFields=exports.LabeledRadioButtons=exports.LabeledDynamicRadioButtonsWithAdditionalTextFields=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_Buttons=__webpack_require__("./src/code-studio/pd/form_components_func/form/Buttons.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledRadioButtons=function LabeledRadioButtons(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"radio"},props);return _react.default.createElement(_Buttons.ButtonsFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])},(exports.LabeledRadioButtonsWithAdditionalTextFields=function LabeledRadioButtonsWithAdditionalTextFields(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"radio",textFieldMap:props.textFieldMap},props);return _react.default.createElement(_Buttons.ButtonsWithAdditionalTextFieldsFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),textFieldMap:_propTypes.default.object},(exports.LabeledDynamicRadioButtonsWithAdditionalTextFields=function LabeledDynamicRadioButtonsWithAdditionalTextFields(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"radio",options:props.options,textFieldMap:props.textFieldMap},props);return _react.default.createElement(_Buttons.ButtonsWithAdditionalTextFields,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),options:_propTypes.default.array,textFieldMap:_propTypes.default.object}},"./src/code-studio/pd/form_components_func/labeled/LabeledSelect.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledSelect=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_SelectFieldGroup=__webpack_require__("./src/code-studio/pd/form_components_func/form/SelectFieldGroup.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledSelect=function LabeledSelect(){var props=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),{},{type:"select"},props);return _react.default.createElement(_SelectFieldGroup.SelectFieldGroupFromOptions,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])}},"./src/code-studio/pd/form_components_func/labeled/LabeledSingleCheckbox.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledSingleCheckbox=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_SingleCheckbox=__webpack_require__("./src/code-studio/pd/form_components_func/form/SingleCheckbox.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledSingleCheckbox=function LabeledSingleCheckbox(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),props);return _react.default.createElement(_SingleCheckbox.SingleCheckbox,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])}},"./src/code-studio/pd/form_components_func/labeled/LabeledUsPhoneNumberInput.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LabeledUsPhoneNumberInput=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_UsPhoneNumberInput=__webpack_require__("./src/code-studio/pd/form_components_func/form/UsPhoneNumberInput.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.LabeledUsPhoneNumberInput=function LabeledUsPhoneNumberInput(props){var passProps=_objectSpread(_objectSpread({},(0,_LabeledFormComponent.useDefaultOptions)(props.name,props.label)),props);return _react.default.createElement(_UsPhoneNumberInput.UsPhoneNumberInput,passProps)}).propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element])}},"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_unified=_interopRequireDefault(__webpack_require__("./node_modules/unified/index.js")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var processor=this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact,rendered=Object(processor.processSync(this.props.markdown).result),markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=(0,_unified.default)().use(_redactableMarkdown.default.getParser()).use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHtml:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"});exports.default=SafeMarkdown;module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/code-studio/pd/form_components_func/LabeledFormComponent.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UsPhoneNumber=exports.SingleCheckbox=exports.Select=exports.RadioButtonsWithAdditionalFields=exports.RadioButtons=exports.LargeInput=exports.Input=exports.DynamicRadioButtonsWithAdditionalFields=exports.DynamicCheckboxesWithAdditionalFields=exports.DynamicCheckboxes=exports.CheckboxesWithAdditionalFields=exports.Checkboxes=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactBootstrapStoryDecorator=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/reactBootstrapStoryDecorator.jsx")),_FormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/FormComponent.js"),_LabeledCheckBoxes=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledCheckBoxes.jsx"),_LabeledInput=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledInput.jsx"),_LabeledRadioButtons=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledRadioButtons.jsx"),_LabeledSelect=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledSelect.jsx"),_LabeledSingleCheckbox=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledSingleCheckbox.jsx"),_LabeledUsPhoneNumberInput=__webpack_require__("./src/code-studio/pd/form_components_func/labeled/LabeledUsPhoneNumberInput.jsx"),_LabeledFormComponent=__webpack_require__("./src/code-studio/pd/form_components_func/LabeledFormComponent.jsx"),_excluded=["children"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var OTHER="Other (please specify):",defaultProps=(exports.default={component:_LabeledFormComponent.LabelsContext,decorators:[_reactBootstrapStoryDecorator.default]},{errors:[],errorMessages:{},data:{},options:{},onChange:(0,_addonActions.action)("onChange")}),Context=function Context(_ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded),name=props.name,label=props.label;return _react.default.createElement(_FormComponent.FormContext.Provider,{value:_objectSpread(_objectSpread({},defaultProps),props)},_react.default.createElement(_LabeledFormComponent.LabelsContext.Provider,{value:_defineProperty({},name,label)},children))};Context.propTypes={name:_propTypes.default.string.isRequired,label:_propTypes.default.string.isRequired,children:_propTypes.default.node};var Template=function Template(args){var context=args.context,children=args.children;return _react.default.createElement(Context,context,children)};(exports.SingleCheckbox=Template.bind({})).args={context:{name:"singleCheckbox",label:"This is a single checkbox"},children:_react.default.createElement(_LabeledSingleCheckbox.LabeledSingleCheckbox,{name:"singleCheckbox"})},(exports.Checkboxes=Template.bind({})).args={context:{name:"checkBoxes",label:"Select options",options:{checkBoxes:["option 1","option 2","option 3"]}},children:_react.default.createElement(_LabeledCheckBoxes.LabeledCheckBoxes,{name:"checkBoxes"})},(exports.CheckboxesWithAdditionalFields=Template.bind({})).args={context:{name:"checkBoxesWithOther",label:"Select options and add text",options:{checkBoxesWithOther:["option 1","option 2",OTHER]}},children:_react.default.createElement(_LabeledCheckBoxes.LabeledCheckBoxesWithAdditionalTextFields,{name:"checkBoxesWithOther",textFieldMap:_defineProperty({},OTHER,"other")})},(exports.RadioButtons=Template.bind({})).args={context:{name:"radioButtons",label:"Select an option",options:{radioButtons:["option 1","option 2","option 3"]}},children:_react.default.createElement(_LabeledRadioButtons.LabeledRadioButtons,{name:"radioButtons"})},(exports.RadioButtonsWithAdditionalFields=Template.bind({})).args={context:{name:"radioButtonsWithOther",label:"Select an option and add text",options:{radioButtonsWithOther:["option 1","option 2",OTHER]}},children:_react.default.createElement(_LabeledRadioButtons.LabeledRadioButtonsWithAdditionalTextFields,{name:"radioButtonsWithOther",textFieldMap:_defineProperty({},OTHER,"other")})},(exports.DynamicRadioButtonsWithAdditionalFields=Template.bind({})).args={context:{name:"dynamicRadioButtonsWithOther",label:"Select a dynamic option and add text"},children:_react.default.createElement(_LabeledRadioButtons.LabeledDynamicRadioButtonsWithAdditionalTextFields,{name:"dynamicRadioButtonsWithOther",options:[1,2,3].map((function(n){return"Dynamic option #".concat(n)})).concat([OTHER]),textFieldMap:_defineProperty({},OTHER,"other")})},(exports.DynamicCheckboxes=Template.bind({})).args={context:{name:"dynamicCheckBoxes",label:"Select all dynamic options that apply"},children:_react.default.createElement(_LabeledCheckBoxes.LabeledDynamicCheckBoxes,{name:"dynamicCheckBoxes",options:[1,2,3].map((function(n){return"Dynamic option #".concat(n)}))})},(exports.DynamicCheckboxesWithAdditionalFields=Template.bind({})).args={context:{name:"dynamicCheckboxesWithOther",label:"Select a dynamic option and add text"},children:_react.default.createElement(_LabeledCheckBoxes.LabeledDynamicCheckBoxesWithAdditionalTextFields,{name:"dynamicCheckboxesWithOther",options:[1,2,3].map((function(n){return"Dynamic option #".concat(n)})).concat([OTHER]),textFieldMap:_defineProperty({},OTHER,"other")})},(exports.Select=Template.bind({})).args={context:{name:"select",label:"Select an option",options:{select:["option 1","option 2","option 3"]}},children:_react.default.createElement(_LabeledSelect.LabeledSelect,{name:"select",placeholder:"Select an option"})},(exports.Input=Template.bind({})).args={context:{name:"input",label:"Enter some text"},children:_react.default.createElement(_LabeledInput.LabeledInput,{name:"input"})},(exports.LargeInput=Template.bind({})).args={context:{name:"largeInput",label:"Enter some longer text"},children:_react.default.createElement(_LabeledInput.LabeledLargeInput,{name:"largeInput"})},(exports.UsPhoneNumber=Template.bind({})).args={context:{name:"usPhoneNumber",label:"Enter a phone number"},children:_react.default.createElement(_LabeledUsPhoneNumberInput.LabeledUsPhoneNumberInput,{name:"usPhoneNumber"})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,