(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[8196],{"./src/code-studio/pd/form_components/ButtonList.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.otherString=exports.default=exports.ButtonList=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_reactBootstrap=__webpack_require__("./node_modules/react-bootstrap/es/index.js"),_utils=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/utils.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.otherString="Other:";var ButtonList=function(_React$Component){function ButtonList(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"handleChange",(function(event){var value;if("radio"===_this.props.type)value=event.target.value;else if("check"===_this.props.type){var currentSelection=new Set(_this.props.selectedItems);event.target.checked?currentSelection.add(event.target.value):currentSelection.delete(event.target.value),value=currentSelection.size>0?Array.from(currentSelection):null}_this.props.onChange(_defineProperty({},_this.props.groupName,value))})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ButtonList,_React$Component);var _proto=ButtonList.prototype;return _proto.handleAnswerInputChange=function handleAnswerInputChange(answer,event){answer.onInputChange(event.target.value)},_proto.renderInputComponents=function renderInputComponents(){var _this2=this,InputComponent={radio:_reactBootstrap.Radio,check:_reactBootstrap.Checkbox}[this.props.type],answers=this.props.answers;return this.props.includeOther&&(answers=_lodash.default.concat(answers,{answerText:"Other:",inputId:"".concat(this.props.groupName,"_other")})),answers.map((function(answer,i){var _utils$normalizeAnswe=_utils.default.normalizeAnswer(answer),answerText=_utils$normalizeAnswe.answerText,answerValue=_utils$normalizeAnswe.answerValue,checked="radio"===_this2.props.type?_this2.props.selectedItems===answerValue:!!(_this2.props.selectedItems&&_this2.props.selectedItems.indexOf(answerValue)>=0);return _react.default.createElement(InputComponent,{value:answerValue,label:answerText,key:i,name:_this2.props.groupName,onChange:_this2.props.onChange?_this2.handleChange:void 0,checked:_this2.props.onChange?checked:void 0},"object"===_typeof(answer)&&void 0===answer.answerValue?_react.default.createElement("div",null,_react.default.createElement("span",{style:styles.inputLabel},answerText)," ",_react.default.createElement("input",{type:"text",value:answer.onInputChange?answer.inputValue||"":void 0,id:answer.inputId,maxLength:"200",onChange:answer.onInputChange?_this2.handleAnswerInputChange.bind(_this2,answer):void 0})):answerText)}))},_proto.render=function render(){var validationState=this.props.validationState;this.props.errorText&&(validationState="error");var columnCount=this.props.columnCount?this.props.columnCount:1;return _react.default.createElement(_reactBootstrap.FormGroup,{id:this.props.groupName,controlId:this.props.groupName,validationState},_react.default.createElement(_reactBootstrap.ControlLabel,null,this.props.label,this.props.required&&_react.default.createElement("span",{style:{color:"red"}}," *")),_react.default.createElement(_reactBootstrap.FormGroup,{style:{columnCount}},this.renderInputComponents()),this.props.errorText&&_react.default.createElement(_reactBootstrap.HelpBlock,null,this.props.errorText),!this.props.suppressLineBreak&&_react.default.createElement("br",null))},ButtonList}(_react.default.Component);exports.ButtonList=ButtonList,_defineProperty(ButtonList,"propTypes",{type:_propTypes.default.oneOf(["radio","check"]).isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]).isRequired,groupName:_propTypes.default.string.isRequired,answers:_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.shape({answerText:_propTypes.default.string.isRequired,inputId:_propTypes.default.string,inputValue:_propTypes.default.string,onInputChange:_propTypes.default.func}),_propTypes.default.shape({answerText:_propTypes.default.string.isRequired,answerValue:_propTypes.default.string.isRequired})])).isRequired,includeOther:_propTypes.default.bool,onChange:_propTypes.default.func,selectedItems:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.string]),required:_propTypes.default.bool,validationState:_propTypes.default.string,errorText:_propTypes.default.string,columnCount:_propTypes.default.number,suppressLineBreak:_propTypes.default.bool}),_defineProperty(ButtonList,"defaultProps",{suppressLineBreak:!1});var styles={inputLabel:{verticalAlign:"top",marginRight:15}},_default=ButtonList;exports.default=_default},"./src/code-studio/pd/form_components/FieldGroup.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactBootstrap=__webpack_require__("./node_modules/react-bootstrap/es/index.js"),_excluded=["id","validationState","errorMessage","label","required","onChange","children","labelWidth","controlWidth","inlineControl"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var REQUIRED=_react.default.createElement("span",{style:{color:"red"}}," *"),FieldGroup=function(_React$Component){function FieldGroup(props){var _this;return(_this=_React$Component.call(this,props)||this).handleChange=_this.handleChange.bind(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this)),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(FieldGroup,_React$Component);var _proto=FieldGroup.prototype;return _proto.handleChange=function handleChange(event){var value=event.target.value;("number"!==this.props.type||value.match(/^$|^-?[0-9]*\.?[0-9]*$/))&&this.props.onChange&&this.props.onChange(_defineProperty({},this.props.id,value))},_proto.renderControl=function renderControl(controlWidth,children,props){var updatedProps=_objectSpread(_objectSpread({},props),{},{type:"number"===props.type?"text":props.type});return _react.default.createElement(_reactBootstrap.Col,controlWidth,_react.default.createElement(_reactBootstrap.FormControl,_extends({onChange:this.handleChange},updatedProps),children))},_proto.render=function render(){var _this$props=this.props,id=_this$props.id,validationState=_this$props.validationState,errorMessage=_this$props.errorMessage,label=_this$props.label,required=_this$props.required,children=(_this$props.onChange,_this$props.children),labelWidth=_this$props.labelWidth,controlWidth=_this$props.controlWidth,inlineControl=_this$props.inlineControl,props=_objectWithoutProperties(_this$props,_excluded);return _react.default.createElement(_reactBootstrap.FormGroup,{controlId:id,validationState},_react.default.createElement(_reactBootstrap.Row,null,_react.default.createElement(_reactBootstrap.Col,labelWidth,_react.default.createElement(_reactBootstrap.ControlLabel,null,label,required&&REQUIRED)),inlineControl&&this.renderControl(controlWidth,children,props)),!inlineControl&&_react.default.createElement(_reactBootstrap.Row,null,this.renderControl(controlWidth,children,props)),_react.default.createElement(_reactBootstrap.HelpBlock,null,errorMessage))},FieldGroup}(_react.default.Component);exports.default=FieldGroup,FieldGroup.defaultProps={labelWidth:{md:12},controlWidth:{md:12}},FieldGroup.propTypes={id:_propTypes.default.string.isRequired,type:_propTypes.default.string,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]).isRequired,required:_propTypes.default.bool,validationState:_propTypes.default.string,errorMessage:_propTypes.default.string,children:_propTypes.default.arrayOf(_propTypes.default.node),onChange:_propTypes.default.func,labelWidth:_propTypes.default.object,controlWidth:_propTypes.default.object,inlineControl:_propTypes.default.bool},module.exports=exports.default},"./src/code-studio/pd/form_components/SingleCheckbox.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactBootstrap=__webpack_require__("./node_modules/react-bootstrap/es/index.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var REQUIRED=_react.default.createElement("span",{style:{color:"red"}}," *"),SingleCheckbox=function(_React$Component){function SingleCheckbox(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"handleChange",(function(event){_this.props.onChange&&_this.props.onChange(_defineProperty({},_this.props.name,event.target.checked))})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SingleCheckbox,_React$Component),SingleCheckbox.prototype.render=function render(){return _react.default.createElement(_reactBootstrap.Checkbox,{id:this.props.name,checked:this.props.value||!1,onChange:this.handleChange,validationState:this.props.validationState,style:this.props.style},this.props.label,this.props.required&&REQUIRED)},SingleCheckbox}(_react.default.Component);exports.default=SingleCheckbox,_defineProperty(SingleCheckbox,"propTypes",{name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]).isRequired,value:_propTypes.default.bool,required:_propTypes.default.bool,validationState:_propTypes.default.string,onChange:_propTypes.default.func,style:_propTypes.default.object}),module.exports=exports.default},"./src/code-studio/pd/form_components/UsPhoneNumberInput.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_FieldGroup=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/FieldGroup.jsx")),_excluded=["name","label","validationState","errorMessage","required","value","onChange"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var PHONE_NUMBER_REGEX=/(\()?(\(?\d{1,3})?(\) ?)?(\d{1,3})?(-| )?(\d{1,4})?/,UsPhoneNumberInput=function(_React$Component){function UsPhoneNumberInput(props){var _this;return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_React$Component.call(this,props)||this),"handleChange",(function(change){var phoneNumber=UsPhoneNumberInput.coercePhoneNumber(change[_this.props.name]);_this.setState({value:phoneNumber});var phoneNumberDigits=UsPhoneNumberInput.toJustNumbers(phoneNumber);_this.props.onChange&&phoneNumberDigits!==UsPhoneNumberInput.toJustNumbers(_this.props.value)&&_this.props.onChange(_defineProperty({},_this.props.name,phoneNumberDigits))})),_this.state={value:UsPhoneNumberInput.coercePhoneNumber(_this.props.value)},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(UsPhoneNumberInput,_React$Component),UsPhoneNumberInput.isValid=function isValid(value){return/^\d{10}$/.test(value)},UsPhoneNumberInput.coercePhoneNumber=function coercePhoneNumber(value){var match=PHONE_NUMBER_REGEX.exec(value),phoneNumber="";return match&&(match[1]&&!match[2]?phoneNumber=match[1]:match[2]&&(phoneNumber="(".concat(match[2]),3===match[2].length&&(match[3]&&!match[4]?phoneNumber+=match[3]:match[4]&&(phoneNumber+=") ".concat(match[4]),3===match[4].length&&(match[5]&&!match[6]?phoneNumber+="-":match[6]&&(phoneNumber+="-".concat(match[6]))))))),phoneNumber},UsPhoneNumberInput.toJustNumbers=function toJustNumbers(value){return"string"==typeof value?value.replace(/[^\d]/g,""):""},UsPhoneNumberInput.prototype.render=function render(){var _this$props=this.props,name=_this$props.name,label=_this$props.label,validationState=_this$props.validationState,errorMessage=_this$props.errorMessage,required=_this$props.required,props=(_this$props.value,_this$props.onChange,_objectWithoutProperties(_this$props,_excluded));return _react.default.createElement("div",null,_react.default.createElement(_FieldGroup.default,_extends({key:name,id:name,type:"text",label,validationState,errorMessage,onChange:this.handleChange,value:this.state.value||"",required,placeholder:"(xxx) xxx-xxxx"},props)))},UsPhoneNumberInput}(_react.default.Component);exports.default=UsPhoneNumberInput,_defineProperty(UsPhoneNumberInput,"propTypes",{name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]).isRequired,value:_propTypes.default.string,validationState:_propTypes.default.string,errorMessage:_propTypes.default.string,required:_propTypes.default.bool,onChange:_propTypes.default.func}),module.exports=exports.default},"./src/code-studio/pd/form_components/utils.js":module=>{module.exports={},module.exports.normalizeAnswer=function(answer){var answerText="string"==typeof answer?answer:answer.answerText;return{answerText,answerValue:"string"==typeof answer?answer:answer.answerValue||answerText}}},"./src/code-studio/pd/reactBootstrapStoryDecorator.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js"));exports.default=function _default(story){return _react.default.createElement("div",{id:"application-container"},story())},module.exports=exports.default},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,