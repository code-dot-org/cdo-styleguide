/*! For license information please see templates-rubrics-LearningGoal-story.315078bf.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3701],{"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var rendered=(this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact).processSync(this.props.markdown).contents,markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=_redactableMarkdown.default.create().getParser().use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHTML:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"}),_default=SafeMarkdown;exports.default=_default,module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{"use strict";function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/templates/rubrics/LearningGoal.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=LearningGoal;var _react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_rubricsModule=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/rubrics.module.scss")),_rubricShapes=__webpack_require__("./src/templates/rubrics/rubricShapes.jsx"),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_typography=__webpack_require__("./src/componentLibrary/typography/index.ts"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js"),_EvidenceLevels=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/EvidenceLevels.jsx")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_AiAssessment=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/AiAssessment.jsx")),_AiAssessmentFeedbackContext=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/AiAssessmentFeedbackContext.jsx")),_HttpClient=_interopRequireDefault(__webpack_require__("./src/util/HttpClient.ts")),_rubricHelpers=__webpack_require__("./src/templates/rubrics/rubricHelpers.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var invalidUnderstanding=-1;function LearningGoal(_ref){var learningGoal=_ref.learningGoal,teacherHasEnabledAi=_ref.teacherHasEnabledAi,canProvideFeedback=_ref.canProvideFeedback,reportingData=_ref.reportingData,studentLevelInfo=_ref.studentLevelInfo,aiUnderstanding=_ref.aiUnderstanding,aiConfidence=_ref.aiConfidence,submittedEvaluation=_ref.submittedEvaluation,isStudent=_ref.isStudent,feedbackAdded=_ref.feedbackAdded,setFeedbackAdded=_ref.setFeedbackAdded,aiEvalInfo=_ref.aiEvalInfo,STATUS=Object.freeze({NOT_STARTED:0,IN_PROGRESS:1,FINISHED:2,ERROR:3}),_useState2=_slicedToArray((0,_react.useState)(!1),2),isOpen=_useState2[0],setIsOpen=_useState2[1],_useState4=_slicedToArray((0,_react.useState)(-1),2),aiFeedback=_useState4[0],setAiFeedback=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(STATUS.NOT_STARTED),2),autosaveStatus=_useState6[0],setAutosaveStatus=_useState6[1],_useState8=_slicedToArray((0,_react.useState)(null),2),learningGoalEval=_useState8[0],setLearningGoalEval=_useState8[1],_useState10=_slicedToArray((0,_react.useState)(""),2),displayFeedback=_useState10[0],setDisplayFeedback=_useState10[1],_useState12=_slicedToArray((0,_react.useState)(invalidUnderstanding),2),displayUnderstanding=_useState12[0],setDisplayUnderstanding=_useState12[1],teacherFeedback=(0,_react.useRef)(""),understandingLevel=(0,_react.useRef)(invalidUnderstanding),aiEnabled=!(!learningGoal.aiEnabled||!teacherHasEnabledAi),autosaveTimer=(0,_react.useRef)(),handleFeedbackChange=function handleFeedbackChange(event){studentLevelInfo.user_id&&learningGoal.id&&(autosaveTimer.current&&clearTimeout(autosaveTimer.current),teacherFeedback.current=event.target.value,setDisplayFeedback(teacherFeedback.current),autosaveTimer.current=setTimeout((function(){autosave()}),2e3))},autosave=function autosave(){setAutosaveStatus(STATUS.IN_PROGRESS);var bodyData=JSON.stringify({studentId:studentLevelInfo.user_id,learningGoalId:learningGoal.id,feedback:teacherFeedback.current,understanding:understandingLevel.current});_HttpClient.default.put("".concat("/learning_goal_teacher_evaluations","/").concat(learningGoalEval.id),bodyData,!0,{"Content-Type":"application/json"}).then((function(){setAutosaveStatus(STATUS.FINISHED),feedbackAdded||setFeedbackAdded(!0)})).catch((function(error){console.error(error),setAutosaveStatus(STATUS.ERROR)})),clearTimeout(autosaveTimer.current)};(0,_react.useEffect)((function(){if(studentLevelInfo&&learningGoal.id){var body=JSON.stringify({userId:studentLevelInfo.user_id,learningGoalId:learningGoal.id});_HttpClient.default.post("".concat("/learning_goal_teacher_evaluations","/get_or_create_evaluation"),body,!0,{"Content-Type":"application/json"}).then((function(response){return response.json()})).then((function(json){setLearningGoalEval(json),json.feedback&&(teacherFeedback.current=json.feedback,setDisplayFeedback(teacherFeedback.current)),json.understanding>=0&&null!==json.understanding&&(setDisplayUnderstanding(json.understanding),understandingLevel.current=json.understanding)})).catch((function(error){return console.log(error)}))}}),[studentLevelInfo,learningGoal]);return _react.default.createElement("details",{className:"".concat(_rubricsModule.default.learningGoalRow," uitest-learning-goal-row")},_react.default.createElement("summary",{className:_rubricsModule.default.learningGoalHeader,onClick:function handleClick(){if(!isStudent){var eventName=isOpen?_AnalyticsConstants.EVENTS.TA_RUBRIC_LEARNING_GOAL_COLLAPSED_EVENT:_AnalyticsConstants.EVENTS.TA_RUBRIC_LEARNING_GOAL_EXPANDED_EVENT;_AnalyticsReporter.default.sendEvent(eventName,_objectSpread(_objectSpread({},reportingData||{}),{},{learningGoalKey:learningGoal.key,learningGoal:learningGoal.learningGoal}))}setIsOpen(!isOpen)}},_react.default.createElement("div",{className:_rubricsModule.default.learningGoalHeaderLeftSide},_react.default.createElement(_typography.Heading6,null,learningGoal.learningGoal)),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalHeaderRightSide},aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(AiToken,null),canProvideFeedback&&aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(_typography.BodyThreeText,null,_locale.default.approve()),canProvideFeedback&&!aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(_typography.BodyThreeText,null,_locale.default.evaluate()),displayUnderstanding>=0&&_react.default.createElement(_typography.BodyThreeText,null,_rubricHelpers.UNDERSTANDING_LEVEL_STRINGS[displayUnderstanding]),submittedEvaluation&&_react.default.createElement("div",{className:_rubricsModule.default.submittedEvaluation},null!==submittedEvaluation.understanding&&_react.default.createElement(_typography.BodyThreeText,null,_rubricHelpers.UNDERSTANDING_LEVEL_STRINGS[submittedEvaluation.understanding]),submittedEvaluation.feedback&&_react.default.createElement(_FontAwesome.default,{icon:"message",className:"fa-regular",title:_locale.default.feedback()})))),_react.default.createElement("div",null,_react.default.createElement(_AiAssessmentFeedbackContext.default.Provider,{value:{aiFeedback,setAiFeedback}},teacherHasEnabledAi&&!!studentLevelInfo&&!!aiEvalInfo&&void 0!==aiUnderstanding&&_react.default.createElement("div",{className:_rubricsModule.default.openedAiAssessment},_react.default.createElement(_AiAssessment.default,{isAiAssessed:learningGoal.aiEnabled,studentName:studentLevelInfo.name,aiConfidence,aiUnderstandingLevel:aiUnderstanding,aiEvalInfo}))),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalExpanded},!!submittedEvaluation&&function renderSubmittedFeedbackTextbox(){return _react.default.createElement("div",{className:_rubricsModule.default.feedbackArea},_react.default.createElement("label",{className:_rubricsModule.default.evidenceLevelLabel},_react.default.createElement("span",null,_locale.default.feedback()),_react.default.createElement("textarea",{className:_rubricsModule.default.inputTextbox,name:"teacherFeedback",value:submittedEvaluation.feedback,disabled:!0})))}(),_react.default.createElement(_EvidenceLevels.default,{learningGoalKey:learningGoal.key,isAiAssessed:aiEnabled,evidenceLevels:learningGoal.evidenceLevels,canProvideFeedback,understanding:displayUnderstanding,radioButtonCallback:function radioButtonCallback(radioButtonData){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.TA_RUBRIC_EVIDENCE_LEVEL_SELECTED,_objectSpread(_objectSpread({},reportingData||{}),{},{learningGoalId:learningGoal.id,learningGoal:learningGoal.learningGoal,newlySelectedEvidenceLevel:radioButtonData,previouslySelectedEvidenceLevel:understandingLevel.current})),setDisplayUnderstanding(radioButtonData),understandingLevel.current=radioButtonData,autosave()},submittedEvaluation,isStudent,isAutosaving:autosaveStatus===STATUS.IN_PROGRESS}),learningGoal.tips&&!isStudent&&_react.default.createElement("div",null,_react.default.createElement(_typography.Heading6,null,_locale.default.tipsForEvaluation()),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalTips},_react.default.createElement(_SafeMarkdown.default,{markdown:learningGoal.tips}))),!!studentLevelInfo&&function renderAutoSaveTextbox(){return _react.default.createElement("div",{className:_rubricsModule.default.feedbackArea},_react.default.createElement("label",{className:_rubricsModule.default.evidenceLevelLabel},_react.default.createElement("span",null,_locale.default.feedback()),_react.default.createElement("textarea",{id:"ui-teacherFeedback",className:_rubricsModule.default.inputTextbox,name:"teacherFeedback",value:displayFeedback,onChange:handleFeedbackChange,disabled:!canProvideFeedback})),autosaveStatus===STATUS.IN_PROGRESS?_react.default.createElement("span",{className:_rubricsModule.default.autosaveMessage},_locale.default.saving()):autosaveStatus===STATUS.FINISHED&&_react.default.createElement("span",{id:"ui-autosaveConfirm",className:_rubricsModule.default.autosaveMessage},_react.default.createElement(_FontAwesome.default,{icon:"circle-check"})," ",_locale.default.savedToGallery()),autosaveStatus===STATUS.ERROR&&_react.default.createElement("span",{className:_rubricsModule.default.autosaveMessage},_locale.default.feedbackSaveError()))}())))}LearningGoal.propTypes={learningGoal:_rubricShapes.learningGoalShape.isRequired,teacherHasEnabledAi:_propTypes.default.bool,canProvideFeedback:_propTypes.default.bool,reportingData:_rubricShapes.reportingDataShape,studentLevelInfo:_rubricShapes.studentLevelInfoShape,aiUnderstanding:_propTypes.default.number,aiConfidence:_propTypes.default.number,submittedEvaluation:_rubricShapes.submittedEvaluationShape,isStudent:_propTypes.default.bool,feedbackAdded:_propTypes.default.bool,setFeedbackAdded:_propTypes.default.func,aiEvalInfo:_rubricShapes.aiEvaluationShape};var AiToken=function AiToken(){return _react.default.createElement("div",{className:"uitest-uses-ai"}," ",_react.default.createElement(_typography.BodyFourText,{className:(0,_classnames.default)(_rubricsModule.default.aiToken,_rubricsModule.default.aiTokenText)},_react.default.createElement(_typography.ExtraStrongText,null,_locale.default.usesAi())))};module.exports=exports.default},"./src/util/sharedConstants.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserTypes=exports.StudentGradeLevels=exports.SectionLoginType=exports.RubricUnderstandingLevels=exports.RubricAiEvaluationStatus=exports.RestrictedPublishProjectTypes=exports.PostMilestoneMode=exports.PlGradeValue=exports.LmsLinks=exports.LevelStatus=exports.LevelKind=exports.FeaturedProjectStatus=exports.FeaturedProjectConstants=exports.ErrorSeverityLevels=exports.EmailLinks=exports.DanceSongManifestFilename=exports.ConditionallyPublishableProjectTypes=exports.ChildAccountComplianceStates=exports.CensusConstants=exports.ArtistAutorunOptions=exports.AlwaysPublishableProjectTypes=exports.AllPublishableProjectTypes=exports.AiTutorTypes=exports.AiTutorInteractionSaveStatus=exports.AbuseConstants=void 0;exports.ArtistAutorunOptions={full_auto_run:"FULL_AUTO_RUN"};exports.LevelKind={peer_review:"peer_review",assessment:"assessment",puzzle:"puzzle",unplugged:"unplugged",level:"level",stage_extras:"stage_extras"};exports.LevelStatus={not_tried:"not_tried",submitted:"submitted",perfect:"perfect",passed:"passed",attempted:"attempted",review_accepted:"review_accepted",review_rejected:"review_rejected",dots_disabled:"dots_disabled",free_play_complete:"free_play_complete",completed_assessment:"completed_assessment"};exports.SectionLoginType={word:"word",picture:"picture",email:"email",google_classroom:"google_classroom",clever:"clever",lti_v1:"lti_v1"};exports.StudentGradeLevels=["K","1","2","3","4","5","6","7","8","9","10","11","12","Other"];exports.PlGradeValue="pl";exports.PostMilestoneMode={all:"all",successful_runs_and_final_level_only:"successful_runs_and_final_level_only",final_level_only:"final_level_only"};exports.AlwaysPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys"];exports.AllPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys","applab","gamelab","spritelab"];exports.ConditionallyPublishableProjectTypes=["applab","gamelab"];exports.AbuseConstants={ABUSE_THRESHOLD:15};exports.ErrorSeverityLevels={WARN:2,ERROR:3,FATAL:4};exports.RestrictedPublishProjectTypes=["spritelab"];exports.RubricUnderstandingLevels={EXTENSIVE:3,CONVINCING:2,LIMITED:1,NONE:0};exports.RubricAiEvaluationStatus={QUEUED:0,RUNNING:1,SUCCESS:2,FAILURE:1e3,PII_VIOLATION:1001,PROFANITY_VIOLATION:1002};exports.EmailLinks={PRIVACY_POLICY_URL:"https://code.org/privacy",CONTACT_US_URL:"https://code.org/contact",TOS_URL:"https://code.org/tos",STUDENT_PRIVACY_PLEDGE_URL:"https://studentprivacypledge.org/signatories/",COMMON_SENSE_MEDIA_URL:"https://privacy.commonsense.org/evaluation/code.org",CDO_SUPPORT_MAILTO:"mailto:support@code.org"};exports.ChildAccountComplianceStates={LOCKED_OUT:"l",REQUEST_SENT:"s",PERMISSION_GRANTED:"g"};exports.CensusConstants={CURRENT_CENSUS_SCHOOL_YEAR:2023};exports.DanceSongManifestFilename="songManifest2024_v2.json";exports.AiTutorInteractionSaveStatus={ERROR:"error",PERSONAL:"personal",PROFANITY:"profanity",INAPPROPRIATE:"inappropriate",OK:"ok",UNKNOWN:"unknown",EMAIL:"email",ADDRESS:"address",PHONE:"phone"};exports.AiTutorTypes={COMPILATION:"compilation",VALIDATION:"validation",GENERAL_CHAT:"general_chat"};exports.FeaturedProjectStatus={active:"active",bookmarked:"bookmarked",archived:"archived"};exports.FeaturedProjectConstants={MAX_REQUESTS_PER_CATEGORY:15};exports.LmsLinks={INTEGRATION_GUIDE_URL:"https://support.code.org/hc/en-us/articles/23120014459405-Learning-Management-System-LMS-and-Single-Sign-On-SSO-Integrations-and-Support-for-Code-org",INSTALL_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621907533965-Install-Code-org-Integrations-for-your-Learning-Management-System",ROSTER_SYNC_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621978654605-Sync-Rosters-with-your-Learning-Management-System",INTEGRATION_EARLY_ACCESS_URL:"https://docs.google.com/forms/d/e/1FAIpQLScjfVR4CZs8Utf5vI4mz3e1q8vdH6RNIgTUWygZXN0oovBSQg/viewform",INTEGRATION_BUG_REPORT_URL:"https://support.code.org/hc/en-us/requests/new?ticket_form_id=14998494738829&tf_23889708=lms_eaf",ADDITIONAL_FEEDBACK_URL:"https://studio.code.org/form/lms_integration_modal_feedback"};exports.UserTypes={STUDENT:"student",TEACHER:"teacher"}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/componentLibrary/checkbox/checkbox.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'.aYCuDURDyCcrqvoxvhFZ{display:flex;gap:8px;align-items:center}.aYCuDURDyCcrqvoxvhFZ i{vertical-align:bottom}.aYCuDURDyCcrqvoxvhFZ i::before{display:inline-block;content:" ";text-align:center;border:2px solid #292f36;border-radius:4px}.aYCuDURDyCcrqvoxvhFZ span{margin-bottom:0}.aYCuDURDyCcrqvoxvhFZ input[type=checkbox]{position:absolute;opacity:0}.aYCuDURDyCcrqvoxvhFZ input[type=checkbox]:checked+i::before{content:"";color:#fff;background:#0093a4;border:2px solid #0093a4;border-radius:4px}.aYCuDURDyCcrqvoxvhFZ input[type=checkbox]:indeterminate+i::before{content:"";color:#fff;background:#0093a4;border:2px solid #0093a4;border-radius:4px}.aYCuDURDyCcrqvoxvhFZ input[type=checkbox]:focus-visible+i::before{outline:2px solid #0093a4;outline-offset:2px;border-radius:4px}.aYCuDURDyCcrqvoxvhFZ input[type=checkbox]:focus-visible:indeterminate+i::before{color:#fff;background:#0093a4;border:2px solid #0093a4}.aYCuDURDyCcrqvoxvhFZ:hover{cursor:pointer}.aYCuDURDyCcrqvoxvhFZ:hover i::before{background-color:#abdfe5}.aYCuDURDyCcrqvoxvhFZ:hover input[type=checkbox]:checked+i::before,.aYCuDURDyCcrqvoxvhFZ:hover input[type=checkbox]:indeterminate+i::before{color:#fff;background:#008291;border-color:#008291}.aYCuDURDyCcrqvoxvhFZ:active i::before{background-color:#abdfe5;border-color:#0093a4}.aYCuDURDyCcrqvoxvhFZ:active input[type=checkbox]:checked+i::before,.aYCuDURDyCcrqvoxvhFZ:active input[type=checkbox]:indeterminate+i::before{color:#fff;background:#008291;border-color:#0093a4}.aYCuDURDyCcrqvoxvhFZ:has(input[type=checkbox]:disabled) span{color:#d4d5d7}.aYCuDURDyCcrqvoxvhFZ:has(input[type=checkbox]:disabled) i::before{border-color:#d4d5d7}.aYCuDURDyCcrqvoxvhFZ:has(input[type=checkbox]:disabled) input[type=checkbox]:checked+i::before,.aYCuDURDyCcrqvoxvhFZ:has(input[type=checkbox]:disabled) input[type=checkbox]:indeterminate+i::before{background:#d4d5d7;color:#fff}.aYCuDURDyCcrqvoxvhFZ:has(input[type=checkbox]:disabled):hover{cursor:not-allowed}.aYCuDURDyCcrqvoxvhFZ:has(input[type=checkbox]:disabled):hover i::before{background:#fff}.aYCuDURDyCcrqvoxvhFZ:has(input[type=checkbox]:disabled):hover input[type=checkbox]:checked+i::before,.aYCuDURDyCcrqvoxvhFZ:has(input[type=checkbox]:disabled):hover input[type=checkbox]:indeterminate+i::before{background:#d4d5d7;border-color:#d4d5d7}._1hTMIWRZKujswAEjgZE i{width:16px;height:16px}._1hTMIWRZKujswAEjgZE i::before{font-size:8px;width:12px;height:12px;line-height:12px}.kvHKspf4sbL3U3qVGRIs i{width:18px;height:18px}.kvHKspf4sbL3U3qVGRIs i::before{font-size:9.5px;width:14px;height:14px;line-height:14px}.qKbMC2tnRMagciMUC1K6 i{width:20px;height:20px}.qKbMC2tnRMagciMUC1K6 i::before{font-size:11px;width:16px;height:16px;line-height:16px}.utDCGxbRjQaZvyCW7aKO i{width:24px;height:24px}.utDCGxbRjQaZvyCW7aKO i::before{font-size:13px;width:20px;height:20px;line-height:20px}',"",{version:3,sources:["webpack://./src/componentLibrary/checkbox/checkbox.module.scss","webpack://./../shared/css/color.scss"],names:[],mappings:"AAAA,sBAGA,YACE,CAAA,OACA,CAAA,kBACA,CAAA,wBAEA,qBACE,CAAA,gCAEA,oBACE,CAAA,WACA,CAAA,iBACA,CAAA,wBACA,CAAA,iBACA,CAAA,2BAIJ,eACE,CAAA,2CAGF,iBACE,CAAA,SACA,CAAA,6DAEA,WACE,CAAA,UC0IU,CAAA,kBAqBI,CAAA,wBD5Jd,CAAA,iBACA,CAAA,mEAGF,WACE,CAAA,UCkIU,CAAA,kBAqBI,CAAA,wBDpJd,CAAA,iBACA,CAAA,mEAKA,yBACE,CAAA,kBACA,CAAA,iBACA,CAAA,iFAEF,UCoHU,CAAA,kBAqBI,CAAA,wBDtIZ,CAAA,4BAMN,cACE,CAAA,sCAGE,wBCiFgB,CAAA,4ID3EhB,UCiGU,CAAA,kBAsBI,CAAA,oBAAA,CAAA,uCD3Gd,wBC+DgB,CAAA,oBA2CF,CAAA,8IDnGd,UC8EU,CAAA,kBAsBI,CAAA,oBADA,CAAA,8DDxFhB,aCsEa,CAAA,mEDlEb,oBCkEa,CAAA,sMD7DX,kBC6DW,CAAA,UAHD,CAAA,+DDnDZ,kBACE,CAAA,yEACA,eCiDU,CAAA,kND7CV,kBCgDW,CAAA,oBAAA,CAAA,wBDrCf,UACE,CAAA,WACA,CAAA,gCAGF,aACE,CAAA,UACA,CAAA,WACA,CAAA,gBACA,CAAA,wBAKF,UACE,CAAA,WACA,CAAA,gCAGF,eACE,CAAA,UACA,CAAA,WACA,CAAA,gBACA,CAAA,wBAKF,UACE,CAAA,WACA,CAAA,gCAGF,cACE,CAAA,UACA,CAAA,WACA,CAAA,gBACA,CAAA,wBAKF,UACE,CAAA,WACA,CAAA,gCAGF,cACE,CAAA,UACA,CAAA,WACA,CAAA,gBACA",sourcesContent:['@import "color";\n\n// Checkbox common styles\n.label {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n\n  i {\n    vertical-align: bottom;\n\n    &::before {\n      display: inline-block;\n      content: \' \';\n      text-align: center;\n      border: 2px solid $neutral_dark;\n      border-radius: 4px;\n    }\n  }\n\n  span {\n    margin-bottom: 0;\n  }\n\n  input[type="checkbox"] {\n    position: absolute;\n    opacity: 0;\n\n    &:checked + i::before {\n      content: "\\f00c";\n      color: $neutral_white;\n      background: $light_primary_500;\n      border: 2px solid $light_primary_500;\n      border-radius: 4px;\n    }\n\n    &:indeterminate + i::before {\n      content: "\\e404";\n      color: $neutral_white;\n      background: $light_primary_500;\n      border: 2px solid $light_primary_500;\n      border-radius: 4px;\n    }\n\n    // Focus styles\n    &:focus-visible {\n      + i::before {\n        outline: 2px solid $light_primary_500;\n        outline-offset: 2px;\n        border-radius: 4px;\n      }\n      &:indeterminate + i::before {\n        color: $neutral_white;\n        background: $light_primary_500;\n        border: 2px solid $light_primary_500;\n      }\n    }\n  }\n\n  // Hover styles\n  &:hover {\n    cursor: pointer;\n\n    i {\n      &::before {\n        background-color: $brand_primary_light;\n      }\n    }\n\n    input[type="checkbox"] {\n      &:checked + i::before,\n      &:indeterminate + i::before {\n        color: $neutral_white;\n        background: $light_primary_700;\n        border-color: $light_primary_700;\n      }\n    }\n  }\n\n  // Pressed styles\n  &:active {\n    i {\n      &::before {\n        background-color: $brand_primary_light;\n        border-color: $light_primary_500;\n      }\n    }\n\n    input[type="checkbox"] {\n      &:checked + i::before,\n      &:indeterminate + i::before {\n        color: $neutral_white;\n        background: $light_primary_700;\n        border-color: $light_primary_500;\n      }\n    }\n  }\n\n  // Disabled styles\n  &:has(input[type="checkbox"]:disabled) {\n    span {\n      color: $neutral_dark20;\n    }\n\n    i::before {\n      border-color: $neutral_dark20;\n    }\n\n    input[type="checkbox"] {\n      &:checked + i::before,\n      &:indeterminate + i::before {\n        background: $neutral_dark20;\n        color: $neutral_white;\n      }\n    }\n\n    &:hover {\n      cursor: not-allowed;\n      i::before {\n        background: $neutral_white;\n      }\n\n      input[type="checkbox"]:checked + i::before,\n      input[type="checkbox"]:indeterminate + i::before {\n        background: $neutral_dark20;\n        border-color: $neutral_dark20;\n      }\n    }\n  }\n}\n\n// Sizes\n.label-xs {\n  i {\n    width: 16px;\n    height: 16px;\n  }\n\n  i::before {\n    font-size: 8px;\n    width: 12px;\n    height: 12px;\n    line-height: 12px;\n  }\n}\n\n.label-s {\n  i {\n    width: 18px;\n    height: 18px;\n  }\n\n  i::before {\n    font-size: 9.5px;\n    width: 14px;\n    height: 14px;\n    line-height: 14px;\n  }\n}\n\n.label-m {\n  i {\n    width: 20px;\n    height: 20px;\n  }\n\n  i::before {\n    font-size: 11px;\n    width: 16px;\n    height: 16px;\n    line-height: 16px;\n  }\n}\n\n.label-l {\n  i {\n    width: 24px;\n    height: 24px;\n  }\n\n  i::before {\n    font-size: 13px;\n    width: 20px;\n    height: 20px;\n    line-height: 20px;\n  }\n}',"// colors from https://www.dropbox.com/s/ycjiwt8vxlmv2ih/Code.org_stylesheet_v2_09.05.13.pdf\n\n// Please keep this file simple; it should only contain color definitions\n//   and aliases.  Variables defined in this file are exported to\n//   apps/src/util/color.js during the apps build process.\n\n$black: #000;\n$background_black: #121416;\n$dark_gray: #2D3139;\n$darkest_gray: #292F36;\n$dark_slate_gray: #282c34;\n$darkest_slate_gray: #25292d;\n$dark_charcoal: #4d575f;\n$charcoal: #5b6770;\n$light_gray: #949ca2;\n$lighter_gray: #c6cacd;\n$lightest_gray: #e7e8ea;\n$background_gray: #f2f2f2;\n$dimgray: #696969;\n$white: #fff;\n$default_blue: #3670b3;\n\n$dark_teal: #0094a3;\n$teal: #0093a4;\n$applab_button_teal: #1abc9c;\n$light_teal: #59cad3;\n$lightish_teal: #80d6de;\n$lighter_teal: #a6e3e8;\n$lightest_teal: #d9f3f5;\n$ai_rubric_cyan: #3cfff8;\n\n$purple: #8c52ba;\n$light_purple: #a69bc1;\n$lighter_purple: #cfc9de;\n$lightest_purple: #ebe8f1;\n\n$cyan: #0094ca;\n$light_cyan: #59b9dc;\n$lighter_cyan: #a6daed;\n$lightest_cyan: #d9eff7;\n$almost_white_cyan: #f5fcff;\n\n$orange: #ffa400;\n$light_orange: #ffc459;\n$lighter_orange: #ffe0a6;\n$lightest_orange: #fff2d9;\n$dark_orange: #ff8600;\n\n$green: #b9bf15;\n$light_green: #d1d567;\n$lighter_green: #e7e9ad;\n$lightest_green: #f5f5dc;\n$highlight_green: #8afc9b;\n\n$yellow: #ffb81d;\n$light_yellow: #ffdb74;\n$lighter_yellow: #ffebb5;\n$lightest_yellow: #fff7df;\n\n$goldenrod: #daa520;\n\n$header_text: $white;\n$bkgnd_color: $teal;\n$inset_color: $lighter_gray;\n$dark_color: $purple;\n$hdr_color: $purple;\n\n// Some extra colors.\n$red: #c00;\n$lightest_red: #fcc;\n$dark_red: #d62911;\n$realgreen: #008000;\n$realyellow: #ff0;\n$mustardyellow: #efcd1c;\n$twitter_blue: #00aced;\n$facebook_blue: #3b5998;\n$linkedin_blue: #0077B5;\n$dark_blue: #00647f;\n$blockly_flyout_gray: #ddd;\n$default_text: #333;\n$border_gray: #bbb;\n$border_light_gray: #d8d8d8;\n$table_header: #ececec;\n$table_light_row: #fcfcfc;\n$table_dark_row: #f4f4f4;\n\n// Progress colors.\n$level_submitted: $purple;\n$level_perfect: rgb(14, 190, 14);\n$level_passed: rgb(159, 212, 159);\n$level_attempted: $realyellow;\n$level_not_tried: #fefefe;\n$level_current: $orange;\n$level_review_rejected: $red;\n$level_review_accepted: rgb(11, 142, 11); // TODO: $level_passed;\n$assessment: $cyan;\n$workspace_running_background: #e5e5e5;\n\n// Experimental Sprite Lab validation colors.\n$dark_purple: #682A77;\n$bright_green: #0ebe0e;\n$neon_pink: #e9118f;\n\n// Links (used in apps).\n$link_color: #0596ce;\n\n// Shadow.\n$shadow: rgba(0, 0, 0, 0.3);\n\n// Colors that are taken from bootstrap, and not necessarily part of our core theme.\n$bootstrap_button_blue: #337ab7;\n$bootstrap_button_red: #d9534f;\n$bootstrap_error_background: #f2dede;\n$bootstrap_error_text: #b94a48;\n$bootstrap_v3_error_text:  #a94442;\n$bootstrap_error_border: #ebccd1;\n$bootstrap_warning_background: #fcf8e3;\n$bootstrap_warning_text: #c09853;\n$bootstrap_warning_border: #faebcc;\n$bootstrap_border_color: #cccccc;\n$bootstrap_success_background: #dff0d8;\n$bootstrap_success_text: #468847;\n$bootstrap_success_border: #d6e9c6;\n\n// Colors taken from droplet, not part of our core theme.\n$droplet_light_green: #d3e965;\n$droplet_blue: #64b5f6;\n$droplet_bright_blue: #19c3e1;\n$droplet_yellow: #fff176;\n$droplet_orange: #ffb74d;\n$droplet_red: #f78183;\n$droplet_cyan: #4dd0e1;\n$droplet_pink: #f57ac6;\n$droplet_purple: #bb77c7;\n$droplet_green: #68d995;\n$droplet_white: $white;\n\n// Oceans: deep blue background.\n$oceans_deep_blue: rgb(2, 0, 28);\n\n// Dark theme background (used by default in Music Lab)\n$dark_black: #121212;\n\n// ===----===----===---- Phase 1 Colors: ----===----===----===\n// Brand\n$brand_primary_light: #ABDFE5;\n$brand_primary_default: #009EB0;\n$brand_primary_dark: #008291;\n\n$brand_secondary_light: #E0D1EC;\n$brand_secondary_default: #8C52BA;\n$brand_secondary_dark: #6F488E;\n\n$brand_accent_default: #ED6060;\n\n//Product\n$product_affirmative_default: #3EA33E;\n\n$product_negative_light: #FDEBE9;\n$product_negative_default: #E5311A;\n$product_negative_dark: #AA2513;\n\n$product_caution_default: #F9CB28;\n\n$product_information_default: #007ACC;\n\n// Neutral\n$neutral_white: #FFFFFF;\n$neutral_light: #F7F8FA;\n$neutral_dark10: #EAEBEB;\n$neutral_dark20: #D4D5D7;\n$neutral_dark30: #BFC1C3;\n$neutral_dark40: #A9ACAF;\n$neutral_dark50: #94979B;\n$neutral_dark60: #7F8286;\n$neutral_dark70: #6A6E73;\n$neutral_dark80: #54595E;\n$neutral_dark90: #3F444B;\n$neutral_dark: #292F36;\n\n//Brands\n$google_brand_color: #0F9D58;\n$microsoft_brand_color: #FFB900;\n$facebook_brand_color: #3B5998;\n\n// ===----===----===---- Design system colors: ----===----===----===\n\n$light_primary_100: #ABDFE5;\n$light_primary_500: #0093A4;\n$light_primary_700: #008291;\n\n$light_secondary_100: #E2D4EE;\n$light_secondary_500: #8C52BA;\n$light_secondary_700: #6F488E;\n\n$light_gray_50: #F7F8FA;\n$light_gray_100: #EAEBEB;\n$light_gray_200: #D4D5D7;\n$light_gray_300: #BFC1C3;\n$light_gray_500: #94979B;\n$light_gray_700: #6A6E73;\n$light_gray_800: #54595E;\n$light_gray_900: #3F444B;\n\n$light_affirmative_100: #E2F1E2;\n$light_affirmative_500: #3EA33E;\n\n$light_negative_500: #E5311A;\n\n$light_caution_500: #F9CB28;\n\n$light_info_100: #DCEFFB;\n$light_info_500: #1892E3;\n\n$light_white: #FFFFFF;\n\n$light_black: #292F36;\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={label:"aYCuDURDyCcrqvoxvhFZ","label-xs":"_1hTMIWRZKujswAEjgZE","label-s":"kvHKspf4sbL3U3qVGRIs","label-m":"qKbMC2tnRMagciMUC1K6","label-l":"utDCGxbRjQaZvyCW7aKO"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/getUrl.js":module=>{"use strict";module.exports=function(url,options){return options||(options={}),url?(url=String(url.__esModule?url.default:url),/^['"].*['"]$/.test(url)&&(url=url.slice(1,-1)),options.hash&&(url+=options.hash),/["'() \t\n]|(%20)/.test(url)||options.needQuotes?'"'.concat(url.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):url):url}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/componentLibrary/checkbox/checkbox.module.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_checkbox_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/componentLibrary/checkbox/checkbox.module.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_checkbox_module_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_checkbox_module_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_checkbox_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_checkbox_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/componentLibrary/checkbox/Checkbox.tsx":function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var react_1=__importStar(__webpack_require__("./node_modules/react/index.js")),classnames_1=__importDefault(__webpack_require__("./node_modules/classnames/index.js")),typography_1=__importDefault(__webpack_require__("./src/componentLibrary/typography/index.ts")),constants_1=__webpack_require__("./src/componentLibrary/common/constants.ts"),checkbox_module_scss_1=__importDefault(__webpack_require__("./src/componentLibrary/checkbox/checkbox.module.scss")),Checkbox=function(_a){var label=_a.label,checked=_a.checked,onChange=_a.onChange,name=_a.name,value=_a.value,_b=_a.disabled,disabled=void 0!==_b&&_b,_c=_a.indeterminate,indeterminate=void 0!==_c&&_c,_d=_a.size,size=void 0===_d?"m":_d,checkboxRef=(0,react_1.useRef)(null),bodyTextSize=constants_1.componentSizeToBodyTextSizeMap[size];return(0,react_1.useEffect)((function(){(null==checkboxRef?void 0:checkboxRef.current)&&(checkboxRef.current.indeterminate=indeterminate)}),[checkboxRef,indeterminate]),react_1.default.createElement("label",{className:(0,classnames_1.default)(checkbox_module_scss_1.default.label,checkbox_module_scss_1.default["label-".concat(size)])},react_1.default.createElement("input",{type:"checkbox",ref:checkboxRef,name,value,checked,disabled,onChange}),react_1.default.createElement("i",{className:"fa-solid"}),label&&react_1.default.createElement(typography_1.default,{semanticTag:"span",visualAppearance:bodyTextSize},label))};exports.default=Checkbox;try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"### Production-ready Checklist:\n* (✔) implementation of component approved by design team;\n* (✔) has storybook, covered with stories and documentation;\n* (✔) has tests: test every prop, every state and every interaction that's js related;\n* (see apps/test/unit/componentLibrary/CheckboxTest.jsx)\n* (?) passes accessibility checks;\n\n###  Status: ```Ready for dev```\n\nDesign System: Checkbox Component.\nCan be used to render a checkbox or as a part of bigger/more complex components (e.g. Checkbox Dropdown).",displayName:"Checkbox",props:{checked:{defaultValue:null,description:"Checkbox checked state",name:"checked",required:!0,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Checkbox onChange handler",name:"onChange",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},name:{defaultValue:null,description:"The name attribute specifies the name of an input element.\nThe name attribute is used to reference elements in a JavaScript,\nor to reference form data after a form is submitted.\nNote: Only form elements with a name attribute will have their values passed when submitting a form.",name:"name",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"The value attribute specifies the value of an input element.",name:"value",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Checkbox label",name:"label",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Is checkbox disabled",name:"disabled",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:{value:"false"},description:"Is checkbox indeterminate",name:"indeterminate",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"m"},description:"Size of checkbox",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"s"'},{value:'"m"'},{value:'"l"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/componentLibrary/checkbox/Checkbox.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"src/componentLibrary/checkbox/Checkbox.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/componentLibrary/common/constants.ts":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.dropdownColors=exports.componentSizeToBodyTextSizeMap=void 0,exports.componentSizeToBodyTextSizeMap={l:"body-one",m:"body-two",s:"body-three",xs:"body-four"},exports.dropdownColors={white:"white",black:"black"}},"./src/util/AuthenticityTokenStore.ts":function(__unused_webpack_module,exports){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=this&&this.__generator||function(thisArg,body){var f,y,t,g,_={label:0,sent:function(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;g&&(g=0,op[0]&&(_=0)),_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AUTHENTICITY_TOKEN_HEADER=exports.getAuthenticityToken=void 0;var authenticityToken=null;function refreshToken(){return __awaiter(this,void 0,Promise,(function(){var tokenContainer,response,token;return __generator(this,(function(_a){switch(_a.label){case 0:return(tokenContainer=document.querySelector('meta[name="csrf-token"]'))&&tokenContainer.content?[2,tokenContainer.content]:[4,fetch("/get_token")];case 1:if(response=_a.sent(),null===(token=response.headers.get("csrf-token")))throw new Error("Could not retrieve CSRF token");return[2,token]}}))}))}exports.getAuthenticityToken=function getAuthenticityToken(){return __awaiter(this,void 0,Promise,(function(){var token;return __generator(this,(function(_a){switch(_a.label){case 0:return null!==authenticityToken?[2,authenticityToken]:[4,refreshToken()];case 1:return token=_a.sent(),[2,authenticityToken=token]}}))}))},exports.AUTHENTICITY_TOKEN_HEADER="X-CSRF-TOKEN"},"./src/util/HttpClient.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])},extendStatics(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=this&&this.__generator||function(thisArg,body){var f,y,t,g,_={label:0,sent:function(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;g&&(g=0,op[0]&&(_=0)),_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.NetworkError=void 0;var AuthenticityTokenStore_1=__webpack_require__("./src/util/AuthenticityTokenStore.ts"),NetworkError=function(_super){function NetworkError(message,response){var _this=_super.call(this,message)||this;return _this.response=response,_this.name="NetworkError",Object.setPrototypeOf(_this,NetworkError.prototype),_this}return __extends(NetworkError,_super),NetworkError.prototype.getDetails=function(){var headers={};return this.response.headers.forEach((function(value,key){headers[key]=value})),{status:this.response.status,statusText:this.response.statusText,url:this.response.url,type:this.response.type,headers}},NetworkError}(Error);function sendRequest(method,endpoint,body,useAuthenticityToken,headers){return void 0===useAuthenticityToken&&(useAuthenticityToken=!1),void 0===headers&&(headers={}),__awaiter(this,void 0,Promise,(function(){var token,response;return __generator(this,(function(_a){switch(_a.label){case 0:return useAuthenticityToken?[4,(0,AuthenticityTokenStore_1.getAuthenticityToken)()]:[3,2];case 1:token=_a.sent(),headers[AuthenticityTokenStore_1.AUTHENTICITY_TOKEN_HEADER]=token,_a.label=2;case 2:return[4,fetch(endpoint,{method,body,headers})];case 3:if(!(response=_a.sent()).ok)throw new NetworkError(response.status+" "+response.statusText,response);return[2,response]}}))}))}exports.NetworkError=NetworkError,exports.default={put:function put(endpoint,body,useAuthenticityToken,headers){return void 0===useAuthenticityToken&&(useAuthenticityToken=!1),void 0===headers&&(headers={}),__awaiter(this,void 0,Promise,(function(){return __generator(this,(function(_a){return[2,sendRequest("PUT",endpoint,body,useAuthenticityToken,headers)]}))}))},post:function post(endpoint,body,useAuthenticityToken,headers){return void 0===useAuthenticityToken&&(useAuthenticityToken=!1),void 0===headers&&(headers={}),__awaiter(this,void 0,Promise,(function(){return __generator(this,(function(_a){return[2,sendRequest("POST",endpoint,body,useAuthenticityToken,headers)]}))}))},delete:function deleteRequest(endpoint,useAuthenticityToken,headers){return void 0===useAuthenticityToken&&(useAuthenticityToken=!1),void 0===headers&&(headers={}),__awaiter(this,void 0,Promise,(function(){return __generator(this,(function(_a){return[2,sendRequest("DELETE",endpoint,void 0,useAuthenticityToken,headers)]}))}))},fetchJson:function fetchJson(endpoint,init,validator){return __awaiter(this,void 0,Promise,(function(){var response,json,value;return __generator(this,(function(_a){switch(_a.label){case 0:return[4,fetch(endpoint,init)];case 1:if(!(response=_a.sent()).ok)throw new NetworkError(response.status+" "+response.statusText,response);return[4,response.json()];case 2:return json=_a.sent(),value=json,validator&&(value=validator(json)),[2,{value,response}]}}))}))}}},"./src/templates/rubrics/LearningGoal.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithTipsFeedbackAvailable=exports.AiEnabledFeedbackUnavailable=exports.AiEnabledFeedbackAvailable=exports.AiDisabledFeedbackUnavailable=exports.AiDisabledFeedbackAvailable=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_sharedConstants=__webpack_require__("./src/util/sharedConstants.js"),_LearningGoal=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/LearningGoal.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var _default={component:_LearningGoal.default};exports.default=_default;var defaultLearningGoal={key:"story-learning-goal",learningGoal:"Coding Proficiency",evidenceLevels:[{id:1,understanding:_sharedConstants.RubricUnderstandingLevels.EXTENSIVE,teacherDescription:"Student is able to write fully correct code"},{id:2,understanding:2,teacherDescription:"Student is able to write some correct code"},{id:3,understanding:_sharedConstants.RubricUnderstandingLevels.LIMITED,teacherDescription:"Student is able to write partially correct code"},{id:4,understanding:_sharedConstants.RubricUnderstandingLevels.NONE,teacherDescription:"Student is unable to write correct code"}]};exports.AiDisabledFeedbackUnavailable=function AiDisabledFeedbackUnavailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!1}),teacherHasEnabledAi:!0,canProvideFeedback:!1})};exports.AiDisabledFeedbackAvailable=function AiDisabledFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!1}),teacherHasEnabledAi:!0,canProvideFeedback:!0})};exports.AiEnabledFeedbackUnavailable=function AiEnabledFeedbackUnavailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!0}),teacherHasEnabledAi:!0,canProvideFeedback:!1})};exports.AiEnabledFeedbackAvailable=function AiEnabledFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!0}),teacherHasEnabledAi:!0,canProvideFeedback:!0})};exports.WithTipsFeedbackAvailable=function WithTipsFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{tips:"Show some tips for evaluation\n\nPossibly use newlines and _some_ **markdown**\n\n* bullet\n* points"}),canProvideFeedback:!0})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,