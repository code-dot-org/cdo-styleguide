"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[9866],{"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_unified=_interopRequireDefault(__webpack_require__("./node_modules/unified/index.js")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var processor=this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact,rendered=Object(processor.processSync(this.props.markdown).result),markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=(0,_unified.default)().use(_redactableMarkdown.default.getParser()).use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHtml:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"});exports.default=SafeMarkdown;module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/weblab/SupportArticleMarkdown.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function SupportArticleMarkdown(){return _react.default.createElement(_SafeMarkdown.default,{markdown:_locale.default.troubleshootingSupport({url:_constants.SUPPORT_ARTICLE_URL}),openExternalLinksInNewTab:!0})};var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_constants=__webpack_require__("./src/weblab/constants.js"),_locale=_interopRequireDefault(__webpack_require__("./src/weblab/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}module.exports=exports.default},"./src/weblab/constants.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SUPPORT_ARTICLE_URL=exports.FatalErrorType=exports.FILE_SYSTEM_ERROR=exports.BRAMBLE_READY_STATE=void 0;var _utils=__webpack_require__("./src/utils.js");exports.SUPPORT_ARTICLE_URL="https://support.code.org/hc/en-us/articles/360016804871",exports.FatalErrorType=(0,_utils.makeEnum)("Default","LoadFailure","ResetFailure"),exports.FILE_SYSTEM_ERROR="EFILESYSTEMERROR",exports.BRAMBLE_READY_STATE="bramble:readyToMount"},"./src/weblab/dialogs/DisallowedHtmlWarningDialog.jsx":(module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=DisallowedHtmlWarningDialog;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_StylizedBaseDialog=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/sharedComponents/StylizedBaseDialog.jsx")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_SupportArticleMarkdown=_interopRequireDefault(__webpack_require__("./src/weblab/SupportArticleMarkdown.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_locale2=_interopRequireDefault(__webpack_require__("./src/weblab/locale-do-not-import.js")),_excluded=["isOpen","filename","disallowedTags","handleClose"];function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function DisallowedHtmlWarningDialog(_ref){var isOpen=_ref.isOpen,filename=_ref.filename,disallowedTags=_ref.disallowedTags,handleClose=_ref.handleClose,props=_objectWithoutProperties(_ref,_excluded),body=_react.default.createElement("div",null,_react.default.createElement(_SafeMarkdown.default,{markdown:_locale2.default.disallowedHtml({filename,disallowedTags:disallowedTags.join(", ")})}),_react.default.createElement(_SupportArticleMarkdown.default,null));return _react.default.createElement(_StylizedBaseDialog.default,_extends({},props,{isOpen,title:_locale.default.warning(),body,handleClose,renderFooter:function renderFooter(){return _react.default.createElement(_StylizedBaseDialog.FooterButton,{type:"confirm",text:_locale.default.dialogOK(),onClick:handleClose})}}))}DisallowedHtmlWarningDialog.propTypes={isOpen:_propTypes.default.bool.isRequired,filename:_propTypes.default.string.isRequired,disallowedTags:_propTypes.default.arrayOf(_propTypes.default.string).isRequired,handleClose:_propTypes.default.func.isRequired},module.exports=exports.default},"./src/weblab/dialogs/DisallowedHtmlWarningDialog.story.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SingleDisallowedTags=exports.MultipleDisallowedTags=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_DisallowedHtmlWarningDialog=_interopRequireDefault(__webpack_require__("./src/weblab/dialogs/DisallowedHtmlWarningDialog.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_DisallowedHtmlWarningDialog.default};var DEFAULT_PROPS={isOpen:!0,filename:"index.html",handleClose:(0,_addonActions.action)("close"),hideBackdrop:!0},Template=function Template(args){return _react.default.createElement(_DisallowedHtmlWarningDialog.default,_extends({},DEFAULT_PROPS,args))};(exports.SingleDisallowedTags=Template.bind({})).args={disallowedTags:["script"]},(exports.MultipleDisallowedTags=Template.bind({})).args={disallowedTags:["script","meta[http-equiv]"]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,