/*! For license information please see templates-census-CensusTeacherBanner-story.52d43f29.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1472],{"./src/lib/util/urlHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.metaTagDescription=exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION=exports.ADD_A_PERSONAL_LOGIN_HELP_URL=void 0,exports.pegasus=function pegasus(relativeUrl){if(window.dashboard&&window.dashboard.CODE_ORG_URL)return window.dashboard.CODE_ORG_URL+relativeUrl;return relativeUrl},exports.setPegasusOrigin=function setPegasusOrigin(origin){window.dashboard=window.dashboard||{},window.dashboard.CODE_ORG_URL=origin},exports.setStudioOrigin=function setStudioOrigin(origin){window.pegasus=window.pegasus||{},window.pegasus.STUDIO_URL=origin},exports.studio=function studio(relativeUrl){if(window.pegasus&&window.pegasus.STUDIO_URL)return window.pegasus.STUDIO_URL+relativeUrl;return relativeUrl};var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}exports.metaTagDescription=_lodash.default.memoize((function(relativeUrl){return fetch(relativeUrl).then((function(response){return Promise.all([response.status,response.text()])})).then((function(_ref){var _ref2=_slicedToArray(_ref,2),status=_ref2[0],text=_ref2[1];return status<200||status>=300?relativeUrl:(0,_jquery.default)(text).filter("meta[name='description']").attr("content")||relativeUrl})).catch((function(error){return relativeUrl}))})),exports.ADD_A_PERSONAL_LOGIN_HELP_URL="https://support.code.org/hc/en-us/articles/115001475131-Adding-a-personal-login-to-a-teacher-created-account",exports.RELEASE_OR_DELETE_RECORDS_EXPLANATION="https://support.code.org/hc/en-us/articles/360015983631"},"./src/styleConstants.js":module=>{module.exports={"workspace-headers-height":30,"resize-bar-width":13,"delete-opacity":"0.5","content-width":970}},"./src/templates/census/CensusTeacherBanner.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=CensusTeacherBanner;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_Button=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/Button.jsx")),_urlHelpers=__webpack_require__("./src/lib/util/urlHelpers.js"),_useSchoolInfo=__webpack_require__("./src/schoolInfo/hooks/useSchoolInfo.tsx"),_schoolInfoInvalid=__webpack_require__("./src/schoolInfo/utils/schoolInfoInvalid.ts"),_updateSchoolInfo=__webpack_require__("./src/schoolInfo/utils/updateSchoolInfo.ts"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts"),_styleConstants=_interopRequireDefault(__webpack_require__("./src/styleConstants.js")),_SchoolDataInputs=_interopRequireDefault(__webpack_require__("./src/templates/SchoolDataInputs.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function CensusTeacherBanner(_ref){var mainForm,onDismiss=_ref.onDismiss,onPostpone=_ref.onPostpone,onTeachesChange=_ref.onTeachesChange,onInClassChange=_ref.onInClassChange,existingSchoolInfo=_ref.existingSchoolInfo,question=_ref.question,teaches=_ref.teaches,inClass=_ref.inClass,teacherName=_ref.teacherName,teacherEmail=_ref.teacherEmail,onSubmitSuccess=_ref.onSubmitSuccess,schoolYear=_ref.schoolYear,_useState2=_slicedToArray((0,_react.useState)(!1),2),showSchoolInfoForm=_useState2[0],setShowSchoolInfoForm=_useState2[1],_useState4=_slicedToArray((0,_react.useState)(!1),2),showSchoolInfoUnknownError=_useState4[0],setShowSchoolInfoUnknownError=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(null),2),censusSubmittedSuccessfully=_useState6[0],setCensusSubmittedSuccessfully=_useState6[1],_useState8=_slicedToArray((0,_react.useState)(!1),2),showCensusInvalidError=_useState8[0],setShowCensusInvalidError=_useState8[1],_useState10=_slicedToArray((0,_react.useState)(!1),2),showCensusUnknownError=_useState10[0],setShowCensusUnknownError=_useState10[1],schoolInfo=(0,_useSchoolInfo.useSchoolInfo)({schoolId:existingSchoolInfo.id,country:existingSchoolInfo.country,schoolName:existingSchoolInfo.name,schoolZip:existingSchoolInfo.zip,schoolType:existingSchoolInfo.type}),hideSchoolInfoForm=function hideSchoolInfoForm(){setShowSchoolInfoForm(!1)},dismissSchoolInfoForm=function dismissSchoolInfoForm(){schoolInfo.reset(),setShowSchoolInfoForm(!1),setShowSchoolInfoUnknownError(!1)},handleSchoolInfoSubmit=function handleSchoolInfoSubmit(){(0,_updateSchoolInfo.updateSchoolInfo)({schoolId:schoolInfo.schoolId,country:schoolInfo.country,schoolName:schoolInfo.schoolName,schoolZip:schoolInfo.schoolZip}).then(hideSchoolInfoForm).catch(updateSchoolInfoError)},updateSchoolInfoError=function updateSchoolInfoError(){setShowSchoolInfoUnknownError(!0)},getData=function getData(){var schoolId=schoolInfo.schoolId,data={submitter_role:"TEACHER",submitter_name:teacherName,submitter_email_address:teacherEmail,school_year:schoolYear};return data[inClass?question:"how_many_after_school"]="SOME",schoolId===_sharedConstants.NonSchoolOptions.CLICK_TO_ADD?(data.country_s=schoolInfo.country,data.school_name_s=schoolInfo.schoolName,data.school_state_s=schoolInfo.schoolState,data.school_zip_s=schoolInfo.schoolZip,data.school_location=schoolInfo.schoolLocation):data.nces_school_s=schoolId,data},handleCensusBannerSubmit=function handleCensusBannerSubmit(){!function isValid(){return!teaches||!0===inClass||!1===inClass}()?setShowCensusInvalidError(!0):$.ajax({url:"/dashboardapi/v1/census/CensusTeacherBannerV1",type:"post",dataType:"json",data:getData()}).done((function(){setCensusSubmittedSuccessfully(!0),onSubmitSuccess()})).fail((function(){setShowCensusUnknownError(!0)}))};return mainForm=censusSubmittedSuccessfully?function renderThankYou(){var yourschoolUrl=encodeURIComponent("https://code.org/yourschool"),facebookShareUrl="https://www.facebook.com/sharer/sharer.php?u=".concat(yourschoolUrl),twitterText=encodeURIComponent("Does your school teach computer science? Expand computer science at your school or district. @codeorg"),twitterShareUrl="https://twitter.com/intent/tweet?url=".concat(yourschoolUrl,"&related=codeorg&text=").concat(twitterText);return _react.default.createElement("div",null,_react.default.createElement("div",{style:styles.header},_react.default.createElement("h2",null,"Thanks for adding your school to the map!")),_react.default.createElement("div",{style:styles.message},_react.default.createElement("p",{style:styles.introQuestion},"Help us find out about computer science opportunities at every school in the United States!")),_react.default.createElement("div",{style:styles.share},_react.default.createElement("a",{href:facebookShareUrl,target:"_blank",rel:"noopener noreferrer"},_react.default.createElement("button",{type:"button",style:styles.shareButton},_react.default.createElement("i",{className:"fa fa-facebook"})," Share on Facebook")),_react.default.createElement("a",{href:twitterShareUrl,target:"_blank",rel:"noopener noreferrer"},_react.default.createElement("button",{type:"button",style:styles.shareButton},_react.default.createElement("i",{className:"fa fa-twitter"})," Share on Twitter"))))}():showSchoolInfoForm?function renderSchoolInfoForm(){var submitDisabled=(0,_schoolInfoInvalid.schoolInfoInvalid)(schoolInfo);return _react.default.createElement("div",null,_react.default.createElement("div",{style:styles.header},showSchoolInfoUnknownError&&_react.default.createElement("p",{style:styles.error},"We encountered an error with your submission. Please try again.")),_react.default.createElement("div",{style:styles.message},_react.default.createElement(_SchoolDataInputs.default,schoolInfo)),_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.buttonDiv),styles.updateSchoolButtonDiv)},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,onClick:dismissSchoolInfoForm,style:styles.button,color:"gray",size:"large",text:"Dismiss"}),_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,onClick:handleSchoolInfoSubmit,style:styles.button,size:"large",text:"Submit",disabled:submitDisabled})))}():function renderCensusForm(){var buttons,footer,numHours="how_many_20_hours"===question?"20":"10";if(!0===teaches)footer=_react.default.createElement("hr",null),buttons=_react.default.createElement("div",{style:styles.buttonDiv},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,onClick:onDismiss,style:styles.button,color:_Button.default.ButtonColor.neutralDark,text:"No thanks"}),_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,onClick:handleCensusBannerSubmit,style:styles.button,color:_Button.default.ButtonColor.brandSecondaryDefault,text:"Add my school to the map!"}));else if(!1===teaches){footer=_react.default.createElement("div",null,_react.default.createElement("hr",null),_react.default.createElement("p",null,"We’d love to know more about computer science opportunities at your school. Please take our survey to increase access to Computer Science in the US."));var link=encodeURI("/yourschool?schoolId=".concat(schoolInfo.schoolId,"&isTeacher=true&name=").concat(teacherName,"&email=").concat(teacherEmail,"#form"));buttons=_react.default.createElement("div",{style:styles.buttonDiv},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,onClick:onPostpone,style:styles.button,color:"gray",size:"large",text:"Not now"}),_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,onClick:onPostpone,href:(0,_urlHelpers.pegasus)(link),target:"_blank",rel:"noopener noreferrer",style:styles.button,size:"large",text:"Take the survey"}))}return schoolInfo.schoolName?_react.default.createElement("div",null,_react.default.createElement("div",{style:styles.header},_react.default.createElement("h2",{style:styles.title},"Add ",schoolInfo.schoolName," to our map!"),_react.default.createElement("p",{style:styles.updateSchool},"Not teaching at this school anymore? ",_react.default.createElement("a",{style:styles.updateSchoolLink,onClick:function onClick(){return setShowSchoolInfoForm(!0)}},"Update here")),showCensusUnknownError&&_react.default.createElement("p",{style:styles.error},"We encountered an error with your submission. Please try again.")),_react.default.createElement("div",{style:styles.message},_react.default.createElement("p",{style:styles.introQuestion},"It looks like you teach computer science. Have your students already done ",numHours," hours of programming content this year (not including HTML/CSS)?"),_react.default.createElement("label",null,_react.default.createElement("input",{type:"radio",id:"teachesYes",name:question,value:"SOME",style:styles.radio,onChange:onTeachesChange,checked:!0===teaches}),"Yes, we've done ",numHours," hours."),_react.default.createElement("label",null,_react.default.createElement("input",{type:"radio",id:"teachesNo",name:question,style:styles.radio,onChange:onTeachesChange,value:"not yet",checked:!1===teaches}),"Not yet."),teaches&&showCensusInvalidError&&_react.default.createElement("p",{style:styles.error},"Please select one of the options below."),teaches&&_react.default.createElement("div",null,_react.default.createElement("p",{style:styles.introQuestion},"Which of the following best describes where you teach programming?"),_react.default.createElement("label",null,_react.default.createElement("input",{type:"radio",id:"inClass",value:"inclass",style:styles.radio,onChange:onInClassChange,checked:!0===inClass}),"In a classroom"),_react.default.createElement("label",null,_react.default.createElement("input",{type:"radio",id:"afterSchool",style:styles.radio,onChange:onInClassChange,value:"afterschool",checked:!1===inClass}),"In an afterschool program or club")),footer),buttons):null}(),_react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.image},_react.default.createElement("img",{src:"/shared/images/misc/census-map-with-flag.png",alt:"Map with flag",width:"180",height:"180"})),mainForm,_react.default.createElement("div",{style:styles.clear}))}CensusTeacherBanner.propTypes={onDismiss:_propTypes.default.func.isRequired,onPostpone:_propTypes.default.func.isRequired,onTeachesChange:_propTypes.default.func.isRequired,onInClassChange:_propTypes.default.func.isRequired,existingSchoolInfo:_propTypes.default.shape({country:_propTypes.default.string,id:_propTypes.default.string,name:_propTypes.default.string,zip:_propTypes.default.string,type:_propTypes.default.string}),question:_propTypes.default.oneOf(["how_many_10_hours","how_many_20_hours"]).isRequired,teaches:_propTypes.default.bool,inClass:_propTypes.default.bool,teacherName:_propTypes.default.string.isRequired,teacherEmail:_propTypes.default.string.isRequired,onSubmitSuccess:_propTypes.default.func.isRequired,schoolYear:_propTypes.default.number.isRequired};var styles={button:{marginLeft:7,marginRight:7,marginTop:15,marginBottom:15},buttonDiv:{textAlign:"center"},updateSchoolButtonDiv:{marginRight:190},clear:{clear:"both"},error:{color:_color.default.red},header:{marginTop:10,marginBottom:5,marginLeft:20,marginRight:20},image:{float:"right",margin:5},introQuestion:{marginTop:10,marginBottom:5},main:{borderWidth:1,borderStyle:"solid",borderColor:_color.default.teal,minHeight:72,width:_styleConstants.default["content-width"],backgroundColor:_color.default.white,overflowWrap:"break-word"},message:{marginTop:0,marginBottom:20,marginLeft:20,marginRight:20},radio:{verticalAlign:"top",marginRight:10},share:{textAlign:"center"},shareButton:{color:_color.default.white,backgroundColor:_color.default.brand_primary_default,boxShadow:"none",minWidth:40},title:{marginBottom:0},updateSchool:{fontSize:"85%",marginTop:0,marginBottom:0},updateSchoolLink:_objectSpread({cursor:"pointer"},_fontConstants.default["main-font-semi-bold"])};module.exports=exports.default},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/getUrl.js":module=>{"use strict";module.exports=function(url,options){return options||(options={}),url?(url=String(url.__esModule?url.default:url),/^['"].*['"]$/.test(url)&&(url=url.slice(1,-1)),options.hash&&(url+=options.hash),/["'() \t\n]|(%20)/.test(url)||options.needQuotes?'"'.concat(url.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):url):url}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./generated-scripts/sharedConstants.ts":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UsStates=exports.NonSchoolOptions=exports.UserTypes=exports.LmsLinks=exports.CapLinks=exports.FeaturedProjectConstants=exports.FeaturedProjectStatus=exports.AiChatModelIds=exports.AiRequestExecutionStatus=exports.AiTutorTypes=exports.AiTutorInteractionStatus=exports.AiInteractionStatus=exports.DanceSongManifestFilename=exports.CensusConstants=exports.ChildAccountComplianceStates=exports.EmailLinks=exports.RubricAiEvaluationLimits=exports.RubricAiEvaluationStatus=exports.RubricUnderstandingLevels=exports.RestrictedPublishProjectTypes=exports.ErrorSeverityLevels=exports.AbuseConstants=exports.ConditionallyPublishableProjectTypes=exports.AllPublishableProjectTypes=exports.AlwaysPublishableProjectTypes=exports.PostMilestoneMode=exports.PlGradeValue=exports.StudentGradeLevels=exports.SectionLoginType=exports.LevelStatus=exports.LevelKind=exports.ArtistAutorunOptions=exports.DefaultLocale=void 0,exports.DefaultLocale="en-US",exports.ArtistAutorunOptions={full_auto_run:"FULL_AUTO_RUN"},exports.LevelKind={peer_review:"peer_review",assessment:"assessment",puzzle:"puzzle",unplugged:"unplugged",level:"level",stage_extras:"stage_extras"},exports.LevelStatus={not_tried:"not_tried",submitted:"submitted",perfect:"perfect",passed:"passed",attempted:"attempted",review_accepted:"review_accepted",review_rejected:"review_rejected",dots_disabled:"dots_disabled",free_play_complete:"free_play_complete",completed_assessment:"completed_assessment"},exports.SectionLoginType={word:"word",picture:"picture",email:"email",google_classroom:"google_classroom",clever:"clever",lti_v1:"lti_v1"},exports.StudentGradeLevels=["K","1","2","3","4","5","6","7","8","9","10","11","12","Other"],exports.PlGradeValue="pl",exports.PostMilestoneMode={all:"all",successful_runs_and_final_level_only:"successful_runs_and_final_level_only",final_level_only:"final_level_only"},exports.AlwaysPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys","music"],exports.AllPublishableProjectTypes=["artist","frozen","playlab","gumball","iceage","infinity","minecraft_adventurer","minecraft_designer","minecraft_hero","minecraft_aquatic","starwars","starwarsblocks","starwarsblocks_hour","flappy","bounce","sports","basketball","artist_k1","playlab_k1","dance","poetry","poetry_hoc","thebadguys","music","applab","gamelab","spritelab"],exports.ConditionallyPublishableProjectTypes=["applab","gamelab"],exports.AbuseConstants={ABUSE_THRESHOLD:15},exports.ErrorSeverityLevels={WARN:2,ERROR:3,FATAL:4},exports.RestrictedPublishProjectTypes=["spritelab"],exports.RubricUnderstandingLevels={EXTENSIVE:3,CONVINCING:2,LIMITED:1,NONE:0},exports.RubricAiEvaluationStatus={QUEUED:0,RUNNING:1,SUCCESS:2,FAILURE:1e3,PII_VIOLATION:1001,PROFANITY_VIOLATION:1002,REQUEST_TOO_LARGE:1003,STUDENT_LIMIT_EXCEEDED:1004,TEACHER_LIMIT_EXCEEDED:1005},exports.RubricAiEvaluationLimits={STUDENT_LIMIT:10,TEACHER_LIMIT:10},exports.EmailLinks={PRIVACY_POLICY_URL:"https://code.org/privacy",CONTACT_US_URL:"https://code.org/contact",TOS_URL:"https://code.org/tos",STUDENT_PRIVACY_PLEDGE_URL:"https://studentprivacypledge.org/signatories/",COMMON_SENSE_MEDIA_URL:"https://privacy.commonsense.org/evaluation/code.org",CDO_SUPPORT_MAILTO:"mailto:support@code.org"},exports.ChildAccountComplianceStates={GRACE_PERIOD:"p",LOCKED_OUT:"l",PERMISSION_GRANTED:"g"},exports.CensusConstants={CURRENT_CENSUS_SCHOOL_YEAR:2024},exports.DanceSongManifestFilename="songManifest2024_v2.json",exports.AiInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",USER_INPUT_TOO_LARGE:"user_input_too_large",OK:"ok",UNKNOWN:"unknown"},exports.AiTutorInteractionStatus={ERROR:"error",PII_VIOLATION:"pii_violation",PROFANITY_VIOLATION:"profanity_violation",USER_INPUT_TOO_LARGE:"user_input_too_large",OK:"ok",UNKNOWN:"unknown"},exports.AiTutorTypes={COMPILATION:"compilation",VALIDATION:"validation",GENERAL_CHAT:"general_chat"},exports.AiRequestExecutionStatus={NOT_STARTED:0,QUEUED:1,RUNNING:2,SUCCESS:3,FAILURE:1e3,USER_PROFANITY:1001,USER_PII:1002,MODEL_PROFANITY:1003,MODEL_PII:1004,USER_INPUT_TOO_LARGE:1005},exports.AiChatModelIds={ARITHMO:"gen-ai-arithmo2-mistral-7b",BIOMISTRAL:"gen-ai-biomistral-7b",MISTRAL:"gen-ai-mistral-7b-inst-v01",KAREN:"gen-ai-karen-creative-mistral-7b",PIRATE:"gen-ai-mistral-pirate-7b"},exports.FeaturedProjectStatus={active:"active",bookmarked:"bookmarked",archived:"archived"},exports.FeaturedProjectConstants={MAX_REQUESTS_PER_CATEGORY:15},exports.CapLinks={PARENTAL_CONSENT_GUIDE_URL:"https://support.code.org/hc/en-us/articles/15465423491085-How-do-I-obtain-parent-or-guardian-permission-for-student-accounts"},exports.LmsLinks={INTEGRATION_GUIDE_URL:"https://support.code.org/hc/en-us/articles/23120014459405-Learning-Management-System-LMS-and-Single-Sign-On-SSO-Integrations-and-Support-for-Code-org",INSTALL_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621907533965-Install-Code-org-Integrations-for-your-Learning-Management-System",ROSTER_SYNC_INSTRUCTIONS_URL:"https://support.code.org/hc/en-us/articles/23621978654605-Sync-Rosters-with-your-Learning-Management-System",ADDITIONAL_FEEDBACK_URL:"https://studio.code.org/form/lms_integration_modal_feedback",SUPPORTED_METHODS_URL:"https://github.com/code-dot-org/code-dot-org/blob/staging/docs/lti-integration.md#option-2-manual-entry"},exports.UserTypes={STUDENT:"student",TEACHER:"teacher"},exports.NonSchoolOptions={SELECT_A_SCHOOL:"selectASchool",CLICK_TO_ADD:"clickToAdd",NO_SCHOOL_SETTING:"noSchoolSetting"},exports.UsStates={AL:"Alabama",AK:"Alaska",AZ:"Arizona",AR:"Arkansas",CA:"California",CO:"Colorado",CT:"Connecticut",DE:"Delaware",FL:"Florida",GA:"Georgia",HI:"Hawaii",ID:"Idaho",IL:"Illinois",IN:"Indiana",IA:"Iowa",KS:"Kansas",KY:"Kentucky",LA:"Louisiana",ME:"Maine",MD:"Maryland",MA:"Massachusetts",MI:"Michigan",MN:"Minnesota",MS:"Mississippi",MO:"Missouri",MT:"Montana",NE:"Nebraska",NV:"Nevada",NH:"New Hampshire",NJ:"New Jersey",NM:"New Mexico",NY:"New York",NC:"North Carolina",ND:"North Dakota",OH:"Ohio",OK:"Oklahoma",OR:"Oregon",PA:"Pennsylvania",RI:"Rhode Island",SC:"South Carolina",SD:"South Dakota",TN:"Tennessee",TX:"Texas",UT:"Utah",VT:"Vermont",VA:"Virginia",WA:"Washington",DC:"Washington, D.C.",WV:"West Virginia",WI:"Wisconsin",WY:"Wyoming"}},"./src/templates/census/CensusTeacherBanner.story.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.BasicCensus=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CensusTeacherBanner=_interopRequireDefault(__webpack_require__("./src/templates/census/CensusTeacherBanner.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_CensusTeacherBanner.default},exports.BasicCensus=function BasicCensus(){return _react.default.createElement(_CensusTeacherBanner.default,{schoolYear:2024,onSubmitSuccess:function onSubmitSuccess(){},onDismiss:function onDismiss(){},onPostpone:function onPostpone(){},onTeachesChange:function onTeachesChange(){},onInClassChange:function onInClassChange(){},existingSchoolInfo:{id:"ABCD",name:"NCES School",country:"US",zip:"12345"},question:"how_many_10_hours",teaches:!0,inClass:!0,teacherName:"BlakeSmith",teacherEmail:"BlakeSmith@gmail.com"})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,