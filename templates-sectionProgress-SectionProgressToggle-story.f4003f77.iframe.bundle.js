(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[7240],{"./src/code-studio/isRtlRedux.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function locale(){var state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RTL)return action.isRtl;return state},exports.isRtlFromDOM=isRtlFromDOM,exports.setRtlFromDOM=exports.setRtl=void 0;var SET_RTL="isRtl/SET_RTL",setRtl=exports.setRtl=function setRtl(isRtl){return{type:SET_RTL,isRtl}};exports.setRtlFromDOM=function setRtlFromDOM(){return setRtl(isRtlFromDOM())};function isRtlFromDOM(){var head=document.getElementsByTagName("head")[0];if(head&&head.parentElement){var dir=head.parentElement.getAttribute("dir");return!(!dir||"rtl"!==dir.toLowerCase())}return!1}},"./src/redux/unitSelectionRedux.js":(__unused_webpack_module,exports)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(exports,"__esModule",{value:!0}),exports.SET_SCRIPT=exports.SET_COURSES=void 0,exports.default=function unitSelection(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_COURSES){var firstCourse=action.coursesWithProgress[0],firstUnit=firstCourse?firstCourse.units[0]:null;return _objectSpread(_objectSpread({},state),{},{coursesWithProgress:action.coursesWithProgress,scriptId:null===state.scriptId?null==firstUnit?void 0:firstUnit.id:state.scriptId})}if(action.type===SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{scriptId:action.scriptId});return state},exports.setScriptId=exports.setCoursesWithProgress=exports.getSelectedScriptName=exports.getSelectedScriptFriendlyName=exports.getSelectedScriptDescription=exports.doesCurrentCourseUseFeedback=void 0;var SET_SCRIPT=exports.SET_SCRIPT="unitSelection/SET_SCRIPT",SET_COURSES=exports.SET_COURSES="unitSelection/SET_COURSES",getSelectedUnit=(exports.setScriptId=function setScriptId(scriptId){return{type:SET_SCRIPT,scriptId}},exports.setCoursesWithProgress=function setCoursesWithProgress(coursesWithProgress){return{type:SET_COURSES,coursesWithProgress}},function getSelectedUnit(state){var unit,scriptId=state.unitSelection.scriptId;return scriptId?(state.unitSelection.coursesWithProgress.forEach((function(course){var tempUnit=course.units.find((function(unit){return scriptId===unit.id}));tempUnit&&(unit=tempUnit)})),unit):null}),initialState=(exports.getSelectedScriptName=function getSelectedScriptName(state){return getSelectedUnit(state)?getSelectedUnit(state).key:null},exports.getSelectedScriptFriendlyName=function getSelectedScriptFriendlyName(state){return getSelectedUnit(state)?getSelectedUnit(state).name:null},exports.getSelectedScriptDescription=function getSelectedScriptDescription(state){return getSelectedUnit(state)?getSelectedUnit(state).description:null},exports.doesCurrentCourseUseFeedback=function doesCurrentCourseUseFeedback(state){var _getSelectedUnit;return!(null===(_getSelectedUnit=getSelectedUnit(state))||void 0===_getSelectedUnit||!_getSelectedUnit.is_feedback_enabled)},{scriptId:null,coursesWithProgress:[]})},"./src/templates/ToggleButton.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_ToggleButtonStyles=_interopRequireDefault(__webpack_require__("./src/templates/ToggleButtonStyles.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var ToggleButton=function(_Component){function ToggleButton(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ToggleButton,_Component);var _proto=ToggleButton.prototype;return _proto.render=function render(){return _react.default.createElement("button",{type:"button",id:this.props.id,style:this.getStyle(),className:"no-outline "+(this.props.className||""),title:this.props.title,onClick:this.props.onClick},this.props.children)},_proto.getStyle=function getStyle(){return Object.assign({},{":focus":{outline:"none"}},_ToggleButtonStyles.default.buttonStyle,_ToggleButtonStyles.default.toggleButtonStyle,this.props.active?_ToggleButtonStyles.default.activeStyle:_ToggleButtonStyles.default.inactiveStyle,this.props.active&&this.props.activeColor&&{backgroundColor:this.props.activeColor},this.props.first?_ToggleButtonStyles.default.firstButtonStyle:null,this.props.last?_ToggleButtonStyles.default.lastButtonStyle:null,this.props.useRebrandedLikeStyles?_ToggleButtonStyles.default.rebrandedLikeButtonStyle:null,this.props.style)},ToggleButton}(_react.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(ToggleButton,"propTypes",{id:_propTypes.default.string,className:_propTypes.default.string,active:_propTypes.default.bool.isRequired,first:_propTypes.default.bool,last:_propTypes.default.bool,activeColor:_propTypes.default.string,title:_propTypes.default.string,style:_propTypes.default.object,onClick:_propTypes.default.func,children:_propTypes.default.node,useRebrandedLikeStyles:_propTypes.default.bool});exports.default=(0,_radium.default)(ToggleButton);module.exports=exports.default},"./src/templates/ToggleButtonStyles.js":(module,__unused_webpack_exports,__webpack_require__)=>{var color=__webpack_require__("./src/util/color.js");module.exports={buttonStyle:{display:"inline-block",verticalAlign:"top",borderStyle:"solid",borderColor:color.light_gray,borderTopWidth:1,borderRightWidth:1,borderBottomWidth:1,borderLeftWidth:1,margin:"0 0 8px 0",padding:"2px 6px",fontSize:14},toggleButtonStyle:{borderRightWidth:"0 !important",borderTopLeftRadius:0,borderTopRightRadius:0,borderBottomRightRadius:0,borderBottomLeftRadius:0},firstButtonStyle:{borderBottomLeftRadius:4,borderTopLeftRadius:4},lastButtonStyle:{borderRightWidth:"1px !important",borderBottomRightRadius:4,borderTopRightRadius:4},activeStyle:{backgroundColor:color.orange,color:color.white,boxShadow:"2px 2px 5px "+color.shadow+" inset"},rebrandedLikeButtonStyle:{boxShadow:"none",padding:"7px 16px",fontWeight:600,fontSize:"0.875rem",lineHeight:"unset"},inactiveStyle:{backgroundColor:color.white,color:color.light_black,boxShadow:"0px 1px 5px "+color.shadow},hiddenStyle:{display:"none"},iconStyle:{margin:"0 0.3em"}}},"./src/templates/ToggleGroup.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedToggleGroup=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_ToggleButton=_interopRequireDefault(__webpack_require__("./src/templates/ToggleButton.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var ToggleGroup=function(_Component){function ToggleGroup(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ToggleGroup,_Component);var _proto=ToggleGroup.prototype;return _proto.setSelected=function setSelected(selected){this.props.onChange(selected)},_proto.render=function render(){var _this$props=this.props,isRtl=_this$props.isRtl,flex=_this$props.flex,spanStyle=isRtl?styles.flexButtonReverse:flex&&styles.flexButtons;return _react.default.createElement("span",{style:spanStyle},this.renderChildren())},_proto.renderChildren=function renderChildren(){var _this=this,children=_react.default.Children.toArray(this.props.children).filter((function(child){return!!child}));return children.map((function(child,index){var isSelected=child.props.value===_this.props.selected;return _react.default.createElement(_ToggleButton.default,{id:child.props.id,className:child.props.className,key:child.key,active:isSelected,first:0===index,last:index===children.length-1,activeColor:_this.props.activeColor,title:child.props.title,style:child.props.style,useRebrandedLikeStyles:_this.props.useRebrandedLikeStyles,onClick:isSelected?void 0:_this.setSelected.bind(_this,child.props.value)},child.props.children)}))},ToggleGroup}(_react.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(ToggleGroup,"propTypes",{selected:_propTypes.default.string,activeColor:_propTypes.default.string,useRebrandedLikeStyles:_propTypes.default.bool,onChange:_propTypes.default.func.isRequired,flex:_propTypes.default.bool,children:function children(props,propName,componentName){var error,prop=props[propName];return _react.default.Children.count(prop)<1&&(error=new Error("".concat(componentName," must have at least one child button."))),_react.default.Children.forEach(prop,(function(child){child&&"button"!==child.type&&(error=new Error("".concat(componentName," should only have buttons as ")+"child elements."))})),error},isRtl:_propTypes.default.bool});var styles={flexButtons:{display:"flex"},flexButtonReverse:{display:"flex",flexDirection:"row-reverse"}};exports.UnconnectedToggleGroup=ToggleGroup,exports.default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))(ToggleGroup)},"./src/templates/feedback/types.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.levelFeedbackType=exports.levelFeedbackShape=exports.feedbackShape=exports.ReviewStates=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_utils=__webpack_require__("./src/utils.js");var feedbackShape=exports.feedbackShape=_propTypes.default.shape({id:_propTypes.default.number.isRequired,seen_on_feedback_page_at:_propTypes.default.string,student_first_visited_at:_propTypes.default.string,created_at:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.instanceOf(Date)]).isRequired,comment:_propTypes.default.string,performance:_propTypes.default.string,is_awaiting_teacher_review:_propTypes.default.bool,review_state:_propTypes.default.string}),levelFeedbackType=(exports.levelFeedbackShape=_propTypes.default.shape(levelFeedbackType),exports.levelFeedbackType={lessonName:_propTypes.default.string.isRequired,lessonNum:_propTypes.default.number.isRequired,levelNum:_propTypes.default.number.isRequired,linkToLevel:_propTypes.default.string.isRequired,unitName:_propTypes.default.string,feedbacks:_propTypes.default.arrayOf(feedbackShape)});exports.ReviewStates=(0,_utils.makeEnum)("completed","keepWorking","awaitingReview")},"./src/templates/progress/progressTypes.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitProgressType=exports.studentType=exports.studentLevelProgressType=exports.studentLessonProgressType=exports.levelWithProgressType=exports.levelType=exports.lessonType=exports.groupedLessonsType=exports.PUZZLE_PAGE_NONE=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_types=__webpack_require__("./src/templates/feedback/types.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.PUZZLE_PAGE_NONE=-1,exports.studentType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired});var levelShape={id:_propTypes.default.string.isRequired,levelNumber:_propTypes.default.number,bubbleText:_propTypes.default.string,kind:_propTypes.default.string,url:_propTypes.default.string,name:_propTypes.default.string,icon:_propTypes.default.string,isUnplugged:_propTypes.default.bool,isConceptLevel:_propTypes.default.bool,pageNumber:_propTypes.default.number};levelShape.sublevels=_propTypes.default.arrayOf(_propTypes.default.shape(levelWithProgressType));exports.levelType=_propTypes.default.shape(levelShape);var levelWithProgressType=exports.levelWithProgressType=_propTypes.default.shape(_objectSpread(_objectSpread({},levelShape),{},{status:_propTypes.default.string.isRequired,paired:_propTypes.default.bool,isLocked:_propTypes.default.bool,isCurrentLevel:_propTypes.default.bool})),studentLevelProgressShape={status:_propTypes.default.string.isRequired,result:_propTypes.default.number.isRequired,locked:_propTypes.default.bool.isRequired,paired:_propTypes.default.bool.isRequired,timeSpent:_propTypes.default.number,lastTimestamp:_propTypes.default.number,teacherFeedbackReviewState:_propTypes.default.oneOf(Object.keys(_types.ReviewStates)),teacherFeedbackNew:_propTypes.default.bool.isRequired};studentLevelProgressShape.pages=_propTypes.default.arrayOf(_propTypes.default.shape(studentLevelProgressShape));var studentLevelProgressType=exports.studentLevelProgressType=_propTypes.default.shape(studentLevelProgressShape),lessonType=(exports.unitProgressType=_propTypes.default.objectOf(studentLevelProgressType),exports.lessonType=_propTypes.default.shape({name:_propTypes.default.string.isRequired,id:_propTypes.default.number.isRequired,lockable:_propTypes.default.bool.isRequired,lessonNumber:_propTypes.default.number,lesson_plan_html_url:_propTypes.default.string,lesson_feedback_url:_propTypes.default.string,isFocusArea:_propTypes.default.bool.isRequired,description_student:_propTypes.default.string,description_teacher:_propTypes.default.string})),lessonGroupShape=(exports.studentLessonProgressType=_propTypes.default.shape({incompletePercent:_propTypes.default.number.isRequired,imperfectPercent:_propTypes.default.number.isRequired,completedPercent:_propTypes.default.number.isRequired,timeSpent:_propTypes.default.number.isRequired,lastTimestamp:_propTypes.default.number.isRequired}),{id:_propTypes.default.number,displayName:_propTypes.default.string,bigQuestions:_propTypes.default.string,description:_propTypes.default.string});exports.groupedLessonsType=_propTypes.default.shape({lessonGroup:_propTypes.default.shape(lessonGroupShape),lessons:_propTypes.default.arrayOf(lessonType).isRequired,levelsByLesson:_propTypes.default.arrayOf(_propTypes.default.arrayOf(levelWithProgressType)).isRequired})},"./src/templates/sectionProgress/SectionProgressToggle.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedSectionProgressToggle=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_ToggleGroup=_interopRequireDefault(__webpack_require__("./src/templates/ToggleGroup.jsx")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_sectionProgressRedux=__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SectionProgressToggle=function(_React$Component){function SectionProgressToggle(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"onChange",(function(selectedToggle){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"view_change_toggle",data_json:JSON.stringify({section_id:_this.props.sectionId,old_view:_this.props.currentView,new_view:selectedToggle,script_id:_this.props.scriptId})},{includeUserId:!0}),_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_TOGGLE,{sectionId:_this.props.sectionId,unitId:_this.props.scriptId,newView:selectedToggle}),_this.props.setCurrentView(selectedToggle)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SectionProgressToggle,_React$Component),SectionProgressToggle.prototype.render=function render(){var _this$props=this.props,currentView=_this$props.currentView,showStandardsToggle=_this$props.showStandardsToggle;return _react.default.createElement(_ToggleGroup.default,{selected:currentView,activeColor:_color.default.teal,onChange:this.onChange,style:styles.toggleGroup},_react.default.createElement("button",{type:"button",value:_sectionProgressConstants.ViewType.SUMMARY,style:styles.toggleButton},_react.default.createElement("div",null,_locale.default.lessons())),_react.default.createElement("button",{type:"button",id:"uitest-toggle-detail-view",value:_sectionProgressConstants.ViewType.DETAIL,style:styles.toggleButton},_react.default.createElement("div",null,_locale.default.levels())),showStandardsToggle&&_react.default.createElement("button",{type:"button",value:_sectionProgressConstants.ViewType.STANDARDS,style:styles.toggleButton,id:"uitest-standards-toggle"},_react.default.createElement("div",null,_locale.default.standards())))},SectionProgressToggle}(_react.default.Component);_defineProperty(SectionProgressToggle,"propTypes",{showStandardsToggle:_propTypes.default.bool,currentView:_propTypes.default.string.isRequired,setCurrentView:_propTypes.default.func.isRequired,sectionId:_propTypes.default.number,scriptId:_propTypes.default.number});var styles={toggleButton:{padding:"3px 20px",height:34,margin:"auto auto 10px auto"},toggleGroup:{minWidth:"fit-content"}};exports.UnconnectedSectionProgressToggle=SectionProgressToggle,exports.default=(0,_reactRedux.connect)((function(state){return{currentView:state.sectionProgress.currentView,sectionId:state.teacherSections.selectedSectionId,scriptId:state.unitSelection.scriptId}}),(function(dispatch){return{setCurrentView:function setCurrentView(viewType){dispatch((0,_sectionProgressRedux.setCurrentView)(viewType))}}}))(SectionProgressToggle)},"./src/templates/sectionProgress/sectionProgressConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitDataPropType=exports.tooltipIdForStudent=exports.studentTableRowType=exports.scrollbarWidth=exports.ViewType=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");exports.unitDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,csf:_propTypes.default.bool,hasStandards:_propTypes.default.bool,title:_propTypes.default.string,path:_propTypes.default.string,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({levels:_propTypes.default.arrayOf(_propTypes.default.object).isRequired})),family_name:_propTypes.default.string,version_year:_propTypes.default.string,name:_propTypes.default.string}),exports.ViewType={SUMMARY:"summary",DETAIL:"detail",STANDARDS:"standards"},exports.studentTableRowType=_propTypes.default.shape({id:_propTypes.default.string.isRequired,student:_progressTypes.studentType.isRequired,expansionIndex:_propTypes.default.number.isRequired,isExpanded:_propTypes.default.bool,useDarkBackground:_propTypes.default.bool}),exports.tooltipIdForStudent=function tooltipIdForStudent(studentId){return"tooltipIdForStudent".concat(studentId)},exports.scrollbarWidth=function getScrollbarWidth(){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var inner=document.createElement("div");outer.appendChild(inner);var scrollbarWidth=outer.offsetWidth-inner.offsetWidth;return outer.parentNode.removeChild(outer),scrollbarWidth}()},"./src/templates/sectionProgress/sectionProgressRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.addDataByUnit=void 0,exports.default=function sectionProgress(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===_unitSelectionRedux.SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:INITIAL_LESSON_OF_INTEREST});if(action.type===SET_CURRENT_VIEW)return _objectSpread(_objectSpread({},state),{},{currentView:action.viewType});if(action.type===START_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!0});if(action.type===FINISH_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!1});if(action.type===START_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!0});if(action.type===FINISH_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!1});if(action.type===SET_LESSON_OF_INTEREST)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:action.lessonOfInterest});if(action.type===ADD_DATA_BY_UNIT)return _objectSpread(_objectSpread({},state),{},{unitDataByUnit:_objectSpread(_objectSpread({},state.unitDataByUnit),action.data.unitDataByUnit),studentLevelProgressByUnit:_objectSpread(_objectSpread({},state.studentLevelProgressByUnit),action.data.studentLevelProgressByUnit),studentLessonProgressByUnit:_objectSpread(_objectSpread({},state.studentLessonProgressByUnit),action.data.studentLessonProgressByUnit),studentLastUpdateByUnit:_objectSpread(_objectSpread({},state.studentLastUpdateByUnit),action.data.studentLastUpdateByUnit)});return state},exports.startRefreshingProgress=exports.startLoadingProgress=exports.setLessonOfInterest=exports.setCurrentView=exports.jumpToLessonDetails=exports.getCurrentUnitData=exports.finishRefreshingProgress=exports.finishLoadingProgress=void 0;var _unitSelectionRedux=__webpack_require__("./src/redux/unitSelectionRedux.js"),_firehose=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/lib/util/firehose.js")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_CURRENT_VIEW="sectionProgress/SET_CURRENT_VIEW",SET_LESSON_OF_INTEREST="sectionProgress/SET_LESSON_OF_INTEREST",START_LOADING_PROGRESS="sectionProgress/START_LOADING_PROGRESS",FINISH_LOADING_PROGRESS="sectionProgress/FINISH_LOADING_PROGRESS",START_REFRESHING_PROGRESS="sectionProgress/START_REFRESHING_PROGRESS",FINISH_REFRESHING_PROGRESS="sectionProgress/FINISH_REFRESHING_PROGRESS",ADD_DATA_BY_UNIT="sectionProgress/ADD_DATA_BY_UNIT",setLessonOfInterest=(exports.startLoadingProgress=function startLoadingProgress(){return{type:START_LOADING_PROGRESS}},exports.finishLoadingProgress=function finishLoadingProgress(){return{type:FINISH_LOADING_PROGRESS}},exports.startRefreshingProgress=function startRefreshingProgress(){return{type:START_REFRESHING_PROGRESS}},exports.finishRefreshingProgress=function finishRefreshingProgress(){return{type:FINISH_REFRESHING_PROGRESS}},exports.setLessonOfInterest=function setLessonOfInterest(lessonOfInterest){return{type:SET_LESSON_OF_INTEREST,lessonOfInterest}}),setCurrentView=exports.setCurrentView=function setCurrentView(viewType){return{type:SET_CURRENT_VIEW,viewType}},INITIAL_LESSON_OF_INTEREST=(exports.addDataByUnit=function addDataByUnit(data){return{type:ADD_DATA_BY_UNIT,data}},1),initialState={section:{},currentView:_sectionProgressConstants.ViewType.SUMMARY,unitDataByUnit:{},studentLevelProgressByUnit:{},studentLessonProgressByUnit:{},studentLastUpdateByUnit:{},lessonOfInterest:INITIAL_LESSON_OF_INTEREST,isLoadingProgress:!1,isRefreshingProgress:!1};exports.jumpToLessonDetails=function jumpToLessonDetails(lessonOfInterest){return function(dispatch,getState){var state=getState();dispatch(setLessonOfInterest(lessonOfInterest)),dispatch(setCurrentView(_sectionProgressConstants.ViewType.DETAIL)),_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"view_change_toggle",data_json:JSON.stringify({section_id:state.teacherSections.selectedSectionId,old_view:_sectionProgressConstants.ViewType.SUMMARY,new_view:_sectionProgressConstants.ViewType.DETAIL,script_id:state.unitSelection.scriptId})},{includeUserId:!0})}},exports.getCurrentUnitData=function getCurrentUnitData(state){return state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId]}},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",brand_teal_5:"#DFF2F4",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_500:"#94979B",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./src/templates/sectionProgress/SectionProgressToggle.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SummaryView=exports.StandardsView=exports.DetailsView=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_isRtlRedux=_interopRequireDefault(__webpack_require__("./src/code-studio/isRtlRedux.js")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_SectionProgressToggle=__webpack_require__("./src/templates/sectionProgress/SectionProgressToggle.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_SectionProgressToggle.UnconnectedSectionProgressToggle};var Template=function Template(args){var store=(0,_redux.createStore)((0,_redux.combineReducers)({isRtl:_isRtlRedux.default}));return _react.default.createElement(_reactRedux.Provider,{store},_react.default.createElement(_SectionProgressToggle.UnconnectedSectionProgressToggle,_extends({setCurrentView:function setCurrentView(){return console.log("Toggle view.")},scriptId:1},args)))};(exports.SummaryView=Template.bind({})).args={currentView:_sectionProgressConstants.ViewType.SUMMARY},(exports.DetailsView=Template.bind({})).args={currentView:_sectionProgressConstants.ViewType.DETAIL},(exports.StandardsView=Template.bind({})).args={currentView:_sectionProgressConstants.ViewType.STANDARDS,showStandardsToggle:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,