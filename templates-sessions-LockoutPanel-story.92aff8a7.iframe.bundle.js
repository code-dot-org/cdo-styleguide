/*! For license information please see templates-sessions-LockoutPanel-story.92aff8a7.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3636],{"./src/redux.js":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStore=function getStore(){reduxStore||(reduxStore=createStoreWithReducers(),_experiments.default.isEnabled("reduxGlobalStore")&&(window.reduxStore=reduxStore));return reduxStore},exports.hasReducer=function hasReducer(key){return!!globalReducers[key]},exports.registerReducers=function registerReducers(reducers){for(var key in reducers){var existingReducer=globalReducers[key];if(existingReducer&&existingReducer!==reducers[key])throw new Error('reducer with key "'.concat(key,'" already registered!'))}Object.assign(globalReducers,reducers),reduxStore&&reduxStore.replaceReducer(redux.combineReducers(globalReducers))};_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js"));var reduxStore,_experiments=_interopRequireDefault(__webpack_require__("./src/util/experiments.js")),redux=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/redux/es/redux.js")),_reduxThunk=_interopRequireDefault(__webpack_require__("./node_modules/redux-thunk/lib/index.js")),_toolkit=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var globalReducers={};function createStoreWithReducers(){return function createStore(reducer,initialState){_experiments.default.isEnabled(_experiments.default.REDUX_LOGGING);0;return(0,_toolkit.configureStore)({reducer,preloadedState:initialState,middleware:[_reduxThunk.default],devTools:!1})}(Object.keys(globalReducers).length>0?globalReducers:function(s){return s})}module.exports.createStoreWithReducers=createStoreWithReducers},"./src/templates/sessions/LockoutPanel.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=LockoutPanel;var _jsCookie=_interopRequireDefault(__webpack_require__("./node_modules/js-cookie/src/js.cookie.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_formatValidation=__webpack_require__("./src/util/formatValidation.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_dancing=_interopRequireDefault(__webpack_require__("./static/common_images/penguin/dancing.png")),_yelling=_interopRequireDefault(__webpack_require__("./static/common_images/penguin/yelling.png")),_redux=__webpack_require__("./src/redux.js"),color=_interopRequireWildcard(__webpack_require__("./src/util/color.js")),_utils=__webpack_require__("./src/utils.js"),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function LockoutPanel(props){var _getStore$getState,validateEmail=function validateEmail(email){return(0,_formatValidation.isEmail)(email)&&!function isEmailDisallowed(email){return props.disallowedEmail===(0,_utils.hashString)(email)}(email)},_useState2=_slicedToArray((0,_react.useState)((function(){return!validateEmail(props.pendingEmail)})),2),disabled=_useState2[0],setDisabled=_useState2[1],onEmailUpdate=function onEmailUpdate(event){setDisabled(!validateEmail(event.target.value))},locale=_jsCookie.default.get("language_")||"en-US",isRTL=null===(_getStore$getState=(0,_redux.getStore)().getState())||void 0===_getStore$getState?void 0:_getStore$getState.isRtl,dateOptions={year:"numeric",month:"long",day:"numeric"},pendingPromptParts=_locale.default.sessionLockoutPendingPrompt({pendingEmail:"{pendingEmail}"}).split("{pendingEmail}"),tokenElement=document.querySelector('meta[name="csrf-token"]'),csrfToken="";return tokenElement&&(csrfToken=tokenElement.attributes.content.value),_react.default.createElement("div",{style:styles.container,className:"lockout-panel"},_react.default.createElement("img",{style:styles.image,src:props.pendingEmail?_dancing.default:_yelling.default,alt:props.pendingEmail?_locale.default.sessionLockoutHeaderThanksDescription():_locale.default.sessionLockoutHeaderDescription()}),_react.default.createElement("h2",null,props.pendingEmail?_locale.default.sessionLockoutPendingHeader():props.isPreLockoutUser?_locale.default.sessionLockoutNewPreLockoutAccountHeader():_locale.default.sessionLockoutNewAccountHeader()),_react.default.createElement("form",{id:"lockout-panel-form",action:props.apiURL,method:"post"},_react.default.createElement("input",{type:"hidden",value:csrfToken,name:"authenticity_token"}),props.pendingEmail&&_react.default.createElement("p",null,pendingPromptParts[0],_react.default.createElement("strong",null,props.pendingEmail),pendingPromptParts[1]),!props.pendingEmail&&_react.default.createElement("p",null,props.isPreLockoutUser?_locale.default.sessionLockoutPreLockoutAccountPrompt():_locale.default.sessionLockoutPrompt()),_react.default.createElement("p",null,_locale.default.sessionLockoutNote({deleteDate:props.deleteDate.toLocaleDateString(locale,_objectSpread(_objectSpread({},dateOptions),{},{timeZone:"UTC"}))})),_react.default.createElement("div",{style:styles.statusSection},_react.default.createElement("div",null,_react.default.createElement("label",{style:isRTL?styles.statusLabelRTL:styles.statusLabel,htmlFor:"permission-status"},_react.default.createElement("strong",null,_locale.default.sessionLockoutParentStatusField())),_react.default.createElement("span",{id:"permission-status",style:props.pendingEmail?styles.pending:styles.notSubmitted},_react.default.createElement("strong",null,props.pendingEmail?_locale.default.sessionLockoutStatusPending():_locale.default.sessionLockoutStatusNotSubmitted()))),props.pendingEmail&&_react.default.createElement(_Button.default,{id:"lockout-resend",styleAsText:!0,style:styles.resendLink,text:_locale.default.sessionLockoutResendEmail(),type:"button",onClick:function resendPermissionEmail(event){document.getElementById("parent-email").value=props.pendingEmail,document.getElementById("lockout-panel-form").submit()}})),_react.default.createElement("div",{style:styles.sections},_react.default.createElement("div",{style:styles.section},_react.default.createElement("label",{style:isRTL?styles.labelRTL:styles.label,htmlFor:"parent-email"},_react.default.createElement("strong",null,_locale.default.sessionLockoutParentEmailField())),_react.default.createElement("div",{style:styles.fieldSection},_react.default.createElement("input",{style:styles.field,onChange:onEmailUpdate,onInput:onEmailUpdate,onBlur:onEmailUpdate,defaultValue:props.pendingEmail,name:"parent-email",id:"parent-email"}),props.pendingEmail&&_react.default.createElement("p",{style:styles.lastEmail},_react.default.createElement("em",{id:"lockout-last-email-date"},_locale.default.sessionLockoutLastEmailSent()+" ",props.requestDate.toLocaleDateString(locale,_objectSpread(_objectSpread({},dateOptions),{},{hour:"numeric",minute:"numeric"}))))))),_react.default.createElement("div",{style:styles.buttons},_react.default.createElement(_Button.default,{id:"lockout-signout",type:"button",style:styles.button,text:_locale.default.signOutButton(),color:_Button.default.ButtonColor.gray,onClick:function signOut(event){window.location.href="users/sign_out"}}),_react.default.createElement(_Button.default,{id:"lockout-submit",type:"submit",style:styles.button,text:props.pendingEmail?_locale.default.sessionLockoutUpdateSubmit():_locale.default.sessionLockoutSubmit(),disabled,onClick:function onClick(){}}))))}LockoutPanel.propTypes={apiURL:_propTypes.default.string.isRequired,deleteDate:_propTypes.default.instanceOf(Date).isRequired,pendingEmail:_propTypes.default.string,requestDate:_propTypes.default.instanceOf(Date),disallowedEmail:_propTypes.default.string.isRequired,isPreLockoutUser:_propTypes.default.bool},LockoutPanel.defaultProps={isPreLockoutUser:!1};var styles={container:{border:"1px solid rgb(233 233 233)",boxShadow:"5px 5px 3px 0px #ccc",boxSizing:"border-box",marginLeft:"auto",marginRight:"auto",marginTop:10,maxWidth:700,padding:20,paddingBottom:0},sections:{marginBottom:25},statusSection:{display:"flex",justifyContent:"space-between",marginBottom:20,marginTop:20},section:{display:"flex",flexDirection:"row",width:"100%"},notSubmitted:{color:color.red},pending:{color:color.orange},statusLabel:{display:"inline-block",marginRight:15},statusLabelRTL:{display:"inline-block",marginLeft:15},resendLink:{fontSize:"inherit",textDecoration:"underline"},label:{display:"inline-block",flex:"0 0 auto",marginRight:15,marginTop:6},labelRTL:{display:"inline-block",flex:"0 0 auto",marginLeft:15,marginTop:6},field:{color:"#292F36",border:"1px solid #C6CACD",borderRadius:4,boxSizing:"border-box",padding:6,width:"100%"},fieldSection:{display:"inline-block",flex:"1 0 auto"},lastEmail:{color:"#4D575F",fontSize:"85%",marginLeft:5},image:{display:"block",marginLeft:"auto",marginRight:"auto",width:116},buttons:{display:"flex",flexDirection:"row",justifyContent:"space-between"},button:{margin:0,marginTop:5}};module.exports=exports.default},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",brand_teal_5:"#DFF2F4",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_400:"#A9ACAF",light_gray_500:"#94979B",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./src/util/formatValidation.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isZipCode=exports.isPercent=exports.isInt=exports.isEmail=void 0;var EMAIL_REGEX=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ZIP_CODE_REGEX=(exports.isEmail=function isEmail(value){return EMAIL_REGEX.test(value)},/^\d{5}([\W-]?\d{4})?$/);exports.isZipCode=function isZipCode(value){return ZIP_CODE_REGEX.test(value)},exports.isInt=function isInt(value){var newValue=value.replace(/,/g,"");return parseInt(newValue,10).toString()===newValue},exports.isPercent=function isPercent(value){var percent=parseFloat(value);return 0<=percent&&percent<=100}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/sessions/LockoutPanel.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.PendingRequest=exports.NewPreLockoutAccount=exports.NewAccount=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_LockoutPanel=_interopRequireDefault(__webpack_require__("./src/templates/sessions/LockoutPanel.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_LockoutPanel.default};var Template=function Template(args){return _react.default.createElement(_LockoutPanel.default,_extends({apiURL:"/permissions",deleteDate:new Date(Date.now()+5184e5),disallowedEmail:"student@test.com"},args))};(exports.NewAccount=Template.bind({})).args={},(exports.NewPreLockoutAccount=Template.bind({})).args={isPreLockoutUser:!0},(exports.PendingRequest=Template.bind({})).args={pendingEmail:"blah@blarg.com",requestDate:new Date(Date.now()-1728e5)}},"./static/common_images/penguin/dancing.png":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"dancingwpee75862a584bf87ec62a145eb3b3c90a.png"},"./static/common_images/penguin/yelling.png":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"yellingwpa6a9284e9d9ced3d43fa3ce7ba202d50.png"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLXNlc3Npb25zLUxvY2tvdXRQYW5lbC1zdG9yeS40ZGQxMDA2Zi5pZnJhbWUuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7cWRBeUVPLFNBQVNBLFdBQ1RDLGFBQ0hBLFdBQWFDLDBCQUNUQyxhQUFBQSxRQUFZQyxVQUFVLHNCQUV4QkMsT0FBT0osV0FBYUEsYUFJeEIsT0FBT0EsVUFDVCxxQkFtQ08sU0FBU0ssV0FBV0MsS0FDekIsUUFBU0MsZUFBZUQsSUFDMUIsMkJBbEJPLFNBQVNFLGlCQUFpQkMsVUFDL0IsSUFBSyxJQUFJSCxPQUFPRyxTQUFVLENBQ3hCLElBQU1DLGdCQUFrQkgsZUFBZUQsS0FDdkMsR0FBSUksaUJBQW1CQSxrQkFBb0JELFNBQVNILEtBQ2xELE1BQU0sSUFBSUssTUFBTSxxQkFBREMsT0FBc0JOLElBQUcseUJBRTVDLENBQ0FPLE9BQU9DLE9BQU9QLGVBQWdCRSxVQUMxQlQsWUFDRkEsV0FBV2UsZUFBZUMsTUFBTUMsZ0JBQWdCVixnQkFFcEQsRUF0RkFXLHVCQUFBQyxvQkFBQSxtREFVSW5CLFdBVEpvQixhQUFBRix1QkFBQUMsb0JBQUEsOEJBQ0FILE1BRWdELFNBQUFLLHdCQUFBQyxFQUFBQyxHQUFBLElBQUFBLEdBQUFELEdBQUFBLEVBQUFFLFdBQUEsT0FBQUYsRUFBQSxVQUFBQSxHQUFBLFVBQUFHLFFBQUFILElBQUEsbUJBQUFBLEVBQUEsZUFBQUEsR0FBQSxJQUFBSSxFQUFBQyx5QkFBQUosR0FBQSxHQUFBRyxHQUFBQSxFQUFBRSxJQUFBTixHQUFBLE9BQUFJLEVBQUFHLElBQUFQLEdBQUEsSUFBQVEsRUFBQSxDQUFBQyxVQUFBLE1BQUFDLEVBQUFuQixPQUFBb0IsZ0JBQUFwQixPQUFBcUIseUJBQUEsUUFBQUMsS0FBQWIsRUFBQSxlQUFBYSxHQUFBLEdBQUFDLGVBQUFDLEtBQUFmLEVBQUFhLEdBQUEsS0FBQUcsRUFBQU4sRUFBQW5CLE9BQUFxQix5QkFBQVosRUFBQWEsR0FBQSxLQUFBRyxJQUFBQSxFQUFB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QW1CLElBQUEsU0FBQUEsSUFBQSxVQUFBcVYsV0FBQSxPQUFBQSxTQUFBblgsT0FBQUMsT0FBQUQsT0FBQUMsT0FBQW1YLE9BQUEsU0FBQTVQLFFBQUEsUUFBQS9GLEVBQUEsRUFBQUEsRUFBQXdDLFVBQUF2QixPQUFBakIsSUFBQSxLQUFBb1EsT0FBQTVOLFVBQUF4QyxHQUFBLFFBQUFoQyxPQUFBb1MsT0FBQTdSLE9BQUE4RixVQUFBdkUsZUFBQUMsS0FBQXFRLE9BQUFwUyxPQUFBK0gsT0FBQS9ILEtBQUFvUyxPQUFBcFMsS0FBQSxRQUFBK0gsTUFBQSxFQUFBMlAsU0FBQXBULE1BQUEsS0FBQUUsVUFBQSxDQUVUcEIsUUFBQUEsUUFFbEIsQ0FDYndVLFVBQVc3USxjQUFBQSxTQUhiLElBTU04USxTQUFXLFNBQVhBLFNBQVdDLE1BQUksT0FDbkJ2VSxPQUFBLFFBQUEyRixjQUFDdU8sY0FBQSxRQUFZQyxTQUFBLENBQ1h0TixPQUFPLGVBQ1BNLFdBQVksSUFBSW9ELEtBQUtBLEtBQUtpSyxNQUFRLFFBQ2xDelEsZ0JBQWdCLG9CQUNad1EsTUFDSixHQUdtQjFVLFFBQUFBLFdBQUd5VSxTQUFTRixLQUFLLENBQUMsSUFDOUJHLEtBQU8sQ0FBQyxHQUVjMVUsUUFBQUEscUJBQUd5VSxTQUFTRixLQUFLLENBQUMsSUFDOUJHLEtBQU8sQ0FDMUIvTixrQkFBa0IsSUFHTzNHLFFBQUFBLGVBQUd5VSxTQUFTRixLQUFLLENBQUMsSUFDOUJHLEtBQU8sQ0FDcEJwUSxhQUFjLGlCQUNkaUYsWUFBYSxJQUFJbUIsS0FBS0EsS0FBS2lLLE1BQVEsK0dDOUJyQzVVLE9BQU9DLFFBQVUsc0JBQTBCLHNKQ0EzQ0QsT0FBT0MsUUFBVSxzQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvcmVkdXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZXNzaW9ucy9Mb2Nrb3V0UGFuZWwuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy91dGlsL2NvbG9yLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy91dGlsL2Zvcm1hdFZhbGlkYXRpb24uanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9yZWR1eC10aHVuay9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3Nlc3Npb25zL0xvY2tvdXRQYW5lbC5zdG9yeS5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3RhdGljL2NvbW1vbl9pbWFnZXMvcGVuZ3Vpbi9kYW5jaW5nLnBuZyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zdGF0aWMvY29tbW9uX2ltYWdlcy9wZW5ndWluL3llbGxpbmcucG5nIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfX19fX19fX19fX19fX19fX19fX19fX1xuICogICAgICBfX19fX19fX19fX19fX19fX19fX19fXy0tLS0tLS0tLS0tLS0tLS0tLS0gICAgICAgICAgICAgICAgICAgICAgIGBcXFxuICogICAgLzotLV9fICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiAgIHx8PCA+IHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9fX19fX19fX19fX19fX19fX19fX19fX19fXy9cbiAqICAgfCBcXF9fL19fX19fX19fX19fX19fX19fLS0tLS0tLS0tLS0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiAgICB8ICAgICAgICAgICAgICAgICAgIFRIRSBMT1JEIE9GIFRIRSBSRURVWCBTVE9SRVMgICAgICAgICAgICAgICAgICAgfFxuICogICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqICAgIHwgICAgIFwiVGhyZWUgU3RvcmVzIGZvciB0aGUgRWx2ZW4ta2luZ3MgdW5kZXIgdGhlIHNreSwgICAgICAgICAgICAgfFxuICogICAgIHwgICAgICAgU2V2ZW4gZm9yIHRoZSBEd2FyZi1sb3JkcyBpbiB0aGVpciBoYWxscyBvZiBzdG9uZSwgICAgICAgICB8XG4gKiAgICAgfCAgICAgTmluZSBmb3IgTW9ydGFsIE1lbiBkb29tZWQgdG8gZGllLCAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqICAgICB8ICAgICAgIE9uZSBmb3IgdGhlIERhcmsgTG9yZCBvbiBoaXMgZGFyayB0aHJvbmUgICAgICAgICAgICAgICAgICAgfFxuICogICAgIHwgICAgIEluIHRoZSBMYW5kIG9mIE1vcmRvciB3aGVyZSB0aGUgU2hhZG93cyBsaWUuICAgICAgICAgICAgICAgICAgfFxuICogICAgICB8ICAgICAgT25lIFN0b3JlIHRvIHJ1bGUgdGhlbSBhbGwsIE9uZSBTdG9yZSB0byBmaW5kIHRoZW0sICAgICAgICAgfFxuICogICAgICB8ICAgICAgT25lIFN0b3JlIHRvIGJyaW5nIHRoZW0gYWxsIGFuZCBpbiB0aGUgZGFya25lc3MgYmluZCB0aGVtICAgfFxuICogICAgICB8ICAgIEluIHRoZSBMYW5kIG9mIE1vcmRvciB3aGVyZSB0aGUgU2hhZG93cyBsaWUuICAgICAgICAgICAgICAgICB8XG4gKiAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfX19fX19fX19fX19fX19fX19fX3xfXG4gKiAgICAgfCAgX19fX19fX19fX19fX19fX19fXy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gICAgICAgICAgICAgICAgICAgICAgYFxcXG4gKiAgICAgfC9gLS1fICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiAgICAgfHxbIF18fCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX19fX19fX19fX19fX19fX19fXy9cbiAqICAgICAgXFw9PT0vX19fX19fX19fX19fX19fX19fXy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICpcbiAqIEBmaWxlIFRoZSBnbG9iYWwgcmVkdXggc3RvcmUgLSBcIlRoZXJlIGNhbiBiZSBvbmx5IG9uZVwiXG4gKi9cblxuaW1wb3J0IEltbXV0YWJsZSBmcm9tICdpbW11dGFibGUnO1xuaW1wb3J0IGV4cGVyaW1lbnRzIGZyb20gJy4vdXRpbC9leHBlcmltZW50cyc7XG5pbXBvcnQgKiBhcyByZWR1eCBmcm9tICdyZWR1eCc7XG5pbXBvcnQgcmVkdXhUaHVuayBmcm9tICdyZWR1eC10aHVuayc7XG5pbXBvcnQge2NvbmZpZ3VyZVN0b3JlfSBmcm9tICdAcmVkdXhqcy90b29sa2l0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGNyZWF0ZUxvZ2dlciA9IHJlcXVpcmUoJ3JlZHV4LWxvZ2dlcicpO1xufVxuXG5sZXQgcmVkdXhTdG9yZTtcbmxldCBnbG9iYWxSZWR1Y2VycyA9IHt9O1xuXG5pZiAoSU5fVU5JVF9URVNUKSB7XG4gIGxldCBfX29sZFJlZHV4U3RvcmU7XG4gIGxldCBfX29sZEdsb2JhbFJlZHVjZXJzO1xuXG4gIG1vZHVsZS5leHBvcnRzLnN0dWJSZWR1eCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoX19vbGRSZWR1eFN0b3JlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdSZWR1eCBzdG9yZSBoYXMgYWxyZWFkeSBiZWVuIHN0dWJiZWQuIERpZCB5b3UgZm9yZ2V0IHRvIGNhbGwgcmVzdG9yZT8nXG4gICAgICApO1xuICAgIH1cbiAgICBfX29sZFJlZHV4U3RvcmUgPSByZWR1eFN0b3JlO1xuICAgIF9fb2xkR2xvYmFsUmVkdWNlcnMgPSBnbG9iYWxSZWR1Y2VycztcbiAgICByZWR1eFN0b3JlID0gbnVsbDtcbiAgICBnbG9iYWxSZWR1Y2VycyA9IHt9O1xuICB9O1xuXG4gIG1vZHVsZS5leHBvcnRzLnJlc3RvcmVSZWR1eCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZWR1eFN0b3JlID0gX19vbGRSZWR1eFN0b3JlO1xuICAgIGdsb2JhbFJlZHVjZXJzID0gX19vbGRHbG9iYWxSZWR1Y2VycztcbiAgICBfX29sZFJlZHV4U3RvcmUgPSBudWxsO1xuICAgIF9fb2xkR2xvYmFsUmVkdWNlcnMgPSBudWxsO1xuICB9O1xufVxuXG5pZiAoSU5fU1RPUllCT09LIHx8IElOX1VOSVRfVEVTVCkge1xuICAvLyBTdG9yeWJvb2tzIG5lZWQgdGhlIGFiaWxpdHkgdG8gY3JlYXRlIG11bHRpcGxlIGRpc3RpbmN0IHN0b3JlcyBpbnN0ZWFkIG9mXG4gIC8vIHVzaW5nIGEgc2luZ2xldG9uXG4gIG1vZHVsZS5leHBvcnRzLmNyZWF0ZVN0b3JlV2l0aFJlZHVjZXJzID0gY3JlYXRlU3RvcmVXaXRoUmVkdWNlcnM7XG59XG5cbi8qKlxuICogR2V0IGEgcmVmZXJlbmNlIHRvIG91ciByZWR1eCBzdG9yZS4gSWYgaXQgZG9lc24ndCBleGlzdCB5ZXQsIGNyZWF0ZSBpdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFN0b3JlKCkge1xuICBpZiAoIXJlZHV4U3RvcmUpIHtcbiAgICByZWR1eFN0b3JlID0gY3JlYXRlU3RvcmVXaXRoUmVkdWNlcnMoKTtcbiAgICBpZiAoZXhwZXJpbWVudHMuaXNFbmFibGVkKCdyZWR1eEdsb2JhbFN0b3JlJykpIHtcbiAgICAgIC8vIEV4cG9zZSBvdXIgc3RvcmUgZ2xvYmFsbHksIHRvIG1ha2UgZGVidWdnaW5nIGVhc2llclxuICAgICAgd2luZG93LnJlZHV4U3RvcmUgPSByZWR1eFN0b3JlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZWR1eFN0b3JlO1xufVxuXG4vKipcbiAqIENyZWF0ZSBvdXIgc3RvcmVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlU3RvcmVXaXRoUmVkdWNlcnMoKSB7XG4gIHJldHVybiBjcmVhdGVTdG9yZShcbiAgICBPYmplY3Qua2V5cyhnbG9iYWxSZWR1Y2VycykubGVuZ3RoID4gMCA/IGdsb2JhbFJlZHVjZXJzIDogcyA9PiBzXG4gICk7XG59XG5cbi8qKlxuICogUmVnaXN0ZXIgbXVsdGlwbGUgdG9wLWxldmVsIHJlZHVjZXJzIHdpdGggdGhlIGdsb2JhbCBzdG9yZS4gVGhpcyBkb2VzIG5vdCByZW1vdmVcbiAqIGFueSByZWR1Y2VycyB0aGF0IGhhdmUgYmVlbiBwcmV2aW91c2x5IHJlZ2lzdGVyZWQuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlZHVjZXJzIC0gYW4gb2JqZWN0IG1hcHBpbmcgdW5pcXVlIGtleXMgdG8gcmVkdWNlciBmdW5jdGlvbnNcbiAqICAgICBUaGUga2V5cyB3aWxsIGJlIHVzZWQgaW4gdGhlIHN0YXRlIG9iamVjdC5cbiAqIEByZXR1cm5zIHZvaWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyUmVkdWNlcnMocmVkdWNlcnMpIHtcbiAgZm9yIChsZXQga2V5IGluIHJlZHVjZXJzKSB7XG4gICAgY29uc3QgZXhpc3RpbmdSZWR1Y2VyID0gZ2xvYmFsUmVkdWNlcnNba2V5XTtcbiAgICBpZiAoZXhpc3RpbmdSZWR1Y2VyICYmIGV4aXN0aW5nUmVkdWNlciAhPT0gcmVkdWNlcnNba2V5XSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGByZWR1Y2VyIHdpdGgga2V5IFwiJHtrZXl9XCIgYWxyZWFkeSByZWdpc3RlcmVkIWApO1xuICAgIH1cbiAgfVxuICBPYmplY3QuYXNzaWduKGdsb2JhbFJlZHVjZXJzLCByZWR1Y2Vycyk7XG4gIGlmIChyZWR1eFN0b3JlKSB7XG4gICAgcmVkdXhTdG9yZS5yZXBsYWNlUmVkdWNlcihyZWR1eC5jb21iaW5lUmVkdWNlcnMoZ2xvYmFsUmVkdWNlcnMpKTtcbiAgfVxufVxuXG4vKipcbiAqIEByZXR1cm5zIHtib29sZWFufSB3aGV0aGVyIG9yIG5vdCBhIHJlZHVjZXIgd2l0aCB0aGUgZ2l2ZW4ga2V5IGhhcyBiZWVuIHJlZ2lzdGVyZWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc1JlZHVjZXIoa2V5KSB7XG4gIHJldHVybiAhIWdsb2JhbFJlZHVjZXJzW2tleV07XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHN0b3JlIGNvbmZpZ3VyZWQgZm9yIHVzZSB0aGUgd2F5IHdlIHdhbnQgZm9yIENvZGUub3JnLlxuICogQHNlZSBodHRwOi8vcmVkdXguanMub3JnL2RvY3MvYXBpL2NyZWF0ZVN0b3JlLmh0bWxcbiAqIEBwYXJhbSB7IWZ1bmN0aW9ufSByZWR1Y2VyXG4gKiBAcmV0dXJuIHtTdG9yZX0gQ29uZmlndXJlZCBSZWR1eCBzdG9yZSwgcmVhZHkgZm9yIHVzZS5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgaW5pdGlhbFN0YXRlKSB7XG4gIC8vIFlvdSBoYXZlIHRvIG1hbnVhbGx5IGVuYWJsZSBkZWJ1Z2dpbmcsIGJvdGggdG8ga2VlcCB0aGUgbG9nZ2VyIG91dFxuICAvLyBvZiBwcm9kdWN0aW9uIGJ1bmRsZXMsIGFuZCBiZWNhdXNlIGl0IGNhdXNlcyBhIGxvdCBvZiBjb25zb2xlIG5vaXNlIGFuZFxuICAvLyBtYWtlcyBvdXIgdW5pdCB0ZXN0cyBmYWlsLiBUbyBlbmFibGUsIGFwcGVuZCA/ZW5hYmxlRXhwZXJpbWVudHM9cmVkdXhMb2dnaW5nXG4gIC8vIHRvIHlvdXIgdXJsLiBUaGlzIHdpbGwgYWxzbyBlbmFibGUgbG9nZ2luZyBpZiB0aGVyZSBpcyBhIG5vbi1pbW11dGFibGUgb3Igbm9uLXNlcmlhbGl6YWJsZVxuICAvLyB2YWx1ZSBpbiB0aGUgcmVkdXggc3RvcmUsIHdpdGggc29tZSBpZ25vcmVzIGFscmVhZHkgc2V0IHVwIChzZWUgYmVsb3cpLlxuICB2YXIgZW5hYmxlUmVkdXhEZWJ1Z2dpbmcgPSBleHBlcmltZW50cy5pc0VuYWJsZWQoZXhwZXJpbWVudHMuUkVEVVhfTE9HR0lORyk7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGVuYWJsZVJlZHV4RGVidWdnaW5nKSB7XG4gICAgdmFyIHJlZHV4TG9nZ2VyID0gY3JlYXRlTG9nZ2VyKHtcbiAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgIC8vIGNvbnZlcnQgaW1tdXRhYmxlLmpzIG9iamVjdHMgdG8gSlMgZm9yIGxvZ2dpbmcgKGNvZGUgY29waWVkIGZyb21cbiAgICAgIC8vIHJlZHV4LWxvZ2dlciByZWFkbWUpXG4gICAgICBzdGF0ZVRyYW5zZm9ybWVyOiBzdGF0ZSA9PiB7XG4gICAgICAgIGxldCBuZXdTdGF0ZSA9IHt9O1xuXG4gICAgICAgIGZvciAodmFyIGkgb2YgT2JqZWN0LmtleXMoc3RhdGUpKSB7XG4gICAgICAgICAgaWYgKEltbXV0YWJsZS5JdGVyYWJsZS5pc0l0ZXJhYmxlKHN0YXRlW2ldKSkge1xuICAgICAgICAgICAgbmV3U3RhdGVbaV0gPSBzdGF0ZVtpXS50b0pTKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ld1N0YXRlW2ldID0gc3RhdGVbaV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5ld1N0YXRlO1xuICAgICAgfSxcbiAgICB9KTtcblxuICAgIHJldHVybiBjb25maWd1cmVTdG9yZSh7XG4gICAgICByZWR1Y2VyOiByZWR1Y2VyLFxuICAgICAgcHJlbG9hZGVkU3RhdGU6IGluaXRpYWxTdGF0ZSxcbiAgICAgIG1pZGRsZXdhcmU6IGdldERlZmF1bHRNaWRkbGV3YXJlID0+XG4gICAgICAgIC8vIHRoZSBkZWZhdWx0IG1pZGRsZXdhcmUgaW5jbHVkZXMgcmVkdXggdGh1bmssIGltbXV0YWJpbGl0eSBjaGVjayxcbiAgICAgICAgLy8gYW5kIHNlcmlhbGl6YWJpbGl0eSBjaGVjay4gU29tZSBvZiBvdXIgc3RvcmUgZG9lcyBub3QgcGFzcyB0aGVzZSBjaGVja3MsXG4gICAgICAgIC8vIHNvIHdlIGFyZSBpZ25vcmluZyB0aGVtIGZvciBub3cuIFdlIG9ubHkgZW5hYmxlIHRoaXMgaW4gZGV2IG1vZGVcbiAgICAgICAgLy8gYmVjYXVzZSBpdCBjYXVzZXMgY29uc29sZSBlcnJvcnMgaWYgc29tZXRoaW5nIGZhaWxzIHRoZSBjaGVjaywgYW5kXG4gICAgICAgIC8vIGNhbiBwb3RlbnRpYWxseSBjYXVzZSBhIHBhZ2UgY3Jhc2ggKGluIHRoZSBjYXNlIG9mIHRoZSBKUyBJbnRlcnByZXRlciBhbmQgdGhlXG4gICAgICAgIC8vIGltbXV0YWJpbGl0eSBjaGVjaykuXG4gICAgICAgIGdldERlZmF1bHRNaWRkbGV3YXJlKHtcbiAgICAgICAgICBpbW11dGFibGVDaGVjazoge1xuICAgICAgICAgICAgaWdub3JlZFBhdGhzOiBbJ2pzSW50ZXJwcmV0ZXInLCAnanNkZWJ1Z2dlciddLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgc2VyaWFsaXphYmxlQ2hlY2s6IHtcbiAgICAgICAgICAgIGlnbm9yZWRBY3Rpb25QYXRoczogW1xuICAgICAgICAgICAgICAnYmxvYicsXG4gICAgICAgICAgICAgICdqc2RlYnVnZ2VyJyxcbiAgICAgICAgICAgICAgJ29ic2VydmVyJyxcbiAgICAgICAgICAgICAgJ2pzSW50ZXJwcmV0ZXInLFxuICAgICAgICAgICAgICAncnVuQXBwJyxcbiAgICAgICAgICAgICAgJ3Byb3BzLnNob3dOZXh0SGludCcsXG4gICAgICAgICAgICAgICdwcm9wcy5hc3NldFVybCcsXG4gICAgICAgICAgICAgICdwcm9wcy5leHBvcnRBcHAnLFxuICAgICAgICAgICAgICAncGF5bG9hZC5nZXRDaGFuZ2VzJyxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBpZ25vcmVkUGF0aHM6IFtcbiAgICAgICAgICAgICAgJ2hpZGRlbkxlc3NvbicsXG4gICAgICAgICAgICAgICdibG9iJyxcbiAgICAgICAgICAgICAgJ3BhZ2VDb25zdGFudHMnLFxuICAgICAgICAgICAgICAnb2JzZXJ2ZXInLFxuICAgICAgICAgICAgICAnd2F0Y2hlZEV4cHJlc3Npb25zJyxcbiAgICAgICAgICAgICAgJ2luc3RydWN0aW9ucycsXG4gICAgICAgICAgICAgICdydW5BcHAnLFxuICAgICAgICAgICAgICAnanNkZWJ1Z2dlcicsXG4gICAgICAgICAgICAgIC9hbmltYXRpb25MaXN0XFwucHJvcHNCeUtleS4qXFwuYmxvYi8sXG4gICAgICAgICAgICAgICdtYWtlcicsXG4gICAgICAgICAgICAgICdkYXRhJyxcbiAgICAgICAgICAgICAgJ3NjcmVlbnMnLFxuICAgICAgICAgICAgICAnaGVhZGVyLmdldExldmVsQnVpbGRlckNoYW5nZXMnLFxuICAgICAgICAgICAgICAnZ2V0Q2hhbmdlcycsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pLmNvbmNhdChyZWR1eExvZ2dlciksXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gY29uZmlndXJlU3RvcmUoe1xuICAgIHJlZHVjZXI6IHJlZHVjZXIsXG4gICAgcHJlbG9hZGVkU3RhdGU6IGluaXRpYWxTdGF0ZSxcbiAgICBtaWRkbGV3YXJlOiBbcmVkdXhUaHVua10sXG4gICAgZGV2VG9vbHM6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnLCAvLyBvbmx5IGVuYWJsZSBkZXZUb29scyBpbiBkZXZlbG9wbWVudFxuICB9KTtcbn1cbiIsImltcG9ydCBjb29raWVzIGZyb20gJ2pzLWNvb2tpZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7dXNlU3RhdGV9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHtpc0VtYWlsfSBmcm9tICdAY2RvL2FwcHMvdXRpbC9mb3JtYXRWYWxpZGF0aW9uJztcbmltcG9ydCBpMThuIGZyb20gJ0BjZG8vbG9jYWxlJztcbmltcG9ydCBoZWFkZXJUaGFua3NJbWFnZSBmcm9tICdAY2RvL3N0YXRpYy9jb21tb25faW1hZ2VzL3Blbmd1aW4vZGFuY2luZy5wbmcnO1xuaW1wb3J0IGhlYWRlckltYWdlIGZyb20gJ0BjZG8vc3RhdGljL2NvbW1vbl9pbWFnZXMvcGVuZ3Vpbi95ZWxsaW5nLnBuZyc7XG5cbmltcG9ydCB7Z2V0U3RvcmV9IGZyb20gJy4uLy4uL3JlZHV4JztcbmltcG9ydCAqIGFzIGNvbG9yIGZyb20gJy4uLy4uL3V0aWwvY29sb3InO1xuaW1wb3J0IHtoYXNoU3RyaW5nfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL0J1dHRvbic7XG5cbi8qKlxuICogVGhpcyBwYW5lbCByZXByZXNlbnRzIHRoZSBwYWdlIHRoYXQgaXMgZGlzcGxheWVkIHRvIGFjY291bnRzIHRoYXQgYXJlIGJlaW5nXG4gKiBsb2NrZWQgZnJvbSBhY2Nlc3NpbmcgY2VydGFpbiBwYXJ0cyBvZiB0aGUgc2l0ZSB1bnRpbCB0aGV5IGdldCBwYXJlbnRhbFxuICogcGVybWlzc2lvbi4gVGhpcyBwYW5lbCBnaXZlcyBhIGZvcm0gdG8gcmVxdWVzdCAob3Igc2VlIGRldGFpbHMgYWJvdXQgYVxuICogcGVuZGluZyByZXF1ZXN0IGZvcikgcGFyZW50YWwgcGVybWlzc2lvbi5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9ja291dFBhbmVsKHByb3BzKSB7XG4gIC8vIERldGVybWluZSBpZiB3ZSB0aGluayB0aGUgZ2l2ZW4gZW1haWwgbWF0Y2hlcyB0aGUgY2hpbGQgZW1haWxcbiAgY29uc3QgaXNFbWFpbERpc2FsbG93ZWQgPSBlbWFpbCA9PiB7XG4gICAgcmV0dXJuIHByb3BzLmRpc2FsbG93ZWRFbWFpbCA9PT0gaGFzaFN0cmluZyhlbWFpbCk7XG4gIH07XG5cbiAgLy8gRGV0ZXJtaW5lIGlmIHRoZSBlbWFpbCBpcyBhbGxvd2VkXG4gIGNvbnN0IHZhbGlkYXRlRW1haWwgPSBlbWFpbCA9PiB7XG4gICAgcmV0dXJuIGlzRW1haWwoZW1haWwpICYmICFpc0VtYWlsRGlzYWxsb3dlZChlbWFpbCk7XG4gIH07XG5cbiAgLy8gU2V0IHRoZSBkaXNhYmxlZCBzdGF0ZSBvZiB0aGUgc3VibWl0IGJ1dHRvbiBiYXNlZCBvbiB0aGUgdmFsaWRpdHkgb2YgdGhlXG4gIC8vIGVtYWlsIGluIHRoZSBmaWVsZC5cbiAgY29uc3QgW2Rpc2FibGVkLCBzZXREaXNhYmxlZF0gPSB1c2VTdGF0ZShcbiAgICAoKSA9PiAhdmFsaWRhdGVFbWFpbChwcm9wcy5wZW5kaW5nRW1haWwpXG4gICk7XG5cbiAgLy8gV2hlbiB0aGUgZW1haWwgZmllbGQgaXMgdXBkYXRlZCwgYWxzbyB1cGRhdGUgdGhlIGRpc2FiaWxpdHkgc3RhdGUgb2YgdGhlXG4gIC8vIHN1Ym1pdCBidXR0b24uXG4gIGNvbnN0IG9uRW1haWxVcGRhdGUgPSBldmVudCA9PiB7XG4gICAgc2V0RGlzYWJsZWQoIXZhbGlkYXRlRW1haWwoZXZlbnQudGFyZ2V0LnZhbHVlKSk7XG4gIH07XG5cbiAgLy8gVGhpcyB3aWxsIHNldCB0aGUgZW1haWwgdG8gdGhlIGN1cnJlbnQgcGVuZGluZyBlbWFpbCBhbmQgZmlyZSBvZmYgdGhlXG4gIC8vIGZvcm0gYXMgdGhvdWdoIHRoZXkgaGFkIHR5cGVkIGluIHRoZSBzYW1lIGVtYWlsIGFnYWluLlxuICBjb25zdCByZXNlbmRQZXJtaXNzaW9uRW1haWwgPSBldmVudCA9PiB7XG4gICAgY29uc3QgZmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFyZW50LWVtYWlsJyk7XG4gICAgZmllbGQudmFsdWUgPSBwcm9wcy5wZW5kaW5nRW1haWw7XG5cbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvY2tvdXQtcGFuZWwtZm9ybScpO1xuICAgIGZvcm0uc3VibWl0KCk7XG4gIH07XG5cbiAgY29uc3Qgc2lnbk91dCA9IGV2ZW50ID0+IHtcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICd1c2Vycy9zaWduX291dCc7XG4gIH07XG5cbiAgLy8gR2V0IHRoZSBjdXJyZW50IGxvY2FsZS5cbiAgY29uc3QgbG9jYWxlID0gY29va2llcy5nZXQoJ2xhbmd1YWdlXycpIHx8ICdlbi1VUyc7XG5cbiAgLy8gV2hldGhlciBvciBub3Qgd2UgYXJlIHJlbmRlcmluZyByaWdodC10by1sZWZ0LlxuICBjb25zdCBpc1JUTCA9IGdldFN0b3JlKCkuZ2V0U3RhdGUoKT8uaXNSdGw7XG5cbiAgLy8gSG93IHRvIGZvcm1hdCBhbnkgbG9jYWxpemVkIGRhdGVzIG9uIHRoZSBwYWdlLlxuICBjb25zdCBkYXRlT3B0aW9ucyA9IHtcbiAgICB5ZWFyOiAnbnVtZXJpYycsXG4gICAgbW9udGg6ICdsb25nJyxcbiAgICBkYXk6ICdudW1lcmljJyxcbiAgfTtcblxuICAvLyBXZSB3YW50IHRvIG1hcmsgdGhlIGVtYWlsIGluIHRoZSBwcm9tcHQgaW4gYm9sZCwgc28gd2Ugc3BsaXQgdGhlXG4gIC8vIGxvY2FsaXplZCBzdHJpbmcuIEl0IGlzIGEgc2xpZ2h0IGhhY2sgc2luY2Ugd2UgY2Fubm90IGp1c3QgZW1iZWQgUmVhY3RcbiAgLy8gY29tcG9uZW50IGNvZGUgaW50byBhIHN0cmluZy4gU2hvdWxkIHdvcmsgYXMgdGhvdWdoIHdlIGNvdWxkIHRob3VnaC5cbiAgY29uc3QgcGVuZGluZ1Byb21wdCA9IGkxOG4uc2Vzc2lvbkxvY2tvdXRQZW5kaW5nUHJvbXB0KHtcbiAgICBwZW5kaW5nRW1haWw6ICd7cGVuZGluZ0VtYWlsfScsXG4gIH0pO1xuICBjb25zdCBwZW5kaW5nUHJvbXB0UGFydHMgPSBwZW5kaW5nUHJvbXB0LnNwbGl0KCd7cGVuZGluZ0VtYWlsfScpO1xuXG4gIGNvbnN0IHRva2VuRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT1cImNzcmYtdG9rZW5cIl0nKTtcbiAgbGV0IGNzcmZUb2tlbiA9ICcnO1xuICBpZiAodG9rZW5FbGVtZW50KSB7XG4gICAgY3NyZlRva2VuID0gdG9rZW5FbGVtZW50LmF0dHJpYnV0ZXNbJ2NvbnRlbnQnXS52YWx1ZTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0gY2xhc3NOYW1lPVwibG9ja291dC1wYW5lbFwiPlxuICAgICAgey8qIEhlYWRlciBpbWFnZTogRGVwZW5kcyBvZiBpZiBwZXJtaXNzaW9uIHJlcXVlc3QgaXMgc2VudC4gKi99XG4gICAgICA8aW1nXG4gICAgICAgIHN0eWxlPXtzdHlsZXMuaW1hZ2V9XG4gICAgICAgIHNyYz17cHJvcHMucGVuZGluZ0VtYWlsID8gaGVhZGVyVGhhbmtzSW1hZ2UgOiBoZWFkZXJJbWFnZX1cbiAgICAgICAgYWx0PXtcbiAgICAgICAgICBwcm9wcy5wZW5kaW5nRW1haWxcbiAgICAgICAgICAgID8gaTE4bi5zZXNzaW9uTG9ja291dEhlYWRlclRoYW5rc0Rlc2NyaXB0aW9uKClcbiAgICAgICAgICAgIDogaTE4bi5zZXNzaW9uTG9ja291dEhlYWRlckRlc2NyaXB0aW9uKClcbiAgICAgICAgfVxuICAgICAgLz5cblxuICAgICAgPGgyPlxuICAgICAgICB7cHJvcHMucGVuZGluZ0VtYWlsXG4gICAgICAgICAgPyBpMThuLnNlc3Npb25Mb2Nrb3V0UGVuZGluZ0hlYWRlcigpXG4gICAgICAgICAgOiBwcm9wcy5pc1ByZUxvY2tvdXRVc2VyXG4gICAgICAgICAgPyBpMThuLnNlc3Npb25Mb2Nrb3V0TmV3UHJlTG9ja291dEFjY291bnRIZWFkZXIoKVxuICAgICAgICAgIDogaTE4bi5zZXNzaW9uTG9ja291dE5ld0FjY291bnRIZWFkZXIoKX1cbiAgICAgIDwvaDI+XG5cbiAgICAgIHsvKiBUaGlzIGZvcm0gd2lsbCBwb3N0IGEgcGVybWlzc2lvbiByZXF1ZXN0IGZvciB0aGUgc3R1ZGVudC4qL31cbiAgICAgIDxmb3JtIGlkPVwibG9ja291dC1wYW5lbC1mb3JtXCIgYWN0aW9uPXtwcm9wcy5hcGlVUkx9IG1ldGhvZD1cInBvc3RcIj5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiB2YWx1ZT17Y3NyZlRva2VufSBuYW1lPVwiYXV0aGVudGljaXR5X3Rva2VuXCIgLz5cbiAgICAgICAgey8qIFRoZSB0b3AgcHJvbXB0LCB3aGljaCBkZXBlbmRzIG9uIHdoZXRoZXIgb3Igbm90IGEgcmVxdWVzdCBpcyBwZW5kaW5nLiAqL31cbiAgICAgICAge3Byb3BzLnBlbmRpbmdFbWFpbCAmJiAoXG4gICAgICAgICAgPHA+XG4gICAgICAgICAgICB7cGVuZGluZ1Byb21wdFBhcnRzWzBdfVxuICAgICAgICAgICAgPHN0cm9uZz57cHJvcHMucGVuZGluZ0VtYWlsfTwvc3Ryb25nPlxuICAgICAgICAgICAge3BlbmRpbmdQcm9tcHRQYXJ0c1sxXX1cbiAgICAgICAgICA8L3A+XG4gICAgICAgICl9XG4gICAgICAgIHshcHJvcHMucGVuZGluZ0VtYWlsICYmIChcbiAgICAgICAgICA8cD5cbiAgICAgICAgICAgIHtwcm9wcy5pc1ByZUxvY2tvdXRVc2VyXG4gICAgICAgICAgICAgID8gaTE4bi5zZXNzaW9uTG9ja291dFByZUxvY2tvdXRBY2NvdW50UHJvbXB0KClcbiAgICAgICAgICAgICAgOiBpMThuLnNlc3Npb25Mb2Nrb3V0UHJvbXB0KCl9XG4gICAgICAgICAgPC9wPlxuICAgICAgICApfVxuXG4gICAgICAgIHsvKiBUaGUgdGltZXpvbmUgaXMgc2V0IHRvIFVUQyB0byBlbnN1cmUgdGhhdCB0aGUgZXhhY3QgZGF0ZSByZW5kZXJzLiAqL31cbiAgICAgICAgPHA+XG4gICAgICAgICAge2kxOG4uc2Vzc2lvbkxvY2tvdXROb3RlKHtcbiAgICAgICAgICAgIGRlbGV0ZURhdGU6IHByb3BzLmRlbGV0ZURhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKGxvY2FsZSwge1xuICAgICAgICAgICAgICAuLi5kYXRlT3B0aW9ucyxcbiAgICAgICAgICAgICAgdGltZVpvbmU6ICdVVEMnLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgfSl9XG4gICAgICAgIDwvcD5cblxuICAgICAgICB7LyogVGhpcyBmaWVsZCBzaG93cyB0aGUgY3VycmVudCBzdGF0dXMgb2YgdGhlIHZhbGlkYXRpb24uICovfVxuICAgICAgICB7LyogUGFyZW50IFBlcm1pc3Npb246IE5vdCBQZW5kaW5nIC8gUGVuZGluZyAqL31cbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLnN0YXR1c1NlY3Rpb259PlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgc3R5bGU9e2lzUlRMID8gc3R5bGVzLnN0YXR1c0xhYmVsUlRMIDogc3R5bGVzLnN0YXR1c0xhYmVsfVxuICAgICAgICAgICAgICBodG1sRm9yPVwicGVybWlzc2lvbi1zdGF0dXNcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8c3Ryb25nPntpMThuLnNlc3Npb25Mb2Nrb3V0UGFyZW50U3RhdHVzRmllbGQoKX08L3N0cm9uZz5cbiAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICBpZD1cInBlcm1pc3Npb24tc3RhdHVzXCJcbiAgICAgICAgICAgICAgc3R5bGU9e3Byb3BzLnBlbmRpbmdFbWFpbCA/IHN0eWxlcy5wZW5kaW5nIDogc3R5bGVzLm5vdFN1Ym1pdHRlZH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHN0cm9uZz5cbiAgICAgICAgICAgICAgICB7cHJvcHMucGVuZGluZ0VtYWlsXG4gICAgICAgICAgICAgICAgICA/IGkxOG4uc2Vzc2lvbkxvY2tvdXRTdGF0dXNQZW5kaW5nKClcbiAgICAgICAgICAgICAgICAgIDogaTE4bi5zZXNzaW9uTG9ja291dFN0YXR1c05vdFN1Ym1pdHRlZCgpfVxuICAgICAgICAgICAgICA8L3N0cm9uZz5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIHsvKiBUaGlzIGlzIGEgZmxvYXRpbmcgJ2xpbmsnIHRoYXQgcmVzZW5kcyB0aGUgcGVuZGluZyBlbWFpbC4gKi99XG4gICAgICAgICAge3Byb3BzLnBlbmRpbmdFbWFpbCAmJiAoXG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIGlkPVwibG9ja291dC1yZXNlbmRcIlxuICAgICAgICAgICAgICBzdHlsZUFzVGV4dD17dHJ1ZX1cbiAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5yZXNlbmRMaW5rfVxuICAgICAgICAgICAgICB0ZXh0PXtpMThuLnNlc3Npb25Mb2Nrb3V0UmVzZW5kRW1haWwoKX1cbiAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3Jlc2VuZFBlcm1pc3Npb25FbWFpbH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgey8qIFRoaXMgZmllbGQgYWxsb3dzIHRoZSBpbnB1dCBvZiBhbiBlbWFpbCBhZGRyZXNzLiAqL31cbiAgICAgICAgey8qIFBhcmVudCBFbWFpbDogW2VtYWlsXSAqL31cbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLnNlY3Rpb25zfT5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuc2VjdGlvbn0+XG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgc3R5bGU9e2lzUlRMID8gc3R5bGVzLmxhYmVsUlRMIDogc3R5bGVzLmxhYmVsfVxuICAgICAgICAgICAgICBodG1sRm9yPVwicGFyZW50LWVtYWlsXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHN0cm9uZz57aTE4bi5zZXNzaW9uTG9ja291dFBhcmVudEVtYWlsRmllbGQoKX08L3N0cm9uZz5cbiAgICAgICAgICAgIDwvbGFiZWw+XG5cbiAgICAgICAgICAgIHsvKiBTbGlnaHRseSBjb21wbGljYXRlZCBsYXlvdXQgYWxsb3dzIGZvciB0ZXh0IHVuZGVybmVhdGguICovfVxuICAgICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmZpZWxkU2VjdGlvbn0+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuZmllbGR9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e29uRW1haWxVcGRhdGV9XG4gICAgICAgICAgICAgICAgb25JbnB1dD17b25FbWFpbFVwZGF0ZX1cbiAgICAgICAgICAgICAgICBvbkJsdXI9e29uRW1haWxVcGRhdGV9XG4gICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXtwcm9wcy5wZW5kaW5nRW1haWx9XG4gICAgICAgICAgICAgICAgbmFtZT1cInBhcmVudC1lbWFpbFwiXG4gICAgICAgICAgICAgICAgaWQ9XCJwYXJlbnQtZW1haWxcIlxuICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgIHsvKiBTaG93IGEgJ0xhc3QgZW1haWwgc2VudCcgcHJvbXB0IHdoZW4gYXZhaWxhYmxlLiAqL31cbiAgICAgICAgICAgICAge3Byb3BzLnBlbmRpbmdFbWFpbCAmJiAoXG4gICAgICAgICAgICAgICAgPHAgc3R5bGU9e3N0eWxlcy5sYXN0RW1haWx9PlxuICAgICAgICAgICAgICAgICAgPGVtIGlkPVwibG9ja291dC1sYXN0LWVtYWlsLWRhdGVcIj5cbiAgICAgICAgICAgICAgICAgICAge2kxOG4uc2Vzc2lvbkxvY2tvdXRMYXN0RW1haWxTZW50KCkgKyAnICd9XG4gICAgICAgICAgICAgICAgICAgIHtwcm9wcy5yZXF1ZXN0RGF0ZS50b0xvY2FsZURhdGVTdHJpbmcobG9jYWxlLCB7XG4gICAgICAgICAgICAgICAgICAgICAgLi4uZGF0ZU9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgaG91cjogJ251bWVyaWMnLFxuICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZTogJ251bWVyaWMnLFxuICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAgIDwvZW0+XG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5idXR0b25zfT5cbiAgICAgICAgICB7LyogQSBzaWduLW91dCBidXR0b24uICovfVxuICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgIGlkPVwibG9ja291dC1zaWdub3V0XCJcbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5idXR0b259XG4gICAgICAgICAgICB0ZXh0PXtpMThuLnNpZ25PdXRCdXR0b24oKX1cbiAgICAgICAgICAgIGNvbG9yPXtCdXR0b24uQnV0dG9uQ29sb3IuZ3JheX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e3NpZ25PdXR9XG4gICAgICAgICAgLz5cblxuICAgICAgICAgIHsvKiBUaGUgc3VibWl0IGJ1dHRvbi4gKi99XG4gICAgICAgICAgey8qIEFuIGVtcHR5IG9uQ2xpY2sgd2lsbCBzdGlsbCBzdWJtaXQgdGhlIGZvcm0uICovfVxuICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgIGlkPVwibG9ja291dC1zdWJtaXRcIlxuICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICBzdHlsZT17c3R5bGVzLmJ1dHRvbn1cbiAgICAgICAgICAgIHRleHQ9e1xuICAgICAgICAgICAgICBwcm9wcy5wZW5kaW5nRW1haWxcbiAgICAgICAgICAgICAgICA/IGkxOG4uc2Vzc2lvbkxvY2tvdXRVcGRhdGVTdWJtaXQoKVxuICAgICAgICAgICAgICAgIDogaTE4bi5zZXNzaW9uTG9ja291dFN1Ym1pdCgpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7fX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZm9ybT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuTG9ja291dFBhbmVsLnByb3BUeXBlcyA9IHtcbiAgYXBpVVJMOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGRlbGV0ZURhdGU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLmlzUmVxdWlyZWQsXG4gIHBlbmRpbmdFbWFpbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmVxdWVzdERhdGU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBkaXNhbGxvd2VkRW1haWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgaXNQcmVMb2Nrb3V0VXNlcjogUHJvcFR5cGVzLmJvb2wsXG59O1xuXG5Mb2Nrb3V0UGFuZWwuZGVmYXVsdFByb3BzID0ge1xuICBpc1ByZUxvY2tvdXRVc2VyOiBmYWxzZSxcbn07XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgY29udGFpbmVyOiB7XG4gICAgYm9yZGVyOiAnMXB4IHNvbGlkIHJnYigyMzMgMjMzIDIzMyknLFxuICAgIGJveFNoYWRvdzogJzVweCA1cHggM3B4IDBweCAjY2NjJyxcbiAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICBtYXJnaW5MZWZ0OiAnYXV0bycsXG4gICAgbWFyZ2luUmlnaHQ6ICdhdXRvJyxcbiAgICBtYXJnaW5Ub3A6IDEwLFxuICAgIG1heFdpZHRoOiA3MDAsXG4gICAgcGFkZGluZzogMjAsXG4gICAgcGFkZGluZ0JvdHRvbTogMCxcbiAgfSxcbiAgc2VjdGlvbnM6IHtcbiAgICBtYXJnaW5Cb3R0b206IDI1LFxuICB9LFxuICBzdGF0dXNTZWN0aW9uOiB7XG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgbWFyZ2luQm90dG9tOiAyMCxcbiAgICBtYXJnaW5Ub3A6IDIwLFxuICB9LFxuICBzZWN0aW9uOiB7XG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gIH0sXG4gIG5vdFN1Ym1pdHRlZDoge1xuICAgIGNvbG9yOiBjb2xvci5yZWQsXG4gIH0sXG4gIHBlbmRpbmc6IHtcbiAgICBjb2xvcjogY29sb3Iub3JhbmdlLFxuICB9LFxuICBzdGF0dXNMYWJlbDoge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIG1hcmdpblJpZ2h0OiAxNSxcbiAgfSxcbiAgc3RhdHVzTGFiZWxSVEw6IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBtYXJnaW5MZWZ0OiAxNSxcbiAgfSxcbiAgcmVzZW5kTGluazoge1xuICAgIGZvbnRTaXplOiAnaW5oZXJpdCcsXG4gICAgdGV4dERlY29yYXRpb246ICd1bmRlcmxpbmUnLFxuICB9LFxuICBsYWJlbDoge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIGZsZXg6ICcwIDAgYXV0bycsXG4gICAgbWFyZ2luUmlnaHQ6IDE1LFxuICAgIG1hcmdpblRvcDogNixcbiAgfSxcbiAgbGFiZWxSVEw6IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBmbGV4OiAnMCAwIGF1dG8nLFxuICAgIG1hcmdpbkxlZnQ6IDE1LFxuICAgIG1hcmdpblRvcDogNixcbiAgfSxcbiAgZmllbGQ6IHtcbiAgICBjb2xvcjogJyMyOTJGMzYnLFxuICAgIGJvcmRlcjogJzFweCBzb2xpZCAjQzZDQUNEJyxcbiAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgcGFkZGluZzogNixcbiAgICB3aWR0aDogJzEwMCUnLFxuICB9LFxuICBmaWVsZFNlY3Rpb246IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBmbGV4OiAnMSAwIGF1dG8nLFxuICB9LFxuICBsYXN0RW1haWw6IHtcbiAgICBjb2xvcjogJyM0RDU3NUYnLFxuICAgIGZvbnRTaXplOiAnODUlJyxcbiAgICBtYXJnaW5MZWZ0OiA1LFxuICB9LFxuICBpbWFnZToge1xuICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgbWFyZ2luTGVmdDogJ2F1dG8nLFxuICAgIG1hcmdpblJpZ2h0OiAnYXV0bycsXG4gICAgd2lkdGg6IDExNixcbiAgfSxcbiAgYnV0dG9uczoge1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICB9LFxuICBidXR0b246IHtcbiAgICBtYXJnaW46IDAsXG4gICAgbWFyZ2luVG9wOiA1LFxuICB9LFxufTtcbiIsIi8qIGVzbGludC1kaXNhYmxlICovXG5cbi8vIGFwcHMvc3JjL3V0aWwvY29sb3IuanNcbi8vIEdFTkVSQVRFRCBGSUxFOiBETyBOT1QgTU9ESUZZIERJUkVDVExZXG4vLyBUaGlzIGdlbmVyYXRlZCBmaWxlIGV4cG9ydHMgYWxsIHZhcmlhYmxlcyBkZWZpbmVkIGluIHNoYXJlZC9jc3MvY29sb3Iuc2Nzc1xuLy8gZm9yIHVzZSBpbiBKYXZhU2NyaXB0LiBUaGUgZ2VuZXJhdG9yIHNjcmlwdCBpcyBjb252ZXJ0LXNjc3MtdmFyaWFibGVzLmpzXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJibGFja1wiOiBcIiMwMDBcIixcbiAgXCJiYWNrZ3JvdW5kX2JsYWNrXCI6IFwiIzEyMTQxNlwiLFxuICBcImRhcmtfZ3JheVwiOiBcIiMyRDMxMzlcIixcbiAgXCJkYXJrZXN0X2dyYXlcIjogXCIjMjkyRjM2XCIsXG4gIFwiZGFya19zbGF0ZV9ncmF5XCI6IFwiIzI4MmMzNFwiLFxuICBcImRhcmtlc3Rfc2xhdGVfZ3JheVwiOiBcIiMyNTI5MmRcIixcbiAgXCJkYXJrX2NoYXJjb2FsXCI6IFwiIzRkNTc1ZlwiLFxuICBcImNoYXJjb2FsXCI6IFwiIzViNjc3MFwiLFxuICBcImxpZ2h0X2dyYXlcIjogXCIjOTQ5Y2EyXCIsXG4gIFwibGlnaHRlcl9ncmF5XCI6IFwiI2M2Y2FjZFwiLFxuICBcImxpZ2h0ZXN0X2dyYXlcIjogXCIjZTdlOGVhXCIsXG4gIFwiYmFja2dyb3VuZF9ncmF5XCI6IFwiI2YyZjJmMlwiLFxuICBcImRpbWdyYXlcIjogXCIjNjk2OTY5XCIsXG4gIFwid2hpdGVcIjogXCIjZmZmXCIsXG4gIFwiZGVmYXVsdF9ibHVlXCI6IFwiIzM2NzBiM1wiLFxuICBcImRhcmtfdGVhbFwiOiBcIiMwMDk0YTNcIixcbiAgXCJ0ZWFsXCI6IFwiIzAwOTNhNFwiLFxuICBcImFwcGxhYl9idXR0b25fdGVhbFwiOiBcIiMxYWJjOWNcIixcbiAgXCJsaWdodF90ZWFsXCI6IFwiIzU5Y2FkM1wiLFxuICBcImxpZ2h0aXNoX3RlYWxcIjogXCIjODBkNmRlXCIsXG4gIFwibGlnaHRlcl90ZWFsXCI6IFwiI2E2ZTNlOFwiLFxuICBcImxpZ2h0ZXN0X3RlYWxcIjogXCIjZDlmM2Y1XCIsXG4gIFwiYWlfcnVicmljX2N5YW5cIjogXCIjM2NmZmY4XCIsXG4gIFwicHVycGxlXCI6IFwiIzhjNTJiYVwiLFxuICBcImxpZ2h0X3B1cnBsZVwiOiBcIiNhNjliYzFcIixcbiAgXCJsaWdodGVyX3B1cnBsZVwiOiBcIiNjZmM5ZGVcIixcbiAgXCJsaWdodGVzdF9wdXJwbGVcIjogXCIjZWJlOGYxXCIsXG4gIFwiY3lhblwiOiBcIiMwMDk0Y2FcIixcbiAgXCJsaWdodF9jeWFuXCI6IFwiIzU5YjlkY1wiLFxuICBcImxpZ2h0ZXJfY3lhblwiOiBcIiNhNmRhZWRcIixcbiAgXCJsaWdodGVzdF9jeWFuXCI6IFwiI2Q5ZWZmN1wiLFxuICBcImFsbW9zdF93aGl0ZV9jeWFuXCI6IFwiI2Y1ZmNmZlwiLFxuICBcIm9yYW5nZVwiOiBcIiNmZmE0MDBcIixcbiAgXCJsaWdodF9vcmFuZ2VcIjogXCIjZmZjNDU5XCIsXG4gIFwibGlnaHRlcl9vcmFuZ2VcIjogXCIjZmZlMGE2XCIsXG4gIFwibGlnaHRlc3Rfb3JhbmdlXCI6IFwiI2ZmZjJkOVwiLFxuICBcImRhcmtfb3JhbmdlXCI6IFwiI2ZmODYwMFwiLFxuICBcImdyZWVuXCI6IFwiI2I5YmYxNVwiLFxuICBcImxpZ2h0X2dyZWVuXCI6IFwiI2QxZDU2N1wiLFxuICBcImxpZ2h0ZXJfZ3JlZW5cIjogXCIjZTdlOWFkXCIsXG4gIFwibGlnaHRlc3RfZ3JlZW5cIjogXCIjZjVmNWRjXCIsXG4gIFwiaGlnaGxpZ2h0X2dyZWVuXCI6IFwiIzhhZmM5YlwiLFxuICBcInllbGxvd1wiOiBcIiNmZmI4MWRcIixcbiAgXCJsaWdodF95ZWxsb3dcIjogXCIjZmZkYjc0XCIsXG4gIFwibGlnaHRlcl95ZWxsb3dcIjogXCIjZmZlYmI1XCIsXG4gIFwibGlnaHRlc3RfeWVsbG93XCI6IFwiI2ZmZjdkZlwiLFxuICBcImdvbGRlbnJvZFwiOiBcIiNkYWE1MjBcIixcbiAgXCJoZWFkZXJfdGV4dFwiOiBcIiNmZmZcIixcbiAgXCJia2duZF9jb2xvclwiOiBcIiMwMDkzYTRcIixcbiAgXCJpbnNldF9jb2xvclwiOiBcIiNjNmNhY2RcIixcbiAgXCJkYXJrX2NvbG9yXCI6IFwiIzhjNTJiYVwiLFxuICBcImhkcl9jb2xvclwiOiBcIiM4YzUyYmFcIixcbiAgXCJyZWRcIjogXCIjYzAwXCIsXG4gIFwibGlnaHRlc3RfcmVkXCI6IFwiI2ZjY1wiLFxuICBcImRhcmtfcmVkXCI6IFwiI2Q2MjkxMVwiLFxuICBcInJlYWxncmVlblwiOiBcIiMwMDgwMDBcIixcbiAgXCJyZWFseWVsbG93XCI6IFwiI2ZmMFwiLFxuICBcIm11c3RhcmR5ZWxsb3dcIjogXCIjZWZjZDFjXCIsXG4gIFwidHdpdHRlcl9ibHVlXCI6IFwiIzAwYWNlZFwiLFxuICBcImZhY2Vib29rX2JsdWVcIjogXCIjM2I1OTk4XCIsXG4gIFwibGlua2VkaW5fYmx1ZVwiOiBcIiMwMDc3QjVcIixcbiAgXCJkYXJrX2JsdWVcIjogXCIjMDA2NDdmXCIsXG4gIFwiYmxvY2tseV9mbHlvdXRfZ3JheVwiOiBcIiNkZGRcIixcbiAgXCJkZWZhdWx0X3RleHRcIjogXCIjMzMzXCIsXG4gIFwiYm9yZGVyX2dyYXlcIjogXCIjYmJiXCIsXG4gIFwiYm9yZGVyX2xpZ2h0X2dyYXlcIjogXCIjZDhkOGQ4XCIsXG4gIFwidGFibGVfaGVhZGVyXCI6IFwiI2VjZWNlY1wiLFxuICBcInRhYmxlX2xpZ2h0X3Jvd1wiOiBcIiNmY2ZjZmNcIixcbiAgXCJ0YWJsZV9kYXJrX3Jvd1wiOiBcIiNmNGY0ZjRcIixcbiAgXCJsZXZlbF9zdWJtaXR0ZWRcIjogXCIjOGM1MmJhXCIsXG4gIFwibGV2ZWxfcGVyZmVjdFwiOiBcInJnYigxNCwgMTkwLCAxNClcIixcbiAgXCJsZXZlbF9wYXNzZWRcIjogXCJyZ2IoMTU5LCAyMTIsIDE1OSlcIixcbiAgXCJsZXZlbF9hdHRlbXB0ZWRcIjogXCIjZmYwXCIsXG4gIFwibGV2ZWxfbm90X3RyaWVkXCI6IFwiI2ZlZmVmZVwiLFxuICBcImxldmVsX2N1cnJlbnRcIjogXCIjZmZhNDAwXCIsXG4gIFwibGV2ZWxfcmV2aWV3X3JlamVjdGVkXCI6IFwiI2MwMFwiLFxuICBcImxldmVsX3Jldmlld19hY2NlcHRlZFwiOiBcInJnYigxMSwgMTQyLCAxMSlcIixcbiAgXCJhc3Nlc3NtZW50XCI6IFwiIzAwOTRjYVwiLFxuICBcIndvcmtzcGFjZV9ydW5uaW5nX2JhY2tncm91bmRcIjogXCIjZTVlNWU1XCIsXG4gIFwiZGFya19wdXJwbGVcIjogXCIjNjgyQTc3XCIsXG4gIFwiYnJpZ2h0X2dyZWVuXCI6IFwiIzBlYmUwZVwiLFxuICBcIm5lb25fcGlua1wiOiBcIiNlOTExOGZcIixcbiAgXCJsaW5rX2NvbG9yXCI6IFwiIzA1OTZjZVwiLFxuICBcInNoYWRvd1wiOiBcInJnYmEoMCwgMCwgMCwgMC4zKVwiLFxuICBcImJvb3RzdHJhcF9idXR0b25fYmx1ZVwiOiBcIiMzMzdhYjdcIixcbiAgXCJib290c3RyYXBfYnV0dG9uX3JlZFwiOiBcIiNkOTUzNGZcIixcbiAgXCJib290c3RyYXBfZXJyb3JfYmFja2dyb3VuZFwiOiBcIiNmMmRlZGVcIixcbiAgXCJib290c3RyYXBfZXJyb3JfdGV4dFwiOiBcIiNiOTRhNDhcIixcbiAgXCJib290c3RyYXBfdjNfZXJyb3JfdGV4dFwiOiBcIiNhOTQ0NDJcIixcbiAgXCJib290c3RyYXBfZXJyb3JfYm9yZGVyXCI6IFwiI2ViY2NkMVwiLFxuICBcImJvb3RzdHJhcF93YXJuaW5nX2JhY2tncm91bmRcIjogXCIjZmNmOGUzXCIsXG4gIFwiYm9vdHN0cmFwX3dhcm5pbmdfdGV4dFwiOiBcIiNjMDk4NTNcIixcbiAgXCJib290c3RyYXBfd2FybmluZ19ib3JkZXJcIjogXCIjZmFlYmNjXCIsXG4gIFwiYm9vdHN0cmFwX2JvcmRlcl9jb2xvclwiOiBcIiNjY2NjY2NcIixcbiAgXCJib290c3RyYXBfc3VjY2Vzc19iYWNrZ3JvdW5kXCI6IFwiI2RmZjBkOFwiLFxuICBcImJvb3RzdHJhcF9zdWNjZXNzX3RleHRcIjogXCIjNDY4ODQ3XCIsXG4gIFwiYm9vdHN0cmFwX3N1Y2Nlc3NfYm9yZGVyXCI6IFwiI2Q2ZTljNlwiLFxuICBcImRyb3BsZXRfbGlnaHRfZ3JlZW5cIjogXCIjZDNlOTY1XCIsXG4gIFwiZHJvcGxldF9ibHVlXCI6IFwiIzY0YjVmNlwiLFxuICBcImRyb3BsZXRfYnJpZ2h0X2JsdWVcIjogXCIjMTljM2UxXCIsXG4gIFwiZHJvcGxldF95ZWxsb3dcIjogXCIjZmZmMTc2XCIsXG4gIFwiZHJvcGxldF9vcmFuZ2VcIjogXCIjZmZiNzRkXCIsXG4gIFwiZHJvcGxldF9yZWRcIjogXCIjZjc4MTgzXCIsXG4gIFwiZHJvcGxldF9jeWFuXCI6IFwiIzRkZDBlMVwiLFxuICBcImRyb3BsZXRfcGlua1wiOiBcIiNmNTdhYzZcIixcbiAgXCJkcm9wbGV0X3B1cnBsZVwiOiBcIiNiYjc3YzdcIixcbiAgXCJkcm9wbGV0X2dyZWVuXCI6IFwiIzY4ZDk5NVwiLFxuICBcImRyb3BsZXRfd2hpdGVcIjogXCIjZmZmXCIsXG4gIFwib2NlYW5zX2RlZXBfYmx1ZVwiOiBcInJnYigyLCAwLCAyOClcIixcbiAgXCJkYXJrX2JsYWNrXCI6IFwiIzEyMTIxMlwiLFxuICBcImJyYW5kX3ByaW1hcnlfbGlnaHRcIjogXCIjQUJERkU1XCIsXG4gIFwiYnJhbmRfcHJpbWFyeV9kZWZhdWx0XCI6IFwiIzAwOUVCMFwiLFxuICBcImJyYW5kX3ByaW1hcnlfZGFya1wiOiBcIiMwMDgyOTFcIixcbiAgXCJicmFuZF9zZWNvbmRhcnlfbGlnaHRcIjogXCIjRTBEMUVDXCIsXG4gIFwiYnJhbmRfc2Vjb25kYXJ5X2RlZmF1bHRcIjogXCIjOEM1MkJBXCIsXG4gIFwiYnJhbmRfc2Vjb25kYXJ5X2RhcmtcIjogXCIjNkY0ODhFXCIsXG4gIFwiYnJhbmRfYWNjZW50X2RlZmF1bHRcIjogXCIjRUQ2MDYwXCIsXG4gIFwiYnJhbmRfdGVhbF81XCI6IFwiI0RGRjJGNFwiLFxuICBcInByb2R1Y3RfYWZmaXJtYXRpdmVfZGVmYXVsdFwiOiBcIiMzRUEzM0VcIixcbiAgXCJwcm9kdWN0X25lZ2F0aXZlX2xpZ2h0XCI6IFwiI0ZERUJFOVwiLFxuICBcInByb2R1Y3RfbmVnYXRpdmVfZGVmYXVsdFwiOiBcIiNFNTMxMUFcIixcbiAgXCJwcm9kdWN0X25lZ2F0aXZlX2RhcmtcIjogXCIjQUEyNTEzXCIsXG4gIFwicHJvZHVjdF9jYXV0aW9uX2RlZmF1bHRcIjogXCIjRjlDQjI4XCIsXG4gIFwicHJvZHVjdF9pbmZvcm1hdGlvbl9kZWZhdWx0XCI6IFwiIzAwN0FDQ1wiLFxuICBcIm5ldXRyYWxfd2hpdGVcIjogXCIjRkZGRkZGXCIsXG4gIFwibmV1dHJhbF9saWdodFwiOiBcIiNGN0Y4RkFcIixcbiAgXCJuZXV0cmFsX2RhcmsxMFwiOiBcIiNFQUVCRUJcIixcbiAgXCJuZXV0cmFsX2RhcmsyMFwiOiBcIiNENEQ1RDdcIixcbiAgXCJuZXV0cmFsX2RhcmszMFwiOiBcIiNCRkMxQzNcIixcbiAgXCJuZXV0cmFsX2Rhcms0MFwiOiBcIiNBOUFDQUZcIixcbiAgXCJuZXV0cmFsX2Rhcms1MFwiOiBcIiM5NDk3OUJcIixcbiAgXCJuZXV0cmFsX2Rhcms2MFwiOiBcIiM3RjgyODZcIixcbiAgXCJuZXV0cmFsX2Rhcms3MFwiOiBcIiM2QTZFNzNcIixcbiAgXCJuZXV0cmFsX2Rhcms4MFwiOiBcIiM1NDU5NUVcIixcbiAgXCJuZXV0cmFsX2Rhcms5MFwiOiBcIiMzRjQ0NEJcIixcbiAgXCJuZXV0cmFsX2RhcmtcIjogXCIjMjkyRjM2XCIsXG4gIFwiZ29vZ2xlX2JyYW5kX2NvbG9yXCI6IFwiIzBGOUQ1OFwiLFxuICBcIm1pY3Jvc29mdF9icmFuZF9jb2xvclwiOiBcIiNGRkI5MDBcIixcbiAgXCJmYWNlYm9va19icmFuZF9jb2xvclwiOiBcIiMzQjU5OThcIixcbiAgXCJsaWdodF9wcmltYXJ5XzEwMFwiOiBcIiNBQkRGRTVcIixcbiAgXCJsaWdodF9wcmltYXJ5XzUwMFwiOiBcIiMwMDkzQTRcIixcbiAgXCJsaWdodF9wcmltYXJ5XzcwMFwiOiBcIiMwMDgyOTFcIixcbiAgXCJsaWdodF9zZWNvbmRhcnlfMTAwXCI6IFwiI0UyRDRFRVwiLFxuICBcImxpZ2h0X3NlY29uZGFyeV81MDBcIjogXCIjOEM1MkJBXCIsXG4gIFwibGlnaHRfc2Vjb25kYXJ5XzcwMFwiOiBcIiM2RjQ4OEVcIixcbiAgXCJsaWdodF9ncmF5XzUwXCI6IFwiI0Y3RjhGQVwiLFxuICBcImxpZ2h0X2dyYXlfMTAwXCI6IFwiI0VBRUJFQlwiLFxuICBcImxpZ2h0X2dyYXlfMjAwXCI6IFwiI0Q0RDVEN1wiLFxuICBcImxpZ2h0X2dyYXlfMzAwXCI6IFwiI0JGQzFDM1wiLFxuICBcImxpZ2h0X2dyYXlfNDAwXCI6IFwiI0E5QUNBRlwiLFxuICBcImxpZ2h0X2dyYXlfNTAwXCI6IFwiIzk0OTc5QlwiLFxuICBcImxpZ2h0X2dyYXlfNzAwXCI6IFwiIzZBNkU3M1wiLFxuICBcImxpZ2h0X2dyYXlfODAwXCI6IFwiIzU0NTk1RVwiLFxuICBcImxpZ2h0X2dyYXlfOTAwXCI6IFwiIzNGNDQ0QlwiLFxuICBcImxpZ2h0X2FmZmlybWF0aXZlXzEwMFwiOiBcIiNFMkYxRTJcIixcbiAgXCJsaWdodF9hZmZpcm1hdGl2ZV81MDBcIjogXCIjM0VBMzNFXCIsXG4gIFwibGlnaHRfbmVnYXRpdmVfNTAwXCI6IFwiI0U1MzExQVwiLFxuICBcImxpZ2h0X2NhdXRpb25fNTAwXCI6IFwiI0Y5Q0IyOFwiLFxuICBcImxpZ2h0X2luZm9fMTAwXCI6IFwiI0RDRUZGQlwiLFxuICBcImxpZ2h0X2luZm9fNTAwXCI6IFwiIzE4OTJFM1wiLFxuICBcImxpZ2h0X3doaXRlXCI6IFwiI0ZGRkZGRlwiLFxuICBcImxpZ2h0X2JsYWNrXCI6IFwiIzI5MkYzNlwiLFxufTtcbiIsIi8vIFJGQyA1MzIyIE9mZmljaWFsIFN0YW5kYXJkIGVtYWlsIHJlZ2V4XG4vLyBTb3VyY2U6IGh0dHA6Ly9lbWFpbHJlZ2V4LmNvbS9cblxuY29uc3QgRU1BSUxfUkVHRVggPVxuICAvXigoW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31dKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkLztcbmV4cG9ydCBjb25zdCBpc0VtYWlsID0gdmFsdWUgPT4gRU1BSUxfUkVHRVgudGVzdCh2YWx1ZSk7XG5cbmNvbnN0IFpJUF9DT0RFX1JFR0VYID0gL15cXGR7NX0oW1xcVy1dP1xcZHs0fSk/JC87XG5leHBvcnQgY29uc3QgaXNaaXBDb2RlID0gdmFsdWUgPT4gWklQX0NPREVfUkVHRVgudGVzdCh2YWx1ZSk7XG5cbmV4cG9ydCBjb25zdCBpc0ludCA9IHZhbHVlID0+IHtcbiAgLy8gU3ViIG91dCBjb21tYXNcbiAgY29uc3QgbmV3VmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC8sL2csICcnKTtcbiAgcmV0dXJuIHBhcnNlSW50KG5ld1ZhbHVlLCAxMCkudG9TdHJpbmcoKSA9PT0gbmV3VmFsdWU7XG59O1xuZXhwb3J0IGNvbnN0IGlzUGVyY2VudCA9IHZhbHVlID0+IHtcbiAgbGV0IHBlcmNlbnQgPSBwYXJzZUZsb2F0KHZhbHVlKTtcblxuICByZXR1cm4gMCA8PSBwZXJjZW50ICYmIHBlcmNlbnQgPD0gMTAwO1xufTtcbiIsIi8qIVxuXHRDb3B5cmlnaHQgKGMpIDIwMTggSmVkIFdhdHNvbi5cblx0TGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcblx0aHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblx0dmFyIG5hdGl2ZUNvZGVTdHJpbmcgPSAnW25hdGl2ZSBjb2RlXSc7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcygpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdFx0aWYgKGFyZy5sZW5ndGgpIHtcblx0XHRcdFx0XHR2YXIgaW5uZXIgPSBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goaW5uZXIpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRpZiAoYXJnLnRvU3RyaW5nICE9PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nICYmICFhcmcudG9TdHJpbmcudG9TdHJpbmcoKS5pbmNsdWRlcygnW25hdGl2ZSBjb2RlXScpKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZy50b1N0cmluZygpKTtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRjbGFzc05hbWVzLmRlZmF1bHQgPSBjbGFzc05hbWVzO1xuXHRcdG1vZHVsZS5leHBvcnRzID0gY2xhc3NOYW1lcztcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gcmVnaXN0ZXIgYXMgJ2NsYXNzbmFtZXMnLCBjb25zaXN0ZW50IHdpdGggbnBtIHBhY2thZ2UgbmFtZVxuXHRcdGRlZmluZSgnY2xhc3NuYW1lcycsIFtdLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG5cdH1cbn0oKSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5mdW5jdGlvbiBjcmVhdGVUaHVua01pZGRsZXdhcmUoZXh0cmFBcmd1bWVudCkge1xuICByZXR1cm4gZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoO1xuICAgIHZhciBnZXRTdGF0ZSA9IF9yZWYuZ2V0U3RhdGU7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHJldHVybiBhY3Rpb24oZGlzcGF0Y2gsIGdldFN0YXRlLCBleHRyYUFyZ3VtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXh0KGFjdGlvbik7XG4gICAgICB9O1xuICAgIH07XG4gIH07XG59XG5cbnZhciB0aHVuayA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZSgpO1xudGh1bmsud2l0aEV4dHJhQXJndW1lbnQgPSBjcmVhdGVUaHVua01pZGRsZXdhcmU7XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IHRodW5rOyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgTG9ja291dFBhbmVsIGZyb20gJy4vTG9ja291dFBhbmVsJztcblxuY29uc3QgREFZUyA9IDEwMDAgKiA2MCAqIDYwICogMjQ7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBMb2Nrb3V0UGFuZWwsXG59O1xuXG5jb25zdCBUZW1wbGF0ZSA9IGFyZ3MgPT4gKFxuICA8TG9ja291dFBhbmVsXG4gICAgYXBpVVJMPVwiL3Blcm1pc3Npb25zXCJcbiAgICBkZWxldGVEYXRlPXtuZXcgRGF0ZShEYXRlLm5vdygpICsgNiAqIERBWVMpfVxuICAgIGRpc2FsbG93ZWRFbWFpbD1cInN0dWRlbnRAdGVzdC5jb21cIlxuICAgIHsuLi5hcmdzfVxuICAvPlxuKTtcblxuZXhwb3J0IGNvbnN0IE5ld0FjY291bnQgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbk5ld0FjY291bnQuYXJncyA9IHt9O1xuXG5leHBvcnQgY29uc3QgTmV3UHJlTG9ja291dEFjY291bnQgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbk5ld1ByZUxvY2tvdXRBY2NvdW50LmFyZ3MgPSB7XG4gIGlzUHJlTG9ja291dFVzZXI6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgUGVuZGluZ1JlcXVlc3QgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcblBlbmRpbmdSZXF1ZXN0LmFyZ3MgPSB7XG4gIHBlbmRpbmdFbWFpbDogJ2JsYWhAYmxhcmcuY29tJyxcbiAgcmVxdWVzdERhdGU6IG5ldyBEYXRlKERhdGUubm93KCkgLSAyICogREFZUyksXG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZGFuY2luZ3dwZWU3NTg2MmE1ODRiZjg3ZWM2MmExNDVlYjNiM2M5MGEucG5nXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwieWVsbGluZ3dwYTZhOTI4NGU5ZDljZWQzZDQzZmEzY2U3YmEyMDJkNTAucG5nXCI7Il0sIm5hbWVzIjpbImdldFN0b3JlIiwicmVkdXhTdG9yZSIsImNyZWF0ZVN0b3JlV2l0aFJlZHVjZXJzIiwiZXhwZXJpbWVudHMiLCJpc0VuYWJsZWQiLCJ3aW5kb3ciLCJoYXNSZWR1Y2VyIiwia2V5IiwiZ2xvYmFsUmVkdWNlcnMiLCJyZWdpc3RlclJlZHVjZXJzIiwicmVkdWNlcnMiLCJleGlzdGluZ1JlZHVjZXIiLCJFcnJvciIsImNvbmNhdCIsIk9iamVjdCIsImFzc2lnbiIsInJlcGxhY2VSZWR1Y2VyIiwicmVkdXgiLCJjb21iaW5lUmVkdWNlcnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHBlcmltZW50cyIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiZSIsInIiLCJfX2VzTW9kdWxlIiwiX3R5cGVvZiIsInQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJfcmVkdXhUaHVuayIsIl90b29sa2l0IiwiV2Vha01hcCIsIm9iaiIsImNyZWF0ZVN0b3JlIiwicmVkdWNlciIsImluaXRpYWxTdGF0ZSIsIlJFRFVYX0xPR0dJTkciLCJwcm9jZXNzIiwiY29uZmlndXJlU3RvcmUiLCJwcmVsb2FkZWRTdGF0ZSIsIm1pZGRsZXdhcmUiLCJyZWR1eFRodW5rIiwiZGV2VG9vbHMiLCJrZXlzIiwibGVuZ3RoIiwicyIsIm1vZHVsZSIsImV4cG9ydHMiLCJfanNDb29raWUiLCJfcHJvcFR5cGVzIiwiX3JlYWN0IiwiX2Zvcm1hdFZhbGlkYXRpb24iLCJfbG9jYWxlIiwiX2RhbmNpbmciLCJfeWVsbGluZyIsIl9yZWR1eCIsImNvbG9yIiwiX3V0aWxzIiwiX0J1dHRvbiIsIm93bktleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiX3RvUHJpbWl0aXZlIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl9zbGljZWRUb0FycmF5IiwiYXJyIiwiX2FycmF5V2l0aEhvbGVzIiwiQXJyYXkiLCJpc0FycmF5IiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibCIsIml0ZXJhdG9yIiwiZiIsIm5leHQiLCJkb25lIiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJfbm9uSXRlcmFibGVSZXN0IiwibGVuIiwiYXJyMiIsIkxvY2tvdXRQYW5lbCIsInByb3BzIiwiX2dldFN0b3JlJGdldFN0YXRlIiwidmFsaWRhdGVFbWFpbCIsImVtYWlsIiwiaXNFbWFpbCIsImlzRW1haWxEaXNhbGxvd2VkIiwiZGlzYWxsb3dlZEVtYWlsIiwiaGFzaFN0cmluZyIsIl91c2VTdGF0ZTIiLCJ1c2VTdGF0ZSIsInBlbmRpbmdFbWFpbCIsImRpc2FibGVkIiwic2V0RGlzYWJsZWQiLCJvbkVtYWlsVXBkYXRlIiwiZXZlbnQiLCJ0YXJnZXQiLCJsb2NhbGUiLCJjb29raWVzIiwiaXNSVEwiLCJnZXRTdGF0ZSIsImlzUnRsIiwiZGF0ZU9wdGlvbnMiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJwZW5kaW5nUHJvbXB0UGFydHMiLCJpMThuIiwic2Vzc2lvbkxvY2tvdXRQZW5kaW5nUHJvbXB0Iiwic3BsaXQiLCJ0b2tlbkVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjc3JmVG9rZW4iLCJhdHRyaWJ1dGVzIiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwic3R5bGVzIiwiY29udGFpbmVyIiwiY2xhc3NOYW1lIiwiaW1hZ2UiLCJzcmMiLCJoZWFkZXJUaGFua3NJbWFnZSIsImhlYWRlckltYWdlIiwiYWx0Iiwic2Vzc2lvbkxvY2tvdXRIZWFkZXJUaGFua3NEZXNjcmlwdGlvbiIsInNlc3Npb25Mb2Nrb3V0SGVhZGVyRGVzY3JpcHRpb24iLCJzZXNzaW9uTG9ja291dFBlbmRpbmdIZWFkZXIiLCJpc1ByZUxvY2tvdXRVc2VyIiwic2Vzc2lvbkxvY2tvdXROZXdQcmVMb2Nrb3V0QWNjb3VudEhlYWRlciIsInNlc3Npb25Mb2Nrb3V0TmV3QWNjb3VudEhlYWRlciIsImlkIiwiYWN0aW9uIiwiYXBpVVJMIiwibWV0aG9kIiwidHlwZSIsInNlc3Npb25Mb2Nrb3V0UHJlTG9ja291dEFjY291bnRQcm9tcHQiLCJzZXNzaW9uTG9ja291dFByb21wdCIsInNlc3Npb25Mb2Nrb3V0Tm90ZSIsImRlbGV0ZURhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJ0aW1lWm9uZSIsInN0YXR1c1NlY3Rpb24iLCJzdGF0dXNMYWJlbFJUTCIsInN0YXR1c0xhYmVsIiwiaHRtbEZvciIsInNlc3Npb25Mb2Nrb3V0UGFyZW50U3RhdHVzRmllbGQiLCJwZW5kaW5nIiwibm90U3VibWl0dGVkIiwic2Vzc2lvbkxvY2tvdXRTdGF0dXNQZW5kaW5nIiwic2Vzc2lvbkxvY2tvdXRTdGF0dXNOb3RTdWJtaXR0ZWQiLCJzdHlsZUFzVGV4dCIsInJlc2VuZExpbmsiLCJ0ZXh0Iiwic2Vzc2lvbkxvY2tvdXRSZXNlbmRFbWFpbCIsIm9uQ2xpY2siLCJyZXNlbmRQZXJtaXNzaW9uRW1haWwiLCJnZXRFbGVtZW50QnlJZCIsInN1Ym1pdCIsInNlY3Rpb25zIiwic2VjdGlvbiIsImxhYmVsUlRMIiwibGFiZWwiLCJzZXNzaW9uTG9ja291dFBhcmVudEVtYWlsRmllbGQiLCJmaWVsZFNlY3Rpb24iLCJmaWVsZCIsIm9uQ2hhbmdlIiwib25JbnB1dCIsIm9uQmx1ciIsImRlZmF1bHRWYWx1ZSIsImxhc3RFbWFpbCIsInNlc3Npb25Mb2Nrb3V0TGFzdEVtYWlsU2VudCIsInJlcXVlc3REYXRlIiwiaG91ciIsIm1pbnV0ZSIsImJ1dHRvbnMiLCJidXR0b24iLCJzaWduT3V0QnV0dG9uIiwiQnV0dG9uIiwiQnV0dG9uQ29sb3IiLCJncmF5Iiwic2lnbk91dCIsImxvY2F0aW9uIiwiaHJlZiIsInNlc3Npb25Mb2Nrb3V0VXBkYXRlU3VibWl0Iiwic2Vzc2lvbkxvY2tvdXRTdWJtaXQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiaW5zdGFuY2VPZiIsIkRhdGUiLCJib29sIiwiZGVmYXVsdFByb3BzIiwiYm9yZGVyIiwiYm94U2hhZG93IiwiYm94U2l6aW5nIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwibWFyZ2luVG9wIiwibWF4V2lkdGgiLCJwYWRkaW5nIiwicGFkZGluZ0JvdHRvbSIsIm1hcmdpbkJvdHRvbSIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCIsImZsZXhEaXJlY3Rpb24iLCJ3aWR0aCIsInJlZCIsIm9yYW5nZSIsImZvbnRTaXplIiwidGV4dERlY29yYXRpb24iLCJmbGV4IiwiYm9yZGVyUmFkaXVzIiwibWFyZ2luIiwiRU1BSUxfUkVHRVgiLCJaSVBfQ09ERV9SRUdFWCIsImlzWmlwQ29kZSIsImlzSW50IiwibmV3VmFsdWUiLCJyZXBsYWNlIiwicGFyc2VJbnQiLCJpc1BlcmNlbnQiLCJwZXJjZW50IiwicGFyc2VGbG9hdCIsImhhc093biIsImNsYXNzTmFtZXMiLCJjbGFzc2VzIiwiYXJnIiwiYXJnVHlwZSIsImlubmVyIiwiaW5jbHVkZXMiLCJqb2luIiwiZGVmYXVsdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImVyciIsImdldFNoaW0iLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50Iiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJjcmVhdGVUaHVua01pZGRsZXdhcmUiLCJleHRyYUFyZ3VtZW50IiwiX3JlZiIsImRpc3BhdGNoIiwidGh1bmsiLCJ3aXRoRXh0cmFBcmd1bWVudCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0QnlTZWxlY3RvciIsImluc2VydCIsImdldFRhcmdldCIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwic2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX0xvY2tvdXRQYW5lbCIsIl9leHRlbmRzIiwiYmluZCIsImNvbXBvbmVudCIsIlRlbXBsYXRlIiwiYXJncyIsIm5vdyJdLCJzb3VyY2VSb290IjoiIn0=