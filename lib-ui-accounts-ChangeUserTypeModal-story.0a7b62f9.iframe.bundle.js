"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[139],{"./src/lib/ui/accounts/ChangeUserTypeModal.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_formatValidation=__webpack_require__("./src/util/formatValidation.js"),_SystemDialog=__webpack_require__("./src/lib/ui/SystemDialog/SystemDialog.jsx"),_ChangeUserTypeForm=_interopRequireDefault(__webpack_require__("./src/lib/ui/accounts/ChangeUserTypeForm.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ChangeUserTypeModal=exports.default=function(_React$Component){function ChangeUserTypeModal(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",{saveState:"initial",values:{email:"",emailOptIn:""},serverErrors:{email:void 0,emailOptIn:void 0}}),_defineProperty(_this,"save",(function(){if(_this.isFormValid(_this.getValidationErrors())){var values=_this.state.values;_this.setState({saveState:"saving"}),_this.props.handleSubmit(values).catch(_this.onSubmitFailure)}})),_defineProperty(_this,"cancel",(function(){return _this.props.handleCancel()})),_defineProperty(_this,"onSubmitFailure",(function(error){error&&Object.prototype.hasOwnProperty.call(error,"serverErrors")?_this.setState({saveState:"initial",serverErrors:error.serverErrors},(function(){return _this.changeUserTypeForm.focusOnAnError()})):_this.setState({saveState:"unknown-error"})})),_defineProperty(_this,"getEmailValidationError",(function(){var email=_this.state.values.email;return 0===email.trim().length?_locale.default.changeUserTypeModal_email_isRequired():(0,_formatValidation.isEmail)(email.trim())?null:_locale.default.changeUserTypeModal_email_invalid()})),_defineProperty(_this,"getEmailOptInValidationError",(function(){return 0===_this.state.values.emailOptIn.length?_locale.default.changeUserTypeModal_emailOptIn_isRequired():null})),_defineProperty(_this,"onFormChange",(function(newValues){var _this$state=_this.state,oldValues=_this$state.values,newServerErrors=function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({},_this$state.serverErrors);["email","emailOptIn"].forEach((function(fieldName){newValues[fieldName]!==oldValues[fieldName]&&(newServerErrors[fieldName]=void 0)})),_this.setState({values:newValues,serverErrors:newServerErrors})})),_defineProperty(_this,"render",(function(){var _this$state2=_this.state,saveState=_this$state2.saveState,values=_this$state2.values,validationErrors=_this.getValidationErrors(),isFormValid=_this.isFormValid(validationErrors);return _react.default.createElement(_BaseDialog.default,{useUpdatedStyles:!0,isOpen:!0,handleClose:_this.cancel,uncloseable:"saving"===saveState},_react.default.createElement("div",{style:styles.container},_react.default.createElement(_SystemDialog.Header,{text:_locale.default.changeUserTypeModal_title()}),_react.default.createElement(_ChangeUserTypeForm.default,{ref:function ref(x){return _this.changeUserTypeForm=x},values,validationErrors,disabled:"saving"===saveState,onChange:_this.onFormChange,onSubmit:_this.save}),_react.default.createElement(_SystemDialog.ConfirmCancelFooter,{confirmText:_locale.default.changeUserTypeModal_save_teacher(),onConfirm:_this.save,onCancel:_this.cancel,disableConfirm:"saving"===saveState||!isFormValid,disableCancel:"saving"===saveState,tabIndex:"2"},"saving"===saveState&&_react.default.createElement("em",null,_locale.default.saving()),"unknown-error"===saveState&&_react.default.createElement("em",null,_locale.default.changeUserTypeModal_unexpectedError()))))})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ChangeUserTypeModal,_React$Component);var _proto=ChangeUserTypeModal.prototype;return _proto.isFormValid=function isFormValid(validationErrors){return Object.keys(validationErrors).every((function(key){return!validationErrors[key]}))},_proto.getValidationErrors=function getValidationErrors(){var serverErrors=this.state.serverErrors;return{email:serverErrors.email||this.getEmailValidationError(),emailOptIn:serverErrors.emailOptIn||this.getEmailOptInValidationError()}},ChangeUserTypeModal}(_react.default.Component);_defineProperty(ChangeUserTypeModal,"propTypes",{handleSubmit:_propTypes.default.func.isRequired,handleCancel:_propTypes.default.func.isRequired});var styles={container:{margin:20,color:_color.default.charcoal}};module.exports=exports.default},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/constants.js"),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/util/formatValidation.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isZipCode=exports.isPercent=exports.isInt=exports.isEmail=void 0;var EMAIL_REGEX=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ZIP_CODE_REGEX=(exports.isEmail=function isEmail(value){return EMAIL_REGEX.test(value)},/^\d{5}([\W-]?\d{4})?$/);exports.isZipCode=function isZipCode(value){return ZIP_CODE_REGEX.test(value)},exports.isInt=function isInt(value){var newValue=value.replace(/,/g,"");return parseInt(newValue,10).toString()===newValue},exports.isPercent=function isPercent(value){var percent=parseFloat(value);return 0<=percent&&percent<=100}},"./src/lib/ui/accounts/ChangeUserTypeModal.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.StudentBecomingTeacher=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_ChangeUserTypeModal=_interopRequireDefault(__webpack_require__("./src/lib/ui/accounts/ChangeUserTypeModal.jsx")),_addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var DEFAULT_PROPS={handleSubmit:(0,_addonActions.action)("handleSubmit callback"),handleCancel:(0,_addonActions.action)("handleCancel callback")},container=(exports.default={component:_ChangeUserTypeModal.default},{margin:"auto",width:"50%",padding:"10px"});exports.StudentBecomingTeacher=function Template(args){return _react.default.createElement("div",{style:container},_react.default.createElement(_ChangeUserTypeModal.default,_extends({},DEFAULT_PROPS,args)))}.bind({})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,