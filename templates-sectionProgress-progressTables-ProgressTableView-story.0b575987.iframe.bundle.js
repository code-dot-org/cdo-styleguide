(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[7357,4721],{"./.storybook/decorators.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{reduxStore:()=>reduxStore});var redux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/redux/es/redux.js"),redux_thunk__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/redux-thunk/lib/index.js"),_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/code-studio/isRtlRedux.js"),_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/code-studio/responsiveRedux.js");const reduxStore=(reducers={},state={})=>(0,redux__WEBPACK_IMPORTED_MODULE_3__.createStore)((0,redux__WEBPACK_IMPORTED_MODULE_3__.combineReducers)({isRtl:_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_1__.default,responsive:_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_2__.default,...reducers}),state,(0,redux__WEBPACK_IMPORTED_MODULE_3__.applyMiddleware)(redux_thunk__WEBPACK_IMPORTED_MODULE_0__.default))},"./src/redux/unitSelectionRedux.js":(__unused_webpack_module,exports)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(exports,"__esModule",{value:!0}),exports.SET_SCRIPT=exports.SET_COURSES=void 0,exports.default=function unitSelection(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_COURSES){var firstCourse=action.coursesWithProgress[0],firstUnit=firstCourse?firstCourse.units[0]:null;return _objectSpread(_objectSpread({},state),{},{coursesWithProgress:action.coursesWithProgress,scriptId:null===state.scriptId?null==firstUnit?void 0:firstUnit.id:state.scriptId})}if(action.type===SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{scriptId:action.scriptId});return state},exports.setScriptId=exports.setCoursesWithProgress=exports.getSelectedScriptName=exports.getSelectedScriptFriendlyName=exports.getSelectedScriptDescription=exports.doesCurrentCourseUseFeedback=void 0;var SET_SCRIPT=exports.SET_SCRIPT="unitSelection/SET_SCRIPT",SET_COURSES=exports.SET_COURSES="unitSelection/SET_COURSES",getSelectedUnit=(exports.setScriptId=function setScriptId(scriptId){return{type:SET_SCRIPT,scriptId}},exports.setCoursesWithProgress=function setCoursesWithProgress(coursesWithProgress){return{type:SET_COURSES,coursesWithProgress}},function getSelectedUnit(state){var unit,scriptId=state.unitSelection.scriptId;return scriptId?(state.unitSelection.coursesWithProgress.forEach((function(course){var tempUnit=course.units.find((function(unit){return scriptId===unit.id}));tempUnit&&(unit=tempUnit)})),unit):null}),initialState=(exports.getSelectedScriptName=function getSelectedScriptName(state){return getSelectedUnit(state)?getSelectedUnit(state).key:null},exports.getSelectedScriptFriendlyName=function getSelectedScriptFriendlyName(state){return getSelectedUnit(state)?getSelectedUnit(state).name:null},exports.getSelectedScriptDescription=function getSelectedScriptDescription(state){return getSelectedUnit(state)?getSelectedUnit(state).description:null},exports.doesCurrentCourseUseFeedback=function doesCurrentCourseUseFeedback(state){var _getSelectedUnit;return!(null===(_getSelectedUnit=getSelectedUnit(state))||void 0===_getSelectedUnit||!_getSelectedUnit.is_feedback_enabled)},{scriptId:null,coursesWithProgress:[]})},"./src/templates/CollapserIcon.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_collapserIconModule=_interopRequireDefault(__webpack_require__("./src/templates/collapser-icon.module.scss"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var styles_icon={fontSize:18,fontWeight:400};function CollapserIcon(_ref){var id=_ref.id,isCollapsed=_ref.isCollapsed,onClick=_ref.onClick,collapsedIconClass=_ref.collapsedIconClass,expandedIconClass=_ref.expandedIconClass,style=_ref.style,className=_ref.className,iconClass=isCollapsed?collapsedIconClass:expandedIconClass;return _react.default.createElement("button",{id,onClick,className:(0,_classnames.default)(iconClass+" fa",className,_collapserIconModule.default.collapserIcon,"no-mc"),style:_objectSpread(_objectSpread({},style),styles_icon),type:"button"})}CollapserIcon.propTypes={id:_propTypes.default.string,onClick:_propTypes.default.func,isCollapsed:_propTypes.default.bool.isRequired,collapsedIconClass:_propTypes.default.string,expandedIconClass:_propTypes.default.string,style:_propTypes.default.object,className:_propTypes.default.string},CollapserIcon.defaultProps={collapsedIconClass:"fa-chevron-circle-down",expandedIconClass:"fa-chevron-circle-up",style:{}};exports.default=CollapserIcon;module.exports=exports.default},"./src/templates/progress/ProgressLegend.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_BubbleBadge=_interopRequireWildcard(__webpack_require__("./src/templates/progress/BubbleBadge.jsx")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}__webpack_require__("./src/templates/progress/styles.scss");!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function ProgressLegend(){return _Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressLegend,_Component);var _proto=ProgressLegend.prototype;return _proto.render=function render(){var statusColumns=this.getLevelStatusColumns(),detailColumns=this.getLevelDetailsColumns();return this.renderTable(detailColumns,statusColumns)},_proto.renderTable=function renderTable(detailColumns,statusColumns){if(detailColumns&&(null==statusColumns?void 0:statusColumns.length)>5)return _react.default.createElement("div",null,this.renderTable(null,statusColumns),this.renderTable(detailColumns,null));var columns=[this.getLevelTypeColumn()];detailColumns&&(columns=columns.concat(detailColumns)),statusColumns&&(columns=columns.concat(statusColumns));var rows=_lodash.default.zip.apply(_lodash.default,_toConsumableArray(columns));return _react.default.createElement("table",{className:"progress-legend"},_react.default.createElement("thead",null,_react.default.createElement("tr",null,_react.default.createElement("td",null,_locale.default.levelType()),detailColumns&&_react.default.createElement("td",{colSpan:3},_locale.default.levelDetails()),statusColumns&&_react.default.createElement("td",{colSpan:statusColumns.length},_locale.default.levelStatus())),statusColumns&&_react.default.createElement("tr",null,rows[0].map((function(cell){return cell})))),_react.default.createElement("tbody",null,_react.default.createElement("tr",null,rows[1].map((function(cell){return cell}))),_react.default.createElement("tr",null,rows[2].map((function(cell){return cell})))))},_proto.getLevelStatusColumns=function getLevelStatusColumns(){var _this$props=this.props,includeCsfColumn=_this$props.includeCsfColumn,includeProgressNotApplicable=_this$props.includeProgressNotApplicable,includeReviewStates=_this$props.includeReviewStates,columns=[];return includeProgressNotApplicable&&columns.push(this.getProgressNAColumn()),columns.push(this.getNotStartedColumn()),columns.push(this.getInProgressColumn()),includeReviewStates&&columns.push(this.getKeepWorkingColumn()),includeReviewStates&&columns.push(this.getNeedsReviewColumn()),includeCsfColumn&&columns.push(this.getTooManyBlocksColumn()),columns.push(this.getPerfectColumn()),columns.push(this.getAssessmentsColumn()),columns},_proto.getLevelDetailsColumns=function getLevelDetailsColumns(){return[[_react.default.createElement("td",{key:_lodash.default.uniqueId()}),_react.default.createElement("td",{key:_lodash.default.uniqueId()},this.getLevelDetails("file-text",_locale.default.text())),_react.default.createElement("td",{key:_lodash.default.uniqueId()},this.getLevelDetails("scissors",_locale.default.unplugged()),this.getLevelDetails("flag-checkered",_locale.default.stageExtras()))],[_react.default.createElement("td",{key:_lodash.default.uniqueId()}),_react.default.createElement("td",{key:_lodash.default.uniqueId()},this.getLevelDetails("video-camera",_locale.default.video())),_react.default.createElement("td",{key:_lodash.default.uniqueId()},this.getLevelDetails("desktop",_locale.default.online()),this.getLevelDetails("check-circle",_locale.default.progressLegendAssessment()))],[_react.default.createElement("td",{key:_lodash.default.uniqueId()}),_react.default.createElement("td",{key:_lodash.default.uniqueId(),className:"end-border"},this.getLevelDetails("map",_locale.default.map())),_react.default.createElement("td",{key:_lodash.default.uniqueId(),className:"end-border"},this.getLevelDetails("list-ul",_locale.default.question()),this.getLevelDetails("sitemap",_locale.default.choiceLevel()))]]},_proto.getLevelTypeColumn=function getLevelTypeColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()}),_react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.concept()),_react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.activity())]},_proto.getProgressNAColumn=function getProgressNAColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.progress(),_react.default.createElement("br",null),_locale.default.notApplicable()),_react.default.createElement("td",{key:_lodash.default.uniqueId()},_react.default.createElement("div",null,"—")),_react.default.createElement("td",{key:_lodash.default.uniqueId(),rowSpan:2},_react.default.createElement("div",null,"—"))]},_proto.getNotStartedColumn=function getNotStartedColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.notStarted()),_react.default.createElement("td",{key:_lodash.default.uniqueId()},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.not_tried,!0,"".concat(_locale.default.concept(),": ").concat(_locale.default.notStarted())))),_react.default.createElement("td",{key:_lodash.default.uniqueId()},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.not_tried,!1,"".concat(_locale.default.activity(),": ").concat(_locale.default.notStarted()))))]},_proto.getInProgressColumn=function getInProgressColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.inProgress()),_react.default.createElement("td",{key:_lodash.default.uniqueId()},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.attempted,!0,"".concat(_locale.default.concept(),": ").concat(_locale.default.inProgress())))),_react.default.createElement("td",{key:_lodash.default.uniqueId(),rowSpan:2},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.attempted,!1,"".concat(_locale.default.activity(),": ").concat(_locale.default.inProgress()))))]},_proto.getKeepWorkingColumn=function getKeepWorkingColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.keepWorking()),this.getNotApplicableCell(),_react.default.createElement("td",{key:_lodash.default.uniqueId(),rowSpan:2},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.attempted,!1,"".concat(_locale.default.activity(),": ").concat(_locale.default.keepWorking()),!0)))]},_proto.getNeedsReviewColumn=function getNeedsReviewColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.needsReview()),this.getNotApplicableCell(),_react.default.createElement("td",{key:_lodash.default.uniqueId(),rowSpan:2},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.perfect,!1,"".concat(_locale.default.activity(),": ").concat(_locale.default.needsReview()),!0)))]},_proto.getTooManyBlocksColumn=function getTooManyBlocksColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()},_react.default.createElement("div",null,_locale.default.completed()),_react.default.createElement("div",null,"(",_locale.default.tooManyBlocks(),")")),this.getNotApplicableCell(),_react.default.createElement("td",{key:_lodash.default.uniqueId(),rowSpan:2},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.passed,!1,"".concat(_locale.default.activity(),": ").concat(_locale.default.completed()," (").concat(_locale.default.tooManyBlocks(),")"))))]},_proto.getPerfectColumn=function getPerfectColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()},_react.default.createElement("div",null,_locale.default.completed()),this.props.includeCsfColumn&&_react.default.createElement("div",null,"(",_locale.default.perfect(),")")),_react.default.createElement("td",{key:_lodash.default.uniqueId()},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.perfect,!0,"".concat(_locale.default.concept(),": ").concat(_locale.default.completed()," (").concat(_locale.default.perfect(),")")))),_react.default.createElement("td",{key:_lodash.default.uniqueId(),rowSpan:2},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.perfect,!1,"".concat(_locale.default.activity(),": ").concat(_locale.default.completed()," (").concat(_locale.default.perfect(),")"))))]},_proto.getAssessmentsColumn=function getAssessmentsColumn(){return[_react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.assessmentAndSurvey()),this.getNotApplicableCell(),_react.default.createElement("td",{key:_lodash.default.uniqueId(),rowSpan:2},_react.default.createElement("div",null,this.getBubble(_sharedConstants.LevelStatus.submitted,!1,"".concat(_locale.default.activity(),": ").concat(_locale.default.submitted()))))]},_proto.getNotApplicableCell=function getNotApplicableCell(){return _react.default.createElement("td",{key:_lodash.default.uniqueId()},_locale.default.notApplicable())},_proto.getLevelDetails=function getLevelDetails(icon,text){return _react.default.createElement("div",{className:"level-details"},_react.default.createElement(_FontAwesome.default,{icon}),text)},_proto.getBubble=function getBubble(status,isConcept,text){var includeKeepWorkingBadge=arguments.length>3&&void 0!==arguments[3]&&arguments[3],shape=isConcept?_BubbleFactory.BubbleShape.diamond:_BubbleFactory.BubbleShape.circle;return _react.default.createElement(_BubbleFactory.BasicTooltip,{icon:_progressHelpers.defaultBubbleIcon,text},_react.default.createElement(_BubbleFactory.BasicBubble,{shape,size:_BubbleFactory.BubbleSize.full,progressStyle:(0,_progressStyles.levelProgressStyle)(status)},includeKeepWorkingBadge&&_react.default.createElement(_BubbleBadge.default,{badgeType:_BubbleBadge.BadgeType.keepWorking,bubbleSize:_BubbleFactory.BubbleSize.full,bubbleShape:shape})))},ProgressLegend}(_react.Component),"propTypes",{includeCsfColumn:_propTypes.default.bool.isRequired,includeProgressNotApplicable:_propTypes.default.bool,includeReviewStates:_propTypes.default.bool}),module.exports=exports.default},"./src/templates/sectionProgress/ProgressBox.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}_defineProperty(exports.default=function(_Component){function ProgressBox(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBox,_Component),ProgressBox.prototype.render=function render(){var _this$props=this.props,started=_this$props.started,incomplete=_this$props.incomplete,imperfect=_this$props.imperfect,perfect=_this$props.perfect,lessonIsAllAssessment=_this$props.lessonIsAllAssessment,viewed=_this$props.viewed,viewedStyle=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.neutral_dark20,height:20,width:20}),boxWithBorderStyle=_objectSpread(_objectSpread({},styles.box),{},{borderColor:started?lessonIsAllAssessment?_color.default.level_submitted:_color.default.level_perfect:_color.default.light_gray},this.props.style),perfectLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_perfect,height:perfect,top:20-perfect}),assessmentLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_submitted,height:perfect,top:20-perfect}),incompleteLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_not_tried,height:incomplete}),imperfectLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_passed,height:imperfect}),lessonNumberStyle=_objectSpread(_objectSpread({},styles.lessonNumber),{},{color:perfect?_color.default.white:_color.default.charcoal});return _react.default.createElement("div",{style:boxWithBorderStyle,"data-testid":"progress-box"},this.props.lessonNumber&&_react.default.createElement("div",{style:lessonNumberStyle},this.props.lessonNumber),viewed?_react.default.createElement("div",{style:viewedStyle}):_react.default.createElement(_react.default.Fragment,null,_react.default.createElement("div",{style:incompleteLevels}),_react.default.createElement("div",{style:imperfectLevels}),_react.default.createElement("div",{className:"uitest-perfect-bar",style:lessonIsAllAssessment?assessmentLevels:perfectLevels})))},ProgressBox}(_react.Component),"propTypes",{started:_propTypes.default.bool,incomplete:_propTypes.default.number,imperfect:_propTypes.default.number,perfect:_propTypes.default.number,style:_propTypes.default.object,lessonIsAllAssessment:_propTypes.default.bool,lessonNumber:_propTypes.default.number,viewed:_propTypes.default.bool});var styles={box:{height:20,width:20,borderWidth:1,borderStyle:"solid",boxSizing:"content-box",position:"relative"},filler:{width:20,position:"absolute"},lessonNumber:_objectSpread({position:"absolute",zIndex:2,paddingTop:2,textAlign:"center",width:20},_fontConstants.default["main-font-regular"])};module.exports=exports.default},"./src/templates/sectionProgress/SectionProgressToggle.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedSectionProgressToggle=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_ToggleGroup=_interopRequireDefault(__webpack_require__("./src/templates/ToggleGroup.jsx")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_sectionProgressRedux=__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SectionProgressToggle=function(_React$Component){function SectionProgressToggle(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"onChange",(function(selectedToggle){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"view_change_toggle",data_json:JSON.stringify({section_id:_this.props.sectionId,old_view:_this.props.currentView,new_view:selectedToggle,script_id:_this.props.scriptId})},{includeUserId:!0}),_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_TOGGLE,{sectionId:_this.props.sectionId,unitId:_this.props.scriptId,newView:selectedToggle}),_this.props.setCurrentView(selectedToggle)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SectionProgressToggle,_React$Component),SectionProgressToggle.prototype.render=function render(){var _this$props=this.props,currentView=_this$props.currentView,showStandardsToggle=_this$props.showStandardsToggle;return _react.default.createElement(_ToggleGroup.default,{selected:currentView,activeColor:_color.default.teal,onChange:this.onChange,style:styles.toggleGroup},_react.default.createElement("button",{type:"button",value:_sectionProgressConstants.ViewType.SUMMARY,style:styles.toggleButton},_react.default.createElement("div",null,_locale.default.lessons())),_react.default.createElement("button",{type:"button",id:"uitest-toggle-detail-view",value:_sectionProgressConstants.ViewType.DETAIL,style:styles.toggleButton},_react.default.createElement("div",null,_locale.default.levels())),showStandardsToggle&&_react.default.createElement("button",{type:"button",value:_sectionProgressConstants.ViewType.STANDARDS,style:styles.toggleButton,id:"uitest-standards-toggle"},_react.default.createElement("div",null,_locale.default.standards())))},SectionProgressToggle}(_react.default.Component);_defineProperty(SectionProgressToggle,"propTypes",{showStandardsToggle:_propTypes.default.bool,currentView:_propTypes.default.string.isRequired,setCurrentView:_propTypes.default.func.isRequired,sectionId:_propTypes.default.number,scriptId:_propTypes.default.number});var styles={toggleButton:{padding:"3px 20px",height:34,margin:"auto auto 10px auto"},toggleGroup:{minWidth:"fit-content"}};exports.UnconnectedSectionProgressToggle=SectionProgressToggle,exports.default=(0,_reactRedux.connect)((function(state){return{currentView:state.sectionProgress.currentView,sectionId:state.teacherSections.selectedSectionId,scriptId:state.unitSelection.scriptId}}),(function(dispatch){return{setCurrentView:function setCurrentView(viewType){dispatch((0,_sectionProgressRedux.setCurrentView)(viewType))}}}))(SectionProgressToggle)},"./src/templates/sectionProgress/progressTables/ProgressTableContentView.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),Sticky=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-sticky/dist/index.js")),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),Virtualized=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-virtualized/dist/index.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_ProgressTableLessonNumber=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableLessonNumber.jsx")),_progressTableConstantsModule=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/progress-table-constants.module.scss"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_require__("./src/templates/sectionProgress/progressTables/progressTableStyles.scss");var gutterHeader={header:{props:{style:{width:_sectionProgressConstants.scrollbarWidth,minWidth:_sectionProgressConstants.scrollbarWidth}}}},ProgressTableContentView=exports.default=function(_React$Component){function ProgressTableContentView(props){var _this;return _defineProperty(_this=_React$Component.call(this,props)||this,"header",null),_defineProperty(_this,"body",null),_defineProperty(_this,"bodyComponent",null),_defineProperty(_this,"lessonRefs",{}),_this.lessonNumberFormatter=_this.lessonNumberFormatter.bind(_this),_this.contentCellFormatter=_this.contentCellFormatter.bind(_this),_this.columnWidthStyle=_this.columnWidthStyle.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableContentView,_React$Component);var _proto=ProgressTableContentView.prototype;return _proto.componentDidMount=function componentDidMount(){this.scrollToSelectedLesson()},_proto.componentDidUpdate=function componentDidUpdate(prevProps){prevProps.lessonOfInterest!==this.props.lessonOfInterest&&this.scrollToSelectedLesson()},_proto.scrollToSelectedLesson=function scrollToSelectedLesson(){var scrollPosition=this.lessonRefs[this.props.lessonOfInterest].parentNode.offsetLeft;this.header.scrollLeft=scrollPosition,this.body.scrollLeft=scrollPosition},_proto.lessonNumberFormatter=function lessonNumberFormatter(_,_ref){var _this2=this,columnIndex=_ref.columnIndex,lesson=this.props.scriptData.lessons[columnIndex],includeArrow=this.props.includeHeaderArrows&&(0,_progressHelpers.lessonHasLevels)(lesson)&&(lesson.levels.length>1||lesson.levels[0].isUnplugged);return _react.default.createElement("div",{style:styles.headerContainer,ref:function ref(r){return _this2.lessonRefs[lesson.position]=r}},_react.default.createElement(_ProgressTableLessonNumber.default,{id:lesson.id,name:lesson.name,number:lesson.relative_position,lockable:lesson.lockable,highlighted:lesson.position===this.props.lessonOfInterest,onClick:function onClick(){return _this2.props.onClickLesson(lesson.position)},isAssessment:(0,_progressHelpers.lessonIsAllAssessment)(lesson.levels),includeArrow}))},_proto.contentCellFormatter=function contentCellFormatter(_,_ref2){var rowData=_ref2.rowData,columnIndex=_ref2.columnIndex;return this.props.lessonCellFormatters[rowData.expansionIndex](this.props.scriptData.lessons[columnIndex],rowData.student)},_proto.columnWidthStyle=function columnWidthStyle(index){var _this$props=this.props,columnWidths=_this$props.columnWidths,scriptData=_this$props.scriptData,width=null;return columnWidths?width=columnWidths[index]:(0,_progressHelpers.lessonHasLevels)(scriptData.lessons[index])||(width=parseInt(_progressTableConstantsModule.default.MIN_COLUMN_WIDTH)),width?{style:{minWidth:width,maxWidth:width}}:{}},_proto.render=function render(){var _this3=this,headerFormatters=[this.lessonNumberFormatter].concat(_toConsumableArray(this.props.extraHeaderFormatters||[])),headerRows=headerFormatters.map((function(_){return[]})),columns=[];return this.props.scriptData.lessons.forEach((function(_,index){var widthProps=_this3.columnWidthStyle(index);columns.push({props:widthProps,cell:{formatters:[_this3.contentCellFormatter]}}),headerRows.forEach((function(headerRow,headerIndex){headerRow.push({header:{props:widthProps,formatters:[headerFormatters[headerIndex]]}})}))})),this.props.needsGutter&&headerRows.forEach((function(headerRow){return headerRow.push(gutterHeader)})),_react.default.createElement(Table.Provider,{renderers:{body:{wrapper:Virtualized.BodyWrapper,row:Virtualized.BodyRow}},columns},_react.default.createElement(Sticky.Header,{style:{overflow:"hidden"},ref:function ref(r){return _this3.header=r&&r.getRef()},tableBody:this.body,headerRows}),_react.default.createElement(Virtualized.Body,{rows:this.props.rows,onRow:this.props.onRow,rowKey:"id",onScroll:this.props.onScroll,style:{overflowX:"scroll",overflowY:"auto",maxHeight:parseInt(_progressTableConstantsModule.default.MAX_BODY_HEIGHT)},ref:function ref(r){_this3.body=r&&r.getRef(),_this3.bodyComponent=r},tableHeader:this.header}))},ProgressTableContentView}(_react.default.Component);_defineProperty(ProgressTableContentView,"propTypes",{rows:_propTypes.default.arrayOf(_sectionProgressConstants.studentTableRowType).isRequired,onRow:_propTypes.default.func.isRequired,scriptData:_sectionProgressConstants.unitDataPropType.isRequired,lessonOfInterest:_propTypes.default.number.isRequired,onClickLesson:_propTypes.default.func.isRequired,columnWidths:_propTypes.default.arrayOf(_propTypes.default.number),lessonCellFormatters:_propTypes.default.arrayOf(_propTypes.default.func).isRequired,extraHeaderFormatters:_propTypes.default.arrayOf(_propTypes.default.func),needsGutter:_propTypes.default.bool.isRequired,onScroll:_propTypes.default.func.isRequired,includeHeaderArrows:_propTypes.default.bool});var styles={headerContainer:{height:"100%"}};module.exports=exports.default},"./src/templates/sectionProgress/progressTables/ProgressTableDetailCell.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),progressStyles=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/progressStyles.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_ProgressTableLevelBubble=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableLevelBubble.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}_defineProperty(exports.default=function(_React$Component){function ProgressTableDetailCell(props){var _this;return(_this=_React$Component.call(this,props)||this).recordBubbleClick=_this.recordBubbleClick.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableDetailCell,_React$Component);var _proto=ProgressTableDetailCell.prototype;return _proto.shouldComponentUpdate=function shouldComponentUpdate(nextProps){return!_lodash.default.isEqual(this.props,nextProps)},_proto.recordBubbleClick=function recordBubbleClick(levelId){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"go_to_level",data_json:JSON.stringify({student_id:this.props.studentId,section_id:this.props.sectionId,level_id:levelId})},{includeUserId:!0})},_proto.buildBubbleUrl=function buildBubbleUrl(level){return(0,_BubbleFactory.getBubbleUrl)(level.url,this.props.studentId,this.props.sectionId)},_proto.renderSublevels=function renderSublevels(level){var _this2=this;return _react.default.createElement("div",null,level.sublevels.map((function(sublevel){var sublevelProgress=_this2.props.studentProgress[sublevel.id];return _react.default.createElement("div",{key:sublevel.id,style:styles.sublevelContainer,onClick:function onClick(_){return _this2.recordBubbleClick(sublevel.id)}},_react.default.createElement(_ProgressTableLevelBubble.default,{levelStatus:null==sublevelProgress?void 0:sublevelProgress.status,bubbleSize:_BubbleFactory.BubbleSize.letter,isBonus:sublevel.bonus,isConcept:sublevel.isConceptLevel,title:sublevel.bubbleText,url:_this2.buildBubbleUrl(sublevel),reviewState:null==sublevelProgress?void 0:sublevelProgress.teacherFeedbackReviewState}))})))},_proto.renderBubble=function renderBubble(level){var _this3=this,levelProgress=this.props.studentProgress[level.id],url=this.buildBubbleUrl(level);return _react.default.createElement("div",{key:"".concat(level.id,"_").concat(level.levelNumber),style:styles.container},_react.default.createElement("div",{onClick:function onClick(_){return _this3.recordBubbleClick(level.id)}},_react.default.createElement(_ProgressTableLevelBubble.default,{levelStatus:null==levelProgress?void 0:levelProgress.status,isLocked:null==levelProgress?void 0:levelProgress.locked,levelKind:level.kind,isUnplugged:level.isUnplugged,isBonus:level.bonus,isPaired:null==levelProgress?void 0:levelProgress.paired,isConcept:level.isConceptLevel,title:level.bubbleText,url,reviewState:null==levelProgress?void 0:levelProgress.teacherFeedbackReviewState})),level.sublevels&&this.renderSublevels(level))},_proto.render=function render(){var _this4=this;return(0,_progressHelpers.lessonHasLevels)({levels:this.props.levels})?_react.default.createElement("div",{style:styles.container,className:"uitest-detail-cell cell-content"},_react.default.createElement("div",{style:styles.background}),this.props.levels.map((function(level){return _this4.renderBubble(level)}))):null},ProgressTableDetailCell}(_react.default.Component),"propTypes",{studentId:_propTypes.default.number.isRequired,sectionId:_propTypes.default.number.isRequired,levels:_propTypes.default.arrayOf(_progressTypes.levelType).isRequired,studentProgress:_propTypes.default.objectOf(_progressTypes.studentLevelProgressType).isRequired});var styles={container:_objectSpread(_objectSpread({},progressStyles.flexBetween),{},{position:"relative",whiteSpace:"nowrap"}),background:{height:10,backgroundColor:_color.default.lighter_gray,position:"absolute",left:10,right:10},sublevelContainer:{position:"relative",display:"inline-block"}};module.exports=exports.default},"./src/templates/sectionProgress/progressTables/ProgressTableLessonNumber.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitTestExports=exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),progressStyles=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/progressStyles.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_require__("./src/templates/sectionProgress/progressTables/progressTableStyles.scss");var LessonArrow=function LessonArrow(){return _react.default.createElement("span",{className:"lesson-arrow"},_react.default.createElement("span",{className:"line"}),_react.default.createElement("span",{className:"arrow"}))},ProgressTableLessonNumber=function(_React$Component){function ProgressTableLessonNumber(){return _React$Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableLessonNumber,_React$Component);var _proto=ProgressTableLessonNumber.prototype;return _proto.tooltipId=function tooltipId(){return"tooltipForLesson".concat(this.props.id)},_proto.renderTooltip=function renderTooltip(){var id=this.tooltipId();return _react.default.createElement(_reactTooltip.default,{id,key:id,role:"tooltip",wrapper:"span",effect:"solid"},this.props.isAssessment&&_react.default.createElement(_FontAwesome.default,{icon:"check-circle",style:styles.icon}),this.props.name)},_proto.render=function render(){var _this$props=this.props,number=_this$props.number,lockable=_this$props.lockable,highlighted=_this$props.highlighted,includeArrow=_this$props.includeArrow,onClick=_this$props.onClick,highlightStyle=highlighted?styles.highlight:{};return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.container),highlightStyle),onClick,"data-tip":!0,"data-for":this.tooltipId()},this.renderTooltip(),lockable?_react.default.createElement(_FontAwesome.default,{icon:"lock"}):number,includeArrow&&_react.default.createElement(LessonArrow,null))},ProgressTableLessonNumber}(_react.default.Component);_defineProperty(ProgressTableLessonNumber,"propTypes",{id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,number:_propTypes.default.number.isRequired,lockable:_propTypes.default.bool.isRequired,highlighted:_propTypes.default.bool.isRequired,onClick:_propTypes.default.func.isRequired,includeArrow:_propTypes.default.bool,isAssessment:_propTypes.default.bool});var styles={container:_objectSpread(_objectSpread(_objectSpread({},progressStyles.flex),progressStyles.font),{},{color:_color.default.charcoal,":hover":{cursor:"pointer"},textAlign:"center",height:"100%",padding:"0px 10px"}),highlight:{backgroundColor:_color.default.teal,color:_color.default.white,fontSize:18},icon:{paddingRight:5}};exports.unitTestExports={LessonArrow},exports.default=(0,_radium.default)(ProgressTableLessonNumber)},"./src/templates/sectionProgress/progressTables/ProgressTableLevelBubble.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_types=__webpack_require__("./src/templates/feedback/types.js"),_BubbleBadge=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/BubbleBadge.jsx")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_CachedElement=_interopRequireDefault(__webpack_require__("./src/util/CachedElement.jsx")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressTableLevelBubble=exports.default=function(_React$PureComponent){function ProgressTableLevelBubble(props){var _this;return(_this=_React$PureComponent.call(this,props)||this).createBubbleElement=_this.createBubbleElement.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableLevelBubble,_React$PureComponent);var _proto=ProgressTableLevelBubble.prototype;return _proto.render=function render(){return _react.default.createElement(_BubbleFactory.BubbleLink,{url:this.props.url},_react.default.createElement(_CachedElement.default,{elementType:"BasicBubble",cacheKey:this.getCacheKey(),createElement:this.createBubbleElement}))},_proto.shouldShowKeepWorkingBadge=function shouldShowKeepWorkingBadge(){return[_types.ReviewStates.keepWorking,_types.ReviewStates.awaitingReview].includes(this.props.reviewState)},_proto.createBubbleElement=function createBubbleElement(){var _this$props=this.props,levelStatus=_this$props.levelStatus,levelKind=_this$props.levelKind,isLocked=_this$props.isLocked,isUnplugged=_this$props.isUnplugged,isConcept=_this$props.isConcept,isBonus=_this$props.isBonus,isPaired=_this$props.isPaired,title=_this$props.title,bubbleSize=_this$props.bubbleSize,content=(0,_BubbleFactory.getBubbleContent)(isLocked,isUnplugged,isBonus,isPaired,title,bubbleSize);return this.renderBasicBubble((0,_BubbleFactory.getBubbleShape)(isUnplugged,isConcept),bubbleSize,(0,_progressStyles.levelProgressStyle)(levelStatus,levelKind),content,this.shouldShowKeepWorkingBadge())},_proto.renderBasicBubble=function renderBasicBubble(shape,size,progressStyle,content,showKeepWorkingBadge){return _react.default.createElement(_BubbleFactory.BasicBubble,{shape,size,progressStyle,classNames:(0,_BubbleFactory.getBubbleClassNames)(!0)},content,showKeepWorkingBadge&&_react.default.createElement(_BubbleBadge.default,{badgeType:_BubbleBadge.BadgeType.keepWorking,bubbleSize:size,bubbleShape:shape}))},_proto.getCacheKey=function getCacheKey(){var _this$props2=this.props,isLocked=_this$props2.isLocked,levelStatus=_this$props2.levelStatus,levelKind=_this$props2.levelKind,isUnplugged=_this$props2.isUnplugged,isConcept=_this$props2.isConcept,isBonus=_this$props2.isBonus,isPaired=_this$props2.isPaired,title=_this$props2.title,bubbleSize=_this$props2.bubbleSize,statusString="sts=".concat(levelStatus);if(levelKind===_sharedConstants.LevelKind.assessment&&(statusString="asmt:".concat(statusString)),bubbleSize===_BubbleFactory.BubbleSize.letter){var badge=this.shouldShowKeepWorkingBadge()?"&bdg":"";return"ltr:ttl=".concat(title,"&").concat(statusString).concat(badge)}if(isUnplugged)return"unp:".concat(statusString);var shapeString="shp=".concat((0,_BubbleFactory.getBubbleShape)(isUnplugged,isConcept)),strings=[isLocked?"lkd:":isPaired?"prd:":isBonus?"bns:":title?"ttl=".concat(title):null,shapeString,statusString];return this.shouldShowKeepWorkingBadge()&&strings.push("bdg"),strings.join("&")},ProgressTableLevelBubble}(_react.default.PureComponent);_defineProperty(ProgressTableLevelBubble,"propTypes",{levelStatus:_propTypes.default.string,levelKind:_propTypes.default.string,isLocked:_propTypes.default.bool,isUnplugged:_propTypes.default.bool,isConcept:_propTypes.default.bool,isBonus:_propTypes.default.bool,isPaired:_propTypes.default.bool,bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired,title:_propTypes.default.string,url:_propTypes.default.string,reviewState:_propTypes.default.oneOf(Object.keys(_types.ReviewStates))}),_defineProperty(ProgressTableLevelBubble,"defaultProps",{bubbleSize:_BubbleFactory.BubbleSize.full}),module.exports=exports.default},"./src/templates/sectionProgress/progressTables/ProgressTableLevelIconSet.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=ProgressTableLevelIconSet;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_ProgressTableLevelBubble=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableLevelBubble.jsx")),_ProgressTableLevelSpacer=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableLevelSpacer.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var styles={icon:{color:_color.default.charcoal,fontSize:20},unpluggedPlaceholderContainer:{height:0,opacity:0}},placeholderUnpluggedBubble=_react.default.createElement("div",{style:styles.unpluggedPlaceholderContainer},_react.default.createElement("div",null,_react.default.createElement(_ProgressTableLevelBubble.default,{levelStatus:_sharedConstants.LevelStatus.not_tried,isUnplugged:!0,isDisabled:!0,url:""})));function LevelIcon(_ref){var icon=_ref.icon,isUnplugged=_ref.isUnplugged;return isUnplugged?_react.default.createElement("span",null,isUnplugged&&placeholderUnpluggedBubble,_react.default.createElement(_FontAwesome.default,{icon})):_react.default.createElement(_FontAwesome.default,{icon})}function ProgressTableLevelIconSet(_ref2){var items=_ref2.levels.map((function(level){var _level$sublevels;return{node:_react.default.createElement(LevelIcon,{icon:(0,_progressHelpers.getIconForLevel)(level,!0),isUnplugged:level.isUnplugged}),nodeStyle:styles.icon,sublevelCount:null===(_level$sublevels=level.sublevels)||void 0===_level$sublevels?void 0:_level$sublevels.length}}));return _react.default.createElement(_ProgressTableLevelSpacer.default,{items})}LevelIcon.propTypes={icon:_propTypes.default.string.isRequired,isUnplugged:_propTypes.default.bool},ProgressTableLevelIconSet.propTypes={levels:_propTypes.default.arrayOf(_progressTypes.levelType)},module.exports=exports.default},"./src/templates/sectionProgress/progressTables/ProgressTableLevelSpacer.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=ProgressTableLevelSpacer,exports.unitTestExports=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),progressStyles=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/progressStyles.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var styles={node:_objectSpread(_objectSpread({},progressStyles.inlineBlock),{},{minWidth:_BubbleFactory.bubbleContainerWidths[_BubbleFactory.BubbleSize.full],textAlign:"center"})},levelSpacerItemShape=_propTypes.default.shape({node:_propTypes.default.node.isRequired,nodeStyle:_propTypes.default.object,sublevelCount:_propTypes.default.number});function SublevelSpacer(_ref){var sublevelCount=_ref.sublevelCount;return _react.default.createElement("span",{style:{width:sublevelCount*_BubbleFactory.bubbleContainerWidths[_BubbleFactory.BubbleSize.letter]}})}function ProgressTableLevelSpacer(_ref2){var items=_ref2.items;return _react.default.createElement("span",{className:"cell-content",style:progressStyles.flex},items.map((function(item,i){return _react.default.createElement("span",{key:"spacer-".concat(i),style:progressStyles.flexBetween},_react.default.createElement("span",{style:_objectSpread(_objectSpread({},styles.node),item.nodeStyle)},item.node),item.sublevelCount&&_react.default.createElement(SublevelSpacer,{sublevelCount:item.sublevelCount}))})))}SublevelSpacer.propTypes={sublevelCount:_propTypes.default.number.isRequired},ProgressTableLevelSpacer.propTypes={items:_propTypes.default.arrayOf(levelSpacerItemShape).isRequired};exports.unitTestExports={SublevelSpacer}},"./src/templates/sectionProgress/progressTables/ProgressTableStudentList.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),Sticky=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-sticky/dist/index.js")),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),Virtualized=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-virtualized/dist/index.js")),_urlHelpers=__webpack_require__("./src/templates/teacherDashboard/urlHelpers.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_ProgressTableStudentName=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableStudentName.jsx")),_progressTableConstantsModule=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/progress-table-constants.module.scss"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_require__("./src/templates/sectionProgress/progressTables/progressTableStyles.scss");var ProgressTableStudentList=exports.default=function(_React$Component){function ProgressTableStudentList(props){var _this;return _defineProperty(_this=_React$Component.call(this,props)||this,"header",null),_defineProperty(_this,"body",null),_defineProperty(_this,"bodyComponent",null),_this.cellFormatter=_this.cellFormatter.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableStudentList,_React$Component);var _proto=ProgressTableStudentList.prototype;return _proto.cellFormatter=function cellFormatter(_,_ref){var rowData=_ref.rowData;return this.rowTypeFormatter(rowData)},_proto.rowTypeFormatter=function rowTypeFormatter(rowData){switch(rowData.expansionIndex){case 0:return this.studentNameFormatter(rowData);case 1:return this.expandedCellFormatter(_locale.default.timeSpentMins());case 2:return this.expandedCellFormatter(_locale.default.lastUpdatedTitle());default:return null}},_proto.studentNameFormatter=function studentNameFormatter(rowData){var _this$props=this.props,sectionId=_this$props.sectionId,scriptData=_this$props.scriptData,studentTimestamps=_this$props.studentTimestamps,studentUrl=(0,_urlHelpers.scriptUrlForStudent)(sectionId,scriptData.name,rowData.student.id),fullName=rowData.student.familyName?"".concat(rowData.student.name," ").concat(rowData.student.familyName):rowData.student.name;return _react.default.createElement(_ProgressTableStudentName.default,{name:fullName,studentId:rowData.student.id,sectionId,scriptId:scriptData.id,lastTimestamp:studentTimestamps[rowData.student.id],studentUrl,onToggleExpand:this.props.onToggleRow,isExpanded:rowData.isExpanded})},_proto.expandedCellFormatter=function expandedCellFormatter(text){return _react.default.createElement("span",{style:styles.detailText},text)},_proto.render=function render(){var _this2=this;return _react.default.createElement(Table.Provider,{renderers:{body:{wrapper:Virtualized.BodyWrapper,row:Virtualized.BodyRow}},columns:[{property:"name",cell:{formatters:[this.cellFormatter]}}]},_react.default.createElement(Sticky.Header,{ref:function ref(r){return _this2.header=r&&r.getRef()},tableBody:this.body,headerRows:this.props.headers.map((function(header){return[{header:{label:header,props:{className:"content"}}}]}))}),_react.default.createElement(Virtualized.Body,{rows:this.props.rows,onRow:this.props.onRow,rowKey:"id",style:{overflowX:"scroll",overflowY:"hidden",maxHeight:parseInt(_progressTableConstantsModule.default.MAX_BODY_HEIGHT)},ref:function ref(r){_this2.body=r&&r.getRef(),_this2.bodyComponent=r},tableHeader:this.header}))},ProgressTableStudentList}(_react.default.Component);_defineProperty(ProgressTableStudentList,"propTypes",{rows:_propTypes.default.arrayOf(_sectionProgressConstants.studentTableRowType).isRequired,onRow:_propTypes.default.func.isRequired,sectionId:_propTypes.default.number.isRequired,scriptData:_sectionProgressConstants.unitDataPropType.isRequired,headers:_propTypes.default.arrayOf(_propTypes.default.string).isRequired,studentTimestamps:_propTypes.default.object,onToggleRow:_propTypes.default.func.isRequired});var styles={detailText:{display:"flex",justifyContent:"flex-end",alignItems:"center",height:"100%",paddingInlineEnd:"10px"}};module.exports=exports.default},"./src/templates/sectionProgress/progressTables/ProgressTableStudentName.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _moment=_interopRequireDefault(__webpack_require__("./node_modules/moment/moment.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_CollapserIcon=_interopRequireDefault(__webpack_require__("./src/templates/CollapserIcon.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_React$PureComponent){function ProgressTableStudentName(props){var _this;return(_this=_React$PureComponent.call(this,props)||this).toggleExpand=_this.toggleExpand.bind(_this),_this.recordStudentNameClick=_this.recordStudentNameClick.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableStudentName,_React$PureComponent);var _proto=ProgressTableStudentName.prototype;return _proto.toggleExpand=function toggleExpand(){this.props.onToggleExpand(this.props.studentId)},_proto.recordStudentNameClick=function recordStudentNameClick(){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"go_to_student",data_json:JSON.stringify({section_id:this.props.sectionId,script_id:this.props.scriptId,student_id:this.props.studentId})},{includeUserId:!0})},_proto.tooltipId=function tooltipId(){return"tooltipIdForStudent".concat(this.props.studentId)},_proto.renderTooltip=function renderTooltip(){var id=this.tooltipId(),timestamp=this.props.lastTimestamp?_moment.default.unix(this.props.lastTimestamp).calendar():_locale.default.none();return _react.default.createElement(_reactTooltip.default,{id,key:id,role:"tooltip",wrapper:"span",effect:"solid"},_react.default.createElement("span",{style:styles.tooltip},_locale.default.lastProgress(),_react.default.createElement("br",null),timestamp))},_proto.render=function render(){var _this$props=this.props,name=_this$props.name,studentUrl=_this$props.studentUrl,isExpanded=_this$props.isExpanded,tooltipId=this.tooltipId();return _react.default.createElement("div",{className:"content","data-tip":!0,"data-for":tooltipId,"aria-describedby":tooltipId},_react.default.createElement(_CollapserIcon.default,{isCollapsed:!isExpanded,onClick:this.toggleExpand,collapsedIconClass:"fa-caret-right",expandedIconClass:"fa-caret-down",style:styles.collapser}),this.renderTooltip(),_react.default.createElement("a",{style:styles.link,href:studentUrl,onClick:this.recordStudentNameClick},name))},ProgressTableStudentName}(_react.default.PureComponent),"propTypes",{name:_propTypes.default.string.isRequired,studentId:_propTypes.default.number.isRequired,sectionId:_propTypes.default.number.isRequired,scriptId:_propTypes.default.number,lastTimestamp:_propTypes.default.number,studentUrl:_propTypes.default.string.isRequired,onToggleExpand:_propTypes.default.func.isRequired,isExpanded:_propTypes.default.bool.isRequired});var styles={link:{color:_color.default.teal,verticalAlign:"middle"},tooltip:{display:"flex",textAlign:"center"},collapser:{paddingRight:8,fontSize:20,verticalAlign:"middle",width:11,boxSizing:"content-box",textAlign:"left"}};module.exports=exports.default},"./src/templates/sectionProgress/progressTables/ProgressTableSummaryCell.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitTestExports=exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function BorderedBox(_ref){var borderColor=_ref.borderColor,onClick=_ref.onClick,children=_ref.children,boxStyle=_objectSpread(_objectSpread({},styles.container),{},{borderColor});return _react.default.createElement("div",{style:boxStyle,onClick,className:"uitest-summary-cell"},children)}BorderedBox.propTypes={borderColor:_propTypes.default.string.isRequired,onClick:_propTypes.default.func,children:_propTypes.default.node},_defineProperty(exports.default=function(_React$Component){function ProgressTableSummaryCell(){return _React$Component.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableSummaryCell,_React$Component);var _proto=ProgressTableSummaryCell.prototype;return _proto.heightForPercent=function heightForPercent(percent){return"".concat(percent,"%")},_proto.render=function render(){var _this$props=this.props,studentLessonProgress=_this$props.studentLessonProgress,isAssessmentLesson=_this$props.isAssessmentLesson,onSelectDetailView=_this$props.onSelectDetailView;if(!studentLessonProgress)return _react.default.createElement(BorderedBox,{borderColor:_color.default.light_gray,onClick:onSelectDetailView});var borderColor=isAssessmentLesson?_color.default.level_submitted:_color.default.level_perfect,incompleteStyle={backgroundColor:_color.default.level_not_tried,height:this.heightForPercent(studentLessonProgress.incompletePercent)},imperfectStyle={backgroundColor:_color.default.level_passed,height:this.heightForPercent(studentLessonProgress.imperfectPercent)},completedStyle={backgroundColor:isAssessmentLesson?_color.default.level_submitted:_color.default.level_perfect,height:this.heightForPercent(studentLessonProgress.completedPercent)};return _react.default.createElement(BorderedBox,{borderColor,onClick:onSelectDetailView},_react.default.createElement("div",{style:incompleteStyle}),_react.default.createElement("div",{style:imperfectStyle}),_react.default.createElement("div",{style:completedStyle}))},ProgressTableSummaryCell}(_react.default.Component),"propTypes",{studentId:_propTypes.default.number.isRequired,studentLessonProgress:_progressTypes.studentLessonProgressType,isAssessmentLesson:_propTypes.default.bool,onSelectDetailView:_propTypes.default.func});var styles={container:{height:20,margin:10,boxSizing:"border-box",borderWidth:1,borderStyle:"solid"}};exports.unitTestExports={BorderedBox}},"./src/templates/sectionProgress/progressTables/ProgressTableView.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressTableView=void 0;var _classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_moment=_interopRequireDefault(__webpack_require__("./node_modules/moment/moment.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_ProgressLegend=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressLegend.jsx")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_SummaryViewLegend=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/SummaryViewLegend.jsx")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_sectionProgressRedux=__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js"),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js"),_stringKeyComparator=_interopRequireDefault(__webpack_require__("./src/util/stringKeyComparator.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_ProgressTableContentView=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableContentView.jsx")),_progressTableHelpers=__webpack_require__("./src/templates/sectionProgress/progressTables/progressTableHelpers.js"),_ProgressTableStudentList=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableStudentList.jsx")),_progressTableConstantsModule=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/progress-table-constants.module.scss"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function idForExpansionIndex(studentId,index){return"".concat(studentId,".").concat(index)}__webpack_require__("./src/templates/sectionProgress/progressTables/progressTableStyles.scss");var ProgressTableView=function(_React$Component){function ProgressTableView(props){var _this;_defineProperty(_this=_React$Component.call(this,props)||this,"studentList",null),_defineProperty(_this,"contentView",null),_defineProperty(_this,"scrollTop",0),_this.onScroll=_this.onScroll.bind(_this),_this.onToggleRow=_this.onToggleRow.bind(_this),_this.recordToggleRow=_this.recordToggleRow.bind(_this),_this.summaryCellFormatters=(0,_progressTableHelpers.getSummaryCellFormatters)(props.lessonProgressByStudent,props.onClickLesson),_this.detailCellFormatters=(0,_progressTableHelpers.getDetailCellFormatters)(props.levelProgressByStudent,props.sectionId);var sortedStudents=props.isSortedByFamilyName?props.students.sort((0,_stringKeyComparator.default)(["familyName","name"])):props.students.sort((0,_stringKeyComparator.default)(["name","familyName"]));return _this.state={rows:sortedStudents.map((function(student,index){return{id:idForExpansionIndex(student.id,0),student,expansionIndex:0,isExpanded:!1,useDarkBackground:index%2==1}}))},props.localeCode&&_moment.default.locale(props.localeCode),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableView,_React$Component);var _proto=ProgressTableView.prototype;return _proto.componentDidMount=function componentDidMount(){this.setRowsToRender()},_proto.componentDidUpdate=function componentDidUpdate(prevProps){prevProps.currentView!==this.props.currentView&&this.setRowsToRender(),prevProps.isSortedByFamilyName!==this.props.isSortedByFamilyName&&this.sortTableRows()},_proto.sortTableRows=function sortTableRows(){var comparator=function comparator(keys){return function(a,b){return(0,_stringKeyComparator.default)(keys)(a.student,b.student)}},sortedRows=this.props.isSortedByFamilyName?this.state.rows.sort(comparator(["familyName","name"])):this.state.rows.sort(comparator(["name","familyName"])),darkBackground=!0;this.setState({rows:sortedRows.map((function(row){return 0===row.expansionIndex&&(darkBackground=!darkBackground),_objectSpread(_objectSpread({},row),{},{useDarkBackground:darkBackground})}))})},_proto.setRowsToRender=function setRowsToRender(){var _this$studentList,_this$contentView,initialRows=parseInt(_progressTableConstantsModule.default.MAX_ROWS);null===(_this$studentList=this.studentList)||void 0===_this$studentList||_this$studentList.bodyComponent.setState({amountOfRowsToRender:initialRows}),null===(_this$contentView=this.contentView)||void 0===_this$contentView||_this$contentView.bodyComponent.setState({amountOfRowsToRender:initialRows}),this.syncScrollTop()},_proto.onScroll=function onScroll(e){this.studentList.body.scrollTop=e.target.scrollTop,this.contentView.header.scrollLeft=e.target.scrollLeft,this.scrollTop=e.target.scrollTop,this.syncScrollTop()},_proto.syncScrollTop=function syncScrollTop(){var _this2=this;clearTimeout(this.timeout),this.timeout=setTimeout((function(){var _this2$contentView,_this2$studentList;null!==(_this2$contentView=_this2.contentView)&&void 0!==_this2$contentView&&_this2$contentView.bodyComponent&&_this2.setScrollState(_this2.contentView.bodyComponent),null!==(_this2$studentList=_this2.studentList)&&void 0!==_this2$studentList&&_this2$studentList.bodyComponent&&_this2.setScrollState(_this2.studentList.bodyComponent)}),200)},_proto.setScrollState=function setScrollState(table){table.scrollTop=this.scrollTop,table.ref.scrollTop=this.scrollTop,table.setState(table.calculateRows(table.props))},_proto.needsContentHeaderGutter=function needsContentHeaderGutter(){return this.props.students.length>parseInt(_progressTableConstantsModule.default.MAX_ROWS)},_proto.onToggleRow=function onToggleRow(studentId){var rowIndex=this.state.rows.findIndex((function(row){return row.student.id===studentId})),rowData=this.state.rows[rowIndex];rowData.isExpanded?this.collapseDetailRows(rowData,rowIndex):this.expandDetailRows(rowData,rowIndex),this.recordToggleRow(!rowData.isExpanded,rowData.student.id),this.syncScrollTop()},_proto.recordToggleRow=function recordToggleRow(expanding,studentId){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"time_spent",event:"toggle_details",data_json:JSON.stringify({student_id:studentId,section_id:this.props.sectionId,visible:expanding})},{includeUserId:!0})},_proto.expandDetailRows=function expandDetailRows(rowData,rowIndex){for(var detailRows=[],i=1;i<=this.numDetailRowsPerStudent();i++)detailRows.push({id:idForExpansionIndex(rowData.student.id,i),student:rowData.student,expansionIndex:i,useDarkBackground:rowData.useDarkBackground});var rows=_toConsumableArray(this.state.rows);rows[rowIndex].isExpanded=!0,rows.splice.apply(rows,[rowIndex+1,0].concat(detailRows)),this.setState({rows})},_proto.numDetailRowsPerStudent=function numDetailRowsPerStudent(){return(this.props.currentView===_sectionProgressConstants.ViewType.DETAIL?this.detailCellFormatters.length:this.summaryCellFormatters.length)-1},_proto.collapseDetailRows=function collapseDetailRows(rowData,rowIndex){var rows=this.state.rows.filter((function(row){return row.student.id!==rowData.student.id||0===row.expansionIndex}));rows[rowIndex].isExpanded=!1,this.setState({rows})},_proto.onRow=function onRow(row){return{className:(0,_classnames.default)({"dark-row":row.useDarkBackground,"primary-row":0===row.expansionIndex,"expanded-row":row.expansionIndex>0,"first-expanded-row":1===row.expansionIndex})}},_proto.detailContentViewProps=function detailContentViewProps(){return{lessonCellFormatters:this.detailCellFormatters,extraHeaderFormatters:[(0,_progressTableHelpers.getLevelIconHeaderFormatter)(this.props.scriptData)],includeHeaderArrows:!0}},_proto.summaryContentViewProps=function summaryContentViewProps(){return{columnWidths:new Array(this.props.scriptData.lessons.length).fill(parseInt(_progressTableConstantsModule.default.MIN_COLUMN_WIDTH)),lessonCellFormatters:this.summaryCellFormatters,includeHeaderArrows:!1}},_proto.render=function render(){var _this3=this,isDetailView=this.props.currentView===_sectionProgressConstants.ViewType.DETAIL,studentListHeaders=[_locale.default.lesson()];isDetailView&&studentListHeaders.push(_locale.default.levelType());var contentViewProps=isDetailView?this.detailContentViewProps():this.summaryContentViewProps(),key=this.props.currentView;return _react.default.createElement("div",null,_react.default.createElement("div",{style:styles.container,className:"progress-table"},_react.default.createElement("div",{style:styles.studentList,className:"student-list"},_react.default.createElement(_ProgressTableStudentList.default,{key,ref:function ref(r){return _this3.studentList=r},headers:studentListHeaders,rows:this.state.rows,onRow:this.onRow,sectionId:this.props.sectionId,scriptData:this.props.scriptData,studentTimestamps:this.props.studentTimestamps,localeCode:this.props.localeCode,onToggleRow:this.onToggleRow})),_react.default.createElement("div",{style:styles.contentView,className:"content-view"},_react.default.createElement(_ProgressTableContentView.default,_extends({key,ref:function ref(r){return _this3.contentView=r},rows:this.state.rows,onRow:this.onRow,needsGutter:this.needsContentHeaderGutter(),onScroll:this.onScroll,scriptData:this.props.scriptData,lessonOfInterest:this.props.lessonOfInterest,onClickLesson:this.props.onClickLesson},contentViewProps)))),this.props.currentView===_sectionProgressConstants.ViewType.DETAIL?_react.default.createElement(_ProgressLegend.default,{includeCsfColumn:this.props.scriptData.csf,includeReviewStates:(0,_progressHelpers.shouldShowReviewStates)(this.props.scriptData),includeProgressNotApplicable:!0}):_react.default.createElement(_SummaryViewLegend.default,{showCSFProgressBox:this.props.scriptData.csf}))},ProgressTableView}(_react.default.Component);_defineProperty(ProgressTableView,"propTypes",{currentView:_propTypes.default.oneOf([_sectionProgressConstants.ViewType.SUMMARY,_sectionProgressConstants.ViewType.DETAIL]),sectionId:_propTypes.default.number.isRequired,students:_propTypes.default.arrayOf(_teacherSectionsRedux.studentShape),scriptData:_sectionProgressConstants.unitDataPropType.isRequired,lessonProgressByStudent:_propTypes.default.objectOf(_propTypes.default.objectOf(_progressTypes.studentLessonProgressType)).isRequired,levelProgressByStudent:_propTypes.default.objectOf(_propTypes.default.objectOf(_progressTypes.studentLevelProgressType)).isRequired,onClickLesson:_propTypes.default.func.isRequired,lessonOfInterest:_propTypes.default.number.isRequired,studentTimestamps:_propTypes.default.object.isRequired,localeCode:_propTypes.default.string,isSortedByFamilyName:_propTypes.default.bool});var styles={container:{width:parseInt(_progressTableConstantsModule.default.TABLE_WIDTH)},studentList:{display:"inline-block",verticalAlign:"top"},contentView:{display:"inline-block",width:parseInt(_progressTableConstantsModule.default.CONTENT_VIEW_WIDTH)}};exports.UnconnectedProgressTableView=ProgressTableView,exports.default=(0,_reactRedux.connect)((function(state){return{isSortedByFamilyName:state.currentUser.isSortedByFamilyName,sectionId:state.teacherSections.selectedSectionId,students:state.teacherSections.selectedStudents,scriptData:(0,_sectionProgressRedux.getCurrentUnitData)(state),lessonProgressByStudent:state.sectionProgress.studentLessonProgressByUnit[state.unitSelection.scriptId],levelProgressByStudent:state.sectionProgress.studentLevelProgressByUnit[state.unitSelection.scriptId],lessonOfInterest:state.sectionProgress.lessonOfInterest,studentTimestamps:state.sectionProgress.studentLastUpdateByUnit[state.unitSelection.scriptId],localeCode:state.locales.localeCode}}),(function(dispatch){return{onClickLesson:function onClickLesson(lessonPosition){dispatch((0,_sectionProgressRedux.jumpToLessonDetails)(lessonPosition))}}}))(ProgressTableView)},"./src/templates/sectionProgress/progressTables/SummaryViewLegend.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_ProgressBox=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/ProgressBox.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}_defineProperty(exports.default=function(_Component){function SummaryViewLegend(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SummaryViewLegend,_Component),SummaryViewLegend.prototype.render=function render(){var showCSFProgressBox=this.props.showCSFProgressBox,headerColSpan=showCSFProgressBox?2:3;return _react.default.createElement("div",{style:{marginTop:60}},_react.default.createElement("table",null,_react.default.createElement("thead",null,_react.default.createElement("tr",null,_react.default.createElement("td",{colSpan:headerColSpan},_react.default.createElement("h3",{style:styles.header},_locale.default.lessonStatus())),showCSFProgressBox&&_react.default.createElement("td",{colSpan:2},_react.default.createElement("h3",{style:styles.header},_locale.default.completionStatus()))),_react.default.createElement("tr",null,_react.default.createElement("th",{style:styles.th},_locale.default.progress(),_react.default.createElement("br",null),_locale.default.notApplicable()),_react.default.createElement("th",{style:styles.th},_locale.default.notStarted()),_react.default.createElement("th",{style:styles.th},_locale.default.inProgress()),_react.default.createElement("th",{style:styles.th},_locale.default.completed(),showCSFProgressBox&&_react.default.createElement("span",null,_react.default.createElement("br",null),"(".concat(_locale.default.perfect(),")"))),showCSFProgressBox&&_react.default.createElement("th",{style:styles.th},_locale.default.completed(),_react.default.createElement("br",null),"(".concat(_locale.default.tooManyBlocks(),")")))),_react.default.createElement("tbody",null,_react.default.createElement("tr",null,_react.default.createElement("td",{style:styles.td},"—"),_react.default.createElement("td",{style:styles.td},_react.default.createElement(_ProgressBox.default,{style:styles.boxStyle,started:!1,incomplete:20,imperfect:0,perfect:0,lessonIsAllAssessment:!1})),_react.default.createElement("td",{style:styles.td},_react.default.createElement(_ProgressBox.default,{style:styles.boxStyle,started:!0,incomplete:20,imperfect:0,perfect:0,lessonIsAllAssessment:!1})),_react.default.createElement("td",{style:styles.td},_react.default.createElement("div",{style:styles.completedBoxes},_react.default.createElement(_ProgressBox.default,{style:styles.boxStyle,started:!0,incomplete:0,imperfect:0,perfect:20,lessonIsAllAssessment:!1}),_react.default.createElement(_ProgressBox.default,{style:styles.boxStyle,started:!0,incomplete:0,imperfect:0,perfect:20,lessonIsAllAssessment:!0}))),showCSFProgressBox&&_react.default.createElement("td",{style:styles.td},_react.default.createElement(_ProgressBox.default,{style:styles.boxStyle,started:!0,incomplete:0,imperfect:20,perfect:0,lessonIsAllAssessment:!1}))))))},SummaryViewLegend}(_react.Component),"propTypes",{showCSFProgressBox:_propTypes.default.bool});var styles={header:{fontWeight:"bold",color:_color.default.charcoal,textAlign:"center"},th:_objectSpread(_objectSpread({backgroundColor:_color.default.lightest_gray,color:_color.default.charcoal,border:"1px solid ".concat(_color.default.lightest_gray)},_fontConstants.default["main-font-regular"]),{},{fontSize:14,textAlign:"center",padding:15}),td:{border:"1px solid ".concat(_color.default.lightest_gray),padding:15,textAlign:"center"},boxStyle:{margin:"0 auto"},completedBoxes:{display:"flex",flexDirection:"row"}};module.exports=exports.default},"./src/templates/sectionProgress/progressTables/progressTableHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getDetailCellFormatters=function getDetailCellFormatters(levelProgressByStudent,sectionId){return[function mainCellFormatter(lesson,student){return(0,_progressHelpers.lessonHasLevels)(lesson)?_react.default.createElement(_ProgressTableDetailCell.default,{studentId:student.id,sectionId,levels:lesson.levels,studentProgress:levelProgressByStudent[student.id]}):"—"},function timeSpentCellFormatter(lesson,student){if((0,_progressHelpers.lessonHasLevels)(lesson)){var timeSpentItems=detailCellItems(lesson,levelProgressByStudent[student.id],formatTimeSpent);return _react.default.createElement(_ProgressTableLevelSpacer.default,{items:timeSpentItems})}return missingDataFormatter(!0)},function lastUpdatedCellFormatter(lesson,student){if((0,_progressHelpers.lessonHasLevels)(lesson)){var lastUpdatedItems=detailCellItems(lesson,levelProgressByStudent[student.id],formatLastUpdated);return _react.default.createElement(_ProgressTableLevelSpacer.default,{items:lastUpdatedItems})}return missingDataFormatter(!0)}]},exports.getLevelIconHeaderFormatter=function getLevelIconHeaderFormatter(scriptData){return function(_,_ref){var columnIndex=_ref.columnIndex;return _react.default.createElement(_ProgressTableLevelIconSet.default,{levels:scriptData.lessons[columnIndex].levels})}},exports.getSummaryCellFormatters=function getSummaryCellFormatters(lessonProgressByStudent,onClickLesson){return[function mainCellFormatter(lesson,student){return(0,_progressHelpers.lessonHasLevels)(lesson)?_react.default.createElement(_ProgressTableSummaryCell.default,{studentId:student.id,studentLessonProgress:lessonProgressByStudent[student.id][lesson.id],isAssessmentLesson:(0,_progressHelpers.lessonIsAllAssessment)(lesson.levels),onSelectDetailView:function onSelectDetailView(){return onClickLesson(lesson.position)}}):"—"},function timeSpentCellFormatter(lesson,student){if((0,_progressHelpers.lessonHasLevels)(lesson)){var progress=lessonProgressByStudent[student.id][lesson.id];return _react.default.createElement("span",{style:progressStyles.flex},formatTimeSpent(progress))}return missingDataFormatter(!0)},function lastUpdatedCellFormatter(lesson,student){if((0,_progressHelpers.lessonHasLevels)(lesson)){var progress=lessonProgressByStudent[student.id][lesson.id];return _react.default.createElement("span",{style:progressStyles.flex},formatLastUpdated(progress))}return missingDataFormatter(!0)}]},exports.unitTestExports=void 0;var _moment=_interopRequireDefault(__webpack_require__("./node_modules/moment/moment.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),progressStyles=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/progressStyles.js")),_ProgressTableDetailCell=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableDetailCell.jsx")),_ProgressTableLevelIconSet=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableLevelIconSet.jsx")),_ProgressTableLevelSpacer=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableLevelSpacer.jsx")),_ProgressTableSummaryCell=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableSummaryCell.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function detailCellItems(lesson,studentProgress,textFormatter){return lesson.levels.map((function(level){return{node:textFormatter(studentProgress[level.id]),sublevelCount:level.sublevels&&level.sublevels.length}}))}function formatTimeSpent(studentProgress){if(null!=studentProgress&&studentProgress.timeSpent){var minutes=studentProgress.timeSpent/60;return"".concat(Math.ceil(minutes))}return missingDataFormatter(!!studentProgress)}function formatLastUpdated(studentProgress){return null!=studentProgress&&studentProgress.lastTimestamp?_moment.default.unix(studentProgress.lastTimestamp).format("M/D"):missingDataFormatter(!!studentProgress)}function missingDataFormatter(progressNotApplicable){return progressNotApplicable?"-":""}exports.unitTestExports={formatTimeSpent,formatLastUpdated}},"./src/templates/sectionProgress/sectionProgressConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitDataPropType=exports.tooltipIdForStudent=exports.studentTableRowType=exports.scrollbarWidth=exports.ViewType=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");exports.unitDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,csf:_propTypes.default.bool,hasStandards:_propTypes.default.bool,title:_propTypes.default.string,path:_propTypes.default.string,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({levels:_propTypes.default.arrayOf(_propTypes.default.object).isRequired})),family_name:_propTypes.default.string,version_year:_propTypes.default.string,name:_propTypes.default.string}),exports.ViewType={SUMMARY:"summary",DETAIL:"detail",STANDARDS:"standards"},exports.studentTableRowType=_propTypes.default.shape({id:_propTypes.default.string.isRequired,student:_progressTypes.studentType.isRequired,expansionIndex:_propTypes.default.number.isRequired,isExpanded:_propTypes.default.bool,useDarkBackground:_propTypes.default.bool}),exports.tooltipIdForStudent=function tooltipIdForStudent(studentId){return"tooltipIdForStudent".concat(studentId)},exports.scrollbarWidth=function getScrollbarWidth(){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var inner=document.createElement("div");outer.appendChild(inner);var scrollbarWidth=outer.offsetWidth-inner.offsetWidth;return outer.parentNode.removeChild(outer),scrollbarWidth}()},"./src/templates/sectionProgress/sectionProgressRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.collapseMetadataForStudents=exports.addExpandedLesson=exports.addDataByUnit=void 0,exports.default=function sectionProgress(){var _action$level,_action$level$subleve,state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===_unitSelectionRedux.SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:INITIAL_LESSON_OF_INTEREST});if(action.type===SET_CURRENT_VIEW)return _objectSpread(_objectSpread({},state),{},{currentView:action.viewType});if(action.type===START_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!0});if(action.type===FINISH_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!1});if(action.type===START_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!0});if(action.type===FINISH_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!1});if(action.type===SET_LESSON_OF_INTEREST)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:action.lessonOfInterest});if(action.type===ADD_DATA_BY_UNIT)return _objectSpread(_objectSpread({},state),{},{unitDataByUnit:_objectSpread(_objectSpread({},state.unitDataByUnit),action.data.unitDataByUnit),studentLevelProgressByUnit:_objectSpread(_objectSpread({},state.studentLevelProgressByUnit),action.data.studentLevelProgressByUnit),studentLessonProgressByUnit:_objectSpread(_objectSpread({},state.studentLessonProgressByUnit),action.data.studentLessonProgressByUnit),studentLastUpdateByUnit:_objectSpread(_objectSpread({},state.studentLastUpdateByUnit),action.data.studentLastUpdateByUnit)});if(action.type===LOAD_EXPANDED_LESSONS_FROM_LOCAL_STORAGE){var expandedLessonIds=getLocalStorage(action.unitId,action.sectionId);return _objectSpread(_objectSpread({},state),{},{expandedLessonIds:_objectSpread(_objectSpread({},state.expandedLessonIds),{},_defineProperty({},action.sectionId,expandedLessonIds))})}if(action.type===ADD_EXPANDED_LESSON){if(action.lesson.lockable||!(0,_progressHelpers.lessonHasLevels)(action.lesson))return state;_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_V2_LESSON_EXPAND,{sectionId:action.sectionId,lessonId:action.lesson.id});var newSectionExpandedLessonIds=_lodash.default.uniq([].concat(_toConsumableArray(state.expandedLessonIds[action.sectionId]||[]),[action.lesson.id]));return saveExpandedLessonIdsToLocalStorage(action.unitId,action.sectionId,newSectionExpandedLessonIds),_objectSpread(_objectSpread({},state),{},{expandedLessonIds:_objectSpread(_objectSpread({},state.expandedLessonIds),{},_defineProperty({},action.sectionId,newSectionExpandedLessonIds))})}if(action.type===REMOVE_EXPANDED_LESSON){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_V2_LESSON_COLLAPSE,{sectionId:action.sectionId,lessonId:action.lessonId});var _newSectionExpandedLessonIds=state.expandedLessonIds[action.sectionId].filter((function(lessonId){return lessonId!==action.lessonId}));return saveExpandedLessonIdsToLocalStorage(action.unitId,action.sectionId,_newSectionExpandedLessonIds),_objectSpread(_objectSpread({},state),{},{expandedLessonIds:_objectSpread(_objectSpread({},state.expandedLessonIds),{},_defineProperty({},action.sectionId,_newSectionExpandedLessonIds))})}if(action.type===TOGGLE_EXPANDED_CHOICE_LEVEL){if(state.expandedChoiceLevelIds.includes(action.level.id))return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_V2_COLLAPSE_CHOICE_LEVEL,{sectionId:action.sectionId,levelId:action.level.id}),_objectSpread(_objectSpread({},state),{},{expandedChoiceLevelIds:state.expandedChoiceLevelIds.filter((function(l){return l!==action.level.id}))});if((null===(_action$level=action.level)||void 0===_action$level||null===(_action$level$subleve=_action$level.sublevels)||void 0===_action$level$subleve?void 0:_action$level$subleve.length)>0)return _AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.PROGRESS_V2_EXPAND_CHOICE_LEVEL,{sectionId:action.sectionId,levelId:action.level.id}),_objectSpread(_objectSpread({},state),{},{expandedChoiceLevelIds:[].concat(_toConsumableArray(state.expandedChoiceLevelIds),[action.level.id])})}if(action.type===EXPAND_METADATA_FOR_STUDENTS)return _objectSpread(_objectSpread({},state),{},{expandedMetadataStudentIds:_lodash.default.uniq([].concat(_toConsumableArray(state.expandedMetadataStudentIds),_toConsumableArray(action.studentIds)))});if(action.type===COLLAPSE_METADATA_FOR_STUDENTS)return _objectSpread(_objectSpread({},state),{},{expandedMetadataStudentIds:state.expandedMetadataStudentIds.filter((function(studentId){return!action.studentIds.includes(studentId)}))});return state},exports.toggleExpandedChoiceLevel=exports.startRefreshingProgress=exports.startLoadingProgress=exports.setLessonOfInterest=exports.setCurrentView=exports.removeExpandedLesson=exports.loadExpandedLessonsFromLocalStorage=exports.jumpToLessonDetails=exports.getCurrentUnitData=exports.finishRefreshingProgress=exports.finishLoadingProgress=exports.expandMetadataForStudents=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_unitSelectionRedux=__webpack_require__("./src/redux/unitSelectionRedux.js"),_utils=__webpack_require__("./src/utils.js"),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_CURRENT_VIEW="sectionProgress/SET_CURRENT_VIEW",SET_LESSON_OF_INTEREST="sectionProgress/SET_LESSON_OF_INTEREST",START_LOADING_PROGRESS="sectionProgress/START_LOADING_PROGRESS",FINISH_LOADING_PROGRESS="sectionProgress/FINISH_LOADING_PROGRESS",START_REFRESHING_PROGRESS="sectionProgress/START_REFRESHING_PROGRESS",FINISH_REFRESHING_PROGRESS="sectionProgress/FINISH_REFRESHING_PROGRESS",ADD_DATA_BY_UNIT="sectionProgress/ADD_DATA_BY_UNIT",LOAD_EXPANDED_LESSONS_FROM_LOCAL_STORAGE="sectionProgress/LOAD_EXPANDED_LESSONS_FROM_LOCAL_STORAGE",ADD_EXPANDED_LESSON="sectionProgress/ADD_EXPANDED_LESSON",REMOVE_EXPANDED_LESSON="sectionProgress/REMOVE_EXPANDED_LESSON",TOGGLE_EXPANDED_CHOICE_LEVEL="sectionProgress/TOGGLE_EXPANDED_CHOICE_LEVEL",EXPAND_METADATA_FOR_STUDENTS="sectionProgress/EXPAND_METADATA_FOR_STUDENTS",COLLAPSE_METADATA_FOR_STUDENTS="sectionProgress/COLLAPSE_METADATA_FOR_STUDENTS",setLessonOfInterest=(exports.startLoadingProgress=function startLoadingProgress(){return{type:START_LOADING_PROGRESS}},exports.finishLoadingProgress=function finishLoadingProgress(){return{type:FINISH_LOADING_PROGRESS}},exports.startRefreshingProgress=function startRefreshingProgress(){return{type:START_REFRESHING_PROGRESS}},exports.finishRefreshingProgress=function finishRefreshingProgress(){return{type:FINISH_REFRESHING_PROGRESS}},exports.setLessonOfInterest=function setLessonOfInterest(lessonOfInterest){return{type:SET_LESSON_OF_INTEREST,lessonOfInterest}}),setCurrentView=exports.setCurrentView=function setCurrentView(viewType){return{type:SET_CURRENT_VIEW,viewType}},INITIAL_LESSON_OF_INTEREST=(exports.addDataByUnit=function addDataByUnit(data){return{type:ADD_DATA_BY_UNIT,data}},exports.loadExpandedLessonsFromLocalStorage=function loadExpandedLessonsFromLocalStorage(unitId,sectionId){return{type:LOAD_EXPANDED_LESSONS_FROM_LOCAL_STORAGE,unitId,sectionId}},exports.addExpandedLesson=function addExpandedLesson(unitId,sectionId,lesson){return{type:ADD_EXPANDED_LESSON,unitId,sectionId,lesson}},exports.removeExpandedLesson=function removeExpandedLesson(unitId,sectionId,lessonId){return{type:REMOVE_EXPANDED_LESSON,unitId,sectionId,lessonId}},exports.toggleExpandedChoiceLevel=function toggleExpandedChoiceLevel(sectionId,level){return{type:TOGGLE_EXPANDED_CHOICE_LEVEL,sectionId,level}},exports.expandMetadataForStudents=function expandMetadataForStudents(studentIds){return{type:EXPAND_METADATA_FOR_STUDENTS,studentIds}},exports.collapseMetadataForStudents=function collapseMetadataForStudents(studentIds){return{type:COLLAPSE_METADATA_FOR_STUDENTS,studentIds}},1),initialState={section:{},currentView:_sectionProgressConstants.ViewType.SUMMARY,unitDataByUnit:{},studentLevelProgressByUnit:{},studentLessonProgressByUnit:{},studentLastUpdateByUnit:{},lessonOfInterest:INITIAL_LESSON_OF_INTEREST,isLoadingProgress:!1,isRefreshingProgress:!1,expandedLessonIds:{},expandedChoiceLevelIds:[],expandedMetadataStudentIds:[]};exports.jumpToLessonDetails=function jumpToLessonDetails(lessonOfInterest){return function(dispatch,getState){var state=getState();dispatch(setLessonOfInterest(lessonOfInterest)),dispatch(setCurrentView(_sectionProgressConstants.ViewType.DETAIL)),_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"view_change_toggle",data_json:JSON.stringify({section_id:state.teacherSections.selectedSectionId,old_view:_sectionProgressConstants.ViewType.SUMMARY,new_view:_sectionProgressConstants.ViewType.DETAIL,script_id:state.unitSelection.scriptId})},{includeUserId:!0})}},exports.getCurrentUnitData=function getCurrentUnitData(state){return state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId]};var getExpandedLessonLocalStorageString=function getExpandedLessonLocalStorageString(unitId,sectionId){return"expandedLessonProgressV2-".concat(unitId,"-").concat(sectionId)},saveExpandedLessonIdsToLocalStorage=function saveExpandedLessonIdsToLocalStorage(unitId,sectionId,lessonIds){(0,_utils.trySetLocalStorage)(getExpandedLessonLocalStorageString(unitId,sectionId),JSON.stringify(lessonIds))},getLocalStorage=function getLocalStorage(unitId,sectionId){try{return JSON.parse((0,_utils.tryGetLocalStorage)(getExpandedLessonLocalStorageString(unitId,sectionId),[]))||[]}catch(e){return[]}}},"./src/templates/sectionProgress/sectionProgressTestHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.buildSectionProgress=buildSectionProgress,exports.createStore=function createStore(numStudents,numLessons){var studentList=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,scriptData=getScriptData(numLessons),section={id:11,script:scriptData,students:[],lessonExtras:!1};if(null===studentList)for(var i=0;i<numStudents;i++)section.students.push({id:i,name:"Student"+i+" Long Lastname"});else section.students=function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(studentList);try{(0,_redux.registerReducers)({sectionProgress:_sectionProgressRedux.default,teacherSections:_teacherSectionsRedux.default,unitSelection:_unitSelectionRedux.default,locales:_localesRedux.default})}catch(_unused){}var store=(0,_redux.createStoreWithReducers)();return store.dispatch((0,_teacherSectionsRedux.setSections)([section])),store.dispatch((0,_teacherSectionsRedux.selectSection)(section.id)),store.dispatch((0,_sectionProgressRedux.addDataByUnit)(buildSectionProgress(section.students,scriptData))),store.dispatch((0,_sectionProgressRedux.setLessonOfInterest)(0)),store.dispatch((0,_unitSelectionRedux.setCoursesWithProgress)(_teacherDashboardTestHelpers.fakeCoursesWithProgress)),store},exports.fakeDetailRowsForStudent=function fakeDetailRowsForStudent(student){return[{id:"".concat(student.id,".1"),student,expansionIndex:1},{id:"".concat(student.id,".2"),student,expansionIndex:2}]},exports.fakeRowsForStudents=function fakeRowsForStudents(students){var rows=[];return students.forEach((function(student){rows.push({id:"".concat(student.id,".0"),student,expansionIndex:0,isExpanded:!1})})),rows},exports.getScriptData=getScriptData;var _constants=__webpack_require__("./src/constants.js"),_redux=__webpack_require__("./src/redux.js"),_localesRedux=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/redux/localesRedux.ts")),_unitSelectionRedux=_interopRequireWildcard(__webpack_require__("./src/redux/unitSelectionRedux.js")),_types=__webpack_require__("./src/templates/feedback/types.js"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_sectionProgressRedux=_interopRequireWildcard(__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js")),_teacherDashboardTestHelpers=__webpack_require__("./src/templates/teacherDashboard/teacherDashboardTestHelpers.js"),_teacherSectionsRedux=_interopRequireWildcard(__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function buildSectionProgress(students,scriptData){var lastUpdates=_defineProperty({},scriptData.id,{}),progress={};return students.forEach((function(student){lastUpdates[scriptData.id][student.id]=Date.now(),progress[student.id]={}})),scriptData.lessons.forEach((function(lesson){lesson.levels.forEach((function(level){students.forEach((function(student){progress[student.id][level.id]=randomProgress(level),level.sublevels&&level.sublevels.forEach((function(sublevel){progress[student.id][sublevel.id]=randomProgress(sublevel)}))}))}))})),{unitDataByUnit:_defineProperty({},scriptData.id,scriptData),studentLevelProgressByUnit:_defineProperty({},scriptData.id,progress),studentLessonProgressByUnit:_defineProperty({},scriptData.id,(0,_progressHelpers.lessonProgressForSection)(progress,scriptData.lessons)),studentLastUpdateByUnit:lastUpdates}}function randomProgress(level){var rand=Math.floor(4*Math.random()),paired=0===Math.floor(10*Math.random()),timeSpent=level.isConceptLevel?0:60*Math.random()*60+1,timestamp=Date.now()/1e3;switch(rand){case 0:return{status:_sharedConstants.LevelStatus.perfect,locked:!1,result:_constants.TestResults.MINIMUM_OPTIMAL_RESULT,paired,timeSpent,lastTimestamp:timestamp,teacherFeedbackReviewState:randomReviewState(),teacherFeedbackNew:!1,teacherFeedbackCommented:!0};case 1:return{status:_sharedConstants.LevelStatus.attempted,locked:!1,result:_constants.TestResults.LEVEL_STARTED,paired,timeSpent,lastTimestamp:timestamp,teacherFeedbackReviewState:randomReviewState(),teacherFeedbackNew:!0,teacherFeedbackCommented:!1};case 2:return{status:_sharedConstants.LevelStatus.passed,locked:!1,result:_constants.TestResults.TOO_MANY_BLOCKS_FAIL,paired,timeSpent,lastTimestamp:timestamp,teacherFeedbackReviewState:randomReviewState(),teacherFeedbackNew:!1,teacherFeedbackCommented:!0};default:return null}}function randomReviewState(){switch(Math.floor(20*Math.random())){case 0:return _types.ReviewStates.keepWorking;case 1:return _types.ReviewStates.awaitingReview;default:return null}}function getScriptData(numLessons){return{id:2,csf:!0,hasStandards:!1,title:"CSD Unit 3 - Interactive Animations and Games ('20-'21)",path:"//localhost-studio.code.org:3000/s/csd3-2020",lessons:[{script_id:2,script_name:"coursea-2020",num_script_lessons:12,id:722,position:0,relative_position:0,name:"Safety in My Online Neighborhood",key:"Safety in My Online Neighborhood",assessment:null,title:"Lesson 1: Safety in My Online Neighborhood",lesson_group_display_name:"Digital Citizenship",lockable:!1,levels:[{id:"16231",url:"http://localhost-studio.code.org:3000/s/coursea-2020/lessons/1/levels/1",kind:"puzzle",icon:"fa-file-text",isUnplugged:!0,levelNumber:1,isConceptLevel:!0,bonus:null}],description_student:"Learn how to go places safely online.",description_teacher:'{: style="padding:10px 0"}This lesson was originally created by .The power of the internet allows students to experience and visit places they might not be able to see in person. But, just like traveling in the real world, it\'s important to be safe when traveling online. On this virtual field trip, kids can practice staying safe on online adventures.',unplugged:!0,lesson_plan_html_url:"https://curriculum.code.org/csf-20/coursea/1",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/coursea-2020/1/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/coursea-2020/lessons/1/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1555,position:1,relative_position:1,name:"Programming for Entertainment",key:"Programming for Entertainment",assessment:!1,title:"Lesson 1: Programming for Entertainment",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3226",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/1/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"16010",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/1/levels/2",progression:"Exploring CS in Entertainment",progressionDisplayName:"Exploring CS in Entertainment",kind:"puzzle",icon:"fa-file-text",isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!0,bonus:null},{id:"1785",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/1/levels/3",progression:"Sample Programs",progressionDisplayName:"Sample Programs",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"1779",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/1/levels/4",progression:"Sample Programs",progressionDisplayName:"Sample Programs",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"1767",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/1/levels/5",progression:"Sample Programs",progressionDisplayName:"Sample Programs",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"1773",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/1/levels/6",progression:"Sample Programs",progressionDisplayName:"Sample Programs",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null}],description_student:'Question of the Day: How is computer science used in entertainment?The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.',description_teacher:'Question of the Day: How is computer science used in entertainment?Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.',unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/1",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/1/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/1/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1556,position:2,relative_position:2,name:"Plotting Shapes",key:"Plotting Shapes",assessment:!1,title:"Lesson 2: Plotting Shapes",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[],description_student:"Question of the Day: How can we clearly communicate how to draw something on a screen?This lesson explores the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab.The class uses a Game Lab tool  to interactively place shapes on Game Lab's 400 by 400 grid. Partners then take turns instructing each other how to draw a hidden image using this tool, accounting for many of the challenges of programming in Game Lab.",description_teacher:"Question of the Day: How can we clearly communicate how to draw something on a screen?Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/2",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/2/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/2/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1557,position:3,relative_position:3,name:"Drawing in Game Lab",key:"Drawing in Game Lab",assessment:!1,title:"Lesson 3: Drawing in Game Lab",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3236",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"3191",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/2",progression:"Introduction to Game Lab",progressionDisplayName:"Introduction to Game Lab",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"4477",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/3",progression:"Video: Drawing in Game Lab - Part 1",progressionDisplayName:"Video: Drawing in Game Lab - Part 1",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"1755",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/4",progression:"Using the Grid",progressionDisplayName:"Using the Grid",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"4483",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/5",progression:"Video: Drawing in Game Lab - Part 2",progressionDisplayName:"Video: Drawing in Game Lab - Part 2",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!0,bonus:null},{id:"2923",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"3197",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/7",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"2917",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/8",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"21573",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/9",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null,sublevels:[{id:"2910",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/9/sublevel/1",name:"CSD U3 drawing practice 1",icon:null,bubbleText:"a"},{id:"2911",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/9/sublevel/2",name:"CSD U3 drawing practice 2",icon:null,bubbleText:"b"},{id:"2912",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/9/sublevel/3",name:"CSD U3 drawing practice 3",icon:null,bubbleText:"c"}]},{id:"2902",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/10",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null},{id:"21570",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/11",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:11,bubbleText:"11",isConceptLevel:!1,bonus:null,sublevels:[{id:"2906",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/11/sublevel/1",name:"CSD U3 drawing challenge 2",icon:null,bubbleText:"a"},{id:"2907",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/11/sublevel/2",name:"CSD U3 drawing challenge 3",icon:null,bubbleText:"b"},{id:"2909",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/11/sublevel/3",name:"CSD U3 drawing challenge no fill_pilot",icon:null,bubbleText:"c"},{id:"3047",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/11/sublevel/4",name:"CSD U3 picture_pilot",icon:null,bubbleText:"d"},{id:"2704",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/11/sublevel/5",name:"CSD U3 challenge face_pilot",icon:null,bubbleText:"e"},{id:"2709",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/11/sublevel/6",name:"CSD U3 challenge new shape_pilot",icon:null,bubbleText:"f"},{id:"2018",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/levels/11/sublevel/7",name:"CSD U3 L3 Freeplay_pilot",icon:null,bubbleText:"g"}]}],description_student:"Question of the Day: How can we communicate to a computer how to draw shapes on the screen?The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. The lesson covers the basics of sequencing and debugging, as well as a few simple commands.  At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.",description_teacher:"Question of the Day: How can we communicate to a computer how to draw shapes on the screen?Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/3",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/3/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/3/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1558,position:4,relative_position:4,name:"Shapes and Parameters",key:"Shapes and Parameters",assessment:!1,title:"Lesson 4: Shapes and Parameters",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3241",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2147",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/2",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"2132",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2162",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2157",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2125",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"21516",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/7",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null,sublevels:[{id:"3206",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/7/sublevel/1",name:"CSD U3 shapes behind_pilot",icon:null,bubbleText:"a"},{id:"3208",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/7/sublevel/2",name:"CSD U3 shapes missing_pilot",icon:null,bubbleText:"b"},{id:"3210",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/7/sublevel/3",name:"CSD U3 shapes scene_pilot",icon:null,bubbleText:"c"}]},{id:"2119",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/8",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"21513",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/9",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null,sublevels:[{id:"3209",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/9/sublevel/1",name:"CSD U3 shapes polygon_pilot",icon:null,bubbleText:"a"},{id:"3211",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/9/sublevel/2",name:"CSD U3 shapes_pilot",icon:null,bubbleText:"b"},{id:"3207",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/9/sublevel/3",name:"CSD U3 shapes line_pilot",icon:null,bubbleText:"c"},{id:"3205",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/9/sublevel/4",name:"CSD U3 shapes arc_pilot",icon:null,bubbleText:"d"},{id:"3042",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/levels/9/sublevel/5",name:"CSD U3 parameters shape scene_2020",icon:null,bubbleText:"e"}]}],description_student:'Question of the Day:  How can we use parameters to give the computer more specific instructions?In this lesson the class continues to develop a familiarity with Game Lab by manipulating the width and height of the shapes they use to draw. The lesson kicks off with a discussion that connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or "parameters". The class learns to draw with versions of <code>ellipse()</code> and <code>rect()</code> that include width and height parameters and to use the <code>background()</code> block.',description_teacher:'Question of the Day:  How can we use parameters to give the computer more specific instructions?In this lesson students continue to develop their familiarity with Game Lab by manipulating the width and height of the shapes they use to draw. The lesson kicks off with a discussion that connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or "parameters". Students learn to draw with versions of <code>ellipse()</code> and <code>rect()</code> that include width and height parameters. They also learn to use the <code>background()</code> block.',unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/4",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/4/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/4/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1559,position:5,relative_position:5,name:"Variables",key:"Variables",assessment:!1,title:"Lesson 5: Variables",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3246",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2419",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/2",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"7593",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/3",progression:"Video: Introduction to Variables",progressionDisplayName:"Video: Introduction to Variables",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"2414",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2453",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2392",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"21542",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/7",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null,sublevels:[{id:"2437",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/7/sublevel/1",name:"CSD U3 Variables change circle size_pilot",icon:null,bubbleText:"a"},{id:"2448",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/7/sublevel/2",name:"CSD U3 Variables names_pilot",icon:null,bubbleText:"b"},{id:"2469",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/7/sublevel/3",name:"CSD U3 Variables unused_pilot",icon:null,bubbleText:"c"},{id:"2444",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/7/sublevel/4",name:"CSD U3 Variables forbidden names_pilot",icon:null,bubbleText:"d"}]},{id:"2432",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/8",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"21539",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/9",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null,sublevels:[{id:"2387",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/9/sublevel/1",name:"CSD U3 Variables Draw Challenge_pilot",icon:null,bubbleText:"a"},{id:"2382",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/9/sublevel/2",name:"CSD U3 Variables Challenge_pilot",icon:null,bubbleText:"b"},{id:"2429",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/9/sublevel/3",name:"CSD U3 Variables String Challenge_pilot",icon:null,bubbleText:"c"},{id:"2028",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/levels/9/sublevel/4",name:"CSD U3 L5 Freeplay_pilot",icon:null,bubbleText:"d"}]}],description_student:"Question of the Day:  How can we use variables to store information in our programs?This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks, then completes a level progression that reinforces the model of a variable as a way to label or name a number.",description_teacher:"Question of the Day:  How can we use variables to store information in our programs?In this lesson students learn how to use variables to label a number. Students begin the lesson with a very basic description of the purpose of a variable within the context of the storage component of the input-output-storage-processing model. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/5",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/5/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/5/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1560,position:6,relative_position:6,name:"Random Numbers",key:"Random Numbers",assessment:!1,title:"Lesson 6: Random Numbers",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3251",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2187",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/2",progression:"Exploration",progressionDisplayName:"Exploration",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"2182",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2466",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2461",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"21530",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/6",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null,sublevels:[{id:"2168",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/6/sublevel/1",name:"CSD U3 Random planets_pilot",icon:null,bubbleText:"a"},{id:"2192",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/6/sublevel/2",name:"CSD U3 Random shape position_pilot",icon:null,bubbleText:"b"}]},{id:"2173",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/7",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"21527",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/8",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null,sublevels:[{id:"2190",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/8/sublevel/1",name:"CSD U3 Random rgb_pilot",icon:null,bubbleText:"a"},{id:"2151",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/8/sublevel/2",name:"CSD U3 Random add_pilot",icon:null,bubbleText:"b"},{id:"2167",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/8/sublevel/3",name:"CSD U3 Random multiply_pilot",icon:null,bubbleText:"c"},{id:"2166",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/8/sublevel/4",name:"CSD U3 Random line_pilot",icon:null,bubbleText:"d"},{id:"2152",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/8/sublevel/5",name:"CSD U3 Random arc_pilot",icon:null,bubbleText:"e"},{id:"2165",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/levels/8/sublevel/6",name:"CSD U3 Random free play_pilot",icon:null,bubbleText:"f"}]}],description_student:"Question of the Day: How can we make our programs behave differently each time they are run?The class is introduced to the <code>randomNumber()</code> block and how it can be used to create new behaviors in their programs.  They then learn how to update variables during a program and use those skills to draw randomized images.",description_teacher:"Question of the Day: How can we make our programs behave differently each time they are run?Students are introduced to the <code>randomNumber()</code> block and how it can be used to create new behaviors in their programs.  They them learn how to update variables during a program.  Combining all of these skills students draw randomized images.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/6",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/6/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/6/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1561,position:7,relative_position:7,name:"Sprites",key:"Sprites",assessment:!1,title:"Lesson 7: Sprites",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3256",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2229",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/2",progression:"Exploration",progressionDisplayName:"Exploration",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"4510",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/3",progression:"Video: Introduction to Sprites",progressionDisplayName:"Video: Introduction to Sprites",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"2282",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2270",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2241",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"4468",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/7",progression:"Video: The Animation Tab",progressionDisplayName:"Video: The Animation Tab",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!0,bonus:null},{id:"2328",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/8",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"18424",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/9",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null},{id:"21536",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/10",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null,sublevels:[{id:"2287",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/10/sublevel/1",name:"CSD U3 Sprites missing_pilot",icon:null,bubbleText:"a"},{id:"2290",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/10/sublevel/2",name:"CSD U3 Sprites names_pilot",icon:null,bubbleText:"b"},{id:"2289",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/10/sublevel/3",name:"CSD U3 Sprites name sprite_pilot",icon:null,bubbleText:"c"},{id:"2292",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/10/sublevel/4",name:"CSD U3 Sprites order_pilot",icon:null,bubbleText:"d"},{id:"2266",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/10/sublevel/5",name:"CSD U3 Sprites fish_pilot",icon:null,bubbleText:"e"},{id:"2332",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/10/sublevel/6",name:"CSD U3 Sprites sprite draw_pilot",icon:null,bubbleText:"f"}]},{id:"2256",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/11",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:11,bubbleText:"11",isConceptLevel:!1,bonus:null},{id:"21533",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/12",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:12,bubbleText:"12",isConceptLevel:!1,bonus:null,sublevels:[{id:"2247",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/12/sublevel/1",name:"CSD U3 Sprites anitab 2_pilot",icon:null,bubbleText:"a"},{id:"2264",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/12/sublevel/2",name:"CSD U3 Sprites draw animation_pilot",icon:null,bubbleText:"b"},{id:"2258",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/levels/12/sublevel/3",name:"CSD U3 Sprites combine_pilot",icon:null,bubbleText:"c"}]}],description_student:"",description_teacher:"",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/7",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/7/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/7/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1562,position:8,relative_position:8,name:"Sprite Properties",key:"Sprite Properties",assessment:!1,title:"Lesson 8: Sprite Properties",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3261",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"725",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/2",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"729",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"722",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"21524",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/5",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null,sublevels:[{id:"715",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/5/sublevel/1",name:"CSD Games bubble choice properties scale",icon:null,bubbleText:"a"},{id:"714",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/5/sublevel/2",name:"CSD Games bubble choice properties rotation",icon:null,bubbleText:"b"}]},{id:"719",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/6",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"21521",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/7",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null,sublevels:[{id:"3187",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/7/sublevel/1",name:"CSD U3 properties tint_pilot",icon:null,bubbleText:"a"},{id:"3185",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/levels/7/sublevel/2",name:"CSD U3 properties depth_pilot",icon:null,bubbleText:"b"}]}],description_student:"Question of the Day: How can we use sprite properties to change their appearance on the screen?The class extends its understanding of sprites by interacting with sprite properties.  The lesson starts with a review of what a sprite is, then moves on to Game Lab for more practice with sprites, using their properties to change their appearance.  The class then reflects on the connections between properties and variables.",description_teacher:"Question of the Day: How can we use sprite properties to change their appearance on the screen?Students extend their understanding of sprites by interacting with sprite properties.  Students start with a review of what a sprite is, then move on to Game Lab to practice more with sprites, using their properties to change their appearance.  They then reflect on the connections between properties and variables.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/8",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/8/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/8/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1563,position:9,relative_position:9,name:"Text",key:"Text",assessment:!1,title:"Lesson 9: Text",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3266",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"4447",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/2",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"2344",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"4448",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"21594",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/5",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null,sublevels:[{id:"2338",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/5/sublevel/1",name:"CSD U3 Sprites text debug_2018_2020",icon:null,bubbleText:"a"},{id:"4396",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/5/sublevel/2",name:"CSD games text debug quotes",icon:null,bubbleText:"b"}]},{id:"4446",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/6",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"21593",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/7",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null,sublevels:[{id:"4449",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/7/sublevel/1",name:"CSD web text stroke",icon:null,bubbleText:"a"},{id:"4425",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/7/sublevel/2",name:"CSD web challenge stroke",icon:null,bubbleText:"b"},{id:"4426",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/7/sublevel/3",name:"CSD web challenge wrap text",icon:null,bubbleText:"c"},{id:"4397",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/levels/7/sublevel/4",name:"CSD games text freeplay",icon:null,bubbleText:"d"}]}],description_student:"Question of the Day: How can we use text to improve our scenes and animations?This lesson introduces Game Lab's text commands, giving the class more practice using the coordinate plane and parameters.  At the beginning of the lesson, the class is asked to caption a cartoon created in Game Lab.  They then move onto Code Studio where they practice placing text on the screen and controlling other text properties, such as size.",description_teacher:"Question of the Day: How can we use text to improve our scenes and animations?This lesson introduces Game Lab's text commands, giving students more practice using the coordinate plane and parameters.  At the beginning of the lesson, students are asked to caption a cartoon created in Game Lab.  They then move onto Code Studio where they practice placing text on the screen and controlling other text properties, such as size.  Students who complete the assessment early may go on to learn more challenging blocks related to text properties. ",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/9",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/9/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/9/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1564,position:10,relative_position:10,name:"Mini-Project: Captioned Scenes",key:"Mini-Project: Captioned Scenes",assessment:!1,title:"Lesson 10: Mini-Project: Captioned Scenes",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3269",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/10/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2198",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/10/levels/2",progression:"Sprite Scenes",progressionDisplayName:"Sprite Scenes",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"2306",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/10/levels/3",progression:"Create a Background",progressionDisplayName:"Create a Background",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2312",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/10/levels/4",progression:"Add Sprites",progressionDisplayName:"Add Sprites",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2324",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/10/levels/5",progression:"Add Text",progressionDisplayName:"Add Text",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2300",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/10/levels/6",progression:"Review Your Scene",progressionDisplayName:"Review Your Scene",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null}],description_student:"Question of the Day: How can we use Game Lab to express our creativity?After a quick review of the code learned so far, the class is introduced to the first creative project of the unit.  Using the problem solving process as a model, students define the scene that they want to create, prepare by thinking of the different code they will need, try their plan in Game Lab, then reflect on what they have created.  In the end, they also have a chance to share their creations with their peers.",description_teacher:"Question of the Day: How can we use Game Lab to express our creativity?After a quick review of the code they have learned so far, students are introduced to their first creative project of the unit.  Using the problem solving process as a model, students define the scene that they want to create, prepare by thinking of the different code they will need, try their plan in Game Lab, then reflect on what they have created.  In the end, they also have a chance to share their creations with their peers.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/10",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/10/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/10/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1565,position:11,relative_position:11,name:"The Draw Loop",key:"The Draw Loop",assessment:!1,title:"Lesson 11: The Draw Loop",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3271",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"4496",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/2",progression:"Video: Introduction to the Draw Loop",progressionDisplayName:"Video: Introduction to the Draw Loop",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!0,bonus:null},{id:"1713",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/3",progression:"Exploration",progressionDisplayName:"Exploration",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"1706",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"1725",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/5",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2896",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"1743",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/7",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"21580",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/8",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null,sublevels:[{id:"1737",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/8/sublevel/1",name:"CSD U3 Draw Loop Plugged wiggle sprite rotation_2020",icon:null,bubbleText:"a"},{id:"4382",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/8/sublevel/2",name:"CSD games draw debug blurry",icon:null,bubbleText:"b"},{id:"4381",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/8/sublevel/3",name:"CSD games draw debug afterimage",icon:null,bubbleText:"c"},{id:"4383",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/8/sublevel/4",name:"CSD games draw debug not moving",icon:null,bubbleText:"d"}]},{id:"1749",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/9",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null},{id:"21579",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/10",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null,sublevels:[{id:"1731",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/10/sublevel/1",name:"CSD U3 Draw Loop Plugged update your scene_2020",icon:null,bubbleText:"a"},{id:"2038",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/levels/10/sublevel/2",name:"CSD U3 L7 Freeplay_2020",icon:null,bubbleText:"b"}]}],description_student:"Question of the Day: How can we animate our images in Game Lab?This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. ",description_teacher:"Question of the Day: How can we animate our images in Game Lab?In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/11",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/11/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/11/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1566,position:12,relative_position:12,name:"Sprite Movement",key:"Sprite Movement",assessment:!1,title:"Lesson 12: Sprite Movement",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3284",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"1413",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/2",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"4461",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/3",progression:"Video: Sprite Movement",progressionDisplayName:"Video: Sprite Movement",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"2220",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2208",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"1683",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"2214",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/7",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"21592",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/8",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null,sublevels:[{id:"2491",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/8/sublevel/1",name:"CSD U3 Watcher Predict_2020",icon:null,bubbleText:"a"},{id:"2479",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/8/sublevel/2",name:"CSD U3 Watcher Debug_2020",icon:null,bubbleText:"b"},{id:"2081",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/8/sublevel/3",name:"CSD U3 Movement Gears_2020",icon:null,bubbleText:"c"}]},{id:"2074",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/9",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null},{id:"21591",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/10",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null,sublevels:[{id:"2068",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/10/sublevel/1",name:"CSD U3 Movement Fish challenge_2020",icon:null,bubbleText:"a"},{id:"2065",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/10/sublevel/2",name:"CSD U3 Movement Fish challenge2_2020",icon:null,bubbleText:"b"},{id:"2044",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/levels/10/sublevel/3",name:"CSD U3 L9 Freeplay_2020",icon:null,bubbleText:"c"}]}],description_student:"Question of the Day: How can we control sprite movement in Game Lab?In this lesson, the class learns how to control sprite movement using a construct called the counter pattern, which incrementally changes a sprite's properties.  After brainstorming different ways that they could animate sprites by controlling their properties, the class explores the counter pattern in Code Studio, using the counter pattern to create various types of sprite movements.",description_teacher:"Question of the Day: How can we control sprite movement in Game Lab?In this lesson, students learn how to control sprite movement using a construct called the counter pattern, which incrementally changes a sprite's properties.  Students first brainstorm different ways that they could animate sprites by controlling their properties, then explore the counter pattern in Code Studio.  After examining working code, students try using the counter pattern to create various types of sprite movements.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/12",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/12/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/12/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1567,position:13,relative_position:13,name:"Mini-Project: Animation",key:"Mini-Project: Animation",assessment:!1,title:"Lesson 13: Mini-Project: Animation",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3289",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"4437",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/levels/2",progression:"Example Animated Scene",progressionDisplayName:"Example Animated Scene",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"4439",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/levels/3",progression:"Plan Your Scene",progressionDisplayName:"Plan Your Scene",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"4436",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/levels/4",progression:"Draw a Background",progressionDisplayName:"Draw a Background",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"4441",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/levels/5",progression:"Add Sprites",progressionDisplayName:"Add Sprites",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"4443",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/levels/6",progression:"Add Text",progressionDisplayName:"Add Text",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"4438",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/levels/7",progression:"Add Movement",progressionDisplayName:"Add Movement",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"4440",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/levels/8",progression:"Review Your Animated Scene",progressionDisplayName:"Review Your Animated Scene",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null}],description_student:"Question of the Day: How can we combine different programming patterns to make a complete animation?In this lesson, the class is asked to combine different methods from previous lessons to create an animated scene.  They first review the types of movement and animation that they have learned, and brainstorm what types of scenes might need that movement.  They then begin to plan out their own animated scenes, which they create in Game Lab.",description_teacher:"Question of the Day: How can we combine different programming patterns to make a complete animation?In this lesson, students are asked to combine different methods that they have learned to create an animated scene.  Students first review the types of movement and animation that they have learned, and brainstorm what types of scenes might need that movement.  They then begin to plan out their own animated scenes, which they create in Game Lab.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/13",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/13/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/13/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1568,position:14,relative_position:14,name:"Conditionals",key:"Conditionals",assessment:!1,title:"Lesson 14: Conditionals",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3294",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"1621",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/2",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"1401",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/3",progression:"Video: Booleans",progressionDisplayName:"Video: Booleans",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"18416",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/4",progression:"Quick Check",progressionDisplayName:"Quick Check",kind:"puzzle",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"1463",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"1456",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"14070",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/7",progression:"Video: Conditional Statements",progressionDisplayName:"Video: Conditional Statements",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!0,bonus:null},{id:"1649",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/8",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"21578",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/9",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null,sublevels:[{id:"1615",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/9/sublevel/1",name:"CSD U3 Boolean Modify_2020",icon:null,bubbleText:"a"},{id:"4379",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/9/sublevel/2",name:"CSD games conditionals bowl",icon:null,bubbleText:"b"},{id:"4380",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/9/sublevel/3",name:"CSD games conditionals practice spaceship",icon:null,bubbleText:"c"}]},{id:"4431",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/10",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null},{id:"21577",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/11",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:11,bubbleText:"11",isConceptLevel:!1,bonus:null,sublevels:[{id:"1450",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/11/sublevel/1",name:"CSD U3 - conditionals - first conditional 2_2018_2020",icon:null,bubbleText:"a"},{id:"1970",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/levels/11/sublevel/2",name:"CSD U3 L11 Freeplay_2020",icon:null,bubbleText:"b"}]}],description_student:"Question of the Day:  How can programs react to changes as they are running?This lesson introduces booleans and conditionals, which allow a program to run differently depending on whether a condition is true.  The class starts by playing a short game in which they respond according to whether particular conditions are met.  They then move to Code Studio where they learn how the computer evaluates Boolean expressions, and how they can be used to structure a program.",description_teacher:"Question of the Day:  How can programs react to changes as they are running?This lesson introduces booleans and conditionals, which allow a program to run differently depending on whether a condition is true.  Students start by playing a short game in which they respond according to whether particular conditions are met.  They then move to Code Studio where they learn how the computer evaluates Boolean expressions, and how they can be used to structure a program.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/14",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/14/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/14/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1569,position:15,relative_position:15,name:"Keyboard Input",key:"Keyboard Input",assessment:!1,title:"Lesson 15: Keyboard Input",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3299",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"1952",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/2",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"3027",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2370",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"1888",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"21588",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/6",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null,sublevels:[{id:"1882",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/6/sublevel/1",name:"CSD U3 Input Fish_2020",icon:null,bubbleText:"a"},{id:"4386",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/6/sublevel/2",name:"CSD games input debug1",icon:null,bubbleText:"b"},{id:"4387",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/6/sublevel/3",name:"CSD games input debug2",icon:null,bubbleText:"c"}]},{id:"1697",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/7",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"21587",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/8",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null,sublevels:[{id:"1429",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/8/sublevel/1",name:"CSD U3 - complex - key up and down_2020",icon:null,bubbleText:"a"},{id:"1690",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/8/sublevel/2",name:"CSD U3 Direction Animations_2018_2020",icon:null,bubbleText:"b"},{id:"1976",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/levels/8/sublevel/3",name:"CSD U3 L12 Freeplay_2020",icon:null,bubbleText:"c"}]}],description_student:"Question of the Day: How can our programs react to user input?Following the introduction to booleans and if statements in the previous lesson, the class is introduced to a new block called <code>keyDown()</code> which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson the class will have written programs that take keyboard input from the user to control sprites on the screen.",description_teacher:"Question of the Day: How can our programs react to user input?Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called <code>keyDown()</code> which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/15",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/15/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/15/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1570,position:16,relative_position:16,name:"Mouse Input",key:"Mouse Input",assessment:!1,title:"Lesson 16: Mouse Input",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3304",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"3010",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/2",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"1407",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/3",progression:"Video: If/Else Statements",progressionDisplayName:"Video: If/Else Statements",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"1761",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"4390",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"1435",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"1876",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/7",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"21590",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/8",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null,sublevels:[{id:"4388",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/8/sublevel/1",name:"CSD games mouse mousey",icon:null,bubbleText:"a"},{id:"4391",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/8/sublevel/2",name:"CSD games practice move with mouse",icon:null,bubbleText:"b"}]},{id:"4435",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/9",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null},{id:"21589",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/10",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null,sublevels:[{id:"4389",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/10/sublevel/1",name:"CSD games mouse scale",icon:null,bubbleText:"a"},{id:"2050",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/10/sublevel/2",name:"CSD U3 Mouse Input Bee 1_2020",icon:null,bubbleText:"b"},{id:"2056",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/10/sublevel/3",name:"CSD U3 Mouse Input Bee 2_2020",icon:null,bubbleText:"c"},{id:"1441",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/10/sublevel/4",name:"CSD U3 - complex - mouse move_2020",icon:null,bubbleText:"d"},{id:"1982",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/levels/10/sublevel/5",name:"CSD U3 L13 Freeplay_2020",icon:null,bubbleText:"e"}]}],description_student:"Question of the Day: What are more ways that the computer can react to user input?The class continues to explore ways to use conditional statements to take user input. In addition to the keyboard commands learned yesterday, they will learn about several ways to take mouse input.  They will also expand their understanding of conditional to include <code>else</code>, which allows for the computer to run a certain section of code when a condition is true, and a different section of code when it is not.",description_teacher:"Question of the Day: What are more ways that the computer can react to user input?In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the keyboard commands learned yesterday, students will learn about several ways to take mouse input.  They will also expand their understanding of conditionals to include <code>else</code>, which allows for the computer to run a certain section of code when a condition is true, and a different section of code when it is not.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/16",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/16/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/16/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1571,position:17,relative_position:17,name:"Project - Interactive Card",key:"Project - Interactive Card",assessment:!1,title:"Lesson 17: Project - Interactive Card",lesson_group_display_name:"Chapter 1: Images and Animations",lockable:!1,levels:[{id:"3309",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"1900",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/2",progression:"interactive Card",progressionDisplayName:"interactive Card",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"15983",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/3",progression:"Make an Interactive Card",progressionDisplayName:"Make an Interactive Card",kind:"puzzle",icon:"fa-file-text",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"1894",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/4",progression:"Project Work",progressionDisplayName:"Project Work",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"1918",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/5",progression:"Project Work",progressionDisplayName:"Project Work",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"1930",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/6",progression:"Project Work",progressionDisplayName:"Project Work",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"1912",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/7",progression:"Project Work",progressionDisplayName:"Project Work",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"1906",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/8",progression:"Project Work",progressionDisplayName:"Project Work",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"21650",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/levels/9/page/1",progression:"Reflection",progressionDisplayName:"Reflection",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null}],description_student:"Question of the Day:  What skills and practices are important when creating an interactive program?In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.",description_teacher:"Question of the Day:  What skills and practices are important when creating an interactive program?In this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/17",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/17/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/17/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1572,position:18,relative_position:18,name:"Velocity",key:"Velocity",assessment:!1,title:"Lesson 18: Velocity",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3314",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2673",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/2",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"4504",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/3",progression:"Video: Velocity",progressionDisplayName:"Video: Velocity",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"2686",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2620",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2614",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"2666",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/7",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"4401",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/8",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"21545",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/9",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null,sublevels:[{id:"2680",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/9/sublevel/1",name:"CSD U3 abstraction velocityY control_2020",icon:null,bubbleText:"a"},{id:"4399",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/9/sublevel/2",name:"CSD games velocity bee",icon:null,bubbleText:"b"}]},{id:"2654",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/10",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null},{id:"21544",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/11",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:11,bubbleText:"11",isConceptLevel:!1,bonus:null,sublevels:[{id:"4398",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/11/sublevel/1",name:"CSD games velocity 4 directions",icon:null,bubbleText:"a"},{id:"1988",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/levels/11/sublevel/2",name:"CSD U3 L15 Freeplay_2020",icon:null,bubbleText:"b"}]}],description_student:"Question of the Day:  How can programming languages hide complicated patterns so that it is easier to program?After a brief review of how the counter pattern is used to move sprites, the class is introduced to the idea of hiding those patterns in a single block, in order to help manage the complexity of programs.  They then head to Code Studio to try out new blocks that set a sprite's velocity directly, and look at various ways that they are able to code more complex behaviors in their sprites.  ",description_teacher:"Question of the Day:  How can programming languages hide complicated patterns so that it is easier to program?After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the idea of hiding those patterns in a single block.  Students then head to Code Studio to try out new blocks that set a sprite's velocity directly, and look at various ways that they are able to code more complex behaviors in their sprites.  ",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/18",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/18/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/18/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1573,position:19,relative_position:19,name:"Collision Detection",key:"Collision Detection",assessment:!1,title:"Lesson 19: Collision Detection",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3319",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2740",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/2",progression:"Sample Game",progressionDisplayName:"Sample Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"2733",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2834",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2791",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2748",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"21509",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/7",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null,sublevels:[{id:"2717",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/7/sublevel/1",name:"CSD U3 collision detection practice debugistouching",icon:null,bubbleText:"a"},{id:"2713",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/7/sublevel/2",name:"CSD U3 collision detection challenge collider circle",icon:null,bubbleText:"b"}]},{id:"2828",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/8",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"21508",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/9",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null,sublevels:[{id:"2712",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/9/sublevel/1",name:"CSD U3 collision detection challenge collider angle",icon:null,bubbleText:"a"},{id:"2718",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/9/sublevel/2",name:"CSD U3 collision detection practice debugpoints",icon:null,bubbleText:"b"},{id:"1994",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/levels/9/sublevel/3",name:"CSD U3 L16 Freeplay_2020",icon:null,bubbleText:"c"}]}],description_student:"Question of the Day: How can programming help make complicated problems more simple?The class learns about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the <code>isTouching()</code> block to create different effects when sprites collide and practice using the block to model various interactions.",description_teacher:"Question of the Day: How can programming help make complicated problems more simple?Students learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the <code>isTouching()</code> block to create different effects when sprites collide and practice using the block to model various interactions.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/19",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/19/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/19/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1574,position:20,relative_position:20,name:"Mini-Project: Side Scroller",key:"Mini-Project: Side Scroller",assessment:!1,title:"Lesson 20: Mini-Project: Side Scroller",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3322",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"4393",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/2",progression:"Intro to Side Scrollers",progressionDisplayName:"Intro to Side Scrollers",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"4394",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/3",progression:"Draw Your Background",progressionDisplayName:"Draw Your Background",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2648",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/4",progression:"Create Your Sprites",progressionDisplayName:"Create Your Sprites",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2560",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/5",progression:"Player Controls",progressionDisplayName:"Player Controls",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2593",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/6",progression:"Looping",progressionDisplayName:"Looping",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"2867",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/7",progression:"Sprite Interactions",progressionDisplayName:"Sprite Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"2855",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/8",progression:"Scoring & Scoreboard",progressionDisplayName:"Scoring & Scoreboard",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"4395",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/levels/9",progression:"Review Your Game",progressionDisplayName:"Review Your Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null}],description_student:"Question of the Day:  How can the new types of sprite movement and collision detection be used to create a game?The class uses what it has learned about collision detection and setting velocity to create simple side scroller games.  After looking at a sample side scroller game, students brainstorm what sort of side scroller they would like, then use a structured process to program the game in Code Studio.",description_teacher:"Question of the Day:  How can the new types of sprite movement and collision detection be used to create a game?Students use what they have learned about collision detection and setting velocity to create a simple side scroller game.  After looking at a sample side scroller game, students brainstorm what sort of side scroller they would like, then use a structured process to program the game in Code Studio.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/20",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/20/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/20/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1575,position:21,relative_position:21,name:"Complex Sprite Movement",key:"Complex Sprite Movement",assessment:!1,title:"Lesson 21: Complex Sprite Movement",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3325",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"1627",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/2",progression:"Prediction",progressionDisplayName:"Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"2502",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2514",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2538",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"21511",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/6",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null,sublevels:[{id:"2508",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/6/sublevel/1",name:"CSD U3 abstraction accelerateY up_2020",icon:null,bubbleText:"a"},{id:"22354",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/6/sublevel/2",name:"CSD U3 practice deceleration",icon:null,bubbleText:"b"}]},{id:"2544",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/7",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"21510",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/8",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null,sublevels:[{id:"2891",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/8/sublevel/1",name:"CSD U3 complex sprite movement practice parabola",icon:null,bubbleText:"a"},{id:"2890",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/8/sublevel/2",name:"CSD U3 complex sprite movement practice deceleration",icon:null,bubbleText:"b"},{id:"2000",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/levels/8/sublevel/3",name:"CSD U3 L17 Freeplay_2020",icon:null,bubbleText:"c"}]}],description_student:"Question of the Day: How can previous blocks be combined in new patterns to make interesting movements?The class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. After reviewing the two concepts, they explore various scenarios in which velocity is used in the counter pattern, and observe the different types of movement that result.  In particular, the class learns how to simulate gravity.  They then reflect on how they were able to get new behaviors by combining blocks and patterns that they already knew.",description_teacher:"Question of the Day: How can previous blocks be combined in new patterns to make interesting movements?Students learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. After reviewing the two concepts, they explore various scenarios in which velocity is used in the counter pattern, and observe the different types of movement that result.  In particular, students learn how to simulate gravity.  They then reflect on how they were able to get new behaviors by combining blocks and patterns that they already knew.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/21",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/21/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/21/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1576,position:22,relative_position:22,name:"Collisions",key:"Collisions",assessment:!1,title:"Lesson 22: Collisions",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3330",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2848",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/2",progression:"Code Prediction",progressionDisplayName:"Code Prediction",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"2767",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2773",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2761",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/5",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2875",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/6",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"21505",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/7",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null,sublevels:[{id:"2887",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/7/sublevel/1",name:"CSD U3 collisions types_2020",icon:null,bubbleText:"a"},{id:"22295",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/7/sublevel/2",name:"CSD U3 collisions types2_2020",icon:null,bubbleText:"b"},{id:"22297",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/7/sublevel/3",name:"CSD U3 collisions types3_2020",icon:null,bubbleText:"c"},{id:"22299",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/7/sublevel/4",name:"CSD U3 collisions types4_2020",icon:null,bubbleText:"d"}]},{id:"4378",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/8",progression:"Assessment",progressionDisplayName:"Assessment",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"21504",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/9",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null,sublevels:[{id:"2754",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/9/sublevel/1",name:"CSD U3 collisions debug_2020",icon:null,bubbleText:"a"},{id:"2861",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/9/sublevel/2",name:"CSD U3 collisions setCollider_2020",icon:null,bubbleText:"b"},{id:"2727",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/9/sublevel/3",name:"CSD U3 collisions bounciness_2020",icon:null,bubbleText:"c"},{id:"2006",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/levels/9/sublevel/4",name:"CSD U3 L18 Freeplay_2020",icon:null,bubbleText:"d"}]}],description_student:"Question of the Day: How can programmers build on abstractions to create further abstractions?In this lesson, the class programs their sprites to interact in new ways.  After a brief review of how they used the <code>isTouching</code> block, students brainstorm other ways that two sprites could interact.  They then use <code>isTouching</code> to make one sprite push another across the screen before practicing with the four collision blocks (<code>collide</code>, <code>displace</code>, <code>bounce</code>, and <code>bounceOff</code>).",description_teacher:"Question of the Day: How can programmers build on abstractions to create further abstractions?In this lessson, students program their sprites to interact in new ways.  After a brief review of how they used the <code>isTouching</code> block, students brainstorm other ways that two sprites could interact.  They then use <code>isTouching</code> to make one sprite push another across the screen before practicing with the four collision blocks (<code>collide</code>, <code>displace</code>, <code>bounce</code>, and <code>bounceOff</code>).",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/22",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/22/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/22/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1577,position:23,relative_position:23,name:"Mini-Project: Flyer Game",key:"Mini-Project: Flyer Game",assessment:!1,title:"Lesson 23: Mini-Project: Flyer Game",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3338",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"4384",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/2",progression:"Intro to Flyer Game",progressionDisplayName:"Intro to Flyer Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"2520",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/3",progression:"Make Your Sprites",progressionDisplayName:"Make Your Sprites",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2575",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/4",progression:"Player Controls",progressionDisplayName:"Player Controls",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2587",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/5",progression:"Player Controls",progressionDisplayName:"Player Controls",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2581",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/6",progression:"Player Controls",progressionDisplayName:"Player Controls",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"2797",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/7",progression:"Sprite Movement",progressionDisplayName:"Sprite Movement",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"2607",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/8",progression:"Sprite Interactions",progressionDisplayName:"Sprite Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"2803",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/levels/9",progression:"Review Your Game",progressionDisplayName:"Review Your Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null}],description_student:"Question of the Day:  How can the new types collisions and modeling movement be used to create a game?The class uses what it has learned about simulating gravity and the different types of collisions  to create simple flyer games.  After looking at a sample flyer game, students brainstorm what sort of flyer they would like, then use a structured process to program the game in Code Studio.",description_teacher:"Question of the Day:  How can the new types of collisions and modeling movement be used to create a game?Students use what they have learned about simulating gravity and the different types of collisions to create simple flyer games.  After looking at a sample flyer game, students brainstorm what sort of flyer games they would like, then use a structured process to program the game in Code Studio.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/23",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/23/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/23/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1578,position:24,relative_position:24,name:"Functions",key:"Functions",assessment:!1,title:"Lesson 24: Functions",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3335",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"2933",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/2",progression:"Video: Functions",progressionDisplayName:"Video: Functions",kind:"puzzle",icon:"fa-video-camera",isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!0,bonus:null},{id:"1812",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/3",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"1825",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/4",progression:"Skill Building",progressionDisplayName:"Skill Building",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"1832",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/5",progression:"Predict",progressionDisplayName:"Predict",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"21507",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/6",progression:"Practice",progressionDisplayName:"Practice",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null,sublevels:[{id:"1806",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/6/sublevel/1",name:"CSD U3 Functions Call Draw Loop_2020",icon:null,bubbleText:"a"},{id:"1844",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/6/sublevel/2",name:"CSD U3 Functions Reset Sprite_2020",icon:null,bubbleText:"b"},{id:"1838",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/6/sublevel/3",name:"CSD U3 Functions Randomize Sprite_2020",icon:null,bubbleText:"c"},{id:"1818",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/6/sublevel/4",name:"CSD U3 Functions Create Function_2020",icon:null,bubbleText:"d"}]},{id:"4385",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/7",progression:"Quick Check",progressionDisplayName:"Quick Check",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"1856",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/8",progression:"Collector Game",progressionDisplayName:"Collector Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"1800",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/9",progression:"Collector Game",progressionDisplayName:"Collector Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null},{id:"1794",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/10",progression:"Collector Game",progressionDisplayName:"Collector Game",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null},{id:"21506",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/11",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:11,bubbleText:"11",isConceptLevel:!1,bonus:null,sublevels:[{id:"1866",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/11/sublevel/1",name:"CSD U3 Functions challenge drawscene",icon:null,bubbleText:"a"},{id:"2012",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/levels/11/sublevel/2",name:"CSD U3 L19 Freeplay_2020",icon:null,bubbleText:"b"}]}],description_student:"Question of the Day: How can programmers use functions to create their own abstractions?This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab. ",description_teacher:"Question of the Day: How can programmers use functions to create their own abstractions?Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. Students first think about what sorts of new blocks they would like in Game Lab, and what code those blocks would contain inside. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/24",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/24/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/24/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1579,position:25,relative_position:25,name:"The Game Design Process",key:"The Game Design Process",assessment:!1,title:"Lesson 25: The Game Design Process",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3339",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"1503",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/2",progression:"Same Game",progressionDisplayName:"Same Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"15976",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/3",progression:"Plan Your Project",progressionDisplayName:"Plan Your Project",kind:"puzzle",icon:"fa-file-text",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"1510",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/4",progression:"Set Up Sprites",progressionDisplayName:"Set Up Sprites",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"1537",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/5",progression:"Set Up Sprites",progressionDisplayName:"Set Up Sprites",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"1561",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/6",progression:"Control Your Player",progressionDisplayName:"Control Your Player",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"1567",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/7",progression:"Control Your Player",progressionDisplayName:"Control Your Player",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"1516",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/8",progression:"Control Your Player",progressionDisplayName:"Control Your Player",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"1549",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/9",progression:"Sprite Interactions",progressionDisplayName:"Sprite Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null},{id:"1543",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/10",progression:"Sprite Interactions",progressionDisplayName:"Sprite Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null},{id:"1524",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/11",progression:"Sprite Interactions",progressionDisplayName:"Sprite Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:11,bubbleText:"11",isConceptLevel:!1,bonus:null},{id:"1530",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/12",progression:"Sprite Interactions",progressionDisplayName:"Sprite Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:12,bubbleText:"12",isConceptLevel:!1,bonus:null},{id:"1580",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/13",progression:"Sprite Interactions",progressionDisplayName:"Sprite Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:13,bubbleText:"13",isConceptLevel:!1,bonus:null},{id:"21503",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/14",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:14,bubbleText:"14",isConceptLevel:!1,bonus:null,sublevels:[{id:"1519",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/14/sublevel/1",name:"CSD U3 AnimationsMulti defender background",icon:null,bubbleText:"a"},{id:"1570",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/14/sublevel/2",name:"CSD U3 AnimationsMulti defender randomizespeed",icon:null,bubbleText:"b"},{id:"1520",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/14/sublevel/3",name:"CSD U3 AnimationsMulti defender changevisuals",icon:null,bubbleText:"c"},{id:"1533",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/levels/14/sublevel/4",name:"CSD U3 AnimationsMulti defender endgame",icon:null,bubbleText:"d"}]}],description_student:"Question of the Day:  How does having a plan help to make a large project easier?This lesson introduces the process the class will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. The class walks through this process in a series of levels.   At the end of the lesson they have an opportunity to make improvements to the game to make it their own.",description_teacher:"Question of the Day:  How does having a plan help to make a large project easier?This lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels.  At the end of the lesson students have an opportunity to make improvements to the game to make it their own.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/25",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/25/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/25/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1580,position:26,relative_position:26,name:"Using the Game Design Process",key:"Using the Game Design Process",assessment:!1,title:"Lesson 26: Using the Game Design Process",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3342",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"3144",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/2",progression:"Sample Platform Jumper Game",progressionDisplayName:"Sample Platform Jumper Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"16061",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/3",progression:"Build a Platform Jumper",progressionDisplayName:"Build a Platform Jumper",kind:"puzzle",icon:"fa-file-text",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!0,bonus:null},{id:"3052",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/4",progression:"Platform Jumper - Background and Variables",progressionDisplayName:"Platform Jumper - Background and Variables",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"3176",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/5",progression:"Platform Jumper - Background and Variables",progressionDisplayName:"Platform Jumper - Background and Variables",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"3058",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/6",progression:"Platform Jumper - Background and Variables",progressionDisplayName:"Platform Jumper - Background and Variables",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"3164",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/7",progression:"Platform Jumper - Background and Variables",progressionDisplayName:"Platform Jumper - Background and Variables",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"3099",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/8",progression:"Platform Jumper - Platforms",progressionDisplayName:"Platform Jumper - Platforms",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"3105",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/9",progression:"Platform Jumper - Platforms",progressionDisplayName:"Platform Jumper - Platforms",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null},{id:"3111",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/10",progression:"Platform Jumper - Platforms",progressionDisplayName:"Platform Jumper - Platforms",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null},{id:"3081",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/11",progression:"Platform Jumper - Items",progressionDisplayName:"Platform Jumper - Items",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:11,bubbleText:"11",isConceptLevel:!1,bonus:null},{id:"3087",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/12",progression:"Platform Jumper - Items",progressionDisplayName:"Platform Jumper - Items",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:12,bubbleText:"12",isConceptLevel:!1,bonus:null},{id:"3093",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/13",progression:"Platform Jumper - Items",progressionDisplayName:"Platform Jumper - Items",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:13,bubbleText:"13",isConceptLevel:!1,bonus:null},{id:"3117",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/14",progression:"Platform Jumper - Player",progressionDisplayName:"Platform Jumper - Player",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:14,bubbleText:"14",isConceptLevel:!1,bonus:null},{id:"3123",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/15",progression:"Platform Jumper - Player",progressionDisplayName:"Platform Jumper - Player",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:15,bubbleText:"15",isConceptLevel:!1,bonus:null},{id:"3130",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/16",progression:"Platform Jumper - Player",progressionDisplayName:"Platform Jumper - Player",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:16,bubbleText:"16",isConceptLevel:!1,bonus:null},{id:"3136",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/17",progression:"Platform Jumper - Player",progressionDisplayName:"Platform Jumper - Player",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:17,bubbleText:"17",isConceptLevel:!1,bonus:null},{id:"3139",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/18",progression:"Platform Jumper Review",progressionDisplayName:"Platform Jumper Review",kind:"assessment",icon:null,isUnplugged:!1,levelNumber:18,bubbleText:"18",isConceptLevel:!1,bonus:null},{id:"3151",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/19",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:19,bubbleText:"19",isConceptLevel:!1,bonus:null},{id:"3158",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/20",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:20,bubbleText:"20",isConceptLevel:!1,bonus:null},{id:"21518",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/21",progression:"Challenges",progressionDisplayName:"Challenges",kind:"puzzle",icon:"fa fa-sitemap",isUnplugged:!1,levelNumber:21,bubbleText:"21",isConceptLevel:!1,bonus:null,sublevels:[{id:"3061",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/21/sublevel/1",name:"CSD U3 platform challenge animationfacing",icon:null,bubbleText:"a"},{id:"3067",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/21/sublevel/2",name:"CSD U3 platform challenge lives",icon:null,bubbleText:"b"},{id:"3064",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/21/sublevel/3",name:"CSD U3 platform challenge differentitem",icon:null,bubbleText:"c"},{id:"3068",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/21/sublevel/4",name:"CSD U3 platform challenge sidewalls",icon:null,bubbleText:"d"},{id:"3062",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/levels/21/sublevel/5",name:"CSD U3 platform challenge animations",icon:null,bubbleText:"e"}]}],description_student:"Question of the Day:  How can the problem solving process help programmers to manage large projects?In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.",description_teacher:"Question of the Day:  How can the problem solving process help programmers to manage large projects?In this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/26",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/26/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/26/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1581,position:27,relative_position:27,name:"Project - Design a Game",key:"Project - Design a Game",assessment:!1,title:"Lesson 27: Project - Design a Game",lesson_group_display_name:"Chapter 2: Building Games",lockable:!1,levels:[{id:"3345",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/1",progression:"Lesson Overview",progressionDisplayName:"Lesson Overview",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"16021",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/2",progression:"Design Your Game",progressionDisplayName:"Design Your Game",kind:"puzzle",icon:"fa-file-text",isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!0,bonus:null},{id:"3000",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/3",progression:"Project - Background and Variables",progressionDisplayName:"Project - Background and Variables",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"2952",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/4",progression:"Project - Background and Variables",progressionDisplayName:"Project - Background and Variables",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"2970",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/5",progression:"Project - Background and Variables",progressionDisplayName:"Project - Background and Variables",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null},{id:"2958",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/6",progression:"Project - Background and Variables",progressionDisplayName:"Project - Background and Variables",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:6,bubbleText:"6",isConceptLevel:!1,bonus:null},{id:"2946",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/7",progression:"Project - Sprites and Interactions",progressionDisplayName:"Project - Sprites and Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:7,bubbleText:"7",isConceptLevel:!1,bonus:null},{id:"2964",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/8",progression:"Project - Sprites and Interactions",progressionDisplayName:"Project - Sprites and Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:8,bubbleText:"8",isConceptLevel:!1,bonus:null},{id:"2982",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/9",progression:"Project - Sprites and Interactions",progressionDisplayName:"Project - Sprites and Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:9,bubbleText:"9",isConceptLevel:!1,bonus:null},{id:"2994",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/10",progression:"Project - Sprites and Interactions",progressionDisplayName:"Project - Sprites and Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:10,bubbleText:"10",isConceptLevel:!1,bonus:null},{id:"2976",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/11",progression:"Project - Sprites and Interactions",progressionDisplayName:"Project - Sprites and Interactions",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:11,bubbleText:"11",isConceptLevel:!1,bonus:null},{id:"4392",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/12",progression:"Review Your Game",progressionDisplayName:"Review Your Game",kind:"puzzle",icon:null,isUnplugged:!1,levelNumber:12,bubbleText:"12",isConceptLevel:!1,bonus:null},{id:"21657",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/levels/13/page/1",progression:"Reflection",progressionDisplayName:"Reflection",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:13,bubbleText:"13",isConceptLevel:!1,bonus:null}],description_student:"Question of the Day: How can the five CS practices (problem solving, persistence, communication, collaboration, and creativity) help programmers to complete large projects?The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class members share out their completed games.",description_teacher:"Question of the Day: How can the five CS practices (problem solving, persistence, communication, collaboration, and creativity) help programmers to complete large projects?Students will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csd-20/unit3/27",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/csd3-2020/27/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/27/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1582,position:28,relative_position:1,name:"Post-Project Test",key:"Post-Project Test",assessment:!1,title:"Post-Project Test",lesson_group_display_name:"Chapter 2: Building Games",lockable:!0,levels:[{id:"21605",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lockable/1/levels/1/page/1",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!1,bonus:null}],description_student:"",description_teacher:"",unplugged:!1,lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/1/extras"},{script_id:2,script_name:"csd3-2020",num_script_lessons:29,id:1583,position:29,relative_position:2,name:"CS Discoveries Post Course survey",key:"CS Discoveries Post Course survey",assessment:!1,title:"CS Discoveries Post Course survey",lesson_group_display_name:"Survey",lockable:!0,levels:[{id:"15855",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lockable/2/levels/1",kind:"puzzle",icon:"fa-file-text",isUnplugged:!1,levelNumber:1,bubbleText:"1",isConceptLevel:!0,bonus:null},{id:"21614",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lockable/2/levels/2/page/1",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:2,bubbleText:"2",isConceptLevel:!1,bonus:null},{id:"21614",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lockable/2/levels/2/page/2",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:3,bubbleText:"3",isConceptLevel:!1,bonus:null},{id:"21614",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lockable/2/levels/2/page/3",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:4,bubbleText:"4",isConceptLevel:!1,bonus:null},{id:"21614",url:"http://localhost-studio.code.org:3000/s/csd3-2020/lockable/2/levels/2/page/4",kind:"assessment",icon:"fa fa-list-ul",isUnplugged:!1,levelNumber:5,bubbleText:"5",isConceptLevel:!1,bonus:null}],description_student:"",description_teacher:"",unplugged:!1,lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/csd3-2020/lessons/2/extras"}].slice(0,numLessons),family_name:null,version_year:null,name:"csd3-2020"}}},"./src/templates/teacherDashboard/teacherDashboardTestHelpers.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.testSection=exports.noStudentsSection=exports.fakeCoursesWithProgress=exports.courseOfferings=void 0;exports.testSection={id:11,courseId:29,courseOfferingId:2,courseVersionId:3,unitId:null,name:"my_section",loginType:"word",grades:["3"],providerManaged:!1,lessonExtras:!1,ttsAutoplayEnabled:!1,pairingAllowed:!0,studentCount:10,code:"PMTKVH",participantType:"student"},exports.noStudentsSection={id:11,courseId:29,courseOfferingId:2,courseVersionId:3,unitId:null,name:"my_section",loginType:"word",grades:["3"],providerManaged:!1,lessonExtras:!1,ttsAutoplayEnabled:!1,pairingAllowed:!0,studentCount:0,code:"PMTKVH",participantType:"student"},exports.courseOfferings={1:{id:1,display_name:"Course A",is_featured:!1,participant_audience:"student",course_versions:{1:{id:1,key:"2017",version_year:"2017",content_root_id:1,name:"Course A",path:"/s/coursea-2017",type:"Unit",is_stable:!0,is_recommended:!1,locales:["العربية","Čeština","Deutsch","English"],units:{1:{id:1,name:"Course A",path:"/s/coursea-2017",lesson_extras_available:!0,position:null}}},2:{id:2,key:"2018",version_year:"2018",content_root_id:2,name:"Course A",path:"/s/coursea-2018",type:"Unit",is_stable:!0,is_recommended:!0,locales:["English","Italiano","Slovenčina"],units:{2:{id:2,name:"Course A (2018)",path:"/s/coursea-2018",lesson_extras_available:!0,position:null}}}}},2:{id:2,display_name:"Computer Science Discoveries",is_featured:!1,participant_audience:"student",course_versions:{3:{id:3,key:"2017",version_year:"'17-'18",content_root_id:52,name:"CS Discoveries 2017",path:"/courses/csd-2017",type:"UnitGroup",is_stable:!0,is_recommended:!1,locales:[],units:{3:{id:3,name:"Unit 1",path:"/s/csd1-2017",lesson_extras_available:!1,text_to_speech_enabled:!1,position:1},4:{id:4,name:"Unit 2",path:"/s/csd2-2017",lesson_extras_available:!1,text_to_speech_enabled:!1,position:2}}},4:{id:4,key:"2018",version_year:"'18-'19",content_root_id:51,name:"CS Discoveries 2018",path:"/courses/csd-2018",type:"UnitGroup",is_stable:!0,is_recommended:!0,locales:[],units:{5:{id:5,name:"Unit 1",path:"/s/csd1-2018",lesson_extras_available:!1,text_to_speech_enabled:!1,position:1},6:{id:6,name:"Unit 2",path:"/s/csd2-2018",lesson_extras_available:!1,text_to_speech_enabled:!1,position:2}}}}},3:{id:3,display_name:"Computer Science A",is_featured:!1,participant_audience:"student",course_versions:{5:{id:5,key:"2022",version_year:"2022",content_root_id:50,name:"CS A",path:"/courses/csa-2022",type:"UnitGroup",is_stable:!0,is_recommended:!0,locales:[],units:{7:{id:7,name:"Unit 1",path:"/s/csa1-2022",lesson_extras_available:!1,text_to_speech_enabled:!1,position:1},8:{id:8,name:"Unit 2",path:"/s/csa2-2022",lesson_extras_available:!1,text_to_speech_enabled:!1,position:2}}}}},4:{id:4,display_name:"Flappy",is_featured:!1,participant_audience:"student",course_versions:{6:{id:6,key:"unversioned",version_year:"unversioned",content_root_id:9,name:"Flappy",path:"/s/flappy",type:"Unit",is_stable:!0,is_recommended:!1,locales:[],units:{9:{id:9,name:"Flappy",path:"/s/flappy",lesson_extras_available:!1,text_to_speech_enabled:!1,position:null}}}}},5:{id:5,display_name:"Hello World",is_featured:!0,participant_audience:"student",course_versions:{7:{id:7,key:"unversioned",version_year:"unversioned",content_root_id:10,name:"Hello World",path:"/s/hello-world",type:"Unit",is_stable:!0,is_recommended:!0,locales:[],units:{10:{id:10,name:"Hello World",path:"/s/hello-world",lesson_extras_available:!1,text_to_speech_enabled:!1,position:null}}}}},6:{id:6,display_name:"Poem Art",is_featured:!0,participant_audience:"student",course_versions:{8:{id:8,key:"unversioned",version_year:"unversioned",content_root_id:11,name:"Poem Art",path:"/s/poem-art",type:"Unit",is_stable:!0,is_recommended:!0,locales:[],units:{11:{id:11,name:"Poem Art",path:"/s/poem-art",lesson_extras_available:!1,text_to_speech_enabled:!1,position:null}}}}},7:{id:7,display_name:"Artist",is_featured:!1,participant_audience:"student",course_versions:{9:{id:9,key:"unversioned",version_year:"unversioned",content_root_id:12,name:"Artist",path:"/s/artist",type:"Unit",is_stable:!0,is_recommended:!0,locales:[],units:{12:{id:12,name:"Artist",path:"/s/artist",lesson_extras_available:!1,text_to_speech_enabled:!1,position:null}}}}},8:{id:8,display_name:"Self Paced PL CSP",is_featured:!1,participant_audience:"teacher",course_versions:{10:{id:10,key:"2021",version_year:"2021",content_root_id:53,name:"Self Paced PL CSP 2021",path:"/courses/self-paced-pl-csp-2021",type:"UnitGroup",is_stable:!0,is_recommended:!0,locales:[],units:{13:{id:13,name:"Unit 1",path:"/s/self-paced-pl-csp1-2021",lesson_extras_available:!1,text_to_speech_enabled:!1,position:1},14:{id:14,name:"Unit 2",path:"/s/self-paced-pl-csp2-2021",lesson_extras_available:!1,text_to_speech_enabled:!1,position:2}}}}},9:{id:9,display_name:"Virtual PL CSP",is_featured:!1,participant_audience:"teacher",course_versions:{11:{id:11,key:"2020",version_year:"2020",content_root_id:15,name:"Virtual PL CSP 2020",path:"/s/vpl-csp-2020",type:"Unit",is_stable:!0,is_recommended:!0,locales:[],units:{15:{id:15,name:"Virtual PL CSP 2020",path:"/s/vpl-csp-2020",lesson_extras_available:!1,text_to_speech_enabled:!1,position:null}}},12:{id:12,key:"2021",version_year:"2021",content_root_id:16,name:"Virtual PL CSP 2021",path:"/s/vpl-csp-2021",type:"Unit",is_stable:!0,is_recommended:!0,locales:[],units:{16:{id:16,name:"Virtual PL CSP 2021",path:"/s/vpl-csp-2021",lesson_extras_available:!1,text_to_speech_enabled:!1,position:null}}}}}},exports.fakeCoursesWithProgress=[{id:1,display_name:"Course A",units:[{id:2,version_year:"2018",key:"coursea-2018",name:"Course A (2018)",position:null},{id:1,version_year:"2017",key:"coursea-2017",name:"Course A (2017)",position:null}]},{id:2,display_name:"CS Discoveries 2018",units:[{id:5,version_year:null,key:"csd1-2018",name:"Unit 1",position:1},{id:6,version_year:null,key:"csd2-2018",name:"Unit 2",position:2}]},{id:3,display_name:"Flappy",units:[{id:9,version_year:"unversioned",key:"flappy",name:"Flappy",position:null,description:"Make a flappy game!"}]}]},"./src/turtle/api.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var _utils=__webpack_require__("./src/utils.js"),_=__webpack_require__("./node_modules/lodash/lodash.js"),ArtistAPI=function ArtistAPI(){this.log=[]};module.exports=ArtistAPI,ArtistAPI.prototype.random=function(values){return(0,_utils.randomValue)(values)},ArtistAPI.prototype.drawCircle=function(size,id){for(var i=0;i<36;i++)this.moveForward(size,id),this.turnRight(10,id)},ArtistAPI.prototype.drawSnowflake=function(type,id){var i,j,k,random_colour=function random_colour(){var colors=Blockly.FieldColour.COLOURS;return colors[Math.floor(Math.random()*colors.length)]};switch("random"===type&&(type=_.sample(["fractal","flower","spiral","line","parallelogram","square"])),type){case"fractal":for(i=0;i<8;i++){for(this.jumpForward(45,id),this.turnLeft(45,id),j=0;j<3;j++){for(k=0;k<3;k++)this.moveForward(15,id),this.moveBackward(15,id),this.turnRight(45,id);this.turnLeft(90,id),this.moveBackward(15,id),this.turnLeft(45,id)}this.turnRight(90,id)}break;case"flower":for(i=0;i<5;i++)this.drawCircle(2,id),this.drawCircle(4,id),this.turnRight(72,id);break;case"spiral":for(i=0;i<20;i++)this.drawCircle(3,id),this.moveForward(20,id),this.turnRight(18,id);break;case"line":for(i=0;i<90;i++)this.penColour(random_colour()),this.moveForward(50,id),this.moveBackward(50,id),this.turnRight(4,id);this.penColour("#FFFFFF",id);break;case"parallelogram":for(i=0;i<10;i++){for(j=0;j<2;j++)this.moveForward(50,id),this.turnRight(60,id),this.moveForward(50,id),this.turnRight(120,id);this.turnRight(36,id)}break;case"square":for(i=0;i<10;i++){for(j=0;j<4;j++)this.moveForward(50,id),this.turnRight(90,id);this.turnRight(36,id)}}},ArtistAPI.prototype.moveForward=function(distance,id){this.log.push(["FD",distance,id])},ArtistAPI.prototype.moveBackward=function(distance,id){this.log.push(["FD",-distance,id])},ArtistAPI.prototype.moveUp=function(distance,id){this.log.push(["MV",distance,0,id])},ArtistAPI.prototype.moveDown=function(distance,id){this.log.push(["MV",distance,180,id])},ArtistAPI.prototype.moveLeft=function(distance,id){this.log.push(["MV",distance,270,id])},ArtistAPI.prototype.moveRight=function(distance,id){this.log.push(["MV",distance,90,id])},ArtistAPI.prototype.jumpTo=function(position,id){this.log.push(["JT",position,id])},ArtistAPI.prototype.jumpToXY=function(x,y,id){this.log.push(["JT",[x,y],id])},ArtistAPI.prototype.moveUpRight=function(distance,id){this.log.push(["MD",distance,45,id])},ArtistAPI.prototype.moveDownRight=function(distance,id){this.log.push(["MD",distance,135,id])},ArtistAPI.prototype.moveDownLeft=function(distance,id){this.log.push(["MD",distance,225,id])},ArtistAPI.prototype.moveUpLeft=function(distance,id){this.log.push(["MD",distance,315,id])},ArtistAPI.prototype.jumpUp=function(distance,id){this.log.push(["JD",distance,0,id])},ArtistAPI.prototype.jumpDown=function(distance,id){this.log.push(["JD",distance,180,id])},ArtistAPI.prototype.jumpLeft=function(distance,id){this.log.push(["JD",distance,270,id])},ArtistAPI.prototype.jumpRight=function(distance,id){this.log.push(["JD",distance,90,id])},ArtistAPI.prototype.jumpUpRight=function(distance,id){this.log.push(["JD",distance,45,id])},ArtistAPI.prototype.jumpDownRight=function(distance,id){this.log.push(["JD",distance,135,id])},ArtistAPI.prototype.jumpDownLeft=function(distance,id){this.log.push(["JD",distance,225,id])},ArtistAPI.prototype.jumpUpLeft=function(distance,id){this.log.push(["JD",distance,315,id])},ArtistAPI.prototype.jumpForward=function(distance,id){this.log.push(["JF",distance,id])},ArtistAPI.prototype.jumpBackward=function(distance,id){this.log.push(["JF",-distance,id])},ArtistAPI.prototype.turnRight=function(angle,id){this.log.push(["RT",angle,id])},ArtistAPI.prototype.turnLeft=function(angle,id){this.log.push(["RT",-angle,id])},ArtistAPI.prototype.pointTo=function(angle,id){this.log.push(["PT",angle,id])},ArtistAPI.prototype.globalAlpha=function(alpha,id){this.log.push(["GA",alpha,id])},ArtistAPI.prototype.penUp=function(id){this.log.push(["PU",id])},ArtistAPI.prototype.penDown=function(id){this.log.push(["PD",id])},ArtistAPI.prototype.penWidth=function(width,id){this.log.push(["PW",Math.max(width,0),id])},ArtistAPI.prototype.penColour=function(colour,id){this.log.push(["PC",colour,id])},ArtistAPI.prototype.penPattern=function(pattern,id){this.log.push(["PS",pattern,id])},ArtistAPI.prototype.hideTurtle=function(id){this.log.push(["HT",id])},ArtistAPI.prototype.showTurtle=function(id){this.log.push(["ST",id])},ArtistAPI.prototype.drawShape=function(sticker,size,id){this.log.push(["shape",sticker,size,id])},ArtistAPI.prototype.drawSticker=function(sticker,size,id){this.log.push(["sticker",sticker,size,id])},ArtistAPI.prototype.setArtist=function(artist,id){this.log.push(["setArtist",artist,id])}},"./src/util/CachedElement.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=CachedElement,exports.unitTestExports=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_server=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/server.browser.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function CachedElement(_ref){var elementType=_ref.elementType,cacheKey=_ref.cacheKey,createElement=_ref.createElement,htmlCache=elementsHtmlCache[elementType]||{},elementHtml=htmlCache[cacheKey];return elementHtml||(elementHtml=function createHtml(element){return _server.default.renderToStaticMarkup(element)}(createElement()),htmlCache[cacheKey]=elementHtml,elementsHtmlCache[elementType]=htmlCache),_react.default.createElement("div",{dangerouslySetInnerHTML:{__html:elementHtml}})}CachedElement.propTypes={elementType:_propTypes.default.string.isRequired,cacheKey:_propTypes.default.string.isRequired,createElement:_propTypes.default.func.isRequired};var elementsHtmlCache={};exports.unitTestExports={clearElementsCache:function clearElementsCache(){Object.keys(elementsHtmlCache).forEach((function(key){delete elementsHtmlCache[key]}))},elementsHtmlCache}},"./test/util/clearTimeoutsBetweenTests.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.clearTimeoutsBetweenTests=function clearTimeoutsBetweenTests(){var timeoutList=[],intervalList=[],leftover=[],setTimeoutNative=window.setTimeout,setIntervalNative=window.setInterval,clearTimeoutNative=window.clearTimeout,clearIntervalNative=window.clearInterval;window.setTimeout=function(){var result=setTimeoutNative.apply(void 0,arguments);return timeoutList.push(result),result},window.setInterval=function(){var result=setIntervalNative.apply(void 0,arguments);return intervalList.push(result),result},window.clearTimeout=function(id){var index=timeoutList.indexOf(id);return-1!==index&&timeoutList.splice(index,1),clearTimeoutNative(id)},window.clearInterval=function(id){var index=intervalList.indexOf(id);return-1!==index&&intervalList.splice(index,1),clearIntervalNative(id)},afterEach((function(){var testName=this&&this.currentTest&&this.currentTest.fullTitle();timeoutList.forEach((function(id){testName?leftover.push("(timeout)  "+testName):(leftover.push("(timeout)  Unknown test"),console.log("clearing leftover timeout")),clearTimeoutNative(id)})),intervalList.forEach((function(id){testName?leftover.push("(interval) "+testName):(leftover.push("(interval) Unknown test"),console.log("clearing leftover interval")),clearIntervalNative(id)})),timeoutList=[],intervalList=[]})),after((function(){console.log("Leftover timeouts/intervals: "+leftover.length)}))}},"./test/util/testUtils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"allowConsoleErrors",{enumerable:!0,get:function get(){return _throwOnConsole.allowConsoleErrors}}),Object.defineProperty(exports,"allowConsoleWarnings",{enumerable:!0,get:function get(){return _throwOnConsole.allowConsoleWarnings}}),Object.defineProperty(exports,"clearTimeoutsBetweenTests",{enumerable:!0,get:function get(){return _clearTimeoutsBetweenTests.clearTimeoutsBetweenTests}}),exports.createKeyEvent=function createKeyEvent(type,keyConfig){var keyboardEvent=new Event(type);return keyboardEvent.which=keyConfig.which,keyboardEvent.keyCode=keyConfig.keyCode,keyboardEvent.altKey=keyConfig.altKey,keyboardEvent.metaKey=keyConfig.metaKey,keyboardEvent.ctrlKey=keyConfig.ctrlKey,keyboardEvent.shiftKey=keyConfig.shiftKey,keyboardEvent},exports.createMouseEvent=function createMouseEvent(type,clientX,clientY){var evt,e={bubbles:!0,cancelable:"mousemove"!==type,view:window,detail:0,screenX:void 0,screenY:void 0,clientX,clientY,ctrlKey:!1,altKey:!1,shiftKey:!1,metaKey:!1,button:0,relatedTarget:void 0};if("function"==typeof document.createEvent)(evt=document.createEvent("MouseEvents")).initMouseEvent(type,e.bubbles,e.cancelable,e.view,e.detail,e.screenX,e.screenY,e.clientX,e.clientY,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,e.button,document.body.parentNode);else if(document.createEventObject){for(var prop in evt=document.createEventObject(),e)evt[prop]=e[prop];evt.button={0:1,1:4,2:2}[evt.button]||evt.button}return evt},exports.debugMode=function debugMode(){return-1!==location.search.substring(1).split("&").indexOf("debug")},exports.dragToVisualization=function dragToVisualization(type,left,top){var element=(0,_jquery.default)("[data-element-type='"+type+"']"),screenOffset=element.offset(),mousedown=_jquery.default.Event("mousedown",{which:1,pageX:screenOffset.left,pageY:screenOffset.top});element.trigger(mousedown);var drag=_jquery.default.Event("mousemove",{pageX:(0,_jquery.default)("#visualization").offset().left+left,pageY:(0,_jquery.default)("#visualization").offset().top+top});switch((0,_jquery.default)(document).trigger(drag),type){case"BUTTON":case"TEXT_INPUT":case"TEXT_AREA":case"RADIO_BUTTON":case"LABEL":case"SLIDER":case"CHECKBOX":case"DROPDOWN":(0,_jquery.default)(".draggingParent").first().children().first().css("box-sizing","border-box")}var halfWidth=(0,_jquery.default)(".draggingParent").width()/2,drag2=_jquery.default.Event("mousemove",{pageX:(0,_jquery.default)("#visualization").offset().left+left+halfWidth,pageY:(0,_jquery.default)("#visualization").offset().top+top});(0,_jquery.default)(document).trigger(drag2);var mouseup=_jquery.default.Event("mouseup",{pageX:(0,_jquery.default)("#visualization").offset().left+left+halfWidth,pageY:(0,_jquery.default)("#visualization").offset().top+top});(0,_jquery.default)(document).trigger(mouseup)},exports.enforceDocumentBodyCleanup=function enforceDocumentBodyCleanup(_ref,runTestCases){var initialInnerHTML,_ref$checkEveryTest=_ref.checkEveryTest,checkEveryTest=void 0!==_ref$checkEveryTest&&_ref$checkEveryTest,beforeFn=checkEveryTest?beforeEach:before,afterFn=checkEveryTest?afterEach:after;describe("",(function(){beforeFn((function(){initialInnerHTML||(initialInnerHTML=document.body.innerHTML),_sinon.default.spy(document.body,"addEventListener"),_sinon.default.spy(document.body,"removeEventListener")})),afterFn((function(){if(initialInnerHTML!==document.body.innerHTML)throw new Error("Test modified document.body.innerHTML:\n\nInitial:\n"+initialInnerHTML+"\n\nAfter:\n"+document.body.innerHTML);if(document.body.addEventListener.callCount!==document.body.removeEventListener.callCount)throw new Error("Added "+document.body.addEventListener.callCount+" event listener(s) to document.body, but only removed "+document.body.removeEventListener.callCount+" listeners");document.body.addEventListener.restore(),document.body.removeEventListener.restore()})),describe("",runTestCases)}))},exports.forEveryBooleanPermutation=function forEveryBooleanPermutation(fn){for(var argCount=fn.length,numPermutations=Math.pow(2,argCount),i=0;i<numPermutations;i++)fn.apply(null,(numberOfBooleans=argCount,function zeroPadLeft(string,desiredWidth){return("0".repeat(desiredWidth)+string).slice(-desiredWidth)}(i.toString(2),numberOfBooleans).split("").map((function(x){return"1"===x}))));var numberOfBooleans},exports.generateArtistAnswer=function generateArtistAnswer(generatedCode){var api=new(__webpack_require__("./src/turtle/api.js"));return api.log=[],generatedCode(api),api.log},exports.replaceOnWindow=function replaceOnWindow(key,newValue){if(Object.prototype.hasOwnProperty.call(originalWindowValues,key))throw new Error("Can't replace 'window.".concat(key,"' - it's already been replaced."));originalWindowValues[key]=window[key],window[key]=newValue},exports.restoreOnWindow=function restoreOnWindow(key){if(!Object.prototype.hasOwnProperty.call(originalWindowValues,key))throw new Error("Can't restore 'window.".concat(key,"' - it wasn't replaced."));window[key]=originalWindowValues[key],delete originalWindowValues[key]},exports.sandboxDocumentBody=function sandboxDocumentBody(){var originalDocumentBody,runOncePerTest=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],storeBody=function storeBody(){return originalDocumentBody=document.body.innerHTML},restoreBody=function restoreBody(){return document.body.innerHTML=originalDocumentBody};runOncePerTest?(beforeEach(storeBody),afterEach(restoreBody)):(beforeAll(storeBody),afterAll(restoreBody))},exports.setAceText=function setAceText(text){var aceEditor=window.__TestInterface.getDroplet().aceEditor;aceEditor.textInput.focus(),aceEditor.setValue(text)},exports.setExternalGlobals=function setExternalGlobals(){var beforeFunc=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"function"==typeof beforeAll?beforeAll:before,afterFunc=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"function"==typeof afterAll?afterAll:after;window.React=_react.default,window.dashboard=_objectSpread(_objectSpread({},window.dashboard),{},{assets,project});var sandbox=_sinon.default.createSandbox();beforeFunc((function(){sandbox.stub(project,"clearHtml"),sandbox.stub(project,"exceedsAbuseThreshold").returns(!1),sandbox.stub(project,"hasPrivacyProfanityViolation").returns(!1),sandbox.stub(project,"getCurrentId").returns("fake_id"),sandbox.stub(project,"isEditing").returns(!0),sandbox.stub(project,"getMakerAPIs").returns(!1),sandbox.stub(assets.listStore,"reset"),sandbox.stub(assets.listStore,"add").returns([]),sandbox.stub(assets.listStore,"remove").returns([]),sandbox.stub(assets.listStore,"list").returns([])})),afterFunc((function(){sandbox.restore()})),window.trackEvent=function(){}},exports.stubWindowDashboard=function stubWindowDashboard(value){var originalDashboard;beforeAll((function(){return originalDashboard=window.dashboard})),afterAll((function(){return window.dashboard=originalDashboard})),beforeEach((function(){return window.dashboard=value}))},exports.stubWindowPegasus=function stubWindowPegasus(value){var originalPegasus;beforeAll((function(){return originalPegasus=window.pegasus})),afterAll((function(){return window.pegasus=originalPegasus})),beforeEach((function(){return window.pegasus=value}))},Object.defineProperty(exports,"throwOnConsoleErrorsEverywhere",{enumerable:!0,get:function get(){return _throwOnConsole.throwOnConsoleErrorsEverywhere}}),Object.defineProperty(exports,"throwOnConsoleWarningsEverywhere",{enumerable:!0,get:function get(){return _throwOnConsole.throwOnConsoleWarningsEverywhere}}),exports.typeAceText=function typeAceText(text){var aceEditor=window.__TestInterface.getDroplet().aceEditor;aceEditor.textInput.focus(),aceEditor.onTextInput(text)};var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_sinon=_interopRequireDefault(__webpack_require__("./node_modules/sinon/lib/sinon.js")),_throwOnConsole=__webpack_require__("./test/util/throwOnConsole.js"),_clearTimeoutsBetweenTests=__webpack_require__("./test/util/clearTimeoutsBetweenTests.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var assets=__webpack_require__("./src/code-studio/assets.js"),project=__webpack_require__("./src/code-studio/initApp/project.js");var originalWindowValues={}},"./test/util/throwOnConsole.js":(__unused_webpack_module,exports)=>{"use strict";function throwOnConsoleEverywhere(methodName){var throwing=!0,wrappedMethod=null;return{throwEverywhere:function throwEverywhere(){beforeEach((function(){var testTitle;this.currentTest&&(testTitle=this.currentTest.title),wrappedMethod=console[methodName],console[methodName]=function(msg){var prefix=throwing?"":"[ignoring]";if(wrappedMethod.call(console,prefix,msg),throwing)throw console[methodName]=wrappedMethod,wrappedMethod=null,new Error("Call to console.".concat(methodName,' from "').concat(testTitle,'": ').concat(msg,"\n").concat(function getStack(){var stack;try{throw new Error}catch(e){stack=e.stack}return stack}()))}})),afterEach((function(){wrappedMethod&&(console[methodName]=wrappedMethod),wrappedMethod=null}))},allow:function allow(){beforeEach((function(){throwing=!1})),afterEach((function(){throwing=!0}))}}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.throwOnConsoleWarningsEverywhere=exports.throwOnConsoleErrorsEverywhere=exports.allowConsoleWarnings=exports.allowConsoleErrors=void 0;var consoleErrorFunctions=throwOnConsoleEverywhere("error"),consoleWarningFunctions=(exports.throwOnConsoleErrorsEverywhere=consoleErrorFunctions.throwEverywhere,exports.allowConsoleErrors=consoleErrorFunctions.allow,throwOnConsoleEverywhere("warn"));exports.throwOnConsoleWarningsEverywhere=consoleWarningFunctions.throwEverywhere,exports.allowConsoleWarnings=consoleWarningFunctions.allow},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/collapser-icon.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".KXmxTRHUYjJ6sgjwbnUy{color:inherit;margin:0;padding:0;border:none;border-radius:0;background-color:rgba(0,0,0,0)}.KXmxTRHUYjJ6sgjwbnUy:hover{box-shadow:none}.KXmxTRHUYjJ6sgjwbnUy:active{border:none !important}","",{version:3,sources:["webpack://./src/templates/collapser-icon.module.scss","webpack://./src/mixins.scss"],names:[],mappings:"AAEA,sBCMI,aDL4B,CCgB9B,QAAA,CACA,SAAA,CACA,WAAA,CACA,eAAA,CACA,8BAAA,CAEA,4BACE,eAAA,CAGF,6BACE,sBAAA",sourcesContent:['@import "../mixins.scss";\n\n.collapserIcon {\n  @include remove-button-styles(inherit);\n}\n',"// Removes (most) default button styling. Useful for retaining a clickable component's\n// original presentation when converting it to a <button>\n@mixin remove-button-styles(\n  $color: false,\n  $font-size: false,\n  $line-height: false\n) {\n  @if $color {\n    color: $color;\n  }\n\n  @if $font-size {\n    font-size: $font-size;\n  }\n\n  @if $line-height {\n    line-height: $line-height;\n  }\n\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 0;\n  background-color: transparent;\n\n  &:hover {\n    box-shadow: none;\n  }\n\n  &:active {\n    border: none !important;\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={collapserIcon:"KXmxTRHUYjJ6sgjwbnUy"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/sectionProgress/progressTables/progress-table-constants.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={MAX_BODY_HEIGHT:"603",TABLE_WIDTH:"906",STUDENT_LIST_WIDTH:"170",CONTENT_VIEW_WIDTH:"736",ROW_HEIGHT:"42",MAX_ROWS:"14",MIN_COLUMN_WIDTH:"40"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/sectionProgress/progressTables/progressTableStyles.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,":export{MAX_BODY_HEIGHT:603;TABLE_WIDTH:906;STUDENT_LIST_WIDTH:170;CONTENT_VIEW_WIDTH:736;ROW_HEIGHT:42;MAX_ROWS:14;MIN_COLUMN_WIDTH:40}.progress-table table{table-layout:fixed;border:1px solid;border-color:#bbb;border-collapse:separate}.progress-table th{background-color:#ececec;color:#5b6770;border-width:0 1px 2px 0;border-color:#bbb;height:42px}.progress-table th,.progress-table td{padding:0;box-sizing:border-box;border-right:1px solid;border-color:#bbb}.progress-table th:last-child,.progress-table td:last-child{border-right:0}.progress-table .cell-content{padding:0 4px}.progress-table .primary-row td{height:42px}.progress-table .expanded-row td{height:30px;border-width:0 1px 1px 0;border-style:solid;border-color:#bbb}.progress-table .expanded-row td:last-of-type{border-width:0 0 1px 0}.progress-table .first-expanded-row td{border-width:1px 1px 1px 0}.progress-table .first-expanded-row td:last-of-type{border-width:1px 0}.progress-table .student-list table,.progress-table .student-list th,.progress-table .student-list td{width:170px}.progress-table .student-list tbody tr,.progress-table .student-list tbody td{display:block;width:100%}.progress-table .student-list .content{height:42px;box-sizing:border-box;padding:10px;font-size:14px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}html[dir=RTL] .progress-table .student-list .content .fa{transform:scaleX(-1)}.progress-table .student-list .expanded-row td{border-width:0 0 1px 0}.progress-table .student-list .first-expanded-row td{border-width:1px 0}.progress-table .dark-row{background-color:#f2f2f2}.progress-table .content-view thead,.progress-table .content-view tbody{max-width:736px}.progress-table .content-view thead td,.progress-table .content-view tbody td{text-align:center}.progress-table .content-view .lesson-arrow{width:100%;display:flex;align-items:center;align-content:center}.progress-table .content-view .lesson-arrow .line{width:100%;height:0;border:1px solid;margin-inline-end:-7px;margin-inline-start:4px}.progress-table .content-view .lesson-arrow .arrow{display:inline-block;border-style:solid;border-width:0 2px 2px 0;width:6px;height:6px;transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}html[dir=RTL] .progress-table .content-view .lesson-arrow .arrow{border-width:2px 0 0 2px}","",{version:3,sources:["webpack://./src/templates/sectionProgress/progressTables/progress-table-constants.module.scss","webpack://./src/templates/sectionProgress/progressTables/progressTableStyles.scss","webpack://./../shared/css/color.scss"],names:[],mappings:"AAYA,QACE,mBAAA,CACA,eAAA,CACA,sBAAA,CACA,sBAAA,CACA,aAAA,CACA,WAZS,CAaT,mBAAA,CCdA,sBACE,kBAAA,CACA,gBAAA,CACA,iBCwEU,CDvEV,wBAAA,CAEF,mBACE,wBCsEW,CDrEX,aAAA,CACA,wBAAA,CACA,iBCiEU,CDhEV,WDZS,CCcX,sCAEE,SAAA,CACA,qBAAA,CACA,sBAAA,CACA,iBCyDU,CDxDV,4DACE,cAAA,CAGJ,8BACE,aAAA,CAGA,gCACE,WD7BO,CCiCT,iCACE,WDjCgB,CCkChB,wBAAA,CACA,kBAAA,CACA,iBCuCQ,CDrCV,8CACE,sBAAA,CAIF,uCACE,0BAAA,CAEF,oDACE,kBAAA,CAIF,sGAGE,WDlDe,CCqDf,8EAEE,aAAA,CACA,UAAA,CAGJ,uCACE,WDjEO,CCkEP,qBAAA,CACA,YAAA,CACA,cAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CAEE,yDACE,oBAAA,CAKJ,+CACE,sBAAA,CAIF,qDACE,kBAAA,CAIN,0BACE,wBC7Ec,CDgFd,wEAEE,eDzFe,CC0Ff,8EACE,iBAAA,CAGJ,4CACE,UAAA,CACA,YAAA,CACA,kBAAA,CACA,oBAAA,CACA,kDACE,UAAA,CACA,QAAA,CACA,gBAAA,CACA,sBAAA,CACA,uBAAA,CAEF,mDACE,oBAAA,CACA,kBAAA,CACA,wBAAA,CACA,SAAA,CACA,UAAA,CACA,wBAAA,CACA,gCAAA,CACA,iEACE,wBAAA",sourcesContent:['@use "sass:math";\n@import "style-constants";\n\n$scrollbar-height: 15px;\n$row-height: 42px;\n$expanded-row-height: 30px;\n$max-rows: 14;\n$max-height: $max-rows * $row-height + $scrollbar-height;\n$table-width: calc($content-width - 64px);\n$student-list-width: 170px;\n$content-view-width: $table-width - $student-list-width;\n\n:export {\n  MAX_BODY_HEIGHT: math.div($max-height, 1px);\n  TABLE_WIDTH: math.div($table-width, 1px);\n  STUDENT_LIST_WIDTH: math.div($student-list-width, 1px);\n  CONTENT_VIEW_WIDTH: math.div($content-view-width, 1px);\n  ROW_HEIGHT: math.div($row-height, 1px);\n  MAX_ROWS: $max-rows;\n  MIN_COLUMN_WIDTH: 40;\n}\n','@use "./progress-table-constants.module.scss" as constants;\n@import "color.scss";\n@import "style-constants";\n\n.progress-table {\n  table {\n    table-layout: fixed;\n    border: 1px solid;\n    border-color: $border-gray;\n    border-collapse: separate;\n  }\n  th {\n    background-color: $table-header;\n    color: $charcoal;\n    border-width: 0 1px 2px 0;\n    border-color: $border-gray;\n    height: constants.$row-height;\n  }\n  th,\n  td {\n    padding: 0;\n    box-sizing: border-box;\n    border-right: 1px solid;\n    border-color: $border-gray;\n    &:last-child {\n      border-right: 0;\n    }\n  }\n  .cell-content {\n    padding: 0 4px;\n  }\n  .primary-row {\n    td {\n      height: constants.$row-height;\n    }\n  }\n  .expanded-row {\n    td {\n      height: constants.$expanded-row-height;\n      border-width: 0 1px 1px 0;\n      border-style: solid;\n      border-color: $border-gray;\n    }\n    td:last-of-type {\n      border-width: 0 0 1px 0;\n    }\n  }\n  .first-expanded-row {\n    td {\n      border-width: 1px 1px 1px 0;\n    }\n    td:last-of-type {\n      border-width: 1px 0;\n    }\n  }\n  .student-list {\n    table,\n    th,\n    td {\n      width: constants.$student-list-width;\n    }\n    tbody {\n      tr,\n      td {\n        display: block;\n        width: 100%;\n      }\n    }\n    .content {\n      height: constants.$row-height;\n      box-sizing: border-box;\n      padding: 10px;\n      font-size: 14px;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n      .fa {\n        html[dir="RTL"] & {\n          transform: scaleX(-1);\n        }\n      }\n    }\n    .expanded-row {\n      td {\n        border-width: 0 0 1px 0;\n      }\n    }\n    .first-expanded-row {\n      td {\n        border-width: 1px 0;\n      }\n    }\n  }\n  .dark-row {\n    background-color: $background_gray;\n  }\n  .content-view {\n    thead,\n    tbody {\n      max-width: constants.$content-view-width;\n      td {\n        text-align: center;\n      }\n    }\n    .lesson-arrow {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      align-content: center;\n      .line {\n        width: 100%;\n        height: 0;\n        border: 1px solid;\n        margin-inline-end: -7px;\n        margin-inline-start: 4px;\n      }\n      .arrow {\n        display: inline-block;\n        border-style: solid;\n        border-width: 0 2px 2px 0;\n        width: 6px;\n        height: 6px;\n        transform: rotate(-45deg);\n        -webkit-transform: rotate(-45deg);\n        html[dir="RTL"] & {\n          border-width: 2px 0 0 2px;\n        }\n      }\n    }\n  }\n}\n',"// colors from https://www.dropbox.com/s/ycjiwt8vxlmv2ih/Code.org_stylesheet_v2_09.05.13.pdf\n\n// Please keep this file simple; it should only contain color definitions\n//   and aliases.  Variables defined in this file are exported to\n//   apps/src/util/color.js during the apps build process.\n\n$black: #000;\n$background_black: #121416;\n$dark_gray: #2D3139;\n$darkest_gray: #292F36;\n$dark_slate_gray: #282c34;\n$darkest_slate_gray: #25292d;\n$dark_charcoal: #4d575f;\n$charcoal: #5b6770;\n$light_gray: #949ca2;\n$lighter_gray: #c6cacd;\n$lightest_gray: #e7e8ea;\n$background_gray: #f2f2f2;\n$dimgray: #696969;\n$white: #fff;\n$default_blue: #3670b3;\n\n$dark_teal: #0094a3;\n$teal: #0093a4;\n$applab_button_teal: #1abc9c;\n$light_teal: #59cad3;\n$lightish_teal: #80d6de;\n$lighter_teal: #a6e3e8;\n$lightest_teal: #d9f3f5;\n$ai_rubric_cyan: #3cfff8;\n\n$purple: #8c52ba;\n$light_purple: #a69bc1;\n$lighter_purple: #cfc9de;\n$lightest_purple: #ebe8f1;\n\n$cyan: #0094ca;\n$light_cyan: #59b9dc;\n$lighter_cyan: #a6daed;\n$lightest_cyan: #d9eff7;\n$almost_white_cyan: #f5fcff;\n\n$orange: #ffa400;\n$light_orange: #ffc459;\n$lighter_orange: #ffe0a6;\n$lightest_orange: #fff2d9;\n$dark_orange: #ff8600;\n\n$green: #b9bf15;\n$light_green: #d1d567;\n$lighter_green: #e7e9ad;\n$lightest_green: #f5f5dc;\n$highlight_green: #8afc9b;\n\n$yellow: #ffb81d;\n$light_yellow: #ffdb74;\n$lighter_yellow: #ffebb5;\n$lightest_yellow: #fff7df;\n\n$goldenrod: #daa520;\n\n$header_text: $white;\n$bkgnd_color: $teal;\n$inset_color: $lighter_gray;\n$dark_color: $purple;\n$hdr_color: $purple;\n\n// Some extra colors.\n$red: #c00;\n$lightest_red: #fcc;\n$dark_red: #d62911;\n$realgreen: #008000;\n$realyellow: #ff0;\n$mustardyellow: #efcd1c;\n$twitter_blue: #00aced;\n$facebook_blue: #3b5998;\n$linkedin_blue: #0077B5;\n$dark_blue: #00647f;\n$blockly_flyout_gray: #ddd;\n$default_text: #333;\n$border_gray: #bbb;\n$border_light_gray: #d8d8d8;\n$table_header: #ececec;\n$table_light_row: #fcfcfc;\n$table_dark_row: #f4f4f4;\n\n// Progress colors.\n$level_submitted: $purple;\n$level_perfect: rgb(14, 190, 14);\n$level_passed: rgb(159, 212, 159);\n$level_attempted: $realyellow;\n$level_not_tried: #fefefe;\n$level_current: $orange;\n$level_review_rejected: $red;\n$level_review_accepted: rgb(11, 142, 11); // TODO: $level_passed;\n$assessment: $cyan;\n$workspace_running_background: #e5e5e5;\n\n// Experimental Sprite Lab validation colors.\n$dark_purple: #682A77;\n$bright_green: #0ebe0e;\n$neon_pink: #e9118f;\n\n// Links (used in apps).\n$link_color: #0596ce;\n\n// Shadow.\n$shadow: rgba(0, 0, 0, 0.3);\n\n// Colors that are taken from bootstrap, and not necessarily part of our core theme.\n$bootstrap_button_blue: #337ab7;\n$bootstrap_button_red: #d9534f;\n$bootstrap_error_background: #f2dede;\n$bootstrap_error_text: #b94a48;\n$bootstrap_v3_error_text: #a94442;\n$bootstrap_error_border: #ebccd1;\n$bootstrap_warning_background: #fcf8e3;\n$bootstrap_warning_text: #c09853;\n$bootstrap_warning_border: #faebcc;\n$bootstrap_border_color: #cccccc;\n$bootstrap_success_background: #dff0d8;\n$bootstrap_success_text: #468847;\n$bootstrap_success_border: #d6e9c6;\n\n// Colors taken from droplet, not part of our core theme.\n$droplet_light_green: #d3e965;\n$droplet_blue: #64b5f6;\n$droplet_bright_blue: #19c3e1;\n$droplet_yellow: #fff176;\n$droplet_orange: #ffb74d;\n$droplet_red: #f78183;\n$droplet_cyan: #4dd0e1;\n$droplet_pink: #f57ac6;\n$droplet_purple: #bb77c7;\n$droplet_green: #68d995;\n$droplet_white: $white;\n\n// Oceans: deep blue background.\n$oceans_deep_blue: rgb(2, 0, 28);\n\n// Dark theme background (used by default in Music Lab)\n$dark_black: #121212;\n\n// ===----===----===---- Phase 1 Colors: ----===----===----===\n// Brand\n$brand_primary_light: #E0F8F9;\n$brand_primary_default: #009EB0;\n$brand_primary_dark: #007785;\n\n$brand_secondary_light: #E0D1EC;\n$brand_secondary_default: #8C52BA;\n$brand_secondary_dark: #6C468A;\n\n$brand_accent_default: #ED6060;\n\n$brand_teal_5: #DFF2F4;\n\n//Product\n$product_affirmative_default: #3EA33E;\n\n$product_negative_light: #FDEBE9;\n$product_negative_default: #E5311A;\n$product_negative_dark: #AA2513;\n\n$product_caution_default: #F9CB28;\n\n$product_information_default: #007ACC;\n\n// Neutral\n$neutral_white: #FFFFFF;\n$neutral_light: #F7F8FA;\n$neutral_dark10: #EAECEF;\n$neutral_dark20: #D1D4D8;\n$neutral_dark30: #BEC2C7;\n$neutral_dark40: #ABB0B6;\n$neutral_dark50: #989EA5;\n$neutral_dark60: #858C94;\n$neutral_dark70: #727A83;\n$neutral_dark80: #5F6872;\n$neutral_dark90: #4C5661;\n$neutral_dark: #292F36;\n\n//Brands\n$google_brand_color: #0F9D58;\n$microsoft_brand_color: #FFB900;\n$facebook_brand_color: #3B5998;\n$clever_brand_color: #1464FF;\n\n// ===----===----===---- Design system colors: ----===----===----===\n\n$light_primary_100: #BFE4E8;\n$light_primary_500: #0093A4;\n$light_primary_700: #007785;\n\n$light_secondary_100: #E2D4EE;\n$light_secondary_500: #8C52BA;\n$light_secondary_700: #6C468A;\n\n$light_gray_50: #F7F8FA;\n$light_gray_100: #EAECEF;\n$light_gray_200: #D1D4D8;\n$light_gray_300: #BEC2C7;\n$light_gray_400: #ABB0B6;\n$light_gray_500: #989EA5;\n$light_gray_600: #858C94;\n$light_gray_700: #727A83;\n$light_gray_800: #5F6872;\n$light_gray_900: #4C5661;\n$light_gray_950: #394450;\n\n$light_affirmative_100: #E2F1E2;\n$light_affirmative_500: #3EA33E;\n$light_affirmative_700: #2D742D;\n\n$light_negative_100: #FBE0DD;\n$light_negative_500: #E5311A;\n$light_negative_700: #B24949;\n\n$light_caution_100: #FEF7DF;\n$light_caution_500: #F9CB28;\n$light_caution_700: #C7A220;\n\n$light_accent_100: #FAD7D7;\n$light_accent_500: #ED6060;\n$light_accent_700: #D84C4C;\n\n$light_aqua_100: #CEFFFD;\n$light_aqua_500: #3CFFF8;\n$light_aqua_700: #30CCC6;\n\n$light_orange_100: #FFEDCC;\n$light_orange_500: #FFA400;\n$light_orange_700: #CC8300;\n\n$light_info_100: #DCEFFB;\n$light_info_500: #1892E3;\n$light_info_700: #1375B6;\n\n$light_white: #FFFFFF;\n\n$light_black: #292F36;\n\n$light_black_opacity_90: rgba(41, 47, 54, 0.90);\n$light_black_opacity-80: rgba(41, 47, 54, 0.80);\n$light_black_opacity-70: rgba(41, 47, 54, 0.70);\n$light_black_opacity-60: rgba(41, 47, 54, 0.60);\n$light_black_opacity-50: rgba(41, 47, 54, 0.50);\n$light_black_opacity-40: rgba(41, 47, 54, 0.40);\n$light_black_opacity-30: rgba(41, 47, 54, 0.30);\n$light_black_opacity-20: rgba(41, 47, 54, 0.20);\n$light_black_opacity-10: rgba(41, 47, 54, 0.10);\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/nise sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/nise sync recursive",module.exports=webpackEmptyContext},"./src/templates/collapser-icon.module.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_collapser_icon_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/collapser-icon.module.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_collapser_icon_module_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_collapser_icon_module_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_collapser_icon_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_collapser_icon_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./src/templates/sectionProgress/progressTables/progress-table-constants.module.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progress_table_constants_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/sectionProgress/progressTables/progress-table-constants.module.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progress_table_constants_module_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progress_table_constants_module_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progress_table_constants_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progress_table_constants_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./src/templates/sectionProgress/progressTables/progressTableStyles.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progressTableStyles_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/sectionProgress/progressTables/progressTableStyles.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progressTableStyles_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progressTableStyles_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progressTableStyles_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_progressTableStyles_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./src/redux/localesRedux.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.setLocaleCode=void 0;var localeSlice=(0,__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js").createSlice)({name:"locales",initialState:{localeCode:null},reducers:{setLocaleCode:function(state,action){state.localeCode=action.payload}}});exports.setLocaleCode=localeSlice.actions.setLocaleCode,exports.default=localeSlice.reducer},"./src/templates/sectionProgress/progressTables/ProgressTableView.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SmallSectionSmallScript=exports.SmallSectionLargeScript=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_localesRedux=_interopRequireDefault(__webpack_require__("./src/redux/localesRedux.ts")),_unitSelectionRedux=_interopRequireDefault(__webpack_require__("./src/redux/unitSelectionRedux.js")),_currentUserRedux=_interopRequireDefault(__webpack_require__("./src/templates/currentUserRedux.js")),_ProgressTableView=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableView.jsx")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js"),_sectionProgressRedux=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js")),_SectionProgressToggle=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/SectionProgressToggle.jsx")),_teacherDashboardTestHelpers=__webpack_require__("./src/templates/teacherDashboard/teacherDashboardTestHelpers.js"),_teacherSectionsRedux=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js")),_decorators=__webpack_require__("./.storybook/decorators.js"),_sectionProgressTestHelpers=(__webpack_require__("./test/util/testUtils.js"),__webpack_require__("./src/templates/sectionProgress/sectionProgressTestHelpers.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var _TableWrapper=function(_React$Component){function _TableWrapper(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(_TableWrapper,_React$Component),_TableWrapper.prototype.render=function render(){return _react.default.createElement("div",{className:"main",style:{marginLeft:80,width:970,display:"block",backgroundColor:"#ffffff"}},_react.default.createElement(_SectionProgressToggle.default,null),_react.default.createElement(_ProgressTableView.default,{currentView:this.props.currentView}))},_TableWrapper}(_react.default.Component);_defineProperty(_TableWrapper,"propTypes",{currentView:_propTypes.default.oneOf(Object.values(_sectionProgressConstants.ViewType))});var TableWrapper=(0,_reactRedux.connect)((function(state){return{currentView:state.sectionProgress.currentView}}))(_TableWrapper),Template=function Template(args){var store=args.store;return _react.default.createElement(_reactRedux.Provider,{store},_react.default.createElement(TableWrapper,null))};function createStore(numStudents,numLessons){for(var scriptData=(0,_sectionProgressTestHelpers.getScriptData)(numLessons),section={id:11,script:scriptData,students:[],lessonExtras:!1},i=0;i<numStudents;i++)section.students.push({id:i,name:"Student"+i+" Long Lastname"});var initialState={currentUser:{isSortedByFamilyName:!0},sectionProgress:_objectSpread(_objectSpread({},(0,_sectionProgressTestHelpers.buildSectionProgress)(section.students,scriptData)),{},{lessonOfInterest:0,currentView:_sectionProgressConstants.ViewType.SUMMARY}),teacherSections:{selectedSectionId:section.id,sections:[section],selectedStudents:section.students},unitSelection:{scriptId:scriptData.id,coursesWithProgress:_teacherDashboardTestHelpers.fakeCoursesWithProgress}};return(0,_decorators.reduxStore)({currentUser:_currentUserRedux.default,sectionProgress:_sectionProgressRedux.default,unitSelection:_unitSelectionRedux.default,teacherSections:_teacherSectionsRedux.default,locales:_localesRedux.default},initialState)}(exports.SmallSectionSmallScript=Template.bind({})).args={store:createStore(3,10)},(exports.SmallSectionLargeScript=Template.bind({})).args={store:createStore(3,30)};exports.default={component:_ProgressTableView.default}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,