(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3739],{"./src/code-studio/components/SortedTableSelect.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),_Headings=__webpack_require__("./src/lib/ui/Headings.jsx"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_tableConstants=__webpack_require__("./src/templates/tables/tableConstants.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_lodash=__webpack_require__("./node_modules/lodash/lodash.js"),sort=_interopRequireWildcard(__webpack_require__("./node_modules/sortabular/dist/index.js")),_wrapped_sortable=_interopRequireDefault(__webpack_require__("./src/templates/tables/wrapped_sortable.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var DEFAULT_SORT={1:{direction:"asc",position:0}},SortedTableSelect=exports.default=function(_React$Component){function SortedTableSelect(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",{sortingColumns:DEFAULT_SORT,selectedOption:void 0}),_defineProperty(_this,"areAllSelected",(function(){return!_this.props.rowData.find((function(row){return!row.isChecked}))})),_defineProperty(_this,"toggleSelectAll",(function(){_this.props.onSelectAll(!_this.areAllSelected())})),_defineProperty(_this,"selectedRowHeaderFormatter",(function(){return _react.default.createElement("input",{style:styles.checkbox,type:"checkbox",checked:_this.areAllSelected(),onChange:_this.toggleSelectAll})})),_defineProperty(_this,"selectedRowFormatter",(function(_,_ref){var rowData=_ref.rowData,onRowChecked=_this.props.onRowChecked;return _react.default.createElement("input",{style:styles.checkbox,type:"checkbox",checked:rowData.isChecked,onChange:function onChange(){return onRowChecked(rowData.id)}})})),_defineProperty(_this,"getColumns",(function(sortable){return[{property:"selected",header:{label:"",formatters:[_this.selectedRowHeaderFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.checkboxCell)}},cell:{formatters:[_this.selectedRowFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.checkboxCell)}}},{property:"name",header:{label:_locale.default.name(),props:{style:_objectSpread({},_tableConstants.tableLayoutStyles.headerCell)},transforms:[sortable]},cell:{props:{style:_objectSpread({},_tableConstants.tableLayoutStyles.cell)}}}]})),_defineProperty(_this,"renderOptions",(function(){var selectOptions=_this.props.options.map((function(option){return _react.default.createElement("option",{key:option.id,value:option.id},option.name)}));return selectOptions.unshift(_react.default.createElement("option",{key:"empty",value:""})),selectOptions})),_defineProperty(_this,"getSortingColumns",(function(){return _this.state.sortingColumns||{}})),_defineProperty(_this,"onSort",(function(selectedColumn){_this.setState({sortingColumns:sort.byColumn({sortingColumns:_this.state.sortingColumns,sortingOrder:{FIRST:"asc",asc:"desc",desc:"asc"},selectedColumn})})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SortedTableSelect,_React$Component),SortedTableSelect.prototype.render=function render(){var _this$props=this.props,rowData=_this$props.rowData,onChooseOption=_this$props.onChooseOption,descriptionText=_this$props.descriptionText,optionsDescriptionText=_this$props.optionsDescriptionText,titleText=_this$props.titleText,children=_this$props.children,tableDescriptionText=_this$props.tableDescriptionText,sortingColumns=this.getSortingColumns(),sortable=(0,_wrapped_sortable.default)(this.getSortingColumns,this.onSort,_tableConstants.sortableOptions),columns=this.getColumns(sortable),sortedRows=sort.sorter({columns,sortingColumns,sort:_lodash.orderBy})(rowData);return _react.default.createElement("div",{className:"ui-test-sortable-table-select"},titleText&&_react.default.createElement(_Headings.Heading1,null,titleText),_react.default.createElement("div",{style:styles.container},_react.default.createElement("div",{style:styles.leftColumn},_react.default.createElement(Table.Provider,{columns,style:styles.table},_react.default.createElement(Table.Header,null),_react.default.createElement(Table.Body,{rows:sortedRows,rowKey:"id"})),tableDescriptionText&&_react.default.createElement("i",{style:styles.italics},tableDescriptionText)),_react.default.createElement("div",{style:styles.rightColumn},descriptionText&&_react.default.createElement("div",{style:styles.infoText},descriptionText),optionsDescriptionText&&_react.default.createElement("label",{htmlFor:"selectOption",style:styles.label},optionsDescriptionText),_react.default.createElement("select",{name:"selectOption",onChange:onChooseOption},this.renderOptions()),children)))},SortedTableSelect}(_react.default.Component);_defineProperty(SortedTableSelect,"propTypes",{rowData:_propTypes.default.arrayOf(_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired})).isRequired,onRowChecked:_propTypes.default.func.isRequired,options:_propTypes.default.array.isRequired,onChooseOption:_propTypes.default.func.isRequired,descriptionText:_propTypes.default.string,optionsDescriptionText:_propTypes.default.string,titleText:_propTypes.default.string,children:_propTypes.default.node,onSelectAll:_propTypes.default.func,tableDescriptionText:_propTypes.default.string});var styles={checkboxCell:{width:50,textAlign:"center"},checkbox:{margin:0},container:{display:"flex"},table:{width:300,margin:2},leftColumn:{width:300},rightColumn:{flex:1,paddingLeft:20},infoText:{paddingTop:5,paddingBottom:10},label:{paddingTop:10},italics:{color:_color.default.purple}};module.exports=exports.default},"./src/lib/ui/Headings.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.h3Style=exports.h3RebrandingStyle=exports.h2Style=exports.h1Style=exports.Heading3=exports.Heading2=exports.Heading1=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_excluded=["children","style"],_excluded2=["children","style"],_excluded3=["children","isRebranded","style"];function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var baseHeadingStyle=_objectSpread(_objectSpread({display:"block"},_fontConstants.default["main-font-semi-bold"]),{},{margin:"10px 0",color:_color.default.dark_charcoal}),h1Style=exports.h1Style=_objectSpread(_objectSpread(_objectSpread({},baseHeadingStyle),_fontConstants.default["main-font-bold"]),{},{fontSize:32,lineHeight:"48px"});_defineProperty(exports.Heading1=function(_Component){function Heading1(){return _Component.apply(this,arguments)||this}return _inheritsLoose(Heading1,_Component),Heading1.prototype.render=function render(){var _this$props=this.props,children=_this$props.children,style=_this$props.style,restProps=_objectWithoutProperties(_this$props,_excluded);return _react.default.createElement("h1",_extends({},restProps,{style:_objectSpread(_objectSpread({},h1Style),style)}),children)},Heading1}(_react.Component),"propTypes",{children:_propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node),_propTypes.default.node]).isRequired,style:_propTypes.default.object});var h2Style=exports.h2Style=_objectSpread(_objectSpread(_objectSpread({},baseHeadingStyle),_fontConstants.default["main-font-regular"]),{},{fontSize:24,lineHeight:"48px"});_defineProperty(exports.Heading2=function(_Component2){function Heading2(){return _Component2.apply(this,arguments)||this}return _inheritsLoose(Heading2,_Component2),Heading2.prototype.render=function render(){var _this$props2=this.props,children=_this$props2.children,style=_this$props2.style,restProps=_objectWithoutProperties(_this$props2,_excluded2);return _react.default.createElement("h2",_extends({},restProps,{style:_objectSpread(_objectSpread({},h2Style),style)}),children)},Heading2}(_react.Component),"propTypes",{children:_propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node),_propTypes.default.node]).isRequired,style:_propTypes.default.object});var h3Style=exports.h3Style=_objectSpread(_objectSpread(_objectSpread({},baseHeadingStyle),_fontConstants.default["main-font-semi-bold"]),{},{fontSize:16,lineHeight:"24px"}),h3RebrandingStyle=exports.h3RebrandingStyle=_objectSpread(_objectSpread({},baseHeadingStyle),{},{fontFamily:'"Barlow Semi Condensed Semibold", sans-serif',fontSize:"1.75em",lineHeight:"1.2"});_defineProperty(exports.Heading3=function(_Component3){function Heading3(){return _Component3.apply(this,arguments)||this}return _inheritsLoose(Heading3,_Component3),Heading3.prototype.render=function render(){var _this$props3=this.props,children=_this$props3.children,isRebranded=_this$props3.isRebranded,style=_this$props3.style,restProps=_objectWithoutProperties(_this$props3,_excluded3),headingStyles=_objectSpread(_objectSpread({},isRebranded?h3RebrandingStyle:h3Style),style);return _react.default.createElement("h3",_extends({},restProps,{style:headingStyles}),children)},Heading3}(_react.Component),"propTypes",{children:_propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node),_propTypes.default.node]).isRequired,style:_propTypes.default.object,isRebranded:_propTypes.default.bool})},"./src/styleConstants.js":module=>{module.exports={"workspace-headers-height":30,"resize-bar-width":13,"delete-opacity":"0.5","content-width":970}},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/constants.js"),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/templates/manageStudents/MoveStudents.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedMoveStudents=void 0;var _lodash=__webpack_require__("./node_modules/lodash/lodash.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_SortedTableSelect=_interopRequireDefault(__webpack_require__("./src/code-studio/components/SortedTableSelect.jsx")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_manageStudentsRedux=__webpack_require__("./src/templates/manageStudents/manageStudentsRedux.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var MoveStudents=function(_Component){function MoveStudents(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",{isDialogOpen:!1}),_defineProperty(_this,"openDialog",(function(){_this.setState({isDialogOpen:!0}),_firehose.default.putRecord({study:"teacher-dashboard",study_group:"manage-students-actions",event:"move-students-button-click",data_json:JSON.stringify({sectionId:_this.props.currentSectionId})},{includeUserId:!0})})),_defineProperty(_this,"closeDialog",(function(){_this.setState({isDialogOpen:!1}),_this.props.cancelStudentTransfer()})),_defineProperty(_this,"getStudentIds",(function(){return _this.props.studentData.map((function(s){return s.id}))})),_defineProperty(_this,"toggleStudentSelected",(function(studentId){var studentIds=_toConsumableArray(_this.props.transferData.studentIds);if(studentIds.includes(studentId)){var studentIndex=studentIds.indexOf(studentId);studentIds.splice(studentIndex,1)}else studentIds.push(studentId);_this.props.updateStudentTransfer({studentIds})})),_defineProperty(_this,"isValidDestinationSection",(function(section){var isSameAsSource=section.id===_this.props.currentSectionId,isExternallyRostered=![_sharedConstants.SectionLoginType.word,_sharedConstants.SectionLoginType.picture,_sharedConstants.SectionLoginType.email].includes(section.loginType);return!isSameAsSource&&!isExternallyRostered})),_defineProperty(_this,"getOptions",(function(){var sections=_this.props.sections,options=Object.keys(sections).map((function(sectionId){var section=sections[sectionId];return _this.isValidDestinationSection(section)?{id:section.id,name:section.name}:null}));return(options=(0,_lodash.compact)(options)).push({id:"otherTeacher",name:_locale.default.otherTeacher()}),options})),_defineProperty(_this,"onChangeSection",(function(event){var newTransferData,sectionValue=event.target.value;newTransferData="otherTeacher"===sectionValue?{otherTeacher:!0,sectionId:null}:{otherTeacher:!1,sectionId:parseInt(sectionValue),copyStudents:!1},_this.props.updateStudentTransfer(_objectSpread({},newTransferData))})),_defineProperty(_this,"onChangeTeacherSection",(function(event){_this.props.updateStudentTransfer({otherTeacherSection:event.target.value})})),_defineProperty(_this,"onChangeMoveOrCopy",(function(event){_this.props.updateStudentTransfer({copyStudents:event.target.value===_manageStudentsRedux.TransferType.COPY_STUDENTS})})),_defineProperty(_this,"transfer",(function(){_this.props.transferStudents(_this.closeDialog)})),_defineProperty(_this,"isButtonDisabled",(function(){var _this$props$transferD=_this.props.transferData,studentIds=_this$props$transferD.studentIds,sectionId=_this$props$transferD.sectionId,otherTeacher=_this$props$transferD.otherTeacher,otherTeacherSection=_this$props$transferD.otherTeacherSection;return otherTeacher?0===studentIds.length||!otherTeacherSection:0===studentIds.length||!sectionId})),_defineProperty(_this,"toggleAll",(function(shouldSelectAll){var studentIds=[];shouldSelectAll&&(studentIds=_this.getStudentIds()),_this.props.updateStudentTransfer({studentIds})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MoveStudents,_Component),MoveStudents.prototype.render=function render(){var _this2=this,_this$props=this.props,studentData=_this$props.studentData,transferData=_this$props.transferData,transferStatus=_this$props.transferStatus,pendingTransfer=transferStatus.status===_manageStudentsRedux.TransferStatus.PENDING,selectedStudentData=studentData.map((function(row){return _objectSpread(_objectSpread({},row),{},{isChecked:transferData.studentIds.includes(row.id)})}));return _react.default.createElement("div",null,_react.default.createElement(_Button.default,{style:styles.buttonWithoutMargin,onClick:this.openDialog,color:_Button.default.ButtonColor.gray,text:_locale.default.moveStudents(),icon:"sign-out"}),_react.default.createElement(_BaseDialog.default,{useUpdatedStyles:!0,isOpen:this.state.isDialogOpen,style:styles.dialog,handleClose:this.closeDialog},_react.default.createElement(_SortedTableSelect.default,{rowData:selectedStudentData,onRowChecked:function onRowChecked(id){return _this2.toggleStudentSelected(id)},options:this.getOptions(),onChooseOption:this.onChangeSection,descriptionText:_locale.default.selectStudentsToMove(),optionsDescriptionText:"".concat(_locale.default.moveToSection(),":"),titleText:_locale.default.moveStudents(),onSelectAll:function onSelectAll(shouldSelectAll){return _this2.toggleAll(shouldSelectAll)}},_react.default.createElement("div",null,transferStatus.status===_manageStudentsRedux.TransferStatus.FAIL&&_react.default.createElement("div",{id:"uitest-error",style:styles.error},transferStatus.error),transferData.otherTeacher&&_react.default.createElement("div",{id:"uitest-other-teacher"},_react.default.createElement("label",{htmlFor:"sectionCode",style:styles.label},"".concat(_locale.default.enterSectionCode(),":")),_react.default.createElement("input",{required:!0,name:"sectionCode",style:styles.sectionInput,value:transferData.otherTeacherSection,onChange:this.onChangeTeacherSection,placeholder:_locale.default.sectionCodePlaceholder()}),_react.default.createElement("label",{style:styles.label},_locale.default.bothSectionsQuestion()),_react.default.createElement("label",{style:styles.input},_react.default.createElement("input",{type:"radio",value:_manageStudentsRedux.TransferType.COPY_STUDENTS,checked:transferData.copyStudents,onChange:this.onChangeMoveOrCopy}),_react.default.createElement("span",{style:styles.radioOption},_locale.default.copyStudentsConfirm())),_react.default.createElement("label",{style:styles.input},_react.default.createElement("input",{type:"radio",value:"move",checked:!transferData.copyStudents,onChange:this.onChangeMoveOrCopy}),_react.default.createElement("span",{style:styles.radioOption},_locale.default.moveStudentsConfirm()))))),_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_Button.default,{style:styles.buttonWithoutMargin,text:_locale.default.dialogCancel(),onClick:this.closeDialog,color:_Button.default.ButtonColor.gray}),_react.default.createElement(_Button.default,{style:styles.buttonWithoutMargin,text:_locale.default.moveStudents(),onClick:this.transfer,color:_Button.default.ButtonColor.brandSecondaryDefault,disabled:pendingTransfer||this.isButtonDisabled(),isPending:pendingTransfer,pendingText:_locale.default.movingStudents()}))))},MoveStudents}(_react.Component);_defineProperty(MoveStudents,"propTypes",{studentData:_propTypes.default.arrayOf(_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired})).isRequired,transferData:_propTypes.default.shape({studentIds:_propTypes.default.array.isRequired,sectionId:_propTypes.default.number,otherTeacher:_propTypes.default.bool.isRequired,otherTeacherSection:_propTypes.default.string.isRequired,copyStudents:_propTypes.default.bool.isRequired}),transferStatus:_propTypes.default.shape({status:_propTypes.default.string,type:_propTypes.default.string,error:_propTypes.default.string}),sections:_propTypes.default.arrayOf(_propTypes.default.shape({name:_propTypes.default.string.isRequired,id:_propTypes.default.number.isRequired,loginType:_propTypes.default.string.isRequired})).isRequired,currentSectionId:_propTypes.default.number.isRequired,updateStudentTransfer:_propTypes.default.func.isRequired,transferStudents:_propTypes.default.func.isRequired,cancelStudentTransfer:_propTypes.default.func.isRequired});var styles={dialog:{padding:20,width:800,marginLeft:-400},buttonWithoutMargin:{margin:0,marginBottom:5},label:{paddingTop:10},input:{marginLeft:10},sectionInput:{width:225},radioOption:_objectSpread({paddingLeft:10},_fontConstants.default["main-font-regular"]),error:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{color:_color.default.red,paddingBottom:10})};exports.UnconnectedMoveStudents=MoveStudents,exports.default=(0,_reactRedux.connect)((function(state){return{sections:(0,_teacherSectionsRedux.getVisibleSections)(state),currentSectionId:state.teacherSections.selectedSectionId}}),(function(dispatch){return{updateStudentTransfer:function updateStudentTransfer(transferData){dispatch((0,_manageStudentsRedux.updateStudentTransfer)(transferData))},transferStudents:function transferStudents(onComplete){dispatch((0,_manageStudentsRedux.transferStudents)(onComplete))},cancelStudentTransfer:function cancelStudentTransfer(){dispatch((0,_manageStudentsRedux.cancelStudentTransfer)())}}}))(MoveStudents)},"./src/templates/tables/tableConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tableLayoutStyles=exports.sortableOptions=exports.plTableLayoutStyles=exports.NAME_CELL_INPUT_WIDTH=void 0;var _fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_styleConstants=_interopRequireDefault(__webpack_require__("./src/styleConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.tableLayoutStyles={tableText:{textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"},table:{borderWidth:1,borderStyle:"solid",borderColor:_color.default.border_gray,width:_styleConstants.default["content-width"],backgroundColor:_color.default.table_light_row},cell:{maxWidth:200,border:"1px solid",borderColor:_color.default.border_light_gray,padding:10,fontSize:14},headerCell:{backgroundColor:_color.default.table_header,fontWeight:"bold",borderColor:_color.default.border_light_gray,borderStyle:"solid",borderBottomWidth:1,borderTopWidth:0,borderLeftWidth:0,borderRightWidth:1,paddingTop:20,paddingBottom:20,color:_color.default.charcoal,textAlign:"inherit"},link:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,textDecoration:"none"}),unsortableHeader:{paddingLeft:25},unsortableHeaderRTL:{paddingRight:25}},exports.plTableLayoutStyles={link:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,color:_color.default.neutral_dark,textDecoration:"underline"}),sectionCodeLink:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,color:_color.default.brand_secondary_default}),currentUnit:{marginTop:10,fontSize:14},colButton:{paddingTop:20,paddingLeft:20,paddingBottom:20,width:40},participantTypeCell:{fontSize:14},leaveButton:{fontSize:14}},exports.sortableOptions={default:{color:"rgba(0, 0, 0, 0.2 )"}},exports.NAME_CELL_INPUT_WIDTH=160},"./src/templates/tables/wrapped_sortable.js":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),sort=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/sortabular/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_excluded=["className"];function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}exports.default=function wrappedSortable(getSortingColumns,onSort){var styles=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},basicSortable=sort.sort({getSortingColumns,onSort});return function(label,columnInfo){var _basicSortable=basicSortable(label,columnInfo),newClassName=_basicSortable.className,newProps=_objectWithoutProperties(_basicSortable,_excluded),sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort",className:"fa-fw",style:styles.default});/sort-asc/.test(newClassName)?sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-asc",className:"fa-fw",style:styles.sortAsc}):/sort-desc/.test(newClassName)&&(sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-desc",className:"fa-fw",style:styles.sortDesc}));return _objectSpread(_objectSpread({},newProps),{},{style:Object.assign({},{cursor:"pointer"}),children:_react.default.createElement("span",{style:styles.container},_react.default.createElement("span",{key:"icon",style:{whiteSpace:"nowrap"}},sortIcon),_react.default.createElement("span",{key:"label"},label))})}};module.exports=exports.default},"./src/templates/teacherDashboard/DialogFooter.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var style={aboveFooter:{height:"90px"},footer:{position:"absolute",height:"100px",padding:"0 20px",left:"0",right:"0",bottom:"0",background:"white",zIndex:"500"},buttonRow:{display:"flex",flexFlow:"row",justifyContent:"space-between"},rightAlign:{justifyContent:"flex-end"}};_defineProperty(exports.default=function(_Component){function DialogFooter(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(DialogFooter,_Component),DialogFooter.prototype.render=function render(){var buttonRowStyle=this.props.rightAlign?_objectSpread(_objectSpread({},style.buttonRow),style.rightAlign):style.buttonRow;return _react.default.createElement("div",null,_react.default.createElement("div",{style:style.aboveFooter}),_react.default.createElement("div",{style:style.footer},_react.default.createElement("hr",null),_react.default.createElement("div",{style:buttonRowStyle},this.props.children)))},DialogFooter}(_react.Component),"propTypes",{rightAlign:_propTypes.default.bool,children:_propTypes.default.any}),module.exports=exports.default}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,