/*! For license information please see templates-progress-ProgressLesson-story.c53b0e56.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[4632],{"./src/templates/progress/FocusAreaIndicator.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var styles={main:{display:"inline-block",position:"absolute",right:0,top:0,whiteSpace:"nowrap"},arrowContainer:{display:"inline-block",position:"relative",top:10},leftArrow:{display:"inline-block",width:0,height:0,borderStyle:"solid",borderWidth:"17px 20px 17px",borderColor:"transparent ".concat(_color.default.cyan," transparent transparent")},focusArea:{display:"inline-block",backgroundColor:_color.default.cyan,color:_color.default.white,height:34,lineHeight:"34px",position:"relative",top:-3},text:{display:"inline-block"},focusAreaIcon:{display:"inline-block",color:_color.default.white,lineHeight:"13px",padding:5,marginLeft:5,marginRight:5,borderRadius:4,":hover":{backgroundColor:_color.default.default_blue}}};exports.default=(0,_radium.default)((function FocusAreaIndicator(){return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.arrowContainer},_react.default.createElement("div",{style:styles.leftArrow})),_react.default.createElement("div",{style:styles.focusArea},_react.default.createElement("div",{style:styles.text},"Focus Area"),_react.default.createElement("a",{href:window.location.pathname+"/preview-assignments"},_react.default.createElement("div",{style:styles.focusAreaIcon,"data-tip":!0,"data-for":"focus-area"},_react.default.createElement(_FontAwesome.default,{icon:"pencil"})))),_react.default.createElement(_reactTooltip.default,{id:"focus-area",role:"tooltip",effect:"solid"},"Click to change your focus area."))}));module.exports=exports.default},"./src/templates/progress/ProgressLesson.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressLesson=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_viewAsRedux=__webpack_require__("./src/code-studio/viewAsRedux.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_FocusAreaIndicator=_interopRequireDefault(__webpack_require__("./src/templates/progress/FocusAreaIndicator.jsx")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_ProgressLessonContent=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressLessonContent.jsx")),_ProgressLessonTeacherInfo=_interopRequireDefault(__webpack_require__("./src/templates/progress/ProgressLessonTeacherInfo.jsx")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressLesson=function(_React$Component){function ProgressLesson(props){var _this;return _defineProperty(_this=_React$Component.call(this,props)||this,"toggleCollapsed",(function(){return _this.setState({collapsed:!_this.state.collapsed})})),_defineProperty(_this,"onClickStudentLessonPlan",(function(){_firehose.default.putRecord({study:"script_overview_actions",study_group:"student_lesson_plan",event:"open_student_lesson_plan",data_json:JSON.stringify({lesson_id:_this.props.lesson.id,script_id:_this.props.scriptId})},{includeUserId:!0})})),_this.state={collapsed:props.viewAs!==_viewAsRedux.ViewType.Instructor&&props.currentLessonId!==props.lesson.id},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressLesson,_React$Component);var _proto=ProgressLesson.prototype;return _proto.UNSAFE_componentWillReceiveProps=function UNSAFE_componentWillReceiveProps(nextProps){nextProps.currentLessonId!==this.props.currentLessonId&&this.setState({collapsed:this.state.collapsed&&nextProps.currentLessonId!==this.props.lesson.id})},_proto.render=function render(){var _this2=this,_this$props=this.props,lesson=_this$props.lesson,levels=_this$props.levels,viewAs=_this$props.viewAs,isVisible=_this$props.isVisible,hiddenForStudents=_this$props.hiddenForStudents,isLockedForUser=_this$props.isLockedForUser,isLockedForAllStudents=_this$props.isLockedForAllStudents,selectedSectionId=_this$props.selectedSectionId,isRtl=_this$props.isRtl;if(!isVisible)return null;var showAsLocked=isLockedForUser||isLockedForAllStudents,title=lesson.lessonNumber?_locale.default.lessonNumbered({lessonNumber:lesson.lessonNumber,lessonName:lesson.name}):lesson.name,caretStyle=isRtl?styles.caretRTL:styles.caret,caret=this.state.collapsed?"caret-right":"caret-down",lockedTooltipId=_lodash.default.uniqueId(),description=viewAs===_viewAsRedux.ViewType.Instructor?lesson.description_teacher:lesson.description_student,lessonUrl=levels[0]&&levels[0].url,showNotAuthorizedWarning=lesson.lockable&&viewAs===_viewAsRedux.ViewType.Instructor&&this.props.lockableAuthorizedLoaded&&!this.props.lockableAuthorized;return _react.default.createElement("div",{id:"progress-lesson-".concat(lesson.lessonNumber),className:"uitest-progress-lesson",style:_objectSpread(_objectSpread({},styles.outer),(hiddenForStudents||showAsLocked)&&styles.hiddenOrLocked)},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.main),(hiddenForStudents&&viewAs===_viewAsRedux.ViewType.Participant||isLockedForUser)&&styles.translucent)},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.heading),{marginBottom:this.state.collapsed?0:15})},_react.default.createElement("div",{style:styles.headingText,onClick:this.toggleCollapsed,tabIndex:"0",role:"button",onKeyDown:function onKeyDown(e){[" ","Enter","Spacebar"].includes(e.key)&&(e.preventDefault(),_this2.toggleCollapsed())},"aria-expanded":!this.state.collapsed},_react.default.createElement(_FontAwesome.default,{icon:caret,style:caretStyle}),hiddenForStudents&&_react.default.createElement(_FontAwesome.default,{icon:"eye-slash",style:styles.icon}),lesson.lockable&&this.props.lockStatusLoaded&&_react.default.createElement("span",{"data-tip":!0,"data-for":lockedTooltipId},_react.default.createElement(_FontAwesome.default,{icon:showAsLocked?"lock":"unlock",style:_objectSpread(_objectSpread({},styles.icon),!showAsLocked&&styles.unlockedIcon)}),!showAsLocked&&viewAs===_viewAsRedux.ViewType.Instructor&&_react.default.createElement(_reactTooltip.default,{id:lockedTooltipId,role:"tooltip",wrapper:"span",effect:"solid"},_locale.default.lockAssessmentLong())),_react.default.createElement("span",null,title)),viewAs===_viewAsRedux.ViewType.Participant&&lesson.student_lesson_plan_html_url&&_react.default.createElement("span",{style:styles.buttonStyle},_react.default.createElement(_Button.default,{__useDeprecatedTag:!0,className:"ui-test-lesson-resources",href:lesson.student_lesson_plan_html_url,text:_locale.default.lessonResources(),icon:"file-text",color:"purple",target:"_blank",onClick:this.onClickStudentLessonPlan}))),showNotAuthorizedWarning&&_react.default.createElement("div",{style:styles.notAuthorizedWarning},_locale.default.unverifiedTeacherLockWarning(),_react.default.createElement("a",{style:styles.learnMoreLink,href:"https://support.code.org/hc/en-us/articles/115001550131-Becoming-a-verified-teacher-CS-Principles-and-CS-Discoveries-only-"},_locale.default.learnMoreWithPeriod())),!this.state.collapsed&&_react.default.createElement(_ProgressLessonContent.default,{description,levels,disabled:isLockedForUser,selectedSectionId,lessonName:lesson.name})),viewAs===_viewAsRedux.ViewType.Instructor&&!this.props.isMiniView&&_react.default.createElement(_ProgressLessonTeacherInfo.default,{lesson,lessonUrl,onClickStudentLessonPlan:this.onClickStudentLessonPlan}),lesson.isFocusArea&&_react.default.createElement(_FocusAreaIndicator.default,null))},ProgressLesson}(_react.default.Component);_defineProperty(ProgressLesson,"propTypes",{lesson:_progressTypes.lessonType.isRequired,levels:_propTypes.default.arrayOf(_progressTypes.levelWithProgressType).isRequired,scriptId:_propTypes.default.number,currentLessonId:_propTypes.default.number,viewAs:_propTypes.default.oneOf(Object.values(_viewAsRedux.ViewType)).isRequired,isVisible:_propTypes.default.bool.isRequired,hiddenForStudents:_propTypes.default.bool.isRequired,isLockedForUser:_propTypes.default.bool.isRequired,selectedSectionId:_propTypes.default.number,lockableAuthorized:_propTypes.default.bool,lockableAuthorizedLoaded:_propTypes.default.bool.isRequired,isLockedForAllStudents:_propTypes.default.bool.isRequired,isRtl:_propTypes.default.bool,isMiniView:_propTypes.default.bool,lockStatusLoaded:_propTypes.default.bool.isRequired});var styles={outer:{position:"relative",display:"table",width:"100%",height:"100%",background:_color.default.lightest_gray,borderColor:_color.default.border_gray,borderStyle:"solid",borderRadius:2,borderWidth:1,marginTop:3,marginBottom:15,marginLeft:3,marginRight:3},main:{padding:20},heading:_objectSpread(_objectSpread({fontSize:18},_fontConstants.default["main-font-semi-bold"]),{},{display:"flex",alignItems:"center"}),headingText:{cursor:"pointer",flexGrow:1},buttonStyle:{marginLeft:"auto"},hiddenOrLocked:{borderStyle:"dashed",borderWidth:4,marginTop:0,marginBottom:12,marginLeft:0,marginRight:0},translucent:{opacity:.6},caret:{marginRight:10},caretRTL:{marginLeft:10},icon:{marginRight:5,fontSize:18,color:_color.default.cyan},unlockedIcon:{color:_color.default.orange},notAuthorizedWarning:_objectSpread(_objectSpread({color:_color.default.red},_fontConstants.default["main-font-semi-bold-italic"]),{},{marginTop:10}),learnMoreLink:{marginLeft:5}};exports.UnconnectedProgressLesson=ProgressLesson,exports.default=(0,_reactRedux.connect)((function(state,ownProps){return{currentLessonId:state.progress.currentLessonId,viewAs:state.viewAs,lockableAuthorized:state.lessonLock.lockableAuthorized,lockableAuthorizedLoaded:state.lessonLock.lockableAuthorizedLoaded,isVisible:(0,_progressHelpers.lessonIsVisible)(ownProps.lesson,state,state.viewAs),hiddenForStudents:!(0,_progressHelpers.lessonIsVisible)(ownProps.lesson,state,_viewAsRedux.ViewType.Participant),isLockedForUser:(0,_progressHelpers.lessonIsLockedForUser)(ownProps.lesson,ownProps.levels,state,state.viewAs),isLockedForAllStudents:(0,_progressHelpers.lessonIsLockedForAllStudents)(ownProps.lesson.id,state),selectedSectionId:state.teacherSections.selectedSectionId,scriptId:state.progress.scriptId,isRtl:state.isRtl,isMiniView:state.progress.isMiniView,lockStatusLoaded:state.progress.unitProgressHasLoaded&&state.lessonLock.lessonsBySectionIdLoaded}}))(ProgressLesson)},"./src/templates/progress/progressTestHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.fakeUnitData=exports.fakeStudents=exports.fakeStudentLevelProgress=exports.fakeStudentLastUpdateByScript=exports.fakeStudentLastUpdate=exports.fakeProgressTableReduxInitialState=exports.fakeProgressForLevels=exports.fakeLevels=exports.fakeLevelWithSubLevels=exports.fakeLevel=exports.fakeLessonWithLevels=exports.fakeLesson=exports.createStoreWithLockedLesson=exports.createStoreWithHiddenLesson=void 0;var _immutable=_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.fakeLesson=function fakeLesson(name,id){return{name,id,lockable:arguments.length>2&&void 0!==arguments[2]&&arguments[2],lessonNumber:arguments.length>3&&void 0!==arguments[3]?arguments[3]:void 0,lessonStartUrl:arguments.length>4&&void 0!==arguments[4]?arguments[4]:"code.org",isFocusArea:!1,levels:arguments.length>5&&void 0!==arguments[5]?arguments[5]:[]}};var fakeLevel=exports.fakeLevel=function fakeLevel(){var overrides=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},levelNumber=overrides.levelNumber||1,id=(overrides.id||levelNumber).toString();return delete overrides.id,_objectSpread({id,status:_sharedConstants.LevelStatus.not_tried,isLocked:!1,levelNumber,bubbleText:levelNumber.toString(),url:"/level".concat(levelNumber),name:"Level ".concat(levelNumber),isUnplugged:!1},overrides)},fakeLevels=(exports.fakeLevelWithSubLevels=function fakeLevelWithSubLevels(numSublevels){var startLevel=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,overrides=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},sublevels=_lodash.default.range(numSublevels).map((function(index){return fakeLevel({id:index+startLevel,levelNumber:index+startLevel})}));return fakeLevel(_objectSpread({sublevels,id:startLevel+numSublevels,levelNumber:startLevel+numSublevels},overrides))},exports.fakeLevels=function fakeLevels(numLevels){var _ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref$startLevel=_ref.startLevel,startLevel=void 0===_ref$startLevel?1:_ref$startLevel,_ref$named=_ref.named,named=void 0===_ref$named||_ref$named;return _lodash.default.range(numLevels).map((function(index){var overrideData={id:index+startLevel,levelNumber:index+startLevel};return named||(overrideData.name=void 0),fakeLevel(overrideData)}))}),fakeProgressForLevels=exports.fakeProgressForLevels=function fakeProgressForLevels(levels){var status=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_sharedConstants.LevelStatus.not_tried,serverProgressOverrides=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},progress={};return levels.forEach((function(level){progress[level.id]=(0,_progressHelpers.levelProgressFromServer)(_objectSpread({status},serverProgressOverrides))})),progress},randomNumberUpTo100=(exports.createStoreWithHiddenLesson=function createStoreWithHiddenLesson(viewAs,lessonId){return(0,_redux.createStore)((function(state){return state}),{lessonLock:{lessonsBySectionId:_defineProperty({},11,{}),lockableAuthorized:!1,lockableAuthorizedLoaded:!0,lessonsBySectionIdLoaded:!0},viewAs,teacherSections:{sectionIds:[11],sectionsAreLoaded:!0,sections:_defineProperty({},11,{id:11,name:"test section",lesson_extras:!0,pairing_allowed:!0,studentCount:4,code:"TQGSJR",providerManaged:!1,lessons:{},ttsAutoplayEnabled:!1,lessonExtras:!1,pairingAllowed:!0}),selectedSectionId:11},hiddenLesson:_immutable.default.fromJS({lessonsBySection:_defineProperty({},11,_defineProperty({},lessonId,!0))}),progress:{scriptName:"script-name",scriptId:17,unitProgressHasLoaded:!0},currentUser:{userId:1}})},exports.createStoreWithLockedLesson=function createStoreWithLockedLesson(viewAs){var lockableAuthorized=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return(0,_redux.createStore)((function(state){return state}),{lessonLock:{lessonsBySectionId:_defineProperty({},11,{}),lessonsBySectionIdLoaded:!0,lockableAuthorized,lockableAuthorizedLoaded:!0},viewAs,teacherSections:{selectedSectionId:11},hiddenLesson:_immutable.default.fromJS({lessonsBySection:_defineProperty({},11,_defineProperty({},lessonId,!0))}),progress:{unitProgressHasLoaded:!0},currentUser:{userId:1}})},function randomNumberUpTo100(){return Math.floor(100*Math.random())}),lessonId=1,fakeLessonWithLevels=exports.fakeLessonWithLevels=function fakeLessonWithLevels(){var overrideFields=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},levelCount=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,position=overrideFields.position||randomNumberUpTo100();return _objectSpread({id:lessonId++,name:"Lesson - ".concat(position),title:"Lesson ".concat(position,": Lesson - ").concat(position),lockable:!1,relative_position:position,position,levels:fakeLevels(levelCount)},overrideFields)},fakeStudents=exports.fakeStudents=function fakeStudents(studentCount){return Array(studentCount).fill().map((function(_,i){return{id:i,name:"student-".concat(i),familyName:"student-".concat(studentCount-i)}}))},fakeUnitData=exports.fakeUnitData=function fakeUnitData(){return _objectSpread({id:1,name:"csd1-2020",title:"CSD Unit 1 - Problem Solving and Computing (20-21)",csf:!1,isCsd:!0,isCsp:!1,lessons:[]},arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})},fakeStudentLevelProgress=exports.fakeStudentLevelProgress=function fakeStudentLevelProgress(levels,students){var serverProgressOverrides=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},progressOnLessons=fakeProgressForLevels(levels,serverProgressOverrides.status,serverProgressOverrides),studentProgress={};return students.forEach((function(student){studentProgress[student.id]=progressOnLessons})),studentProgress},fakeStudentLastUpdate=exports.fakeStudentLastUpdate=function fakeStudentLastUpdate(students){var studentLastUpdate={};return students.forEach((function(student){studentLastUpdate[student.id]=Date.now()})),studentLastUpdate},fakeStudentLastUpdateByScript=exports.fakeStudentLastUpdateByScript=function fakeStudentLastUpdateByScript(scriptData,students){return _defineProperty({},scriptData.id,fakeStudentLastUpdate(students))};exports.fakeProgressTableReduxInitialState=function fakeProgressTableReduxInitialState(lessons,scriptData){var students=arguments.length>2&&void 0!==arguments[2]?arguments[2]:fakeStudents(2);lessons||(lessons=[fakeLessonWithLevels({position:1,levels:fakeLevels(1)}),fakeLessonWithLevels({position:2,levels:fakeLevels(2)})]);scriptData||(scriptData=fakeUnitData({lessons}));var levelProgressData=fakeStudentLevelProgress(scriptData.lessons[0].levels,students),sectionId=randomNumberUpTo100();return{currentUser:{isSortedByFamilyName:!1},progress:{lessonGroups:[],lessons,focusAreaLessonIds:[],deeperLearningCourse:!1},teacherSections:{sections:[{id:sectionId}],selectedSectionId:sectionId,selectedStudents:students},sectionProgress:{unitDataByUnit:_defineProperty({},scriptData.id,scriptData),studentLevelProgressByUnit:_defineProperty({},scriptData.id,levelProgressData),studentLessonProgressByUnit:_defineProperty({},scriptData.id,(0,_progressHelpers.lessonProgressForSection)(levelProgressData,scriptData.lessons)),studentLastUpdateByUnit:fakeStudentLastUpdateByScript(scriptData,students),lessonOfInterest:1},unitSelection:{scriptId:scriptData.id},locales:{localeCode:"en-US"}}}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./src/templates/progress/ProgressLesson.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithFocusArea=exports.UnlockedLockableLesson=exports.UnlockedLessonAsVerifiedInstructor=exports.LockedLessonSignedOut=exports.LockedLessonAsVerifiedInstructor=exports.LockedLessonAsUnverifiedInstructor=exports.LockedLessonAsParticipant=exports.HiddenAsParticipant=exports.HiddenAsInstructor=exports.ForPeerReviews=exports.Default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_hiddenLessonRedux=_interopRequireDefault(__webpack_require__("./src/code-studio/hiddenLessonRedux.js")),_lessonLockRedux=_interopRequireDefault(__webpack_require__("./src/code-studio/lessonLockRedux.js")),_progressRedux=_interopRequireDefault(__webpack_require__("./src/code-studio/progressRedux.ts")),_viewAsRedux=__webpack_require__("./src/code-studio/viewAsRedux.js"),_teacherSectionsRedux=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_ProgressLesson=__webpack_require__("./src/templates/progress/ProgressLesson.jsx"),_progressTestHelpers=__webpack_require__("./src/templates/progress/progressTestHelpers.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}exports.default={component:_ProgressLesson.UnconnectedProgressLesson};var defaultProps={lesson:(0,_progressTestHelpers.fakeLesson)("Maze",1),levels:[_objectSpread(_objectSpread({},(0,_progressTestHelpers.fakeLevels)(1)[0]),{},{name:"First progression"})].concat(function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}((0,_progressTestHelpers.fakeLevels)(5,{startLevel:2}).map((function(level){return _objectSpread(_objectSpread({},level),{},{progression:"Second Progression"})}))),[_objectSpread(_objectSpread({},(0,_progressTestHelpers.fakeLevels)(1)[0]),{},{name:"Last progression"})]),viewAs:_viewAsRedux.ViewType.Instructor,isVisible:!0,isLockedForUser:!1,isLockedForAllStudents:!1,lockableAuthorized:!0,lockableAuthorizedLoaded:!0,hiddenForStudents:!1,lockStatusLoaded:!0},store=(0,_redux.createStore)((0,_redux.combineReducers)({teacherSections:_teacherSectionsRedux.default,progress:_progressRedux.default,hiddenLesson:_hiddenLessonRedux.default,lessonLock:_lessonLockRedux.default}),{progress:{lessonGroups:[],lessons:[{levels:[]}],focusAreaLessonIds:[],isSummaryView:!1,deeperLearningCourse:!1,scriptName:"script-name",scriptId:17},teacherSections:{sectionsAreLoaded:!0,sections:{},sectionIds:[]},hiddenLesson:{},lessonLock:{}}),Template=function Template(args){return _react.default.createElement(_reactRedux.Provider,{store},_react.default.createElement(_ProgressLesson.UnconnectedProgressLesson,_extends({},defaultProps,args)))};exports.Default=Template.bind({});(exports.WithFocusArea=Template.bind({})).args={lesson:_objectSpread(_objectSpread({},defaultProps.lesson),{},{isFocusArea:!0})},(exports.ForPeerReviews=Template.bind({})).args={viewAs:_viewAsRedux.ViewType.Participant,currentLessonId:-1,lesson:{id:-1,isFocusArea:!1,lockable:!1,name:"You must complete 4 reviews for this unit"},levels:[{id:"-1",name:"Link to submitted review",status:_sharedConstants.LevelStatus.perfect,isLocked:!1,url:"/peer_reviews/1",levelNumber:1},{id:"-1",name:"Review a new submission",status:_sharedConstants.LevelStatus.not_tried,isLocked:!1,url:"/pull-review",levelNumber:2},{id:"-1",icon:"fa-lock",name:"Reviews unavailable at this time",status:_sharedConstants.LevelStatus.not_tried,isLocked:!0,url:"",levelNumber:3},{id:"-1",icon:"fa-lock",name:"Reviews unavailable at this time",status:_sharedConstants.LevelStatus.not_tried,isLocked:!0,url:"",levelNumber:4}]},(exports.HiddenAsInstructor=Template.bind({})).args={isVisible:!0},(exports.HiddenAsParticipant=Template.bind({})).args={hiddenForStudents:!0,isVisible:!0},(exports.LockedLessonAsVerifiedInstructor=Template.bind({})).args={lesson:(0,_progressTestHelpers.fakeLesson)("Assessment Number One",1,!0),levels:(0,_progressTestHelpers.fakeLevels)(5,{named:!1}),isLockedForAllStudents:!0},(exports.UnlockedLessonAsVerifiedInstructor=Template.bind({})).args={lesson:(0,_progressTestHelpers.fakeLesson)("Asessment Number One",1,!0),levels:(0,_progressTestHelpers.fakeLevels)(5,{named:!1}),isLockedForAllStudents:!1},(exports.LockedLessonAsUnverifiedInstructor=Template.bind({})).args={lesson:(0,_progressTestHelpers.fakeLesson)("Asessment Number One",1,!0),levels:(0,_progressTestHelpers.fakeLevels)(5,{named:!1}),isLockedForUser:!0,lockableAuthorized:!1},(exports.LockedLessonSignedOut=Template.bind({})).args={viewAs:_viewAsRedux.ViewType.Participant,lesson:(0,_progressTestHelpers.fakeLesson)("Asessment Number One",1,!0),levels:(0,_progressTestHelpers.fakeLevels)(5,{named:!1}),isLockedForUser:!0},(exports.LockedLessonAsParticipant=Template.bind({})).args={viewAs:_viewAsRedux.ViewType.Participant,lesson:(0,_progressTestHelpers.fakeLesson)("Asessment Number One",1,!0),levels:(0,_progressTestHelpers.fakeLevels)(5,{named:!1}).map((function(level){return _objectSpread(_objectSpread({},level),{},{isLocked:!0})})),isLockedForUser:!0},(exports.UnlockedLockableLesson=Template.bind({})).args={lesson:(0,_progressTestHelpers.fakeLesson)("Asessment Number One",1,!0),levels:(0,_progressTestHelpers.fakeLevels)(5,{named:!1}).map((function(level){return _objectSpread(_objectSpread({},level),{},{status:_sharedConstants.LevelStatus.not_tried})}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLXByb2dyZXNzLVByb2dyZXNzTGVzc29uLXN0b3J5LjFmMTU4OGVhLmlmcmFtZS5idW5kbGUuanMiLCJtYXBwaW5ncyI6IjtvUUFLQSxJQUFBQSxRQUFBQyx1QkFBQUMsb0JBQUEsc0NBQ0FDLE9BQUFGLHVCQUFBQyxvQkFBQSxrQ0FDQUUsY0FBQUgsdUJBQUFDLG9CQUFBLCtDQUVBRyxhQUFBSix1QkFBQUMsb0JBQUEsb0NBQ0FJLE9BQUFMLHVCQUFBQyxvQkFBQSx3QkFBeUMsU0FBQUQsdUJBQUFNLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLENBRXpDLElBQU1FLE9BQVMsQ0FDYkMsS0FBTSxDQUNKQyxRQUFTLGVBQ1RDLFNBQVUsV0FDVkMsTUFBTyxFQUNQQyxJQUFLLEVBQ0xDLFdBQVksVUFFZEMsZUFBZ0IsQ0FDZEwsUUFBUyxlQUNUQyxTQUFVLFdBQ1ZFLElBQUssSUFFUEcsVUFBVyxDQUNUTixRQUFTLGVBQ1RPLE1BQU8sRUFDUEMsT0FBUSxFQUNSQyxZQUFhLFFBQ2JDLFlBQWEsaUJBQ2JDLFlBQWEsZUFBRkMsT0FBaUJDLE9BQUFBLFFBQU1DLEtBQUksNkJBRXhDQyxVQUFXLENBQ1RmLFFBQVMsZUFDVGdCLGdCQUFpQkgsT0FBQUEsUUFBTUMsS0FDdkJELE1BQU9BLE9BQUFBLFFBQU1JLE1BQ2JULE9BQVEsR0FDUlUsV0FBWSxPQUNaakIsU0FBVSxXQUNWRSxLQUFNLEdBRVJnQixLQUFNLENBQ0puQixRQUFTLGdCQUVYb0IsY0FBZSxDQUNicEIsUUFBUyxlQUNUYSxNQUFPQSxPQUFBQSxRQUFNSSxNQUNiQyxXQUFZLE9BQ1pHLFFBQVMsRUFDVEMsV0FBWSxFQUNaQyxZQUFhLEVBQ2JDLGFBQWMsRUFDZCxTQUFVLENBQ1JSLGdCQUFpQkgsT0FBQUEsUUFBTVksZ0JBc0IzQkMsUUFBQUEsU0FFYSxFQUFBQyxRQUFBQSxVQW5CWSxTQUFyQkMscUJBQWtCLE9BQ3RCcEMsT0FBQSxRQUFBcUMsY0FBQSxP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QVEsRUFBQTZHLHFCQUFBQSxZQUFXLEVBQUcsQ0FBQ1ksT0FBTyxJQUFRTixLQUFJLFNBQUFVLE9BQUssT0FBQXpMLGNBQUFBLGNBQUEsR0FDMUN5TCxPQUFLLElBQ1J0QixPQUFRQyxpQkFBQUEsWUFBWUMsV0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvcHJvZ3Jlc3MvRm9jdXNBcmVhSW5kaWNhdG9yLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3Byb2dyZXNzL1Byb2dyZXNzTGVzc29uLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3Byb2dyZXNzL3Byb2dyZXNzVGVzdEhlbHBlcnMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9Qcm9ncmVzc0xlc3Nvbi5zdG9yeS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIGNvbXBvbmVudCB0aGF0IGFkZHMgYSByaWJib24gdG8gdGhlIHNpZGUgb2YgeW91ciByb3cgdG8gaW5kaWNhdGUgdGhhdCBpdCBpc1xuICogYSBmb2N1cyBhcmVhLiBOb3RlOiBUaGlzIGlzIEVuZ2xpc2ggb25seS5cbiAqL1xuXG5pbXBvcnQgUmFkaXVtIGZyb20gJ3JhZGl1bSc7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcmVzdHJpY3RlZC1pbXBvcnRzXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0VG9vbHRpcCBmcm9tICdyZWFjdC10b29sdGlwJztcblxuaW1wb3J0IEZvbnRBd2Vzb21lIGZyb20gJ0BjZG8vYXBwcy90ZW1wbGF0ZXMvRm9udEF3ZXNvbWUnO1xuaW1wb3J0IGNvbG9yIGZyb20gJ0BjZG8vYXBwcy91dGlsL2NvbG9yJztcblxuY29uc3Qgc3R5bGVzID0ge1xuICBtYWluOiB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgcmlnaHQ6IDAsXG4gICAgdG9wOiAwLFxuICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICB9LFxuICBhcnJvd0NvbnRhaW5lcjoge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIHRvcDogMTAsXG4gIH0sXG4gIGxlZnRBcnJvdzoge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIHdpZHRoOiAwLFxuICAgIGhlaWdodDogMCxcbiAgICBib3JkZXJTdHlsZTogJ3NvbGlkJyxcbiAgICBib3JkZXJXaWR0aDogJzE3cHggMjBweCAxN3B4JyxcbiAgICBib3JkZXJDb2xvcjogYHRyYW5zcGFyZW50ICR7Y29sb3IuY3lhbn0gdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnRgLFxuICB9LFxuICBmb2N1c0FyZWE6IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmN5YW4sXG4gICAgY29sb3I6IGNvbG9yLndoaXRlLFxuICAgIGhlaWdodDogMzQsXG4gICAgbGluZUhlaWdodDogJzM0cHgnLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIHRvcDogLTMsXG4gIH0sXG4gIHRleHQ6IHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgfSxcbiAgZm9jdXNBcmVhSWNvbjoge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIGNvbG9yOiBjb2xvci53aGl0ZSxcbiAgICBsaW5lSGVpZ2h0OiAnMTNweCcsXG4gICAgcGFkZGluZzogNSxcbiAgICBtYXJnaW5MZWZ0OiA1LFxuICAgIG1hcmdpblJpZ2h0OiA1LFxuICAgIGJvcmRlclJhZGl1czogNCxcbiAgICAnOmhvdmVyJzoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci5kZWZhdWx0X2JsdWUsXG4gICAgfSxcbiAgfSxcbn07XG5cbmNvbnN0IEZvY3VzQXJlYUluZGljYXRvciA9ICgpID0+IChcbiAgPGRpdiBzdHlsZT17c3R5bGVzLm1haW59PlxuICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5hcnJvd0NvbnRhaW5lcn0+XG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMubGVmdEFycm93fSAvPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5mb2N1c0FyZWF9PlxuICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLnRleHR9PkZvY3VzIEFyZWE8L2Rpdj5cbiAgICAgIDxhIGhyZWY9e3dpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSArICcvcHJldmlldy1hc3NpZ25tZW50cyd9PlxuICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuZm9jdXNBcmVhSWNvbn0gZGF0YS10aXAgZGF0YS1mb3I9XCJmb2N1cy1hcmVhXCI+XG4gICAgICAgICAgPEZvbnRBd2Vzb21lIGljb249XCJwZW5jaWxcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvYT5cbiAgICA8L2Rpdj5cbiAgICA8UmVhY3RUb29sdGlwIGlkPVwiZm9jdXMtYXJlYVwiIHJvbGU9XCJ0b29sdGlwXCIgZWZmZWN0PVwic29saWRcIj5cbiAgICAgIENsaWNrIHRvIGNoYW5nZSB5b3VyIGZvY3VzIGFyZWEuXG4gICAgPC9SZWFjdFRvb2x0aXA+XG4gIDwvZGl2PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgUmFkaXVtKEZvY3VzQXJlYUluZGljYXRvcik7XG4iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBSZWFjdFRvb2x0aXAgZnJvbSAncmVhY3QtdG9vbHRpcCc7XG5cbmltcG9ydCB7Vmlld1R5cGV9IGZyb20gJ0BjZG8vYXBwcy9jb2RlLXN0dWRpby92aWV3QXNSZWR1eCc7XG5pbXBvcnQgZm9udENvbnN0YW50cyBmcm9tICdAY2RvL2FwcHMvZm9udENvbnN0YW50cyc7XG5pbXBvcnQgZmlyZWhvc2VDbGllbnQgZnJvbSAnQGNkby9hcHBzL2xpYi91dGlsL2ZpcmVob3NlJztcbmltcG9ydCBjb2xvciBmcm9tICdAY2RvL2FwcHMvdXRpbC9jb2xvcic7XG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5cbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBGb250QXdlc29tZSBmcm9tICcuLi9Gb250QXdlc29tZSc7XG5cbmltcG9ydCBGb2N1c0FyZWFJbmRpY2F0b3IgZnJvbSAnLi9Gb2N1c0FyZWFJbmRpY2F0b3InO1xuaW1wb3J0IHtcbiAgbGVzc29uSXNWaXNpYmxlLFxuICBsZXNzb25Jc0xvY2tlZEZvclVzZXIsXG4gIGxlc3NvbklzTG9ja2VkRm9yQWxsU3R1ZGVudHMsXG59IGZyb20gJy4vcHJvZ3Jlc3NIZWxwZXJzJztcbmltcG9ydCBQcm9ncmVzc0xlc3NvbkNvbnRlbnQgZnJvbSAnLi9Qcm9ncmVzc0xlc3NvbkNvbnRlbnQnO1xuaW1wb3J0IFByb2dyZXNzTGVzc29uVGVhY2hlckluZm8gZnJvbSAnLi9Qcm9ncmVzc0xlc3NvblRlYWNoZXJJbmZvJztcbmltcG9ydCB7bGV2ZWxXaXRoUHJvZ3Jlc3NUeXBlLCBsZXNzb25UeXBlfSBmcm9tICcuL3Byb2dyZXNzVHlwZXMnO1xuXG5jbGFzcyBQcm9ncmVzc0xlc3NvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgbGVzc29uOiBsZXNzb25UeXBlLmlzUmVxdWlyZWQsXG4gICAgbGV2ZWxzOiBQcm9wVHlwZXMuYXJyYXlPZihsZXZlbFdpdGhQcm9ncmVzc1R5cGUpLmlzUmVxdWlyZWQsXG5cbiAgICAvLyByZWR1eCBwcm92aWRlZFxuICAgIHNjcmlwdElkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGN1cnJlbnRMZXNzb25JZDogUHJvcFR5cGVzLm51bWJlcixcbiAgICB2aWV3QXM6IFByb3BUeXBlcy5vbmVPZihPYmplY3QudmFsdWVzKFZpZXdUeXBlKSkuaXNSZXF1aXJlZCxcbiAgICBpc1Zpc2libGU6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gICAgaGlkZGVuRm9yU3R1ZGVudHM6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gICAgaXNMb2NrZWRGb3JVc2VyOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIHNlbGVjdGVkU2VjdGlvbklkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGxvY2thYmxlQXV0aG9yaXplZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbG9ja2FibGVBdXRob3JpemVkTG9hZGVkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIGlzTG9ja2VkRm9yQWxsU3R1ZGVudHM6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gICAgaXNSdGw6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzTWluaVZpZXc6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2tTdGF0dXNMb2FkZWQ6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIC8vIFdlIHdhbnQgaW5zdHJ1Y3RvcnMgdG8gc3RhcnQgd2l0aCBldmVyeXRoaW5nIHVuY29sbGFwc2VkLiBGb3IgcGFydGljaXBhbnRzIHdlXG4gICAgICAvLyBjb2xsYXBzZSBldmVyeXRoaW5nIGV4Y2VwdCBjdXJyZW50IGxlc3NvblxuICAgICAgY29sbGFwc2VkOlxuICAgICAgICBwcm9wcy52aWV3QXMgIT09IFZpZXdUeXBlLkluc3RydWN0b3IgJiZcbiAgICAgICAgcHJvcHMuY3VycmVudExlc3NvbklkICE9PSBwcm9wcy5sZXNzb24uaWQsXG4gICAgfTtcbiAgfVxuXG4gIFVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIC8vIElmIHdlJ3JlIGFzc2lnbmVkIGEgbGVzc29uIGlkLCBhbmQgaXQgaXMgZm9yIHRoaXMgbGVzc29uLCB1bmNvbGxhcHNlXG4gICAgaWYgKG5leHRQcm9wcy5jdXJyZW50TGVzc29uSWQgIT09IHRoaXMucHJvcHMuY3VycmVudExlc3NvbklkKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgY29sbGFwc2VkOlxuICAgICAgICAgIHRoaXMuc3RhdGUuY29sbGFwc2VkICYmXG4gICAgICAgICAgbmV4dFByb3BzLmN1cnJlbnRMZXNzb25JZCAhPT0gdGhpcy5wcm9wcy5sZXNzb24uaWQsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICB0b2dnbGVDb2xsYXBzZWQgPSAoKSA9PlxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgY29sbGFwc2VkOiAhdGhpcy5zdGF0ZS5jb2xsYXBzZWQsXG4gICAgfSk7XG5cbiAgb25DbGlja1N0dWRlbnRMZXNzb25QbGFuID0gKCkgPT4ge1xuICAgIGZpcmVob3NlQ2xpZW50LnB1dFJlY29yZChcbiAgICAgIHtcbiAgICAgICAgc3R1ZHk6ICdzY3JpcHRfb3ZlcnZpZXdfYWN0aW9ucycsXG4gICAgICAgIHN0dWR5X2dyb3VwOiAnc3R1ZGVudF9sZXNzb25fcGxhbicsXG4gICAgICAgIGV2ZW50OiAnb3Blbl9zdHVkZW50X2xlc3Nvbl9wbGFuJyxcbiAgICAgICAgZGF0YV9qc29uOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgbGVzc29uX2lkOiB0aGlzLnByb3BzLmxlc3Nvbi5pZCxcbiAgICAgICAgICBzY3JpcHRfaWQ6IHRoaXMucHJvcHMuc2NyaXB0SWQsXG4gICAgICAgIH0pLFxuICAgICAgfSxcbiAgICAgIHtpbmNsdWRlVXNlcklkOiB0cnVlfVxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGxlc3NvbixcbiAgICAgIGxldmVscyxcbiAgICAgIHZpZXdBcyxcbiAgICAgIGlzVmlzaWJsZSxcbiAgICAgIGhpZGRlbkZvclN0dWRlbnRzLCAvLyBJcyB0aGlzIGEgaGlkZGVuIGxlc3NvbiB0aGF0IHdlIHN0aWxsIHJlbmRlciBiZWNhdXNlIHdlJ3JlIGEgaW5zdHJ1Y3RvclxuICAgICAgaXNMb2NrZWRGb3JVc2VyLFxuICAgICAgaXNMb2NrZWRGb3JBbGxTdHVkZW50cyxcbiAgICAgIHNlbGVjdGVkU2VjdGlvbklkLFxuICAgICAgaXNSdGwsXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAoIWlzVmlzaWJsZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgY29uc3Qgc2hvd0FzTG9ja2VkID0gaXNMb2NrZWRGb3JVc2VyIHx8IGlzTG9ja2VkRm9yQWxsU3R1ZGVudHM7XG5cbiAgICBjb25zdCB0aXRsZSA9IGxlc3Nvbi5sZXNzb25OdW1iZXJcbiAgICAgID8gaTE4bi5sZXNzb25OdW1iZXJlZCh7XG4gICAgICAgICAgbGVzc29uTnVtYmVyOiBsZXNzb24ubGVzc29uTnVtYmVyLFxuICAgICAgICAgIGxlc3Nvbk5hbWU6IGxlc3Nvbi5uYW1lLFxuICAgICAgICB9KVxuICAgICAgOiBsZXNzb24ubmFtZTtcblxuICAgIC8vIEFkanVzdCBjYXJldCBzdHlsZSBpZiBsb2NhbGUgaXMgUlRMXG4gICAgY29uc3QgY2FyZXRTdHlsZSA9IGlzUnRsID8gc3R5bGVzLmNhcmV0UlRMIDogc3R5bGVzLmNhcmV0O1xuICAgIGNvbnN0IGNhcmV0ID0gdGhpcy5zdGF0ZS5jb2xsYXBzZWQgPyAnY2FyZXQtcmlnaHQnIDogJ2NhcmV0LWRvd24nO1xuXG4gICAgY29uc3QgbG9ja2VkVG9vbHRpcElkID0gXy51bmlxdWVJZCgpO1xuXG4gICAgY29uc3QgZGVzY3JpcHRpb24gPVxuICAgICAgdmlld0FzID09PSBWaWV3VHlwZS5JbnN0cnVjdG9yXG4gICAgICAgID8gbGVzc29uLmRlc2NyaXB0aW9uX3RlYWNoZXJcbiAgICAgICAgOiBsZXNzb24uZGVzY3JpcHRpb25fc3R1ZGVudDtcblxuICAgIC8vIFRoZXJlJ3Mgbm8gdXJsIGZvciBhIGxlc3NvbiBzbyB1c2UgdGhlIHVybCBvZiB0aGUgZmlyc3QgbGV2ZWwgb2YgdGhlIGxlc3NvblxuICAgIC8vIGFzIHRoZSB1cmwgZm9yIHRoZSBsZXNzb24uXG4gICAgLy8gVE9ETzogTWFrZSB0aGUgYmFjay1lbmQgcmV0dXJuIGEgbGVzc29uIHVybCBhcyBwYXJ0IG9mIHRoZSBsZXNzb24gbWV0YWRhdGEgc28gd2VcbiAgICAvLyBkb24ndCBuZWVkIHRvIHBhc3MgaXQgc2VwYXJhdGVseSBmcm9tIGxlc3NvbiBoZXJlIGFuZCBpbiBQcm9ncmVzc0xlc3NvblRlYWNoZXJJbmZvLlxuICAgIGNvbnN0IGxlc3NvblVybCA9IGxldmVsc1swXSAmJiBsZXZlbHNbMF0udXJsO1xuXG4gICAgLy8gSWYgYSBpbnN0cnVjdG9yIGlzIG5vdCB2ZXJpZmllZCB0aGV5IHdpbGwgbm90IGJlIGxvY2thYmxlQXV0aG9yaXplZCAobWVhbmluZyB0aGV5IGNhbid0XG4gICAgLy8gbG9jayBvciB1bmxvY2sgbGVzc29ucykuIEZvciBhIGxvY2thYmxlIGxlc3NvbiB3aGVyZSBpbnN0cnVjdG9yIGlzIG5vdCBhdXRob3JpemVkLCB3ZSB3aWxsXG4gICAgLy8gZGlzcGxheSBhIHdhcm5pbmcgZXhwbGFpbmluZyB0aGF0IHRoZXkgbmVlZCB0byBiZSB2ZXJpZmllZCB0byB1bmxvY2sgbGVzc29ucy5cbiAgICBjb25zdCBzaG93Tm90QXV0aG9yaXplZFdhcm5pbmcgPVxuICAgICAgbGVzc29uLmxvY2thYmxlICYmXG4gICAgICB2aWV3QXMgPT09IFZpZXdUeXBlLkluc3RydWN0b3IgJiZcbiAgICAgIHRoaXMucHJvcHMubG9ja2FibGVBdXRob3JpemVkTG9hZGVkICYmXG4gICAgICAhdGhpcy5wcm9wcy5sb2NrYWJsZUF1dGhvcml6ZWQ7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBpZD17YHByb2dyZXNzLWxlc3Nvbi0ke2xlc3Nvbi5sZXNzb25OdW1iZXJ9YH1cbiAgICAgICAgY2xhc3NOYW1lPVwidWl0ZXN0LXByb2dyZXNzLWxlc3NvblwiXG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgLi4uc3R5bGVzLm91dGVyLFxuICAgICAgICAgIC4uLigoaGlkZGVuRm9yU3R1ZGVudHMgfHwgc2hvd0FzTG9ja2VkKSAmJiBzdHlsZXMuaGlkZGVuT3JMb2NrZWQpLFxuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIC4uLnN0eWxlcy5tYWluLFxuICAgICAgICAgICAgLi4uKCgoaGlkZGVuRm9yU3R1ZGVudHMgJiYgdmlld0FzID09PSBWaWV3VHlwZS5QYXJ0aWNpcGFudCkgfHxcbiAgICAgICAgICAgICAgaXNMb2NrZWRGb3JVc2VyKSAmJlxuICAgICAgICAgICAgICBzdHlsZXMudHJhbnNsdWNlbnQpLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAuLi5zdHlsZXMuaGVhZGluZyxcbiAgICAgICAgICAgICAgLi4ue21hcmdpbkJvdHRvbTogdGhpcy5zdGF0ZS5jb2xsYXBzZWQgPyAwIDogMTV9LFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuaGVhZGluZ1RleHR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMudG9nZ2xlQ29sbGFwc2VkfVxuICAgICAgICAgICAgICB0YWJJbmRleD1cIjBcIlxuICAgICAgICAgICAgICByb2xlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgb25LZXlEb3duPXtlID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoWycgJywgJ0VudGVyJywgJ1NwYWNlYmFyJ10uaW5jbHVkZXMoZS5rZXkpKSB7XG4gICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZUNvbGxhcHNlZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgYXJpYS1leHBhbmRlZD17IXRoaXMuc3RhdGUuY29sbGFwc2VkfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWUgaWNvbj17Y2FyZXR9IHN0eWxlPXtjYXJldFN0eWxlfSAvPlxuICAgICAgICAgICAgICB7aGlkZGVuRm9yU3R1ZGVudHMgJiYgKFxuICAgICAgICAgICAgICAgIDxGb250QXdlc29tZSBpY29uPVwiZXllLXNsYXNoXCIgc3R5bGU9e3N0eWxlcy5pY29ufSAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICB7bGVzc29uLmxvY2thYmxlICYmIHRoaXMucHJvcHMubG9ja1N0YXR1c0xvYWRlZCAmJiAoXG4gICAgICAgICAgICAgICAgPHNwYW4gZGF0YS10aXAgZGF0YS1mb3I9e2xvY2tlZFRvb2x0aXBJZH0+XG4gICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVcbiAgICAgICAgICAgICAgICAgICAgaWNvbj17c2hvd0FzTG9ja2VkID8gJ2xvY2snIDogJ3VubG9jayd9XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgLi4uc3R5bGVzLmljb24sXG4gICAgICAgICAgICAgICAgICAgICAgLi4uKCFzaG93QXNMb2NrZWQgJiYgc3R5bGVzLnVubG9ja2VkSWNvbiksXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgeyFzaG93QXNMb2NrZWQgJiYgdmlld0FzID09PSBWaWV3VHlwZS5JbnN0cnVjdG9yICYmIChcbiAgICAgICAgICAgICAgICAgICAgPFJlYWN0VG9vbHRpcFxuICAgICAgICAgICAgICAgICAgICAgIGlkPXtsb2NrZWRUb29sdGlwSWR9XG4gICAgICAgICAgICAgICAgICAgICAgcm9sZT1cInRvb2x0aXBcIlxuICAgICAgICAgICAgICAgICAgICAgIHdyYXBwZXI9XCJzcGFuXCJcbiAgICAgICAgICAgICAgICAgICAgICBlZmZlY3Q9XCJzb2xpZFwiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICB7aTE4bi5sb2NrQXNzZXNzbWVudExvbmcoKX1cbiAgICAgICAgICAgICAgICAgICAgPC9SZWFjdFRvb2x0aXA+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPHNwYW4+e3RpdGxlfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge3ZpZXdBcyA9PT0gVmlld1R5cGUuUGFydGljaXBhbnQgJiZcbiAgICAgICAgICAgICAgbGVzc29uLnN0dWRlbnRfbGVzc29uX3BsYW5faHRtbF91cmwgJiYgKFxuICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXtzdHlsZXMuYnV0dG9uU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBfX3VzZURlcHJlY2F0ZWRUYWdcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidWktdGVzdC1sZXNzb24tcmVzb3VyY2VzXCJcbiAgICAgICAgICAgICAgICAgICAgaHJlZj17bGVzc29uLnN0dWRlbnRfbGVzc29uX3BsYW5faHRtbF91cmx9XG4gICAgICAgICAgICAgICAgICAgIHRleHQ9e2kxOG4ubGVzc29uUmVzb3VyY2VzKCl9XG4gICAgICAgICAgICAgICAgICAgIGljb249XCJmaWxlLXRleHRcIlxuICAgICAgICAgICAgICAgICAgICBjb2xvcj1cInB1cnBsZVwiXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMub25DbGlja1N0dWRlbnRMZXNzb25QbGFufVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAge3Nob3dOb3RBdXRob3JpemVkV2FybmluZyAmJiAoXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMubm90QXV0aG9yaXplZFdhcm5pbmd9PlxuICAgICAgICAgICAgICB7aTE4bi51bnZlcmlmaWVkVGVhY2hlckxvY2tXYXJuaW5nKCl9XG4gICAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5sZWFybk1vcmVMaW5rfVxuICAgICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3N1cHBvcnQuY29kZS5vcmcvaGMvZW4tdXMvYXJ0aWNsZXMvMTE1MDAxNTUwMTMxLUJlY29taW5nLWEtdmVyaWZpZWQtdGVhY2hlci1DUy1QcmluY2lwbGVzLWFuZC1DUy1EaXNjb3Zlcmllcy1vbmx5LVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7aTE4bi5sZWFybk1vcmVXaXRoUGVyaW9kKCl9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgICAgeyF0aGlzLnN0YXRlLmNvbGxhcHNlZCAmJiAoXG4gICAgICAgICAgICA8UHJvZ3Jlc3NMZXNzb25Db250ZW50XG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgbGV2ZWxzPXtsZXZlbHN9XG4gICAgICAgICAgICAgIGRpc2FibGVkPXtpc0xvY2tlZEZvclVzZXJ9XG4gICAgICAgICAgICAgIHNlbGVjdGVkU2VjdGlvbklkPXtzZWxlY3RlZFNlY3Rpb25JZH1cbiAgICAgICAgICAgICAgbGVzc29uTmFtZT17bGVzc29uLm5hbWV9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7dmlld0FzID09PSBWaWV3VHlwZS5JbnN0cnVjdG9yICYmICF0aGlzLnByb3BzLmlzTWluaVZpZXcgJiYgKFxuICAgICAgICAgIDxQcm9ncmVzc0xlc3NvblRlYWNoZXJJbmZvXG4gICAgICAgICAgICBsZXNzb249e2xlc3Nvbn1cbiAgICAgICAgICAgIGxlc3NvblVybD17bGVzc29uVXJsfVxuICAgICAgICAgICAgb25DbGlja1N0dWRlbnRMZXNzb25QbGFuPXt0aGlzLm9uQ2xpY2tTdHVkZW50TGVzc29uUGxhbn1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgICB7bGVzc29uLmlzRm9jdXNBcmVhICYmIDxGb2N1c0FyZWFJbmRpY2F0b3IgLz59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgb3V0ZXI6IHtcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBkaXNwbGF5OiAndGFibGUnLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgYmFja2dyb3VuZDogY29sb3IubGlnaHRlc3RfZ3JheSxcbiAgICBib3JkZXJDb2xvcjogY29sb3IuYm9yZGVyX2dyYXksXG4gICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgYm9yZGVyUmFkaXVzOiAyLFxuICAgIC8vIFdoZW4gdG9nZ2xpbmcgYmV0d2VlbiBoaWRkZW4gYW5kIG5vdCwgd2UgY2hhbmdlIG91ciBib3JkZXIgc2l6ZSBmcm9tIDEgdG8gNC5cbiAgICAvLyBXZSB3YW50IHRvIGxpbWl0IGhvdyBtdWNoIHRvZ2dsaW5nIHRoaXMgY2hhbmdlcyBvdXIgc2l6aW5nLCBzbyB3ZSBhZGQgKzNcbiAgICAvLyB0byBlYWNoIG9mIG91ciBub24taGlkZGVuIG1hcmdpbnNcbiAgICBib3JkZXJXaWR0aDogMSxcbiAgICBtYXJnaW5Ub3A6IDMsXG4gICAgbWFyZ2luQm90dG9tOiAxNSxcbiAgICBtYXJnaW5MZWZ0OiAzLFxuICAgIG1hcmdpblJpZ2h0OiAzLFxuICB9LFxuICBtYWluOiB7XG4gICAgcGFkZGluZzogMjAsXG4gIH0sXG4gIGhlYWRpbmc6IHtcbiAgICBmb250U2l6ZTogMTgsXG4gICAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXNlbWktYm9sZCddLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgfSxcbiAgaGVhZGluZ1RleHQ6IHtcbiAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICBmbGV4R3JvdzogMSxcbiAgfSxcbiAgYnV0dG9uU3R5bGU6IHtcbiAgICBtYXJnaW5MZWZ0OiAnYXV0bycsXG4gIH0sXG4gIGhpZGRlbk9yTG9ja2VkOiB7XG4gICAgYm9yZGVyU3R5bGU6ICdkYXNoZWQnLFxuICAgIGJvcmRlcldpZHRoOiA0LFxuICAgIG1hcmdpblRvcDogMCxcbiAgICBtYXJnaW5Cb3R0b206IDEyLFxuICAgIG1hcmdpbkxlZnQ6IDAsXG4gICAgbWFyZ2luUmlnaHQ6IDAsXG4gIH0sXG4gIHRyYW5zbHVjZW50OiB7XG4gICAgb3BhY2l0eTogMC42LFxuICB9LFxuICBjYXJldDoge1xuICAgIG1hcmdpblJpZ2h0OiAxMCxcbiAgfSxcbiAgY2FyZXRSVEw6IHtcbiAgICBtYXJnaW5MZWZ0OiAxMCxcbiAgfSxcbiAgaWNvbjoge1xuICAgIG1hcmdpblJpZ2h0OiA1LFxuICAgIGZvbnRTaXplOiAxOCxcbiAgICBjb2xvcjogY29sb3IuY3lhbixcbiAgfSxcbiAgdW5sb2NrZWRJY29uOiB7XG4gICAgY29sb3I6IGNvbG9yLm9yYW5nZSxcbiAgfSxcbiAgbm90QXV0aG9yaXplZFdhcm5pbmc6IHtcbiAgICBjb2xvcjogY29sb3IucmVkLFxuICAgIC4uLmZvbnRDb25zdGFudHNbJ21haW4tZm9udC1zZW1pLWJvbGQtaXRhbGljJ10sXG4gICAgbWFyZ2luVG9wOiAxMCxcbiAgfSxcbiAgbGVhcm5Nb3JlTGluazoge1xuICAgIG1hcmdpbkxlZnQ6IDUsXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgVW5jb25uZWN0ZWRQcm9ncmVzc0xlc3NvbiA9IFByb2dyZXNzTGVzc29uO1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KChzdGF0ZSwgb3duUHJvcHMpID0+ICh7XG4gIGN1cnJlbnRMZXNzb25JZDogc3RhdGUucHJvZ3Jlc3MuY3VycmVudExlc3NvbklkLFxuICB2aWV3QXM6IHN0YXRlLnZpZXdBcyxcbiAgbG9ja2FibGVBdXRob3JpemVkOiBzdGF0ZS5sZXNzb25Mb2NrLmxvY2thYmxlQXV0aG9yaXplZCxcbiAgbG9ja2FibGVBdXRob3JpemVkTG9hZGVkOiBzdGF0ZS5sZXNzb25Mb2NrLmxvY2thYmxlQXV0aG9yaXplZExvYWRlZCxcbiAgaXNWaXNpYmxlOiBsZXNzb25Jc1Zpc2libGUob3duUHJvcHMubGVzc29uLCBzdGF0ZSwgc3RhdGUudmlld0FzKSxcbiAgaGlkZGVuRm9yU3R1ZGVudHM6ICFsZXNzb25Jc1Zpc2libGUoXG4gICAgb3duUHJvcHMubGVzc29uLFxuICAgIHN0YXRlLFxuICAgIFZpZXdUeXBlLlBhcnRpY2lwYW50XG4gICksXG4gIGlzTG9ja2VkRm9yVXNlcjogbGVzc29uSXNMb2NrZWRGb3JVc2VyKFxuICAgIG93blByb3BzLmxlc3NvbixcbiAgICBvd25Qcm9wcy5sZXZlbHMsXG4gICAgc3RhdGUsXG4gICAgc3RhdGUudmlld0FzXG4gICksXG4gIGlzTG9ja2VkRm9yQWxsU3R1ZGVudHM6IGxlc3NvbklzTG9ja2VkRm9yQWxsU3R1ZGVudHMoXG4gICAgb3duUHJvcHMubGVzc29uLmlkLFxuICAgIHN0YXRlXG4gICksXG4gIHNlbGVjdGVkU2VjdGlvbklkOiBzdGF0ZS50ZWFjaGVyU2VjdGlvbnMuc2VsZWN0ZWRTZWN0aW9uSWQsXG4gIHNjcmlwdElkOiBzdGF0ZS5wcm9ncmVzcy5zY3JpcHRJZCxcbiAgaXNSdGw6IHN0YXRlLmlzUnRsLFxuICBpc01pbmlWaWV3OiBzdGF0ZS5wcm9ncmVzcy5pc01pbmlWaWV3LFxuICBsb2NrU3RhdHVzTG9hZGVkOlxuICAgIHN0YXRlLnByb2dyZXNzLnVuaXRQcm9ncmVzc0hhc0xvYWRlZCAmJlxuICAgIHN0YXRlLmxlc3NvbkxvY2subGVzc29uc0J5U2VjdGlvbklkTG9hZGVkLFxufSkpKFByb2dyZXNzTGVzc29uKTtcbiIsIi8qKlxuICogVGhpcyBpcyBhIHNldCBvZiBoZWxwZXJzIHRoYXQgaXMgdXNlZCB0byBnZW5lcmF0ZSB0ZXN0IGxldmVsL2xlc3NvbiBjb250ZW50LlxuICogSXQgbGl2ZXMgaW4gc3JjIGJlY2F1c2UgaXQncyB1c2VkIGJ5IGJvdGggc3RvcnkgZmlsZXMgYW5kIHRlc3QgZmlsZXMsIGFuZCBpdFxuICogYmV0dGVyIHRvIGhhdmUgdGVzdCByZXF1aXJlIGhlbHBlcnMgZnJvbSBzcmMsIHRoZW4gc3RvcnkgZmlsZXMgaW4gc3JjIHJlYWNoXG4gKiBpbnRvIHRlc3QuXG4gKi9cblxuaW1wb3J0IEltbXV0YWJsZSBmcm9tICdpbW11dGFibGUnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7Y3JlYXRlU3RvcmV9IGZyb20gJ3JlZHV4JztcblxuaW1wb3J0IHtcbiAgbGV2ZWxQcm9ncmVzc0Zyb21TZXJ2ZXIsXG4gIGxlc3NvblByb2dyZXNzRm9yU2VjdGlvbixcbn0gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9wcm9ncmVzcy9wcm9ncmVzc0hlbHBlcnMnO1xuaW1wb3J0IHtMZXZlbFN0YXR1c30gZnJvbSAnQGNkby9nZW5lcmF0ZWQtc2NyaXB0cy9zaGFyZWRDb25zdGFudHMnO1xuXG5leHBvcnQgY29uc3QgZmFrZUxlc3NvbiA9IChcbiAgbmFtZSxcbiAgaWQsXG4gIGxvY2thYmxlID0gZmFsc2UsXG4gIGxlc3Nvbk51bWJlciA9IHVuZGVmaW5lZCxcbiAgbGVzc29uU3RhcnRVcmwgPSAnY29kZS5vcmcnLFxuICBsZXZlbHMgPSBbXVxuKSA9PiAoe1xuICBuYW1lLFxuICBpZCxcbiAgbG9ja2FibGUsXG4gIGxlc3Nvbk51bWJlcixcbiAgbGVzc29uU3RhcnRVcmwsXG4gIGlzRm9jdXNBcmVhOiBmYWxzZSxcbiAgbGV2ZWxzLFxufSk7XG5cbmV4cG9ydCBjb25zdCBmYWtlTGV2ZWwgPSAob3ZlcnJpZGVzID0ge30pID0+IHtcbiAgY29uc3QgbGV2ZWxOdW1iZXIgPSBvdmVycmlkZXMubGV2ZWxOdW1iZXIgfHwgMTtcbiAgY29uc3QgaWQgPSAob3ZlcnJpZGVzLmlkIHx8IGxldmVsTnVtYmVyKS50b1N0cmluZygpO1xuICBkZWxldGUgb3ZlcnJpZGVzLmlkO1xuICByZXR1cm4ge1xuICAgIGlkOiBpZCxcbiAgICBzdGF0dXM6IExldmVsU3RhdHVzLm5vdF90cmllZCxcbiAgICBpc0xvY2tlZDogZmFsc2UsXG4gICAgbGV2ZWxOdW1iZXI6IGxldmVsTnVtYmVyLFxuICAgIGJ1YmJsZVRleHQ6IGxldmVsTnVtYmVyLnRvU3RyaW5nKCksXG4gICAgdXJsOiBgL2xldmVsJHtsZXZlbE51bWJlcn1gLFxuICAgIG5hbWU6IGBMZXZlbCAke2xldmVsTnVtYmVyfWAsXG4gICAgaXNVbnBsdWdnZWQ6IGZhbHNlLFxuICAgIC4uLm92ZXJyaWRlcyxcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBmYWtlTGV2ZWxXaXRoU3ViTGV2ZWxzID0gKFxuICBudW1TdWJsZXZlbHMsXG4gIHN0YXJ0TGV2ZWwgPSAxLFxuICBvdmVycmlkZXMgPSB7fVxuKSA9PiB7XG4gIGNvbnN0IHN1YmxldmVscyA9IF8ucmFuZ2UobnVtU3VibGV2ZWxzKS5tYXAoaW5kZXggPT4ge1xuICAgIGNvbnN0IG92ZXJyaWRlRGF0YSA9IHtcbiAgICAgIGlkOiBpbmRleCArIHN0YXJ0TGV2ZWwsXG4gICAgICBsZXZlbE51bWJlcjogaW5kZXggKyBzdGFydExldmVsLFxuICAgIH07XG4gICAgcmV0dXJuIGZha2VMZXZlbChvdmVycmlkZURhdGEpO1xuICB9KTtcbiAgcmV0dXJuIGZha2VMZXZlbCh7XG4gICAgc3VibGV2ZWxzOiBzdWJsZXZlbHMsXG4gICAgaWQ6IHN0YXJ0TGV2ZWwgKyBudW1TdWJsZXZlbHMsXG4gICAgbGV2ZWxOdW1iZXI6IHN0YXJ0TGV2ZWwgKyBudW1TdWJsZXZlbHMsXG4gICAgLi4ub3ZlcnJpZGVzLFxuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBmYWtlTGV2ZWxzID0gKG51bUxldmVscywge3N0YXJ0TGV2ZWwgPSAxLCBuYW1lZCA9IHRydWV9ID0ge30pID0+XG4gIF8ucmFuZ2UobnVtTGV2ZWxzKS5tYXAoaW5kZXggPT4ge1xuICAgIGxldCBvdmVycmlkZURhdGEgPSB7XG4gICAgICBpZDogaW5kZXggKyBzdGFydExldmVsLFxuICAgICAgbGV2ZWxOdW1iZXI6IGluZGV4ICsgc3RhcnRMZXZlbCxcbiAgICB9O1xuICAgIGlmICghbmFtZWQpIHtcbiAgICAgIG92ZXJyaWRlRGF0YVsnbmFtZSddID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gZmFrZUxldmVsKG92ZXJyaWRlRGF0YSk7XG4gIH0pO1xuXG5leHBvcnQgY29uc3QgZmFrZVByb2dyZXNzRm9yTGV2ZWxzID0gKFxuICBsZXZlbHMsXG4gIHN0YXR1cyA9IExldmVsU3RhdHVzLm5vdF90cmllZCxcbiAgc2VydmVyUHJvZ3Jlc3NPdmVycmlkZXMgPSB7fVxuKSA9PiB7XG4gIGNvbnN0IHByb2dyZXNzID0ge307XG4gIGxldmVscy5mb3JFYWNoKGxldmVsID0+IHtcbiAgICBwcm9ncmVzc1tsZXZlbC5pZF0gPSBsZXZlbFByb2dyZXNzRnJvbVNlcnZlcih7XG4gICAgICBzdGF0dXM6IHN0YXR1cyxcbiAgICAgIC4uLnNlcnZlclByb2dyZXNzT3ZlcnJpZGVzLFxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIHByb2dyZXNzO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIHRoZSBzaGVsbCBvZiBhIHJlZHV4IHN0b3JlIHdpdGggdGhlIHByb3ZpZGVkIGxlc3NvbklkIGJlaW5nIGhpZGRlblxuICogQHBhcmFtIHtWaWV3VHlwZX0gdmlld0FzXG4gKiBAcGFyYW0ge251bWJlcj99IGxlc3NvbklkIC0gTGVzc29uIHRvIGhpZGUgKG9yIG51bGwgaWYgbm9uZSlcbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVN0b3JlV2l0aEhpZGRlbkxlc3NvbiA9ICh2aWV3QXMsIGxlc3NvbklkKSA9PiB7XG4gIGNvbnN0IHNlY3Rpb25JZCA9IDExO1xuICByZXR1cm4gY3JlYXRlU3RvcmUoc3RhdGUgPT4gc3RhdGUsIHtcbiAgICBsZXNzb25Mb2NrOiB7XG4gICAgICBsZXNzb25zQnlTZWN0aW9uSWQ6IHtcbiAgICAgICAgW3NlY3Rpb25JZF06IHt9LFxuICAgICAgfSxcbiAgICAgIGxvY2thYmxlQXV0aG9yaXplZDogZmFsc2UsXG4gICAgICBsb2NrYWJsZUF1dGhvcml6ZWRMb2FkZWQ6IHRydWUsXG4gICAgICBsZXNzb25zQnlTZWN0aW9uSWRMb2FkZWQ6IHRydWUsXG4gICAgfSxcbiAgICB2aWV3QXM6IHZpZXdBcyxcbiAgICB0ZWFjaGVyU2VjdGlvbnM6IHtcbiAgICAgIHNlY3Rpb25JZHM6IFtzZWN0aW9uSWRdLFxuICAgICAgc2VjdGlvbnNBcmVMb2FkZWQ6IHRydWUsXG4gICAgICBzZWN0aW9uczoge1xuICAgICAgICBbc2VjdGlvbklkXToge1xuICAgICAgICAgIGlkOiAxMSxcbiAgICAgICAgICBuYW1lOiAndGVzdCBzZWN0aW9uJyxcbiAgICAgICAgICBsZXNzb25fZXh0cmFzOiB0cnVlLFxuICAgICAgICAgIHBhaXJpbmdfYWxsb3dlZDogdHJ1ZSxcbiAgICAgICAgICBzdHVkZW50Q291bnQ6IDQsXG4gICAgICAgICAgY29kZTogJ1RRR1NKUicsXG4gICAgICAgICAgcHJvdmlkZXJNYW5hZ2VkOiBmYWxzZSxcbiAgICAgICAgICBsZXNzb25zOiB7fSxcbiAgICAgICAgICB0dHNBdXRvcGxheUVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgIGxlc3NvbkV4dHJhczogZmFsc2UsXG4gICAgICAgICAgcGFpcmluZ0FsbG93ZWQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgc2VsZWN0ZWRTZWN0aW9uSWQ6IHNlY3Rpb25JZCxcbiAgICB9LFxuICAgIGhpZGRlbkxlc3NvbjogSW1tdXRhYmxlLmZyb21KUyh7XG4gICAgICBsZXNzb25zQnlTZWN0aW9uOiB7XG4gICAgICAgIFtzZWN0aW9uSWRdOiB7W2xlc3NvbklkXTogdHJ1ZX0sXG4gICAgICB9LFxuICAgIH0pLFxuICAgIHByb2dyZXNzOiB7XG4gICAgICBzY3JpcHROYW1lOiAnc2NyaXB0LW5hbWUnLFxuICAgICAgc2NyaXB0SWQ6IDE3LFxuICAgICAgdW5pdFByb2dyZXNzSGFzTG9hZGVkOiB0cnVlLFxuICAgIH0sXG4gICAgY3VycmVudFVzZXI6IHtcbiAgICAgIHVzZXJJZDogMSxcbiAgICB9LFxuICB9KTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyB0aGUgc2hlbGwgb2YgYSByZWR1eCBzdG9yZSB3aXRoIHRoZSBwcm92aWRlZCBsZXNzb25JZCBiZWluZyBoaWRkZW5cbiAqIEBwYXJhbSB7Vmlld1R5cGV9IHZpZXdBc1xuICogQHBhcmFtIHtudW1iZXI/fSBsZXNzb25JZCAtIExlc3NvbiB0byBoaWRlIChvciBudWxsIGlmIG5vbmUpXG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVTdG9yZVdpdGhMb2NrZWRMZXNzb24gPSAoXG4gIHZpZXdBcyxcbiAgbG9ja2FibGVBdXRob3JpemVkID0gZmFsc2VcbikgPT4ge1xuICBjb25zdCBzZWN0aW9uSWQgPSAxMTtcbiAgcmV0dXJuIGNyZWF0ZVN0b3JlKHN0YXRlID0+IHN0YXRlLCB7XG4gICAgbGVzc29uTG9jazoge1xuICAgICAgbGVzc29uc0J5U2VjdGlvbklkOiB7XG4gICAgICAgIFtzZWN0aW9uSWRdOiB7fSxcbiAgICAgIH0sXG4gICAgICBsZXNzb25zQnlTZWN0aW9uSWRMb2FkZWQ6IHRydWUsXG4gICAgICBsb2NrYWJsZUF1dGhvcml6ZWQ6IGxvY2thYmxlQXV0aG9yaXplZCxcbiAgICAgIGxvY2thYmxlQXV0aG9yaXplZExvYWRlZDogdHJ1ZSxcbiAgICB9LFxuICAgIHZpZXdBczogdmlld0FzLFxuICAgIHRlYWNoZXJTZWN0aW9uczoge1xuICAgICAgc2VsZWN0ZWRTZWN0aW9uSWQ6IHNlY3Rpb25JZCxcbiAgICB9LFxuICAgIGhpZGRlbkxlc3NvbjogSW1tdXRhYmxlLmZyb21KUyh7XG4gICAgICBsZXNzb25zQnlTZWN0aW9uOiB7XG4gICAgICAgIFtzZWN0aW9uSWRdOiB7W2xlc3NvbklkXTogdHJ1ZX0sXG4gICAgICB9LFxuICAgIH0pLFxuICAgIHByb2dyZXNzOiB7XG4gICAgICB1bml0UHJvZ3Jlc3NIYXNMb2FkZWQ6IHRydWUsXG4gICAgfSxcbiAgICBjdXJyZW50VXNlcjoge1xuICAgICAgdXNlcklkOiAxLFxuICAgIH0sXG4gIH0pO1xufTtcblxuY29uc3QgcmFuZG9tTnVtYmVyVXBUbzEwMCA9ICgpID0+IHtcbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMCk7XG59O1xuXG5sZXQgbGVzc29uSWQgPSAxO1xuXG5leHBvcnQgY29uc3QgZmFrZUxlc3NvbldpdGhMZXZlbHMgPSAob3ZlcnJpZGVGaWVsZHMgPSB7fSwgbGV2ZWxDb3VudCA9IDEpID0+IHtcbiAgY29uc3QgcG9zaXRpb24gPSBvdmVycmlkZUZpZWxkcy5wb3NpdGlvbiB8fCByYW5kb21OdW1iZXJVcFRvMTAwKCk7XG4gIHJldHVybiB7XG4gICAgaWQ6IGxlc3NvbklkKyssXG4gICAgbmFtZTogYExlc3NvbiAtICR7cG9zaXRpb259YCxcbiAgICB0aXRsZTogYExlc3NvbiAke3Bvc2l0aW9ufTogTGVzc29uIC0gJHtwb3NpdGlvbn1gLFxuICAgIGxvY2thYmxlOiBmYWxzZSxcbiAgICByZWxhdGl2ZV9wb3NpdGlvbjogcG9zaXRpb24sXG4gICAgcG9zaXRpb246IHBvc2l0aW9uLFxuICAgIGxldmVsczogZmFrZUxldmVscyhsZXZlbENvdW50KSxcbiAgICAuLi5vdmVycmlkZUZpZWxkcyxcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBmYWtlU3R1ZGVudHMgPSBzdHVkZW50Q291bnQgPT4ge1xuICByZXR1cm4gQXJyYXkoc3R1ZGVudENvdW50KVxuICAgIC5maWxsKClcbiAgICAubWFwKChfLCBpKSA9PiAoe1xuICAgICAgaWQ6IGksXG4gICAgICBuYW1lOiBgc3R1ZGVudC0ke2l9YCxcbiAgICAgIGZhbWlseU5hbWU6IGBzdHVkZW50LSR7c3R1ZGVudENvdW50IC0gaX1gLFxuICAgIH0pKTtcbn07XG5cbmV4cG9ydCBjb25zdCBmYWtlVW5pdERhdGEgPSAob3ZlcnJpZGVGaWVsZHMgPSB7fSkgPT4ge1xuICByZXR1cm4ge1xuICAgIGlkOiAxLFxuICAgIG5hbWU6ICdjc2QxLTIwMjAnLFxuICAgIHRpdGxlOiAnQ1NEIFVuaXQgMSAtIFByb2JsZW0gU29sdmluZyBhbmQgQ29tcHV0aW5nICgyMC0yMSknLFxuICAgIGNzZjogZmFsc2UsXG4gICAgaXNDc2Q6IHRydWUsXG4gICAgaXNDc3A6IGZhbHNlLFxuICAgIGxlc3NvbnM6IFtdLFxuICAgIC4uLm92ZXJyaWRlRmllbGRzLFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGZha2VTdHVkZW50TGV2ZWxQcm9ncmVzcyA9IChcbiAgbGV2ZWxzLFxuICBzdHVkZW50cyxcbiAgc2VydmVyUHJvZ3Jlc3NPdmVycmlkZXMgPSB7fVxuKSA9PiB7XG4gIGNvbnN0IHByb2dyZXNzT25MZXNzb25zID0gZmFrZVByb2dyZXNzRm9yTGV2ZWxzKFxuICAgIGxldmVscyxcbiAgICBzZXJ2ZXJQcm9ncmVzc092ZXJyaWRlcy5zdGF0dXMsXG4gICAgc2VydmVyUHJvZ3Jlc3NPdmVycmlkZXNcbiAgKTtcblxuICBjb25zdCBzdHVkZW50UHJvZ3Jlc3MgPSB7fTtcbiAgc3R1ZGVudHMuZm9yRWFjaChzdHVkZW50ID0+IHtcbiAgICBzdHVkZW50UHJvZ3Jlc3Nbc3R1ZGVudC5pZF0gPSBwcm9ncmVzc09uTGVzc29ucztcbiAgfSk7XG5cbiAgcmV0dXJuIHN0dWRlbnRQcm9ncmVzcztcbn07XG5cbmV4cG9ydCBjb25zdCBmYWtlU3R1ZGVudExhc3RVcGRhdGUgPSBzdHVkZW50cyA9PiB7XG4gIGNvbnN0IHN0dWRlbnRMYXN0VXBkYXRlID0ge307XG4gIHN0dWRlbnRzLmZvckVhY2goc3R1ZGVudCA9PiB7XG4gICAgc3R1ZGVudExhc3RVcGRhdGVbc3R1ZGVudC5pZF0gPSBEYXRlLm5vdygpO1xuICB9KTtcbiAgcmV0dXJuIHN0dWRlbnRMYXN0VXBkYXRlO1xufTtcblxuZXhwb3J0IGNvbnN0IGZha2VTdHVkZW50TGFzdFVwZGF0ZUJ5U2NyaXB0ID0gKHNjcmlwdERhdGEsIHN0dWRlbnRzKSA9PiB7XG4gIHJldHVybiB7W3NjcmlwdERhdGEuaWRdOiBmYWtlU3R1ZGVudExhc3RVcGRhdGUoc3R1ZGVudHMpfTtcbn07XG5cbmV4cG9ydCBjb25zdCBmYWtlUHJvZ3Jlc3NUYWJsZVJlZHV4SW5pdGlhbFN0YXRlID0gKFxuICBsZXNzb25zLFxuICBzY3JpcHREYXRhLFxuICBzdHVkZW50cyA9IGZha2VTdHVkZW50cygyKVxuKSA9PiB7XG4gIGlmICghbGVzc29ucykge1xuICAgIGNvbnN0IGxlc3NvbjEgPSBmYWtlTGVzc29uV2l0aExldmVscyh7cG9zaXRpb246IDEsIGxldmVsczogZmFrZUxldmVscygxKX0pO1xuICAgIGNvbnN0IGxlc3NvbjIgPSBmYWtlTGVzc29uV2l0aExldmVscyh7cG9zaXRpb246IDIsIGxldmVsczogZmFrZUxldmVscygyKX0pO1xuICAgIGxlc3NvbnMgPSBbbGVzc29uMSwgbGVzc29uMl07XG4gIH1cbiAgaWYgKCFzY3JpcHREYXRhKSB7XG4gICAgc2NyaXB0RGF0YSA9IGZha2VVbml0RGF0YSh7bGVzc29uczogbGVzc29uc30pO1xuICB9XG4gIGNvbnN0IGxldmVsUHJvZ3Jlc3NEYXRhID0gZmFrZVN0dWRlbnRMZXZlbFByb2dyZXNzKFxuICAgIHNjcmlwdERhdGEubGVzc29uc1swXS5sZXZlbHMsXG4gICAgc3R1ZGVudHNcbiAgKTtcblxuICBjb25zdCBzZWN0aW9uSWQgPSByYW5kb21OdW1iZXJVcFRvMTAwKCk7XG5cbiAgcmV0dXJuIHtcbiAgICBjdXJyZW50VXNlcjoge1xuICAgICAgaXNTb3J0ZWRCeUZhbWlseU5hbWU6IGZhbHNlLFxuICAgIH0sXG4gICAgcHJvZ3Jlc3M6IHtcbiAgICAgIGxlc3Nvbkdyb3VwczogW10sXG4gICAgICBsZXNzb25zOiBsZXNzb25zLFxuICAgICAgZm9jdXNBcmVhTGVzc29uSWRzOiBbXSxcbiAgICAgIGRlZXBlckxlYXJuaW5nQ291cnNlOiBmYWxzZSxcbiAgICB9LFxuICAgIHRlYWNoZXJTZWN0aW9uczoge1xuICAgICAgc2VjdGlvbnM6IFt7aWQ6IHNlY3Rpb25JZH1dLFxuICAgICAgc2VsZWN0ZWRTZWN0aW9uSWQ6IHNlY3Rpb25JZCxcbiAgICAgIHNlbGVjdGVkU3R1ZGVudHM6IHN0dWRlbnRzLFxuICAgIH0sXG4gICAgc2VjdGlvblByb2dyZXNzOiB7XG4gICAgICB1bml0RGF0YUJ5VW5pdDoge1tzY3JpcHREYXRhLmlkXTogc2NyaXB0RGF0YX0sXG4gICAgICBzdHVkZW50TGV2ZWxQcm9ncmVzc0J5VW5pdDoge1xuICAgICAgICBbc2NyaXB0RGF0YS5pZF06IGxldmVsUHJvZ3Jlc3NEYXRhLFxuICAgICAgfSxcbiAgICAgIHN0dWRlbnRMZXNzb25Qcm9ncmVzc0J5VW5pdDoge1xuICAgICAgICBbc2NyaXB0RGF0YS5pZF06IGxlc3NvblByb2dyZXNzRm9yU2VjdGlvbihcbiAgICAgICAgICBsZXZlbFByb2dyZXNzRGF0YSxcbiAgICAgICAgICBzY3JpcHREYXRhLmxlc3NvbnNcbiAgICAgICAgKSxcbiAgICAgIH0sXG4gICAgICBzdHVkZW50TGFzdFVwZGF0ZUJ5VW5pdDogZmFrZVN0dWRlbnRMYXN0VXBkYXRlQnlTY3JpcHQoXG4gICAgICAgIHNjcmlwdERhdGEsXG4gICAgICAgIHN0dWRlbnRzXG4gICAgICApLFxuICAgICAgbGVzc29uT2ZJbnRlcmVzdDogMSxcbiAgICB9LFxuICAgIHVuaXRTZWxlY3Rpb246IHtzY3JpcHRJZDogc2NyaXB0RGF0YS5pZH0sXG4gICAgbG9jYWxlczoge2xvY2FsZUNvZGU6ICdlbi1VUyd9LFxuICB9O1xufTtcbiIsIi8qIVxuXHRDb3B5cmlnaHQgKGMpIDIwMTggSmVkIFdhdHNvbi5cblx0TGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcblx0aHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblx0dmFyIG5hdGl2ZUNvZGVTdHJpbmcgPSAnW25hdGl2ZSBjb2RlXSc7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcygpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdFx0aWYgKGFyZy5sZW5ndGgpIHtcblx0XHRcdFx0XHR2YXIgaW5uZXIgPSBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goaW5uZXIpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRpZiAoYXJnLnRvU3RyaW5nICE9PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nICYmICFhcmcudG9TdHJpbmcudG9TdHJpbmcoKS5pbmNsdWRlcygnW25hdGl2ZSBjb2RlXScpKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZy50b1N0cmluZygpKTtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRjbGFzc05hbWVzLmRlZmF1bHQgPSBjbGFzc05hbWVzO1xuXHRcdG1vZHVsZS5leHBvcnRzID0gY2xhc3NOYW1lcztcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gcmVnaXN0ZXIgYXMgJ2NsYXNzbmFtZXMnLCBjb25zaXN0ZW50IHdpdGggbnBtIHBhY2thZ2UgbmFtZVxuXHRcdGRlZmluZSgnY2xhc3NuYW1lcycsIFtdLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG5cdH1cbn0oKSk7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHtjb21iaW5lUmVkdWNlcnMsIGNyZWF0ZVN0b3JlfSBmcm9tICdyZWR1eCc7XG5cbmltcG9ydCBoaWRkZW5MZXNzb24gZnJvbSAnQGNkby9hcHBzL2NvZGUtc3R1ZGlvL2hpZGRlbkxlc3NvblJlZHV4JztcbmltcG9ydCBsZXNzb25Mb2NrIGZyb20gJ0BjZG8vYXBwcy9jb2RlLXN0dWRpby9sZXNzb25Mb2NrUmVkdXgnO1xuaW1wb3J0IHByb2dyZXNzIGZyb20gJ0BjZG8vYXBwcy9jb2RlLXN0dWRpby9wcm9ncmVzc1JlZHV4JztcbmltcG9ydCB7Vmlld1R5cGV9IGZyb20gJ0BjZG8vYXBwcy9jb2RlLXN0dWRpby92aWV3QXNSZWR1eCc7XG5pbXBvcnQgdGVhY2hlclNlY3Rpb25zIGZyb20gJ0BjZG8vYXBwcy90ZW1wbGF0ZXMvdGVhY2hlckRhc2hib2FyZC90ZWFjaGVyU2VjdGlvbnNSZWR1eCc7XG5pbXBvcnQge0xldmVsU3RhdHVzfSBmcm9tICdAY2RvL2dlbmVyYXRlZC1zY3JpcHRzL3NoYXJlZENvbnN0YW50cyc7XG5cbmltcG9ydCB7VW5jb25uZWN0ZWRQcm9ncmVzc0xlc3NvbiBhcyBQcm9ncmVzc0xlc3Nvbn0gZnJvbSAnLi9Qcm9ncmVzc0xlc3Nvbic7XG5pbXBvcnQge2Zha2VMZXNzb24sIGZha2VMZXZlbHN9IGZyb20gJy4vcHJvZ3Jlc3NUZXN0SGVscGVycyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBQcm9ncmVzc0xlc3Nvbixcbn07XG5cbmNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcbiAgbGVzc29uOiBmYWtlTGVzc29uKCdNYXplJywgMSksXG4gIGxldmVsczogW1xuICAgIHtcbiAgICAgIC4uLmZha2VMZXZlbHMoMSlbMF0sXG4gICAgICBuYW1lOiAnRmlyc3QgcHJvZ3Jlc3Npb24nLFxuICAgIH0sXG4gICAgLi4uZmFrZUxldmVscyg1LCB7c3RhcnRMZXZlbDogMn0pLm1hcChsZXZlbCA9PiAoe1xuICAgICAgLi4ubGV2ZWwsXG4gICAgICBwcm9ncmVzc2lvbjogJ1NlY29uZCBQcm9ncmVzc2lvbicsXG4gICAgfSkpLFxuICAgIHtcbiAgICAgIC4uLmZha2VMZXZlbHMoMSlbMF0sXG4gICAgICBuYW1lOiAnTGFzdCBwcm9ncmVzc2lvbicsXG4gICAgfSxcbiAgXSxcbiAgdmlld0FzOiBWaWV3VHlwZS5JbnN0cnVjdG9yLFxuICBpc1Zpc2libGU6IHRydWUsXG4gIGlzTG9ja2VkRm9yVXNlcjogZmFsc2UsXG4gIGlzTG9ja2VkRm9yQWxsU3R1ZGVudHM6IGZhbHNlLFxuICBsb2NrYWJsZUF1dGhvcml6ZWQ6IHRydWUsXG4gIGxvY2thYmxlQXV0aG9yaXplZExvYWRlZDogdHJ1ZSxcbiAgaGlkZGVuRm9yU3R1ZGVudHM6IGZhbHNlLFxuICBsb2NrU3RhdHVzTG9hZGVkOiB0cnVlLFxufTtcblxuY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICBwcm9ncmVzczoge1xuICAgIGxlc3Nvbkdyb3VwczogW10sXG4gICAgbGVzc29uczogW1xuICAgICAge1xuICAgICAgICBsZXZlbHM6IFtdLFxuICAgICAgfSxcbiAgICBdLFxuICAgIGZvY3VzQXJlYUxlc3NvbklkczogW10sXG4gICAgaXNTdW1tYXJ5VmlldzogZmFsc2UsXG4gICAgZGVlcGVyTGVhcm5pbmdDb3Vyc2U6IGZhbHNlLFxuICAgIHNjcmlwdE5hbWU6ICdzY3JpcHQtbmFtZScsXG4gICAgc2NyaXB0SWQ6IDE3LFxuICB9LFxuICB0ZWFjaGVyU2VjdGlvbnM6IHtcbiAgICBzZWN0aW9uc0FyZUxvYWRlZDogdHJ1ZSxcbiAgICBzZWN0aW9uczoge30sXG4gICAgc2VjdGlvbklkczogW10sXG4gIH0sXG4gIGhpZGRlbkxlc3Nvbjoge30sXG4gIGxlc3NvbkxvY2s6IHt9LFxufTtcblxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShcbiAgY29tYmluZVJlZHVjZXJzKHt0ZWFjaGVyU2VjdGlvbnMsIHByb2dyZXNzLCBoaWRkZW5MZXNzb24sIGxlc3NvbkxvY2t9KSxcbiAgaW5pdGlhbFN0YXRlXG4pO1xuXG5jb25zdCBUZW1wbGF0ZSA9IGFyZ3MgPT4gKFxuICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cbiAgICA8UHJvZ3Jlc3NMZXNzb24gey4uLmRlZmF1bHRQcm9wc30gey4uLmFyZ3N9IC8+XG4gIDwvUHJvdmlkZXI+XG4pO1xuXG5leHBvcnQgY29uc3QgRGVmYXVsdCA9IFRlbXBsYXRlLmJpbmQoe30pO1xuXG5leHBvcnQgY29uc3QgV2l0aEZvY3VzQXJlYSA9IFRlbXBsYXRlLmJpbmQoe30pO1xuV2l0aEZvY3VzQXJlYS5hcmdzID0ge1xuICBsZXNzb246IHtcbiAgICAuLi5kZWZhdWx0UHJvcHMubGVzc29uLFxuICAgIGlzRm9jdXNBcmVhOiB0cnVlLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IEZvclBlZXJSZXZpZXdzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5Gb3JQZWVyUmV2aWV3cy5hcmdzID0ge1xuICB2aWV3QXM6IFZpZXdUeXBlLlBhcnRpY2lwYW50LFxuICBjdXJyZW50TGVzc29uSWQ6IC0xLFxuICBsZXNzb246IHtcbiAgICBpZDogLTEsXG4gICAgaXNGb2N1c0FyZWE6IGZhbHNlLFxuICAgIGxvY2thYmxlOiBmYWxzZSxcbiAgICBuYW1lOiAnWW91IG11c3QgY29tcGxldGUgNCByZXZpZXdzIGZvciB0aGlzIHVuaXQnLFxuICB9LFxuICBsZXZlbHM6IFtcbiAgICB7XG4gICAgICBpZDogJy0xJyxcbiAgICAgIG5hbWU6ICdMaW5rIHRvIHN1Ym1pdHRlZCByZXZpZXcnLFxuICAgICAgc3RhdHVzOiBMZXZlbFN0YXR1cy5wZXJmZWN0LFxuICAgICAgaXNMb2NrZWQ6IGZhbHNlLFxuICAgICAgdXJsOiAnL3BlZXJfcmV2aWV3cy8xJyxcbiAgICAgIGxldmVsTnVtYmVyOiAxLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6ICctMScsXG4gICAgICBuYW1lOiAnUmV2aWV3IGEgbmV3IHN1Ym1pc3Npb24nLFxuICAgICAgc3RhdHVzOiBMZXZlbFN0YXR1cy5ub3RfdHJpZWQsXG4gICAgICBpc0xvY2tlZDogZmFsc2UsXG4gICAgICB1cmw6ICcvcHVsbC1yZXZpZXcnLFxuICAgICAgbGV2ZWxOdW1iZXI6IDIsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogJy0xJyxcbiAgICAgIGljb246ICdmYS1sb2NrJyxcbiAgICAgIG5hbWU6ICdSZXZpZXdzIHVuYXZhaWxhYmxlIGF0IHRoaXMgdGltZScsXG4gICAgICBzdGF0dXM6IExldmVsU3RhdHVzLm5vdF90cmllZCxcbiAgICAgIGlzTG9ja2VkOiB0cnVlLFxuICAgICAgdXJsOiAnJyxcbiAgICAgIGxldmVsTnVtYmVyOiAzLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6ICctMScsXG4gICAgICBpY29uOiAnZmEtbG9jaycsXG4gICAgICBuYW1lOiAnUmV2aWV3cyB1bmF2YWlsYWJsZSBhdCB0aGlzIHRpbWUnLFxuICAgICAgc3RhdHVzOiBMZXZlbFN0YXR1cy5ub3RfdHJpZWQsXG4gICAgICBpc0xvY2tlZDogdHJ1ZSxcbiAgICAgIHVybDogJycsXG4gICAgICBsZXZlbE51bWJlcjogNCxcbiAgICB9LFxuICBdLFxufTtcblxuLy8gU2hvdWxkIGJlIHdoaXRlIHdpdGggZnVsbCBvcGFjaXR5LlxuZXhwb3J0IGNvbnN0IEhpZGRlbkFzSW5zdHJ1Y3RvciA9IFRlbXBsYXRlLmJpbmQoe30pO1xuSGlkZGVuQXNJbnN0cnVjdG9yLmFyZ3MgPSB7XG4gIGlzVmlzaWJsZTogdHJ1ZSxcbn07XG5cbi8vIFNob3VsZCBub3Qgc2hvdyB1cC5cbmV4cG9ydCBjb25zdCBIaWRkZW5Bc1BhcnRpY2lwYW50ID0gVGVtcGxhdGUuYmluZCh7fSk7XG5IaWRkZW5Bc1BhcnRpY2lwYW50LmFyZ3MgPSB7XG4gIGhpZGRlbkZvclN0dWRlbnRzOiB0cnVlLFxuICBpc1Zpc2libGU6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgTG9ja2VkTGVzc29uQXNWZXJpZmllZEluc3RydWN0b3IgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkxvY2tlZExlc3NvbkFzVmVyaWZpZWRJbnN0cnVjdG9yLmFyZ3MgPSB7XG4gIGxlc3NvbjogZmFrZUxlc3NvbignQXNzZXNzbWVudCBOdW1iZXIgT25lJywgMSwgdHJ1ZSksXG4gIGxldmVsczogZmFrZUxldmVscyg1LCB7bmFtZWQ6IGZhbHNlfSksXG4gIGlzTG9ja2VkRm9yQWxsU3R1ZGVudHM6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgVW5sb2NrZWRMZXNzb25Bc1ZlcmlmaWVkSW5zdHJ1Y3RvciA9IFRlbXBsYXRlLmJpbmQoe30pO1xuVW5sb2NrZWRMZXNzb25Bc1ZlcmlmaWVkSW5zdHJ1Y3Rvci5hcmdzID0ge1xuICBsZXNzb246IGZha2VMZXNzb24oJ0FzZXNzbWVudCBOdW1iZXIgT25lJywgMSwgdHJ1ZSksXG4gIGxldmVsczogZmFrZUxldmVscyg1LCB7bmFtZWQ6IGZhbHNlfSksXG4gIGlzTG9ja2VkRm9yQWxsU3R1ZGVudHM6IGZhbHNlLFxufTtcblxuZXhwb3J0IGNvbnN0IExvY2tlZExlc3NvbkFzVW52ZXJpZmllZEluc3RydWN0b3IgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkxvY2tlZExlc3NvbkFzVW52ZXJpZmllZEluc3RydWN0b3IuYXJncyA9IHtcbiAgbGVzc29uOiBmYWtlTGVzc29uKCdBc2Vzc21lbnQgTnVtYmVyIE9uZScsIDEsIHRydWUpLFxuICBsZXZlbHM6IGZha2VMZXZlbHMoNSwge25hbWVkOiBmYWxzZX0pLFxuICBpc0xvY2tlZEZvclVzZXI6IHRydWUsXG4gIGxvY2thYmxlQXV0aG9yaXplZDogZmFsc2UsXG59O1xuXG5leHBvcnQgY29uc3QgTG9ja2VkTGVzc29uU2lnbmVkT3V0ID0gVGVtcGxhdGUuYmluZCh7fSk7XG5Mb2NrZWRMZXNzb25TaWduZWRPdXQuYXJncyA9IHtcbiAgdmlld0FzOiBWaWV3VHlwZS5QYXJ0aWNpcGFudCxcbiAgbGVzc29uOiBmYWtlTGVzc29uKCdBc2Vzc21lbnQgTnVtYmVyIE9uZScsIDEsIHRydWUpLFxuICBsZXZlbHM6IGZha2VMZXZlbHMoNSwge25hbWVkOiBmYWxzZX0pLFxuICBpc0xvY2tlZEZvclVzZXI6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgTG9ja2VkTGVzc29uQXNQYXJ0aWNpcGFudCA9IFRlbXBsYXRlLmJpbmQoe30pO1xuTG9ja2VkTGVzc29uQXNQYXJ0aWNpcGFudC5hcmdzID0ge1xuICB2aWV3QXM6IFZpZXdUeXBlLlBhcnRpY2lwYW50LFxuICBsZXNzb246IGZha2VMZXNzb24oJ0FzZXNzbWVudCBOdW1iZXIgT25lJywgMSwgdHJ1ZSksXG4gIGxldmVsczogZmFrZUxldmVscyg1LCB7bmFtZWQ6IGZhbHNlfSkubWFwKGxldmVsID0+ICh7XG4gICAgLi4ubGV2ZWwsXG4gICAgaXNMb2NrZWQ6IHRydWUsXG4gIH0pKSxcbiAgaXNMb2NrZWRGb3JVc2VyOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IFVubG9ja2VkTG9ja2FibGVMZXNzb24gPSBUZW1wbGF0ZS5iaW5kKHt9KTtcblVubG9ja2VkTG9ja2FibGVMZXNzb24uYXJncyA9IHtcbiAgbGVzc29uOiBmYWtlTGVzc29uKCdBc2Vzc21lbnQgTnVtYmVyIE9uZScsIDEsIHRydWUpLFxuICBsZXZlbHM6IGZha2VMZXZlbHMoNSwge25hbWVkOiBmYWxzZX0pLm1hcChsZXZlbCA9PiAoe1xuICAgIC4uLmxldmVsLFxuICAgIHN0YXR1czogTGV2ZWxTdGF0dXMubm90X3RyaWVkLFxuICB9KSksXG59O1xuIl0sIm5hbWVzIjpbIl9yYWRpdW0iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdFRvb2x0aXAiLCJfRm9udEF3ZXNvbWUiLCJfY29sb3IiLCJvYmoiLCJfX2VzTW9kdWxlIiwic3R5bGVzIiwibWFpbiIsImRpc3BsYXkiLCJwb3NpdGlvbiIsInJpZ2h0IiwidG9wIiwid2hpdGVTcGFjZSIsImFycm93Q29udGFpbmVyIiwibGVmdEFycm93Iiwid2lkdGgiLCJoZWlnaHQiLCJib3JkZXJTdHlsZSIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJjb25jYXQiLCJjb2xvciIsImN5YW4iLCJmb2N1c0FyZWEiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ3aGl0ZSIsImxpbmVIZWlnaHQiLCJ0ZXh0IiwiZm9jdXNBcmVhSWNvbiIsInBhZGRpbmciLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJib3JkZXJSYWRpdXMiLCJkZWZhdWx0X2JsdWUiLCJleHBvcnRzIiwiUmFkaXVtIiwiRm9jdXNBcmVhSW5kaWNhdG9yIiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwiaHJlZiIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJpY29uIiwiaWQiLCJyb2xlIiwiZWZmZWN0IiwibW9kdWxlIiwiX2xvZGFzaCIsIl9wcm9wVHlwZXMiLCJfcmVhY3RSZWR1eCIsIl92aWV3QXNSZWR1eCIsIl9mb250Q29uc3RhbnRzIiwiX2ZpcmVob3NlIiwiX2xvY2FsZSIsIl9CdXR0b24iLCJfRm9jdXNBcmVhSW5kaWNhdG9yIiwiX3Byb2dyZXNzSGVscGVycyIsIl9Qcm9ncmVzc0xlc3NvbkNvbnRlbnQiLCJfUHJvZ3Jlc3NMZXNzb25UZWFjaGVySW5mbyIsIl9wcm9ncmVzc1R5cGVzIiwiX3R5cGVvZiIsIm8iLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwiX3NldFByb3RvdHlwZU9mIiwicCIsInNldFByb3RvdHlwZU9mIiwiYmluZCIsIl9fcHJvdG9fXyIsImtleSIsInZhbHVlIiwiX3RvUHJvcGVydHlLZXkiLCJpIiwiX3RvUHJpbWl0aXZlIiwidG9QcmltaXRpdmUiLCJjYWxsIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiTnVtYmVyIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJQcm9ncmVzc0xlc3NvbiIsIl9SZWFjdCRDb21wb25lbnQiLCJwcm9wcyIsIl90aGlzIiwic2V0U3RhdGUiLCJjb2xsYXBzZWQiLCJzdGF0ZSIsImZpcmVob3NlQ2xpZW50IiwicHV0UmVjb3JkIiwic3R1ZHkiLCJzdHVkeV9ncm91cCIsImV2ZW50IiwiZGF0YV9qc29uIiwiSlNPTiIsInN0cmluZ2lmeSIsImxlc3Nvbl9pZCIsImxlc3NvbiIsInNjcmlwdF9pZCIsInNjcmlwdElkIiwiaW5jbHVkZVVzZXJJZCIsInZpZXdBcyIsIlZpZXdUeXBlIiwiSW5zdHJ1Y3RvciIsImN1cnJlbnRMZXNzb25JZCIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiX3Byb3RvIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJuZXh0UHJvcHMiLCJ0aGlzIiwicmVuZGVyIiwiX3RoaXMyIiwiX3RoaXMkcHJvcHMiLCJsZXZlbHMiLCJpc1Zpc2libGUiLCJoaWRkZW5Gb3JTdHVkZW50cyIsImlzTG9ja2VkRm9yVXNlciIsImlzTG9ja2VkRm9yQWxsU3R1ZGVudHMiLCJzZWxlY3RlZFNlY3Rpb25JZCIsImlzUnRsIiwic2hvd0FzTG9ja2VkIiwidGl0bGUiLCJsZXNzb25OdW1iZXIiLCJpMThuIiwibGVzc29uTnVtYmVyZWQiLCJsZXNzb25OYW1lIiwibmFtZSIsImNhcmV0U3R5bGUiLCJjYXJldFJUTCIsImNhcmV0IiwibG9ja2VkVG9vbHRpcElkIiwiXyIsInVuaXF1ZUlkIiwiZGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbl90ZWFjaGVyIiwiZGVzY3JpcHRpb25fc3R1ZGVudCIsImxlc3NvblVybCIsInVybCIsInNob3dOb3RBdXRob3JpemVkV2FybmluZyIsImxvY2thYmxlIiwibG9ja2FibGVBdXRob3JpemVkTG9hZGVkIiwibG9ja2FibGVBdXRob3JpemVkIiwiY2xhc3NOYW1lIiwib3V0ZXIiLCJoaWRkZW5PckxvY2tlZCIsIlBhcnRpY2lwYW50IiwidHJhbnNsdWNlbnQiLCJoZWFkaW5nIiwibWFyZ2luQm90dG9tIiwiaGVhZGluZ1RleHQiLCJvbkNsaWNrIiwidG9nZ2xlQ29sbGFwc2VkIiwidGFiSW5kZXgiLCJvbktleURvd24iLCJpbmNsdWRlcyIsInByZXZlbnREZWZhdWx0IiwibG9ja1N0YXR1c0xvYWRlZCIsInVubG9ja2VkSWNvbiIsIndyYXBwZXIiLCJsb2NrQXNzZXNzbWVudExvbmciLCJzdHVkZW50X2xlc3Nvbl9wbGFuX2h0bWxfdXJsIiwiYnV0dG9uU3R5bGUiLCJfX3VzZURlcHJlY2F0ZWRUYWciLCJsZXNzb25SZXNvdXJjZXMiLCJ0YXJnZXQiLCJvbkNsaWNrU3R1ZGVudExlc3NvblBsYW4iLCJub3RBdXRob3JpemVkV2FybmluZyIsInVudmVyaWZpZWRUZWFjaGVyTG9ja1dhcm5pbmciLCJsZWFybk1vcmVMaW5rIiwibGVhcm5Nb3JlV2l0aFBlcmlvZCIsImRpc2FibGVkIiwiaXNNaW5pVmlldyIsImlzRm9jdXNBcmVhIiwiUmVhY3QiLCJDb21wb25lbnQiLCJsZXNzb25UeXBlIiwiaXNSZXF1aXJlZCIsIlByb3BUeXBlcyIsImFycmF5T2YiLCJsZXZlbFdpdGhQcm9ncmVzc1R5cGUiLCJudW1iZXIiLCJvbmVPZiIsInZhbHVlcyIsImJvb2wiLCJiYWNrZ3JvdW5kIiwibGlnaHRlc3RfZ3JheSIsImJvcmRlcl9ncmF5IiwibWFyZ2luVG9wIiwiZm9udFNpemUiLCJmb250Q29uc3RhbnRzIiwiYWxpZ25JdGVtcyIsImN1cnNvciIsImZsZXhHcm93Iiwib3BhY2l0eSIsIm9yYW5nZSIsInJlZCIsImNvbm5lY3QiLCJvd25Qcm9wcyIsInByb2dyZXNzIiwibGVzc29uTG9jayIsImxlc3NvbklzVmlzaWJsZSIsImxlc3NvbklzTG9ja2VkRm9yVXNlciIsImxlc3NvbklzTG9ja2VkRm9yQWxsU3R1ZGVudHMiLCJ0ZWFjaGVyU2VjdGlvbnMiLCJ1bml0UHJvZ3Jlc3NIYXNMb2FkZWQiLCJsZXNzb25zQnlTZWN0aW9uSWRMb2FkZWQiLCJfaW1tdXRhYmxlIiwiX3JlZHV4IiwiX3NoYXJlZENvbnN0YW50cyIsImZha2VMZXNzb24iLCJ1bmRlZmluZWQiLCJsZXNzb25TdGFydFVybCIsImZha2VMZXZlbCIsIm92ZXJyaWRlcyIsImxldmVsTnVtYmVyIiwidG9TdHJpbmciLCJzdGF0dXMiLCJMZXZlbFN0YXR1cyIsIm5vdF90cmllZCIsImlzTG9ja2VkIiwiYnViYmxlVGV4dCIsImlzVW5wbHVnZ2VkIiwiZmFrZUxldmVscyIsImZha2VMZXZlbFdpdGhTdWJMZXZlbHMiLCJudW1TdWJsZXZlbHMiLCJzdGFydExldmVsIiwic3VibGV2ZWxzIiwicmFuZ2UiLCJtYXAiLCJpbmRleCIsIm51bUxldmVscyIsIl9yZWYiLCJfcmVmJHN0YXJ0TGV2ZWwiLCJfcmVmJG5hbWVkIiwibmFtZWQiLCJvdmVycmlkZURhdGEiLCJmYWtlUHJvZ3Jlc3NGb3JMZXZlbHMiLCJzZXJ2ZXJQcm9ncmVzc092ZXJyaWRlcyIsImxldmVsIiwibGV2ZWxQcm9ncmVzc0Zyb21TZXJ2ZXIiLCJyYW5kb21OdW1iZXJVcFRvMTAwIiwiY3JlYXRlU3RvcmVXaXRoSGlkZGVuTGVzc29uIiwibGVzc29uSWQiLCJjcmVhdGVTdG9yZSIsImxlc3NvbnNCeVNlY3Rpb25JZCIsInNlY3Rpb25JZHMiLCJzZWN0aW9uc0FyZUxvYWRlZCIsInNlY3Rpb25zIiwibGVzc29uX2V4dHJhcyIsInBhaXJpbmdfYWxsb3dlZCIsInN0dWRlbnRDb3VudCIsImNvZGUiLCJwcm92aWRlck1hbmFnZWQiLCJsZXNzb25zIiwidHRzQXV0b3BsYXlFbmFibGVkIiwibGVzc29uRXh0cmFzIiwicGFpcmluZ0FsbG93ZWQiLCJoaWRkZW5MZXNzb24iLCJJbW11dGFibGUiLCJmcm9tSlMiLCJsZXNzb25zQnlTZWN0aW9uIiwic2NyaXB0TmFtZSIsImN1cnJlbnRVc2VyIiwidXNlcklkIiwiY3JlYXRlU3RvcmVXaXRoTG9ja2VkTGVzc29uIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiZmFrZUxlc3NvbldpdGhMZXZlbHMiLCJvdmVycmlkZUZpZWxkcyIsImxldmVsQ291bnQiLCJyZWxhdGl2ZV9wb3NpdGlvbiIsImZha2VTdHVkZW50cyIsIkFycmF5IiwiZmlsbCIsImZhbWlseU5hbWUiLCJmYWtlVW5pdERhdGEiLCJjc2YiLCJpc0NzZCIsImlzQ3NwIiwiZmFrZVN0dWRlbnRMZXZlbFByb2dyZXNzIiwic3R1ZGVudHMiLCJwcm9ncmVzc09uTGVzc29ucyIsInN0dWRlbnRQcm9ncmVzcyIsInN0dWRlbnQiLCJmYWtlU3R1ZGVudExhc3RVcGRhdGUiLCJzdHVkZW50TGFzdFVwZGF0ZSIsIkRhdGUiLCJub3ciLCJmYWtlU3R1ZGVudExhc3RVcGRhdGVCeVNjcmlwdCIsInNjcmlwdERhdGEiLCJmYWtlUHJvZ3Jlc3NUYWJsZVJlZHV4SW5pdGlhbFN0YXRlIiwibGV2ZWxQcm9ncmVzc0RhdGEiLCJzZWN0aW9uSWQiLCJpc1NvcnRlZEJ5RmFtaWx5TmFtZSIsImxlc3Nvbkdyb3VwcyIsImZvY3VzQXJlYUxlc3NvbklkcyIsImRlZXBlckxlYXJuaW5nQ291cnNlIiwic2VsZWN0ZWRTdHVkZW50cyIsInNlY3Rpb25Qcm9ncmVzcyIsInVuaXREYXRhQnlVbml0Iiwic3R1ZGVudExldmVsUHJvZ3Jlc3NCeVVuaXQiLCJzdHVkZW50TGVzc29uUHJvZ3Jlc3NCeVVuaXQiLCJsZXNzb25Qcm9ncmVzc0ZvclNlY3Rpb24iLCJzdHVkZW50TGFzdFVwZGF0ZUJ5VW5pdCIsImxlc3Nvbk9mSW50ZXJlc3QiLCJ1bml0U2VsZWN0aW9uIiwibG9jYWxlcyIsImxvY2FsZUNvZGUiLCJoYXNPd24iLCJoYXNPd25Qcm9wZXJ0eSIsImNsYXNzTmFtZXMiLCJjbGFzc2VzIiwiYXJnIiwiYXJnVHlwZSIsImlzQXJyYXkiLCJpbm5lciIsImpvaW4iLCJkZWZhdWx0IiwiX2hpZGRlbkxlc3NvblJlZHV4IiwiX2xlc3NvbkxvY2tSZWR1eCIsIl9wcm9ncmVzc1JlZHV4IiwiX3RlYWNoZXJTZWN0aW9uc1JlZHV4IiwiX1Byb2dyZXNzTGVzc29uIiwiX3Byb2dyZXNzVGVzdEhlbHBlcnMiLCJfZXh0ZW5kcyIsImFzc2lnbiIsInNvdXJjZSIsIl9hcnJheUxpa2VUb0FycmF5IiwiYXJyIiwibGVuIiwiYXJyMiIsImNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsIl90b0NvbnN1bWFibGVBcnJheSIsIl9hcnJheVdpdGhvdXRIb2xlcyIsIl9pdGVyYWJsZVRvQXJyYXkiLCJpdGVyIiwiZnJvbSIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIm1pbkxlbiIsIm4iLCJzbGljZSIsInRlc3QiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJwcm9ncmVzc2lvbiIsInN0b3JlIiwiY29tYmluZVJlZHVjZXJzIiwiaXNTdW1tYXJ5VmlldyIsIlRlbXBsYXRlIiwiYXJncyIsIlByb3ZpZGVyIiwiVW5jb25uZWN0ZWRQcm9ncmVzc0xlc3NvbiIsInBlcmZlY3QiXSwic291cmNlUm9vdCI6IiJ9