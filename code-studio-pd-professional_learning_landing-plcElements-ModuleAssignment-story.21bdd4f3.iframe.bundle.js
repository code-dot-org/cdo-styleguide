(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1052],{"./src/code-studio/pd/professional_learning_landing/plcElements/ModuleAssignment.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}_defineProperty(exports.default=function(_React$Component){function ModuleAssignment(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ModuleAssignment,_React$Component),ModuleAssignment.prototype.render=function render(){return _react.default.createElement("a",{href:this.props.moduleAssignmentData.link},_react.default.createElement("div",{style:styles.moduleAssignmentSection},this.props.moduleAssignmentData.category,_react.default.createElement("div",{style:styles.ribbonWrapper},_react.default.createElement("div",{style:Object.assign({},styles.ribbon,styles.ribbonStylesForStatus["".concat(this.props.moduleAssignmentData.status)]),className:"ribbon"}))))},ModuleAssignment}(_react.default.Component),"propTypes",{moduleAssignmentData:_propTypes.default.object});var styles={moduleAssignmentSection:function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({borderRadius:"5px",margin:"10px",padding:"5px",backgroundColor:_color.default.cyan,color:"white",position:"relative"},_fontConstants.default["main-font-regular"]),ribbonWrapper:{width:"90px",height:"100%",overflow:"hidden",position:"absolute",top:"0px",right:"0px"},ribbon:{transform:"rotate(45deg)",position:"relative",padding:"7px 0",left:"-1px",top:"10px",width:"120px",backgroundColor:"red"},ribbonStylesForStatus:{not_started:{backgroundColor:"white"},in_progress:{backgroundColor:_color.default.mustardyellow},completed:{backgroundColor:"#0EBE0E"}}};module.exports=exports.default},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/code-studio/pd/professional_learning_landing/plcElements/ModuleAssignment.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.NotStarted=exports.InProgress=exports.Completed=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_ModuleAssignment=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/professional_learning_landing/plcElements/ModuleAssignment.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_ModuleAssignment.default};var Template=function Template(args){return _react.default.createElement(_ModuleAssignment.default,args)};(exports.NotStarted=Template.bind({})).args={moduleAssignmentData:{category:"Overview",status:"not_started"}},(exports.InProgress=Template.bind({})).args={moduleAssignmentData:{category:"Overview",status:"in_progress"}},(exports.Completed=Template.bind({})).args={moduleAssignmentData:{category:"Overview",status:"completed"}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,