(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[5933],{"./src/code-studio/pd/workshop_dashboard/components/survey_results/survey_rollup_table.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SurveyRollupTable=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactBootstrap=__webpack_require__("./node_modules/react-bootstrap/es/index.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_workshopConstants=__webpack_require__("./src/code-studio/pd/workshop_dashboard/workshopConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var questionCategories=["facilitator_effectiveness","teacher_engagement","overall_success"],SurveyRollupTable=exports.SurveyRollupTable=function(_React$Component){function SurveyRollupTable(props){var _this;return(_this=_React$Component.call(this,props)||this).categoryDenominator={facilitator_effectiveness:7,teacher_engagement:props.courseName===_workshopConstants.COURSE_CSF?5:7,overall_success:7},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SurveyRollupTable,_React$Component);var _proto=SurveyRollupTable.prototype;return _proto.createOrderedRows=function createOrderedRows(categories,questions){var orderedRows=[];return categories.forEach((function(category){orderedRows.push({key:category,label:_lodash.default.startCase(category),isCategory:!0});var question_found=!1;Object.keys(questions).forEach((function(question_name){question_name.startsWith(category)&&(question_found=!0,orderedRows.push({key:question_name,label:questions[question_name],category}))})),question_found||orderedRows.pop()})),orderedRows},_proto.createColumnLabel=function createColumnLabel(facilitatorId,workshopId,courseName,facilitatorLookup){var label="";if(facilitatorId){var possessiveName="".concat(facilitatorLookup[facilitatorId],"'").concat(_lodash.default.endsWith(name,"s")?"":"s");label=workshopId?"".concat(possessiveName," average for this workshop"):"Average across all of ".concat(possessiveName," ").concat(courseName," workshops")}else workshopId&&(label="Average for this workshop");return label},_proto.createOrderedColumns=function createOrderedColumns(){var _this2=this;return Object.keys(this.props.rollups).map((function(scenario_key){return{key:scenario_key,label:_this2.createColumnLabel(_this2.props.rollups[scenario_key].facilitator_id,_this2.props.rollups[scenario_key].workshop_id,_this2.props.rollups[scenario_key].course_name,_this2.props.facilitators)||scenario_key.toString}}))},_proto.renderAverage=function renderAverage(value,category){return value?"".concat(value.toFixed(1)," / ").concat(this.categoryDenominator[category]):"-"},_proto.render=function render(){var _this3=this,orderedColumns=this.createOrderedColumns(),orderedRows=this.createOrderedRows(questionCategories,this.props.questions);return _react.default.createElement(_reactBootstrap.Table,{bordered:!0},_react.default.createElement("thead",null,_react.default.createElement("tr",null,_react.default.createElement("th",null),orderedColumns.map((function(column,i){return _react.default.createElement("th",{key:i},column.label)})))),_react.default.createElement("tbody",null,_react.default.createElement("tr",null,_react.default.createElement("td",null,"Total responses"),orderedColumns.map((function(column,i){return _react.default.createElement("td",{key:i},_this3.props.rollups[column.key].response_count)}))),orderedRows.map((function(row,i){return _react.default.createElement("tr",{key:i,style:row.isCategory?{borderTop:"solid"}:{}},_react.default.createElement("td",{style:row.isCategory?{}:{paddingLeft:"30px"}},row.label),orderedColumns.map((function(column,j){return _react.default.createElement("td",{key:j},_this3.renderAverage(_this3.props.rollups[column.key].averages[row.key],row.category||row.key))})))}))))},SurveyRollupTable}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SurveyRollupTable,"propTypes",{courseName:_propTypes.default.string.isRequired,rollups:_propTypes.default.object.isRequired,questions:_propTypes.default.object.isRequired,facilitators:_propTypes.default.object.isRequired});exports.default=SurveyRollupTable},"./src/code-studio/pd/workshop_dashboard/workshopConstants.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TIME_FORMAT=exports.MAX_SESSIONS=exports.DATE_FORMAT=exports.DATETIME_FORMAT=exports.COURSE_CSP=exports.COURSE_CSF=exports.COURSE_CSD=exports.COURSE_CSA=void 0;var TIME_FORMAT=exports.TIME_FORMAT="h:mma",DATE_FORMAT=exports.DATE_FORMAT="YYYY-MM-DD";exports.DATETIME_FORMAT="".concat(DATE_FORMAT," ").concat(TIME_FORMAT),exports.COURSE_CSF="CS Fundamentals",exports.COURSE_CSD="CS Discoveries",exports.COURSE_CSP="CS Principles",exports.COURSE_CSA="Computer Science A",exports.MAX_SESSIONS=10},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/code-studio/pd/workshop_dashboard/components/survey_results/survey_rollup_table.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WorkshopRollup=exports.FacilitatorRollup=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_survey_rollup_table=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/workshop_dashboard/components/survey_results/survey_rollup_table.jsx")),_workshopConstants=__webpack_require__("./src/code-studio/pd/workshop_dashboard/workshopConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_survey_rollup_table.default};var facilitator_rollups={facilitators:{1:"Facilitator Person 1",2:"Facilitator Person 2"},questions:{facilitator_effectiveness_0:"Demonstrated knowledge of the curriculum.",facilitator_effectiveness_1:"Built and sustained an equitable learning environment in our workshop.",facilitator_effectiveness_2:"Kept the workshop and participants on track.",facilitator_effectiveness_3:"Supported productive workshop discussions.",facilitator_effectiveness_4:"Helped me see ways to create and support an equitable learning environment for my students.",facilitator_effectiveness_5:"Demonstrated a healthy working relationship with their co-facilitator (if applicable)."},rollups:{facilitator_1_single_ws:{facilitator_id:1,workshop_id:1,response_count:1,averages:{facilitator_effectiveness_0:1,facilitator_effectiveness_2:4,facilitator_effectiveness_4:3,facilitator_effectiveness_5:1,facilitator_effectiveness:2.25}},facilitator_1_all_ws:{facilitator_id:1,all_workshop_ids:[1],course_name:"CS Principles",response_count:1,averages:{facilitator_effectiveness_0:1,facilitator_effectiveness_2:4,facilitator_effectiveness_4:3,facilitator_effectiveness_5:1,facilitator_effectiveness:2.25}},facilitator_2_single_ws:{facilitator_id:2,workshop_id:1,response_count:1,averages:{facilitator_effectiveness_0:1,facilitator_effectiveness_2:4,facilitator_effectiveness_4:3,facilitator_effectiveness_5:1,facilitator_effectiveness:2.25}},facilitator_2_all_ws:{facilitator_id:2,all_workshop_ids:[1],course_name:"CS Principles",response_count:1,averages:{facilitator_effectiveness_0:1,facilitator_effectiveness_2:4,facilitator_effectiveness_4:3,facilitator_effectiveness_5:1,facilitator_effectiveness:2.25}}}},workshop_rollups={facilitators:{1:"Facilitator Person 1",2:"Facilitator Person 2"},questions:{overall_success_0:"I feel more prepared to teach the material covered in this workshop than before I came.",overall_success_1:"I know where to go if I need help preparing to teach this material.",overall_success_2:"This professional development was suitable for my level of experience with teaching CS.",overall_success_3:"I feel connected to a community of computer science teachers.",overall_success_4:"I would recommend this professional development to others",teacher_engagement_0:"I found the activities we did in this workshop interesting and engaging.",teacher_engagement_1:"I was highly active and participated a lot in the workshop activities.",teacher_engagement_2:"I frequently talk about ideas or content from the workshop with others.",teacher_engagement_3:"I am planning to make use of ideas and content covered in this workshop in my classroom."},rollups:{this_ws:{workshop_id:1,response_count:1,averages:{overall_success_0:6,overall_success_1:7,overall_success_2:6,overall_success_3:6,overall_success_4:7,teacher_engagement_0:7,teacher_engagement_1:6,teacher_engagement_2:6,teacher_engagement_3:7,overall_success:6.4,teacher_engagement:6.5}},facilitator_1_all_ws:{facilitator_id:1,all_workshop_ids:[1],course_name:"CS Principles",response_count:1,averages:{overall_success_0:6,overall_success_1:7,overall_success_2:6,overall_success_3:6,overall_success_4:7,teacher_engagement_0:7,teacher_engagement_1:6,teacher_engagement_2:6,teacher_engagement_3:7,overall_success:6.4,teacher_engagement:6.5}},facilitator_2_all_ws:{facilitator_id:2,all_workshop_ids:[1],course_name:"CS Principles",response_count:1,averages:{overall_success_0:6,overall_success_1:7,overall_success_2:6,overall_success_3:6,overall_success_4:7,teacher_engagement_0:7,teacher_engagement_1:6,teacher_engagement_2:6,teacher_engagement_3:7,overall_success:6.4,teacher_engagement:6.5}}}},Template=function Template(args){return _react.default.createElement("div",{id:"application-container"},_react.default.createElement(_survey_rollup_table.default,args))};(exports.FacilitatorRollup=Template.bind({})).args={courseName:"CS Principles",rollups:facilitator_rollups.rollups,questions:facilitator_rollups.questions,facilitators:facilitator_rollups.facilitators},(exports.WorkshopRollup=Template.bind({})).args={courseName:_workshopConstants.COURSE_CSF,rollups:workshop_rollups.rollups,questions:workshop_rollups.questions,facilitators:workshop_rollups.facilitators}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,