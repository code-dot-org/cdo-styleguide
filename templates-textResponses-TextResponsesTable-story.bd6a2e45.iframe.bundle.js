(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[6320],{"./src/fontConstants.js":module=>{module.exports={"metropolis-font":"'Metropolis', sans-serif","main-font":"'Metropolis', sans-serif","thin-font-weight":"100","extra-light-font-weight":"200","light-font-weight":"300","regular-font-weight":"400","medium-font-weight":"500","semi-bold-font-weight":"600","bold-font-weight":"700","extra-bold-font-weight":"800","black-font-weight":"900","main-font-thin":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"normal"},"main-font-thin-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"italic"},"main-font-extra-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"normal"},"main-font-extra-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"italic"},"main-font-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"normal"},"main-font-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"italic"},"main-font-regular":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"normal"},"main-font-regular-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"italic"},"main-font-medium":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"normal"},"main-font-medium-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"italic"},"main-font-semi-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"normal"},"main-font-semi-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"italic"},"main-font-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"normal"},"main-font-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"italic"},"main-font-extra-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"normal"},"main-font-extra-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"italic"},"main-font-black":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"normal"},"main-font-black-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"italic"},"barlowSemiCondensed-semibold":"'Barlow Semi Condensed Semibold', sans-serif","barlowSemiCondensed-medium":"'Barlow Semi Condensed Medium', sans-serif","code-font":"'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace","font-awesome-core-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css'","font-awesome-brands-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css'","font-awesome-solid-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css'","font-awesome-regular-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css'","font-awesome-v4-fonts-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css'","font-awesome-v4-shims-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css'"}},"./src/styleConstants.js":module=>{module.exports={"workspace-headers-height":30,"resize-bar-width":13,"delete-opacity":"0.5","content-width":970}},"./src/templates/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/tables/tableConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tableLayoutStyles=exports.sortableOptions=exports.plTableLayoutStyles=exports.NAME_CELL_INPUT_WIDTH=void 0;var _fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_styleConstants=_interopRequireDefault(__webpack_require__("./src/styleConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.tableLayoutStyles={tableText:{textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"},table:{borderWidth:1,borderStyle:"solid",borderColor:_color.default.border_gray,width:_styleConstants.default["content-width"],backgroundColor:_color.default.table_light_row},cell:{maxWidth:200,border:"1px solid",borderColor:_color.default.border_light_gray,padding:10,fontSize:14},headerCell:{backgroundColor:_color.default.table_header,fontWeight:"bold",borderColor:_color.default.border_light_gray,borderStyle:"solid",borderBottomWidth:1,borderTopWidth:0,borderLeftWidth:0,borderRightWidth:1,paddingTop:20,paddingBottom:20,color:_color.default.charcoal,textAlign:"inherit"},link:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,textDecoration:"none"}),unsortableHeader:{paddingLeft:25},unsortableHeaderRTL:{paddingRight:25}},exports.plTableLayoutStyles={link:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,color:_color.default.neutral_dark,textDecoration:"underline"}),sectionCodeLink:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,color:_color.default.brand_secondary_default}),currentUnit:{marginTop:10,fontSize:14},colButton:{paddingTop:20,paddingLeft:20,paddingBottom:20,width:40},participantTypeCell:{fontSize:14},leaveButton:{fontSize:14}},exports.sortableOptions={default:{color:"rgba(0, 0, 0, 0.2 )"}},exports.NAME_CELL_INPUT_WIDTH=160},"./src/templates/tables/wrapped_sortable.js":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),sort=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/sortabular/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_excluded=["className"];function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}exports.default=function wrappedSortable(getSortingColumns,onSort){var styles=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},basicSortable=sort.sort({getSortingColumns,onSort});return function(label,columnInfo){var _basicSortable=basicSortable(label,columnInfo),newClassName=_basicSortable.className,newProps=_objectWithoutProperties(_basicSortable,_excluded),sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort",className:"fa-fw",style:styles.default});/sort-asc/.test(newClassName)?sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-asc",className:"fa-fw",style:styles.sortAsc}):/sort-desc/.test(newClassName)&&(sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-desc",className:"fa-fw",style:styles.sortDesc}));return _objectSpread(_objectSpread({},newProps),{},{style:Object.assign({},{cursor:"pointer"}),children:_react.default.createElement("span",{style:styles.container},_react.default.createElement("span",{key:"icon",style:{whiteSpace:"nowrap"}},sortIcon),_react.default.createElement("span",{key:"label"},label))})}};module.exports=exports.default},"./src/templates/teacherDashboard/urlHelpers.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.teacherDashboardUrl=exports.scriptUrlForStudent=void 0;exports.teacherDashboardUrl=function teacherDashboardUrl(sectionId){var path=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return path&&"/"!==path.charAt(0)&&(path="/${path}"),"/teacher_dashboard/sections/"+sectionId+path},exports.scriptUrlForStudent=function scriptUrlForStudent(sectionId,scriptName,studentId){return scriptName?"/s/".concat(scriptName,"?section_id=").concat(sectionId,"&user_id=").concat(studentId,"&viewAs=Instructor"):null}},"./src/templates/textResponses/TextResponsesTable.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _orderBy=_interopRequireDefault(__webpack_require__("./node_modules/lodash/orderBy.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),sort=_interopRequireWildcard(__webpack_require__("./node_modules/sortabular/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_urlHelpers=__webpack_require__("./src/templates/teacherDashboard/urlHelpers.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_tableConstants=__webpack_require__("./src/templates/tables/tableConstants.js"),_wrapped_sortable=_interopRequireDefault(__webpack_require__("./src/templates/tables/wrapped_sortable.js")),_textReponsesDataApi=__webpack_require__("./src/templates/textResponses/textReponsesDataApi.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var TABLE_WIDTH=_tableConstants.tableLayoutStyles.table.width,TABLE_COLUMN_WIDTHS={name:TABLE_WIDTH/5,lesson:TABLE_WIDTH/5,puzzle:TABLE_WIDTH/6,question:TABLE_WIDTH/5,response:TABLE_WIDTH/4},TextResponsesTable=function(_Component){function TextResponsesTable(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",{}),_defineProperty(_this,"studentNameFormatter",(function(name,_ref){var rowData=_ref.rowData,_this$props=_this.props,sectionId=_this$props.sectionId,scriptName=_this$props.scriptName,studentUrl=(0,_urlHelpers.scriptUrlForStudent)(sectionId,scriptName,rowData.studentId);return studentUrl?_react.default.createElement("a",{className:"uitest-name-cell",style:_tableConstants.tableLayoutStyles.link,href:studentUrl,target:"_blank",rel:"noopener noreferrer"},name):_react.default.createElement("span",{className:"uitest-name-cell"},name)})),_defineProperty(_this,"responseFormatter",(function(_,_ref2){var rowData=_ref2.rowData,response=rowData.response,url=rowData.url;if(response.length<100)return response;var clippedResponse=response.substring(0,99);return _react.default.createElement("div",null,clippedResponse,_react.default.createElement("a",{style:_tableConstants.tableLayoutStyles.link,href:url,target:"_blank",rel:"noopener noreferrer"},_locale.default.seeFullResponse()))})),_defineProperty(_this,"getSortingColumns",(function(){return _this.state.sortingColumns||{}})),_defineProperty(_this,"getColumns",(function(sortable){return[{property:"studentName",header:{label:_locale.default.name(),props:{className:"uitest-name-header",style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),{width:TABLE_COLUMN_WIDTHS.name})},transforms:[sortable]},cell:{formatters:[_this.studentNameFormatter],props:{style:_objectSpread({},_tableConstants.tableLayoutStyles.cell)}}},{property:"lesson",header:{label:_locale.default.lesson(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),{width:TABLE_COLUMN_WIDTHS.lesson})},transforms:[sortable]},cell:{props:{style:_objectSpread({},_tableConstants.tableLayoutStyles.cell)}}},{property:"puzzle",header:{label:_locale.default.puzzle(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),{width:TABLE_COLUMN_WIDTHS.puzzle})},transforms:[sortable]},cell:{props:{style:_objectSpread({},_tableConstants.tableLayoutStyles.cell)}}},{property:"question",header:{label:_locale.default.question(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),{width:TABLE_COLUMN_WIDTHS.question})},transforms:[sortable]},cell:{props:{style:_objectSpread({},_tableConstants.tableLayoutStyles.cell)}}},{property:"response",header:{label:_locale.default.response(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),{width:TABLE_COLUMN_WIDTHS.response})}},cell:{formatters:[_this.responseFormatter],props:{style:_objectSpread({},_tableConstants.tableLayoutStyles.cell)}}}]})),_defineProperty(_this,"onSort",(function(selectedColumn){_this.setState({sortingColumns:sort.byColumn({sortingColumns:_this.state.sortingColumns,sortingOrder:{FIRST:"asc",asc:"desc",desc:"asc"},selectedColumn})})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(TextResponsesTable,_Component),TextResponsesTable.prototype.render=function render(){var _this$props2=this.props,responses=_this$props2.responses;if(_this$props2.isLoading)return _react.default.createElement(_FontAwesome.default,{id:"uitest-spinner",icon:"spinner",className:"fa-pulse fa-3x"});if(!responses||!responses.length)return _react.default.createElement("div",{id:"uitest-empty-responses"},_locale.default.emptyTextResponsesTable());var sortable=(0,_wrapped_sortable.default)(this.getSortingColumns,this.onSort,_tableConstants.sortableOptions),columns=this.getColumns(sortable),sortingColumns=this.getSortingColumns(),sortedRows=sort.sorter({columns,sortingColumns,sort:_orderBy.default})(responses);return _react.default.createElement(Table.Provider,{columns,id:"text-responses-table"},_react.default.createElement(Table.Header,null),_react.default.createElement(Table.Body,{rows:sortedRows,rowKey:function rowKey(_ref3){return _ref3.rowIndex}}))},TextResponsesTable}(_react.Component);_defineProperty(TextResponsesTable,"propTypes",{responses:_propTypes.default.arrayOf(_textReponsesDataApi.textResponsePropType),sectionId:_propTypes.default.number.isRequired,isLoading:_propTypes.default.bool,scriptName:_propTypes.default.string});exports.default=TextResponsesTable;module.exports=exports.default},"./src/templates/textResponses/textReponsesDataApi.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.textResponsePropType=exports.loadTextResponsesFromServer=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.loadTextResponsesFromServer=function loadTextResponsesFromServer(sectionId,scriptId){var requestUrl="/dashboardapi/section_text_responses/".concat(sectionId);return scriptId&&(requestUrl+="?script_id=".concat(scriptId)),fetch(requestUrl,{credentials:"same-origin"}).then((function(response){return response.json()})).then((function(responseData){return convertTextResponseServerData(responseData)}))};var convertTextResponseServerData=function convertTextResponseServerData(textResponses){var responses=[];return textResponses.forEach((function(response){var _response$student=response.student,id=_response$student.id,name=_response$student.name;delete response.student,responses.push(_objectSpread(_objectSpread({},response),{},{studentId:id,studentName:name}))})),responses};exports.textResponsePropType=_propTypes.default.shape({puzzle:_propTypes.default.number.isRequired,question:_propTypes.default.string,response:_propTypes.default.string.isRequired,lesson:_propTypes.default.string.isRequired,studentId:_propTypes.default.number.isRequired,studentName:_propTypes.default.string.isRequired,url:_propTypes.default.string.isRequired})},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",brand_teal_5:"#DFF2F4",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_400:"#A9ACAF",light_gray_500:"#94979B",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./node_modules/lodash/_baseEach.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseForOwn=__webpack_require__("./node_modules/lodash/_baseForOwn.js"),baseEach=__webpack_require__("./node_modules/lodash/_createBaseEach.js")(baseForOwn);module.exports=baseEach},"./node_modules/lodash/_baseMap.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseEach=__webpack_require__("./node_modules/lodash/_baseEach.js"),isArrayLike=__webpack_require__("./node_modules/lodash/isArrayLike.js");module.exports=function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];return baseEach(collection,(function(value,key,collection){result[++index]=iteratee(value,key,collection)})),result}},"./node_modules/lodash/_baseOrderBy.js":(module,__unused_webpack_exports,__webpack_require__)=>{var arrayMap=__webpack_require__("./node_modules/lodash/_arrayMap.js"),baseGet=__webpack_require__("./node_modules/lodash/_baseGet.js"),baseIteratee=__webpack_require__("./node_modules/lodash/_baseIteratee.js"),baseMap=__webpack_require__("./node_modules/lodash/_baseMap.js"),baseSortBy=__webpack_require__("./node_modules/lodash/_baseSortBy.js"),baseUnary=__webpack_require__("./node_modules/lodash/_baseUnary.js"),compareMultiple=__webpack_require__("./node_modules/lodash/_compareMultiple.js"),identity=__webpack_require__("./node_modules/lodash/identity.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js");module.exports=function baseOrderBy(collection,iteratees,orders){iteratees=iteratees.length?arrayMap(iteratees,(function(iteratee){return isArray(iteratee)?function(value){return baseGet(value,1===iteratee.length?iteratee[0]:iteratee)}:iteratee})):[identity];var index=-1;iteratees=arrayMap(iteratees,baseUnary(baseIteratee));var result=baseMap(collection,(function(value,key,collection){return{criteria:arrayMap(iteratees,(function(iteratee){return iteratee(value)})),index:++index,value}}));return baseSortBy(result,(function(object,other){return compareMultiple(object,other,orders)}))}},"./node_modules/lodash/_baseSortBy.js":module=>{module.exports=function baseSortBy(array,comparer){var length=array.length;for(array.sort(comparer);length--;)array[length]=array[length].value;return array}},"./node_modules/lodash/_compareAscending.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isSymbol=__webpack_require__("./node_modules/lodash/isSymbol.js");module.exports=function compareAscending(value,other){if(value!==other){var valIsDefined=void 0!==value,valIsNull=null===value,valIsReflexive=value==value,valIsSymbol=isSymbol(value),othIsDefined=void 0!==other,othIsNull=null===other,othIsReflexive=other==other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive)return 1;if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive)return-1}return 0}},"./node_modules/lodash/_compareMultiple.js":(module,__unused_webpack_exports,__webpack_require__)=>{var compareAscending=__webpack_require__("./node_modules/lodash/_compareAscending.js");module.exports=function compareMultiple(object,other,orders){for(var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;++index<length;){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result)return index>=ordersLength?result:result*("desc"==orders[index]?-1:1)}return object.index-other.index}},"./node_modules/lodash/_createBaseEach.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isArrayLike=__webpack_require__("./node_modules/lodash/isArrayLike.js");module.exports=function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(null==collection)return collection;if(!isArrayLike(collection))return eachFunc(collection,iteratee);for(var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);(fromRight?index--:++index<length)&&!1!==iteratee(iterable[index],index,iterable););return collection}}},"./node_modules/lodash/orderBy.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseOrderBy=__webpack_require__("./node_modules/lodash/_baseOrderBy.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js");module.exports=function orderBy(collection,iteratees,orders,guard){return null==collection?[]:(isArray(iteratees)||(iteratees=null==iteratees?[]:[iteratees]),isArray(orders=guard?void 0:orders)||(orders=null==orders?[]:[orders]),baseOrderBy(collection,iteratees,orders))}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/templates/textResponses/TextResponsesTable.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithoutResponses=exports.WithResponses=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_TextResponsesTable=_interopRequireDefault(__webpack_require__("./src/templates/textResponses/TextResponsesTable.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_TextResponsesTable.default};var Template=function Template(args){return _react.default.createElement(_TextResponsesTable.default,_extends({sectionId:1,isLoading:!1},args))};(exports.WithResponses=Template.bind({})).args={responses:[{puzzle:2,question:"Check Your Understanding",response:"Lorem ipsum dolor sit amet, postea pericula",lesson:"Lesson 1",studentId:1,studentName:"Student A",url:"http://fake.url"},{puzzle:3,question:"Free Response",response:"Lorem ipsum dolor sit amet, postea pericula",lesson:"Lesson 2",studentId:3,studentName:"Student C",url:"http://fake.url"},{puzzle:1,question:"Free Response",response:"Lorem ipsum dolor sit amet, postea pericula. Lorem ipsum dolor sit amet, postea pericula. Lorem ipsum dolor sit amet, postea pericula",lesson:"Lesson 1",studentId:2,studentName:"Student B",url:"http://fake.url"}]},(exports.WithoutResponses=Template.bind({})).args={responses:[]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLXRleHRSZXNwb25zZXMtVGV4dFJlc3BvbnNlc1RhYmxlLXN0b3J5LjY1ZDc1ZWNkLmlmcmFtZS5idW5kbGUuanMiLCJtYXBwaW5ncyI6ImtIQU1BQSxPQUFPQyxRQUFVLENBQ2Ysa0JBQW1CLDJCQUNuQixZQUFhLDJCQUNiLG1CQUFvQixNQUNwQiwwQkFBMkIsTUFDM0Isb0JBQXFCLE1BQ3JCLHNCQUF1QixNQUN2QixxQkFBc0IsTUFDdEIsd0JBQXlCLE1BQ3pCLG1CQUFvQixNQUNwQix5QkFBMEIsTUFDMUIsb0JBQXFCLE1BQ3JCLGlCQUFrQixDQUNsQixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsd0JBQXlCLENBQ3pCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYix3QkFBeUIsQ0FDekIsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLCtCQUFnQyxDQUNoQyxXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsa0JBQW1CLENBQ25CLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYix5QkFBMEIsQ0FDMUIsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLG9CQUFxQixDQUNyQixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsMkJBQTRCLENBQzVCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYixtQkFBb0IsQ0FDcEIsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLDBCQUEyQixDQUMzQixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsc0JBQXVCLENBQ3ZCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYiw2QkFBOEIsQ0FDOUIsV0FBYywyQkFDZCxXQUFjLE1BQ2QsVUFBYSxVQUViLGlCQUFrQixDQUNsQixXQUFjLDJCQUNkLFdBQWMsTUFDZCxVQUFhLFVBRWIsd0JBQXlCLENBQ3pCLFdBQWMsMkJBQ2QsV0FBYyxNQUNkLFVBQWEsVUFFYix1QkFBd0IsQ0FD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QUNSQyxTQUFVLGdCQUNWQyxTQUFVLDhDQUNWSCxPQUFRLFdBQ1JmLFVBQVcsRUFDWCtGLFlBQWEsWUFDYi9ELElBQUssbUJBRVAsQ0FDRWhCLE9BQVEsRUFDUkMsU0FBVSxnQkFDVkMsU0FDRSx3SUFDRkgsT0FBUSxXQUNSZixVQUFXLEVBQ1grRixZQUFhLFlBQ2IvRCxJQUFLLHNCQWFvQmhNLFFBQUFBLGlCQUFHb1UsU0FBU3hULEtBQUssQ0FBQyxJQUM5QjJLLEtBQU8sQ0FDdEJzQyxVQUFXLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvZm9udENvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvc3R5bGVDb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9Gb250QXdlc29tZS5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy90YWJsZXMvdGFibGVDb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy90YWJsZXMvd3JhcHBlZF9zb3J0YWJsZS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3RlYWNoZXJEYXNoYm9hcmQvdXJsSGVscGVycy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3RleHRSZXNwb25zZXMvVGV4dFJlc3BvbnNlc1RhYmxlLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3RleHRSZXNwb25zZXMvdGV4dFJlcG9uc2VzRGF0YUFwaS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdXRpbC9jb2xvci5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRWFjaC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWFwLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VPcmRlckJ5LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VTb3J0QnkuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29tcGFyZUFzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb21wYXJlTXVsdGlwbGUuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY3JlYXRlQmFzZUVhY2guanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9vcmRlckJ5LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy90ZXh0UmVzcG9uc2VzL1RleHRSZXNwb25zZXNUYWJsZS5zdG9yeS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cblxuLy8gYXBwcy9zcmMvZm9udENvbnN0YW50cy5qc1xuLy8gR0VORVJBVEVEIEZJTEU6IERPIE5PVCBNT0RJRlkgRElSRUNUTFlcbi8vIFRoaXMgZ2VuZXJhdGVkIGZpbGUgZXhwb3J0cyBhbGwgdmFyaWFibGVzIGRlZmluZWQgaW4gc2hhcmVkL2Nzcy9mb250LnNjc3Ncbi8vIGZvciB1c2UgaW4gSmF2YVNjcmlwdC4gVGhlIGdlbmVyYXRvciBzY3JpcHQgaXMgY29udmVydC1zY3NzLXZhcmlhYmxlcy5qc1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwibWV0cm9wb2xpcy1mb250XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwibWFpbi1mb250XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwidGhpbi1mb250LXdlaWdodFwiOiBcIjEwMFwiLFxuICBcImV4dHJhLWxpZ2h0LWZvbnQtd2VpZ2h0XCI6IFwiMjAwXCIsXG4gIFwibGlnaHQtZm9udC13ZWlnaHRcIjogXCIzMDBcIixcbiAgXCJyZWd1bGFyLWZvbnQtd2VpZ2h0XCI6IFwiNDAwXCIsXG4gIFwibWVkaXVtLWZvbnQtd2VpZ2h0XCI6IFwiNTAwXCIsXG4gIFwic2VtaS1ib2xkLWZvbnQtd2VpZ2h0XCI6IFwiNjAwXCIsXG4gIFwiYm9sZC1mb250LXdlaWdodFwiOiBcIjcwMFwiLFxuICBcImV4dHJhLWJvbGQtZm9udC13ZWlnaHRcIjogXCI4MDBcIixcbiAgXCJibGFjay1mb250LXdlaWdodFwiOiBcIjkwMFwiLFxuICBcIm1haW4tZm9udC10aGluXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjEwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC10aGluLWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCIxMDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtZXh0cmEtbGlnaHRcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMjAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWV4dHJhLWxpZ2h0LWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCIyMDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtbGlnaHRcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMzAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWxpZ2h0LWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCIzMDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtcmVndWxhclwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI0MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtcmVndWxhci1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNDAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LW1lZGl1bVwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI1MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtbWVkaXVtLWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI1MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtc2VtaS1ib2xkXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjYwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1zZW1pLWJvbGQtaXRhbGljXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjYwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIml0YWxpY1wiLFxuICB9LFxuICBcIm1haW4tZm9udC1ib2xkXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjcwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1ib2xkLWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI3MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtZXh0cmEtYm9sZFwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI4MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtZXh0cmEtYm9sZC1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiODAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWJsYWNrXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjkwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1ibGFjay1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiOTAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwiYmFybG93U2VtaUNvbmRlbnNlZC1zZW1pYm9sZFwiOiBcIidCYXJsb3cgU2VtaSBDb25kZW5zZWQgU2VtaWJvbGQnLCBzYW5zLXNlcmlmXCIsXG4gIFwiYmFybG93U2VtaUNvbmRlbnNlZC1tZWRpdW1cIjogXCInQmFybG93IFNlbWkgQ29uZGVuc2VkIE1lZGl1bScsIHNhbnMtc2VyaWZcIixcbiAgXCJjb2RlLWZvbnRcIjogXCInU291cmNlIENvZGUgUHJvJywgTW9uYWNvLCAnQml0c3RyZWFtIFZlcmEgU2FucyBNb25vJywgJ0x1Y2lkYSBDb25zb2xlJywgVGVybWluYWwsIG1vbm9zcGFjZVwiLFxuICBcImZvbnQtYXdlc29tZS1jb3JlLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3MvZm9udGF3ZXNvbWUubWluLmNzcydcIixcbiAgXCJmb250LWF3ZXNvbWUtYnJhbmRzLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3MvYnJhbmRzLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLXNvbGlkLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3Mvc29saWQubWluLmNzcydcIixcbiAgXCJmb250LWF3ZXNvbWUtcmVndWxhci11cmxcIjogXCInaHR0cHM6Ly9kc2NvLmNvZGUub3JnL2Fzc2V0cy9mb250LWF3ZXNvbWUtcHJvLzE2ODQxNzg4NzYvY3NzL3JlZ3VsYXIubWluLmNzcydcIixcbiAgXCJmb250LWF3ZXNvbWUtdjQtZm9udHMtdXJsXCI6IFwiJ2h0dHBzOi8vZHNjby5jb2RlLm9yZy9hc3NldHMvZm9udC1hd2Vzb21lLXByby8xNjg0MTc4ODc2L2Nzcy92NC1mb250LWZhY2UubWluLmNzcydcIixcbiAgXCJmb250LWF3ZXNvbWUtdjQtc2hpbXMtdXJsXCI6IFwiJ2h0dHBzOi8vZHNjby5jb2RlLm9yZy9hc3NldHMvZm9udC1hd2Vzb21lLXByby8xNjg0MTc4ODc2L2Nzcy92NC1zaGltcy5taW4uY3NzJ1wiLFxufTtcbiIsIi8qIGVzbGludC1kaXNhYmxlICovXG5cbi8vIGFwcHMvc3JjL3N0eWxlQ29uc3RhbnRzLmpzXG4vLyBHRU5FUkFURUQgRklMRTogRE8gTk9UIE1PRElGWSBESVJFQ1RMWVxuLy8gVGhpcyBnZW5lcmF0ZWQgZmlsZSBleHBvcnRzIGFsbCB2YXJpYWJsZXMgZGVmaW5lZCBpbiBzaGFyZWQvY3NzL3N0eWxlLWNvbnN0YW50cy5zY3NzXG4vLyBmb3IgdXNlIGluIEphdmFTY3JpcHQuIFRoZSBnZW5lcmF0b3Igc2NyaXB0IGlzIGNvbnZlcnQtc2Nzcy12YXJpYWJsZXMuanNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBcIndvcmtzcGFjZS1oZWFkZXJzLWhlaWdodFwiOiAzMCxcbiAgXCJyZXNpemUtYmFyLXdpZHRoXCI6IDEzLFxuICBcImRlbGV0ZS1vcGFjaXR5XCI6IFwiMC41XCIsXG4gIFwiY29udGVudC13aWR0aFwiOiA5NzAsXG59O1xuIiwiLyoqIEBmaWxlIGZvbnQtYXdlc29tZSBoZWxwZXIgY29tcG9uZW50LiAqL1xuXG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogR2l2ZW4gYW4gaWNvbiBuYW1lLCByZW5kZXIgdGhlIGljb24gdXNpbmcgYW4gPGk+IHRhZyBpbiB0eXBpY2FsIGZvbnQtYXdlc29tZVxuICogZmFzaGlvbi4gIFJlcXVpcmVzIGZvbnQtYXdlc29tZSB0byBiZSBhdmFpbGFibGUgb24gdGhlIHBhZ2UuXG4gKiBTZWUgaHR0cDovL2ZvbnRhd2Vzb21lLmlvL2ljb25zLyB0byBsb29rIHVwIHN1cHBvcnRlZCBpY29uIG5hbWVzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBGb250QXdlc29tZSh7aWNvbiwgY2xhc3NOYW1lLCB0aXRsZSwgLi4ucHJvcHN9KSB7XG4gIGNvbnN0IG5ld1Byb3BzID0gXy5hc3NpZ24oe30sIHByb3BzLCB7XG4gICAgY2xhc3NOYW1lOiBgZmEgZmEtJHtpY29ufSAke2NsYXNzTmFtZSA/IGNsYXNzTmFtZSA6ICcnfWAsXG4gIH0pO1xuICByZXR1cm4gPGkgey4uLm5ld1Byb3BzfSB0aXRsZT17dGl0bGV9IC8+O1xufVxuXG5Gb250QXdlc29tZS5wcm9wVHlwZXMgPSB7XG4gIGljb246IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgLy8gVGl0bGUgc2hvdWxkIGJlIHVzZWQgZm9yIHNlbWFudGljIGljb25zLiBJZiBub3QgZ2l2ZW4sIHRoZSBzY3JlZW5yZWFkZXIgd2lsbCBub3QgcmVhZCB0aGUgaWNvblxuICAvLyBTZWUgaHR0cHM6Ly9mb250YXdlc29tZS5jb20vZG9jcy93ZWIvZGlnLWRlZXBlci9hY2Nlc3NpYmlsaXR5I2ljb25zLXVzZWQtYXMtc2VtYW50aWMtZWxlbWVudHNcbn07XG4iLCJpbXBvcnQgZm9udENvbnN0YW50cyBmcm9tICdAY2RvL2FwcHMvZm9udENvbnN0YW50cyc7XG5cbmltcG9ydCBzdHlsZUNvbnN0YW50cyBmcm9tICcuLi8uLi9zdHlsZUNvbnN0YW50cyc7XG5pbXBvcnQgY29sb3IgZnJvbSAnLi4vLi4vdXRpbC9jb2xvcic7XG5cbi8vIENvbnN0YW50cyBmb3IgUmVhY3QgdGFibGVzXG5cbi8vIFN0eWxlcyBmb3IgYSByZWFjdHRhYnVsYXIgdGFibGVcbi8qKlxuICogQHR5cGUge3tcbiAqICAgdGFibGVUZXh0OiB7XG4gKiAgICAgdGV4dE92ZXJmbG93Pzogc3RyaW5nO1xuICogICAgIG92ZXJmbG93Pzogc3RyaW5nO1xuICogICAgIHdoaXRlU3BhY2U/OiBcIm5vcm1hbFwiIHwgXCJub3dyYXBcIiB8IFwicHJlXCIgfCBcInByZS1saW5lXCIgfCBcInByZS13cmFwXCI7XG4gKiAgIH07XG4gKiAgIHRhYmxlOiB7XG4gKiAgICAgYm9yZGVyV2lkdGg/OiBzdHJpbmc7XG4gKiAgICAgYm9yZGVyU3R5bGU/OiBzdHJpbmc7XG4gKiAgICAgYm9yZGVyQ29sb3I/OiBzdHJpbmc7XG4gKiAgICAgd2lkdGg/OiBzdHJpbmc7XG4gKiAgICAgYmFja2dyb3VuZENvbG9yPzogc3RyaW5nLFxuICogICB9O1xuICogICBjZWxsOiB7XG4gKiAgICAgbWF4V2lkdGg/OiBudW1iZXI7XG4gKiAgICAgYm9yZGVyPzogc3RyaW5nO1xuICogICAgIGJvcmRlckNvbG9yPzogc3RyaW5nO1xuICogICAgIHBhZGRpbmc/OiBudW1iZXI7XG4gKiAgICAgZm9udFNpemU/OiBudW1iZXI7XG4gKiAgIH07XG4gKiAgIGhlYWRlckNlbGw6IHtcbiAqICAgICBiYWNrZ3JvdW5kQ29sb3I/OiBzdHJpbmc7XG4gKiAgICAgZm9udFdlaWdodD86IHN0cmluZztcbiAqICAgICBib3JkZXJDb2xvcj86IHN0cmluZztcbiAqICAgICBib3JkZXJTdHlsZT86IHN0cmluZztcbiAqICAgICBib3JkZXJCb3R0b21XaWR0aD86IG51bWJlcjtcbiAqICAgICBib3JkZXJUb3BXaWR0aD86IG51bWJlcjtcbiAqICAgICBib3JkZXJMZWZ0V2lkdGg/OiBudW1iZXI7XG4gKiAgICAgYm9yZGVyUmlnaHRXaWR0aD86IG51bWJlcjtcbiAqICAgICBwYWRkaW5nVG9wPzogbnVtYmVyO1xuICogICAgIHBhZGRpbmdCb3R0b20/OiBudW1iZXI7XG4gKiAgICAgY29sb3I/OiBzdHJpbmc7XG4gKiAgICAgdGV4dEFsaWduPzogc3RyaW5nO1xuICogICB9O1xuICogfX1cbiAqL1xuZXhwb3J0IGNvbnN0IHRhYmxlTGF5b3V0U3R5bGVzID0ge1xuICB0YWJsZVRleHQ6IHtcbiAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICB9LFxuICB0YWJsZToge1xuICAgIGJvcmRlcldpZHRoOiAxLFxuICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgIGJvcmRlckNvbG9yOiBjb2xvci5ib3JkZXJfZ3JheSxcbiAgICB3aWR0aDogc3R5bGVDb25zdGFudHNbJ2NvbnRlbnQtd2lkdGgnXSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLnRhYmxlX2xpZ2h0X3JvdyxcbiAgfSxcbiAgY2VsbDoge1xuICAgIG1heFdpZHRoOiAyMDAsXG4gICAgYm9yZGVyOiAnMXB4IHNvbGlkJyxcbiAgICBib3JkZXJDb2xvcjogY29sb3IuYm9yZGVyX2xpZ2h0X2dyYXksXG4gICAgcGFkZGluZzogMTAsXG4gICAgZm9udFNpemU6IDE0LFxuICB9LFxuICBoZWFkZXJDZWxsOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci50YWJsZV9oZWFkZXIsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIGJvcmRlckNvbG9yOiBjb2xvci5ib3JkZXJfbGlnaHRfZ3JheSxcbiAgICBib3JkZXJTdHlsZTogJ3NvbGlkJyxcbiAgICBib3JkZXJCb3R0b21XaWR0aDogMSxcbiAgICBib3JkZXJUb3BXaWR0aDogMCxcbiAgICBib3JkZXJMZWZ0V2lkdGg6IDAsXG4gICAgYm9yZGVyUmlnaHRXaWR0aDogMSxcbiAgICBwYWRkaW5nVG9wOiAyMCxcbiAgICBwYWRkaW5nQm90dG9tOiAyMCxcbiAgICBjb2xvcjogY29sb3IuY2hhcmNvYWwsXG4gICAgdGV4dEFsaWduOiAnaW5oZXJpdCcsXG4gIH0sXG4gIGxpbms6IHtcbiAgICAuLi5mb250Q29uc3RhbnRzWydtYWluLWZvbnQtc2VtaS1ib2xkJ10sXG4gICAgZm9udFNpemU6IDE0LFxuICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gIH0sXG4gIHVuc29ydGFibGVIZWFkZXI6IHtcbiAgICBwYWRkaW5nTGVmdDogMjUsXG4gIH0sXG4gIHVuc29ydGFibGVIZWFkZXJSVEw6IHtcbiAgICBwYWRkaW5nUmlnaHQ6IDI1LFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IHBsVGFibGVMYXlvdXRTdHlsZXMgPSB7XG4gIGxpbms6IHtcbiAgICAuLi5mb250Q29uc3RhbnRzWydtYWluLWZvbnQtc2VtaS1ib2xkJ10sXG4gICAgZm9udFNpemU6IDE0LFxuICAgIGNvbG9yOiBjb2xvci5uZXV0cmFsX2RhcmssXG4gICAgdGV4dERlY29yYXRpb246ICd1bmRlcmxpbmUnLFxuICB9LFxuICBzZWN0aW9uQ29kZUxpbms6IHtcbiAgICAuLi5mb250Q29uc3RhbnRzWydtYWluLWZvbnQtc2VtaS1ib2xkJ10sXG4gICAgZm9udFNpemU6IDE0LFxuICAgIGNvbG9yOiBjb2xvci5icmFuZF9zZWNvbmRhcnlfZGVmYXVsdCxcbiAgfSxcbiAgY3VycmVudFVuaXQ6IHtcbiAgICBtYXJnaW5Ub3A6IDEwLFxuICAgIGZvbnRTaXplOiAxNCxcbiAgfSxcbiAgY29sQnV0dG9uOiB7XG4gICAgcGFkZGluZ1RvcDogMjAsXG4gICAgcGFkZGluZ0xlZnQ6IDIwLFxuICAgIHBhZGRpbmdCb3R0b206IDIwLFxuICAgIHdpZHRoOiA0MCxcbiAgfSxcbiAgcGFydGljaXBhbnRUeXBlQ2VsbDoge1xuICAgIGZvbnRTaXplOiAxNCxcbiAgfSxcbiAgbGVhdmVCdXR0b246IHtcbiAgICBmb250U2l6ZTogMTQsXG4gIH0sXG59O1xuXG4vLyBTZXR0aW5ncyBmb3IgV3JhcHBlZFNvcnRhYmxlXG5leHBvcnQgY29uc3Qgc29ydGFibGVPcHRpb25zID0ge1xuICAvLyBEaW0gaW5hY3RpdmUgc29ydGluZyBpY29ucyBpbiB0aGUgY29sdW1uIGhlYWRlcnNcbiAgZGVmYXVsdDoge2NvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjIgKSd9LFxufTtcblxuZXhwb3J0IGNvbnN0IE5BTUVfQ0VMTF9JTlBVVF9XSURUSCA9IDE2MDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBzb3J0IGZyb20gJ3NvcnRhYnVsYXInO1xuXG5pbXBvcnQgRm9udEF3ZXNvbWUgZnJvbSAnLi4vRm9udEF3ZXNvbWUnO1xuXG4vKipcbiAqIFNvcnRhYmxlIHRyYW5zZm9ybSB0aGF0IHdyYXBzIGEgUmVhY3RhYnVsYXIgdHJhbnNmb3JtIGdlbmVyYXRlZCBieSBzb3J0LnNvcnQgc28gdGhhdFxuICogaW5zdGVhZCBvZiBhcHBseWluZyBzb3J0IGNsYXNzZXMgdG8gdGhlIGhlYWRlciBjZWxsIGl0IGFkZHMgdGhlIGFwcHJvcHJpYXRlIEZvbnRBd2Vzb21lXG4gKiBjb21wb25lbnQgdG8gdGhlIGNlbGwgY29udGVudHMuXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6IG9iamVjdFtdfSBnZXRTb3J0aW5nQ29sdW1uc1xuICogQHBhcmFtIHtmdW5jdGlvbihudW1iZXIpOiBvYmplY3R9IG9uU29ydFxuICogQHBhcmFtIHtvYmplY3R9IHN0eWxlcyAtIG9wdGlvbmFsIHN0eWxlcyB0byBhcHBseSB0byB0aGUgc29ydCBpY29ucywgaW4gc3RhdGVzIHtkZWZhdWx0LCBzb3J0QXNjLCBzb3J0RGVzY31cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgdGhlIGNvbnRhaW5lciBkaXYge2NvbnRhaW5lcn1cbiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCk6IG9iamVjdH0gYSBuZXcgY2VsbCB0cmFuc2Zvcm0gZnVuY3Rpb25cbiAqIEBzZWUgaHR0cDovL3JlYWN0YWJ1bGFyLmpzLm9yZy8jL2NvbHVtbi1kZWZpbml0aW9uL3RyYW5zZm9ybXNcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0YWJ1bGFyL3JlYWN0YWJ1bGFyL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3JlYWN0YWJ1bGFyLXNvcnQvc3JjL3NvcnQuanNcbiAqL1xuZnVuY3Rpb24gd3JhcHBlZFNvcnRhYmxlKGdldFNvcnRpbmdDb2x1bW5zLCBvblNvcnQsIHN0eWxlcyA9IHt9KSB7XG4gIGNvbnN0IGJhc2ljU29ydGFibGUgPSBzb3J0LnNvcnQoe2dldFNvcnRpbmdDb2x1bW5zLCBvblNvcnR9KTtcblxuICByZXR1cm4gKGxhYmVsLCBjb2x1bW5JbmZvKSA9PiB7XG4gICAgY29uc3Qge2NsYXNzTmFtZTogbmV3Q2xhc3NOYW1lLCAuLi5uZXdQcm9wc30gPSBiYXNpY1NvcnRhYmxlKFxuICAgICAgbGFiZWwsXG4gICAgICBjb2x1bW5JbmZvXG4gICAgKTtcblxuICAgIC8vIERldGVjdCBuZXcgY2xhc3NlcyBhcHBsaWVkIGJ5IHNvcnQgdHJhbnNmb3JtOiBzb3J0LW5vbmUsIHNvcnQtYXNjLCBzb3J0LWRlc2NcbiAgICAvLyBJbnN0ZWFkIG9mIGFwcGx5aW5nIHRob3NlIGNsYXNzZXMsIGFkZCBkaWZmZXJlbnQgRm9udEF3ZXNvbWUgaWNvbnNcbiAgICBsZXQgc29ydEljb24gPSAoXG4gICAgICA8Rm9udEF3ZXNvbWUgaWNvbj1cInNvcnRcIiBjbGFzc05hbWU9XCJmYS1md1wiIHN0eWxlPXtzdHlsZXMuZGVmYXVsdH0gLz5cbiAgICApO1xuICAgIGlmICgvc29ydC1hc2MvLnRlc3QobmV3Q2xhc3NOYW1lKSkge1xuICAgICAgc29ydEljb24gPSAoXG4gICAgICAgIDxGb250QXdlc29tZSBpY29uPVwic29ydC1hc2NcIiBjbGFzc05hbWU9XCJmYS1md1wiIHN0eWxlPXtzdHlsZXMuc29ydEFzY30gLz5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICgvc29ydC1kZXNjLy50ZXN0KG5ld0NsYXNzTmFtZSkpIHtcbiAgICAgIHNvcnRJY29uID0gKFxuICAgICAgICA8Rm9udEF3ZXNvbWVcbiAgICAgICAgICBpY29uPVwic29ydC1kZXNjXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJmYS1md1wiXG4gICAgICAgICAgc3R5bGU9e3N0eWxlcy5zb3J0RGVzY31cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gRGlzYWJsZSB3cmFwcGluZyBvbiB0aGUgc29ydGluZyBpY29uIHRvIGVuc3VyZSB0aGF0IHRoZSBoZWFkZXIgd2lsbFxuICAgIC8vIG5ldmVyIHdyYXAgc3VjaCB0aGF0IHRoZSBzb3J0aW5nIGljb24gaXMgb24gYSByb3cgYWxsIG9uIGl0cyBvd24uXG4gICAgLy9cbiAgICAvLyBOb3RlIHRoYXQgd2UgY291bGQgYXBwbHkgdGhpcyBzdHlsZSB0byB0aGUgd2hvbGUgaGVhZGVyIGNlbGwsIGJ1dCB0aGF0XG4gICAgLy8gd291bGQgcHJldmVudCBhbnkgd3JhcHBpbmcgZnJvbSBoYXBwZW5pbmcgYXQgYWxsOyBiZWNhdXNlIHdlIHdhbnQgdG9cbiAgICAvLyBhbGxvdyBmb3IgdGhlIHBvc3NpYmlsaXR5IG9mIGxvbmcgaGVhZGVyIG5hbWVzIHRoYXQgX3Nob3VsZF8gd3JhcCwgdGhpc1xuICAgIC8vIHByb3ZpZGVzIGEgbmljZSBjb21wcm9taXNlLlxuICAgIGNvbnN0IHNvcnRJY29uU3BhblN0eWxlID0ge3doaXRlU3BhY2U6ICdub3dyYXAnfTtcblxuICAgIHJldHVybiB7XG4gICAgICAuLi5uZXdQcm9wcyxcbiAgICAgIHN0eWxlOiBPYmplY3QuYXNzaWduKHt9LCB7Y3Vyc29yOiAncG9pbnRlcid9KSxcbiAgICAgIGNoaWxkcmVuOiAoXG4gICAgICAgIDxzcGFuIHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgICAgICA8c3BhbiBrZXk9XCJpY29uXCIgc3R5bGU9e3NvcnRJY29uU3BhblN0eWxlfT5cbiAgICAgICAgICAgIHtzb3J0SWNvbn1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPHNwYW4ga2V5PVwibGFiZWxcIj57bGFiZWx9PC9zcGFuPlxuICAgICAgICA8L3NwYW4+XG4gICAgICApLFxuICAgIH07XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCB3cmFwcGVkU29ydGFibGU7XG4iLCJjb25zdCBkYXNoYm9hcmRQcmVmaXggPSAnL3RlYWNoZXJfZGFzaGJvYXJkL3NlY3Rpb25zLyc7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgVVJMIGluIHRlYWNoZXIgZGFzaGJvYXJkIGdpdmVuIGEgc2VjdGlvbiBpZCBhbmQgKG9wdGlvbmFsKSBwYXRoLlxuICovXG5leHBvcnQgY29uc3QgdGVhY2hlckRhc2hib2FyZFVybCA9IChzZWN0aW9uSWQsIHBhdGggPSAnJykgPT4ge1xuICAvLyBQcmVwZW5kIGEgZm9yd2FyZCBzbGFzaCB0byBwYXRoIGlmIG9uZSBpcyBub3Qgc3VwcGxpZWQuXG4gIGlmIChwYXRoICYmIHBhdGguY2hhckF0KDApICE9PSAnLycpIHtcbiAgICBwYXRoID0gJy8ke3BhdGh9JztcbiAgfVxuXG4gIHJldHVybiBkYXNoYm9hcmRQcmVmaXggKyBzZWN0aW9uSWQgKyBwYXRoO1xufTtcblxuZXhwb3J0IGNvbnN0IHNjcmlwdFVybEZvclN0dWRlbnQgPSAoc2VjdGlvbklkLCBzY3JpcHROYW1lLCBzdHVkZW50SWQpID0+IHtcbiAgaWYgKCFzY3JpcHROYW1lKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gYC9zLyR7c2NyaXB0TmFtZX0/c2VjdGlvbl9pZD0ke3NlY3Rpb25JZH0mdXNlcl9pZD0ke3N0dWRlbnRJZH0mdmlld0FzPUluc3RydWN0b3JgO1xufTtcbiIsImltcG9ydCBvcmRlckJ5IGZyb20gJ2xvZGFzaC9vcmRlckJ5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIFRhYmxlIGZyb20gJ3JlYWN0YWJ1bGFyLXRhYmxlJztcbmltcG9ydCAqIGFzIHNvcnQgZnJvbSAnc29ydGFidWxhcic7XG5cbmltcG9ydCBGb250QXdlc29tZSBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL0ZvbnRBd2Vzb21lJztcbmltcG9ydCB7c2NyaXB0VXJsRm9yU3R1ZGVudH0gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy90ZWFjaGVyRGFzaGJvYXJkL3VybEhlbHBlcnMnO1xuaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuXG5pbXBvcnQge3RhYmxlTGF5b3V0U3R5bGVzLCBzb3J0YWJsZU9wdGlvbnN9IGZyb20gJy4uL3RhYmxlcy90YWJsZUNvbnN0YW50cyc7XG5pbXBvcnQgd3JhcHBlZFNvcnRhYmxlIGZyb20gJy4uL3RhYmxlcy93cmFwcGVkX3NvcnRhYmxlJztcblxuaW1wb3J0IHt0ZXh0UmVzcG9uc2VQcm9wVHlwZX0gZnJvbSAnLi90ZXh0UmVwb25zZXNEYXRhQXBpJztcblxuY29uc3QgVEFCTEVfV0lEVEggPSB0YWJsZUxheW91dFN0eWxlcy50YWJsZS53aWR0aDtcbmNvbnN0IFRBQkxFX0NPTFVNTl9XSURUSFMgPSB7XG4gIG5hbWU6IFRBQkxFX1dJRFRIIC8gNSxcbiAgbGVzc29uOiBUQUJMRV9XSURUSCAvIDUsXG4gIHB1enpsZTogVEFCTEVfV0lEVEggLyA2LFxuICBxdWVzdGlvbjogVEFCTEVfV0lEVEggLyA1LFxuICByZXNwb25zZTogVEFCTEVfV0lEVEggLyA0LFxufTtcbmNvbnN0IFJFU1BPTlNFX0NIQVJBQ1RFUl9MSU1JVCA9IDEwMDtcblxuY2xhc3MgVGV4dFJlc3BvbnNlc1RhYmxlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICByZXNwb25zZXM6IFByb3BUeXBlcy5hcnJheU9mKHRleHRSZXNwb25zZVByb3BUeXBlKSxcbiAgICBzZWN0aW9uSWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgICBpc0xvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICAgIHNjcmlwdE5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH07XG5cbiAgc3RhdGUgPSB7fTtcblxuICBzdHVkZW50TmFtZUZvcm1hdHRlciA9IChuYW1lLCB7cm93RGF0YX0pID0+IHtcbiAgICBjb25zdCB7c2VjdGlvbklkLCBzY3JpcHROYW1lfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3Qgc3R1ZGVudFVybCA9IHNjcmlwdFVybEZvclN0dWRlbnQoXG4gICAgICBzZWN0aW9uSWQsXG4gICAgICBzY3JpcHROYW1lLFxuICAgICAgcm93RGF0YS5zdHVkZW50SWRcbiAgICApO1xuXG4gICAgaWYgKHN0dWRlbnRVcmwpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxhXG4gICAgICAgICAgY2xhc3NOYW1lPVwidWl0ZXN0LW5hbWUtY2VsbFwiXG4gICAgICAgICAgc3R5bGU9e3RhYmxlTGF5b3V0U3R5bGVzLmxpbmt9XG4gICAgICAgICAgaHJlZj17c3R1ZGVudFVybH1cbiAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICA+XG4gICAgICAgICAge25hbWV9XG4gICAgICAgIDwvYT5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiA8c3BhbiBjbGFzc05hbWU9XCJ1aXRlc3QtbmFtZS1jZWxsXCI+e25hbWV9PC9zcGFuPjtcbiAgICB9XG4gIH07XG5cbiAgcmVzcG9uc2VGb3JtYXR0ZXIgPSAoXywge3Jvd0RhdGF9KSA9PiB7XG4gICAgY29uc3Qge3Jlc3BvbnNlLCB1cmx9ID0gcm93RGF0YTtcbiAgICBpZiAocmVzcG9uc2UubGVuZ3RoIDwgUkVTUE9OU0VfQ0hBUkFDVEVSX0xJTUlUKSB7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxuXG4gICAgY29uc3QgY2xpcHBlZFJlc3BvbnNlID0gcmVzcG9uc2Uuc3Vic3RyaW5nKDAsIFJFU1BPTlNFX0NIQVJBQ1RFUl9MSU1JVCAtIDEpO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7Y2xpcHBlZFJlc3BvbnNlfVxuICAgICAgICA8YVxuICAgICAgICAgIHN0eWxlPXt0YWJsZUxheW91dFN0eWxlcy5saW5rfVxuICAgICAgICAgIGhyZWY9e3VybH1cbiAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICA+XG4gICAgICAgICAge2kxOG4uc2VlRnVsbFJlc3BvbnNlKCl9XG4gICAgICAgIDwvYT5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH07XG5cbiAgZ2V0U29ydGluZ0NvbHVtbnMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUuc29ydGluZ0NvbHVtbnMgfHwge307XG4gIH07XG5cbiAgZ2V0Q29sdW1ucyA9IHNvcnRhYmxlID0+IHtcbiAgICByZXR1cm4gW1xuICAgICAge1xuICAgICAgICBwcm9wZXJ0eTogJ3N0dWRlbnROYW1lJyxcbiAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgbGFiZWw6IGkxOG4ubmFtZSgpLFxuICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICBjbGFzc05hbWU6ICd1aXRlc3QtbmFtZS1oZWFkZXInLFxuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgLi4udGFibGVMYXlvdXRTdHlsZXMuaGVhZGVyQ2VsbCxcbiAgICAgICAgICAgICAgLi4ue3dpZHRoOiBUQUJMRV9DT0xVTU5fV0lEVEhTLm5hbWV9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHRyYW5zZm9ybXM6IFtzb3J0YWJsZV0sXG4gICAgICAgIH0sXG4gICAgICAgIGNlbGw6IHtcbiAgICAgICAgICBmb3JtYXR0ZXJzOiBbdGhpcy5zdHVkZW50TmFtZUZvcm1hdHRlcl0sXG4gICAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIC4uLnRhYmxlTGF5b3V0U3R5bGVzLmNlbGwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwcm9wZXJ0eTogJ2xlc3NvbicsXG4gICAgICAgIGhlYWRlcjoge1xuICAgICAgICAgIGxhYmVsOiBpMThuLmxlc3NvbigpLFxuICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAuLi50YWJsZUxheW91dFN0eWxlcy5oZWFkZXJDZWxsLFxuICAgICAgICAgICAgICAuLi57d2lkdGg6IFRBQkxFX0NPTFVNTl9XSURUSFMubGVzc29ufSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0cmFuc2Zvcm1zOiBbc29ydGFibGVdLFxuICAgICAgICB9LFxuICAgICAgICBjZWxsOiB7XG4gICAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIC4uLnRhYmxlTGF5b3V0U3R5bGVzLmNlbGwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwcm9wZXJ0eTogJ3B1enpsZScsXG4gICAgICAgIGhlYWRlcjoge1xuICAgICAgICAgIGxhYmVsOiBpMThuLnB1enpsZSgpLFxuICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAuLi50YWJsZUxheW91dFN0eWxlcy5oZWFkZXJDZWxsLFxuICAgICAgICAgICAgICAuLi57d2lkdGg6IFRBQkxFX0NPTFVNTl9XSURUSFMucHV6emxlfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0cmFuc2Zvcm1zOiBbc29ydGFibGVdLFxuICAgICAgICB9LFxuICAgICAgICBjZWxsOiB7XG4gICAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIC4uLnRhYmxlTGF5b3V0U3R5bGVzLmNlbGwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwcm9wZXJ0eTogJ3F1ZXN0aW9uJyxcbiAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgbGFiZWw6IGkxOG4ucXVlc3Rpb24oKSxcbiAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgLi4udGFibGVMYXlvdXRTdHlsZXMuaGVhZGVyQ2VsbCxcbiAgICAgICAgICAgICAgLi4ue3dpZHRoOiBUQUJMRV9DT0xVTU5fV0lEVEhTLnF1ZXN0aW9ufSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0cmFuc2Zvcm1zOiBbc29ydGFibGVdLFxuICAgICAgICB9LFxuICAgICAgICBjZWxsOiB7XG4gICAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIC4uLnRhYmxlTGF5b3V0U3R5bGVzLmNlbGwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwcm9wZXJ0eTogJ3Jlc3BvbnNlJyxcbiAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgbGFiZWw6IGkxOG4ucmVzcG9uc2UoKSxcbiAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgLi4udGFibGVMYXlvdXRTdHlsZXMuaGVhZGVyQ2VsbCxcbiAgICAgICAgICAgICAgLi4ue3dpZHRoOiBUQUJMRV9DT0xVTU5fV0lEVEhTLnJlc3BvbnNlfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgY2VsbDoge1xuICAgICAgICAgIGZvcm1hdHRlcnM6IFt0aGlzLnJlc3BvbnNlRm9ybWF0dGVyXSxcbiAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgLi4udGFibGVMYXlvdXRTdHlsZXMuY2VsbCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgXTtcbiAgfTtcblxuICAvLyBUaGUgdXNlciByZXF1ZXN0ZWQgYSBuZXcgc29ydGluZyBjb2x1bW4uIEFkanVzdCB0aGUgc3RhdGUgYWNjb3JkaW5nbHkuXG4gIG9uU29ydCA9IHNlbGVjdGVkQ29sdW1uID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHNvcnRpbmdDb2x1bW5zOiBzb3J0LmJ5Q29sdW1uKHtcbiAgICAgICAgc29ydGluZ0NvbHVtbnM6IHRoaXMuc3RhdGUuc29ydGluZ0NvbHVtbnMsXG4gICAgICAgIC8vIEN1c3RvbSBzb3J0aW5nT3JkZXIgcmVtb3ZlcyAnbm8tc29ydCcgZnJvbSB0aGUgY3ljbGVcbiAgICAgICAgc29ydGluZ09yZGVyOiB7XG4gICAgICAgICAgRklSU1Q6ICdhc2MnLFxuICAgICAgICAgIGFzYzogJ2Rlc2MnLFxuICAgICAgICAgIGRlc2M6ICdhc2MnLFxuICAgICAgICB9LFxuICAgICAgICBzZWxlY3RlZENvbHVtbixcbiAgICAgIH0pLFxuICAgIH0pO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7cmVzcG9uc2VzLCBpc0xvYWRpbmd9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxGb250QXdlc29tZVxuICAgICAgICAgIGlkPVwidWl0ZXN0LXNwaW5uZXJcIlxuICAgICAgICAgIGljb249XCJzcGlubmVyXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJmYS1wdWxzZSBmYS0zeFwiXG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghcmVzcG9uc2VzIHx8ICFyZXNwb25zZXMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGlkPVwidWl0ZXN0LWVtcHR5LXJlc3BvbnNlc1wiPntpMThuLmVtcHR5VGV4dFJlc3BvbnNlc1RhYmxlKCl9PC9kaXY+XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIERlZmluZSBhIHNvcnRpbmcgdHJhbnNmb3JtIHRoYXQgY2FuIGJlIGFwcGxpZWQgdG8gZWFjaCBjb2x1bW5cbiAgICBjb25zdCBzb3J0YWJsZSA9IHdyYXBwZWRTb3J0YWJsZShcbiAgICAgIHRoaXMuZ2V0U29ydGluZ0NvbHVtbnMsXG4gICAgICB0aGlzLm9uU29ydCxcbiAgICAgIHNvcnRhYmxlT3B0aW9uc1xuICAgICk7XG4gICAgY29uc3QgY29sdW1ucyA9IHRoaXMuZ2V0Q29sdW1ucyhzb3J0YWJsZSk7XG4gICAgY29uc3Qgc29ydGluZ0NvbHVtbnMgPSB0aGlzLmdldFNvcnRpbmdDb2x1bW5zKCk7XG5cbiAgICBjb25zdCBzb3J0ZWRSb3dzID0gc29ydC5zb3J0ZXIoe1xuICAgICAgY29sdW1ucyxcbiAgICAgIHNvcnRpbmdDb2x1bW5zLFxuICAgICAgc29ydDogb3JkZXJCeSxcbiAgICB9KShyZXNwb25zZXMpO1xuXG4gICAgLyoqXG4gICAgICogTm90ZTogdXNpbmcgcm93SW5kZXggYXMgcm93S2V5IGFzIGEgbGFzdCByZXNvcnRcbiAgICAgKiBTZWUgbW9yZSBpbmZvOiBodHRwczovL3JlYWN0anMub3JnL2RvY3MvbGlzdHMtYW5kLWtleXMuaHRtbCNrZXlzXG4gICAgICogSWYgdGhpcyBjYXVzZXMgcGVyZm9ybWFuY2UgaXNzdWVzIGluIHRoZSBmdXR1cmUsIHdlIGNhbiB1c2Ugc29tZXRoaW5nIGxpa2U6XG4gICAgICogYCR7cm93RGF0YS5zdHVkZW50SWR9LSR7cm93RGF0YS5wdXp6bGV9LSR7aGFzaGVkUmVzcG9uc2V9YFxuICAgICAqIHdoZXJlIGhhc2hlZFJlc3BvbnNlIGlzIGEgaGFzaCBvZiByb3dEYXRhLnJlc3BvbnNlXG4gICAgICovXG4gICAgcmV0dXJuIChcbiAgICAgIDxUYWJsZS5Qcm92aWRlciBjb2x1bW5zPXtjb2x1bW5zfSBpZD1cInRleHQtcmVzcG9uc2VzLXRhYmxlXCI+XG4gICAgICAgIDxUYWJsZS5IZWFkZXIgLz5cbiAgICAgICAgPFRhYmxlLkJvZHkgcm93cz17c29ydGVkUm93c30gcm93S2V5PXsoe3Jvd0luZGV4fSkgPT4gcm93SW5kZXh9IC8+XG4gICAgICA8L1RhYmxlLlByb3ZpZGVyPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGV4dFJlc3BvbnNlc1RhYmxlO1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuLy8gTWFrZSBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciBmb3IgdGV4dCByZXNwb25zZXNcbi8vIHNjcmlwdElkIGlzIG5vdCByZXF1aXJlZDsgZW5kcG9pbnQgd2lsbCB1c2UgdGhlIGRlZmF1bHQgc2NyaXB0IGlmIG5vIHNjcmlwdElkIGlzIHN1cHBsaWVkXG5leHBvcnQgY29uc3QgbG9hZFRleHRSZXNwb25zZXNGcm9tU2VydmVyID0gKHNlY3Rpb25JZCwgc2NyaXB0SWQpID0+IHtcbiAgbGV0IHJlcXVlc3RVcmwgPSBgL2Rhc2hib2FyZGFwaS9zZWN0aW9uX3RleHRfcmVzcG9uc2VzLyR7c2VjdGlvbklkfWA7XG5cbiAgaWYgKHNjcmlwdElkKSB7XG4gICAgcmVxdWVzdFVybCArPSBgP3NjcmlwdF9pZD0ke3NjcmlwdElkfWA7XG4gIH1cblxuICByZXR1cm4gZmV0Y2gocmVxdWVzdFVybCwge1xuICAgIGNyZWRlbnRpYWxzOiAnc2FtZS1vcmlnaW4nLFxuICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSlcbiAgICAudGhlbihyZXNwb25zZURhdGEgPT4ge1xuICAgICAgcmV0dXJuIGNvbnZlcnRUZXh0UmVzcG9uc2VTZXJ2ZXJEYXRhKHJlc3BvbnNlRGF0YSk7XG4gICAgfSk7XG59O1xuXG4vLyBGbGF0dGVuIHRleHQgcmVzcG9uc2VzIHJldHVybmVkIGZyb20gc2VydmVyIHRvIHJlbW92ZSBuZXN0ZWQgc3R1ZGVudCBvYmplY3RcbmNvbnN0IGNvbnZlcnRUZXh0UmVzcG9uc2VTZXJ2ZXJEYXRhID0gdGV4dFJlc3BvbnNlcyA9PiB7XG4gIGxldCByZXNwb25zZXMgPSBbXTtcbiAgdGV4dFJlc3BvbnNlcy5mb3JFYWNoKHJlc3BvbnNlID0+IHtcbiAgICBjb25zdCB7aWQsIG5hbWV9ID0gcmVzcG9uc2Uuc3R1ZGVudDtcbiAgICBkZWxldGUgcmVzcG9uc2Uuc3R1ZGVudDtcblxuICAgIHJlc3BvbnNlcy5wdXNoKHtcbiAgICAgIC4uLnJlc3BvbnNlLFxuICAgICAgc3R1ZGVudElkOiBpZCxcbiAgICAgIHN0dWRlbnROYW1lOiBuYW1lLFxuICAgIH0pO1xuICB9KTtcblxuICByZXR1cm4gcmVzcG9uc2VzO1xufTtcblxuLy8gU2hhcGUgZm9yIGFuIGluZGl2aWR1YWwgdGV4dCByZXNwb25zZVxuZXhwb3J0IGNvbnN0IHRleHRSZXNwb25zZVByb3BUeXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgcHV6emxlOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHF1ZXN0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICByZXNwb25zZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBsZXNzb246IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgc3R1ZGVudElkOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHN0dWRlbnROYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHVybDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxufSk7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG4vLyBhcHBzL3NyYy91dGlsL2NvbG9yLmpzXG4vLyBHRU5FUkFURUQgRklMRTogRE8gTk9UIE1PRElGWSBESVJFQ1RMWVxuLy8gVGhpcyBnZW5lcmF0ZWQgZmlsZSBleHBvcnRzIGFsbCB2YXJpYWJsZXMgZGVmaW5lZCBpbiBzaGFyZWQvY3NzL2NvbG9yLnNjc3Ncbi8vIGZvciB1c2UgaW4gSmF2YVNjcmlwdC4gVGhlIGdlbmVyYXRvciBzY3JpcHQgaXMgY29udmVydC1zY3NzLXZhcmlhYmxlcy5qc1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwiYmxhY2tcIjogXCIjMDAwXCIsXG4gIFwiYmFja2dyb3VuZF9ibGFja1wiOiBcIiMxMjE0MTZcIixcbiAgXCJkYXJrX2dyYXlcIjogXCIjMkQzMTM5XCIsXG4gIFwiZGFya2VzdF9ncmF5XCI6IFwiIzI5MkYzNlwiLFxuICBcImRhcmtfc2xhdGVfZ3JheVwiOiBcIiMyODJjMzRcIixcbiAgXCJkYXJrZXN0X3NsYXRlX2dyYXlcIjogXCIjMjUyOTJkXCIsXG4gIFwiZGFya19jaGFyY29hbFwiOiBcIiM0ZDU3NWZcIixcbiAgXCJjaGFyY29hbFwiOiBcIiM1YjY3NzBcIixcbiAgXCJsaWdodF9ncmF5XCI6IFwiIzk0OWNhMlwiLFxuICBcImxpZ2h0ZXJfZ3JheVwiOiBcIiNjNmNhY2RcIixcbiAgXCJsaWdodGVzdF9ncmF5XCI6IFwiI2U3ZThlYVwiLFxuICBcImJhY2tncm91bmRfZ3JheVwiOiBcIiNmMmYyZjJcIixcbiAgXCJkaW1ncmF5XCI6IFwiIzY5Njk2OVwiLFxuICBcIndoaXRlXCI6IFwiI2ZmZlwiLFxuICBcImRlZmF1bHRfYmx1ZVwiOiBcIiMzNjcwYjNcIixcbiAgXCJkYXJrX3RlYWxcIjogXCIjMDA5NGEzXCIsXG4gIFwidGVhbFwiOiBcIiMwMDkzYTRcIixcbiAgXCJhcHBsYWJfYnV0dG9uX3RlYWxcIjogXCIjMWFiYzljXCIsXG4gIFwibGlnaHRfdGVhbFwiOiBcIiM1OWNhZDNcIixcbiAgXCJsaWdodGlzaF90ZWFsXCI6IFwiIzgwZDZkZVwiLFxuICBcImxpZ2h0ZXJfdGVhbFwiOiBcIiNhNmUzZThcIixcbiAgXCJsaWdodGVzdF90ZWFsXCI6IFwiI2Q5ZjNmNVwiLFxuICBcImFpX3J1YnJpY19jeWFuXCI6IFwiIzNjZmZmOFwiLFxuICBcInB1cnBsZVwiOiBcIiM4YzUyYmFcIixcbiAgXCJsaWdodF9wdXJwbGVcIjogXCIjYTY5YmMxXCIsXG4gIFwibGlnaHRlcl9wdXJwbGVcIjogXCIjY2ZjOWRlXCIsXG4gIFwibGlnaHRlc3RfcHVycGxlXCI6IFwiI2ViZThmMVwiLFxuICBcImN5YW5cIjogXCIjMDA5NGNhXCIsXG4gIFwibGlnaHRfY3lhblwiOiBcIiM1OWI5ZGNcIixcbiAgXCJsaWdodGVyX2N5YW5cIjogXCIjYTZkYWVkXCIsXG4gIFwibGlnaHRlc3RfY3lhblwiOiBcIiNkOWVmZjdcIixcbiAgXCJhbG1vc3Rfd2hpdGVfY3lhblwiOiBcIiNmNWZjZmZcIixcbiAgXCJvcmFuZ2VcIjogXCIjZmZhNDAwXCIsXG4gIFwibGlnaHRfb3JhbmdlXCI6IFwiI2ZmYzQ1OVwiLFxuICBcImxpZ2h0ZXJfb3JhbmdlXCI6IFwiI2ZmZTBhNlwiLFxuICBcImxpZ2h0ZXN0X29yYW5nZVwiOiBcIiNmZmYyZDlcIixcbiAgXCJkYXJrX29yYW5nZVwiOiBcIiNmZjg2MDBcIixcbiAgXCJncmVlblwiOiBcIiNiOWJmMTVcIixcbiAgXCJsaWdodF9ncmVlblwiOiBcIiNkMWQ1NjdcIixcbiAgXCJsaWdodGVyX2dyZWVuXCI6IFwiI2U3ZTlhZFwiLFxuICBcImxpZ2h0ZXN0X2dyZWVuXCI6IFwiI2Y1ZjVkY1wiLFxuICBcImhpZ2hsaWdodF9ncmVlblwiOiBcIiM4YWZjOWJcIixcbiAgXCJ5ZWxsb3dcIjogXCIjZmZiODFkXCIsXG4gIFwibGlnaHRfeWVsbG93XCI6IFwiI2ZmZGI3NFwiLFxuICBcImxpZ2h0ZXJfeWVsbG93XCI6IFwiI2ZmZWJiNVwiLFxuICBcImxpZ2h0ZXN0X3llbGxvd1wiOiBcIiNmZmY3ZGZcIixcbiAgXCJnb2xkZW5yb2RcIjogXCIjZGFhNTIwXCIsXG4gIFwiaGVhZGVyX3RleHRcIjogXCIjZmZmXCIsXG4gIFwiYmtnbmRfY29sb3JcIjogXCIjMDA5M2E0XCIsXG4gIFwiaW5zZXRfY29sb3JcIjogXCIjYzZjYWNkXCIsXG4gIFwiZGFya19jb2xvclwiOiBcIiM4YzUyYmFcIixcbiAgXCJoZHJfY29sb3JcIjogXCIjOGM1MmJhXCIsXG4gIFwicmVkXCI6IFwiI2MwMFwiLFxuICBcImxpZ2h0ZXN0X3JlZFwiOiBcIiNmY2NcIixcbiAgXCJkYXJrX3JlZFwiOiBcIiNkNjI5MTFcIixcbiAgXCJyZWFsZ3JlZW5cIjogXCIjMDA4MDAwXCIsXG4gIFwicmVhbHllbGxvd1wiOiBcIiNmZjBcIixcbiAgXCJtdXN0YXJkeWVsbG93XCI6IFwiI2VmY2QxY1wiLFxuICBcInR3aXR0ZXJfYmx1ZVwiOiBcIiMwMGFjZWRcIixcbiAgXCJmYWNlYm9va19ibHVlXCI6IFwiIzNiNTk5OFwiLFxuICBcImxpbmtlZGluX2JsdWVcIjogXCIjMDA3N0I1XCIsXG4gIFwiZGFya19ibHVlXCI6IFwiIzAwNjQ3ZlwiLFxuICBcImJsb2NrbHlfZmx5b3V0X2dyYXlcIjogXCIjZGRkXCIsXG4gIFwiZGVmYXVsdF90ZXh0XCI6IFwiIzMzM1wiLFxuICBcImJvcmRlcl9ncmF5XCI6IFwiI2JiYlwiLFxuICBcImJvcmRlcl9saWdodF9ncmF5XCI6IFwiI2Q4ZDhkOFwiLFxuICBcInRhYmxlX2hlYWRlclwiOiBcIiNlY2VjZWNcIixcbiAgXCJ0YWJsZV9saWdodF9yb3dcIjogXCIjZmNmY2ZjXCIsXG4gIFwidGFibGVfZGFya19yb3dcIjogXCIjZjRmNGY0XCIsXG4gIFwibGV2ZWxfc3VibWl0dGVkXCI6IFwiIzhjNTJiYVwiLFxuICBcImxldmVsX3BlcmZlY3RcIjogXCJyZ2IoMTQsIDE5MCwgMTQpXCIsXG4gIFwibGV2ZWxfcGFzc2VkXCI6IFwicmdiKDE1OSwgMjEyLCAxNTkpXCIsXG4gIFwibGV2ZWxfYXR0ZW1wdGVkXCI6IFwiI2ZmMFwiLFxuICBcImxldmVsX25vdF90cmllZFwiOiBcIiNmZWZlZmVcIixcbiAgXCJsZXZlbF9jdXJyZW50XCI6IFwiI2ZmYTQwMFwiLFxuICBcImxldmVsX3Jldmlld19yZWplY3RlZFwiOiBcIiNjMDBcIixcbiAgXCJsZXZlbF9yZXZpZXdfYWNjZXB0ZWRcIjogXCJyZ2IoMTEsIDE0MiwgMTEpXCIsXG4gIFwiYXNzZXNzbWVudFwiOiBcIiMwMDk0Y2FcIixcbiAgXCJ3b3Jrc3BhY2VfcnVubmluZ19iYWNrZ3JvdW5kXCI6IFwiI2U1ZTVlNVwiLFxuICBcImRhcmtfcHVycGxlXCI6IFwiIzY4MkE3N1wiLFxuICBcImJyaWdodF9ncmVlblwiOiBcIiMwZWJlMGVcIixcbiAgXCJuZW9uX3BpbmtcIjogXCIjZTkxMThmXCIsXG4gIFwibGlua19jb2xvclwiOiBcIiMwNTk2Y2VcIixcbiAgXCJzaGFkb3dcIjogXCJyZ2JhKDAsIDAsIDAsIDAuMylcIixcbiAgXCJib290c3RyYXBfYnV0dG9uX2JsdWVcIjogXCIjMzM3YWI3XCIsXG4gIFwiYm9vdHN0cmFwX2J1dHRvbl9yZWRcIjogXCIjZDk1MzRmXCIsXG4gIFwiYm9vdHN0cmFwX2Vycm9yX2JhY2tncm91bmRcIjogXCIjZjJkZWRlXCIsXG4gIFwiYm9vdHN0cmFwX2Vycm9yX3RleHRcIjogXCIjYjk0YTQ4XCIsXG4gIFwiYm9vdHN0cmFwX3YzX2Vycm9yX3RleHRcIjogXCIjYTk0NDQyXCIsXG4gIFwiYm9vdHN0cmFwX2Vycm9yX2JvcmRlclwiOiBcIiNlYmNjZDFcIixcbiAgXCJib290c3RyYXBfd2FybmluZ19iYWNrZ3JvdW5kXCI6IFwiI2ZjZjhlM1wiLFxuICBcImJvb3RzdHJhcF93YXJuaW5nX3RleHRcIjogXCIjYzA5ODUzXCIsXG4gIFwiYm9vdHN0cmFwX3dhcm5pbmdfYm9yZGVyXCI6IFwiI2ZhZWJjY1wiLFxuICBcImJvb3RzdHJhcF9ib3JkZXJfY29sb3JcIjogXCIjY2NjY2NjXCIsXG4gIFwiYm9vdHN0cmFwX3N1Y2Nlc3NfYmFja2dyb3VuZFwiOiBcIiNkZmYwZDhcIixcbiAgXCJib290c3RyYXBfc3VjY2Vzc190ZXh0XCI6IFwiIzQ2ODg0N1wiLFxuICBcImJvb3RzdHJhcF9zdWNjZXNzX2JvcmRlclwiOiBcIiNkNmU5YzZcIixcbiAgXCJkcm9wbGV0X2xpZ2h0X2dyZWVuXCI6IFwiI2QzZTk2NVwiLFxuICBcImRyb3BsZXRfYmx1ZVwiOiBcIiM2NGI1ZjZcIixcbiAgXCJkcm9wbGV0X2JyaWdodF9ibHVlXCI6IFwiIzE5YzNlMVwiLFxuICBcImRyb3BsZXRfeWVsbG93XCI6IFwiI2ZmZjE3NlwiLFxuICBcImRyb3BsZXRfb3JhbmdlXCI6IFwiI2ZmYjc0ZFwiLFxuICBcImRyb3BsZXRfcmVkXCI6IFwiI2Y3ODE4M1wiLFxuICBcImRyb3BsZXRfY3lhblwiOiBcIiM0ZGQwZTFcIixcbiAgXCJkcm9wbGV0X3BpbmtcIjogXCIjZjU3YWM2XCIsXG4gIFwiZHJvcGxldF9wdXJwbGVcIjogXCIjYmI3N2M3XCIsXG4gIFwiZHJvcGxldF9ncmVlblwiOiBcIiM2OGQ5OTVcIixcbiAgXCJkcm9wbGV0X3doaXRlXCI6IFwiI2ZmZlwiLFxuICBcIm9jZWFuc19kZWVwX2JsdWVcIjogXCJyZ2IoMiwgMCwgMjgpXCIsXG4gIFwiZGFya19ibGFja1wiOiBcIiMxMjEyMTJcIixcbiAgXCJicmFuZF9wcmltYXJ5X2xpZ2h0XCI6IFwiI0FCREZFNVwiLFxuICBcImJyYW5kX3ByaW1hcnlfZGVmYXVsdFwiOiBcIiMwMDlFQjBcIixcbiAgXCJicmFuZF9wcmltYXJ5X2RhcmtcIjogXCIjMDA4MjkxXCIsXG4gIFwiYnJhbmRfc2Vjb25kYXJ5X2xpZ2h0XCI6IFwiI0UwRDFFQ1wiLFxuICBcImJyYW5kX3NlY29uZGFyeV9kZWZhdWx0XCI6IFwiIzhDNTJCQVwiLFxuICBcImJyYW5kX3NlY29uZGFyeV9kYXJrXCI6IFwiIzZGNDg4RVwiLFxuICBcImJyYW5kX2FjY2VudF9kZWZhdWx0XCI6IFwiI0VENjA2MFwiLFxuICBcImJyYW5kX3RlYWxfNVwiOiBcIiNERkYyRjRcIixcbiAgXCJwcm9kdWN0X2FmZmlybWF0aXZlX2RlZmF1bHRcIjogXCIjM0VBMzNFXCIsXG4gIFwicHJvZHVjdF9uZWdhdGl2ZV9saWdodFwiOiBcIiNGREVCRTlcIixcbiAgXCJwcm9kdWN0X25lZ2F0aXZlX2RlZmF1bHRcIjogXCIjRTUzMTFBXCIsXG4gIFwicHJvZHVjdF9uZWdhdGl2ZV9kYXJrXCI6IFwiI0FBMjUxM1wiLFxuICBcInByb2R1Y3RfY2F1dGlvbl9kZWZhdWx0XCI6IFwiI0Y5Q0IyOFwiLFxuICBcInByb2R1Y3RfaW5mb3JtYXRpb25fZGVmYXVsdFwiOiBcIiMwMDdBQ0NcIixcbiAgXCJuZXV0cmFsX3doaXRlXCI6IFwiI0ZGRkZGRlwiLFxuICBcIm5ldXRyYWxfbGlnaHRcIjogXCIjRjdGOEZBXCIsXG4gIFwibmV1dHJhbF9kYXJrMTBcIjogXCIjRUFFQkVCXCIsXG4gIFwibmV1dHJhbF9kYXJrMjBcIjogXCIjRDRENUQ3XCIsXG4gIFwibmV1dHJhbF9kYXJrMzBcIjogXCIjQkZDMUMzXCIsXG4gIFwibmV1dHJhbF9kYXJrNDBcIjogXCIjQTlBQ0FGXCIsXG4gIFwibmV1dHJhbF9kYXJrNTBcIjogXCIjOTQ5NzlCXCIsXG4gIFwibmV1dHJhbF9kYXJrNjBcIjogXCIjN0Y4Mjg2XCIsXG4gIFwibmV1dHJhbF9kYXJrNzBcIjogXCIjNkE2RTczXCIsXG4gIFwibmV1dHJhbF9kYXJrODBcIjogXCIjNTQ1OTVFXCIsXG4gIFwibmV1dHJhbF9kYXJrOTBcIjogXCIjM0Y0NDRCXCIsXG4gIFwibmV1dHJhbF9kYXJrXCI6IFwiIzI5MkYzNlwiLFxuICBcImdvb2dsZV9icmFuZF9jb2xvclwiOiBcIiMwRjlENThcIixcbiAgXCJtaWNyb3NvZnRfYnJhbmRfY29sb3JcIjogXCIjRkZCOTAwXCIsXG4gIFwiZmFjZWJvb2tfYnJhbmRfY29sb3JcIjogXCIjM0I1OTk4XCIsXG4gIFwibGlnaHRfcHJpbWFyeV8xMDBcIjogXCIjQUJERkU1XCIsXG4gIFwibGlnaHRfcHJpbWFyeV81MDBcIjogXCIjMDA5M0E0XCIsXG4gIFwibGlnaHRfcHJpbWFyeV83MDBcIjogXCIjMDA4MjkxXCIsXG4gIFwibGlnaHRfc2Vjb25kYXJ5XzEwMFwiOiBcIiNFMkQ0RUVcIixcbiAgXCJsaWdodF9zZWNvbmRhcnlfNTAwXCI6IFwiIzhDNTJCQVwiLFxuICBcImxpZ2h0X3NlY29uZGFyeV83MDBcIjogXCIjNkY0ODhFXCIsXG4gIFwibGlnaHRfZ3JheV81MFwiOiBcIiNGN0Y4RkFcIixcbiAgXCJsaWdodF9ncmF5XzEwMFwiOiBcIiNFQUVCRUJcIixcbiAgXCJsaWdodF9ncmF5XzIwMFwiOiBcIiNENEQ1RDdcIixcbiAgXCJsaWdodF9ncmF5XzMwMFwiOiBcIiNCRkMxQzNcIixcbiAgXCJsaWdodF9ncmF5XzQwMFwiOiBcIiNBOUFDQUZcIixcbiAgXCJsaWdodF9ncmF5XzUwMFwiOiBcIiM5NDk3OUJcIixcbiAgXCJsaWdodF9ncmF5XzcwMFwiOiBcIiM2QTZFNzNcIixcbiAgXCJsaWdodF9ncmF5XzgwMFwiOiBcIiM1NDU5NUVcIixcbiAgXCJsaWdodF9ncmF5XzkwMFwiOiBcIiMzRjQ0NEJcIixcbiAgXCJsaWdodF9hZmZpcm1hdGl2ZV8xMDBcIjogXCIjRTJGMUUyXCIsXG4gIFwibGlnaHRfYWZmaXJtYXRpdmVfNTAwXCI6IFwiIzNFQTMzRVwiLFxuICBcImxpZ2h0X25lZ2F0aXZlXzUwMFwiOiBcIiNFNTMxMUFcIixcbiAgXCJsaWdodF9jYXV0aW9uXzUwMFwiOiBcIiNGOUNCMjhcIixcbiAgXCJsaWdodF9pbmZvXzEwMFwiOiBcIiNEQ0VGRkJcIixcbiAgXCJsaWdodF9pbmZvXzUwMFwiOiBcIiMxODkyRTNcIixcbiAgXCJsaWdodF93aGl0ZVwiOiBcIiNGRkZGRkZcIixcbiAgXCJsaWdodF9ibGFja1wiOiBcIiMyOTJGMzZcIixcbn07XG4iLCJ2YXIgYmFzZUZvck93biA9IHJlcXVpcmUoJy4vX2Jhc2VGb3JPd24nKSxcbiAgICBjcmVhdGVCYXNlRWFjaCA9IHJlcXVpcmUoJy4vX2NyZWF0ZUJhc2VFYWNoJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yRWFjaGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuXG4gKi9cbnZhciBiYXNlRWFjaCA9IGNyZWF0ZUJhc2VFYWNoKGJhc2VGb3JPd24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VFYWNoO1xuIiwidmFyIGJhc2VFYWNoID0gcmVxdWlyZSgnLi9fYmFzZUVhY2gnKSxcbiAgICBpc0FycmF5TGlrZSA9IHJlcXVpcmUoJy4vaXNBcnJheUxpa2UnKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5tYXBgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYmFzZU1hcChjb2xsZWN0aW9uLCBpdGVyYXRlZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IGlzQXJyYXlMaWtlKGNvbGxlY3Rpb24pID8gQXJyYXkoY29sbGVjdGlvbi5sZW5ndGgpIDogW107XG5cbiAgYmFzZUVhY2goY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGtleSwgY29sbGVjdGlvbikge1xuICAgIHJlc3VsdFsrK2luZGV4XSA9IGl0ZXJhdGVlKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24pO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlTWFwO1xuIiwidmFyIGFycmF5TWFwID0gcmVxdWlyZSgnLi9fYXJyYXlNYXAnKSxcbiAgICBiYXNlR2V0ID0gcmVxdWlyZSgnLi9fYmFzZUdldCcpLFxuICAgIGJhc2VJdGVyYXRlZSA9IHJlcXVpcmUoJy4vX2Jhc2VJdGVyYXRlZScpLFxuICAgIGJhc2VNYXAgPSByZXF1aXJlKCcuL19iYXNlTWFwJyksXG4gICAgYmFzZVNvcnRCeSA9IHJlcXVpcmUoJy4vX2Jhc2VTb3J0QnknKSxcbiAgICBiYXNlVW5hcnkgPSByZXF1aXJlKCcuL19iYXNlVW5hcnknKSxcbiAgICBjb21wYXJlTXVsdGlwbGUgPSByZXF1aXJlKCcuL19jb21wYXJlTXVsdGlwbGUnKSxcbiAgICBpZGVudGl0eSA9IHJlcXVpcmUoJy4vaWRlbnRpdHknKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5Jyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ub3JkZXJCeWAgd2l0aG91dCBwYXJhbSBndWFyZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb25bXXxPYmplY3RbXXxzdHJpbmdbXX0gaXRlcmF0ZWVzIFRoZSBpdGVyYXRlZXMgdG8gc29ydCBieS5cbiAqIEBwYXJhbSB7c3RyaW5nW119IG9yZGVycyBUaGUgc29ydCBvcmRlcnMgb2YgYGl0ZXJhdGVlc2AuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBzb3J0ZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGJhc2VPcmRlckJ5KGNvbGxlY3Rpb24sIGl0ZXJhdGVlcywgb3JkZXJzKSB7XG4gIGlmIChpdGVyYXRlZXMubGVuZ3RoKSB7XG4gICAgaXRlcmF0ZWVzID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBmdW5jdGlvbihpdGVyYXRlZSkge1xuICAgICAgaWYgKGlzQXJyYXkoaXRlcmF0ZWUpKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBiYXNlR2V0KHZhbHVlLCBpdGVyYXRlZS5sZW5ndGggPT09IDEgPyBpdGVyYXRlZVswXSA6IGl0ZXJhdGVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGl0ZXJhdGVlO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGl0ZXJhdGVlcyA9IFtpZGVudGl0eV07XG4gIH1cblxuICB2YXIgaW5kZXggPSAtMTtcbiAgaXRlcmF0ZWVzID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBiYXNlVW5hcnkoYmFzZUl0ZXJhdGVlKSk7XG5cbiAgdmFyIHJlc3VsdCA9IGJhc2VNYXAoY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGtleSwgY29sbGVjdGlvbikge1xuICAgIHZhciBjcml0ZXJpYSA9IGFycmF5TWFwKGl0ZXJhdGVlcywgZnVuY3Rpb24oaXRlcmF0ZWUpIHtcbiAgICAgIHJldHVybiBpdGVyYXRlZSh2YWx1ZSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHsgJ2NyaXRlcmlhJzogY3JpdGVyaWEsICdpbmRleCc6ICsraW5kZXgsICd2YWx1ZSc6IHZhbHVlIH07XG4gIH0pO1xuXG4gIHJldHVybiBiYXNlU29ydEJ5KHJlc3VsdCwgZnVuY3Rpb24ob2JqZWN0LCBvdGhlcikge1xuICAgIHJldHVybiBjb21wYXJlTXVsdGlwbGUob2JqZWN0LCBvdGhlciwgb3JkZXJzKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZU9yZGVyQnk7XG4iLCIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnNvcnRCeWAgd2hpY2ggdXNlcyBgY29tcGFyZXJgIHRvIGRlZmluZSB0aGVcbiAqIHNvcnQgb3JkZXIgb2YgYGFycmF5YCBhbmQgcmVwbGFjZXMgY3JpdGVyaWEgb2JqZWN0cyB3aXRoIHRoZWlyIGNvcnJlc3BvbmRpbmdcbiAqIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHNvcnQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wYXJlciBUaGUgZnVuY3Rpb24gdG8gZGVmaW5lIHNvcnQgb3JkZXIuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYmFzZVNvcnRCeShhcnJheSwgY29tcGFyZXIpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblxuICBhcnJheS5zb3J0KGNvbXBhcmVyKTtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgYXJyYXlbbGVuZ3RoXSA9IGFycmF5W2xlbmd0aF0udmFsdWU7XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VTb3J0Qnk7XG4iLCJ2YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKlxuICogQ29tcGFyZXMgdmFsdWVzIHRvIHNvcnQgdGhlbSBpbiBhc2NlbmRpbmcgb3JkZXIuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgc29ydCBvcmRlciBpbmRpY2F0b3IgZm9yIGB2YWx1ZWAuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVBc2NlbmRpbmcodmFsdWUsIG90aGVyKSB7XG4gIGlmICh2YWx1ZSAhPT0gb3RoZXIpIHtcbiAgICB2YXIgdmFsSXNEZWZpbmVkID0gdmFsdWUgIT09IHVuZGVmaW5lZCxcbiAgICAgICAgdmFsSXNOdWxsID0gdmFsdWUgPT09IG51bGwsXG4gICAgICAgIHZhbElzUmVmbGV4aXZlID0gdmFsdWUgPT09IHZhbHVlLFxuICAgICAgICB2YWxJc1N5bWJvbCA9IGlzU3ltYm9sKHZhbHVlKTtcblxuICAgIHZhciBvdGhJc0RlZmluZWQgPSBvdGhlciAhPT0gdW5kZWZpbmVkLFxuICAgICAgICBvdGhJc051bGwgPSBvdGhlciA9PT0gbnVsbCxcbiAgICAgICAgb3RoSXNSZWZsZXhpdmUgPSBvdGhlciA9PT0gb3RoZXIsXG4gICAgICAgIG90aElzU3ltYm9sID0gaXNTeW1ib2wob3RoZXIpO1xuXG4gICAgaWYgKCghb3RoSXNOdWxsICYmICFvdGhJc1N5bWJvbCAmJiAhdmFsSXNTeW1ib2wgJiYgdmFsdWUgPiBvdGhlcikgfHxcbiAgICAgICAgKHZhbElzU3ltYm9sICYmIG90aElzRGVmaW5lZCAmJiBvdGhJc1JlZmxleGl2ZSAmJiAhb3RoSXNOdWxsICYmICFvdGhJc1N5bWJvbCkgfHxcbiAgICAgICAgKHZhbElzTnVsbCAmJiBvdGhJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICghdmFsSXNEZWZpbmVkICYmIG90aElzUmVmbGV4aXZlKSB8fFxuICAgICAgICAhdmFsSXNSZWZsZXhpdmUpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICBpZiAoKCF2YWxJc051bGwgJiYgIXZhbElzU3ltYm9sICYmICFvdGhJc1N5bWJvbCAmJiB2YWx1ZSA8IG90aGVyKSB8fFxuICAgICAgICAob3RoSXNTeW1ib2wgJiYgdmFsSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlICYmICF2YWxJc051bGwgJiYgIXZhbElzU3ltYm9sKSB8fFxuICAgICAgICAob3RoSXNOdWxsICYmIHZhbElzRGVmaW5lZCAmJiB2YWxJc1JlZmxleGl2ZSkgfHxcbiAgICAgICAgKCFvdGhJc0RlZmluZWQgJiYgdmFsSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICFvdGhJc1JlZmxleGl2ZSkge1xuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgfVxuICByZXR1cm4gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb21wYXJlQXNjZW5kaW5nO1xuIiwidmFyIGNvbXBhcmVBc2NlbmRpbmcgPSByZXF1aXJlKCcuL19jb21wYXJlQXNjZW5kaW5nJyk7XG5cbi8qKlxuICogVXNlZCBieSBgXy5vcmRlckJ5YCB0byBjb21wYXJlIG11bHRpcGxlIHByb3BlcnRpZXMgb2YgYSB2YWx1ZSB0byBhbm90aGVyXG4gKiBhbmQgc3RhYmxlIHNvcnQgdGhlbS5cbiAqXG4gKiBJZiBgb3JkZXJzYCBpcyB1bnNwZWNpZmllZCwgYWxsIHZhbHVlcyBhcmUgc29ydGVkIGluIGFzY2VuZGluZyBvcmRlci4gT3RoZXJ3aXNlLFxuICogc3BlY2lmeSBhbiBvcmRlciBvZiBcImRlc2NcIiBmb3IgZGVzY2VuZGluZyBvciBcImFzY1wiIGZvciBhc2NlbmRpbmcgc29ydCBvcmRlclxuICogb2YgY29ycmVzcG9uZGluZyB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbltdfHN0cmluZ1tdfSBvcmRlcnMgVGhlIG9yZGVyIHRvIHNvcnQgYnkgZm9yIGVhY2ggcHJvcGVydHkuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBzb3J0IG9yZGVyIGluZGljYXRvciBmb3IgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVNdWx0aXBsZShvYmplY3QsIG90aGVyLCBvcmRlcnMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBvYmpDcml0ZXJpYSA9IG9iamVjdC5jcml0ZXJpYSxcbiAgICAgIG90aENyaXRlcmlhID0gb3RoZXIuY3JpdGVyaWEsXG4gICAgICBsZW5ndGggPSBvYmpDcml0ZXJpYS5sZW5ndGgsXG4gICAgICBvcmRlcnNMZW5ndGggPSBvcmRlcnMubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIHJlc3VsdCA9IGNvbXBhcmVBc2NlbmRpbmcob2JqQ3JpdGVyaWFbaW5kZXhdLCBvdGhDcml0ZXJpYVtpbmRleF0pO1xuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIGlmIChpbmRleCA+PSBvcmRlcnNMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHZhciBvcmRlciA9IG9yZGVyc1tpbmRleF07XG4gICAgICByZXR1cm4gcmVzdWx0ICogKG9yZGVyID09ICdkZXNjJyA/IC0xIDogMSk7XG4gICAgfVxuICB9XG4gIC8vIEZpeGVzIGFuIGBBcnJheSNzb3J0YCBidWcgaW4gdGhlIEpTIGVuZ2luZSBlbWJlZGRlZCBpbiBBZG9iZSBhcHBsaWNhdGlvbnNcbiAgLy8gdGhhdCBjYXVzZXMgaXQsIHVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcywgdG8gcHJvdmlkZSB0aGUgc2FtZSB2YWx1ZSBmb3JcbiAgLy8gYG9iamVjdGAgYW5kIGBvdGhlcmAuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamFzaGtlbmFzL3VuZGVyc2NvcmUvcHVsbC8xMjQ3XG4gIC8vIGZvciBtb3JlIGRldGFpbHMuXG4gIC8vXG4gIC8vIFRoaXMgYWxzbyBlbnN1cmVzIGEgc3RhYmxlIHNvcnQgaW4gVjggYW5kIG90aGVyIGVuZ2luZXMuXG4gIC8vIFNlZSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD05MCBmb3IgbW9yZSBkZXRhaWxzLlxuICByZXR1cm4gb2JqZWN0LmluZGV4IC0gb3RoZXIuaW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29tcGFyZU11bHRpcGxlO1xuIiwidmFyIGlzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBgYmFzZUVhY2hgIG9yIGBiYXNlRWFjaFJpZ2h0YCBmdW5jdGlvbi5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZWFjaEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGl0ZXJhdGUgb3ZlciBhIGNvbGxlY3Rpb24uXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtmcm9tUmlnaHRdIFNwZWNpZnkgaXRlcmF0aW5nIGZyb20gcmlnaHQgdG8gbGVmdC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJhc2UgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJhc2VFYWNoKGVhY2hGdW5jLCBmcm9tUmlnaHQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gICAgaWYgKGNvbGxlY3Rpb24gPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGNvbGxlY3Rpb247XG4gICAgfVxuICAgIGlmICghaXNBcnJheUxpa2UoY29sbGVjdGlvbikpIHtcbiAgICAgIHJldHVybiBlYWNoRnVuYyhjb2xsZWN0aW9uLCBpdGVyYXRlZSk7XG4gICAgfVxuICAgIHZhciBsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aCxcbiAgICAgICAgaW5kZXggPSBmcm9tUmlnaHQgPyBsZW5ndGggOiAtMSxcbiAgICAgICAgaXRlcmFibGUgPSBPYmplY3QoY29sbGVjdGlvbik7XG5cbiAgICB3aGlsZSAoKGZyb21SaWdodCA/IGluZGV4LS0gOiArK2luZGV4IDwgbGVuZ3RoKSkge1xuICAgICAgaWYgKGl0ZXJhdGVlKGl0ZXJhYmxlW2luZGV4XSwgaW5kZXgsIGl0ZXJhYmxlKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUJhc2VFYWNoO1xuIiwidmFyIGJhc2VPcmRlckJ5ID0gcmVxdWlyZSgnLi9fYmFzZU9yZGVyQnknKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5Jyk7XG5cbi8qKlxuICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5zb3J0QnlgIGV4Y2VwdCB0aGF0IGl0IGFsbG93cyBzcGVjaWZ5aW5nIHRoZSBzb3J0XG4gKiBvcmRlcnMgb2YgdGhlIGl0ZXJhdGVlcyB0byBzb3J0IGJ5LiBJZiBgb3JkZXJzYCBpcyB1bnNwZWNpZmllZCwgYWxsIHZhbHVlc1xuICogYXJlIHNvcnRlZCBpbiBhc2NlbmRpbmcgb3JkZXIuIE90aGVyd2lzZSwgc3BlY2lmeSBhbiBvcmRlciBvZiBcImRlc2NcIiBmb3JcbiAqIGRlc2NlbmRpbmcgb3IgXCJhc2NcIiBmb3IgYXNjZW5kaW5nIHNvcnQgb3JkZXIgb2YgY29ycmVzcG9uZGluZyB2YWx1ZXMuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7QXJyYXlbXXxGdW5jdGlvbltdfE9iamVjdFtdfHN0cmluZ1tdfSBbaXRlcmF0ZWVzPVtfLmlkZW50aXR5XV1cbiAqICBUaGUgaXRlcmF0ZWVzIHRvIHNvcnQgYnkuXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBbb3JkZXJzXSBUaGUgc29ydCBvcmRlcnMgb2YgYGl0ZXJhdGVlc2AuXG4gKiBAcGFyYW0tIHtPYmplY3R9IFtndWFyZF0gRW5hYmxlcyB1c2UgYXMgYW4gaXRlcmF0ZWUgZm9yIG1ldGhvZHMgbGlrZSBgXy5yZWR1Y2VgLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgc29ydGVkIGFycmF5LlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgdXNlcnMgPSBbXG4gKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQ4IH0sXG4gKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM0IH0sXG4gKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH0sXG4gKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM2IH1cbiAqIF07XG4gKlxuICogLy8gU29ydCBieSBgdXNlcmAgaW4gYXNjZW5kaW5nIG9yZGVyIGFuZCBieSBgYWdlYCBpbiBkZXNjZW5kaW5nIG9yZGVyLlxuICogXy5vcmRlckJ5KHVzZXJzLCBbJ3VzZXInLCAnYWdlJ10sIFsnYXNjJywgJ2Rlc2MnXSk7XG4gKiAvLyA9PiBvYmplY3RzIGZvciBbWydiYXJuZXknLCAzNl0sIFsnYmFybmV5JywgMzRdLCBbJ2ZyZWQnLCA0OF0sIFsnZnJlZCcsIDQwXV1cbiAqL1xuZnVuY3Rpb24gb3JkZXJCeShjb2xsZWN0aW9uLCBpdGVyYXRlZXMsIG9yZGVycywgZ3VhcmQpIHtcbiAgaWYgKGNvbGxlY3Rpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBpZiAoIWlzQXJyYXkoaXRlcmF0ZWVzKSkge1xuICAgIGl0ZXJhdGVlcyA9IGl0ZXJhdGVlcyA9PSBudWxsID8gW10gOiBbaXRlcmF0ZWVzXTtcbiAgfVxuICBvcmRlcnMgPSBndWFyZCA/IHVuZGVmaW5lZCA6IG9yZGVycztcbiAgaWYgKCFpc0FycmF5KG9yZGVycykpIHtcbiAgICBvcmRlcnMgPSBvcmRlcnMgPT0gbnVsbCA/IFtdIDogW29yZGVyc107XG4gIH1cbiAgcmV0dXJuIGJhc2VPcmRlckJ5KGNvbGxlY3Rpb24sIGl0ZXJhdGVlcywgb3JkZXJzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvcmRlckJ5O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFRleHRSZXNwb25zZXNUYWJsZSBmcm9tICcuL1RleHRSZXNwb25zZXNUYWJsZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBUZXh0UmVzcG9uc2VzVGFibGUsXG59O1xuXG5jb25zdCBzZWN0aW9uSWQgPSAxO1xuY29uc3QgcmVzcG9uc2VzID0gW1xuICB7XG4gICAgcHV6emxlOiAyLFxuICAgIHF1ZXN0aW9uOiAnQ2hlY2sgWW91ciBVbmRlcnN0YW5kaW5nJyxcbiAgICByZXNwb25zZTogJ0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBwb3N0ZWEgcGVyaWN1bGEnLFxuICAgIGxlc3NvbjogJ0xlc3NvbiAxJyxcbiAgICBzdHVkZW50SWQ6IDEsXG4gICAgc3R1ZGVudE5hbWU6ICdTdHVkZW50IEEnLFxuICAgIHVybDogJ2h0dHA6Ly9mYWtlLnVybCcsXG4gIH0sXG4gIHtcbiAgICBwdXp6bGU6IDMsXG4gICAgcXVlc3Rpb246ICdGcmVlIFJlc3BvbnNlJyxcbiAgICByZXNwb25zZTogJ0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBwb3N0ZWEgcGVyaWN1bGEnLFxuICAgIGxlc3NvbjogJ0xlc3NvbiAyJyxcbiAgICBzdHVkZW50SWQ6IDMsXG4gICAgc3R1ZGVudE5hbWU6ICdTdHVkZW50IEMnLFxuICAgIHVybDogJ2h0dHA6Ly9mYWtlLnVybCcsXG4gIH0sXG4gIHtcbiAgICBwdXp6bGU6IDEsXG4gICAgcXVlc3Rpb246ICdGcmVlIFJlc3BvbnNlJyxcbiAgICByZXNwb25zZTpcbiAgICAgICdMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgcG9zdGVhIHBlcmljdWxhLiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgcG9zdGVhIHBlcmljdWxhLiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgcG9zdGVhIHBlcmljdWxhJyxcbiAgICBsZXNzb246ICdMZXNzb24gMScsXG4gICAgc3R1ZGVudElkOiAyLFxuICAgIHN0dWRlbnROYW1lOiAnU3R1ZGVudCBCJyxcbiAgICB1cmw6ICdodHRwOi8vZmFrZS51cmwnLFxuICB9LFxuXTtcblxuY29uc3QgVGVtcGxhdGUgPSBhcmdzID0+IChcbiAgPFRleHRSZXNwb25zZXNUYWJsZSBzZWN0aW9uSWQ9e3NlY3Rpb25JZH0gaXNMb2FkaW5nPXtmYWxzZX0gey4uLmFyZ3N9IC8+XG4pO1xuXG5leHBvcnQgY29uc3QgV2l0aFJlc3BvbnNlcyA9IFRlbXBsYXRlLmJpbmQoe30pO1xuV2l0aFJlc3BvbnNlcy5hcmdzID0ge1xuICByZXNwb25zZXM6IHJlc3BvbnNlcyxcbn07XG5cbmV4cG9ydCBjb25zdCBXaXRob3V0UmVzcG9uc2VzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5XaXRob3V0UmVzcG9uc2VzLmFyZ3MgPSB7XG4gIHJlc3BvbnNlczogW10sXG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJfbG9kYXNoIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX3JlYWN0IiwiX2V4Y2x1ZGVkIiwib2JqIiwiX19lc01vZHVsZSIsIl9leHRlbmRzIiwiT2JqZWN0IiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImV4Y2x1ZGVkIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJzb3VyY2VLZXlzIiwia2V5cyIsImluZGV4T2YiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJzb3VyY2VTeW1ib2xLZXlzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJGb250QXdlc29tZSIsIl9yZWYiLCJpY29uIiwiY2xhc3NOYW1lIiwidGl0bGUiLCJwcm9wcyIsIm5ld1Byb3BzIiwiXyIsImNvbmNhdCIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiX2ZvbnRDb25zdGFudHMiLCJfc3R5bGVDb25zdGFudHMiLCJfY29sb3IiLCJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJfb2JqZWN0U3ByZWFkIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiX3RvUHJpbWl0aXZlIiwidG9QcmltaXRpdmUiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInRhYmxlVGV4dCIsInRleHRPdmVyZmxvdyIsIm92ZXJmbG93Iiwid2hpdGVTcGFjZSIsInRhYmxlIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJTdHlsZSIsImJvcmRlckNvbG9yIiwiY29sb3IiLCJib3JkZXJfZ3JheSIsIndpZHRoIiwic3R5bGVDb25zdGFudHMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0YWJsZV9saWdodF9yb3ciLCJjZWxsIiwibWF4V2lkdGgiLCJib3JkZXIiLCJib3JkZXJfbGlnaHRfZ3JheSIsInBhZGRpbmciLCJmb250U2l6ZSIsImhlYWRlckNlbGwiLCJ0YWJsZV9oZWFkZXIiLCJmb250V2VpZ2h0IiwiYm9yZGVyQm90dG9tV2lkdGgiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlckxlZnRXaWR0aCIsImJvcmRlclJpZ2h0V2lkdGgiLCJwYWRkaW5nVG9wIiwicGFkZGluZ0JvdHRvbSIsImNoYXJjb2FsIiwidGV4dEFsaWduIiwibGluayIsImZvbnRDb25zdGFudHMiLCJ0ZXh0RGVjb3JhdGlvbiIsInVuc29ydGFibGVIZWFkZXIiLCJwYWRkaW5nTGVmdCIsInVuc29ydGFibGVIZWFkZXJSVEwiLCJwYWRkaW5nUmlnaHQiLCJuZXV0cmFsX2RhcmsiLCJzZWN0aW9uQ29kZUxpbmsiLCJicmFuZF9zZWNvbmRhcnlfZGVmYXVsdCIsImN1cnJlbnRVbml0IiwibWFyZ2luVG9wIiwiY29sQnV0dG9uIiwicGFydGljaXBhbnRUeXBlQ2VsbCIsImxlYXZlQnV0dG9uIiwiZGVmYXVsdCIsInNvcnQiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwidSIsInNldCIsIl9Gb250QXdlc29tZSIsIldlYWtNYXAiLCJ3cmFwcGVkU29ydGFibGUiLCJnZXRTb3J0aW5nQ29sdW1ucyIsIm9uU29ydCIsInN0eWxlcyIsInVuZGVmaW5lZCIsImJhc2ljU29ydGFibGUiLCJsYWJlbCIsImNvbHVtbkluZm8iLCJfYmFzaWNTb3J0YWJsZSIsIm5ld0NsYXNzTmFtZSIsInNvcnRJY29uIiwic3R5bGUiLCJ0ZXN0Iiwic29ydEFzYyIsInNvcnREZXNjIiwiY3Vyc29yIiwiY2hpbGRyZW4iLCJjb250YWluZXIiLCJ0ZWFjaGVyRGFzaGJvYXJkVXJsIiwic2VjdGlvbklkIiwicGF0aCIsImNoYXJBdCIsInNjcmlwdFVybEZvclN0dWRlbnQiLCJzY3JpcHROYW1lIiwic3R1ZGVudElkIiwiX29yZGVyQnkiLCJUYWJsZSIsIl91cmxIZWxwZXJzIiwiX2xvY2FsZSIsIl90YWJsZUNvbnN0YW50cyIsIl93cmFwcGVkX3NvcnRhYmxlIiwiX3RleHRSZXBvbnNlc0RhdGFBcGkiLCJfc2V0UHJvdG90eXBlT2YiLCJwIiwic2V0UHJvdG90eXBlT2YiLCJUQUJMRV9XSURUSCIsInRhYmxlTGF5b3V0U3R5bGVzIiwiVEFCTEVfQ09MVU1OX1dJRFRIUyIsIm5hbWUiLCJsZXNzb24iLCJwdXp6bGUiLCJxdWVzdGlvbiIsInJlc3BvbnNlIiwiVGV4dFJlc3BvbnNlc1RhYmxlIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiX2xlbiIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJyb3dEYXRhIiwiX3RoaXMkcHJvcHMiLCJzdHVkZW50VXJsIiwiaHJlZiIsInJlbCIsIl9yZWYyIiwidXJsIiwiY2xpcHBlZFJlc3BvbnNlIiwic3Vic3RyaW5nIiwiUkVTUE9OU0VfQ0hBUkFDVEVSX0xJTUlUIiwiaTE4biIsInNlZUZ1bGxSZXNwb25zZSIsInN0YXRlIiwic29ydGluZ0NvbHVtbnMiLCJzb3J0YWJsZSIsInByb3BlcnR5IiwiaGVhZGVyIiwidHJhbnNmb3JtcyIsImZvcm1hdHRlcnMiLCJzdHVkZW50TmFtZUZvcm1hdHRlciIsInJlc3BvbnNlRm9ybWF0dGVyIiwic2VsZWN0ZWRDb2x1bW4iLCJzZXRTdGF0ZSIsImJ5Q29sdW1uIiwic29ydGluZ09yZGVyIiwiRklSU1QiLCJhc2MiLCJkZXNjIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJyZW5kZXIiLCJfdGhpcyRwcm9wczIiLCJ0aGlzIiwicmVzcG9uc2VzIiwiaXNMb2FkaW5nIiwiaWQiLCJlbXB0eVRleHRSZXNwb25zZXNUYWJsZSIsInNvcnRhYmxlT3B0aW9ucyIsImNvbHVtbnMiLCJnZXRDb2x1bW5zIiwic29ydGVkUm93cyIsInNvcnRlciIsIm9yZGVyQnkiLCJQcm92aWRlciIsIkhlYWRlciIsIkJvZHkiLCJyb3dzIiwicm93S2V5IiwiX3JlZjMiLCJyb3dJbmRleCIsIkNvbXBvbmVudCIsImFycmF5T2YiLCJ0ZXh0UmVzcG9uc2VQcm9wVHlwZSIsIm51bWJlciIsImJvb2wiLCJsb2FkVGV4dFJlc3BvbnNlc0Zyb21TZXJ2ZXIiLCJzY3JpcHRJZCIsInJlcXVlc3RVcmwiLCJmZXRjaCIsImNyZWRlbnRpYWxzIiwidGhlbiIsImpzb24iLCJyZXNwb25zZURhdGEiLCJjb252ZXJ0VGV4dFJlc3BvbnNlU2VydmVyRGF0YSIsInRleHRSZXNwb25zZXMiLCJfcmVzcG9uc2Ukc3R1ZGVudCIsInN0dWRlbnQiLCJzdHVkZW50TmFtZSIsInNoYXBlIiwiYmFzZUZvck93biIsImJhc2VFYWNoIiwiY3JlYXRlQmFzZUVhY2giLCJpc0FycmF5TGlrZSIsImJhc2VNYXAiLCJjb2xsZWN0aW9uIiwiaXRlcmF0ZWUiLCJpbmRleCIsInJlc3VsdCIsImFycmF5TWFwIiwiYmFzZUdldCIsImJhc2VJdGVyYXRlZSIsImJhc2VTb3J0QnkiLCJiYXNlVW5hcnkiLCJjb21wYXJlTXVsdGlwbGUiLCJpZGVudGl0eSIsImlzQXJyYXkiLCJiYXNlT3JkZXJCeSIsIml0ZXJhdGVlcyIsIm9yZGVycyIsIm9iamVjdCIsIm90aGVyIiwiYXJyYXkiLCJjb21wYXJlciIsImlzU3ltYm9sIiwiY29tcGFyZUFzY2VuZGluZyIsInZhbElzRGVmaW5lZCIsInZhbElzTnVsbCIsInZhbElzUmVmbGV4aXZlIiwidmFsSXNTeW1ib2wiLCJvdGhJc0RlZmluZWQiLCJvdGhJc051bGwiLCJvdGhJc1JlZmxleGl2ZSIsIm90aElzU3ltYm9sIiwib2JqQ3JpdGVyaWEiLCJjcml0ZXJpYSIsIm90aENyaXRlcmlhIiwib3JkZXJzTGVuZ3RoIiwiZWFjaEZ1bmMiLCJmcm9tUmlnaHQiLCJpdGVyYWJsZSIsImd1YXJkIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsImxvY2F0aW9uIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZXJyIiwiRXJyb3IiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJmdW5jIiwic3ltYm9sIiwiYW55IiwiZWxlbWVudCIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJfVGV4dFJlc3BvbnNlc1RhYmxlIiwiY29tcG9uZW50IiwiVGVtcGxhdGUiXSwic291cmNlUm9vdCI6IiJ9