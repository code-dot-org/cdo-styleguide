/*! For license information please see templates-instructions-ScrollButtons-story.19783096.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[4131],{"./src/dom.js":(__unused_webpack_module,exports)=>{exports.addReadyListener=function(callback){"complete"===document.readyState?setTimeout(callback,1):window.addEventListener("load",callback,!1)},exports.getTouchEventName=function(eventName){var key,isIE11Touch=window.navigator.pointerEnabled,isIE10Touch=window.navigator.msPointerEnabled;if(isIE11Touch?key="ie11":isIE10Touch?key="ie10":!(isIE11Touch||isIE10Touch)&&(key="standard"),key&&TOUCH_MAP[eventName])return TOUCH_MAP[eventName][key]};var addEvent=function addEvent(element,eventName,handler){var suppressTouchDefault=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],boundEvents={},bindEvent=function bindEvent(type,eventName,handler){element.addEventListener(eventName,handler,!1),boundEvents[type]={name:eventName,handler}},unbindEvent=function unbindEvent(type){var eventInfo=boundEvents[type];eventInfo&&(element.removeEventListener(eventInfo.name,eventInfo.handler),delete boundEvents[type])};bindEvent("click",eventName,handler);var touchEvent=exports.getTouchEventName(eventName);return touchEvent&&bindEvent("touch",touchEvent,(function(e){suppressTouchDefault&&e.preventDefault();["pointerdown","MSPointerDown","pointermove","MSPointerMove","pointerup","MSPointerUp"].includes(touchEvent)&&unbindEvent("click"),null==handler||handler.call(this,e)})),function(){unbindEvent("click"),unbindEvent("touch")}};exports.addMouseDownTouchEvent=function(element,handler){return addEvent(element,"mousedown",handler)},exports.addMouseUpTouchEvent=function(element,handler){return addEvent(element,"mouseup",handler,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])},exports.addMouseMoveTouchEvent=function(element,handler){return addEvent(element,"mousemove",handler)},exports.addClickTouchEvent=function(element,handler){return addEvent(element,"click",handler)};var TOUCH_MAP={click:{standard:"touchstart",ie10:"MSPointerDown",ie11:"pointerdown"},mousedown:{standard:"touchstart",ie10:"MSPointerDown",ie11:"pointerdown"},mouseup:{standard:"touchend",ie10:"MSPointerUp",ie11:"pointerup"},mousemove:{standard:"touchmove",ie10:"MSPointerMove",ie11:"pointermove"}};exports.TOUCH_MAP=TOUCH_MAP,exports.isMobile=function(){return/Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile/.test(window.navigator.userAgent)},exports.isWindowsTouch=function(){return/MSIE.*Touch/.test(window.navigator.userAgent)},exports.isAndroid=function(){return/Android/.test(window.navigator.userAgent)},exports.isIOS=function(){return/iP(hone|od|ad)/.test(window.navigator.userAgent)},exports.isIPad=function(){return/iPad/i.test(window.navigator.userAgent)}},"./src/templates/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/instructions/ScrollButtons.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_dom=__webpack_require__("./src/dom.js"),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_utils=__webpack_require__("./src/templates/instructions/utils.js"),_scrollButtonsModule=_interopRequireDefault(__webpack_require__("./src/templates/instructions/scroll-buttons.module.scss"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var DIRECTIONS_UP=0,DIRECTIONS_DOWN=1,ScrollButtons=function(_React$Component){function ScrollButtons(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_assertThisInitialized(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"continuousScrollStartUp",(function(){_this.continuousScrollStart(DIRECTIONS_UP)})),_defineProperty(_assertThisInitialized(_this),"continuousScrollStartDown",(function(){_this.continuousScrollStart(DIRECTIONS_DOWN)})),_defineProperty(_assertThisInitialized(_this),"singleScrollUp",(function(){_this.singleScroll(DIRECTIONS_UP)})),_defineProperty(_assertThisInitialized(_this),"singleScrollDown",(function(){_this.singleScroll(DIRECTIONS_DOWN)})),_defineProperty(_assertThisInitialized(_this),"scrollStop",(function(){_this.unbindMouseUp(),clearTimeout(_this.scrollTimeout),clearInterval(_this.scrollInterval),_this.unbindMouseUp=null,_this.scrollTimeout=null,_this.scrollInterval=null})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ScrollButtons,_React$Component);var _proto=ScrollButtons.prototype;return _proto.getMargin=function getMargin(){return this.props.isMinecraft?0:5},_proto.getMinHeight=function getMinHeight(){return(0,_utils.getOuterHeight)(this.scrollUp,!0)+(0,_utils.getOuterHeight)(this.scrollDown,!0)+2*this.getMargin()},_proto.singleScroll=function singleScroll(dir){var contentContainer=this.props.getScrollTarget(),initialScroll=100;dir===DIRECTIONS_UP&&(initialScroll*=-1),(0,_utils.scrollBy)(contentContainer,initialScroll)},_proto.continuousScrollStart=function continuousScrollStart(dir){var contentContainer=this.props.getScrollTarget();this.scrollTimeout=setTimeout(function(){this.scrollInterval=setInterval(function(){var dist=2;dir===DIRECTIONS_UP&&(dist*=-1),(0,_utils.scrollBy)(contentContainer,dist,!1)}.bind(this),10)}.bind(this),500),this.unbindMouseUp=(0,_dom.addMouseUpTouchEvent)(document,this.scrollStop)},_proto.render=function render(){var _this2=this,showItems=this.props.isMinecraft?this.props.height>50:this.props.height>20,centerItems=this.props.isMinecraft?this.props.height>100:this.props.height>60,upButton=this.props.isMinecraft?_react.default.createElement("button",{type:"button",className:(0,_classnames.default)(_scrollButtonsModule.default.up,this.props.visible&&_scrollButtonsModule.default.visible,centerItems&&_scrollButtonsModule.default.upCenter,_scrollButtonsModule.default.minecraftButton,"arrow"),ref:function ref(c){_this2.scrollUp=c},key:"scrollUp",onClick:this.singleScrollUp,onMouseDown:this.continuousScrollStartUp},_react.default.createElement("img",{src:"/blockly/media/1x1.gif",className:"scroll-up-btn",alt:""})):_react.default.createElement("button",{type:"button",ref:function ref(c){_this2.scrollUp=c},key:"scrollUp",onClick:this.singleScrollUp,onMouseDown:this.continuousScrollStartUp,className:(0,_classnames.default)(_scrollButtonsModule.default.up,this.props.visible&&_scrollButtonsModule.default.visible,centerItems&&_scrollButtonsModule.default.upCenter,_scrollButtonsModule.default.arrowGlyph,_scrollButtonsModule.default.removeButtonStyles)},_react.default.createElement(_FontAwesome.default,{icon:"caret-up",style:{lineHeight:"22px",pointerEvents:"none"}})),downButton=this.props.isMinecraft?_react.default.createElement("button",{type:"button",className:(0,_classnames.default)(_scrollButtonsModule.default.down,this.props.visible&&_scrollButtonsModule.default.visible,centerItems&&_scrollButtonsModule.default.downCenter,_scrollButtonsModule.default.minecraftButton,"arrow"),ref:function ref(c){_this2.scrollDown=c},key:"scrollDown",onClick:this.singleScrollDown,onMouseDown:this.continuousScrollStartDown},_react.default.createElement("img",{src:"/blockly/media/1x1.gif",className:"scroll-down-btn",alt:""})):_react.default.createElement("button",{type:"button",ref:function ref(c){_this2.scrollDown=c},className:(0,_classnames.default)(_scrollButtonsModule.default.down,this.props.visible&&_scrollButtonsModule.default.visible,centerItems&&_scrollButtonsModule.default.downCenter,_scrollButtonsModule.default.arrowGlyph,_scrollButtonsModule.default.removeButtonStyles,"uitest-scroll-button-down"),key:"scrollDown",onClick:this.singleScrollDown,onMouseDown:this.continuousScrollStartDown},_react.default.createElement(_FontAwesome.default,{icon:"caret-down",style:{lineHeight:"22px",pointerEvents:"none"}}));return showItems&&_react.default.createElement("div",{className:_scrollButtonsModule.default.container,style:_objectSpread({height:this.props.height},this.props.style)},upButton,downButton)},ScrollButtons}(_react.default.Component);_defineProperty(ScrollButtons,"propTypes",{style:_propTypes.default.object,visible:_propTypes.default.bool.isRequired,height:_propTypes.default.number.isRequired,getScrollTarget:_propTypes.default.func.isRequired,isMinecraft:_propTypes.default.bool.isRequired});var _default=ScrollButtons;exports.default=_default,module.exports=exports.default},"./src/templates/instructions/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.convertXmlToBlockly=function convertXmlToBlockly(xmlContainer,isRtl){Array.from(xmlContainer.getElementsByClassName("readonly-block-space-container")).forEach((function(container){return container.remove()}));var xmls=xmlContainer.getElementsByTagName("xml");Array.prototype.forEach.call(xmls,(function(xml){if(!xml.getElementsByTagName("svg").length){!function removeCommentNodes(root){var commentWalker=document.createTreeWalker(root,NodeFilter.SHOW_COMMENT,{acceptNode:function acceptNode(node){return NodeFilter.FILTER_ACCEPT}},!1),last=commentWalker.nextNode();if(last){for(;commentWalker.nextNode();)last.remove(),last=commentWalker.currentNode;last.remove()}}(xml);var inline="P"===xml.parentNode.tagName,blockSpaceContainer=document.createElement(inline?"span":"div");blockSpaceContainer.classList.add("readonly-block-space-container"),inline&&(blockSpaceContainer.style.display="inline-block"),xml.parentNode.insertBefore(blockSpaceContainer,xml),xml.style.display="none";var blockSpace=Blockly.createEmbeddedWorkspace(blockSpaceContainer,xml,{noScrolling:!0,inline,rtl:isRtl}),withPadding=!inline,metrics=blockSpace.getMetrics();Blockly.addChangeListener(blockSpace,(function(){var oldHeight=metrics.contentHeight,oldWidth=metrics.contentWidth,newHeight=blockSpace.getMetrics().contentHeight,newWidth=blockSpace.getMetrics().contentWidth;newHeight===oldHeight&&newWidth===oldWidth||(shrinkBlockSpaceContainer(blockSpace,withPadding),metrics=blockSpace.getMetrics())})),shrinkBlockSpaceContainer(blockSpace,withPadding)}}))},exports.getOuterHeight=function getOuterHeight(component){var includeMargin=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return(0,_jquery.default)(_reactDom.default.findDOMNode(component)).outerHeight(includeMargin)},exports.hasInstructions=function hasInstructions(shortInstructions,longInstructions,hasContainedLevels){return!!(shortInstructions||longInstructions||hasContainedLevels)},exports.scrollBy=function scrollBy(element,deltaY){var animate=arguments.length>2&&void 0!==arguments[2]?arguments[2]:400,newScrollTop=element.scrollTop+deltaY;scrollTo(element,newScrollTop,animate)},exports.scrollTo=scrollTo,exports.shouldDisplayChatTips=function shouldDisplayChatTips(skinId){switch(skinId){case"calc":case"eval":case"jigsaw":case"infinity":case"anna":case"elsa":case"craft":case"hoc2015":case"hoc2015x":return!1;default:return!0}},exports.shrinkBlockSpaceContainer=shrinkBlockSpaceContainer;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_reactDom=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function scrollTo(element,scrollTop){var animate=arguments.length>2&&void 0!==arguments[2]?arguments[2]:400;if(animate){var $elem=(0,_jquery.default)(element);$elem.is(":animated")||$elem.animate({scrollTop},animate)}else element.scrollTop=scrollTop}function shrinkBlockSpaceContainer(blockSpace,withPadding){var container=blockSpace.getContainer(),metrics=blockSpace.getMetrics(),height=metrics.contentHeight,width=metrics.contentWidth;withPadding&&(height+=2*metrics.contentTop,width+=metrics.contentLeft),container.style.height=height+"px",container.style.width=width+"px",Blockly.cdoUtils.workspaceSvgResize(blockSpace)}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/instructions/scroll-buttons.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".S1tg_YJwlE3StU6O_jMu .pmbC2mqPyQ77iGGuV_gf,.S1tg_YJwlE3StU6O_jMu .m9Lkc7r_5nyt4CBGHI3F{position:absolute;transition:opacity 200ms;margin:0}.xY5SMqIv7VTm8YkapNjF{margin:0;padding:0;border:none;border-radius:0;background-color:rgba(0,0,0,0)}.xY5SMqIv7VTm8YkapNjF:hover{box-shadow:none}.xY5SMqIv7VTm8YkapNjF:active{border:none !important}.S1tg_YJwlE3StU6O_jMu .m9Lkc7r_5nyt4CBGHI3F{opacity:0;top:10px;margin:0 0 3px 0;left:25px;transform:translateX(-50%)}.S1tg_YJwlE3StU6O_jMu .zH49qZAOThi4DfgO4d3B{left:50%}.S1tg_YJwlE3StU6O_jMu .pmbC2mqPyQ77iGGuV_gf{opacity:0;bottom:10px;right:25px;transform:translateX(50%)}.S1tg_YJwlE3StU6O_jMu .lrqDQcq_Hz9fgrjolR7S{right:50%}.S1tg_YJwlE3StU6O_jMu .xSDqIfxDiLIt6xSfPQyQ{font-size:50px;color:#292f36;cursor:pointer}.S1tg_YJwlE3StU6O_jMu .JYL6N_EEcFTPi8pFRh_g{opacity:1}.S1tg_YJwlE3StU6O_jMu .XPkojCaMhhxEBB4eUF7n{width:40px}","",{version:3,sources:["webpack://./src/templates/instructions/scroll-buttons.module.scss","webpack://./src/mixins.scss","webpack://./../shared/css/color.scss"],names:[],mappings:"AAGA,wFACE,iBAAA,CACA,wBAAA,CACA,QAAA,CAGF,sBCUE,QAAA,CACA,SAAA,CACA,WAAA,CACA,eAAA,CACA,8BAAA,CAEA,4BACE,eAAA,CAGF,6BACE,sBAAA,CDhBF,4CAEE,SAAA,CACA,QAAA,CACA,gBAAA,CACA,SAAA,CACA,0BAAA,CAEA,4CACE,QAAA,CAIJ,4CAEE,SAAA,CACA,WAAA,CACA,UAAA,CACA,yBAAA,CAEA,4CACE,SAAA,CAIJ,4CACE,cAAA,CACA,aE2IW,CF1IX,cAAA,CAGF,4CACE,SAAA,CAGF,4CACE,UAAA",sourcesContent:["@import \"color\";\n@import '../../mixins.scss';\n\n%all {\n  position: absolute;\n  transition: opacity 200ms;\n  margin: 0;\n}\n\n.removeButtonStyles {\n  @include remove-button-styles;\n}\n\n.container {\n  .up {\n    @extend %all;\n    opacity: 0;\n    top: 10px;\n    margin: 0 0 3px 0;\n    left: 25px;\n    transform: translateX(-50%);\n\n    &Center {\n      left: 50%;\n    }\n  }\n\n  .down {\n    @extend %all;\n    opacity: 0;\n    bottom: 10px;\n    right: 25px;\n    transform: translateX(50%);\n\n    &Center {\n      right: 50%;\n    }\n  }\n\n  .arrowGlyph {\n    font-size: 50px;\n    color: $neutral_dark;\n    cursor: pointer;\n  }\n\n  .visible {\n    opacity: 1;\n  }\n\n  .minecraftButton {\n    width: 40px;\n  }\n}\n","// Removes (most) default button styling. Useful for retaining a clickable component's\n// original presentation when converting it to a <button>\n@mixin remove-button-styles(\n  $color: false,\n  $font-size: false,\n  $line-height: false\n) {\n  @if $color {\n    color: $color;\n  }\n\n  @if $font-size {\n    font-size: $font-size;\n  }\n\n  @if $line-height {\n    line-height: $line-height;\n  }\n\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 0;\n  background-color: transparent;\n\n  &:hover {\n    box-shadow: none;\n  }\n\n  &:active {\n    border: none !important;\n  }\n}\n","// colors from https://www.dropbox.com/s/ycjiwt8vxlmv2ih/Code.org_stylesheet_v2_09.05.13.pdf\n\n// Please keep this file simple; it should only contain color definitions\n//   and aliases.  Variables defined in this file are exported to\n//   apps/src/util/color.js during the apps build process.\n\n$black: #000;\n$background_black: #121416;\n$dark_gray: #2D3139;\n$darkest_gray: #292F36;\n$dark_slate_gray: #282c34;\n$darkest_slate_gray: #25292d;\n$dark_charcoal: #4d575f;\n$charcoal: #5b6770;\n$light_gray: #949ca2;\n$lighter_gray: #c6cacd;\n$lightest_gray: #e7e8ea;\n$background_gray: #f2f2f2;\n$dimgray: #696969;\n$white: #fff;\n$default_blue: #3670b3;\n\n$dark_teal: #0094a3;\n$teal: #0093a4;\n$applab_button_teal: #1abc9c;\n$light_teal: #59cad3;\n$lightish_teal: #80d6de;\n$lighter_teal: #a6e3e8;\n$lightest_teal: #d9f3f5;\n$ai_rubric_cyan: #3cfff8;\n\n$purple: #8c52ba;\n$light_purple: #a69bc1;\n$lighter_purple: #cfc9de;\n$lightest_purple: #ebe8f1;\n\n$cyan: #0094ca;\n$light_cyan: #59b9dc;\n$lighter_cyan: #a6daed;\n$lightest_cyan: #d9eff7;\n$almost_white_cyan: #f5fcff;\n\n$orange: #ffa400;\n$light_orange: #ffc459;\n$lighter_orange: #ffe0a6;\n$lightest_orange: #fff2d9;\n$dark_orange: #ff8600;\n\n$green: #b9bf15;\n$light_green: #d1d567;\n$lighter_green: #e7e9ad;\n$lightest_green: #f5f5dc;\n$highlight_green: #8afc9b;\n\n$yellow: #ffb81d;\n$light_yellow: #ffdb74;\n$lighter_yellow: #ffebb5;\n$lightest_yellow: #fff7df;\n\n$goldenrod: #daa520;\n\n$header_text: $white;\n$bkgnd_color: $teal;\n$inset_color: $lighter_gray;\n$dark_color: $purple;\n$hdr_color: $purple;\n\n// Some extra colors.\n$red: #c00;\n$lightest_red: #fcc;\n$dark_red: #d62911;\n$realgreen: #008000;\n$realyellow: #ff0;\n$mustardyellow: #efcd1c;\n$twitter_blue: #00aced;\n$facebook_blue: #3b5998;\n$linkedin_blue: #0077B5;\n$dark_blue: #00647f;\n$blockly_flyout_gray: #ddd;\n$default_text: #333;\n$border_gray: #bbb;\n$border_light_gray: #d8d8d8;\n$table_header: #ececec;\n$table_light_row: #fcfcfc;\n$table_dark_row: #f4f4f4;\n\n// Progress colors.\n$level_submitted: $purple;\n$level_perfect: rgb(14, 190, 14);\n$level_passed: rgb(159, 212, 159);\n$level_attempted: $realyellow;\n$level_not_tried: #fefefe;\n$level_current: $orange;\n$level_review_rejected: $red;\n$level_review_accepted: rgb(11, 142, 11); // TODO: $level_passed;\n$assessment: $cyan;\n$workspace_running_background: #e5e5e5;\n\n// Experimental Sprite Lab validation colors.\n$dark_purple: #682A77;\n$bright_green: #0ebe0e;\n$neon_pink: #e9118f;\n\n// Links (used in apps).\n$link_color: #0596ce;\n\n// Shadow.\n$shadow: rgba(0, 0, 0, 0.3);\n\n// Colors that are taken from bootstrap, and not necessarily part of our core theme.\n$bootstrap_button_blue: #337ab7;\n$bootstrap_button_red: #d9534f;\n$bootstrap_error_background: #f2dede;\n$bootstrap_error_text: #b94a48;\n$bootstrap_v3_error_text:  #a94442;\n$bootstrap_error_border: #ebccd1;\n$bootstrap_warning_background: #fcf8e3;\n$bootstrap_warning_text: #c09853;\n$bootstrap_warning_border: #faebcc;\n$bootstrap_border_color: #cccccc;\n$bootstrap_success_background: #dff0d8;\n$bootstrap_success_text: #468847;\n$bootstrap_success_border: #d6e9c6;\n\n// Colors taken from droplet, not part of our core theme.\n$droplet_light_green: #d3e965;\n$droplet_blue: #64b5f6;\n$droplet_bright_blue: #19c3e1;\n$droplet_yellow: #fff176;\n$droplet_orange: #ffb74d;\n$droplet_red: #f78183;\n$droplet_cyan: #4dd0e1;\n$droplet_pink: #f57ac6;\n$droplet_purple: #bb77c7;\n$droplet_green: #68d995;\n$droplet_white: $white;\n\n// Oceans: deep blue background.\n$oceans_deep_blue: rgb(2, 0, 28);\n\n// Dark theme background (used by default in Music Lab)\n$dark_black: #121212;\n\n// ===----===----===---- Phase 1 Colors: ----===----===----===\n// Brand\n$brand_primary_light: #ABDFE5;\n$brand_primary_default: #009EB0;\n$brand_primary_dark: #008291;\n\n$brand_secondary_light: #E0D1EC;\n$brand_secondary_default: #8C52BA;\n$brand_secondary_dark: #6F488E;\n\n$brand_accent_default: #ED6060;\n\n$brand_teal_5: #DFF2F4;\n\n//Product\n$product_affirmative_default: #3EA33E;\n\n$product_negative_light: #FDEBE9;\n$product_negative_default: #E5311A;\n$product_negative_dark: #AA2513;\n\n$product_caution_default: #F9CB28;\n\n$product_information_default: #007ACC;\n\n// Neutral\n$neutral_white: #FFFFFF;\n$neutral_light: #F7F8FA;\n$neutral_dark10: #EAEBEB;\n$neutral_dark20: #D4D5D7;\n$neutral_dark30: #BFC1C3;\n$neutral_dark40: #A9ACAF;\n$neutral_dark50: #94979B;\n$neutral_dark60: #7F8286;\n$neutral_dark70: #6A6E73;\n$neutral_dark80: #54595E;\n$neutral_dark90: #3F444B;\n$neutral_dark: #292F36;\n\n//Brands\n$google_brand_color: #0F9D58;\n$microsoft_brand_color: #FFB900;\n$facebook_brand_color: #3B5998;\n\n// ===----===----===---- Design system colors: ----===----===----===\n\n$light_primary_100: #ABDFE5;\n$light_primary_500: #0093A4;\n$light_primary_700: #008291;\n\n$light_secondary_100: #E2D4EE;\n$light_secondary_500: #8C52BA;\n$light_secondary_700: #6F488E;\n\n$light_gray_50: #F7F8FA;\n$light_gray_100: #EAEBEB;\n$light_gray_200: #D4D5D7;\n$light_gray_300: #BFC1C3;\n$light_gray_500: #94979B;\n$light_gray_700: #6A6E73;\n$light_gray_800: #54595E;\n$light_gray_900: #3F444B;\n\n$light_affirmative_100: #E2F1E2;\n$light_affirmative_500: #3EA33E;\n\n$light_negative_500: #E5311A;\n\n$light_caution_500: #F9CB28;\n\n$light_info_100: #DCEFFB;\n$light_info_500: #1892E3;\n\n$light_white: #FFFFFF;\n\n$light_black: #292F36;\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={container:"S1tg_YJwlE3StU6O_jMu",down:"pmbC2mqPyQ77iGGuV_gf",up:"m9Lkc7r_5nyt4CBGHI3F",removeButtonStyles:"xY5SMqIv7VTm8YkapNjF",upCenter:"zH49qZAOThi4DfgO4d3B",downCenter:"lrqDQcq_Hz9fgrjolR7S",arrowGlyph:"xSDqIfxDiLIt6xSfPQyQ",visible:"JYL6N_EEcFTPi8pFRh_g",minecraftButton:"XPkojCaMhhxEBB4eUF7n"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/templates/instructions/scroll-buttons.module.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_scroll_buttons_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/instructions/scroll-buttons.module.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_scroll_buttons_module_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_scroll_buttons_module_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_scroll_buttons_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_scroll_buttons_module_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/instructions/ScrollButtons.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.MinecraftExample=exports.BasicExample=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_ScrollButtons=_interopRequireDefault(__webpack_require__("./src/templates/instructions/ScrollButtons.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var _default={component:_ScrollButtons.default};exports.default=_default;var Template=function Template(args){var container;return _react.default.createElement("div",{style:{minWidth:200}},_react.default.createElement("div",{style:{float:"left",overflowY:"hidden",height:200,width:"80%"},ref:function ref(c){container=c}},_react.default.createElement("div",{style:{height:500,background:"linear-gradient(red, yellow)"}})),_react.default.createElement("div",{style:{float:"left",width:"10%"}},_react.default.createElement(_ScrollButtons.default,_extends({style:{position:"relative"},getScrollTarget:function getScrollTarget(){return container},height:!0,isMinecraft:!0,visible:!0},args))))},BasicExample=Template.bind({});exports.BasicExample=BasicExample,BasicExample.args={height:200,isMinecraft:!1};var MinecraftExample=Template.bind({});exports.MinecraftExample=MinecraftExample,MinecraftExample.args={height:200,isMinecraft:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,