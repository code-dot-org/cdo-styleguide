"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3701],{"./src/templates/rubrics/LearningGoal.jsx":(module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=LearningGoal;var _classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_typography=__webpack_require__("./src/componentLibrary/typography/index.ts"),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_HttpClient=_interopRequireDefault(__webpack_require__("./src/util/HttpClient.ts")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_AiAssessment=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/AiAssessment.jsx")),_AiAssessmentFeedbackContext=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/AiAssessmentFeedbackContext.jsx")),_EvidenceLevels=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/EvidenceLevels.jsx")),_rubricHelpers=__webpack_require__("./src/templates/rubrics/rubricHelpers.js"),_rubricShapes=__webpack_require__("./src/templates/rubrics/rubricShapes.jsx"),_rubricsModule=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/rubrics.module.scss"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var invalidUnderstanding=-1;function LearningGoal(_ref){var learningGoal=_ref.learningGoal,teacherHasEnabledAi=_ref.teacherHasEnabledAi,canProvideFeedback=_ref.canProvideFeedback,reportingData=_ref.reportingData,studentLevelInfo=_ref.studentLevelInfo,aiUnderstanding=_ref.aiUnderstanding,aiConfidence=_ref.aiConfidence,submittedEvaluation=_ref.submittedEvaluation,isStudent=_ref.isStudent,feedbackAdded=_ref.feedbackAdded,setFeedbackAdded=_ref.setFeedbackAdded,aiEvalInfo=_ref.aiEvalInfo,STATUS=Object.freeze({NOT_STARTED:0,IN_PROGRESS:1,FINISHED:2,ERROR:3}),_useState2=_slicedToArray((0,_react.useState)(!1),2),isOpen=_useState2[0],setIsOpen=_useState2[1],_useState4=_slicedToArray((0,_react.useState)(-1),2),aiFeedback=_useState4[0],setAiFeedback=_useState4[1],_useState6=_slicedToArray((0,_react.useState)(STATUS.NOT_STARTED),2),autosaveStatus=_useState6[0],setAutosaveStatus=_useState6[1],_useState8=_slicedToArray((0,_react.useState)(null),2),learningGoalEval=_useState8[0],setLearningGoalEval=_useState8[1],_useState10=_slicedToArray((0,_react.useState)(""),2),displayFeedback=_useState10[0],setDisplayFeedback=_useState10[1],_useState12=_slicedToArray((0,_react.useState)(invalidUnderstanding),2),displayUnderstanding=_useState12[0],setDisplayUnderstanding=_useState12[1],teacherFeedback=(0,_react.useRef)(""),understandingLevel=(0,_react.useRef)(invalidUnderstanding),aiEnabled=!(!learningGoal.aiEnabled||!teacherHasEnabledAi),autosaveTimer=(0,_react.useRef)(),handleFeedbackChange=function handleFeedbackChange(event){studentLevelInfo.user_id&&learningGoal.id&&(autosaveTimer.current&&clearTimeout(autosaveTimer.current),teacherFeedback.current=event.target.value,setDisplayFeedback(teacherFeedback.current),autosaveTimer.current=setTimeout((function(){autosave()}),2e3))},autosave=function autosave(){setAutosaveStatus(STATUS.IN_PROGRESS);var bodyData=JSON.stringify({studentId:studentLevelInfo.user_id,learningGoalId:learningGoal.id,feedback:teacherFeedback.current,understanding:understandingLevel.current});_HttpClient.default.put("".concat("/learning_goal_teacher_evaluations","/").concat(learningGoalEval.id),bodyData,!0,{"Content-Type":"application/json"}).then((function(){setAutosaveStatus(STATUS.FINISHED),feedbackAdded||setFeedbackAdded(!0)})).catch((function(error){console.error(error),setAutosaveStatus(STATUS.ERROR)})),clearTimeout(autosaveTimer.current)};(0,_react.useEffect)((function(){if(studentLevelInfo&&learningGoal.id){var body=JSON.stringify({userId:studentLevelInfo.user_id,learningGoalId:learningGoal.id});_HttpClient.default.post("".concat("/learning_goal_teacher_evaluations","/get_or_create_evaluation"),body,!0,{"Content-Type":"application/json"}).then((function(response){return response.json()})).then((function(json){setLearningGoalEval(json),json.feedback&&(teacherFeedback.current=json.feedback,setDisplayFeedback(teacherFeedback.current)),json.understanding>=0&&null!==json.understanding&&(setDisplayUnderstanding(json.understanding),understandingLevel.current=json.understanding)})).catch((function(error){return console.log(error)}))}}),[studentLevelInfo,learningGoal]);return _react.default.createElement("details",{className:"".concat(_rubricsModule.default.learningGoalRow," uitest-learning-goal-row")},_react.default.createElement("summary",{className:_rubricsModule.default.learningGoalHeader,onClick:function handleClick(){if(!isStudent){var eventName=isOpen?_AnalyticsConstants.EVENTS.TA_RUBRIC_LEARNING_GOAL_COLLAPSED_EVENT:_AnalyticsConstants.EVENTS.TA_RUBRIC_LEARNING_GOAL_EXPANDED_EVENT;_AnalyticsReporter.default.sendEvent(eventName,_objectSpread(_objectSpread({},reportingData||{}),{},{learningGoalKey:learningGoal.key,learningGoal:learningGoal.learningGoal}))}setIsOpen(!isOpen)}},_react.default.createElement("div",{className:_rubricsModule.default.learningGoalHeaderLeftSide},_react.default.createElement(_typography.Heading6,null,learningGoal.learningGoal)),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalHeaderRightSide},aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(AiToken,null),canProvideFeedback&&aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(_typography.BodyThreeText,null,_locale.default.approve()),canProvideFeedback&&!aiEnabled&&displayUnderstanding===invalidUnderstanding&&_react.default.createElement(_typography.BodyThreeText,null,_locale.default.evaluate()),displayUnderstanding>=0&&_react.default.createElement(_typography.BodyThreeText,null,_rubricHelpers.UNDERSTANDING_LEVEL_STRINGS[displayUnderstanding]),submittedEvaluation&&_react.default.createElement("div",{className:_rubricsModule.default.submittedEvaluation},null!==submittedEvaluation.understanding&&_react.default.createElement(_typography.BodyThreeText,null,_rubricHelpers.UNDERSTANDING_LEVEL_STRINGS[submittedEvaluation.understanding]),submittedEvaluation.feedback&&_react.default.createElement(_FontAwesome.default,{icon:"message",className:"fa-regular",title:_locale.default.feedback()})))),_react.default.createElement("div",null,_react.default.createElement(_AiAssessmentFeedbackContext.default.Provider,{value:{aiFeedback,setAiFeedback}},teacherHasEnabledAi&&!!studentLevelInfo&&!!aiEvalInfo&&void 0!==aiUnderstanding&&_react.default.createElement("div",{className:_rubricsModule.default.openedAiAssessment},_react.default.createElement(_AiAssessment.default,{isAiAssessed:learningGoal.aiEnabled,studentName:studentLevelInfo.name,aiConfidence,aiUnderstandingLevel:aiUnderstanding,aiEvalInfo}))),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalExpanded},!!submittedEvaluation&&function renderSubmittedFeedbackTextbox(){return _react.default.createElement("div",{className:_rubricsModule.default.feedbackArea},_react.default.createElement("label",{className:_rubricsModule.default.evidenceLevelLabel},_react.default.createElement("span",null,_locale.default.feedback()),_react.default.createElement("textarea",{className:_rubricsModule.default.inputTextbox,name:"teacherFeedback",value:submittedEvaluation.feedback,disabled:!0})))}(),_react.default.createElement(_EvidenceLevels.default,{learningGoalKey:learningGoal.key,isAiAssessed:aiEnabled,evidenceLevels:learningGoal.evidenceLevels,canProvideFeedback,understanding:displayUnderstanding,radioButtonCallback:function radioButtonCallback(radioButtonData){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.TA_RUBRIC_EVIDENCE_LEVEL_SELECTED,_objectSpread(_objectSpread({},reportingData||{}),{},{learningGoalId:learningGoal.id,learningGoal:learningGoal.learningGoal,newlySelectedEvidenceLevel:radioButtonData,previouslySelectedEvidenceLevel:understandingLevel.current})),setDisplayUnderstanding(radioButtonData),understandingLevel.current=radioButtonData,autosave()},submittedEvaluation,isStudent,isAutosaving:autosaveStatus===STATUS.IN_PROGRESS}),learningGoal.tips&&!isStudent&&_react.default.createElement("div",null,_react.default.createElement(_typography.Heading6,null,_locale.default.tipsForEvaluation()),_react.default.createElement("div",{className:_rubricsModule.default.learningGoalTips},_react.default.createElement(_SafeMarkdown.default,{markdown:learningGoal.tips}))),!!studentLevelInfo&&function renderAutoSaveTextbox(){return _react.default.createElement("div",{className:_rubricsModule.default.feedbackArea},_react.default.createElement("label",{className:_rubricsModule.default.evidenceLevelLabel},_react.default.createElement("span",null,_locale.default.feedback()),_react.default.createElement("textarea",{id:"ui-teacherFeedback",className:_rubricsModule.default.inputTextbox,name:"teacherFeedback",value:displayFeedback,onChange:handleFeedbackChange,disabled:!canProvideFeedback})),autosaveStatus===STATUS.IN_PROGRESS?_react.default.createElement("span",{className:_rubricsModule.default.autosaveMessage},_locale.default.saving()):autosaveStatus===STATUS.FINISHED&&_react.default.createElement("span",{id:"ui-autosaveConfirm",className:_rubricsModule.default.autosaveMessage},_react.default.createElement(_FontAwesome.default,{icon:"circle-check"})," ",_locale.default.savedToGallery()),autosaveStatus===STATUS.ERROR&&_react.default.createElement("span",{className:_rubricsModule.default.autosaveMessage},_locale.default.feedbackSaveError()))}())))}LearningGoal.propTypes={learningGoal:_rubricShapes.learningGoalShape.isRequired,teacherHasEnabledAi:_propTypes.default.bool,canProvideFeedback:_propTypes.default.bool,reportingData:_rubricShapes.reportingDataShape,studentLevelInfo:_rubricShapes.studentLevelInfoShape,aiUnderstanding:_propTypes.default.number,aiConfidence:_propTypes.default.number,submittedEvaluation:_rubricShapes.submittedEvaluationShape,isStudent:_propTypes.default.bool,feedbackAdded:_propTypes.default.bool,setFeedbackAdded:_propTypes.default.func,aiEvalInfo:_rubricShapes.aiEvaluationShape};var AiToken=function AiToken(){return _react.default.createElement("div",{className:"uitest-uses-ai"}," ",_react.default.createElement(_typography.BodyFourText,{className:(0,_classnames.default)(_rubricsModule.default.aiToken,_rubricsModule.default.aiTokenText)},_react.default.createElement(_typography.ExtraStrongText,null,_locale.default.usesAi())))};module.exports=exports.default},"./src/templates/rubrics/LearningGoal.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithTipsFeedbackAvailable=exports.AiEnabledFeedbackUnavailable=exports.AiEnabledFeedbackAvailable=exports.AiDisabledFeedbackUnavailable=exports.AiDisabledFeedbackAvailable=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.js"),_LearningGoal=_interopRequireDefault(__webpack_require__("./src/templates/rubrics/LearningGoal.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default={component:_LearningGoal.default};var defaultLearningGoal={key:"story-learning-goal",learningGoal:"Coding Proficiency",evidenceLevels:[{id:1,understanding:_sharedConstants.RubricUnderstandingLevels.EXTENSIVE,teacherDescription:"Student is able to write fully correct code"},{id:2,understanding:2,teacherDescription:"Student is able to write some correct code"},{id:3,understanding:_sharedConstants.RubricUnderstandingLevels.LIMITED,teacherDescription:"Student is able to write partially correct code"},{id:4,understanding:_sharedConstants.RubricUnderstandingLevels.NONE,teacherDescription:"Student is unable to write correct code"}]};exports.AiDisabledFeedbackUnavailable=function AiDisabledFeedbackUnavailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!1}),teacherHasEnabledAi:!0,canProvideFeedback:!1})},exports.AiDisabledFeedbackAvailable=function AiDisabledFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!1}),teacherHasEnabledAi:!0,canProvideFeedback:!0})},exports.AiEnabledFeedbackUnavailable=function AiEnabledFeedbackUnavailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!0}),teacherHasEnabledAi:!0,canProvideFeedback:!1})},exports.AiEnabledFeedbackAvailable=function AiEnabledFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{aiEnabled:!0}),teacherHasEnabledAi:!0,canProvideFeedback:!0})},exports.WithTipsFeedbackAvailable=function WithTipsFeedbackAvailable(){return _react.default.createElement(_LearningGoal.default,{learningGoal:_objectSpread(_objectSpread({},defaultLearningGoal),{},{tips:"Show some tips for evaluation\n\nPossibly use newlines and _some_ **markdown**\n\n* bullet\n* points"}),canProvideFeedback:!0})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLXJ1YnJpY3MtTGVhcm5pbmdHb2FsLXN0b3J5LmQyMThhMzZkLmlmcmFtZS5idW5kbGUuanMiLCJtYXBwaW5ncyI6IjJmQUFBLElBQUFBLFlBQUFDLHVCQUFBQyxvQkFBQSx1Q0FDQUMsV0FBQUYsdUJBQUFDLG9CQUFBLHVDQUNBRSxPQTJCMEMsU0FBQUMsd0JBQUFDLEVBQUFDLEdBQUEsSUFBQUEsR0FBQUQsR0FBQUEsRUFBQUUsV0FBQSxPQUFBRixFQUFBLFVBQUFBLEdBQUEsVUFBQUcsUUFBQUgsSUFBQSxtQkFBQUEsRUFBQSxlQUFBQSxHQUFBLElBQUFJLEVBQUFDLHlCQUFBSixHQUFBLEdBQUFHLEdBQUFBLEVBQUFFLElBQUFOLEdBQUEsT0FBQUksRUFBQUcsSUFBQVAsR0FBQSxJQUFBUSxFQUFBLENBQUFDLFVBQUEsTUFBQUMsRUFBQUMsT0FBQUMsZ0JBQUFELE9BQUFFLHlCQUFBLFFBQUFDLEtBQUFkLEVBQUEsZUFBQWMsR0FBQSxHQUFBQyxlQUFBQyxLQUFBaEIsRUFBQWMsR0FBQSxLQUFBRyxFQUFBUCxFQUFBQyxPQUFBRSx5QkFBQWIsRUFBQWMsR0FBQSxLQUFBRyxJQUFBQSxFQUFBVixLQUFBVSxFQUFBQyxLQUFBUCxPQUFBQyxlQUFBSixFQUFBTSxFQUFBRyxHQUFBVCxFQUFBTSxHQUFBZCxFQUFBYyxFQUFBLFFBQUFOLEVBQUEsUUFBQVIsRUFBQUksR0FBQUEsRUFBQWMsSUFBQWxCLEVBQUFRLEdBQUFBLENBQUEsQ0EzQjFDVCxDQUFBSCxvQkFBQSxrQ0FFQXVCLFlBQUF2QixvQkFBQSw4Q0FNQXdCLGFBQUF6Qix1QkFBQUMsb0JBQUEsaURBQ0F5QixvQkFBQXpCLG9CQUFBLHdDQUNBMEIsbUJBQUEzQix1QkFBQUMsb0JBQUEsd0NBQ0EyQixjQUFBNUIsdUJBQUFDLG9CQUFBLHFDQUNBNEIsWUFBQTdCLHVCQUFBQyxvQkFBQSw2QkFDQTZCLFFBQUE5Qix1QkFBQUMsb0JBQUEsdUNBRUE4QixjQUFBL0IsdUJBQUFDLG9CQUFBLDZD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ZTJGLGlCQUFBQSwwQkFBMEJJLEtBQ3pDRixtQkFBb0IsNkNBS2dCUCxRQUFBQSw4QkFBRyxTQUFoQ1UsZ0NBQTZCLE9BQ3hDbFAsT0FBQSxRQUFBZ0ssY0FBQzBFLGNBQUEsUUFBWSxDQUNYakosYUFBWTdDLGNBQUFBLGNBQUEsR0FBTWdNLHFCQUFtQixJQUFFM0csV0FBVyxJQUNsRHZDLHFCQUFtQixFQUNuQkMsb0JBQW9CLEdBQ3BCLEVBR29DNkksUUFBQUEsNEJBQUcsU0FBOUJXLDhCQUEyQixPQUN0Q25QLE9BQUEsUUFBQWdLLGNBQUMwRSxjQUFBLFFBQVksQ0FDWGpKLGFBQVk3QyxjQUFBQSxjQUFBLEdBQU1nTSxxQkFBbUIsSUFBRTNHLFdBQVcsSUFDbER2QyxxQkFBbUIsRUFDbkJDLG9CQUFrQixHQUNsQixFQUdxQzZJLFFBQUFBLDZCQUFHLFNBQS9CWSwrQkFBNEIsT0FDdkNwUCxPQUFBLFFBQUFnSyxjQUFDMEUsY0FBQSxRQUFZLENBQ1hqSixhQUFZN0MsY0FBQUEsY0FBQSxHQUFNZ00scUJBQW1CLElBQUUzRyxXQUFXLElBQ2xEdkMscUJBQW1CLEVBQ25CQyxvQkFBb0IsR0FDcEIsRUFHbUM2SSxRQUFBQSwyQkFBRyxTQUE3QmEsNkJBQTBCLE9BQ3JDclAsT0FBQSxRQUFBZ0ssY0FBQzBFLGNBQUEsUUFBWSxDQUNYakosYUFBWTdDLGNBQUFBLGNBQUEsR0FBTWdNLHFCQUFtQixJQUFFM0csV0FBVyxJQUNsRHZDLHFCQUFtQixFQUNuQkMsb0JBQWtCLEdBQ2xCLEVBR2tDNkksUUFBQUEsMEJBQUcsU0FBNUJjLDRCQUF5QixPQUNwQ3RQLE9BQUEsUUFBQWdLLGNBQUMwRSxjQUFBLFFBQVksQ0FDWGpKLGFBQVk3QyxjQUFBQSxjQUFBLEdBQ1BnTSxxQkFBbUIsSUFDdEJoQyxLQUFNLHlHQUVSakgsb0JBQWtCLEdBQ2xCLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3J1YnJpY3MvTGVhcm5pbmdHb2FsLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3J1YnJpY3MvTGVhcm5pbmdHb2FsLnN0b3J5LmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHt1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VSZWZ9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHtcbiAgQm9keVRocmVlVGV4dCxcbiAgQm9keUZvdXJUZXh0LFxuICBFeHRyYVN0cm9uZ1RleHQsXG4gIEhlYWRpbmc2LFxufSBmcm9tICdAY2RvL2FwcHMvY29tcG9uZW50TGlicmFyeS90eXBvZ3JhcGh5JztcbmltcG9ydCBGb250QXdlc29tZSBmcm9tICdAY2RvL2FwcHMvbGVnYWN5U2hhcmVkQ29tcG9uZW50cy9Gb250QXdlc29tZSc7XG5pbXBvcnQge0VWRU5UU30gZnJvbSAnQGNkby9hcHBzL2xpYi91dGlsL0FuYWx5dGljc0NvbnN0YW50cyc7XG5pbXBvcnQgYW5hbHl0aWNzUmVwb3J0ZXIgZnJvbSAnQGNkby9hcHBzL2xpYi91dGlsL0FuYWx5dGljc1JlcG9ydGVyJztcbmltcG9ydCBTYWZlTWFya2Rvd24gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9TYWZlTWFya2Rvd24nO1xuaW1wb3J0IEh0dHBDbGllbnQgZnJvbSAnQGNkby9hcHBzL3V0aWwvSHR0cENsaWVudCc7XG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5cbmltcG9ydCBBaUFzc2Vzc21lbnQgZnJvbSAnLi9BaUFzc2Vzc21lbnQnO1xuaW1wb3J0IEFpQXNzZXNzbWVudEZlZWRiYWNrQ29udGV4dCBmcm9tICcuL0FpQXNzZXNzbWVudEZlZWRiYWNrQ29udGV4dCc7XG5pbXBvcnQgRXZpZGVuY2VMZXZlbHMgZnJvbSAnLi9FdmlkZW5jZUxldmVscyc7XG5pbXBvcnQge1VOREVSU1RBTkRJTkdfTEVWRUxfU1RSSU5HU30gZnJvbSAnLi9ydWJyaWNIZWxwZXJzJztcbmltcG9ydCB7XG4gIGxlYXJuaW5nR29hbFNoYXBlLFxuICByZXBvcnRpbmdEYXRhU2hhcGUsXG4gIHN0dWRlbnRMZXZlbEluZm9TaGFwZSxcbiAgc3VibWl0dGVkRXZhbHVhdGlvblNoYXBlLFxuICBhaUV2YWx1YXRpb25TaGFwZSxcbn0gZnJvbSAnLi9ydWJyaWNTaGFwZXMnO1xuXG5pbXBvcnQgc3R5bGUgZnJvbSAnLi9ydWJyaWNzLm1vZHVsZS5zY3NzJztcblxuY29uc3QgaW52YWxpZFVuZGVyc3RhbmRpbmcgPSAtMTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGVhcm5pbmdHb2FsKHtcbiAgbGVhcm5pbmdHb2FsLFxuICB0ZWFjaGVySGFzRW5hYmxlZEFpLFxuICBjYW5Qcm92aWRlRmVlZGJhY2ssXG4gIHJlcG9ydGluZ0RhdGEsXG4gIHN0dWRlbnRMZXZlbEluZm8sXG4gIGFpVW5kZXJzdGFuZGluZyxcbiAgYWlDb25maWRlbmNlLFxuICBzdWJtaXR0ZWRFdmFsdWF0aW9uLFxuICBpc1N0dWRlbnQsXG4gIGZlZWRiYWNrQWRkZWQsXG4gIHNldEZlZWRiYWNrQWRkZWQsXG4gIGFpRXZhbEluZm8sXG59KSB7XG4gIGNvbnN0IFNUQVRVUyA9IE9iamVjdC5mcmVlemUoe1xuICAgIE5PVF9TVEFSVEVEOiAwLFxuICAgIElOX1BST0dSRVNTOiAxLFxuICAgIEZJTklTSEVEOiAyLFxuICAgIEVSUk9SOiAzLFxuICB9KTtcbiAgY29uc3QgW2lzT3Blbiwgc2V0SXNPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FpRmVlZGJhY2ssIHNldEFpRmVlZGJhY2tdID0gdXNlU3RhdGUoLTEpO1xuICBjb25zdCBbYXV0b3NhdmVTdGF0dXMsIHNldEF1dG9zYXZlU3RhdHVzXSA9IHVzZVN0YXRlKFNUQVRVUy5OT1RfU1RBUlRFRCk7XG4gIGNvbnN0IFtsZWFybmluZ0dvYWxFdmFsLCBzZXRMZWFybmluZ0dvYWxFdmFsXSA9IHVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBbZGlzcGxheUZlZWRiYWNrLCBzZXREaXNwbGF5RmVlZGJhY2tdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbZGlzcGxheVVuZGVyc3RhbmRpbmcsIHNldERpc3BsYXlVbmRlcnN0YW5kaW5nXSA9XG4gICAgdXNlU3RhdGUoaW52YWxpZFVuZGVyc3RhbmRpbmcpO1xuICBjb25zdCB0ZWFjaGVyRmVlZGJhY2sgPSB1c2VSZWYoJycpO1xuICBjb25zdCB1bmRlcnN0YW5kaW5nTGV2ZWwgPSB1c2VSZWYoaW52YWxpZFVuZGVyc3RhbmRpbmcpO1xuXG4gIGNvbnN0IGFpRW5hYmxlZCA9ICEhKGxlYXJuaW5nR29hbC5haUVuYWJsZWQgJiYgdGVhY2hlckhhc0VuYWJsZWRBaSk7XG4gIGNvbnN0IGJhc2VfdGVhY2hlcl9ldmFsdWF0aW9uX2VuZHBvaW50ID0gJy9sZWFybmluZ19nb2FsX3RlYWNoZXJfZXZhbHVhdGlvbnMnO1xuXG4gIC8vIFRpbWVyIHZhcmlhYmxlcyBmb3IgYXV0b3NhdmluZ1xuICBjb25zdCBhdXRvc2F2ZVRpbWVyID0gdXNlUmVmKCk7XG4gIGNvbnN0IHNhdmVBZnRlciA9IDIwMDA7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgaWYgKCFpc1N0dWRlbnQpIHtcbiAgICAgIGNvbnN0IGV2ZW50TmFtZSA9IGlzT3BlblxuICAgICAgICA/IEVWRU5UUy5UQV9SVUJSSUNfTEVBUk5JTkdfR09BTF9DT0xMQVBTRURfRVZFTlRcbiAgICAgICAgOiBFVkVOVFMuVEFfUlVCUklDX0xFQVJOSU5HX0dPQUxfRVhQQU5ERURfRVZFTlQ7XG4gICAgICBhbmFseXRpY3NSZXBvcnRlci5zZW5kRXZlbnQoZXZlbnROYW1lLCB7XG4gICAgICAgIC4uLihyZXBvcnRpbmdEYXRhIHx8IHt9KSxcbiAgICAgICAgbGVhcm5pbmdHb2FsS2V5OiBsZWFybmluZ0dvYWwua2V5LFxuICAgICAgICBsZWFybmluZ0dvYWw6IGxlYXJuaW5nR29hbC5sZWFybmluZ0dvYWwsXG4gICAgICB9KTtcbiAgICB9XG4gICAgc2V0SXNPcGVuKCFpc09wZW4pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUZlZWRiYWNrQ2hhbmdlID0gZXZlbnQgPT4ge1xuICAgIGlmIChzdHVkZW50TGV2ZWxJbmZvLnVzZXJfaWQgJiYgbGVhcm5pbmdHb2FsLmlkKSB7XG4gICAgICBpZiAoYXV0b3NhdmVUaW1lci5jdXJyZW50KSB7XG4gICAgICAgIGNsZWFyVGltZW91dChhdXRvc2F2ZVRpbWVyLmN1cnJlbnQpO1xuICAgICAgfVxuICAgICAgdGVhY2hlckZlZWRiYWNrLmN1cnJlbnQgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgICBzZXREaXNwbGF5RmVlZGJhY2sodGVhY2hlckZlZWRiYWNrLmN1cnJlbnQpO1xuICAgICAgYXV0b3NhdmVUaW1lci5jdXJyZW50ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGF1dG9zYXZlKCk7XG4gICAgICB9LCBzYXZlQWZ0ZXIpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBhdXRvc2F2ZSA9ICgpID0+IHtcbiAgICBzZXRBdXRvc2F2ZVN0YXR1cyhTVEFUVVMuSU5fUFJPR1JFU1MpO1xuICAgIGNvbnN0IGJvZHlEYXRhID0gSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgc3R1ZGVudElkOiBzdHVkZW50TGV2ZWxJbmZvLnVzZXJfaWQsXG4gICAgICBsZWFybmluZ0dvYWxJZDogbGVhcm5pbmdHb2FsLmlkLFxuICAgICAgZmVlZGJhY2s6IHRlYWNoZXJGZWVkYmFjay5jdXJyZW50LFxuICAgICAgdW5kZXJzdGFuZGluZzogdW5kZXJzdGFuZGluZ0xldmVsLmN1cnJlbnQsXG4gICAgfSk7XG4gICAgSHR0cENsaWVudC5wdXQoXG4gICAgICBgJHtiYXNlX3RlYWNoZXJfZXZhbHVhdGlvbl9lbmRwb2ludH0vJHtsZWFybmluZ0dvYWxFdmFsLmlkfWAsXG4gICAgICBib2R5RGF0YSxcbiAgICAgIHRydWUsXG4gICAgICB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICB9XG4gICAgKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBzZXRBdXRvc2F2ZVN0YXR1cyhTVEFUVVMuRklOSVNIRUQpO1xuICAgICAgICBpZiAoIWZlZWRiYWNrQWRkZWQpIHtcbiAgICAgICAgICBzZXRGZWVkYmFja0FkZGVkKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIHNldEF1dG9zYXZlU3RhdHVzKFNUQVRVUy5FUlJPUik7XG4gICAgICB9KTtcbiAgICBjbGVhclRpbWVvdXQoYXV0b3NhdmVUaW1lci5jdXJyZW50KTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzdHVkZW50TGV2ZWxJbmZvICYmIGxlYXJuaW5nR29hbC5pZCkge1xuICAgICAgY29uc3QgYm9keSA9IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgdXNlcklkOiBzdHVkZW50TGV2ZWxJbmZvLnVzZXJfaWQsXG4gICAgICAgIGxlYXJuaW5nR29hbElkOiBsZWFybmluZ0dvYWwuaWQsXG4gICAgICB9KTtcbiAgICAgIEh0dHBDbGllbnQucG9zdChcbiAgICAgICAgYCR7YmFzZV90ZWFjaGVyX2V2YWx1YXRpb25fZW5kcG9pbnR9L2dldF9vcl9jcmVhdGVfZXZhbHVhdGlvbmAsXG4gICAgICAgIGJvZHksXG4gICAgICAgIHRydWUsXG4gICAgICAgIHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICB9XG4gICAgICApXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAgICAgLnRoZW4oanNvbiA9PiB7XG4gICAgICAgICAgc2V0TGVhcm5pbmdHb2FsRXZhbChqc29uKTtcbiAgICAgICAgICBpZiAoanNvbi5mZWVkYmFjaykge1xuICAgICAgICAgICAgdGVhY2hlckZlZWRiYWNrLmN1cnJlbnQgPSBqc29uLmZlZWRiYWNrO1xuICAgICAgICAgICAgc2V0RGlzcGxheUZlZWRiYWNrKHRlYWNoZXJGZWVkYmFjay5jdXJyZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGpzb24udW5kZXJzdGFuZGluZyA+PSAwICYmIGpzb24udW5kZXJzdGFuZGluZyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgc2V0RGlzcGxheVVuZGVyc3RhbmRpbmcoanNvbi51bmRlcnN0YW5kaW5nKTtcbiAgICAgICAgICAgIHVuZGVyc3RhbmRpbmdMZXZlbC5jdXJyZW50ID0ganNvbi51bmRlcnN0YW5kaW5nO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XG4gICAgfVxuICB9LCBbc3R1ZGVudExldmVsSW5mbywgbGVhcm5pbmdHb2FsXSk7XG5cbiAgLy8gQ2FsbGJhY2sgdG8gcmV0cmlldmUgdW5kZXJzdGFuZGluZyBkYXRhIGZyb20gRXZpZGVuY2VMZXZlbHNcbiAgY29uc3QgcmFkaW9CdXR0b25DYWxsYmFjayA9IHJhZGlvQnV0dG9uRGF0YSA9PiB7XG4gICAgYW5hbHl0aWNzUmVwb3J0ZXIuc2VuZEV2ZW50KEVWRU5UUy5UQV9SVUJSSUNfRVZJREVOQ0VfTEVWRUxfU0VMRUNURUQsIHtcbiAgICAgIC4uLihyZXBvcnRpbmdEYXRhIHx8IHt9KSxcbiAgICAgIGxlYXJuaW5nR29hbElkOiBsZWFybmluZ0dvYWwuaWQsXG4gICAgICBsZWFybmluZ0dvYWw6IGxlYXJuaW5nR29hbC5sZWFybmluZ0dvYWwsXG4gICAgICBuZXdseVNlbGVjdGVkRXZpZGVuY2VMZXZlbDogcmFkaW9CdXR0b25EYXRhLFxuICAgICAgcHJldmlvdXNseVNlbGVjdGVkRXZpZGVuY2VMZXZlbDogdW5kZXJzdGFuZGluZ0xldmVsLmN1cnJlbnQsXG4gICAgfSk7XG4gICAgc2V0RGlzcGxheVVuZGVyc3RhbmRpbmcocmFkaW9CdXR0b25EYXRhKTtcbiAgICB1bmRlcnN0YW5kaW5nTGV2ZWwuY3VycmVudCA9IHJhZGlvQnV0dG9uRGF0YTtcbiAgICBhdXRvc2F2ZSgpO1xuICB9O1xuXG4gIGNvbnN0IHJlbmRlckF1dG9TYXZlVGV4dGJveCA9ICgpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlLmZlZWRiYWNrQXJlYX0+XG4gICAgICAgIDxsYWJlbCBjbGFzc05hbWU9e3N0eWxlLmV2aWRlbmNlTGV2ZWxMYWJlbH0+XG4gICAgICAgICAgPHNwYW4+e2kxOG4uZmVlZGJhY2soKX08L3NwYW4+XG4gICAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgICBpZD1cInVpLXRlYWNoZXJGZWVkYmFja1wiXG4gICAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlLmlucHV0VGV4dGJveH1cbiAgICAgICAgICAgIG5hbWU9XCJ0ZWFjaGVyRmVlZGJhY2tcIlxuICAgICAgICAgICAgdmFsdWU9e2Rpc3BsYXlGZWVkYmFja31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVGZWVkYmFja0NoYW5nZX1cbiAgICAgICAgICAgIGRpc2FibGVkPXshY2FuUHJvdmlkZUZlZWRiYWNrfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvbGFiZWw+XG4gICAgICAgIHthdXRvc2F2ZVN0YXR1cyA9PT0gU1RBVFVTLklOX1BST0dSRVNTID8gKFxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17c3R5bGUuYXV0b3NhdmVNZXNzYWdlfT57aTE4bi5zYXZpbmcoKX08L3NwYW4+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgYXV0b3NhdmVTdGF0dXMgPT09IFNUQVRVUy5GSU5JU0hFRCAmJiAoXG4gICAgICAgICAgICA8c3BhbiBpZD1cInVpLWF1dG9zYXZlQ29uZmlybVwiIGNsYXNzTmFtZT17c3R5bGUuYXV0b3NhdmVNZXNzYWdlfT5cbiAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lIGljb249XCJjaXJjbGUtY2hlY2tcIiAvPiB7aTE4bi5zYXZlZFRvR2FsbGVyeSgpfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIClcbiAgICAgICAgKX1cbiAgICAgICAge2F1dG9zYXZlU3RhdHVzID09PSBTVEFUVVMuRVJST1IgJiYgKFxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17c3R5bGUuYXV0b3NhdmVNZXNzYWdlfT5cbiAgICAgICAgICAgIHtpMThuLmZlZWRiYWNrU2F2ZUVycm9yKCl9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfTtcblxuICBjb25zdCByZW5kZXJTdWJtaXR0ZWRGZWVkYmFja1RleHRib3ggPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZS5mZWVkYmFja0FyZWF9PlxuICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPXtzdHlsZS5ldmlkZW5jZUxldmVsTGFiZWx9PlxuICAgICAgICAgIDxzcGFuPntpMThuLmZlZWRiYWNrKCl9PC9zcGFuPlxuICAgICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZS5pbnB1dFRleHRib3h9XG4gICAgICAgICAgICBuYW1lPVwidGVhY2hlckZlZWRiYWNrXCJcbiAgICAgICAgICAgIHZhbHVlPXtzdWJtaXR0ZWRFdmFsdWF0aW9uLmZlZWRiYWNrfVxuICAgICAgICAgICAgZGlzYWJsZWRcbiAgICAgICAgICAvPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkZXRhaWxzIGNsYXNzTmFtZT17YCR7c3R5bGUubGVhcm5pbmdHb2FsUm93fSB1aXRlc3QtbGVhcm5pbmctZ29hbC1yb3dgfT5cbiAgICAgIDxzdW1tYXJ5IGNsYXNzTmFtZT17c3R5bGUubGVhcm5pbmdHb2FsSGVhZGVyfSBvbkNsaWNrPXtoYW5kbGVDbGlja30+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZS5sZWFybmluZ0dvYWxIZWFkZXJMZWZ0U2lkZX0+XG4gICAgICAgICAgey8qVE9ETzogW0RFUy0zMjFdIExhYmVsLXR3byBzdHlsZXMgaGVyZSovfVxuICAgICAgICAgIDxIZWFkaW5nNj57bGVhcm5pbmdHb2FsLmxlYXJuaW5nR29hbH08L0hlYWRpbmc2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlLmxlYXJuaW5nR29hbEhlYWRlclJpZ2h0U2lkZX0+XG4gICAgICAgICAge2FpRW5hYmxlZCAmJiBkaXNwbGF5VW5kZXJzdGFuZGluZyA9PT0gaW52YWxpZFVuZGVyc3RhbmRpbmcgJiYgKFxuICAgICAgICAgICAgPEFpVG9rZW4gLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHsvKlRPRE86IERpc3BsYXkgc3RhdHVzIG9mIGZlZWRiYWNrKi99XG4gICAgICAgICAge2NhblByb3ZpZGVGZWVkYmFjayAmJlxuICAgICAgICAgICAgYWlFbmFibGVkICYmXG4gICAgICAgICAgICBkaXNwbGF5VW5kZXJzdGFuZGluZyA9PT0gaW52YWxpZFVuZGVyc3RhbmRpbmcgJiYgKFxuICAgICAgICAgICAgICA8Qm9keVRocmVlVGV4dD57aTE4bi5hcHByb3ZlKCl9PC9Cb2R5VGhyZWVUZXh0PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICB7Y2FuUHJvdmlkZUZlZWRiYWNrICYmXG4gICAgICAgICAgICAhYWlFbmFibGVkICYmXG4gICAgICAgICAgICBkaXNwbGF5VW5kZXJzdGFuZGluZyA9PT0gaW52YWxpZFVuZGVyc3RhbmRpbmcgJiYgKFxuICAgICAgICAgICAgICA8Qm9keVRocmVlVGV4dD57aTE4bi5ldmFsdWF0ZSgpfTwvQm9keVRocmVlVGV4dD5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAge2Rpc3BsYXlVbmRlcnN0YW5kaW5nID49IDAgJiYgKFxuICAgICAgICAgICAgPEJvZHlUaHJlZVRleHQ+XG4gICAgICAgICAgICAgIHtVTkRFUlNUQU5ESU5HX0xFVkVMX1NUUklOR1NbZGlzcGxheVVuZGVyc3RhbmRpbmddfVxuICAgICAgICAgICAgPC9Cb2R5VGhyZWVUZXh0PlxuICAgICAgICAgICl9XG4gICAgICAgICAge3N1Ym1pdHRlZEV2YWx1YXRpb24gJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlLnN1Ym1pdHRlZEV2YWx1YXRpb259PlxuICAgICAgICAgICAgICB7c3VibWl0dGVkRXZhbHVhdGlvbi51bmRlcnN0YW5kaW5nICE9PSBudWxsICYmIChcbiAgICAgICAgICAgICAgICA8Qm9keVRocmVlVGV4dD5cbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgVU5ERVJTVEFORElOR19MRVZFTF9TVFJJTkdTW1xuICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdHRlZEV2YWx1YXRpb24udW5kZXJzdGFuZGluZ1xuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC9Cb2R5VGhyZWVUZXh0PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICB7c3VibWl0dGVkRXZhbHVhdGlvbi5mZWVkYmFjayAmJiAoXG4gICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lXG4gICAgICAgICAgICAgICAgICBpY29uPVwibWVzc2FnZVwiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmYS1yZWd1bGFyXCJcbiAgICAgICAgICAgICAgICAgIHRpdGxlPXtpMThuLmZlZWRiYWNrKCl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9zdW1tYXJ5PlxuXG4gICAgICB7LypUT0RPOiBQYXNzIHRocm91Z2ggZGF0YSB0byBjaGlsZCBjb21wb25lbnQqL31cbiAgICAgIDxkaXY+XG4gICAgICAgIDxBaUFzc2Vzc21lbnRGZWVkYmFja0NvbnRleHQuUHJvdmlkZXJcbiAgICAgICAgICB2YWx1ZT17e2FpRmVlZGJhY2ssIHNldEFpRmVlZGJhY2t9fVxuICAgICAgICA+XG4gICAgICAgICAge3RlYWNoZXJIYXNFbmFibGVkQWkgJiZcbiAgICAgICAgICAgICEhc3R1ZGVudExldmVsSW5mbyAmJlxuICAgICAgICAgICAgISFhaUV2YWxJbmZvICYmXG4gICAgICAgICAgICBhaVVuZGVyc3RhbmRpbmcgIT09IHVuZGVmaW5lZCAmJiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZS5vcGVuZWRBaUFzc2Vzc21lbnR9PlxuICAgICAgICAgICAgICAgIDxBaUFzc2Vzc21lbnRcbiAgICAgICAgICAgICAgICAgIGlzQWlBc3Nlc3NlZD17bGVhcm5pbmdHb2FsLmFpRW5hYmxlZH1cbiAgICAgICAgICAgICAgICAgIHN0dWRlbnROYW1lPXtzdHVkZW50TGV2ZWxJbmZvLm5hbWV9XG4gICAgICAgICAgICAgICAgICBhaUNvbmZpZGVuY2U9e2FpQ29uZmlkZW5jZX1cbiAgICAgICAgICAgICAgICAgIGFpVW5kZXJzdGFuZGluZ0xldmVsPXthaVVuZGVyc3RhbmRpbmd9XG4gICAgICAgICAgICAgICAgICBhaUV2YWxJbmZvPXthaUV2YWxJbmZvfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9BaUFzc2Vzc21lbnRGZWVkYmFja0NvbnRleHQuUHJvdmlkZXI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZS5sZWFybmluZ0dvYWxFeHBhbmRlZH0+XG4gICAgICAgICAgeyEhc3VibWl0dGVkRXZhbHVhdGlvbiAmJiByZW5kZXJTdWJtaXR0ZWRGZWVkYmFja1RleHRib3goKX1cbiAgICAgICAgICA8RXZpZGVuY2VMZXZlbHNcbiAgICAgICAgICAgIGxlYXJuaW5nR29hbEtleT17bGVhcm5pbmdHb2FsLmtleX1cbiAgICAgICAgICAgIGlzQWlBc3Nlc3NlZD17YWlFbmFibGVkfVxuICAgICAgICAgICAgZXZpZGVuY2VMZXZlbHM9e2xlYXJuaW5nR29hbC5ldmlkZW5jZUxldmVsc31cbiAgICAgICAgICAgIGNhblByb3ZpZGVGZWVkYmFjaz17Y2FuUHJvdmlkZUZlZWRiYWNrfVxuICAgICAgICAgICAgdW5kZXJzdGFuZGluZz17ZGlzcGxheVVuZGVyc3RhbmRpbmd9XG4gICAgICAgICAgICByYWRpb0J1dHRvbkNhbGxiYWNrPXtyYWRpb0J1dHRvbkNhbGxiYWNrfVxuICAgICAgICAgICAgc3VibWl0dGVkRXZhbHVhdGlvbj17c3VibWl0dGVkRXZhbHVhdGlvbn1cbiAgICAgICAgICAgIGlzU3R1ZGVudD17aXNTdHVkZW50fVxuICAgICAgICAgICAgaXNBdXRvc2F2aW5nPXthdXRvc2F2ZVN0YXR1cyA9PT0gU1RBVFVTLklOX1BST0dSRVNTfVxuICAgICAgICAgIC8+XG4gICAgICAgICAge2xlYXJuaW5nR29hbC50aXBzICYmICFpc1N0dWRlbnQgJiYgKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPEhlYWRpbmc2PntpMThuLnRpcHNGb3JFdmFsdWF0aW9uKCl9PC9IZWFkaW5nNj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlLmxlYXJuaW5nR29hbFRpcHN9PlxuICAgICAgICAgICAgICAgIDxTYWZlTWFya2Rvd24gbWFya2Rvd249e2xlYXJuaW5nR29hbC50aXBzfSAvPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgICAgeyEhc3R1ZGVudExldmVsSW5mbyAmJiByZW5kZXJBdXRvU2F2ZVRleHRib3goKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2RldGFpbHM+XG4gICk7XG59XG5cbkxlYXJuaW5nR29hbC5wcm9wVHlwZXMgPSB7XG4gIGxlYXJuaW5nR29hbDogbGVhcm5pbmdHb2FsU2hhcGUuaXNSZXF1aXJlZCxcbiAgdGVhY2hlckhhc0VuYWJsZWRBaTogUHJvcFR5cGVzLmJvb2wsXG4gIGNhblByb3ZpZGVGZWVkYmFjazogUHJvcFR5cGVzLmJvb2wsXG4gIHJlcG9ydGluZ0RhdGE6IHJlcG9ydGluZ0RhdGFTaGFwZSxcbiAgc3R1ZGVudExldmVsSW5mbzogc3R1ZGVudExldmVsSW5mb1NoYXBlLFxuICBhaVVuZGVyc3RhbmRpbmc6IFByb3BUeXBlcy5udW1iZXIsXG4gIGFpQ29uZmlkZW5jZTogUHJvcFR5cGVzLm51bWJlcixcbiAgc3VibWl0dGVkRXZhbHVhdGlvbjogc3VibWl0dGVkRXZhbHVhdGlvblNoYXBlLFxuICBpc1N0dWRlbnQ6IFByb3BUeXBlcy5ib29sLFxuICBmZWVkYmFja0FkZGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2V0RmVlZGJhY2tBZGRlZDogUHJvcFR5cGVzLmZ1bmMsXG4gIGFpRXZhbEluZm86IGFpRXZhbHVhdGlvblNoYXBlLFxufTtcblxuY29uc3QgQWlUb2tlbiA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInVpdGVzdC11c2VzLWFpXCI+XG4gICAgICB7JyAnfVxuICAgICAgPEJvZHlGb3VyVGV4dCBjbGFzc05hbWU9e2NsYXNzbmFtZXMoc3R5bGUuYWlUb2tlbiwgc3R5bGUuYWlUb2tlblRleHQpfT5cbiAgICAgICAgPEV4dHJhU3Ryb25nVGV4dD57aTE4bi51c2VzQWkoKX08L0V4dHJhU3Ryb25nVGV4dD5cbiAgICAgIDwvQm9keUZvdXJUZXh0PlxuICAgIDwvZGl2PlxuICApO1xufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7UnVicmljVW5kZXJzdGFuZGluZ0xldmVsc30gZnJvbSAnQGNkby9nZW5lcmF0ZWQtc2NyaXB0cy9zaGFyZWRDb25zdGFudHMnO1xuXG5pbXBvcnQgTGVhcm5pbmdHb2FsIGZyb20gJy4vTGVhcm5pbmdHb2FsJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBjb21wb25lbnQ6IExlYXJuaW5nR29hbCxcbn07XG5cbmNvbnN0IGRlZmF1bHRMZWFybmluZ0dvYWwgPSB7XG4gIGtleTogJ3N0b3J5LWxlYXJuaW5nLWdvYWwnLFxuICBsZWFybmluZ0dvYWw6ICdDb2RpbmcgUHJvZmljaWVuY3knLFxuICBldmlkZW5jZUxldmVsczogW1xuICAgIHtcbiAgICAgIGlkOiAxLFxuICAgICAgdW5kZXJzdGFuZGluZzogUnVicmljVW5kZXJzdGFuZGluZ0xldmVscy5FWFRFTlNJVkUsXG4gICAgICB0ZWFjaGVyRGVzY3JpcHRpb246ICdTdHVkZW50IGlzIGFibGUgdG8gd3JpdGUgZnVsbHkgY29ycmVjdCBjb2RlJyxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiAyLFxuICAgICAgdW5kZXJzdGFuZGluZzogMixcbiAgICAgIHRlYWNoZXJEZXNjcmlwdGlvbjogJ1N0dWRlbnQgaXMgYWJsZSB0byB3cml0ZSBzb21lIGNvcnJlY3QgY29kZScsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogMyxcbiAgICAgIHVuZGVyc3RhbmRpbmc6IFJ1YnJpY1VuZGVyc3RhbmRpbmdMZXZlbHMuTElNSVRFRCxcbiAgICAgIHRlYWNoZXJEZXNjcmlwdGlvbjogJ1N0dWRlbnQgaXMgYWJsZSB0byB3cml0ZSBwYXJ0aWFsbHkgY29ycmVjdCBjb2RlJyxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiA0LFxuICAgICAgdW5kZXJzdGFuZGluZzogUnVicmljVW5kZXJzdGFuZGluZ0xldmVscy5OT05FLFxuICAgICAgdGVhY2hlckRlc2NyaXB0aW9uOiAnU3R1ZGVudCBpcyB1bmFibGUgdG8gd3JpdGUgY29ycmVjdCBjb2RlJyxcbiAgICB9LFxuICBdLFxufTtcblxuZXhwb3J0IGNvbnN0IEFpRGlzYWJsZWRGZWVkYmFja1VuYXZhaWxhYmxlID0gKCkgPT4gKFxuICA8TGVhcm5pbmdHb2FsXG4gICAgbGVhcm5pbmdHb2FsPXt7Li4uZGVmYXVsdExlYXJuaW5nR29hbCwgYWlFbmFibGVkOiBmYWxzZX19XG4gICAgdGVhY2hlckhhc0VuYWJsZWRBaVxuICAgIGNhblByb3ZpZGVGZWVkYmFjaz17ZmFsc2V9XG4gIC8+XG4pO1xuXG5leHBvcnQgY29uc3QgQWlEaXNhYmxlZEZlZWRiYWNrQXZhaWxhYmxlID0gKCkgPT4gKFxuICA8TGVhcm5pbmdHb2FsXG4gICAgbGVhcm5pbmdHb2FsPXt7Li4uZGVmYXVsdExlYXJuaW5nR29hbCwgYWlFbmFibGVkOiBmYWxzZX19XG4gICAgdGVhY2hlckhhc0VuYWJsZWRBaVxuICAgIGNhblByb3ZpZGVGZWVkYmFja1xuICAvPlxuKTtcblxuZXhwb3J0IGNvbnN0IEFpRW5hYmxlZEZlZWRiYWNrVW5hdmFpbGFibGUgPSAoKSA9PiAoXG4gIDxMZWFybmluZ0dvYWxcbiAgICBsZWFybmluZ0dvYWw9e3suLi5kZWZhdWx0TGVhcm5pbmdHb2FsLCBhaUVuYWJsZWQ6IHRydWV9fVxuICAgIHRlYWNoZXJIYXNFbmFibGVkQWlcbiAgICBjYW5Qcm92aWRlRmVlZGJhY2s9e2ZhbHNlfVxuICAvPlxuKTtcblxuZXhwb3J0IGNvbnN0IEFpRW5hYmxlZEZlZWRiYWNrQXZhaWxhYmxlID0gKCkgPT4gKFxuICA8TGVhcm5pbmdHb2FsXG4gICAgbGVhcm5pbmdHb2FsPXt7Li4uZGVmYXVsdExlYXJuaW5nR29hbCwgYWlFbmFibGVkOiB0cnVlfX1cbiAgICB0ZWFjaGVySGFzRW5hYmxlZEFpXG4gICAgY2FuUHJvdmlkZUZlZWRiYWNrXG4gIC8+XG4pO1xuXG5leHBvcnQgY29uc3QgV2l0aFRpcHNGZWVkYmFja0F2YWlsYWJsZSA9ICgpID0+IChcbiAgPExlYXJuaW5nR29hbFxuICAgIGxlYXJuaW5nR29hbD17e1xuICAgICAgLi4uZGVmYXVsdExlYXJuaW5nR29hbCxcbiAgICAgIHRpcHM6ICdTaG93IHNvbWUgdGlwcyBmb3IgZXZhbHVhdGlvblxcblxcblBvc3NpYmx5IHVzZSBuZXdsaW5lcyBhbmQgX3NvbWVfICoqbWFya2Rvd24qKlxcblxcbiogYnVsbGV0XFxuKiBwb2ludHMnLFxuICAgIH19XG4gICAgY2FuUHJvdmlkZUZlZWRiYWNrXG4gIC8+XG4pO1xuIl0sIm5hbWVzIjpbIl9jbGFzc25hbWVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJlIiwiciIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwidCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsIl90eXBvZ3JhcGh5IiwiX0ZvbnRBd2Vzb21lIiwiX0FuYWx5dGljc0NvbnN0YW50cyIsIl9BbmFseXRpY3NSZXBvcnRlciIsIl9TYWZlTWFya2Rvd24iLCJfSHR0cENsaWVudCIsIl9sb2NhbGUiLCJfQWlBc3Nlc3NtZW50IiwiX0FpQXNzZXNzbWVudEZlZWRiYWNrQ29udGV4dCIsIl9FdmlkZW5jZUxldmVscyIsIl9ydWJyaWNIZWxwZXJzIiwiX3J1YnJpY1NoYXBlcyIsIl9ydWJyaWNzTW9kdWxlIiwiV2Vha01hcCIsIm9iaiIsIm93bktleXMiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsIl90b1ByaW1pdGl2ZSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiTnVtYmVyIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfc2xpY2VkVG9BcnJheSIsImFyciIsIl9hcnJheVdpdGhIb2xlcyIsIkFycmF5IiwiaXNBcnJheSIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsImwiLCJpdGVyYXRvciIsImYiLCJuZXh0IiwiZG9uZSIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIm1pbkxlbiIsIl9hcnJheUxpa2VUb0FycmF5IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiX25vbkl0ZXJhYmxlUmVzdCIsImxlbiIsImFycjIiLCJpbnZhbGlkVW5kZXJzdGFuZGluZyIsIkxlYXJuaW5nR29hbCIsIl9yZWYiLCJsZWFybmluZ0dvYWwiLCJ0ZWFjaGVySGFzRW5hYmxlZEFpIiwiY2FuUHJvdmlkZUZlZWRiYWNrIiwicmVwb3J0aW5nRGF0YSIsInN0dWRlbnRMZXZlbEluZm8iLCJhaVVuZGVyc3RhbmRpbmciLCJhaUNvbmZpZGVuY2UiLCJzdWJtaXR0ZWRFdmFsdWF0aW9uIiwiaXNTdHVkZW50IiwiZmVlZGJhY2tBZGRlZCIsInNldEZlZWRiYWNrQWRkZWQiLCJhaUV2YWxJbmZvIiwiU1RBVFVTIiwiZnJlZXplIiwiTk9UX1NUQVJURUQiLCJJTl9QUk9HUkVTUyIsIkZJTklTSEVEIiwiRVJST1IiLCJfdXNlU3RhdGUyIiwidXNlU3RhdGUiLCJpc09wZW4iLCJzZXRJc09wZW4iLCJfdXNlU3RhdGU0IiwiYWlGZWVkYmFjayIsInNldEFpRmVlZGJhY2siLCJfdXNlU3RhdGU2IiwiYXV0b3NhdmVTdGF0dXMiLCJzZXRBdXRvc2F2ZVN0YXR1cyIsIl91c2VTdGF0ZTgiLCJsZWFybmluZ0dvYWxFdmFsIiwic2V0TGVhcm5pbmdHb2FsRXZhbCIsIl91c2VTdGF0ZTEwIiwiZGlzcGxheUZlZWRiYWNrIiwic2V0RGlzcGxheUZlZWRiYWNrIiwiX3VzZVN0YXRlMTIiLCJkaXNwbGF5VW5kZXJzdGFuZGluZyIsInNldERpc3BsYXlVbmRlcnN0YW5kaW5nIiwidGVhY2hlckZlZWRiYWNrIiwidXNlUmVmIiwidW5kZXJzdGFuZGluZ0xldmVsIiwiYWlFbmFibGVkIiwiYXV0b3NhdmVUaW1lciIsImhhbmRsZUZlZWRiYWNrQ2hhbmdlIiwiZXZlbnQiLCJ1c2VyX2lkIiwiaWQiLCJjdXJyZW50IiwiY2xlYXJUaW1lb3V0IiwidGFyZ2V0Iiwic2V0VGltZW91dCIsImF1dG9zYXZlIiwiYm9keURhdGEiLCJKU09OIiwic3RyaW5naWZ5Iiwic3R1ZGVudElkIiwibGVhcm5pbmdHb2FsSWQiLCJmZWVkYmFjayIsInVuZGVyc3RhbmRpbmciLCJIdHRwQ2xpZW50IiwicHV0IiwiY29uY2F0IiwidGhlbiIsImVycm9yIiwiY29uc29sZSIsInVzZUVmZmVjdCIsImJvZHkiLCJ1c2VySWQiLCJwb3N0IiwicmVzcG9uc2UiLCJqc29uIiwibG9nIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsInN0eWxlIiwibGVhcm5pbmdHb2FsUm93IiwibGVhcm5pbmdHb2FsSGVhZGVyIiwib25DbGljayIsImhhbmRsZUNsaWNrIiwiZXZlbnROYW1lIiwiRVZFTlRTIiwiVEFfUlVCUklDX0xFQVJOSU5HX0dPQUxfQ09MTEFQU0VEX0VWRU5UIiwiVEFfUlVCUklDX0xFQVJOSU5HX0dPQUxfRVhQQU5ERURfRVZFTlQiLCJhbmFseXRpY3NSZXBvcnRlciIsInNlbmRFdmVudCIsImxlYXJuaW5nR29hbEtleSIsImxlYXJuaW5nR29hbEhlYWRlckxlZnRTaWRlIiwiSGVhZGluZzYiLCJsZWFybmluZ0dvYWxIZWFkZXJSaWdodFNpZGUiLCJBaVRva2VuIiwiQm9keVRocmVlVGV4dCIsImkxOG4iLCJhcHByb3ZlIiwiZXZhbHVhdGUiLCJVTkRFUlNUQU5ESU5HX0xFVkVMX1NUUklOR1MiLCJpY29uIiwidGl0bGUiLCJQcm92aWRlciIsInVuZGVmaW5lZCIsIm9wZW5lZEFpQXNzZXNzbWVudCIsImlzQWlBc3Nlc3NlZCIsInN0dWRlbnROYW1lIiwiYWlVbmRlcnN0YW5kaW5nTGV2ZWwiLCJsZWFybmluZ0dvYWxFeHBhbmRlZCIsInJlbmRlclN1Ym1pdHRlZEZlZWRiYWNrVGV4dGJveCIsImZlZWRiYWNrQXJlYSIsImV2aWRlbmNlTGV2ZWxMYWJlbCIsImlucHV0VGV4dGJveCIsImRpc2FibGVkIiwiZXZpZGVuY2VMZXZlbHMiLCJyYWRpb0J1dHRvbkNhbGxiYWNrIiwicmFkaW9CdXR0b25EYXRhIiwiVEFfUlVCUklDX0VWSURFTkNFX0xFVkVMX1NFTEVDVEVEIiwibmV3bHlTZWxlY3RlZEV2aWRlbmNlTGV2ZWwiLCJwcmV2aW91c2x5U2VsZWN0ZWRFdmlkZW5jZUxldmVsIiwiaXNBdXRvc2F2aW5nIiwidGlwcyIsInRpcHNGb3JFdmFsdWF0aW9uIiwibGVhcm5pbmdHb2FsVGlwcyIsIm1hcmtkb3duIiwicmVuZGVyQXV0b1NhdmVUZXh0Ym94Iiwib25DaGFuZ2UiLCJhdXRvc2F2ZU1lc3NhZ2UiLCJzYXZpbmciLCJzYXZlZFRvR2FsbGVyeSIsImZlZWRiYWNrU2F2ZUVycm9yIiwicHJvcFR5cGVzIiwibGVhcm5pbmdHb2FsU2hhcGUiLCJpc1JlcXVpcmVkIiwiUHJvcFR5cGVzIiwiYm9vbCIsInJlcG9ydGluZ0RhdGFTaGFwZSIsInN0dWRlbnRMZXZlbEluZm9TaGFwZSIsIm51bWJlciIsInN1Ym1pdHRlZEV2YWx1YXRpb25TaGFwZSIsImZ1bmMiLCJhaUV2YWx1YXRpb25TaGFwZSIsIkJvZHlGb3VyVGV4dCIsImNsYXNzbmFtZXMiLCJhaVRva2VuIiwiYWlUb2tlblRleHQiLCJFeHRyYVN0cm9uZ1RleHQiLCJ1c2VzQWkiLCJtb2R1bGUiLCJleHBvcnRzIiwiX3NoYXJlZENvbnN0YW50cyIsIl9MZWFybmluZ0dvYWwiLCJjb21wb25lbnQiLCJkZWZhdWx0TGVhcm5pbmdHb2FsIiwiUnVicmljVW5kZXJzdGFuZGluZ0xldmVscyIsIkVYVEVOU0lWRSIsInRlYWNoZXJEZXNjcmlwdGlvbiIsIkxJTUlURUQiLCJOT05FIiwiQWlEaXNhYmxlZEZlZWRiYWNrVW5hdmFpbGFibGUiLCJBaURpc2FibGVkRmVlZGJhY2tBdmFpbGFibGUiLCJBaUVuYWJsZWRGZWVkYmFja1VuYXZhaWxhYmxlIiwiQWlFbmFibGVkRmVlZGJhY2tBdmFpbGFibGUiLCJXaXRoVGlwc0ZlZWRiYWNrQXZhaWxhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==