(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[9778],{"./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js":module=>{module.exports=function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}},"./node_modules/@babel/runtime-corejs2/helpers/extends.js":(module,__unused_webpack_exports,__webpack_require__)=>{var _Object$assign=__webpack_require__("./node_modules/@babel/runtime-corejs2/core-js/object/assign.js");function _extends(){return module.exports=_extends=_Object$assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}module.exports=_extends},"./node_modules/@babel/runtime-corejs2/helpers/inheritsLoose.js":(module,__unused_webpack_exports,__webpack_require__)=>{var _Object$create=__webpack_require__("./node_modules/@babel/runtime-corejs2/core-js/object/create.js");module.exports=function _inheritsLoose(subClass,superClass){subClass.prototype=_Object$create(superClass.prototype),subClass.prototype.constructor=subClass,subClass.__proto__=superClass}},"./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js":module=>{module.exports=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}},"./node_modules/@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose.js":(module,__unused_webpack_exports,__webpack_require__)=>{var _Object$keys=__webpack_require__("./node_modules/@babel/runtime-corejs2/core-js/object/keys.js");module.exports=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=_Object$keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}},"./node_modules/@react-bootstrap/pagination/lib/Pagination.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";exports.__esModule=!0;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_classnames2=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_react2=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes2=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_elementType2=_interopRequireDefault(__webpack_require__("./node_modules/react-prop-types/lib/elementType.js")),_PaginationButton2=_interopRequireDefault(__webpack_require__("./node_modules/@react-bootstrap/pagination/lib/PaginationButton.js")),_bootstrapUtils=__webpack_require__("./node_modules/react-bootstrap/lib/utils/bootstrapUtils.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypes={activePage:_propTypes2.default.number,items:_propTypes2.default.number,maxButtons:_propTypes2.default.number,boundaryLinks:_propTypes2.default.bool,ellipsis:_propTypes2.default.oneOfType([_propTypes2.default.bool,_propTypes2.default.node]),first:_propTypes2.default.oneOfType([_propTypes2.default.bool,_propTypes2.default.node]),last:_propTypes2.default.oneOfType([_propTypes2.default.bool,_propTypes2.default.node]),prev:_propTypes2.default.oneOfType([_propTypes2.default.bool,_propTypes2.default.node]),next:_propTypes2.default.oneOfType([_propTypes2.default.bool,_propTypes2.default.node]),onSelect:_propTypes2.default.func,buttonComponentClass:_elementType2.default},Pagination=function(_React$Component){function Pagination(){return function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,Pagination),function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}(this,_React$Component.apply(this,arguments))}return function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}(Pagination,_React$Component),Pagination.prototype.renderPageButtons=function renderPageButtons(activePage,items,maxButtons,boundaryLinks,ellipsis,buttonProps){var pageButtons=[],startPage=void 0,endPage=void 0;maxButtons&&maxButtons<items?endPage=(startPage=Math.max(Math.min(activePage-Math.floor(maxButtons/2,10),items-maxButtons+1),1))+maxButtons-1:(startPage=1,endPage=items);for(var page=startPage;page<=endPage;++page)pageButtons.push(_react2.default.createElement(_PaginationButton2.default,_extends({},buttonProps,{key:page,eventKey:page,active:page===activePage}),page));return ellipsis&&boundaryLinks&&startPage>1&&(startPage>2&&pageButtons.unshift(_react2.default.createElement(_PaginationButton2.default,{key:"ellipsisFirst",disabled:!0,componentClass:buttonProps.componentClass},_react2.default.createElement("span",{"aria-label":"More"},!0===ellipsis?"…":ellipsis))),pageButtons.unshift(_react2.default.createElement(_PaginationButton2.default,_extends({},buttonProps,{key:1,eventKey:1,active:!1}),"1"))),ellipsis&&endPage<items&&((!boundaryLinks||endPage<items-1)&&pageButtons.push(_react2.default.createElement(_PaginationButton2.default,{key:"ellipsis",disabled:!0,componentClass:buttonProps.componentClass},_react2.default.createElement("span",{"aria-label":"More"},!0===ellipsis?"…":ellipsis))),boundaryLinks&&pageButtons.push(_react2.default.createElement(_PaginationButton2.default,_extends({},buttonProps,{key:items,eventKey:items,active:!1}),items))),pageButtons},Pagination.prototype.render=function render(){var _props=this.props,activePage=_props.activePage,items=_props.items,maxButtons=_props.maxButtons,boundaryLinks=_props.boundaryLinks,ellipsis=_props.ellipsis,first=_props.first,last=_props.last,prev=_props.prev,next=_props.next,onSelect=_props.onSelect,buttonComponentClass=_props.buttonComponentClass,className=_props.className,props=function _objectWithoutProperties(obj,keys){var target={};for(var i in obj)keys.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(obj,i)&&(target[i]=obj[i]);return target}(_props,["activePage","items","maxButtons","boundaryLinks","ellipsis","first","last","prev","next","onSelect","buttonComponentClass","className"]),_splitBsProps=(0,_bootstrapUtils.splitBsProps)(props),bsProps=_splitBsProps[0],elementProps=_splitBsProps[1],classes=(0,_bootstrapUtils.getClassSet)(bsProps),buttonProps={onSelect,componentClass:buttonComponentClass};return _react2.default.createElement("ul",_extends({},elementProps,{className:(0,_classnames2.default)(className,classes)}),first&&_react2.default.createElement(_PaginationButton2.default,_extends({},buttonProps,{eventKey:1,disabled:1===activePage}),_react2.default.createElement("span",{"aria-label":"First"},!0===first?"«":first)),prev&&_react2.default.createElement(_PaginationButton2.default,_extends({},buttonProps,{eventKey:activePage-1,disabled:1===activePage}),_react2.default.createElement("span",{"aria-label":"Previous"},!0===prev?"‹":prev)),this.renderPageButtons(activePage,items,maxButtons,boundaryLinks,ellipsis,buttonProps),next&&_react2.default.createElement(_PaginationButton2.default,_extends({},buttonProps,{eventKey:activePage+1,disabled:activePage>=items}),_react2.default.createElement("span",{"aria-label":"Next"},!0===next?"›":next)),last&&_react2.default.createElement(_PaginationButton2.default,_extends({},buttonProps,{eventKey:items,disabled:activePage>=items}),_react2.default.createElement("span",{"aria-label":"Last"},!0===last?"»":last)))},Pagination}(_react2.default.Component);Pagination.propTypes=propTypes,Pagination.defaultProps={activePage:1,items:1,maxButtons:0,first:!1,last:!1,prev:!1,next:!1,ellipsis:!0,boundaryLinks:!1},exports.default=(0,_bootstrapUtils.bsClass)("pagination",Pagination)},"./node_modules/@react-bootstrap/pagination/lib/PaginationButton.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";exports.__esModule=!0;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_classnames2=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_react2=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes2=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_elementType2=_interopRequireDefault(__webpack_require__("./node_modules/react-prop-types/lib/elementType.js")),_SafeAnchor2=_interopRequireDefault(__webpack_require__("./node_modules/react-bootstrap/lib/SafeAnchor.js")),_createChainedFunction2=_interopRequireDefault(__webpack_require__("./node_modules/react-bootstrap/lib/utils/createChainedFunction.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypes={componentClass:_elementType2.default,className:_propTypes2.default.string,eventKey:_propTypes2.default.any,onSelect:_propTypes2.default.func,disabled:_propTypes2.default.bool,active:_propTypes2.default.bool,onClick:_propTypes2.default.func},defaultProps={componentClass:_SafeAnchor2.default,active:!1,disabled:!1},PaginationButton=function(_React$Component){function PaginationButton(props,context){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,PaginationButton);var _this=function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}(this,_React$Component.call(this,props,context));return _this.handleClick=_this.handleClick.bind(_this),_this}return function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}(PaginationButton,_React$Component),PaginationButton.prototype.handleClick=function handleClick(event){var _props=this.props,disabled=_props.disabled,onSelect=_props.onSelect,eventKey=_props.eventKey;disabled||onSelect&&onSelect(eventKey,event)},PaginationButton.prototype.render=function render(){var _props2=this.props,Component=_props2.componentClass,active=_props2.active,disabled=_props2.disabled,onClick=_props2.onClick,className=_props2.className,style=_props2.style,props=function _objectWithoutProperties(obj,keys){var target={};for(var i in obj)keys.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(obj,i)&&(target[i]=obj[i]);return target}(_props2,["componentClass","active","disabled","onClick","className","style"]);return Component===_SafeAnchor2.default&&delete props.eventKey,delete props.onSelect,_react2.default.createElement("li",{className:(0,_classnames2.default)(className,{active,disabled}),style},_react2.default.createElement(Component,_extends({},props,{disabled,onClick:(0,_createChainedFunction2.default)(onClick,this.handleClick)})))},PaginationButton}(_react2.default.Component);PaginationButton.propTypes=propTypes,PaginationButton.defaultProps=defaultProps,exports.default=PaginationButton},"./node_modules/@react-bootstrap/pagination/lib/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";exports.__esModule=!0,exports.PaginationButton=exports.Pagination=void 0;var _Pagination3=_interopRequireDefault(__webpack_require__("./node_modules/@react-bootstrap/pagination/lib/Pagination.js")),_PaginationButton3=_interopRequireDefault(__webpack_require__("./node_modules/@react-bootstrap/pagination/lib/PaginationButton.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.Pagination=_Pagination3.default,exports.PaginationButton=_PaginationButton3.default},"./node_modules/react-bootstrap/lib/SafeAnchor.js":(module,exports,__webpack_require__)=>{"use strict";var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");exports.__esModule=!0,exports.default=void 0;var _extends2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime-corejs2/helpers/extends.js")),_objectWithoutPropertiesLoose2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose.js")),_inheritsLoose2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime-corejs2/helpers/inheritsLoose.js")),_assertThisInitialized2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_elementType=_interopRequireDefault(__webpack_require__("./node_modules/prop-types-extra/lib/elementType.js")),_createChainedFunction=_interopRequireDefault(__webpack_require__("./node_modules/react-bootstrap/lib/utils/createChainedFunction.js")),propTypes={href:_propTypes.default.string,onClick:_propTypes.default.func,onKeyDown:_propTypes.default.func,disabled:_propTypes.default.bool,role:_propTypes.default.string,tabIndex:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.string]),componentClass:_elementType.default};function isTrivialHref(href){return!href||"#"===href.trim()}var SafeAnchor=function(_React$Component){function SafeAnchor(props,context){var _this;return(_this=_React$Component.call(this,props,context)||this).handleClick=_this.handleClick.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this))),_this.handleKeyDown=_this.handleKeyDown.bind((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this))),_this}(0,_inheritsLoose2.default)(SafeAnchor,_React$Component);var _proto=SafeAnchor.prototype;return _proto.handleClick=function handleClick(event){var _this$props=this.props,disabled=_this$props.disabled,href=_this$props.href,onClick=_this$props.onClick;(disabled||isTrivialHref(href))&&event.preventDefault(),disabled?event.stopPropagation():onClick&&onClick(event)},_proto.handleKeyDown=function handleKeyDown(event){" "===event.key&&(event.preventDefault(),this.handleClick(event))},_proto.render=function render(){var _this$props2=this.props,Component=_this$props2.componentClass,disabled=_this$props2.disabled,onKeyDown=_this$props2.onKeyDown,props=(0,_objectWithoutPropertiesLoose2.default)(_this$props2,["componentClass","disabled","onKeyDown"]);return isTrivialHref(props.href)&&(props.role=props.role||"button",props.href=props.href||"#"),disabled&&(props.tabIndex=-1,props.style=(0,_extends2.default)({pointerEvents:"none"},props.style)),_react.default.createElement(Component,(0,_extends2.default)({},props,{onClick:this.handleClick,onKeyDown:(0,_createChainedFunction.default)(this.handleKeyDown,onKeyDown)}))},SafeAnchor}(_react.default.Component);SafeAnchor.propTypes=propTypes,SafeAnchor.defaultProps={componentClass:"a"};var _default=SafeAnchor;exports.default=_default,module.exports=exports.default},"./node_modules/react-bootstrap/lib/utils/StyleConfig.js":(__unused_webpack_module,exports)=>{"use strict";exports.__esModule=!0,exports.Style=exports.State=exports.DEVICE_SIZES=exports.SIZE_MAP=exports.Size=void 0;exports.Size={LARGE:"large",SMALL:"small",XSMALL:"xsmall"};exports.SIZE_MAP={large:"lg",medium:"md",small:"sm",xsmall:"xs",lg:"lg",md:"md",sm:"sm",xs:"xs"};exports.DEVICE_SIZES=["lg","md","sm","xs"];exports.State={SUCCESS:"success",WARNING:"warning",DANGER:"danger",INFO:"info"};exports.Style={DEFAULT:"default",PRIMARY:"primary",LINK:"link",INVERSE:"inverse"}},"./node_modules/react-bootstrap/lib/utils/bootstrapUtils.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js");exports.__esModule=!0,exports.prefix=prefix,exports.getClassSet=function getClassSet(props){var _classes,classes=((_classes={})[prefix(props)]=!0,_classes);if(props.bsSize){classes[prefix(props,_StyleConfig.SIZE_MAP[props.bsSize]||props.bsSize)]=!0}props.bsStyle&&(classes[prefix(props,props.bsStyle)]=!0);return classes},exports.splitBsProps=function splitBsProps(props){var elementProps={};return(0,_entries.default)(props).forEach((function(_ref){var propName=_ref[0],propValue=_ref[1];isBsProp(propName)||(elementProps[propName]=propValue)})),[getBsProps(props),elementProps]},exports.splitBsPropsAndOmit=function splitBsPropsAndOmit(props,omittedPropNames){var isOmittedProp={};omittedPropNames.forEach((function(propName){isOmittedProp[propName]=!0}));var elementProps={};return(0,_entries.default)(props).forEach((function(_ref2){var propName=_ref2[0],propValue=_ref2[1];isBsProp(propName)||isOmittedProp[propName]||(elementProps[propName]=propValue)})),[getBsProps(props),elementProps]},exports.addStyle=function addStyle(Component){for(var _len2=arguments.length,styleVariant=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)styleVariant[_key2-1]=arguments[_key2];bsStyles(styleVariant)(Component)},exports._curry=exports.bsSizes=exports.bsStyles=exports.bsClass=void 0;var _entries=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime-corejs2/core-js/object/entries.js")),_extends2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime-corejs2/helpers/extends.js")),_propTypes=(_interopRequireDefault(__webpack_require__("./node_modules/invariant/browser.js")),_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js"))),_StyleConfig=__webpack_require__("./node_modules/react-bootstrap/lib/utils/StyleConfig.js");function curry(fn){return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return"function"==typeof args[args.length-1]?fn.apply(void 0,args):function(Component){return fn.apply(void 0,args.concat([Component]))}}}function prefix(props,variant){var bsClass=(props.bsClass||"").trim();return null==bsClass&&invariant(!1),bsClass+(variant?"-"+variant:"")}var bsClass=curry((function(defaultClass,Component){var propTypes=Component.propTypes||(Component.propTypes={}),defaultProps=Component.defaultProps||(Component.defaultProps={});return propTypes.bsClass=_propTypes.default.string,defaultProps.bsClass=defaultClass,Component}));exports.bsClass=bsClass;var bsStyles=curry((function(styles,defaultStyle,Component){"string"!=typeof defaultStyle&&(Component=defaultStyle,defaultStyle=void 0);var existing=Component.STYLES||[],propTypes=Component.propTypes||{};styles.forEach((function(style){-1===existing.indexOf(style)&&existing.push(style)}));var propType=_propTypes.default.oneOf(existing);(Component.STYLES=existing,propType._values=existing,Component.propTypes=(0,_extends2.default)({},propTypes,{bsStyle:propType}),void 0!==defaultStyle)&&((Component.defaultProps||(Component.defaultProps={})).bsStyle=defaultStyle);return Component}));exports.bsStyles=bsStyles;var bsSizes=curry((function(sizes,defaultSize,Component){"string"!=typeof defaultSize&&(Component=defaultSize,defaultSize=void 0);var existing=Component.SIZES||[],propTypes=Component.propTypes||{};sizes.forEach((function(size){-1===existing.indexOf(size)&&existing.push(size)}));var values=[];existing.forEach((function(size){var mappedSize=_StyleConfig.SIZE_MAP[size];mappedSize&&mappedSize!==size&&values.push(mappedSize),values.push(size)}));var propType=_propTypes.default.oneOf(values);return propType._values=values,Component.SIZES=existing,Component.propTypes=(0,_extends2.default)({},propTypes,{bsSize:propType}),void 0!==defaultSize&&(Component.defaultProps||(Component.defaultProps={}),Component.defaultProps.bsSize=defaultSize),Component}));function getBsProps(props){return{bsClass:props.bsClass,bsSize:props.bsSize,bsStyle:props.bsStyle,bsRole:props.bsRole}}function isBsProp(propName){return"bsClass"===propName||"bsSize"===propName||"bsStyle"===propName||"bsRole"===propName}exports.bsSizes=bsSizes;var _curry=curry;exports._curry=_curry},"./node_modules/react-bootstrap/lib/utils/createChainedFunction.js":(module,exports)=>{"use strict";exports.__esModule=!0,exports.default=void 0;var _default=function createChainedFunction(){for(var _len=arguments.length,funcs=new Array(_len),_key=0;_key<_len;_key++)funcs[_key]=arguments[_key];return funcs.filter((function(f){return null!=f})).reduce((function(acc,f){if("function"!=typeof f)throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return null===acc?f:function chainedFunction(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];acc.apply(this,args),f.apply(this,args)}}),null)};exports.default=_default,module.exports=exports.default}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,