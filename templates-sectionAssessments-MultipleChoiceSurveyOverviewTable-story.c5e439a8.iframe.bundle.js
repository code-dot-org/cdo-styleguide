(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1598],{"./src/fontConstants.js":module=>{module.exports={"metropolis-font":"'Metropolis', sans-serif","main-font":"'Metropolis', sans-serif","thin-font-weight":"100","extra-light-font-weight":"200","light-font-weight":"300","regular-font-weight":"400","medium-font-weight":"500","semi-bold-font-weight":"600","bold-font-weight":"700","extra-bold-font-weight":"800","black-font-weight":"900","main-font-thin":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"normal"},"main-font-thin-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"italic"},"main-font-extra-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"normal"},"main-font-extra-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"italic"},"main-font-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"normal"},"main-font-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"italic"},"main-font-regular":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"normal"},"main-font-regular-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"italic"},"main-font-medium":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"normal"},"main-font-medium-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"italic"},"main-font-semi-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"normal"},"main-font-semi-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"italic"},"main-font-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"normal"},"main-font-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"italic"},"main-font-extra-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"normal"},"main-font-extra-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"italic"},"main-font-black":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"normal"},"main-font-black-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"italic"},"barlowSemiCondensed-semibold":"'Barlow Semi Condensed Semibold', sans-serif","barlowSemiCondensed-medium":"'Barlow Semi Condensed Medium', sans-serif","code-font":"'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace","font-awesome-core-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css'","font-awesome-brands-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css'","font-awesome-solid-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css'","font-awesome-regular-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css'","font-awesome-v4-fonts-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css'","font-awesome-v4-shims-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css'"}},"./src/styleConstants.js":module=>{module.exports={"workspace-headers-height":30,"resize-bar-width":13,"delete-opacity":"0.5","content-width":970}},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_constants=__webpack_require__("./src/constants.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/templates/SafeMarkdown.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _redactableMarkdown=_interopRequireDefault(__webpack_require__("./node_modules/@code-dot-org/redactable-markdown/dist/main.js")),_remarkPlugins=__webpack_require__("./node_modules/@code-dot-org/remark-plugins/src/index.js"),_github=_interopRequireDefault(__webpack_require__("./node_modules/hast-util-sanitize/lib/github.json")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_rehypeRaw=_interopRequireDefault(__webpack_require__("./node_modules/rehype-raw/index.js")),_rehypeReact=_interopRequireDefault(__webpack_require__("./node_modules/rehype-react/index.js")),_rehypeSanitize=_interopRequireDefault(__webpack_require__("./node_modules/rehype-sanitize/index.js")),_remarkRehype=_interopRequireDefault(__webpack_require__("./node_modules/remark-rehype/index.js")),_externalLinks=_interopRequireDefault(__webpack_require__("./src/templates/plugins/externalLinks.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SafeMarkdown=function(_React$Component){function SafeMarkdown(){return _React$Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SafeMarkdown,_React$Component),SafeMarkdown.prototype.render=function render(){var rendered=(this.props.openExternalLinksInNewTab?markdownToReactExternalLinks:markdownToReact).processSync(this.props.markdown).contents,markdownProps={};return this.props.className&&(markdownProps.className=this.props.className),rendered&&"div"===rendered.type&&!Object.keys(markdownProps).length?rendered:_react.default.createElement("div",markdownProps,rendered)},SafeMarkdown}(_react.default.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(SafeMarkdown,"propTypes",{markdown:_propTypes.default.string.isRequired,openExternalLinksInNewTab:_propTypes.default.bool,className:_propTypes.default.string});var schema=Object.assign({},_github.default);schema.attributes.img.push("height","width"),schema.tagNames.push("span"),schema.attributes.span=["dataUrl","className"],schema.attributes["*"].push("style","className"),schema.attributes.b=["dataId"],schema.clobber=[];var blocklyTags=["block","functional_input","mutation","next","statement","title","field","value","xml"];schema.tagNames=schema.tagNames.concat(blocklyTags);var blocklyComponentWrappers={};blocklyTags.forEach((function(tag){schema.attributes[tag]=["block_text","id","inline","name","type"],blocklyComponentWrappers[tag]=function(props){var BlocklyElement=tag;return _react.default.createElement(BlocklyElement,_extends({is:tag},props))}}));var markdownToReact=_redactableMarkdown.default.create().getParser().use([_remarkPlugins.clickableText,_remarkPlugins.expandableImages,_remarkPlugins.visualCodeBlock,_remarkPlugins.xmlAsTopLevelBlock,_remarkPlugins.details]).use(_remarkRehype.default,{allowDangerousHTML:!0}).use(_rehypeRaw.default).use(_rehypeSanitize.default,schema).use(_rehypeReact.default,{createElement:_react.default.createElement,components:blocklyComponentWrappers}),markdownToReactExternalLinks=markdownToReact().use(_externalLinks.default,{links:"all"});exports.default=SafeMarkdown;module.exports=exports.default},"./src/templates/plugins/externalLinks.js":(__unused_webpack_module,exports)=>{"use strict";function isExternalLink(url){return!/https?:\/\/([^.]+\.)*code.org(:[0-9]+)?\//.test(function fullyQualified(path){return(a=a||document.createElement("a")).href=path,a.href}(url))}var a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function externalLinks(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},tokenizers=this.Parser.prototype.inlineTokenizers,original=tokenizers.link,all="all"===options.links;tokenizers.link=function(eat,value,silent){var link=original.call(this,eat,value,silent);if(link&&"link"===link.type&&(all||isExternalLink(link.url))){link.data=link.data||{},link.data.hProperties=link.data.hProperties||{};var props=link.data.hProperties;props.target=props.target||"_blank",props.rel="noreferrer noopener"}return link},tokenizers.link.locator=original.locator},exports.isExternalLink=isExternalLink},"./src/templates/sectionAssessments/MultipleChoiceSurveyOverviewTable.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.COLUMNS=void 0;var _orderBy=_interopRequireDefault(__webpack_require__("./node_modules/lodash/orderBy.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),sort=_interopRequireWildcard(__webpack_require__("./node_modules/sortabular/dist/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_tableConstants=__webpack_require__("./src/templates/tables/tableConstants.js"),_wrapped_sortable=_interopRequireDefault(__webpack_require__("./src/templates/tables/wrapped_sortable.js")),_assessmentDataShapes=__webpack_require__("./src/templates/sectionAssessments/assessmentDataShapes.js"),_MultipleChoiceSurveyQuestionDialog=_interopRequireDefault(__webpack_require__("./src/templates/sectionAssessments/MultipleChoiceSurveyQuestionDialog.jsx")),_PercentAnsweredCell=_interopRequireDefault(__webpack_require__("./src/templates/sectionAssessments/PercentAnsweredCell.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var COLUMNS=exports.COLUMNS={QUESTION:0},answerColumnsFormatter=function answerColumnsFormatter(percentAnswered,_ref){var rowData=_ref.rowData,columnIndex=_ref.columnIndex,property=(_ref.rowIndex,_ref.property),cell=rowData.answers[columnIndex-1],percentValue=-1;return"notAnswered"===property?percentValue=rowData.notAnswered:cell&&(percentValue=cell.percentAnswered),_react.default.createElement(_PercentAnsweredCell.default,{id:rowData.id,percentValue,isSurvey:!0,mainLayoutStyle:styles.answerColumnCellContent,valueLayoutStyle:{}})},MultipleChoiceSurveyOverviewTable=function(_Component){function MultipleChoiceSurveyOverviewTable(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"state",_defineProperty(_defineProperty({},COLUMNS.QUESTION,{direction:"desc",position:0}),"selectedQuestionIndex",-1)),_defineProperty(_this,"getSortingColumns",(function(){return _this.state.sortingColumns||{}})),_defineProperty(_this,"onSort",(function(selectedColumn){_this.setState({sortingColumns:sort.byColumn({sortingColumns:_this.state.sortingColumns,sortingOrder:{FIRST:"asc",asc:"desc",desc:"asc"},selectedColumn})})})),_defineProperty(_this,"selectQuestion",(function(index){return _this.setState({selectedQuestionIndex:index})})),_defineProperty(_this,"closeDialog",(function(){return _this.setState({selectedQuestionIndex:-1})})),_defineProperty(_this,"questionFormatter",(function(question,_ref2){var rowData=_ref2.rowData;_ref2.columnIndex,_ref2.rowIndex,_ref2.property;return _react.default.createElement("div",null,_react.default.createElement("a",{style:styles.link,onClick:function onClick(){return _this.selectQuestion(rowData.questionNumber-1)}},"".concat(rowData.questionNumber,". ").concat(question)))})),_defineProperty(_this,"getNotAnsweredColumn",(function(){return{property:"notAnswered",header:{label:_locale.default.none(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.answerColumnHeader)}},cell:{formatters:[answerColumnsFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.answerColumnCell)}}}})),_defineProperty(_this,"getAnswerColumn",(function(columnLabel){return{property:"percentAnswered",header:{label:columnLabel,props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.answerColumnHeader)}},cell:{formatters:[answerColumnsFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.answerColumnCell)}}}})),_defineProperty(_this,"getQuestionColumn",(function(sortable,numAnswers){return{property:"question",header:{label:_locale.default.question(),props:{style:_tableConstants.tableLayoutStyles.headerCell}},cell:{formatters:[_this.questionFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.questionCell)}}}})),_defineProperty(_this,"getColumns",(function(sortable){var columnLabelNames=_toConsumableArray(_this.props.multipleChoiceSurveyData).sort((function(question1,question2){return question1.answers.length-question2.answers.length})).pop().answers.map((function(answer){return _this.getAnswerColumn(answer.multipleChoiceOption)})),numAnswerColumns=columnLabelNames.length+1;return[_this.getQuestionColumn(sortable,numAnswerColumns)].concat(_toConsumableArray(columnLabelNames),[_this.getNotAnsweredColumn()])})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MultipleChoiceSurveyOverviewTable,_Component);var _proto=MultipleChoiceSurveyOverviewTable.prototype;return _proto.onBodyRow=function onBodyRow(row,_ref3){_ref3.rowIndex,_ref3.rowKey;return{style:{height:35}}},_proto.render=function render(){var sortable=(0,_wrapped_sortable.default)(this.getSortingColumns,this.onSort,_tableConstants.sortableOptions),columns=this.getColumns(sortable),sortingColumns=this.getSortingColumns(),sortedRows=sort.sorter({columns,sortingColumns,sort:_orderBy.default})(this.props.multipleChoiceSurveyData),questionIndex=this.state.selectedQuestionIndex,questionData=this.props.multipleChoiceSurveyData[questionIndex];return _react.default.createElement("div",null,questionIndex>=0&&_react.default.createElement(_MultipleChoiceSurveyQuestionDialog.default,{isDialogOpen:!0,closeDialog:this.closeDialog,questionData}),_react.default.createElement(Table.Provider,{columns,style:styles.table},_react.default.createElement(Table.Header,null),_react.default.createElement(Table.Body,{rows:sortedRows,rowKey:"id",onRow:this.onBodyRow})))},MultipleChoiceSurveyOverviewTable}(_react.Component);_defineProperty(MultipleChoiceSurveyOverviewTable,"propTypes",{multipleChoiceSurveyData:_propTypes.default.arrayOf(_assessmentDataShapes.multipleChoiceDataPropType)});var styles={table:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.table),{},{tableLayout:"fixed"}),answerColumnHeader:{width:40,textAlign:"center",height:35},answerColumnCell:{padding:0,height:"100%"},answerColumnCellContent:{display:"flex",justifyContent:"center",alignItems:"center",height:"100%"},questionCell:{height:35},link:{color:_color.default.teal}};exports.default=MultipleChoiceSurveyOverviewTable},"./src/templates/sectionAssessments/MultipleChoiceSurveyQuestionDialog.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_SafeMarkdown=_interopRequireDefault(__webpack_require__("./src/templates/SafeMarkdown.jsx")),_DialogFooter=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/DialogFooter.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_assessmentDataShapes=__webpack_require__("./src/templates/sectionAssessments/assessmentDataShapes.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var MultipleChoiceSurveyQuestionDialog=function(_Component){function MultipleChoiceSurveyQuestionDialog(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MultipleChoiceSurveyQuestionDialog,_Component),MultipleChoiceSurveyQuestionDialog.prototype.render=function render(){var questionData=this.props.questionData;return _react.default.createElement(_BaseDialog.default,{useUpdatedStyles:!0,isOpen:this.props.isDialogOpen,style:styles.dialog,handleClose:this.props.closeDialog},_react.default.createElement("div",null,_react.default.createElement("h2",null,_locale.default.questionDetails()),_react.default.createElement("div",{style:styles.instructions},_react.default.createElement(_SafeMarkdown.default,{markdown:questionData.question})),questionData.answers&&questionData.answers.length>0&&_react.default.createElement("div",null,questionData.answers.map((function(answer,index){return _react.default.createElement("div",{key:index,style:styles.answerBlock},_react.default.createElement("div",{style:styles.answerLetter},answer.multipleChoiceOption),_react.default.createElement("div",{style:styles.answers}),_react.default.createElement(_SafeMarkdown.default,{markdown:answer.text+" ("+answer.percentAnswered+"%)"}),_react.default.createElement("div",{style:{clear:"both"}}))})))),_react.default.createElement(_DialogFooter.default,null,_react.default.createElement(_Button.default,{text:_locale.default.done(),onClick:this.props.closeDialog,color:_Button.default.ButtonColor.gray})))},MultipleChoiceSurveyQuestionDialog}(_react.Component);!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(MultipleChoiceSurveyQuestionDialog,"propTypes",{isDialogOpen:_propTypes.default.bool.isRequired,closeDialog:_propTypes.default.func.isRequired,questionData:_assessmentDataShapes.multipleChoiceDataPropType.isRequired});var styles={dialog:{paddingLeft:20,paddingRight:20,paddingBottom:20},instructions:{marginTop:20},answers:{float:"left",width:550},icon:{color:_color.default.level_perfect},iconSpace:{width:40,float:"left"},answerBlock:{width:"100%"},answerLetter:{width:30,float:"left",fontWeight:"bold"}};exports.default=MultipleChoiceSurveyQuestionDialog;module.exports=exports.default},"./src/templates/sectionAssessments/PercentAnsweredCell.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var PercentAnsweredCell=function(_Component){function PercentAnsweredCell(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"getBackgroundColor",(function(percentValue){var _this$props=_this.props,isCorrectAnswer=_this$props.isCorrectAnswer,isSurvey=_this$props.isSurvey,opacity=function calculateOpacity(answered){return(answered+10)/100}(percentValue);return isCorrectAnswer||isSurvey?"rgba(159, 212, 159, ".concat(opacity,")"):"rgba(255, 99, 71, ".concat(opacity,")")})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(PercentAnsweredCell,_Component),PercentAnsweredCell.prototype.render=function render(){var _this$props2=this.props,percentValue=_this$props2.percentValue,isCorrectAnswer=_this$props2.isCorrectAnswer,displayAnswer=_this$props2.displayAnswer;if(displayAnswer)return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.value},displayAnswer),_react.default.createElement("div",{style:styles.icon},isCorrectAnswer&&_react.default.createElement(_FontAwesome.default,{icon:"check-circle",style:styles.icon})));var backgroundCSS={backgroundColor:this.getBackgroundColor(percentValue)};return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},this.props.mainLayoutStyle),backgroundCSS)},_react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.value),this.props.valueLayoutStyle)},percentValue>=0&&_react.default.createElement("span",null,"".concat(percentValue,"%")),percentValue<0&&_react.default.createElement("span",null,"-")),_react.default.createElement("div",{style:styles.icon},isCorrectAnswer&&_react.default.createElement(_FontAwesome.default,{icon:"check-circle",style:styles.icon})))},PercentAnsweredCell}(_react.Component);_defineProperty(PercentAnsweredCell,"propTypes",{percentValue:_propTypes.default.number.isRequired,isCorrectAnswer:_propTypes.default.bool,displayAnswer:_propTypes.default.string,isSurvey:_propTypes.default.bool,mainLayoutStyle:_propTypes.default.object,valueLayoutStyle:_propTypes.default.object});var styles={main:{border:"none",display:"flex",justifyContent:"space-between",flexDirection:"row",alignItems:"center",boxSizing:"border-box",height:"100%",padding:10},icon:{color:_color.default.level_perfect},value:_objectSpread({color:_color.default.charcoal},_fontConstants.default["main-font-semi-bold"])};PercentAnsweredCell.defaultProps={percentValue:-1,mainLayoutStyle:styles.main,valueLayoutStyle:{marginRight:10}};exports.default=PercentAnsweredCell;module.exports=exports.default},"./src/templates/sectionAssessments/assessmentDataShapes.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.studentWithMatchResponsesPropType=exports.studentWithMCResponsesPropType=exports.studentOverviewDataPropType=exports.studentMatchResponsePropType=exports.studentMCResponsePropType=exports.optionDataPropTypeMatch=exports.multipleChoiceQuestionPropType=exports.multipleChoiceDataPropType=exports.matchQuestionPropType=exports.matchDetailsQuestionPropType=exports.matchDataPropType=exports.freeResponsesDataPropType=exports.QUESTION_CHARACTER_LIMIT=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js"));exports.freeResponsesDataPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,response:_propTypes.default.string});var multipleChoiceAnswerDataPropType=_propTypes.default.shape({multipleChoiceOption:_propTypes.default.string,numAnswered:_propTypes.default.number,isCorrect:_propTypes.default.bool,percentAnswered:_propTypes.default.number,text:_propTypes.default.string}),studentMCResponsePropType=(exports.multipleChoiceDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number,answers:_propTypes.default.arrayOf(multipleChoiceAnswerDataPropType),totalAnswered:_propTypes.default.number.isRequired,notAnswered:_propTypes.default.number.isRequired}),exports.studentMCResponsePropType=_propTypes.default.shape({isCorrect:_propTypes.default.bool,responses:_propTypes.default.string})),answerMatchDataPropType=(exports.studentWithMCResponsesPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,studentResponses:_propTypes.default.arrayOf(studentMCResponsePropType)}),exports.multipleChoiceQuestionPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,correctAnswer:_propTypes.default.string.isRequired}),exports.studentOverviewDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,name:_propTypes.default.string.isRequired,numMultipleChoiceCorrect:_propTypes.default.number,numMultipleChoice:_propTypes.default.number,numMatchCorrect:_propTypes.default.number,numMatch:_propTypes.default.number,submissionTimeStamp:_propTypes.default.instanceOf(Date).isRequired,isSubmitted:_propTypes.default.bool.isRequired,inProgress:_propTypes.default.bool.isRequired,url:_propTypes.default.string}),_propTypes.default.shape({answer:_propTypes.default.string,isCorrect:_propTypes.default.bool,numAnswered:_propTypes.default.number})),optionDataPropTypeMatch=exports.optionDataPropTypeMatch=_propTypes.default.shape({option:_propTypes.default.string,totalAnswered:_propTypes.default.number,notAnswered:_propTypes.default.number,id:_propTypes.default.number,answers:_propTypes.default.arrayOf(answerMatchDataPropType)}),studentMatchResponsePropType=(exports.matchDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number,options:_propTypes.default.arrayOf(optionDataPropTypeMatch)}),exports.matchDetailsQuestionPropType=_propTypes.default.shape({question:_propTypes.default.string.isRequired,questionType:_propTypes.default.string,answers:_propTypes.default.array,options:_propTypes.default.array}),exports.studentMatchResponsePropType=_propTypes.default.shape({responses:_propTypes.default.array}));exports.studentWithMatchResponsesPropType=_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,studentResponses:_propTypes.default.arrayOf(studentMatchResponsePropType)}),exports.matchQuestionPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,question:_propTypes.default.string.isRequired,questionNumber:_propTypes.default.number.isRequired,answers:_propTypes.default.array,options:_propTypes.default.array}),exports.QUESTION_CHARACTER_LIMIT=110},"./src/templates/tables/tableConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tableLayoutStyles=exports.sortableOptions=exports.plTableLayoutStyles=exports.NAME_CELL_INPUT_WIDTH=void 0;var _fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_styleConstants=_interopRequireDefault(__webpack_require__("./src/styleConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.tableLayoutStyles={tableText:{textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"},table:{borderWidth:1,borderStyle:"solid",borderColor:_color.default.border_gray,width:_styleConstants.default["content-width"],backgroundColor:_color.default.table_light_row},cell:{maxWidth:200,border:"1px solid",borderColor:_color.default.border_light_gray,padding:10,fontSize:14},headerCell:{backgroundColor:_color.default.table_header,fontWeight:"bold",borderColor:_color.default.border_light_gray,borderStyle:"solid",borderBottomWidth:1,borderTopWidth:0,borderLeftWidth:0,borderRightWidth:1,paddingTop:20,paddingBottom:20,color:_color.default.charcoal,textAlign:"inherit"},link:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,textDecoration:"none"}),unsortableHeader:{paddingLeft:25},unsortableHeaderRTL:{paddingRight:25}},exports.plTableLayoutStyles={link:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,color:_color.default.neutral_dark,textDecoration:"underline"}),sectionCodeLink:_objectSpread(_objectSpread({},_fontConstants.default["main-font-semi-bold"]),{},{fontSize:14,color:_color.default.brand_secondary_default}),currentUnit:{marginTop:10,fontSize:14},colButton:{paddingTop:20,paddingLeft:20,paddingBottom:20,width:40},participantTypeCell:{fontSize:14},leaveButton:{fontSize:14}},exports.sortableOptions={default:{color:"rgba(0, 0, 0, 0.2 )"}},exports.NAME_CELL_INPUT_WIDTH=160},"./src/templates/tables/wrapped_sortable.js":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),sort=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/sortabular/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_excluded=["className"];function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}exports.default=function wrappedSortable(getSortingColumns,onSort){var styles=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},basicSortable=sort.sort({getSortingColumns,onSort});return function(label,columnInfo){var _basicSortable=basicSortable(label,columnInfo),newClassName=_basicSortable.className,newProps=_objectWithoutProperties(_basicSortable,_excluded),sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort",className:"fa-fw",style:styles.default});/sort-asc/.test(newClassName)?sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-asc",className:"fa-fw",style:styles.sortAsc}):/sort-desc/.test(newClassName)&&(sortIcon=_react.default.createElement(_FontAwesome.default,{icon:"sort-desc",className:"fa-fw",style:styles.sortDesc}));return _objectSpread(_objectSpread({},newProps),{},{style:Object.assign({},{cursor:"pointer"}),children:_react.default.createElement("span",{style:styles.container},_react.default.createElement("span",{key:"icon",style:{whiteSpace:"nowrap"}},sortIcon),_react.default.createElement("span",{key:"label"},label))})}};module.exports=exports.default},"./src/templates/teacherDashboard/DialogFooter.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var style={aboveFooter:{height:"90px"},footer:{position:"absolute",height:"100px",padding:"0 20px",left:"0",right:"0",bottom:"0",background:"white",zIndex:"500"},buttonRow:{display:"flex",flexFlow:"row",justifyContent:"space-between"},rightAlign:{justifyContent:"flex-end"}};_defineProperty(exports.default=function(_Component){function DialogFooter(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(DialogFooter,_Component),DialogFooter.prototype.render=function render(){var buttonRowStyle=this.props.rightAlign?_objectSpread(_objectSpread({},style.buttonRow),style.rightAlign):style.buttonRow;return _react.default.createElement("div",null,_react.default.createElement("div",{style:style.aboveFooter}),_react.default.createElement("div",{style:style.footer},_react.default.createElement("hr",null),_react.default.createElement("div",{style:buttonRowStyle},this.props.children)))},DialogFooter}(_react.Component),"propTypes",{rightAlign:_propTypes.default.bool,children:_propTypes.default.any}),module.exports=exports.default},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#E0F8F9",brand_primary_default:"#009EB0",brand_primary_dark:"#007785",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6C468A",brand_accent_default:"#ED6060",brand_teal_5:"#DFF2F4",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAECEF",neutral_dark20:"#D1D4D8",neutral_dark30:"#BEC2C7",neutral_dark40:"#ABB0B6",neutral_dark50:"#989EA5",neutral_dark60:"#858C94",neutral_dark70:"#727A83",neutral_dark80:"#5F6872",neutral_dark90:"#4C5661",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",clever_brand_color:"#1464FF",light_primary_100:"#BFE4E8",light_primary_500:"#0093A4",light_primary_700:"#007785",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6C468A",light_gray_50:"#F7F8FA",light_gray_100:"#EAECEF",light_gray_200:"#D1D4D8",light_gray_300:"#BEC2C7",light_gray_400:"#ABB0B6",light_gray_500:"#989EA5",light_gray_600:"#858C94",light_gray_700:"#727A83",light_gray_800:"#5F6872",light_gray_900:"#4C5661",light_gray_950:"#394450",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_affirmative_700:"#2D742D",light_negative_100:"#FBE0DD",light_negative_500:"#E5311A",light_negative_700:"#B24949",light_caution_100:"#FEF7DF",light_caution_500:"#F9CB28",light_caution_700:"#C7A220",light_accent_100:"#FAD7D7",light_accent_500:"#ED6060",light_accent_700:"#D84C4C",light_aqua_100:"#CEFFFD",light_aqua_500:"#3CFFF8",light_aqua_700:"#30CCC6",light_orange_100:"#FFEDCC",light_orange_500:"#FFA400",light_orange_700:"#CC8300",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_info_700:"#1375B6",light_white:"#FFFFFF",light_black:"#292F36",light_black_opacity_90:"rgba(41, 47, 54, 0.90)","light_black_opacity-80":"rgba(41, 47, 54, 0.80)","light_black_opacity-70":"rgba(41, 47, 54, 0.70)","light_black_opacity-60":"rgba(41, 47, 54, 0.60)","light_black_opacity-50":"rgba(41, 47, 54, 0.50)","light_black_opacity-40":"rgba(41, 47, 54, 0.40)","light_black_opacity-30":"rgba(41, 47, 54, 0.30)","light_black_opacity-20":"rgba(41, 47, 54, 0.20)","light_black_opacity-10":"rgba(41, 47, 54, 0.10)"}},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/lodash/_baseEach.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseForOwn=__webpack_require__("./node_modules/lodash/_baseForOwn.js"),baseEach=__webpack_require__("./node_modules/lodash/_createBaseEach.js")(baseForOwn);module.exports=baseEach},"./node_modules/lodash/_baseMap.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseEach=__webpack_require__("./node_modules/lodash/_baseEach.js"),isArrayLike=__webpack_require__("./node_modules/lodash/isArrayLike.js");module.exports=function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];return baseEach(collection,(function(value,key,collection){result[++index]=iteratee(value,key,collection)})),result}},"./node_modules/lodash/_baseOrderBy.js":(module,__unused_webpack_exports,__webpack_require__)=>{var arrayMap=__webpack_require__("./node_modules/lodash/_arrayMap.js"),baseGet=__webpack_require__("./node_modules/lodash/_baseGet.js"),baseIteratee=__webpack_require__("./node_modules/lodash/_baseIteratee.js"),baseMap=__webpack_require__("./node_modules/lodash/_baseMap.js"),baseSortBy=__webpack_require__("./node_modules/lodash/_baseSortBy.js"),baseUnary=__webpack_require__("./node_modules/lodash/_baseUnary.js"),compareMultiple=__webpack_require__("./node_modules/lodash/_compareMultiple.js"),identity=__webpack_require__("./node_modules/lodash/identity.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js");module.exports=function baseOrderBy(collection,iteratees,orders){iteratees=iteratees.length?arrayMap(iteratees,(function(iteratee){return isArray(iteratee)?function(value){return baseGet(value,1===iteratee.length?iteratee[0]:iteratee)}:iteratee})):[identity];var index=-1;iteratees=arrayMap(iteratees,baseUnary(baseIteratee));var result=baseMap(collection,(function(value,key,collection){return{criteria:arrayMap(iteratees,(function(iteratee){return iteratee(value)})),index:++index,value}}));return baseSortBy(result,(function(object,other){return compareMultiple(object,other,orders)}))}},"./node_modules/lodash/_baseSortBy.js":module=>{module.exports=function baseSortBy(array,comparer){var length=array.length;for(array.sort(comparer);length--;)array[length]=array[length].value;return array}},"./node_modules/lodash/_compareAscending.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isSymbol=__webpack_require__("./node_modules/lodash/isSymbol.js");module.exports=function compareAscending(value,other){if(value!==other){var valIsDefined=void 0!==value,valIsNull=null===value,valIsReflexive=value==value,valIsSymbol=isSymbol(value),othIsDefined=void 0!==other,othIsNull=null===other,othIsReflexive=other==other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive)return 1;if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive)return-1}return 0}},"./node_modules/lodash/_compareMultiple.js":(module,__unused_webpack_exports,__webpack_require__)=>{var compareAscending=__webpack_require__("./node_modules/lodash/_compareAscending.js");module.exports=function compareMultiple(object,other,orders){for(var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;++index<length;){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result)return index>=ordersLength?result:result*("desc"==orders[index]?-1:1)}return object.index-other.index}},"./node_modules/lodash/_createBaseEach.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isArrayLike=__webpack_require__("./node_modules/lodash/isArrayLike.js");module.exports=function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(null==collection)return collection;if(!isArrayLike(collection))return eachFunc(collection,iteratee);for(var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);(fromRight?index--:++index<length)&&!1!==iteratee(iterable[index],index,iterable););return collection}}},"./node_modules/lodash/orderBy.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseOrderBy=__webpack_require__("./node_modules/lodash/_baseOrderBy.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js");module.exports=function orderBy(collection,iteratees,orders,guard){return null==collection?[]:(isArray(iteratees)||(iteratees=null==iteratees?[]:[iteratees]),isArray(orders=guard?void 0:orders)||(orders=null==orders?[]:[orders]),baseOrderBy(collection,iteratees,orders))}},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/sectionAssessments/MultipleChoiceSurveyOverviewTable.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.AssessmentWith7Answers=exports.AssessmentWith3Answers=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_MultipleChoiceSurveyOverviewTable=_interopRequireDefault(__webpack_require__("./src/templates/sectionAssessments/MultipleChoiceSurveyOverviewTable.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default={component:_MultipleChoiceSurveyOverviewTable.default};var Template=function Template(args){return _react.default.createElement(_MultipleChoiceSurveyOverviewTable.default,args)},multipleChoiceSurveyData=[{id:1,question:"I am very good at school",questionNumber:1,answers:[{multipleChoiceOption:_locale.default.answerOptionA(),percentAnswered:40},{multipleChoiceOption:_locale.default.answerOptionB(),percentAnswered:20},{multipleChoiceOption:_locale.default.answerOptionC(),percentAnswered:20},{multipleChoiceOption:_locale.default.answerOptionD(),percentAnswered:20}],notAnswered:10,totalAnswered:20},{id:2,question:"I enjoy pair programming",questionNumber:2,answers:[{multipleChoiceOption:_locale.default.answerOptionA(),percentAnswered:30},{multipleChoiceOption:_locale.default.answerOptionB(),percentAnswered:10},{multipleChoiceOption:_locale.default.answerOptionC(),percentAnswered:10},{multipleChoiceOption:_locale.default.answerOptionD(),percentAnswered:10},{multipleChoiceOption:_locale.default.answerOptionE(),percentAnswered:20},{multipleChoiceOption:_locale.default.answerOptionF(),percentAnswered:10}],notAnswered:30,totalAnswered:20},{id:3,question:"How do you prepare for taking a test?",questionNumber:3,answers:[{multipleChoiceOption:_locale.default.answerOptionA(),percentAnswered:50},{multipleChoiceOption:_locale.default.answerOptionB(),percentAnswered:15},{multipleChoiceOption:_locale.default.answerOptionC(),percentAnswered:20},{multipleChoiceOption:_locale.default.answerOptionD(),percentAnswered:5},{multipleChoiceOption:_locale.default.answerOptionE(),percentAnswered:5}],notAnswered:5,totalAnswered:20},{id:4,question:"Do you feel more or less prepared to answer questions about the topics that interest you?",questionNumber:4,answers:[{multipleChoiceOption:_locale.default.answerOptionA(),percentAnswered:15},{multipleChoiceOption:_locale.default.answerOptionB(),percentAnswered:18},{multipleChoiceOption:_locale.default.answerOptionC(),percentAnswered:10},{multipleChoiceOption:_locale.default.answerOptionD(),percentAnswered:9},{multipleChoiceOption:_locale.default.answerOptionE(),percentAnswered:5},{multipleChoiceOption:_locale.default.answerOptionF(),percentAnswered:32},{multipleChoiceOption:_locale.default.answerOptionG(),percentAnswered:5}],notAnswered:0,totalAnswered:20}];(exports.AssessmentWith7Answers=Template.bind({})).args={multipleChoiceSurveyData},(exports.AssessmentWith3Answers=Template.bind({})).args={multipleChoiceSurveyData:multipleChoiceSurveyData.map((function(question){return _objectSpread(_objectSpread({},question),{},{answers:question.answers.slice(0,2)})}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,