/*! For license information please see templates-studioHomepages-JoinSection-story.c3783f3f.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[6252],{"./src/styleConstants.js":module=>{module.exports={"workspace-headers-height":30,"resize-bar-width":13,"delete-opacity":"0.5","content-width":970}},"./src/templates/studioHomepages/JoinSection.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedJoinSection=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_Button=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/Button.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_styleConstants=_interopRequireDefault(__webpack_require__("./src/styleConstants.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var INITIAL_STATE={sectionCode:""},JoinSection=function(_React$Component){function JoinSection(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",_objectSpread({},INITIAL_STATE)),_defineProperty(_this,"fetchCaptchaInfo",(function(){_jquery.default.get({url:"/api/v1/sections/require_captcha",dataType:"json"}).done((function(data){var key=data.key;_this.setState({key})}))})),_defineProperty(_this,"handleChange",(function(event){return _this.setState({sectionCode:event.target.value})})),_defineProperty(_this,"handleKeyUp",(function(event){"Enter"===event.key?_this.joinSection():"Escape"===event.key&&_this.setState(INITIAL_STATE)})),_defineProperty(_this,"joinSection",(function(){var sectionCode=_this.state.sectionCode,normalizedSectionCode=sectionCode.trim().toUpperCase();_this.setState(INITIAL_STATE),_jquery.default.post({url:"/api/v1/sections/".concat(normalizedSectionCode,"/join"),dataType:"json"}).done((function(data){var _section$grades,section=data.sections.find((function(s){return s.code===normalizedSectionCode})),sectionName=section.name,joiningPlSection=null===(_section$grades=section.grades)||void 0===_section$grades?void 0:_section$grades.includes("pl");_this.props.updateSections(data.studentSections,data.plSections),_this.props.updateSectionsResult("join",data.result,sectionName,sectionCode,null,joiningPlSection)})).fail((function(data){var result=data.responseJSON&&data.responseJSON.result?data.responseJSON.result:"fail",sectionCapacity=data.responseJSON&&data.responseJSON.sectionCapacity?data.responseJSON.sectionCapacity:null;_this.props.updateSectionsResult("join",result,null,normalizedSectionCode,sectionCapacity)}))})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(JoinSection,_React$Component);var _proto=JoinSection.prototype;return _proto.componentDidMount=function componentDidMount(){this.fetchCaptchaInfo()},_proto.render=function render(){var _this$props=this.props,enrolledInASection=_this$props.enrolledInASection,isRtl=_this$props.isRtl,wordBoxStyle=_objectSpread(_objectSpread({},styles.wordBox),isRtl&&styles.wordBoxRTL);return _react.default.createElement("div",{style:_objectSpread(_objectSpread({},styles.main),enrolledInASection?styles.main:styles.mainDashed)},_react.default.createElement("div",{style:wordBoxStyle},_react.default.createElement("div",{style:styles.heading},_locale.default.joinASection()),_react.default.createElement("div",{style:styles.details},this.props.isTeacher?_locale.default.joinSectionTeacherDescription():_locale.default.joinSectionDescription())),_react.default.createElement("div",{style:styles.actionBox},_react.default.createElement("input",{type:"text",name:"sectionCode",className:"ui-test-join-section",value:this.state.sectionCode,onChange:this.handleChange,onKeyUp:this.handleKeyUp,style:styles.inputBox,placeholder:_locale.default.joinSectionPlaceholder()}),_react.default.createElement(_Button.default,{onClick:this.joinSection,className:"ui-test-join-section",color:_Button.default.ButtonColor.brandSecondaryDefault,disabled:0===this.state.sectionCode.length,text:_locale.default.joinSection(),style:styles.button})),_react.default.createElement("div",{style:styles.clear}))},JoinSection}(_react.default.Component);_defineProperty(JoinSection,"propTypes",{enrolledInASection:_propTypes.default.bool.isRequired,updateSections:_propTypes.default.func.isRequired,updateSectionsResult:_propTypes.default.func.isRequired,isTeacher:_propTypes.default.bool,isRtl:_propTypes.default.bool});var styles={main:{display:"flex",borderWidth:1,borderStyle:"solid",borderColor:_color.default.neutral_dark20,width:_styleConstants.default["content-width"],backgroundColor:_color.default.white},mainDashed:{borderWidth:5,borderStyle:"dashed",borderColor:_color.default.border_gray,boxSizing:"border-box"},heading:_objectSpread(_objectSpread({},_fontConstants.default["main-font-regular"]),{},{fontSize:20,backgroundColor:_color.default.white,color:_color.default.neutral_dark}),details:_objectSpread(_objectSpread({},_fontConstants.default["main-font-regular"]),{},{fontSize:14,marginTop:5,color:_color.default.neutral_dark}),wordBox:{width:_styleConstants.default["content-width"]-475,flexGrow:1,marginLeft:25,marginTop:25,marginBottom:25,float:"left",borderWidth:1,borderColor:"red"},wordBoxRTL:{marginLeft:0,marginRight:25},actionBox:{float:"right",display:"flex"},inputBox:{float:"left",marginTop:27,borderRadius:0,height:26,paddingLeft:25,width:200},button:{float:"right",marginTop:28,marginLeft:20,marginRight:25},clear:{clear:"both"}};exports.UnconnectedJoinSection=JoinSection,exports.default=(0,_reactRedux.connect)((function(state){return{isRtl:state.isRtl}}))(JoinSection)},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/studioHomepages/JoinSection.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.StudentInSectionAlready=exports.NoSectionsYet=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_JoinSection=__webpack_require__("./src/templates/studioHomepages/JoinSection.jsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_JoinSection.UnconnectedJoinSection};var Template=function Template(args){return _react.default.createElement(_JoinSection.UnconnectedJoinSection,_extends({updateSections:(0,_addonActions.action)("updateSections"),updateSectionsResult:(0,_addonActions.action)("updateSectionsResult")},args))};(exports.NoSectionsYet=Template.bind({})).args={enrolledInASection:!1},(exports.StudentInSectionAlready=Template.bind({})).args={enrolledInASection:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,