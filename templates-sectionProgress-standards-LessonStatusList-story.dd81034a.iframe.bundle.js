"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[8917],{"./.storybook/decorators.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{reduxStore:()=>reduxStore,reduxStoreDecorator:()=>reduxStoreDecorator});var lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/lodash.js"),react_redux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-redux/es/index.js"),redux__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/redux/es/redux.js"),redux_thunk__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/redux-thunk/lib/index.js"),_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/code-studio/isRtlRedux.js"),_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/code-studio/responsiveRedux.js");const reduxStore=(reducers={},state={})=>(0,redux__WEBPACK_IMPORTED_MODULE_5__.createStore)((0,redux__WEBPACK_IMPORTED_MODULE_5__.combineReducers)({isRtl:_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_3__.default,responsive:_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_4__.default,...reducers}),state,(0,redux__WEBPACK_IMPORTED_MODULE_5__.applyMiddleware)(redux_thunk__WEBPACK_IMPORTED_MODULE_2__.default)),reduxStoreDecorator=function(Story,context){const state=(0,lodash__WEBPACK_IMPORTED_MODULE_0__.merge)({},this.initialState,context.parameters.store);return(0,react_redux__WEBPACK_IMPORTED_MODULE_1__.Provider)({children:Story(),store:reduxStore(this.reducers,state)})}},"./src/code-studio/isRtlRedux.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function locale(){var state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RTL)return action.isRtl;return state},exports.isRtlFromDOM=isRtlFromDOM,exports.setRtlFromDOM=exports.setRtl=void 0;var SET_RTL="isRtl/SET_RTL",setRtl=exports.setRtl=function setRtl(isRtl){return{type:SET_RTL,isRtl}};exports.setRtlFromDOM=function setRtlFromDOM(){return setRtl(isRtlFromDOM())};function isRtlFromDOM(){var head=document.getElementsByTagName("head")[0];if(head&&head.parentElement){var dir=head.parentElement.getAttribute("dir");return!(!dir||"rtl"!==dir.toLowerCase())}return!1}},"./src/code-studio/responsiveRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResponsiveSize=void 0,exports.default=function reducer(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RESPONSIVE_SIZE&&state.responsiveSize!==action.responsiveSize)return _objectSpread(_objectSpread({},state),{},{responsiveSize:action.responsiveSize});return state},exports.getResponsiveBreakpoint=getResponsiveBreakpoint,exports.setResponsiveSize=void 0;var _utils=__webpack_require__("./src/utils.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_RESPONSIVE_SIZE="responsive/SET_RESPONSIVE_SIZE",ResponsiveSize=(exports.setResponsiveSize=function setResponsiveSize(responsiveSize){return{type:SET_RESPONSIVE_SIZE,responsiveSize}},exports.ResponsiveSize=(0,_utils.makeEnum)("lg","md","sm","xs")),Breakpoints=[{breakpoint:992,responsiveSize:ResponsiveSize.lg},{breakpoint:720,responsiveSize:ResponsiveSize.md},{breakpoint:650,responsiveSize:ResponsiveSize.sm},{breakpoint:0,responsiveSize:ResponsiveSize.xs}];function getResponsiveBreakpoint(width){var responsiveSize=Breakpoints.find((function(_ref){var breakpoint=_ref.breakpoint;return width>breakpoint}));return void 0===responsiveSize?(console.error("No responsive size found for width ".concat(width,", defaulting to xs")),ResponsiveSize.xs):responsiveSize.responsiveSize}var initialState={responsiveSize:getResponsiveBreakpoint(window.innerWidth)}},"./src/templates/MultiCheckboxSelector.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.styles=exports.default=void 0;var _immutable=_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var styles=exports.styles={header:{color:_color.default.purple,fontWeight:"normal",borderBottomWidth:1,borderBottomStyle:"solid",borderBottomColor:_color.default.purple},checkbox:{marginRight:10,marginTop:0},selectAllCheckbox:{position:"relative",bottom:4},list:{marginLeft:0},listItem:{listStyleType:"none",display:"flex",alignItems:"center",marginBottom:10}},MultiCheckboxSelector=function(_Component){function MultiCheckboxSelector(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"areAllSelected",(function(){return _immutable.default.Set(_this.props.selected).isSuperset(_this.props.items)})),_defineProperty(_this,"toggleSelectAll",(function(){_this.areAllSelected()?_this.props.onChange([]):_this.props.onChange(_this.props.items.slice())})),_defineProperty(_this,"toggle",(function(item){if(_this.props.checkById){var selectedItems=[];selectedItems=_lodash.default.map(_this.props.selected,"id").includes(item.id)?_lodash.default.remove(_this.props.selected,(function(selection){return selection.id!==item.id})):_lodash.default.concat(_this.props.selected,item),_this.props.onChange(selectedItems,item)}else{var index=_this.props.selected.indexOf(item);index>=0?_this.props.onChange([].concat(_toConsumableArray(_this.props.selected.slice(0,index)),_toConsumableArray(_this.props.selected.slice(index+1)))):_this.props.onChange(_this.props.selected.concat([item]))}})),_defineProperty(_this,"checked",(function(item){return _this.props.checkById?_lodash.default.map(_this.props.selected,"id").includes(item.id):_this.props.selected.includes(item)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(MultiCheckboxSelector,_Component),MultiCheckboxSelector.prototype.render=function render(){var _this2=this;return _react.default.createElement("div",{style:this.props.style},!this.props.noHeader&&_react.default.createElement("h2",{style:styles.header},_react.default.createElement("input",{type:"checkbox",style:_objectSpread(_objectSpread({},styles.checkbox),styles.selectAllCheckbox),checked:this.areAllSelected(),onChange:this.toggleSelectAll,disabled:this.props.disabled}),this.props.header),_react.default.createElement("ul",{style:styles.list},this.props.items.map((function(item,index){return _react.default.createElement("li",{style:styles.listItem,key:index},_react.default.createElement("input",{style:styles.checkbox,type:"checkbox",checked:_this2.checked(item),onChange:function onChange(){return _this2.toggle(item)},disabled:_this2.props.disabled}),_react.default.cloneElement(_this2.props.children,_defineProperty({},_this2.props.itemPropName,item)))}))))},MultiCheckboxSelector}(_react.Component);_defineProperty(MultiCheckboxSelector,"propTypes",{header:_propTypes.default.node,selected:_propTypes.default.array,items:_propTypes.default.array,onChange:_propTypes.default.func,children:_propTypes.default.element,itemPropName:_propTypes.default.string,style:_propTypes.default.any,disabled:_propTypes.default.bool,noHeader:_propTypes.default.bool,checkById:_propTypes.default.bool}),_defineProperty(MultiCheckboxSelector,"defaultProps",{itemPropName:"item",selected:[],items:[],onChange:function onChange(){},disabled:!1});exports.default=MultiCheckboxSelector},"./src/templates/currentUserRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SignInState=exports.CourseRoles=void 0,exports.default=function currentUser(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_CURRENT_USER_NAME)return _objectSpread(_objectSpread({},state),{},{userName:action.userName});if(action.type===SET_HAS_SEEN_STANDARDS_REPORT)return _objectSpread(_objectSpread({},state),{},{hasSeenStandardsReportInfo:action.hasSeenStandardsReport});if(action.type===SET_USER_SIGNED_IN)return _objectSpread(_objectSpread({},state),{},{signInState:action.isSignedIn?SignInState.SignedIn:SignInState.SignedOut});if(action.type===SET_USER_TYPE)return _objectSpread(_objectSpread({},state),{},{userType:action.userType,under13:action.under13});if(action.type===SET_OVER_21)return _objectSpread(_objectSpread({},state),{},{over21:action.over21});if(action.type===SET_USER_ROLE_IN_COURSE)return _objectSpread(_objectSpread({},state),{},{userRoleInCourse:action.userRoleInCourse});if(action.type===SET_MUTE_MUSIC)return _objectSpread(_objectSpread({},state),{},{isBackgroundMusicMuted:action.isBackgroundMusicMuted});if(action.type===SET_SORT_BY_FAMILY_NAME)return action.isSortedByFamilyName?_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.SORT_BY_FAMILY_NAME,{sectionId:action.sectionId,unitName:action.unitName,source:action.source}):_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.SORT_BY_DISPLAY_NAME,{sectionId:action.sectionId,unitName:action.unitName,source:action.source}),_objectSpread(_objectSpread({},state),{},{isSortedByFamilyName:action.isSortedByFamilyName});if(action.type===SET_SHOW_PROGRESS_TABLE_V2)return _objectSpread(_objectSpread({},state),{},{showProgressTableV2:action.showProgressTableV2});if(action.type===SET_PROGRESS_TABLE_V2_CLOSED_BETA)return _objectSpread(_objectSpread({},state),{},{progressTableV2ClosedBeta:action.progressTableV2ClosedBeta});if(action.type===SET_DATE_PROGRESS_TABLE_INVITATION_LAST_DELAYED)return _objectSpread(_objectSpread({},state),{},{dateProgressTableInvitationDelayed:action.dateProgressTableInvitationDelayed});if(action.type===SET_SEEN_PROGRESS_TABLE_INVITATION)return _objectSpread(_objectSpread({},state),{},{hasSeenProgressTableInvite:action.hasSeenProgressTableInvite});if(action.type===SET_AI_RUBRICS_DISABLED)return _objectSpread(_objectSpread({},state),{},{aiRubricsDisabled:action.aiRubricsDisabled});if(action.type===SET_USER_CREATED_AT)return _objectSpread(_objectSpread({},state),{},{userCreatedAt:action.userCreatedAt});if(action.type===SET_INITIAL_DATA){var _action$serverUser=action.serverUser,id=_action$serverUser.id,uuid=_action$serverUser.uuid,username=_action$serverUser.username,user_type=_action$serverUser.user_type,mute_music=_action$serverUser.mute_music,under_13=_action$serverUser.under_13,over_21=_action$serverUser.over_21,sort_by_family_name=_action$serverUser.sort_by_family_name,show_progress_table_v2=_action$serverUser.show_progress_table_v2,ai_rubrics_disabled=_action$serverUser.ai_rubrics_disabled,progress_table_v2_closed_beta=_action$serverUser.progress_table_v2_closed_beta,is_lti=_action$serverUser.is_lti,date_progress_table_invitation_last_delayed=_action$serverUser.date_progress_table_invitation_last_delayed,has_seen_progress_table_v2_invitation=_action$serverUser.has_seen_progress_table_v2_invitation,child_account_compliance_state=_action$serverUser.child_account_compliance_state,country_code=_action$serverUser.country_code,us_state_code=_action$serverUser.us_state_code,in_section=_action$serverUser.in_section,created_at=_action$serverUser.created_at,is_verified_instructor=_action$serverUser.is_verified_instructor;return _AnalyticsReporter.default.setUserProperties(id,user_type,_experiments.default.getEnabledExperiments()),_StatsigReporter.default.setUserProperties(id,user_type,is_verified_instructor,_experiments.default.getEnabledExperiments()),_objectSpread(_objectSpread({},state),{},{userId:id,uuid,userName:username,userType:user_type,isBackgroundMusicMuted:mute_music,under13:under_13,over21:over_21,isSortedByFamilyName:sort_by_family_name,showProgressTableV2:show_progress_table_v2,aiRubricsDisabled:ai_rubrics_disabled,progressTableV2ClosedBeta:progress_table_v2_closed_beta,isLti:is_lti,isTeacher:user_type===_sharedConstants.UserTypes.TEACHER,inUSA:["US","RD"].includes(country_code)||!!us_state_code,dateProgressTableInvitationDelayed:date_progress_table_invitation_last_delayed,hasSeenProgressTableInvite:has_seen_progress_table_v2_invitation,childAccountComplianceState:child_account_compliance_state,countryCode:country_code,usStateCode:us_state_code,inSection:in_section,userCreatedAt:created_at})}return state},exports.setUserType=exports.setUserSignedIn=exports.setUserRoleInCourse=exports.setUserCreatedAt=exports.setSortByFamilyName=exports.setShowProgressTableV2=exports.setProgressTableV2ClosedBeta=exports.setOver21=exports.setMuteMusic=exports.setInitialData=exports.setHasSeenProgressTableInvite=exports.setDateProgressTableInvitationDelayed=exports.setCurrentUserName=exports.setCurrentUserHasSeenStandardsReportInfo=exports.setAiRubricsDisabled=exports.isSignedIn=void 0;var _AnalyticsConstants=__webpack_require__("./src/metrics/AnalyticsConstants.js"),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/metrics/AnalyticsReporter.js")),_StatsigReporter=_interopRequireDefault(__webpack_require__("./src/metrics/StatsigReporter.js")),_experiments=_interopRequireDefault(__webpack_require__("./src/util/experiments.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts"),_utils=__webpack_require__("./src/utils.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_CURRENT_USER_NAME="currentUser/SET_CURRENT_USER_NAME",SET_USER_SIGNED_IN="currentUser/SET_USER_SIGNED_IN",SET_USER_TYPE="currentUser/SET_USER_TYPE",SET_OVER_21="currentUser/SET_OVER_21",SET_USER_ROLE_IN_COURSE="currentUser/SET_USER_ROLE_IN_COURSE",SET_HAS_SEEN_STANDARDS_REPORT="currentUser/SET_HAS_SEEN_STANDARDS_REPORT",SET_INITIAL_DATA="currentUser/SET_INITIAL_DATA",SET_MUTE_MUSIC="currentUser/SET_MUTE_MUSIC",SET_SORT_BY_FAMILY_NAME="currentUser/SET_SORT_BY_FAMILY_NAME",SET_SHOW_PROGRESS_TABLE_V2="currentUser/SET_SHOW_PROGRESS_TABLE_V2",SET_AI_RUBRICS_DISABLED="currentUser/SET_AI_RUBRICS_DISABLED",SET_PROGRESS_TABLE_V2_CLOSED_BETA="currentUser/SET_PROGRESS_TABLE_V2_CLOSED_BETA",SET_DATE_PROGRESS_TABLE_INVITATION_LAST_DELAYED="currentUser/SET_DATE_PROGRESS_TABLE_INVITATION_LAST_DELAYED",SET_SEEN_PROGRESS_TABLE_INVITATION="currentUser/SET_SEEN_PROGRESS_TABLE_INVITATION",SET_USER_CREATED_AT="currentUser/SET_USER_CREATED_AT",SignInState=exports.SignInState=(0,_utils.makeEnum)("Unknown","SignedIn","SignedOut"),CourseRoles=exports.CourseRoles=(0,_utils.makeEnum)("Unknown","Instructor","Participant"),initialState=(exports.setCurrentUserName=function setCurrentUserName(userName){return{type:SET_CURRENT_USER_NAME,userName}},exports.setCurrentUserHasSeenStandardsReportInfo=function setCurrentUserHasSeenStandardsReportInfo(hasSeenStandardsReport){return{type:SET_HAS_SEEN_STANDARDS_REPORT,hasSeenStandardsReport}},exports.setUserSignedIn=function setUserSignedIn(isSignedIn){return{type:SET_USER_SIGNED_IN,isSignedIn}},exports.setUserType=function setUserType(userType,under13){return{type:SET_USER_TYPE,userType,under13}},exports.setOver21=function setOver21(over21){return{type:SET_OVER_21,over21}},exports.setUserRoleInCourse=function setUserRoleInCourse(userRoleInCourse){return{type:SET_USER_ROLE_IN_COURSE,userRoleInCourse}},exports.setInitialData=function setInitialData(serverUser){return{type:SET_INITIAL_DATA,serverUser}},exports.setMuteMusic=function setMuteMusic(isBackgroundMusicMuted){return{type:SET_MUTE_MUSIC,isBackgroundMusicMuted}},exports.setSortByFamilyName=function setSortByFamilyName(isSortedByFamilyName,sectionId,unitName,source){return{type:SET_SORT_BY_FAMILY_NAME,isSortedByFamilyName,sectionId,unitName,source}},exports.setShowProgressTableV2=function setShowProgressTableV2(showProgressTableV2){return{type:SET_SHOW_PROGRESS_TABLE_V2,showProgressTableV2}},exports.setProgressTableV2ClosedBeta=function setProgressTableV2ClosedBeta(progressTableV2ClosedBeta){return{type:SET_PROGRESS_TABLE_V2_CLOSED_BETA,progressTableV2ClosedBeta}},exports.setHasSeenProgressTableInvite=function setHasSeenProgressTableInvite(hasSeenProgressTableInvite){return{type:SET_SEEN_PROGRESS_TABLE_INVITATION,hasSeenProgressTableInvite}},exports.setDateProgressTableInvitationDelayed=function setDateProgressTableInvitationDelayed(dateProgressTableInvitationDelayed){return{type:SET_DATE_PROGRESS_TABLE_INVITATION_LAST_DELAYED,dateProgressTableInvitationDelayed}},exports.setAiRubricsDisabled=function setAiRubricsDisabled(aiRubricsDisabled){return{type:SET_AI_RUBRICS_DISABLED,aiRubricsDisabled}},exports.setUserCreatedAt=function setUserCreatedAt(userCreatedAt){return{type:SET_USER_CREATED_AT,userCreatedAt}},{userId:null,uuid:null,userName:null,userType:"unknown",userRoleInCourse:CourseRoles.Unknown,signInState:SignInState.Unknown,hasSeenStandardsReportInfo:!1,isBackgroundMusicMuted:!1,isSortedByFamilyName:!1,isLti:void 0,isTeacher:void 0,under13:!0,over21:!1,childAccountComplianceState:null,countryCode:null,usStateCode:null,inSection:null,userCreatedAt:null});exports.isSignedIn=function isSignedIn(currentUserState){return currentUserState.signInState===SignInState.SignedIn}},"./src/templates/sectionProgress/standards/LessonStatusList.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedLessonStatusList=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/metrics/firehose.js")),_MultiCheckboxSelector=_interopRequireDefault(__webpack_require__("./src/templates/MultiCheckboxSelector.jsx")),_ProgressBoxForLessonNumber=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/ProgressBoxForLessonNumber.jsx")),_sectionStandardsProgressRedux=__webpack_require__("./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var LessonStatusList=function(_Component){function LessonStatusList(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"handleChange",(function(selectedLessons,changedLesson){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"standards",event:"update_unplugged_lesson_list",data_json:JSON.stringify({section_id:_this.props.sectionId,script_id:_this.props.scriptId,changed_lesson_id:changedLesson.id,lesson_selected:!changedLesson.completed,dialog:_this.props.dialog})},{includeUserId:!0}),_this.props.setSelectedLessons(selectedLessons)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(LessonStatusList,_Component),LessonStatusList.prototype.render=function render(){var _this2=this;return this.props.unpluggedLessonList.forEach((function(lesson){return Object.assign(lesson,{sectionId:_this2.props.sectionId,scriptId:_this2.props.scriptId})})),_react.default.createElement(_MultiCheckboxSelector.default,{noHeader:!0,items:this.props.unpluggedLessonList,itemPropName:"lesson",selected:this.props.selectedLessons,checkById:!0,onChange:this.handleChange},_react.default.createElement(ComplexLessonComponent,null))},LessonStatusList}(_react.Component);_defineProperty(LessonStatusList,"propTypes",{dialog:_propTypes.default.string,unpluggedLessonList:_propTypes.default.array,setSelectedLessons:_propTypes.default.func.isRequired,selectedLessons:_propTypes.default.array.isRequired,sectionId:_propTypes.default.number,scriptId:_propTypes.default.number});var styles={lessonListItem:{display:"flex",flexDirection:"row"},links:{paddingLeft:10,color:_color.default.teal}},ComplexLessonComponent=function ComplexLessonComponent(_ref){var lesson=_ref.lesson;return _react.default.createElement("div",{style:styles.lessonListItem},_react.default.createElement("div",null,_react.default.createElement(_ProgressBoxForLessonNumber.default,{completed:lesson.completed,inProgress:lesson.inProgress,lessonNumber:lesson.number,linkToLessonPlan:lesson.url})),_react.default.createElement("a",{style:styles.links,href:lesson.url,target:"_blank",onClick:function onClick(){return function handleLessonLinkClick(lesson){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"standards",event:"click_unplugged_lesson_link",data_json:JSON.stringify({link:lesson.url,section_id:lesson.sectionId,script_id:lesson.scriptId})},{includeUserId:!0})}(lesson)}},lesson.name))};ComplexLessonComponent.propTypes={lesson:_propTypes.default.shape({id:_propTypes.default.number,name:_propTypes.default.string,number:_propTypes.default.number,url:_propTypes.default.string,completed:_propTypes.default.bool,inProgress:_propTypes.default.bool}),sectionId:_propTypes.default.number,scriptId:_propTypes.default.number};exports.UnconnectedLessonStatusList=LessonStatusList,exports.default=(0,_reactRedux.connect)((function(state){return{unpluggedLessonList:(0,_sectionStandardsProgressRedux.getUnpluggedLessonsForScript)(state),selectedLessons:state.sectionStandardsProgress.selectedLessons,sectionId:state.teacherSections.selectedSectionId,scriptId:state.unitSelection.scriptId}}),(function(dispatch){return{setSelectedLessons:function setSelectedLessons(selected){dispatch((0,_sectionStandardsProgressRedux.setSelectedLessons)(selected))}}}))(LessonStatusList)},"./src/templates/sectionProgress/standards/standardsTestHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.unpluggedLessonList=exports.stateForTeacherMarkedIncompletedLesson=exports.stateForTeacherMarkedCompletedLesson=exports.stateForTeacherMarkedAndProgress=exports.stateForPartiallyCompletedLesson=exports.stateForCompletedLesson=exports.standardsData=exports.scriptId=exports.pluggedLesson=exports.lessonId=exports.lessonCompletedByStandard=exports.fakeState=void 0;var _progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_standardsConstants=__webpack_require__("./src/templates/sectionProgress/standards/standardsConstants.js"),teacherSections=(exports.unpluggedLessonList=[{id:1,name:"Lesson 1",number:1,url:"https://curriculum.code.org/csf-19/coursea/1/"},{id:2,name:"Lesson 4",number:3,url:"https://curriculum.code.org/csf-19/coursea/3/"}],exports.lessonCompletedByStandard={1:[{name:"Mazes",lessonNumber:1,completed:!0,numStudentsCompleted:25,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/1/"},{name:"More Mazes",lessonNumber:14,completed:!0,numStudentsCompleted:28,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/14/"},{name:"Even More Mazes",lessonNumber:15,completed:!1,numStudentsCompleted:10,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/15/"},{name:"Hard Mazes",lessonNumber:16,completed:!1,numStudentsCompleted:10,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/16/"},{name:"Really Hard Mazes",lessonNumber:17,completed:!1,numStudentsCompleted:10,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/17/"}]},{selectedSectionId:1,sections:{1:{id:1,name:"Picture Section",createdAt:"2019-10-25T14:24:28.000Z",loginType:"picture",grades:["9"],providerManaged:!1,lessonExtras:!0,pairingAllowed:!0,sharingDisabled:!1,studentCount:4,code:"HQGBNJ",courseId:null,scriptId:92,hidden:!1}}}),standardsData=exports.standardsData=[{id:16,shortcode:"1A-IC-17",description:"Work respectfully and responsibly with others online.",category_description:"Impacts of Computing",lesson_ids:[662,663]},{id:17,shortcode:"1A-IC-18",description:'"Keep login information private',category_description:"Impacts of Computing",lesson_ids:[662,663]},{id:4,shortcode:"1A-AP-11",description:"Decompose (break down) the steps needed to solve a problem into a precise sequence of instructions.",category_description:"Algorithms & Programming",lesson_ids:[663,664,665,666,667,669,670,671,672,673]}],lessonId=exports.lessonId=662,scriptId=exports.scriptId=92,unitDataByUnit={92:{csf:!0,hasStandards:!0,id:scriptId,path:"//localhost-studio.code.org:3000/s/coursea-2019",title:"Course A (2019)",lessons:[{script_id:92,script_name:"coursea-2019",script_stages:3,id:lessonId,position:1,relative_position:1,name:"Going Places Safely",title:"Lesson 1: Going Places Safely",lesson_group_display_name:"Digital Citizenship",lockable:!1,levels:[],description_student:"Learn the rules to safely visit places online.",description_teacher:"In collaboration with Common Sense Media, this lesson helps students learn that many websites ask for information that is private and discusses how to responsibly handle such requests. Students also find out that they can go to exciting places online, but they need to follow certain rules to remain safe.",unplugged:!0,lesson_plan_html_url:"https://curriculum.code.org/csf-19/coursea/1",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/coursea-2019/1/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/coursea-2019/lessons/1/extras"},{script_id:scriptId,script_name:"coursea-2019",script_stages:3,id:663,position:2,relative_position:2,name:"Learn to Drag and Drop",title:"Lesson 2: Learn to Drag and Drop",lesson_group_display_name:"Sequencing",lockable:!1,levels:[{id:"10001"},{id:"10002"},{id:"10003"}],description_student:"Click and drag to finish the puzzles.",description_teacher:"This lesson will give students an idea of what to expect when they head to the computer lab. It begins with a brief discussion introducing them to computer lab manners, then they will progress into using a computer to complete online puzzles.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csf-19/coursea/2",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/coursea-2019/2/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/coursea-2019/lessons/2/extras"},{script_id:scriptId,script_name:"coursea-2019",script_stages:3,id:664,position:3,relative_position:3,name:"Happy Maps",title:"Lesson 3: Happy Maps",lesson_group_display_name:"Sequencing",lockable:!1,levels:[],description_student:"Write instructions to get the Flurb to the fruit.",description_teacher:'This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Students will practice writing precise instructions as they work to translate instructions into the symbols provided. If problems arise in the code, students should also work together to recognize bugs and build solutions.',unplugged:!0,lesson_plan_html_url:"https://curriculum.code.org/csf-19/coursea/3",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/coursea-2019/3/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/coursea-2019/lessons/3/extras"}]}},progress20=(exports.pluggedLesson=unitDataByUnit[scriptId].lessons[1],(0,_progressHelpers.levelProgressFromResult)(20)),sectionCompletedLesson={92:{100001:{10001:progress20,10002:progress20,10003:progress20},100002:{10001:progress20,10002:progress20,10003:progress20},100003:{10001:progress20,10002:progress20},100004:{10001:progress20,10002:progress20}}},sectionPartialCompletedLesson={92:{100001:{10001:progress20,10002:progress20,10003:progress20},100002:{10001:progress20,10002:progress20,10003:progress20}}},studentLevelScoresByLessonComplete={92:{662:{100001:{10001:_standardsConstants.TeacherScores.COMPLETE}}}},studentLevelScoresByLessonIncomplete={92:{662:{100001:{10001:_standardsConstants.TeacherScores.INCOMPLETE}}}},selectedLessons=[{id:662,completed:!0,name:"Going Places Safely",number:1,url:"https://curriculum.code.org/csf-19/coursea/1"}];exports.fakeState={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:{92:{}}},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData,studentLevelScoresByLesson:{92:{662:{}}}},teacherSections},exports.stateForPartiallyCompletedLesson={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionPartialCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData},teacherSections},exports.stateForCompletedLesson={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData},teacherSections},exports.stateForTeacherMarkedCompletedLesson={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData,studentLevelScoresByLesson:studentLevelScoresByLessonComplete,selectedLessons},teacherSections},exports.stateForTeacherMarkedIncompletedLesson={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData,studentLevelScoresByLesson:studentLevelScoresByLessonIncomplete,selectedLessons:[]},teacherSections},exports.stateForTeacherMarkedAndProgress={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData,studentLevelScoresByLesson:studentLevelScoresByLessonComplete,selectedLessons},teacherSections}},"./src/templates/sectionProgress/standards/LessonStatusList.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Template=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_unitSelectionRedux=_interopRequireDefault(__webpack_require__("./src/redux/unitSelectionRedux.js")),_currentUserRedux=_interopRequireDefault(__webpack_require__("./src/templates/currentUserRedux.js")),_sectionProgressRedux=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js")),_teacherSectionsRedux=_interopRequireDefault(__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js")),_decorators=__webpack_require__("./.storybook/decorators.js"),_LessonStatusList=__webpack_require__("./src/templates/sectionProgress/standards/LessonStatusList.jsx"),_sectionStandardsProgressRedux=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js")),_standardsTestHelpers=__webpack_require__("./src/templates/sectionProgress/standards/standardsTestHelpers.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var store=(0,_decorators.reduxStore)({sectionProgress:_sectionProgressRedux.default,sectionStandardsProgress:_sectionStandardsProgressRedux.default,unitSelection:_unitSelectionRedux.default,teacherSections:_teacherSectionsRedux.default,currentUser:_currentUserRedux.default},{teacherSections:{selectedSectionId:11},unitSelection:{scriptId:1}});exports.default={component:_LessonStatusList.UnconnectedLessonStatusList},exports.Template=function Template(){return _react.default.createElement(_reactRedux.Provider,{store},_react.default.createElement(_LessonStatusList.UnconnectedLessonStatusList,{unpluggedLessonList:_standardsTestHelpers.unpluggedLessonList,selectedLessons:[],setSelectedLessons:(0,_addonActions.action)("set selected lessons")}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,