"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[7126],{"./src/code-studio/hashEmail.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function _default(options){var email=normalizeEmail((0,_jquery.default)(options.email_selector).val());if(""!==email&&EMAIL_REGEX.test(email)){var hashed_email=hashEmail(email);(0,_jquery.default)(options.hashed_email_selector).val(hashed_email),options.skip_clear_email||(!options.age_selector||(0,_jquery.default)(options.age_selector).val()<13)&&(0,_jquery.default)(options.email_selector).val("")}},exports.hashEmail=hashEmail;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_md=_interopRequireDefault(__webpack_require__("./node_modules/md5/md5.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var EMAIL_REGEX=/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i;function hashEmail(cleartextEmail){return(0,_md.default)(normalizeEmail(cleartextEmail))}function normalizeEmail(rawEmail){return rawEmail.toLowerCase().trim()}},"./src/lib/ui/accounts/ChangeEmailModal.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_hashEmail=__webpack_require__("./src/code-studio/hashEmail.js"),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_formatValidation=__webpack_require__("./src/util/formatValidation.js"),_SystemDialog=__webpack_require__("./src/lib/ui/SystemDialog/SystemDialog.jsx"),_ChangeEmailForm=_interopRequireDefault(__webpack_require__("./src/lib/ui/accounts/ChangeEmailForm.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ChangeEmailModal=exports.default=function(_React$Component){function ChangeEmailModal(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",{saveState:"initial",values:{newEmail:"",currentPassword:"",emailOptIn:""},serverErrors:{newEmail:"",currentPassword:"",emailOptIn:""}}),_defineProperty(_this,"save",(function(){if(_this.isFormValid(_this.getValidationErrors())){var values=_this.state.values;_this.setState({saveState:"saving"}),_this.props.handleSubmit(values).catch(_this.onSubmitFailure)}})),_defineProperty(_this,"cancel",(function(){return _this.props.handleCancel()})),_defineProperty(_this,"onSubmitFailure",(function(error){error&&Object.prototype.hasOwnProperty.call(error,"serverErrors")?_this.setState({saveState:"initial",serverErrors:error.serverErrors},(function(){return _this.changeEmailForm.focusOnAnError()})):_this.setState({saveState:"unknown-error"})})),_defineProperty(_this,"getNewEmailValidationError",(function(){var newEmail=_this.state.values.newEmail,currentHashedEmail=_this.props.currentHashedEmail;return 0===newEmail.trim().length?_locale.default.changeEmailModal_newEmail_isRequired():(0,_formatValidation.isEmail)(newEmail.trim())?currentHashedEmail===(0,_hashEmail.hashEmail)(newEmail)?_locale.default.changeEmailModal_newEmail_mustBeDifferent():null:_locale.default.changeEmailModal_newEmail_invalid()})),_defineProperty(_this,"getCurrentPasswordValidationError",(function(){var currentPassword=_this.state.values.currentPassword;return _this.props.isPasswordRequired&&0===currentPassword.length?_locale.default.changeEmailModal_currentPassword_isRequired():null})),_defineProperty(_this,"getEmailOptInValidationError",(function(){var userType=_this.props.userType,emailOptIn=_this.state.values.emailOptIn;return"teacher"===userType&&0===emailOptIn.length?_locale.default.changeEmailModal_emailOptIn_isRequired():null})),_defineProperty(_this,"onFormChange",(function(newValues){var _this$state=_this.state,oldValues=_this$state.values,newServerErrors=function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({},_this$state.serverErrors);["newEmail","currentPassword","emailOptIn"].forEach((function(fieldName){newValues[fieldName]!==oldValues[fieldName]&&(newServerErrors[fieldName]=void 0)})),_this.setState({values:newValues,serverErrors:newServerErrors})})),_defineProperty(_this,"render",(function(){var _this$props=_this.props,userType=_this$props.userType,isPasswordRequired=_this$props.isPasswordRequired,_this$state2=_this.state,saveState=_this$state2.saveState,values=_this$state2.values,validationErrors=_this.getValidationErrors(),isFormValid=_this.isFormValid(validationErrors);return _react.default.createElement(_BaseDialog.default,{useUpdatedStyles:!0,isOpen:!0,handleClose:_this.cancel,uncloseable:"saving"===saveState},_react.default.createElement("div",{style:styles.container},_react.default.createElement(_SystemDialog.Header,{text:_locale.default.changeEmailModal_title()}),_react.default.createElement(_ChangeEmailForm.default,{ref:function ref(x){return _this.changeEmailForm=x},values,validationErrors,disabled:"saving"===saveState,userType,isPasswordRequired,onChange:_this.onFormChange,onSubmit:_this.save}),_react.default.createElement(_SystemDialog.ConfirmCancelFooter,{confirmText:_locale.default.changeEmailModal_save(),onConfirm:_this.save,onCancel:_this.cancel,disableConfirm:"saving"===saveState||!isFormValid,disableCancel:"saving"===saveState,tabIndex:"2"},"saving"===saveState&&_react.default.createElement("em",null,_locale.default.saving()),"unknown-error"===saveState&&_react.default.createElement("em",null,_locale.default.changeEmailModal_unexpectedError()))))})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ChangeEmailModal,_React$Component);var _proto=ChangeEmailModal.prototype;return _proto.isFormValid=function isFormValid(validationErrors){return Object.keys(validationErrors).every((function(key){return!validationErrors[key]}))},_proto.getValidationErrors=function getValidationErrors(){var serverErrors=this.state.serverErrors;return{newEmail:serverErrors.newEmail||this.getNewEmailValidationError(),currentPassword:serverErrors.currentPassword||this.getCurrentPasswordValidationError(),emailOptIn:serverErrors.emailOptIn||this.getEmailOptInValidationError()}},ChangeEmailModal}(_react.default.Component);_defineProperty(ChangeEmailModal,"propTypes",{handleSubmit:_propTypes.default.func.isRequired,handleCancel:_propTypes.default.func.isRequired,userType:_propTypes.default.oneOf(["student","teacher"]).isRequired,isPasswordRequired:_propTypes.default.bool.isRequired,currentHashedEmail:_propTypes.default.string});var styles={container:{margin:20,color:_color.default.charcoal}};module.exports=exports.default},"./src/templates/BaseDialog.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_constants=__webpack_require__("./src/constants.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BaseDialog=exports.default=function(_React$Component){function BaseDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){"Escape"===event.key&&_this.closeDialog(),_this.props.handleKeyDown&&_this.props.handleKeyDown(event)})),_defineProperty(_this,"closeDialog",(function(){!_this.props.uncloseable&&_this.props.handleClose&&(_this.props.handleClose(),_this.props.soundPlayer&&_this.props.soundPlayer.stopAllAudio())})),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BaseDialog,_React$Component);var _proto=BaseDialog.prototype;return _proto.componentDidMount=function componentDidMount(){this.focusDialog()},_proto.componentDidUpdate=function componentDidUpdate(){this.focusDialog()},_proto.getTabbableElements=function getTabbableElements(){return[].slice.call(this.refs.dialog.querySelectorAll("a,button,input"))},_proto.focusDialog=function focusDialog(){var descendantIsActive=document.activeElement&&this.refs.dialog&&this.refs.dialog.contains(document.activeElement);this.props.isOpen&&!descendantIsActive&&this.refs.dialog.focus()},_proto.render=function render(){if(!this.props.isOpen&&!this.props.hideBackdrop)return _react.default.createElement("div",null);var bodyStyle,modalBodyStyle,xCloseStyle;this.props.fullWidth&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:"90%",marginLeft:"-45%"})),this.props.fullHeight&&(bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{height:"80%"}),modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{boxSizing:"border-box"}));var wrapperClassNames="",modalClassNames="modal",modalBodyClassNames="modal-body",overflowX=this.props.overflow||"hidden",overflowY=this.props.overflow||(this.props.fixedHeight||this.props.fullHeight?"hidden":"auto");this.props.useUpdatedStyles?(wrapperClassNames="dashboard-styles",modalBodyClassNames="",modalBodyStyle={background:"#fff",height:this.props.fixedHeight,maxHeight:!this.props.fixedHeight&&"80vh",overflowX,overflowY,borderRadius:4},this.props.useFlexbox&&(modalBodyStyle=_objectSpread(_objectSpread({},modalBodyStyle),{},{display:"flex",flexDirection:"column"})),bodyStyle=_objectSpread(_objectSpread({},bodyStyle),{},{width:this.props.fixedWidth||_constants.BASE_DIALOG_WIDTH,marginLeft:-this.props.fixedWidth/2||-350})):this.props.noModalStyles&&(modalClassNames="",modalBodyClassNames=""),bodyStyle=_objectSpread(_objectSpread(_objectSpread({},bodyStyle),this.props.hideBackdrop&&{position:"initial",marginLeft:0}),this.props.style),xCloseStyle={position:"absolute",top:0,right:0,padding:0,color:_color.default.neutral_dark30,cursor:"pointer",fontSize:24,border:"none"},modalBodyClassNames=[modalBodyClassNames,this.props.bodyClassName].filter((function(className){return!!className})).join(" ");var body=_react.default.createElement("div",{style:bodyStyle,tabIndex:"-1",className:modalClassNames,ref:"dialog",onKeyDown:this.handleKeyDown},_react.default.createElement("div",{style:modalBodyStyle,id:this.props.bodyId,className:modalBodyClassNames},!this.props.uncloseable&&!this.props.hideCloseButton&&_react.default.createElement(_Button.default,{id:"x-close",onClick:this.closeDialog,icon:"fa-solid fa-xmark",style:xCloseStyle,color:"white","aria-label":_locale.default.closeDialog()}),this.props.children));return this.props.hideBackdrop?body:_react.default.createElement("div",{className:wrapperClassNames},_react.default.createElement("div",{className:"modal-backdrop",style:this.props.backdropStyle,onClick:this.closeDialog}),body)},BaseDialog}(_react.default.Component);_defineProperty(BaseDialog,"propTypes",{isOpen:_propTypes.default.bool,handleClose:_propTypes.default.func,uncloseable:_propTypes.default.bool,hideCloseButton:_propTypes.default.bool,handleKeyDown:_propTypes.default.func,hideBackdrop:_propTypes.default.bool,fullWidth:_propTypes.default.bool,fullHeight:_propTypes.default.bool,useUpdatedStyles:_propTypes.default.bool,noModalStyles:_propTypes.default.bool,children:_propTypes.default.node,fixedWidth:_propTypes.default.number,fixedHeight:_propTypes.default.number,useFlexbox:_propTypes.default.bool,bodyId:_propTypes.default.string,bodyClassName:_propTypes.default.string,style:_propTypes.default.object,soundPlayer:_propTypes.default.object,overflow:_propTypes.default.string,backdropStyle:_propTypes.default.object}),module.exports=exports.default},"./src/util/formatValidation.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isZipCode=exports.isPercent=exports.isInt=exports.isEmail=void 0;var EMAIL_REGEX=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ZIP_CODE_REGEX=(exports.isEmail=function isEmail(value){return EMAIL_REGEX.test(value)},/^\d{5}([\W-]?\d{4})?$/);exports.isZipCode=function isZipCode(value){return ZIP_CODE_REGEX.test(value)},exports.isInt=function isInt(value){var newValue=value.replace(/,/g,"");return parseInt(newValue,10).toString()===newValue},exports.isPercent=function isPercent(value){var percent=parseFloat(value);return 0<=percent&&percent<=100}},"./src/lib/ui/accounts/ChangeEmailModal.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.TeacherView=exports.StudentView=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_ChangeEmailModal=_interopRequireDefault(__webpack_require__("./src/lib/ui/accounts/ChangeEmailModal.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var DEFAULT_PROPS={handleSubmit:(0,_addonActions.action)("handleSubmit callback"),handleCancel:(0,_addonActions.action)("handleCancel callback"),isPasswordRequired:!0},container=(exports.default={component:_ChangeEmailModal.default},{margin:"auto",width:"50%",padding:"10px"}),Template=function Template(args){return _react.default.createElement("div",{style:container},_react.default.createElement(_ChangeEmailModal.default,_extends({},DEFAULT_PROPS,args)))};(exports.StudentView=Template.bind({})).args={userType:"student"},(exports.TeacherView=Template.bind({})).args={userType:"teacher"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLXVpLWFjY291bnRzLUNoYW5nZUVtYWlsTW9kYWwtc3RvcnkuYjEyNjY1NGUuaWZyYW1lLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiNlBBS2UsU0FBQUEsU0FBVUMsU0FFdkIsSUFBTUMsTUFBUUMsZ0JBQWUsRUFBQUMsUUFBQUEsU0FBRUgsUUFBUUksZ0JBQWdCQyxPQUN2RCxHQUFjLEtBQVZKLE9BQWdCSyxZQUFZQyxLQUFLTixPQUFRLENBQzNDLElBQU1PLGFBQWVDLFVBQVVSLFFBQy9CLEVBQUFFLFFBQUFBLFNBQUVILFFBQVFVLHVCQUF1QkwsSUFBSUcsY0FHaENSLFFBQVFXLG9CQUVOWCxRQUFRWSxlQUFnQixFQUFBVCxRQUFBQSxTQUFFSCxRQUFRWSxjQUFjUCxNQUFRLE1BQzNELEVBQUFGLFFBQUFBLFNBQUVILFFBQVFJLGdCQUFnQkMsSUFBSSxHQUdwQyxDQUNGLEUsNEJBcEJBLElBQUFRLFFBQUFDLHVCQUFBQyxvQkFBQSx5Q0FDQUMsSUFBQUYsdUJBQUFDLG9CQUFBLDhCQUFzQixTQUFBRCx1QkFBQUcsS0FBQSxPQUFBQSxLQUFBQSxJQUFBQyxXQUFBRCxJQUFBLFNBQUFBLElBQUEsQ0FFdEIsSUFBTVgsWUFBYywyQ0FtQmIsU0FBU0csVUFBVVUsZ0JBQ3hCLE9BQU8sRUFBQUMsSUFBQUEsU0FBSWxCLGVBQWVpQixnQkFDNUIsQ0FFQSxTQUFTakIsZUFBZW1CLFVBQ3RCLE9BQU9BLFNBQVNDLGNBQWNDLE1BQ2hDLEMsb0tDNUJBLElBQUFDLFdBQUFWLHVCQUFBQyxvQkFBQSx1Q0FDQVUsT0FBQVgsdUJBQUFDLG9CQUFBLGtDQUVBVyxRQUFBWix1QkFBQUMsb0JBQUEsdUNBRUFZLFdBQUFaLG9CQUFBLGtDQUNBYSxZQUFBZCx1QkFBQUMsb0JBQUEsbUNBQ0FjLE9BQUFmLHVCQUFBQyxvQkFBQSx3QkFDQWUsa0JBQUFmLG9CQUFBLGtDQUNBZ0IsY0FBQWhCLG9CQUFBLDhDQUVBaUIsaUJBQUFsQix1QkFBQUMsb0JBQUEsOENBQWdELFNBQUFELHVC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QUFpRyxjQUFBLE9BQUtNLE1BQU9FLFdBQ1Z6RyxPQUFBLFFBQUFpRyxjQUFDcUksa0JBQUEsUUFBZ0JDLFNBQUEsR0FBS0ksY0FBbUJ2TCxPQUNyQyxHQUdnQk4sUUFBQUEsWUFBR2dNLFNBQVNqTixLQUFLLENBQUMsSUFDOUJ1QixLQUFPLENBQ2pCOEIsU0FBVSxZQUdZcEMsUUFBQUEsWUFBR2dNLFNBQVNqTixLQUFLLENBQUMsSUFDOUJ1QixLQUFPLENBQ2pCOEIsU0FBVSxVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL2NvZGUtc3R1ZGlvL2hhc2hFbWFpbC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvbGliL3VpL2FjY291bnRzL0NoYW5nZUVtYWlsTW9kYWwuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvQmFzZURpYWxvZy5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3V0aWwvZm9ybWF0VmFsaWRhdGlvbi5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvbGliL3VpL2FjY291bnRzL0NoYW5nZUVtYWlsTW9kYWwuc3RvcnkuanN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgbWQ1IGZyb20gJ21kNSc7XG5cbmNvbnN0IEVNQUlMX1JFR0VYID0gL15bQS1aMC05Ll8lKy1dK0BbQS1aMC05Li1dK1xcLltBLVpdezIsfSQvaTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgLy8gSGFzaCB0aGUgZW1haWwsIGlmIGl0IGlzIGFuIGVtYWlsLlxuICBjb25zdCBlbWFpbCA9IG5vcm1hbGl6ZUVtYWlsKCQob3B0aW9ucy5lbWFpbF9zZWxlY3RvcikudmFsKCkpO1xuICBpZiAoZW1haWwgIT09ICcnICYmIEVNQUlMX1JFR0VYLnRlc3QoZW1haWwpKSB7XG4gICAgY29uc3QgaGFzaGVkX2VtYWlsID0gaGFzaEVtYWlsKGVtYWlsKTtcbiAgICAkKG9wdGlvbnMuaGFzaGVkX2VtYWlsX3NlbGVjdG9yKS52YWwoaGFzaGVkX2VtYWlsKTtcblxuICAgIC8vIFVubGVzcyB3ZSB3YW50IHRvIGRlbGliZXJhdGVseSBza2lwIHRoZSBzdGVwIG9mIGNsZWFyaW5nIHRoZSBlbWFpbC5cbiAgICBpZiAoIW9wdGlvbnMuc2tpcF9jbGVhcl9lbWFpbCkge1xuICAgICAgLy8gSWYgYWdlIDwgMTMsIGRvbid0IHNlbmQgdGhlIHBsYWludGV4dCBlbWFpbC5cbiAgICAgIGlmICghb3B0aW9ucy5hZ2Vfc2VsZWN0b3IgfHwgJChvcHRpb25zLmFnZV9zZWxlY3RvcikudmFsKCkgPCAxMykge1xuICAgICAgICAkKG9wdGlvbnMuZW1haWxfc2VsZWN0b3IpLnZhbCgnJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXNoRW1haWwoY2xlYXJ0ZXh0RW1haWwpIHtcbiAgcmV0dXJuIG1kNShub3JtYWxpemVFbWFpbChjbGVhcnRleHRFbWFpbCkpO1xufVxuXG5mdW5jdGlvbiBub3JtYWxpemVFbWFpbChyYXdFbWFpbCkge1xuICByZXR1cm4gcmF3RW1haWwudG9Mb3dlckNhc2UoKS50cmltKCk7XG59XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuXG5pbXBvcnQge2hhc2hFbWFpbH0gZnJvbSAnLi4vLi4vLi4vY29kZS1zdHVkaW8vaGFzaEVtYWlsJztcbmltcG9ydCBCYXNlRGlhbG9nIGZyb20gJy4uLy4uLy4uL3RlbXBsYXRlcy9CYXNlRGlhbG9nJztcbmltcG9ydCBjb2xvciBmcm9tICcuLi8uLi8uLi91dGlsL2NvbG9yJztcbmltcG9ydCB7aXNFbWFpbH0gZnJvbSAnLi4vLi4vLi4vdXRpbC9mb3JtYXRWYWxpZGF0aW9uJztcbmltcG9ydCB7SGVhZGVyLCBDb25maXJtQ2FuY2VsRm9vdGVyfSBmcm9tICcuLi9TeXN0ZW1EaWFsb2cvU3lzdGVtRGlhbG9nJztcblxuaW1wb3J0IENoYW5nZUVtYWlsRm9ybSBmcm9tICcuL0NoYW5nZUVtYWlsRm9ybSc7XG5cbmNvbnN0IFNUQVRFX0lOSVRJQUwgPSAnaW5pdGlhbCc7XG5jb25zdCBTVEFURV9TQVZJTkcgPSAnc2F2aW5nJztcbmNvbnN0IFNUQVRFX1VOS05PV05fRVJST1IgPSAndW5rbm93bi1lcnJvcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYW5nZUVtYWlsTW9kYWwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtmdW5jdGlvbih7bmV3RW1haWw6IHN0cmluZywgY3VycmVudFBhc3N3b3JkOiBzdHJpbmd9KTpQcm9taXNlfVxuICAgICAqL1xuICAgIGhhbmRsZVN1Ym1pdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7ZnVuY3Rpb24oKX1cbiAgICAgKi9cbiAgICBoYW5kbGVDYW5jZWw6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgdXNlclR5cGU6IFByb3BUeXBlcy5vbmVPZihbJ3N0dWRlbnQnLCAndGVhY2hlciddKS5pc1JlcXVpcmVkLFxuICAgIGlzUGFzc3dvcmRSZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgICBjdXJyZW50SGFzaGVkRW1haWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH07XG5cbiAgc3RhdGUgPSB7XG4gICAgc2F2ZVN0YXRlOiBTVEFURV9JTklUSUFMLFxuICAgIHZhbHVlczoge1xuICAgICAgbmV3RW1haWw6ICcnLFxuICAgICAgY3VycmVudFBhc3N3b3JkOiAnJyxcbiAgICAgIGVtYWlsT3B0SW46ICcnLFxuICAgIH0sXG4gICAgc2VydmVyRXJyb3JzOiB7XG4gICAgICBuZXdFbWFpbDogJycsXG4gICAgICBjdXJyZW50UGFzc3dvcmQ6ICcnLFxuICAgICAgZW1haWxPcHRJbjogJycsXG4gICAgfSxcbiAgfTtcblxuICBzYXZlID0gKCkgPT4ge1xuICAgIC8vIE5vLW9wIGlmIHdlIGtub3cgdGhlIGZvcm0gaXMgaW52YWxpZCwgY2xpZW50LXNpZGUuXG4gICAgLy8gVGhpcyBibG9ja3MgcmV0dXJuLWtleSBzdWJtaXNzaW9uIHdoZW4gdGhlIGZvcm0gaXMgaW52YWxpZC5cbiAgICBpZiAoIXRoaXMuaXNGb3JtVmFsaWQodGhpcy5nZXRWYWxpZGF0aW9uRXJyb3JzKCkpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qge3ZhbHVlc30gPSB0aGlzLnN0YXRlO1xuICAgIHRoaXMuc2V0U3RhdGUoe3NhdmVTdGF0ZTogU1RBVEVfU0FWSU5HfSk7XG4gICAgdGhpcy5wcm9wcy5oYW5kbGVTdWJtaXQodmFsdWVzKS5jYXRjaCh0aGlzLm9uU3VibWl0RmFpbHVyZSk7XG4gIH07XG5cbiAgY2FuY2VsID0gKCkgPT4gdGhpcy5wcm9wcy5oYW5kbGVDYW5jZWwoKTtcblxuICBvblN1Ym1pdEZhaWx1cmUgPSBlcnJvciA9PiB7XG4gICAgaWYgKGVycm9yICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlcnJvciwgJ3NlcnZlckVycm9ycycpKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKFxuICAgICAgICB7XG4gICAgICAgICAgc2F2ZVN0YXRlOiBTVEFURV9JTklUSUFMLFxuICAgICAgICAgIHNlcnZlckVycm9yczogZXJyb3Iuc2VydmVyRXJyb3JzLFxuICAgICAgICB9LFxuICAgICAgICAoKSA9PiB0aGlzLmNoYW5nZUVtYWlsRm9ybS5mb2N1c09uQW5FcnJvcigpXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtzYXZlU3RhdGU6IFNUQVRFX1VOS05PV05fRVJST1J9KTtcbiAgICB9XG4gIH07XG5cbiAgaXNGb3JtVmFsaWQodmFsaWRhdGlvbkVycm9ycykge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyh2YWxpZGF0aW9uRXJyb3JzKS5ldmVyeShrZXkgPT4gIXZhbGlkYXRpb25FcnJvcnNba2V5XSk7XG4gIH1cblxuICBnZXRWYWxpZGF0aW9uRXJyb3JzKCkge1xuICAgIGNvbnN0IHtzZXJ2ZXJFcnJvcnN9ID0gdGhpcy5zdGF0ZTtcbiAgICByZXR1cm4ge1xuICAgICAgbmV3RW1haWw6IHNlcnZlckVycm9ycy5uZXdFbWFpbCB8fCB0aGlzLmdldE5ld0VtYWlsVmFsaWRhdGlvbkVycm9yKCksXG4gICAgICBjdXJyZW50UGFzc3dvcmQ6XG4gICAgICAgIHNlcnZlckVycm9ycy5jdXJyZW50UGFzc3dvcmQgfHxcbiAgICAgICAgdGhpcy5nZXRDdXJyZW50UGFzc3dvcmRWYWxpZGF0aW9uRXJyb3IoKSxcbiAgICAgIGVtYWlsT3B0SW46XG4gICAgICAgIHNlcnZlckVycm9ycy5lbWFpbE9wdEluIHx8IHRoaXMuZ2V0RW1haWxPcHRJblZhbGlkYXRpb25FcnJvcigpLFxuICAgIH07XG4gIH1cblxuICBnZXROZXdFbWFpbFZhbGlkYXRpb25FcnJvciA9ICgpID0+IHtcbiAgICBjb25zdCB7bmV3RW1haWx9ID0gdGhpcy5zdGF0ZS52YWx1ZXM7XG4gICAgY29uc3Qge2N1cnJlbnRIYXNoZWRFbWFpbH0gPSB0aGlzLnByb3BzO1xuICAgIGlmIChuZXdFbWFpbC50cmltKCkubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gaTE4bi5jaGFuZ2VFbWFpbE1vZGFsX25ld0VtYWlsX2lzUmVxdWlyZWQoKTtcbiAgICB9XG4gICAgaWYgKCFpc0VtYWlsKG5ld0VtYWlsLnRyaW0oKSkpIHtcbiAgICAgIHJldHVybiBpMThuLmNoYW5nZUVtYWlsTW9kYWxfbmV3RW1haWxfaW52YWxpZCgpO1xuICAgIH1cbiAgICBpZiAoY3VycmVudEhhc2hlZEVtYWlsID09PSBoYXNoRW1haWwobmV3RW1haWwpKSB7XG4gICAgICByZXR1cm4gaTE4bi5jaGFuZ2VFbWFpbE1vZGFsX25ld0VtYWlsX211c3RCZURpZmZlcmVudCgpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICBnZXRDdXJyZW50UGFzc3dvcmRWYWxpZGF0aW9uRXJyb3IgPSAoKSA9PiB7XG4gICAgY29uc3Qge2N1cnJlbnRQYXNzd29yZH0gPSB0aGlzLnN0YXRlLnZhbHVlcztcbiAgICBpZiAodGhpcy5wcm9wcy5pc1Bhc3N3b3JkUmVxdWlyZWQgJiYgY3VycmVudFBhc3N3b3JkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIGkxOG4uY2hhbmdlRW1haWxNb2RhbF9jdXJyZW50UGFzc3dvcmRfaXNSZXF1aXJlZCgpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICBnZXRFbWFpbE9wdEluVmFsaWRhdGlvbkVycm9yID0gKCkgPT4ge1xuICAgIGNvbnN0IHt1c2VyVHlwZX0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHtlbWFpbE9wdElufSA9IHRoaXMuc3RhdGUudmFsdWVzO1xuICAgIGlmICh1c2VyVHlwZSA9PT0gJ3RlYWNoZXInICYmIGVtYWlsT3B0SW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gaTE4bi5jaGFuZ2VFbWFpbE1vZGFsX2VtYWlsT3B0SW5faXNSZXF1aXJlZCgpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICBvbkZvcm1DaGFuZ2UgPSBuZXdWYWx1ZXMgPT4ge1xuICAgIGNvbnN0IHt2YWx1ZXM6IG9sZFZhbHVlcywgc2VydmVyRXJyb3JzfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgbmV3U2VydmVyRXJyb3JzID0gey4uLnNlcnZlckVycm9yc307XG4gICAgWyduZXdFbWFpbCcsICdjdXJyZW50UGFzc3dvcmQnLCAnZW1haWxPcHRJbiddLmZvckVhY2goZmllbGROYW1lID0+IHtcbiAgICAgIGlmIChuZXdWYWx1ZXNbZmllbGROYW1lXSAhPT0gb2xkVmFsdWVzW2ZpZWxkTmFtZV0pIHtcbiAgICAgICAgbmV3U2VydmVyRXJyb3JzW2ZpZWxkTmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB2YWx1ZXM6IG5ld1ZhbHVlcyxcbiAgICAgIHNlcnZlckVycm9yczogbmV3U2VydmVyRXJyb3JzLFxuICAgIH0pO1xuICB9O1xuXG4gIHJlbmRlciA9ICgpID0+IHtcbiAgICBjb25zdCB7dXNlclR5cGUsIGlzUGFzc3dvcmRSZXF1aXJlZH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHtzYXZlU3RhdGUsIHZhbHVlc30gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IHZhbGlkYXRpb25FcnJvcnMgPSB0aGlzLmdldFZhbGlkYXRpb25FcnJvcnMoKTtcbiAgICBjb25zdCBpc0Zvcm1WYWxpZCA9IHRoaXMuaXNGb3JtVmFsaWQodmFsaWRhdGlvbkVycm9ycyk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCYXNlRGlhbG9nXG4gICAgICAgIHVzZVVwZGF0ZWRTdHlsZXNcbiAgICAgICAgaXNPcGVuXG4gICAgICAgIGhhbmRsZUNsb3NlPXt0aGlzLmNhbmNlbH1cbiAgICAgICAgdW5jbG9zZWFibGU9e1NUQVRFX1NBVklORyA9PT0gc2F2ZVN0YXRlfVxuICAgICAgPlxuICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgICAgICA8SGVhZGVyIHRleHQ9e2kxOG4uY2hhbmdlRW1haWxNb2RhbF90aXRsZSgpfSAvPlxuICAgICAgICAgIDxDaGFuZ2VFbWFpbEZvcm1cbiAgICAgICAgICAgIHJlZj17eCA9PiAodGhpcy5jaGFuZ2VFbWFpbEZvcm0gPSB4KX1cbiAgICAgICAgICAgIHZhbHVlcz17dmFsdWVzfVxuICAgICAgICAgICAgdmFsaWRhdGlvbkVycm9ycz17dmFsaWRhdGlvbkVycm9yc31cbiAgICAgICAgICAgIGRpc2FibGVkPXtTVEFURV9TQVZJTkcgPT09IHNhdmVTdGF0ZX1cbiAgICAgICAgICAgIHVzZXJUeXBlPXt1c2VyVHlwZX1cbiAgICAgICAgICAgIGlzUGFzc3dvcmRSZXF1aXJlZD17aXNQYXNzd29yZFJlcXVpcmVkfVxuICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25Gb3JtQ2hhbmdlfVxuICAgICAgICAgICAgb25TdWJtaXQ9e3RoaXMuc2F2ZX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxDb25maXJtQ2FuY2VsRm9vdGVyXG4gICAgICAgICAgICBjb25maXJtVGV4dD17aTE4bi5jaGFuZ2VFbWFpbE1vZGFsX3NhdmUoKX1cbiAgICAgICAgICAgIG9uQ29uZmlybT17dGhpcy5zYXZlfVxuICAgICAgICAgICAgb25DYW5jZWw9e3RoaXMuY2FuY2VsfVxuICAgICAgICAgICAgZGlzYWJsZUNvbmZpcm09e1NUQVRFX1NBVklORyA9PT0gc2F2ZVN0YXRlIHx8ICFpc0Zvcm1WYWxpZH1cbiAgICAgICAgICAgIGRpc2FibGVDYW5jZWw9e1NUQVRFX1NBVklORyA9PT0gc2F2ZVN0YXRlfVxuICAgICAgICAgICAgdGFiSW5kZXg9XCIyXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7U1RBVEVfU0FWSU5HID09PSBzYXZlU3RhdGUgJiYgPGVtPntpMThuLnNhdmluZygpfTwvZW0+fVxuICAgICAgICAgICAge1NUQVRFX1VOS05PV05fRVJST1IgPT09IHNhdmVTdGF0ZSAmJiAoXG4gICAgICAgICAgICAgIDxlbT57aTE4bi5jaGFuZ2VFbWFpbE1vZGFsX3VuZXhwZWN0ZWRFcnJvcigpfTwvZW0+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvQ29uZmlybUNhbmNlbEZvb3Rlcj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0Jhc2VEaWFsb2c+XG4gICAgKTtcbiAgfTtcbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBjb250YWluZXI6IHtcbiAgICBtYXJnaW46IDIwLFxuICAgIGNvbG9yOiBjb2xvci5jaGFyY29hbCxcbiAgfSxcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGkxOG4gZnJvbSAnQGNkby9sb2NhbGUnO1xuXG5pbXBvcnQge0JBU0VfRElBTE9HX1dJRFRIfSBmcm9tICcuLi9jb25zdGFudHMnO1xuaW1wb3J0IGNvbG9yIGZyb20gJy4uL3V0aWwvY29sb3InO1xuXG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcblxuLyoqXG4gKiBCYXNlRGlhbG9nXG4gKiBBIGdlbmVyaWMgbW9kYWwgZGlhbG9nIHRoYXQgaGFzIGFuIHgtY2xvc2UgaW4gdGhlIHVwcGVyIHJpZ2h0LCBhbmQgYVxuICogc2VtaS10cmFuc3BhcmVudCBiYWNrZHJvcC4gQ2FuIGJlIGNsb3NlZCBieSBjbGlja2luZyB0aGUgeCwgY2xpY2tpbmcgdGhlXG4gKiBiYWNrZHJvcCwgb3IgcHJlc3NpbmcgZXNjLlxuICpcbiAqIFRvIHVzZSBhIHN0eWxlZCB2ZXJzaW9uIG9mIHRoaXMgY29tcG9uZW50IHRoYXQgZm9sbG93cyBvdXIgc3R5bGUgZ3VpZGUsXG4gKiB1c2UgU3R5bGl6ZWRCYXNlRGlhbG9nLmpzeC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZURpYWxvZyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgaXNPcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBoYW5kbGVDbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgdW5jbG9zZWFibGU6IFByb3BUeXBlcy5ib29sLFxuICAgIGhpZGVDbG9zZUJ1dHRvbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgaGFuZGxlS2V5RG93bjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgLy8gRm9yIHVzZSBpbiByZWFjdC1zdG9yeWJvb2s7IGFsbG93cyByZW5kZXJpbmcgZGlhbG9nIGlubGluZSBpbiBzdG9yeSB0YWJsZXMuXG4gICAgaGlkZUJhY2tkcm9wOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmdWxsV2lkdGg6IFByb3BUeXBlcy5ib29sLFxuICAgIGZ1bGxIZWlnaHQ6IFByb3BUeXBlcy5ib29sLFxuICAgIHVzZVVwZGF0ZWRTdHlsZXM6IFByb3BUeXBlcy5ib29sLFxuICAgIG5vTW9kYWxTdHlsZXM6IFByb3BUeXBlcy5ib29sLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmaXhlZFdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGZpeGVkSGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIHVzZUZsZXhib3g6IFByb3BUeXBlcy5ib29sLFxuICAgIGJvZHlJZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBib2R5Q2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHNvdW5kUGxheWVyOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIG92ZXJmbG93OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIC8vIFRlbXBvcmFyeSBwcm9wIHVudGlsIEFuaW1hdGlvblBpY2tlckJvZHkgaXMgcmVkZXNpZ25lZFxuICAgIGJhY2tkcm9wU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIH07XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5mb2N1c0RpYWxvZygpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIHRoaXMuZm9jdXNEaWFsb2coKTtcbiAgfVxuXG4gIGhhbmRsZUtleURvd24gPSBldmVudCA9PiB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgIHRoaXMuY2xvc2VEaWFsb2coKTtcbiAgICB9XG4gICAgdGhpcy5wcm9wcy5oYW5kbGVLZXlEb3duICYmIHRoaXMucHJvcHMuaGFuZGxlS2V5RG93bihldmVudCk7XG4gIH07XG5cbiAgY2xvc2VEaWFsb2cgPSAoKSA9PiB7XG4gICAgaWYgKCF0aGlzLnByb3BzLnVuY2xvc2VhYmxlICYmIHRoaXMucHJvcHMuaGFuZGxlQ2xvc2UpIHtcbiAgICAgIHRoaXMucHJvcHMuaGFuZGxlQ2xvc2UoKTtcbiAgICAgIGlmICh0aGlzLnByb3BzLnNvdW5kUGxheWVyKSB7XG4gICAgICAgIHRoaXMucHJvcHMuc291bmRQbGF5ZXIuc3RvcEFsbEF1ZGlvKCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIC8qKiBAcmV0dXJucyB7QXJyYXkuPEVsZW1lbnQ+fSAqL1xuICBnZXRUYWJiYWJsZUVsZW1lbnRzKCkge1xuICAgIHJldHVybiBbXS5zbGljZS5jYWxsKHRoaXMucmVmcy5kaWFsb2cucXVlcnlTZWxlY3RvckFsbCgnYSxidXR0b24saW5wdXQnKSk7XG4gIH1cblxuICBmb2N1c0RpYWxvZygpIHtcbiAgICAvLyBEb24ndCBzdGVhbCBmb2N1cyBpZiB0aGUgYWN0aXZlIGVsZW1lbnQgaXMgYWxyZWFkeSBhIGRlc2NlbmRhbnQgb2YgdGhlXG4gICAgLy8gZGlhbG9nIC0gcHJldmVudHMgZm9jdXMgbG9zcyBvbiB1cGRhdGVzIG9mIG9wZW4gQmFzZURpYWxvZyBjb21wb25lbnRzLlxuICAgIGNvbnN0IGRlc2NlbmRhbnRJc0FjdGl2ZSA9XG4gICAgICBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmXG4gICAgICB0aGlzLnJlZnMuZGlhbG9nICYmXG4gICAgICB0aGlzLnJlZnMuZGlhbG9nLmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuICAgIGlmICh0aGlzLnByb3BzLmlzT3BlbiAmJiAhZGVzY2VuZGFudElzQWN0aXZlKSB7XG4gICAgICB0aGlzLnJlZnMuZGlhbG9nLmZvY3VzKCk7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmICghdGhpcy5wcm9wcy5pc09wZW4gJiYgIXRoaXMucHJvcHMuaGlkZUJhY2tkcm9wKSB7XG4gICAgICByZXR1cm4gPGRpdiAvPjtcbiAgICB9XG5cbiAgICBsZXQgYm9keVN0eWxlLCBtb2RhbEJvZHlTdHlsZSwgeENsb3NlU3R5bGU7XG4gICAgaWYgKHRoaXMucHJvcHMuZnVsbFdpZHRoKSB7XG4gICAgICBib2R5U3R5bGUgPSB7XG4gICAgICAgIC4uLmJvZHlTdHlsZSxcbiAgICAgICAgd2lkdGg6ICc5MCUnLFxuICAgICAgICBtYXJnaW5MZWZ0OiAnLTQ1JScsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAodGhpcy5wcm9wcy5mdWxsSGVpZ2h0KSB7XG4gICAgICBib2R5U3R5bGUgPSB7XG4gICAgICAgIC4uLmJvZHlTdHlsZSxcbiAgICAgICAgaGVpZ2h0OiAnODAlJyxcbiAgICAgIH07XG4gICAgICBtb2RhbEJvZHlTdHlsZSA9IHtcbiAgICAgICAgLi4ubW9kYWxCb2R5U3R5bGUsXG4gICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBsZXQgd3JhcHBlckNsYXNzTmFtZXMgPSAnJztcbiAgICBsZXQgbW9kYWxDbGFzc05hbWVzID0gJ21vZGFsJztcbiAgICBsZXQgbW9kYWxCb2R5Q2xhc3NOYW1lcyA9ICdtb2RhbC1ib2R5JztcbiAgICBsZXQgbW9kYWxCYWNrZHJvcENsYXNzTmFtZXMgPSAnbW9kYWwtYmFja2Ryb3AnO1xuICAgIGNvbnN0IG92ZXJmbG93WCA9IHRoaXMucHJvcHMub3ZlcmZsb3cgfHwgJ2hpZGRlbic7XG4gICAgY29uc3Qgb3ZlcmZsb3dZID1cbiAgICAgIHRoaXMucHJvcHMub3ZlcmZsb3cgfHxcbiAgICAgICh0aGlzLnByb3BzLmZpeGVkSGVpZ2h0IHx8IHRoaXMucHJvcHMuZnVsbEhlaWdodCA/ICdoaWRkZW4nIDogJ2F1dG8nKTtcblxuICAgIGlmICh0aGlzLnByb3BzLnVzZVVwZGF0ZWRTdHlsZXMpIHtcbiAgICAgIHdyYXBwZXJDbGFzc05hbWVzID0gJ2Rhc2hib2FyZC1zdHlsZXMnO1xuICAgICAgbW9kYWxCb2R5Q2xhc3NOYW1lcyA9ICcnO1xuICAgICAgbW9kYWxCb2R5U3R5bGUgPSB7XG4gICAgICAgIGJhY2tncm91bmQ6ICcjZmZmJyxcbiAgICAgICAgaGVpZ2h0OiB0aGlzLnByb3BzLmZpeGVkSGVpZ2h0LFxuICAgICAgICBtYXhIZWlnaHQ6ICF0aGlzLnByb3BzLmZpeGVkSGVpZ2h0ICYmICc4MHZoJyxcbiAgICAgICAgb3ZlcmZsb3dYOiBvdmVyZmxvd1gsXG4gICAgICAgIG92ZXJmbG93WTogb3ZlcmZsb3dZLFxuICAgICAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgICB9O1xuICAgICAgaWYgKHRoaXMucHJvcHMudXNlRmxleGJveCkge1xuICAgICAgICBtb2RhbEJvZHlTdHlsZSA9IHtcbiAgICAgICAgICAuLi5tb2RhbEJvZHlTdHlsZSxcbiAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBib2R5U3R5bGUgPSB7XG4gICAgICAgIC4uLmJvZHlTdHlsZSxcbiAgICAgICAgd2lkdGg6IHRoaXMucHJvcHMuZml4ZWRXaWR0aCB8fCBCQVNFX0RJQUxPR19XSURUSCxcbiAgICAgICAgbWFyZ2luTGVmdDogLXRoaXMucHJvcHMuZml4ZWRXaWR0aCAvIDIgfHwgLTM1MCxcbiAgICAgIH07XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLm5vTW9kYWxTdHlsZXMpIHtcbiAgICAgIG1vZGFsQ2xhc3NOYW1lcyA9ICcnO1xuICAgICAgbW9kYWxCb2R5Q2xhc3NOYW1lcyA9ICcnO1xuICAgIH1cblxuICAgIGJvZHlTdHlsZSA9IHtcbiAgICAgIC4uLmJvZHlTdHlsZSxcbiAgICAgIC4uLih0aGlzLnByb3BzLmhpZGVCYWNrZHJvcCAmJiB7XG4gICAgICAgIHBvc2l0aW9uOiAnaW5pdGlhbCcsXG4gICAgICAgIG1hcmdpbkxlZnQ6IDAsXG4gICAgICB9KSxcbiAgICAgIC4uLnRoaXMucHJvcHMuc3R5bGUsXG4gICAgfTtcbiAgICB4Q2xvc2VTdHlsZSA9IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgdG9wOiAwLFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICBwYWRkaW5nOiAwLFxuICAgICAgY29sb3I6IGNvbG9yLm5ldXRyYWxfZGFyazMwLFxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICBmb250U2l6ZTogMjQsXG4gICAgICBib3JkZXI6ICdub25lJyxcbiAgICB9O1xuXG4gICAgbW9kYWxCb2R5Q2xhc3NOYW1lcyA9IFttb2RhbEJvZHlDbGFzc05hbWVzLCB0aGlzLnByb3BzLmJvZHlDbGFzc05hbWVdXG4gICAgICAuZmlsdGVyKGNsYXNzTmFtZSA9PiAhIWNsYXNzTmFtZSlcbiAgICAgIC5qb2luKCcgJyk7XG5cbiAgICBsZXQgYm9keSA9IChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e2JvZHlTdHlsZX1cbiAgICAgICAgdGFiSW5kZXg9XCItMVwiXG4gICAgICAgIGNsYXNzTmFtZT17bW9kYWxDbGFzc05hbWVzfVxuICAgICAgICByZWY9XCJkaWFsb2dcIlxuICAgICAgICBvbktleURvd249e3RoaXMuaGFuZGxlS2V5RG93bn1cbiAgICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHN0eWxlPXttb2RhbEJvZHlTdHlsZX1cbiAgICAgICAgICBpZD17dGhpcy5wcm9wcy5ib2R5SWR9XG4gICAgICAgICAgY2xhc3NOYW1lPXttb2RhbEJvZHlDbGFzc05hbWVzfVxuICAgICAgICA+XG4gICAgICAgICAgeyF0aGlzLnByb3BzLnVuY2xvc2VhYmxlICYmICF0aGlzLnByb3BzLmhpZGVDbG9zZUJ1dHRvbiAmJiAoXG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIGlkPVwieC1jbG9zZVwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuY2xvc2VEaWFsb2d9XG4gICAgICAgICAgICAgIGljb249XCJmYS1zb2xpZCBmYS14bWFya1wiXG4gICAgICAgICAgICAgIHN0eWxlPXt4Q2xvc2VTdHlsZX1cbiAgICAgICAgICAgICAgY29sb3I9XCJ3aGl0ZVwiXG4gICAgICAgICAgICAgIGFyaWEtbGFiZWw9e2kxOG4uY2xvc2VEaWFsb2coKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuXG4gICAgaWYgKHRoaXMucHJvcHMuaGlkZUJhY2tkcm9wKSB7XG4gICAgICByZXR1cm4gYm9keTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e3dyYXBwZXJDbGFzc05hbWVzfT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT17bW9kYWxCYWNrZHJvcENsYXNzTmFtZXN9XG4gICAgICAgICAgc3R5bGU9e3RoaXMucHJvcHMuYmFja2Ryb3BTdHlsZX1cbiAgICAgICAgICBvbkNsaWNrPXt0aGlzLmNsb3NlRGlhbG9nfVxuICAgICAgICAvPlxuICAgICAgICB7Ym9keX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiIsIi8vIFJGQyA1MzIyIE9mZmljaWFsIFN0YW5kYXJkIGVtYWlsIHJlZ2V4XG4vLyBTb3VyY2U6IGh0dHA6Ly9lbWFpbHJlZ2V4LmNvbS9cblxuY29uc3QgRU1BSUxfUkVHRVggPVxuICAvXigoW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31dKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkLztcbmV4cG9ydCBjb25zdCBpc0VtYWlsID0gdmFsdWUgPT4gRU1BSUxfUkVHRVgudGVzdCh2YWx1ZSk7XG5cbmNvbnN0IFpJUF9DT0RFX1JFR0VYID0gL15cXGR7NX0oW1xcVy1dP1xcZHs0fSk/JC87XG5leHBvcnQgY29uc3QgaXNaaXBDb2RlID0gdmFsdWUgPT4gWklQX0NPREVfUkVHRVgudGVzdCh2YWx1ZSk7XG5cbmV4cG9ydCBjb25zdCBpc0ludCA9IHZhbHVlID0+IHtcbiAgLy8gU3ViIG91dCBjb21tYXNcbiAgY29uc3QgbmV3VmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC8sL2csICcnKTtcbiAgcmV0dXJuIHBhcnNlSW50KG5ld1ZhbHVlLCAxMCkudG9TdHJpbmcoKSA9PT0gbmV3VmFsdWU7XG59O1xuZXhwb3J0IGNvbnN0IGlzUGVyY2VudCA9IHZhbHVlID0+IHtcbiAgbGV0IHBlcmNlbnQgPSBwYXJzZUZsb2F0KHZhbHVlKTtcblxuICByZXR1cm4gMCA8PSBwZXJjZW50ICYmIHBlcmNlbnQgPD0gMTAwO1xufTtcbiIsImltcG9ydCB7YWN0aW9ufSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IENoYW5nZUVtYWlsTW9kYWwgZnJvbSAnLi9DaGFuZ2VFbWFpbE1vZGFsJztcblxuY29uc3QgREVGQVVMVF9QUk9QUyA9IHtcbiAgaGFuZGxlU3VibWl0OiBhY3Rpb24oJ2hhbmRsZVN1Ym1pdCBjYWxsYmFjaycpLFxuICBoYW5kbGVDYW5jZWw6IGFjdGlvbignaGFuZGxlQ2FuY2VsIGNhbGxiYWNrJyksXG4gIGlzUGFzc3dvcmRSZXF1aXJlZDogdHJ1ZSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBDaGFuZ2VFbWFpbE1vZGFsLFxufTtcblxuY29uc3QgY29udGFpbmVyID0ge1xuICBtYXJnaW46ICdhdXRvJyxcbiAgd2lkdGg6ICc1MCUnLFxuICBwYWRkaW5nOiAnMTBweCcsXG59O1xuXG5jb25zdCBUZW1wbGF0ZSA9IGFyZ3MgPT4gKFxuICA8ZGl2IHN0eWxlPXtjb250YWluZXJ9PlxuICAgIDxDaGFuZ2VFbWFpbE1vZGFsIHsuLi5ERUZBVUxUX1BST1BTfSB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgY29uc3QgU3R1ZGVudFZpZXcgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcblN0dWRlbnRWaWV3LmFyZ3MgPSB7XG4gIHVzZXJUeXBlOiAnc3R1ZGVudCcsXG59O1xuXG5leHBvcnQgY29uc3QgVGVhY2hlclZpZXcgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcblRlYWNoZXJWaWV3LmFyZ3MgPSB7XG4gIHVzZXJUeXBlOiAndGVhY2hlcicsXG59O1xuIl0sIm5hbWVzIjpbIl9kZWZhdWx0Iiwib3B0aW9ucyIsImVtYWlsIiwibm9ybWFsaXplRW1haWwiLCIkIiwiZW1haWxfc2VsZWN0b3IiLCJ2YWwiLCJFTUFJTF9SRUdFWCIsInRlc3QiLCJoYXNoZWRfZW1haWwiLCJoYXNoRW1haWwiLCJoYXNoZWRfZW1haWxfc2VsZWN0b3IiLCJza2lwX2NsZWFyX2VtYWlsIiwiYWdlX3NlbGVjdG9yIiwiX2pxdWVyeSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX21kIiwib2JqIiwiX19lc01vZHVsZSIsImNsZWFydGV4dEVtYWlsIiwibWQ1IiwicmF3RW1haWwiLCJ0b0xvd2VyQ2FzZSIsInRyaW0iLCJfcHJvcFR5cGVzIiwiX3JlYWN0IiwiX2xvY2FsZSIsIl9oYXNoRW1haWwiLCJfQmFzZURpYWxvZyIsIl9jb2xvciIsIl9mb3JtYXRWYWxpZGF0aW9uIiwiX1N5c3RlbURpYWxvZyIsIl9DaGFuZ2VFbWFpbEZvcm0iLCJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfc2V0UHJvdG90eXBlT2YiLCJwIiwic2V0UHJvdG90eXBlT2YiLCJiaW5kIiwiX19wcm90b19fIiwiX2RlZmluZVByb3BlcnR5Iiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsImkiLCJfdG9QcmltaXRpdmUiLCJ0b1ByaW1pdGl2ZSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiQ2hhbmdlRW1haWxNb2RhbCIsImV4cG9ydHMiLCJfUmVhY3QkQ29tcG9uZW50IiwiX3RoaXMiLCJfbGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJncyIsIkFycmF5IiwiX2tleSIsImNvbmNhdCIsInNhdmVTdGF0ZSIsInZhbHVlcyIsIm5ld0VtYWlsIiwiY3VycmVudFBhc3N3b3JkIiwiZW1haWxPcHRJbiIsInNlcnZlckVycm9ycyIsImlzRm9ybVZhbGlkIiwiZ2V0VmFsaWRhdGlvbkVycm9ycyIsInN0YXRlIiwic2V0U3RhdGUiLCJwcm9wcyIsImhhbmRsZVN1Ym1pdCIsIm9uU3VibWl0RmFpbHVyZSIsImhhbmRsZUNhbmNlbCIsImVycm9yIiwiaGFzT3duUHJvcGVydHkiLCJjaGFuZ2VFbWFpbEZvcm0iLCJmb2N1c09uQW5FcnJvciIsImN1cnJlbnRIYXNoZWRFbWFpbCIsImkxOG4iLCJjaGFuZ2VFbWFpbE1vZGFsX25ld0VtYWlsX2lzUmVxdWlyZWQiLCJpc0VtYWlsIiwiY2hhbmdlRW1haWxNb2RhbF9uZXdFbWFpbF9tdXN0QmVEaWZmZXJlbnQiLCJjaGFuZ2VFbWFpbE1vZGFsX25ld0VtYWlsX2ludmFsaWQiLCJpc1Bhc3N3b3JkUmVxdWlyZWQiLCJjaGFuZ2VFbWFpbE1vZGFsX2N1cnJlbnRQYXNzd29yZF9pc1JlcXVpcmVkIiwidXNlclR5cGUiLCJjaGFuZ2VFbWFpbE1vZGFsX2VtYWlsT3B0SW5faXNSZXF1aXJlZCIsIm5ld1ZhbHVlcyIsIl90aGlzJHN0YXRlIiwib2xkVmFsdWVzIiwibmV3U2VydmVyRXJyb3JzIiwiX29iamVjdFNwcmVhZCIsImZvckVhY2giLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImZpZWxkTmFtZSIsInVuZGVmaW5lZCIsIl90aGlzJHByb3BzIiwiX3RoaXMkc3RhdGUyIiwidmFsaWRhdGlvbkVycm9ycyIsImNyZWF0ZUVsZW1lbnQiLCJ1c2VVcGRhdGVkU3R5bGVzIiwiaXNPcGVuIiwiaGFuZGxlQ2xvc2UiLCJjYW5jZWwiLCJ1bmNsb3NlYWJsZSIsInN0eWxlIiwic3R5bGVzIiwiY29udGFpbmVyIiwiSGVhZGVyIiwidGV4dCIsImNoYW5nZUVtYWlsTW9kYWxfdGl0bGUiLCJyZWYiLCJ4IiwiZGlzYWJsZWQiLCJvbkNoYW5nZSIsIm9uRm9ybUNoYW5nZSIsIm9uU3VibWl0Iiwic2F2ZSIsIkNvbmZpcm1DYW5jZWxGb290ZXIiLCJjb25maXJtVGV4dCIsImNoYW5nZUVtYWlsTW9kYWxfc2F2ZSIsIm9uQ29uZmlybSIsIm9uQ2FuY2VsIiwiZGlzYWJsZUNvbmZpcm0iLCJkaXNhYmxlQ2FuY2VsIiwidGFiSW5kZXgiLCJzYXZpbmciLCJjaGFuZ2VFbWFpbE1vZGFsX3VuZXhwZWN0ZWRFcnJvciIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiX3Byb3RvIiwiZXZlcnkiLCJ0aGlzIiwiZ2V0TmV3RW1haWxWYWxpZGF0aW9uRXJyb3IiLCJnZXRDdXJyZW50UGFzc3dvcmRWYWxpZGF0aW9uRXJyb3IiLCJnZXRFbWFpbE9wdEluVmFsaWRhdGlvbkVycm9yIiwiUmVhY3QiLCJDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJmdW5jIiwiaXNSZXF1aXJlZCIsIm9uZU9mIiwiYm9vbCIsInN0cmluZyIsIm1hcmdpbiIsImNvbG9yIiwiY2hhcmNvYWwiLCJtb2R1bGUiLCJfY29uc3RhbnRzIiwiX0J1dHRvbiIsIkJhc2VEaWFsb2ciLCJldmVudCIsImNsb3NlRGlhbG9nIiwiaGFuZGxlS2V5RG93biIsInNvdW5kUGxheWVyIiwic3RvcEFsbEF1ZGlvIiwiY29tcG9uZW50RGlkTW91bnQiLCJmb2N1c0RpYWxvZyIsImNvbXBvbmVudERpZFVwZGF0ZSIsImdldFRhYmJhYmxlRWxlbWVudHMiLCJzbGljZSIsInJlZnMiLCJkaWFsb2ciLCJxdWVyeVNlbGVjdG9yQWxsIiwiZGVzY2VuZGFudElzQWN0aXZlIiwiZG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiY29udGFpbnMiLCJmb2N1cyIsInJlbmRlciIsImhpZGVCYWNrZHJvcCIsImJvZHlTdHlsZSIsIm1vZGFsQm9keVN0eWxlIiwieENsb3NlU3R5bGUiLCJmdWxsV2lkdGgiLCJ3aWR0aCIsIm1hcmdpbkxlZnQiLCJmdWxsSGVpZ2h0IiwiaGVpZ2h0IiwiYm94U2l6aW5nIiwid3JhcHBlckNsYXNzTmFtZXMiLCJtb2RhbENsYXNzTmFtZXMiLCJtb2RhbEJvZHlDbGFzc05hbWVzIiwib3ZlcmZsb3dYIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1kiLCJmaXhlZEhlaWdodCIsImJhY2tncm91bmQiLCJtYXhIZWlnaHQiLCJib3JkZXJSYWRpdXMiLCJ1c2VGbGV4Ym94IiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJmaXhlZFdpZHRoIiwiQkFTRV9ESUFMT0dfV0lEVEgiLCJub01vZGFsU3R5bGVzIiwicG9zaXRpb24iLCJ0b3AiLCJyaWdodCIsInBhZGRpbmciLCJuZXV0cmFsX2RhcmszMCIsImN1cnNvciIsImZvbnRTaXplIiwiYm9yZGVyIiwiYm9keUNsYXNzTmFtZSIsImNsYXNzTmFtZSIsImpvaW4iLCJib2R5Iiwib25LZXlEb3duIiwiaWQiLCJib2R5SWQiLCJoaWRlQ2xvc2VCdXR0b24iLCJvbkNsaWNrIiwiaWNvbiIsImNoaWxkcmVuIiwiYmFja2Ryb3BTdHlsZSIsIm5vZGUiLCJudW1iZXIiLCJvYmplY3QiLCJaSVBfQ09ERV9SRUdFWCIsImlzWmlwQ29kZSIsImlzSW50IiwibmV3VmFsdWUiLCJyZXBsYWNlIiwicGFyc2VJbnQiLCJ0b1N0cmluZyIsImlzUGVyY2VudCIsInBlcmNlbnQiLCJwYXJzZUZsb2F0IiwiX2FkZG9uQWN0aW9ucyIsIl9DaGFuZ2VFbWFpbE1vZGFsIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJ0YXJnZXQiLCJzb3VyY2UiLCJERUZBVUxUX1BST1BTIiwiYWN0aW9uIiwiY29tcG9uZW50IiwiVGVtcGxhdGUiXSwic291cmNlUm9vdCI6IiJ9