/*! For license information please see templates-sectionProgress-progressTables-ProgressTableDetailCell-story.9a58690f.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[465],{"./src/legacySharedComponents/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/progress/BubbleBadge.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AssessmentBadge=AssessmentBadge,exports.BadgeType=void 0,exports.KeepWorkingBadge=KeepWorkingBadge,exports.default=BubbleBadge;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_utils=__webpack_require__("./src/utils.js"),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var BadgeType=exports.BadgeType=(0,_utils.makeEnum)("assessment","keepWorking");function BubbleBadge(_ref){var badgeType=_ref.badgeType,bubbleSize=_ref.bubbleSize,bubbleShape=_ref.bubbleShape;return[_BubbleFactory.BubbleSize.full,_BubbleFactory.BubbleSize.letter].includes(bubbleSize)?badgeType===BadgeType.assessment?AssessmentBubbleBadge(bubbleShape):badgeType===BadgeType.keepWorking?KeepWorkingBubbleBadge(bubbleSize):null:null}function AssessmentBubbleBadge(bubbleShape){var bubblePositioning=bubbleShape===_BubbleFactory.BubbleShape.diamond?styles.diamondBubblePosition:styles.bubblePosition;return _react.default.createElement("div",{style:bubblePositioning},_react.default.createElement(AssessmentBadge,null))}function KeepWorkingBubbleBadge(bubbleSize){var isSmall=bubbleSize===_BubbleFactory.BubbleSize.letter,bubblePositioning=isSmall?styles.keepWorkingSmallBadgePosition:styles.keepWorkingBadgePosition;return _react.default.createElement("div",{style:bubblePositioning},_react.default.createElement(KeepWorkingBadge,{isSmall}))}function KeepWorkingBadge(_ref2){var isSmall=_ref2.isSmall,style=_ref2.style,badgeSize=isSmall?styles.keepWorkingBadgeSmallSize:styles.keepWorkingBadgeFullSize;return _react.default.createElement("div",{style:_objectSpread(_objectSpread(_objectSpread({},styles.keepWorkingBadge),badgeSize),style)})}function AssessmentBadge(){return _react.default.createElement("span",{className:"fa-stack",style:styles.container},_react.default.createElement(_FontAwesome.default,{icon:"circle",className:"fa-stack-2x",style:styles.purple}),_react.default.createElement(_FontAwesome.default,{icon:"circle-thin",className:"fa-stack-2x",style:styles.white}),_react.default.createElement(_FontAwesome.default,{icon:"check",className:"fa-stack-1x",style:styles.white}))}BubbleBadge.propTypes={badgeType:_propTypes.default.oneOf(Object.values(BadgeType)).isRequired,bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired,bubbleShape:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleShape)).isRequired},AssessmentBubbleBadge.propTypes={bubbleShape:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleShape)).isRequired},KeepWorkingBubbleBadge.propTypes={bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired},KeepWorkingBadge.propTypes={isSmall:_propTypes.default.bool,style:_propTypes.default.object},AssessmentBadge.propTypes={hasWhiteBorder:_propTypes.default.bool,style:_propTypes.default.object};var styles={container:{fontSize:10},bubblePosition:{position:"absolute",top:-7,right:-7},diamondBubblePosition:{position:"absolute",top:-13,right:-17},purple:{color:_color.default.purple},white:{color:_color.default.white},keepWorkingSmallBadgePosition:{position:"absolute",top:-2,right:-2},keepWorkingBadgePosition:{position:"absolute",top:0,right:-2},keepWorkingBadge:{borderRadius:"50%",backgroundColor:_color.default.red},keepWorkingBadgeFullSize:{width:10,height:10},keepWorkingBadgeSmallSize:{width:7,height:7}}},"./src/templates/progress/BubbleFactory.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BasicBubble=BasicBubble,exports.BasicTooltip=BasicTooltip,exports.BubbleLink=BubbleLink,exports.BubbleSize=exports.BubbleShape=void 0,exports.BubbleTooltip=BubbleTooltip,exports.bubbleContainerWidths=void 0,exports.getBubbleClassNames=function getBubbleClassNames(isEnabled){return(0,_classnames.default)("progress-bubble",{enabled:isEnabled})},exports.getBubbleContent=function getBubbleContent(isLocked,isUnplugged,isBonus,isPaired,title,bubbleSize){if(bubbleSize===BubbleSize.dot)return null;return isUnplugged?_react.default.createElement("span",null,_locale.default.unpluggedActivity()):isLocked?_react.default.createElement(_FontAwesome.default,{icon:"lock"}):isPaired?_react.default.createElement(_FontAwesome.default,{icon:"users"}):isBonus?_react.default.createElement(_FontAwesome.default,{icon:"flag-checkered"}):title?_react.default.createElement("span",null,title):null},exports.getBubbleShape=function getBubbleShape(isUnplugged,isConcept){return isUnplugged?BubbleShape.pill:isConcept?BubbleShape.diamond:BubbleShape.circle},exports.getBubbleUrl=function getBubbleUrl(levelUrl,studentId,sectionId){var preserveQueryParams=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(!levelUrl)return null;var params=preserveQueryParams?_queryString.default.parse((0,_utils.currentLocation)().search):{};delete params.version,sectionId&&(params.section_id=sectionId);studentId&&(params.user_id=studentId);if(Object.keys(params).length)return"".concat(levelUrl,"?").concat(_queryString.default.stringify(params));return levelUrl},exports.unitTestExports=void 0;var _classnames=_interopRequireDefault(__webpack_require__("./node_modules/classnames/index.js")),_lodash=__webpack_require__("./node_modules/lodash/lodash.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_queryString=_interopRequireDefault(__webpack_require__("./node_modules/query-string/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_utils=__webpack_require__("./src/utils.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js"),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_TooltipWithIcon=_interopRequireDefault(__webpack_require__("./src/templates/progress/TooltipWithIcon.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_require__("./src/templates/progress/styles.scss");var BubbleSize=exports.BubbleSize=(0,_utils.makeEnum)("dot","letter","full"),BubbleShape=exports.BubbleShape=(0,_utils.makeEnum)("circle","diamond","pill");function BasicBubble(_ref){var shape=_ref.shape,size=_ref.size,progressStyle=_ref.progressStyle,classNames=_ref.classNames,children=_ref.children,bubbleStyle=mainBubbleStyle(shape,size,progressStyle);return shape===BubbleShape.diamond?_react.default.createElement(DiamondContainer,{size,bubbleStyle,classNames},children):_react.default.createElement("div",{className:classNames,style:bubbleStyle},children)}function DiamondContainer(_ref2){var size=_ref2.size,bubbleStyle=_ref2.bubbleStyle,classNames=_ref2.classNames,children=_ref2.children;return _react.default.createElement("div",{style:diamondContainerStyle(size)},_react.default.createElement("div",{className:classNames,style:bubbleStyle},_react.default.createElement("div",{style:bubbleStyles.diamondContentTransform},children)))}function BubbleLink(_ref3){var url=_ref3.url,onClick=_ref3.onClick,children=_ref3.children,a11y_description=_ref3.a11y_description;return _react.default.createElement("a",{href:url,onClick,className:"progress-bubble-link",title:a11y_description,"aria-label":a11y_description},children)}function getTooltipTextForLevel(level){var tooltipText;return tooltipText=level.isSublevel?level.display_name:level.isUnplugged?_locale.default.unpluggedActivity():level.name||level.progressionDisplayName||"",level.levelNumber&&(tooltipText="".concat(level.levelNumber,". ").concat(tooltipText)),tooltipText}function BasicTooltip(_ref4){var icon=_ref4.icon,text=_ref4.text,includeAssessmentIcon=_ref4.includeAssessmentIcon,children=_ref4.children,tooltipId=(0,_lodash.uniqueId)();return _react.default.createElement("div",{"data-tip":!0,"data-for":tooltipId,"aria-describedby":tooltipId},children,_react.default.createElement(_TooltipWithIcon.default,{tooltipId,icon,text,includeAssessmentIcon}))}function BubbleTooltip(_ref5){var level=_ref5.level,children=_ref5.children;return _react.default.createElement(BasicTooltip,{icon:(0,_progressHelpers.getIconForLevel)(level),text:getTooltipTextForLevel(level),includeAssessmentIcon:(0,_progressHelpers.isLevelAssessment)(level)},children)}BasicBubble.propTypes={shape:_propTypes.default.oneOf(Object.values(BubbleShape)).isRequired,size:_propTypes.default.oneOf(Object.values(BubbleSize)).isRequired,progressStyle:_propTypes.default.object,classNames:_propTypes.default.string,children:_propTypes.default.node},DiamondContainer.propTypes={size:_propTypes.default.oneOf(Object.values(BubbleSize)).isRequired,bubbleStyle:_propTypes.default.object,classNames:_propTypes.default.string,children:_propTypes.default.node},BubbleLink.propTypes={url:_propTypes.default.string,onClick:_propTypes.default.func,children:_propTypes.default.element.isRequired,a11y_description:_propTypes.default.string},BasicTooltip.propTypes={icon:_propTypes.default.string,text:_propTypes.default.string,includeAssessmentIcon:_propTypes.default.bool,children:_propTypes.default.element},BubbleTooltip.propTypes={level:_progressTypes.levelWithProgressType.isRequired,children:_propTypes.default.element.isRequired};var bubbleSizes=_defineProperty(_defineProperty(_defineProperty({},BubbleShape.circle,_defineProperty(_defineProperty(_defineProperty({},BubbleSize.dot,13),BubbleSize.letter,20),BubbleSize.full,34)),BubbleShape.diamond,_defineProperty(_defineProperty({},BubbleSize.dot,10),BubbleSize.full,26)),BubbleShape.pill,{}),circleMargins=_defineProperty(_defineProperty(_defineProperty({},BubbleSize.dot,2),BubbleSize.letter,3),BubbleSize.full,2),bubbleBorderRadii=_defineProperty(_defineProperty(_defineProperty({},BubbleShape.circle,_defineProperty(_defineProperty(_defineProperty({},BubbleSize.dot,bubbleSizes[BubbleShape.circle][BubbleSize.dot]),BubbleSize.letter,bubbleSizes[BubbleShape.circle][BubbleSize.letter]),BubbleSize.full,bubbleSizes[BubbleShape.circle][BubbleSize.full])),BubbleShape.diamond,_defineProperty(_defineProperty({},BubbleSize.dot,2),BubbleSize.full,4)),BubbleShape.pill,{}),bubbleContainerWidths=exports.bubbleContainerWidths=_defineProperty(_defineProperty(_defineProperty({},BubbleSize.dot,bubbleSizes[BubbleShape.circle][BubbleSize.dot]+2*circleMargins[BubbleSize.dot]),BubbleSize.letter,bubbleSizes[BubbleShape.circle][BubbleSize.letter]+2*circleMargins[BubbleSize.letter]),BubbleSize.full,bubbleSizes[BubbleShape.circle][BubbleSize.full]+2*circleMargins[BubbleSize.full]),fontSizes=_defineProperty(_defineProperty({},BubbleSize.letter,12),BubbleSize.full,16),bubbleStyles={main:_objectSpread(_objectSpread(_objectSpread(_objectSpread({},_progressStyles.flex),_progressStyles.font),(0,_progressStyles.marginTopBottom)(3)),{},{boxSizing:"border-box",letterSpacing:-.11,position:"relative",whiteSpace:"nowrap"}),pill:{borderRadius:20,fontSize:12,padding:"6px 10px"},diamond:_objectSpread(_objectSpread({},(0,_progressStyles.marginTopBottom)(6)),{},{transform:"rotate(45deg)",padding:2}),diamondContentTransform:{transform:"rotate(-45deg)"}};function mainBubbleStyle(shape,size,progressStyle){return _objectSpread(_objectSpread(_objectSpread({},bubbleStyles.main),function shapeSizeStyle(shape,size){if(shape===BubbleShape.pill)return bubbleStyles.pill;var bubbleSize=bubbleSizes[shape][size],fontSize=fontSizes[size];return _objectSpread(_objectSpread({width:bubbleSize,height:bubbleSize,maxWidth:bubbleSize,maxHeight:bubbleSize,borderRadius:bubbleBorderRadii[shape][size],fontSize,lineHeight:"".concat(fontSize,"px")},shape===BubbleShape.circle&&(0,_progressStyles.marginLeftRight)(circleMargins[size])),shape===BubbleShape.diamond&&bubbleStyles.diamond)}(shape,size)),progressStyle)}function diamondContainerStyle(size){var containerWidth=bubbleContainerWidths[size];return _objectSpread(_objectSpread({},_progressStyles.flex),{},{width:containerWidth,height:containerWidth})}exports.unitTestExports={DiamondContainer,bubbleStyles,mainBubbleStyle}},"./src/templates/progress/TooltipWithIcon.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/legacySharedComponents/FontAwesome.jsx")),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_Component){function TooltipWithIcon(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(TooltipWithIcon,_Component),TooltipWithIcon.prototype.render=function render(){var _this$props=this.props,tooltipId=_this$props.tooltipId,icon=_this$props.icon,text=_this$props.text,includeAssessmentIcon=_this$props.includeAssessmentIcon;return _react.default.createElement(_reactTooltip.default,{id:tooltipId,role:"tooltip",wrapper:"span",effect:"solid"},_react.default.createElement("div",{style:styles.tooltip},includeAssessmentIcon&&_react.default.createElement(_FontAwesome.default,{icon:"check-circle",style:styles.tooltipAssessmentIcon}),_react.default.createElement(_FontAwesome.default,{icon,style:styles.tooltipIcon}),text))},TooltipWithIcon}(_react.Component),"propTypes",{tooltipId:_propTypes.default.string.isRequired,icon:_propTypes.default.string.isRequired,text:_propTypes.default.string.isRequired,includeAssessmentIcon:_propTypes.default.bool});var styles={tooltip:{lineHeight:_progressStyles.DOT_SIZE+"px"},tooltipIcon:{paddingRight:5,paddingLeft:5},tooltipAssessmentIcon:{paddingLeft:5}};module.exports=exports.default},"./src/templates/progress/progressStyles.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.inlineBlock=exports.hoverStyle=exports.font=exports.flexBetween=exports.flexAround=exports.flex=exports.SMALL_DOT_SIZE=exports.SMALL_DIAMOND_SIZE=exports.DOT_SIZE=exports.DIAMOND_DOT_SIZE=void 0,exports.levelProgressStyle=function levelProgressStyle(levelStatus,levelKind){var style={borderWidth:2,borderColor:_color.default.lighter_gray,borderStyle:"solid",color:_color.default.charcoal,backgroundColor:_color.default.level_not_tried},statusStyle=levelKind===_sharedConstants.LevelKind.assessment?assessmentStatusStyle[levelStatus]:levelStatusStyle[levelStatus];return _objectSpread(_objectSpread({},style),statusStyle)},exports.marginTopBottom=exports.marginLeftRight=void 0;var _fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.DOT_SIZE=30,exports.DIAMOND_DOT_SIZE=22,exports.SMALL_DOT_SIZE=9,exports.SMALL_DIAMOND_SIZE=6;var flex=exports.flex={display:"flex",alignItems:"center",justifyContent:"center"};exports.flexAround=_objectSpread(_objectSpread({},flex),{},{justifyContent:"space-around"}),exports.flexBetween=_objectSpread(_objectSpread({},flex),{},{justifyContent:"space-between"}),exports.inlineBlock={display:"inline-block"},exports.marginLeftRight=function marginLeftRight(margin){return{marginLeft:margin,marginRight:margin}},exports.marginTopBottom=function marginTopBottom(margin){return{marginTop:margin,marginBottom:margin}},exports.font=_objectSpread({},_fontConstants.default["main-font-semi-bold"]),exports.hoverStyle={":hover":{textDecoration:"none",color:_color.default.white,borderColor:_color.default.level_current,backgroundColor:_color.default.level_current},transition:"background-color .2s ease-out, border-color .2s ease-out, color .2s ease-out"};var assessmentStatusStyle=_defineProperty(_defineProperty(_defineProperty(_defineProperty({},_sharedConstants.LevelStatus.attempted,{borderColor:_color.default.level_submitted}),_sharedConstants.LevelStatus.submitted,{borderColor:_color.default.level_submitted,backgroundColor:_color.default.level_submitted,color:_color.default.white}),_sharedConstants.LevelStatus.completed_assessment,{borderColor:_color.default.level_submitted,backgroundColor:_color.default.level_submitted,color:_color.default.white}),_sharedConstants.LevelStatus.perfect,{borderColor:_color.default.level_submitted,backgroundColor:_color.default.level_submitted,color:_color.default.white}),levelStatusStyle=_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({},_sharedConstants.LevelStatus.attempted,{borderColor:_color.default.level_perfect}),_sharedConstants.LevelStatus.perfect,{borderColor:_color.default.level_perfect,backgroundColor:_color.default.level_perfect,color:_color.default.white}),_sharedConstants.LevelStatus.free_play_complete,{borderColor:_color.default.level_perfect,backgroundColor:_color.default.level_perfect,color:_color.default.white}),_sharedConstants.LevelStatus.passed,{borderColor:_color.default.level_perfect,backgroundColor:_color.default.level_passed}),_sharedConstants.LevelStatus.submitted,{borderColor:_color.default.level_submitted,backgroundColor:_color.default.level_submitted,color:_color.default.white}),_sharedConstants.LevelStatus.completed_assessment,{borderColor:_color.default.level_submitted,backgroundColor:_color.default.level_submitted,color:_color.default.white}),_sharedConstants.LevelStatus.review_rejected,{color:_color.default.white,borderColor:_color.default.level_review_rejected,backgroundColor:_color.default.level_review_rejected}),_sharedConstants.LevelStatus.review_accepted,{color:_color.default.white,borderColor:_color.default.level_perfect,backgroundColor:_color.default.level_perfect})},"./src/templates/sectionProgress/progressTables/ProgressTableDetailCell.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_firehose=_interopRequireDefault(__webpack_require__("./src/metrics/firehose.js")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),progressStyles=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/progressStyles.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js"),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_ProgressTableLevelBubble=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableLevelBubble.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}_defineProperty(exports.default=function(_React$Component){function ProgressTableDetailCell(props){var _this;return(_this=_React$Component.call(this,props)||this).recordBubbleClick=_this.recordBubbleClick.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableDetailCell,_React$Component);var _proto=ProgressTableDetailCell.prototype;return _proto.shouldComponentUpdate=function shouldComponentUpdate(nextProps){return!_lodash.default.isEqual(this.props,nextProps)},_proto.recordBubbleClick=function recordBubbleClick(levelId){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"go_to_level",data_json:JSON.stringify({student_id:this.props.studentId,section_id:this.props.sectionId,level_id:levelId})},{includeUserId:!0})},_proto.buildBubbleUrl=function buildBubbleUrl(level){return(0,_BubbleFactory.getBubbleUrl)(level.url,this.props.studentId,this.props.sectionId)},_proto.renderSublevels=function renderSublevels(level){var _this2=this;return _react.default.createElement("div",null,level.sublevels.map((function(sublevel){var sublevelProgress=_this2.props.studentProgress[sublevel.id];return _react.default.createElement("div",{key:sublevel.id,style:styles.sublevelContainer,onClick:function onClick(_){return _this2.recordBubbleClick(sublevel.id)}},_react.default.createElement(_ProgressTableLevelBubble.default,{levelStatus:null==sublevelProgress?void 0:sublevelProgress.status,bubbleSize:_BubbleFactory.BubbleSize.letter,isBonus:sublevel.bonus,isConcept:sublevel.isConceptLevel,title:sublevel.bubbleText,url:_this2.buildBubbleUrl(sublevel),reviewState:null==sublevelProgress?void 0:sublevelProgress.teacherFeedbackReviewState}))})))},_proto.renderBubble=function renderBubble(level){var _this3=this,levelProgress=this.props.studentProgress[level.id],url=this.buildBubbleUrl(level);return _react.default.createElement("div",{key:"".concat(level.id,"_").concat(level.levelNumber),style:styles.container},_react.default.createElement("div",{onClick:function onClick(_){return _this3.recordBubbleClick(level.id)}},_react.default.createElement(_ProgressTableLevelBubble.default,{levelStatus:null==levelProgress?void 0:levelProgress.status,isLocked:null==levelProgress?void 0:levelProgress.locked,levelKind:level.kind,isUnplugged:level.isUnplugged,isBonus:level.bonus,isPaired:null==levelProgress?void 0:levelProgress.paired,isConcept:level.isConceptLevel,title:level.bubbleText,url,reviewState:null==levelProgress?void 0:levelProgress.teacherFeedbackReviewState})),level.sublevels&&this.renderSublevels(level))},_proto.render=function render(){var _this4=this;return(0,_progressHelpers.lessonHasLevels)({levels:this.props.levels})?_react.default.createElement("div",{style:styles.container,className:"uitest-detail-cell cell-content"},_react.default.createElement("div",{style:styles.background}),this.props.levels.map((function(level){return _this4.renderBubble(level)}))):null},ProgressTableDetailCell}(_react.default.Component),"propTypes",{studentId:_propTypes.default.number.isRequired,sectionId:_propTypes.default.number.isRequired,levels:_propTypes.default.arrayOf(_progressTypes.levelType).isRequired,studentProgress:_propTypes.default.objectOf(_progressTypes.studentLevelProgressType).isRequired});var styles={container:_objectSpread(_objectSpread({},progressStyles.flexBetween),{},{position:"relative",whiteSpace:"nowrap"}),background:{height:10,backgroundColor:_color.default.lighter_gray,position:"absolute",left:10,right:10},sublevelContainer:{position:"relative",display:"inline-block"}};module.exports=exports.default},"./src/templates/sectionProgress/progressTables/ProgressTableLevelBubble.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_types=__webpack_require__("./src/templates/feedback/types.js"),_BubbleBadge=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/templates/progress/BubbleBadge.jsx")),_BubbleFactory=__webpack_require__("./src/templates/progress/BubbleFactory.jsx"),_CachedElement=_interopRequireDefault(__webpack_require__("./src/util/CachedElement.jsx")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts"),_progressStyles=__webpack_require__("./src/templates/progress/progressStyles.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressTableLevelBubble=exports.default=function(_React$PureComponent){function ProgressTableLevelBubble(props){var _this;return(_this=_React$PureComponent.call(this,props)||this).createBubbleElement=_this.createBubbleElement.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressTableLevelBubble,_React$PureComponent);var _proto=ProgressTableLevelBubble.prototype;return _proto.render=function render(){return _react.default.createElement(_BubbleFactory.BubbleLink,{url:this.props.url},_react.default.createElement(_CachedElement.default,{elementType:"BasicBubble",cacheKey:this.getCacheKey(),createElement:this.createBubbleElement}))},_proto.shouldShowKeepWorkingBadge=function shouldShowKeepWorkingBadge(){return[_types.ReviewStates.keepWorking,_types.ReviewStates.awaitingReview].includes(this.props.reviewState)},_proto.createBubbleElement=function createBubbleElement(){var _this$props=this.props,levelStatus=_this$props.levelStatus,levelKind=_this$props.levelKind,isLocked=_this$props.isLocked,isUnplugged=_this$props.isUnplugged,isConcept=_this$props.isConcept,isBonus=_this$props.isBonus,isPaired=_this$props.isPaired,title=_this$props.title,bubbleSize=_this$props.bubbleSize,content=(0,_BubbleFactory.getBubbleContent)(isLocked,isUnplugged,isBonus,isPaired,title,bubbleSize);return this.renderBasicBubble((0,_BubbleFactory.getBubbleShape)(isUnplugged,isConcept),bubbleSize,(0,_progressStyles.levelProgressStyle)(levelStatus,levelKind),content,this.shouldShowKeepWorkingBadge())},_proto.renderBasicBubble=function renderBasicBubble(shape,size,progressStyle,content,showKeepWorkingBadge){return _react.default.createElement(_BubbleFactory.BasicBubble,{shape,size,progressStyle,classNames:(0,_BubbleFactory.getBubbleClassNames)(!0)},content,showKeepWorkingBadge&&_react.default.createElement(_BubbleBadge.default,{badgeType:_BubbleBadge.BadgeType.keepWorking,bubbleSize:size,bubbleShape:shape}))},_proto.getCacheKey=function getCacheKey(){var _this$props2=this.props,isLocked=_this$props2.isLocked,levelStatus=_this$props2.levelStatus,levelKind=_this$props2.levelKind,isUnplugged=_this$props2.isUnplugged,isConcept=_this$props2.isConcept,isBonus=_this$props2.isBonus,isPaired=_this$props2.isPaired,title=_this$props2.title,bubbleSize=_this$props2.bubbleSize,statusString="sts=".concat(levelStatus);if(levelKind===_sharedConstants.LevelKind.assessment&&(statusString="asmt:".concat(statusString)),bubbleSize===_BubbleFactory.BubbleSize.letter){var badge=this.shouldShowKeepWorkingBadge()?"&bdg":"";return"ltr:ttl=".concat(title,"&").concat(statusString).concat(badge)}if(isUnplugged)return"unp:".concat(statusString);var shapeString="shp=".concat((0,_BubbleFactory.getBubbleShape)(isUnplugged,isConcept)),strings=[isLocked?"lkd:":isPaired?"prd:":isBonus?"bns:":title?"ttl=".concat(title):null,shapeString,statusString];return this.shouldShowKeepWorkingBadge()&&strings.push("bdg"),strings.join("&")},ProgressTableLevelBubble}(_react.default.PureComponent);_defineProperty(ProgressTableLevelBubble,"propTypes",{levelStatus:_propTypes.default.string,levelKind:_propTypes.default.string,isLocked:_propTypes.default.bool,isUnplugged:_propTypes.default.bool,isConcept:_propTypes.default.bool,isBonus:_propTypes.default.bool,isPaired:_propTypes.default.bool,bubbleSize:_propTypes.default.oneOf(Object.values(_BubbleFactory.BubbleSize)).isRequired,title:_propTypes.default.string,url:_propTypes.default.string,reviewState:_propTypes.default.oneOf(Object.keys(_types.ReviewStates))}),_defineProperty(ProgressTableLevelBubble,"defaultProps",{bubbleSize:_BubbleFactory.BubbleSize.full}),module.exports=exports.default},"./src/util/CachedElement.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=CachedElement,exports.unitTestExports=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_server=_interopRequireDefault(__webpack_require__("./node_modules/react-dom/server.browser.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function CachedElement(_ref){var elementType=_ref.elementType,cacheKey=_ref.cacheKey,createElement=_ref.createElement,htmlCache=elementsHtmlCache[elementType]||{},elementHtml=htmlCache[cacheKey];return elementHtml||(elementHtml=function createHtml(element){return _server.default.renderToStaticMarkup(element)}(createElement()),htmlCache[cacheKey]=elementHtml,elementsHtmlCache[elementType]=htmlCache),_react.default.createElement("div",{dangerouslySetInnerHTML:{__html:elementHtml}})}CachedElement.propTypes={elementType:_propTypes.default.string.isRequired,cacheKey:_propTypes.default.string.isRequired,createElement:_propTypes.default.func.isRequired};var elementsHtmlCache={};exports.unitTestExports={clearElementsCache:function clearElementsCache(){Object.keys(elementsHtmlCache).forEach((function(key){delete elementsHtmlCache[key]}))},elementsHtmlCache}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/progress/styles.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".progress-bubble.enabled{transition:background-color .2s ease-out,border-color .2s ease-out,color .2s ease-out}.progress-bubble.enabled:hover{text-decoration:none;color:#fff !important;border-color:#ffa400 !important;background-color:#ffa400 !important}a.progress-bubble-link{display:inline-block;cursor:pointer;text-decoration:none !important}a.progress-bubble-link:hover{text-decoration:none}table.progress-legend{margin-top:60px;margin-bottom:20px}table.progress-legend:nth-of-type(2){margin-top:0}table.progress-legend:only-of-type{width:100%}.progress-legend{text-align:center}.progress-legend td{padding:10px}.progress-legend tr{border:2px solid #e7e8ea;background-color:#fff}.progress-legend thead{color:#5b6770}.progress-legend thead tr{background-color:#e7e8ea}.progress-legend thead tr:first-of-type{background-color:#fff;border:none}.progress-legend thead tr:first-of-type td{font-weight:bold;font-size:18px}.progress-legend thead tr div:nth-of-type(2){font-size:10px}.progress-legend tbody td:first-of-type{border-inline-end:2px solid #e7e8ea}.progress-legend div{display:flex;align-items:center;justify-content:center}.progress-legend .level-details{padding:10px 0;white-space:nowrap}.progress-legend .level-details div:nth-of-type(2){padding-top:16px}.progress-legend .level-details i{margin-inline-end:5px}.progress-legend .end-border{border-inline-end:2px solid #e7e8ea}","",{version:3,sources:["webpack://./src/templates/progress/styles.scss","webpack://./../shared/css/color.scss"],names:[],mappings:"AAGE,yBACE,qFACE,CAGF,+BACE,oBAAA,CACA,qBAAA,CACA,+BAAA,CACA,mCAAA,CAKN,uBACE,oBAAA,CACA,cAAA,CAGA,+BAAA,CAEA,6BACE,oBAAA,CAIJ,sBACE,eAAA,CACA,kBAAA,CACA,qCACE,YAAA,CAEF,mCACE,UAAA,CAGJ,iBACE,iBAAA,CACA,oBACE,YAAA,CAEF,oBACE,wBAAA,CACA,qBC3BI,CD6BN,uBACE,aCpCO,CDqCP,0BACE,wBCnCU,CDoCV,wCACE,qBClCA,CDmCA,WAAA,CACA,2CACE,gBAAA,CACA,cAAA,CAGJ,6CACE,cAAA,CAKJ,wCACE,mCAAA,CAGJ,qBACE,YAAA,CACA,kBAAA,CACA,sBAAA,CAEF,gCACE,cAAA,CACA,kBAAA,CACA,mDACE,gBAAA,CAEF,kCACE,qBAAA,CAGJ,6BACE,mCAAA",sourcesContent:['@import "color.scss";\n\n.progress-bubble {\n  &.enabled {\n    transition:\n      background-color 0.2s ease-out,\n      border-color 0.2s ease-out,\n      color 0.2s ease-out;\n    &:hover {\n      text-decoration: none;\n      color: $white !important;\n      border-color: $level_current !important;\n      background-color: $level_current !important;\n    }\n  }\n}\n\na.progress-bubble-link {\n  display: inline-block;\n  cursor: pointer;\n\n  // Use important to overwrite default projects link underline.\n  text-decoration: none !important;\n\n  &:hover {\n    text-decoration: none;\n  }\n}\n\ntable.progress-legend {\n  margin-top: 60px;\n  margin-bottom: 20px;\n  &:nth-of-type(2) {\n    margin-top: 0;\n  }\n  &:only-of-type {\n    width: 100%;\n  }\n}\n.progress-legend {\n  text-align: center;\n  td {\n    padding: 10px;\n  }\n  tr {\n    border: 2px solid $lightest_gray;\n    background-color: $white;\n  }\n  thead {\n    color: $charcoal;\n    tr {\n      background-color: $lightest_gray;\n      &:first-of-type {\n        background-color: $white;\n        border: none;\n        td {\n          font-weight: bold;\n          font-size: 18px;\n        }\n      }\n      div:nth-of-type(2) {\n        font-size: 10px;\n      }\n    }\n  }\n  tbody {\n    td:first-of-type {\n      border-inline-end: 2px solid $lightest_gray;\n    }\n  }\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .level-details {\n    padding: 10px 0;\n    white-space: nowrap;\n    div:nth-of-type(2) {\n      padding-top: 16px;\n    }\n    i {\n      margin-inline-end: 5px;\n    }\n  }\n  .end-border {\n    border-inline-end: 2px solid $lightest_gray;\n  }\n}\n',"// colors from https://www.dropbox.com/s/ycjiwt8vxlmv2ih/Code.org_stylesheet_v2_09.05.13.pdf\n\n// Please keep this file simple; it should only contain color definitions\n//   and aliases.  Variables defined in this file are exported to\n//   apps/src/util/color.js during the apps build process.\n\n$black: #000;\n$background_black: #121416;\n$dark_gray: #2D3139;\n$darkest_gray: #292F36;\n$dark_slate_gray: #282c34;\n$darkest_slate_gray: #25292d;\n$dark_charcoal: #4d575f;\n$charcoal: #5b6770;\n$light_gray: #949ca2;\n$lighter_gray: #c6cacd;\n$lightest_gray: #e7e8ea;\n$background_gray: #f2f2f2;\n$dimgray: #696969;\n$white: #fff;\n$default_blue: #3670b3;\n\n$dark_teal: #0094a3;\n$teal: #0093a4;\n$applab_button_teal: #1abc9c;\n$light_teal: #59cad3;\n$lightish_teal: #80d6de;\n$lighter_teal: #a6e3e8;\n$lightest_teal: #d9f3f5;\n$ai_rubric_cyan: #3cfff8;\n\n$purple: #8c52ba;\n$light_purple: #a69bc1;\n$lighter_purple: #cfc9de;\n$lightest_purple: #ebe8f1;\n\n$cyan: #0094ca;\n$light_cyan: #59b9dc;\n$lighter_cyan: #a6daed;\n$lightest_cyan: #d9eff7;\n$almost_white_cyan: #f5fcff;\n\n$orange: #ffa400;\n$light_orange: #ffc459;\n$lighter_orange: #ffe0a6;\n$lightest_orange: #fff2d9;\n$dark_orange: #ff8600;\n\n$green: #b9bf15;\n$light_green: #d1d567;\n$lighter_green: #e7e9ad;\n$lightest_green: #f5f5dc;\n$highlight_green: #8afc9b;\n\n$yellow: #ffb81d;\n$light_yellow: #ffdb74;\n$lighter_yellow: #ffebb5;\n$lightest_yellow: #fff7df;\n\n$goldenrod: #daa520;\n\n$header_text: $white;\n$bkgnd_color: $teal;\n$inset_color: $lighter_gray;\n$dark_color: $purple;\n$hdr_color: $purple;\n\n// Some extra colors.\n$red: #c00;\n$lightest_red: #fcc;\n$dark_red: #d62911;\n$realgreen: #008000;\n$realyellow: #ff0;\n$mustardyellow: #efcd1c;\n$twitter_blue: #00aced;\n$facebook_blue: #3b5998;\n$linkedin_blue: #0077B5;\n$dark_blue: #00647f;\n$blockly_flyout_gray: #ddd;\n$default_text: #333;\n$border_gray: #bbb;\n$border_light_gray: #d8d8d8;\n$table_header: #ececec;\n$table_light_row: #fcfcfc;\n$table_dark_row: #f4f4f4;\n\n// Progress colors.\n$level_submitted: $purple;\n$level_perfect: rgb(14, 190, 14);\n$level_passed: rgb(159, 212, 159);\n$level_attempted: $realyellow;\n$level_not_tried: #fefefe;\n$level_current: $orange;\n$level_review_rejected: $red;\n$level_review_accepted: rgb(11, 142, 11); // TODO: $level_passed;\n$assessment: $cyan;\n$workspace_running_background: #e5e5e5;\n\n// Experimental Sprite Lab validation colors.\n$dark_purple: #682A77;\n$bright_green: #0ebe0e;\n$neon_pink: #e9118f;\n\n// Links (used in apps).\n$link_color: #0596ce;\n\n// Shadow.\n$shadow: rgba(0, 0, 0, 0.3);\n\n// Colors that are taken from bootstrap, and not necessarily part of our core theme.\n$bootstrap_button_blue: #337ab7;\n$bootstrap_button_red: #d9534f;\n$bootstrap_error_background: #f2dede;\n$bootstrap_error_text: #b94a48;\n$bootstrap_v3_error_text: #a94442;\n$bootstrap_error_border: #ebccd1;\n$bootstrap_warning_background: #fcf8e3;\n$bootstrap_warning_text: #c09853;\n$bootstrap_warning_border: #faebcc;\n$bootstrap_border_color: #cccccc;\n$bootstrap_success_background: #dff0d8;\n$bootstrap_success_text: #468847;\n$bootstrap_success_border: #d6e9c6;\n\n// Colors taken from droplet, not part of our core theme.\n$droplet_light_green: #d3e965;\n$droplet_blue: #64b5f6;\n$droplet_bright_blue: #19c3e1;\n$droplet_yellow: #fff176;\n$droplet_orange: #ffb74d;\n$droplet_red: #f78183;\n$droplet_cyan: #4dd0e1;\n$droplet_pink: #f57ac6;\n$droplet_purple: #bb77c7;\n$droplet_green: #68d995;\n$droplet_white: $white;\n\n// Oceans: deep blue background.\n$oceans_deep_blue: rgb(2, 0, 28);\n\n// Dark theme background (used by default in Music Lab)\n$dark_black: #121212;\n\n// ===----===----===---- Phase 1 Colors: ----===----===----===\n// Brand\n$brand_primary_light: #E0F8F9;\n$brand_primary_default: #009EB0;\n$brand_primary_dark: #007785;\n\n$brand_secondary_light: #E0D1EC;\n$brand_secondary_default: #8C52BA;\n$brand_secondary_dark: #6C468A;\n\n$brand_accent_default: #ED6060;\n\n$brand_teal_5: #DFF2F4;\n\n//Product\n$product_affirmative_default: #3EA33E;\n\n$product_negative_light: #FDEBE9;\n$product_negative_default: #E5311A;\n$product_negative_dark: #AA2513;\n\n$product_caution_default: #F9CB28;\n\n$product_information_default: #007ACC;\n\n// Neutral\n$neutral_white: #FFFFFF;\n$neutral_light: #F7F8FA;\n$neutral_gray10: #EAEBEB;\n$neutral_dark10: #EAECEF;\n$neutral_dark20: #D1D4D8;\n$neutral_dark30: #BEC2C7;\n$neutral_dark40: #ABB0B6;\n$neutral_dark50: #989EA5;\n$neutral_dark60: #858C94;\n$neutral_dark70: #727A83;\n$neutral_dark80: #5F6872;\n$neutral_dark90: #4C5661;\n$neutral_dark: #292F36;\n\n//Brands\n$google_brand_color: #0F9D58;\n$microsoft_brand_color: #FFB900;\n$facebook_brand_color: #3B5998;\n$clever_brand_color: #1464FF;\n\n// ===----===----===---- Design system colors: ----===----===----===\n\n$light_primary_100: #BFE4E8;\n$light_primary_500: #0093A4;\n$light_primary_700: #007785;\n\n$light_secondary_100: #E2D4EE;\n$light_secondary_500: #8C52BA;\n$light_secondary_700: #6C468A;\n\n$light_gray_50: #F7F8FA;\n$light_gray_100: #EAECEF;\n$light_gray_200: #D1D4D8;\n$light_gray_300: #BEC2C7;\n$light_gray_400: #ABB0B6;\n$light_gray_500: #989EA5;\n$light_gray_600: #858C94;\n$light_gray_700: #727A83;\n$light_gray_800: #5F6872;\n$light_gray_900: #4C5661;\n$light_gray_950: #394450;\n\n$light_affirmative_100: #E2F1E2;\n$light_affirmative_500: #3EA33E;\n$light_affirmative_700: #2D742D;\n\n$light_negative_100: #FBE0DD;\n$light_negative_500: #E5311A;\n$light_negative_700: #B24949;\n\n$light_caution_100: #FEF7DF;\n$light_caution_500: #F9CB28;\n$light_caution_700: #C7A220;\n\n$light_accent_100: #FAD7D7;\n$light_accent_500: #ED6060;\n$light_accent_700: #D84C4C;\n\n$light_aqua_100: #CEFFFD;\n$light_aqua_500: #3CFFF8;\n$light_aqua_700: #30CCC6;\n\n$light_orange_100: #FFEDCC;\n$light_orange_500: #FFA400;\n$light_orange_700: #CC8300;\n\n$light_info_100: #DCEFFB;\n$light_info_500: #1892E3;\n$light_info_700: #1375B6;\n\n$light_white: #FFFFFF;\n\n$light_black: #292F36;\n\n$light_black_opacity_90: rgba(41, 47, 54, 0.90);\n$light_black_opacity-80: rgba(41, 47, 54, 0.80);\n$light_black_opacity-70: rgba(41, 47, 54, 0.70);\n$light_black_opacity-60: rgba(41, 47, 54, 0.60);\n$light_black_opacity-50: rgba(41, 47, 54, 0.50);\n$light_black_opacity-40: rgba(41, 47, 54, 0.40);\n$light_black_opacity-30: rgba(41, 47, 54, 0.30);\n$light_black_opacity-20: rgba(41, 47, 54, 0.20);\n$light_black_opacity-10: rgba(41, 47, 54, 0.10);\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */"),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./src/templates/progress/styles.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_styles_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./src/templates/progress/styles.scss"),options={};options.styleTagTransform=_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_styles_scss__WEBPACK_IMPORTED_MODULE_6__.A,options);const __WEBPACK_DEFAULT_EXPORT__=_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_styles_scss__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_styles_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals?_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_4_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_4_use_2_styles_scss__WEBPACK_IMPORTED_MODULE_6__.A.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./src/templates/sectionProgress/progressTables/ProgressTableDetailCell.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.OnlyLevelUnplugged=exports.LevelWithSublevels=exports.IncludesPairedLevel=exports.FirstLevelUnplugged=exports.DiamondBubbles=exports.BasicBubbles=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts"),_progressTestHelpers=__webpack_require__("./src/templates/progress/progressTestHelpers.js"),_ProgressTableDetailCell=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/progressTables/ProgressTableDetailCell.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var statusForLevel=[_sharedConstants.LevelStatus.perfect,_sharedConstants.LevelStatus.not_tried,_sharedConstants.LevelStatus.attempted,_sharedConstants.LevelStatus.passed,_sharedConstants.LevelStatus.submitted],levels=(0,_progressTestHelpers.fakeLevels)(5);levels[0].isConceptLevel=!0;var diamondLevels=(0,_progressTestHelpers.fakeLevels)(2);diamondLevels[0].isConceptLevel=!0,diamondLevels[1].isConceptLevel=!0;var unpluggedLevel=(0,_progressTestHelpers.fakeLevel)({id:2,isUnplugged:!0}),studentProgress=(0,_progressTestHelpers.fakeProgressForLevels)(levels);levels.forEach((function(level,index){return studentProgress[level.id].status=statusForLevel[index]}));var pairedProgress=(0,_progressTestHelpers.fakeProgressForLevels)(levels);pairedProgress[levels[0].id].paired=!0;var sublevels=(0,_progressTestHelpers.fakeLevels)(5);sublevels.forEach((function(sub,index){sub.bubbleText=String.fromCharCode("a".charCodeAt(0)+index)}));var levelWithSublevels=(0,_progressTestHelpers.fakeLevels)(1)[0];levelWithSublevels.sublevels=sublevels;exports.default={component:_ProgressTableDetailCell.default};var DEFAULT_PROPS={studentId:1,sectionId:1},Template=function Template(args){return _react.default.createElement("div",{className:"progress-table"},_react.default.createElement("div",{className:"content-view"},_react.default.createElement("table",{className:"detail-view"},_react.default.createElement("tbody",null,_react.default.createElement("tr",null,_react.default.createElement("td",null,_react.default.createElement(_ProgressTableDetailCell.default,_extends({},DEFAULT_PROPS,args))))))))};(exports.LevelWithSublevels=Template.bind({})).args={levels:[levelWithSublevels],studentProgress},(exports.BasicBubbles=Template.bind({})).args={levels,studentProgress},(exports.DiamondBubbles=Template.bind({})).args={levels:diamondLevels,studentProgress},(exports.IncludesPairedLevel=Template.bind({})).args={levels,studentProgress:pairedProgress},(exports.FirstLevelUnplugged=Template.bind({})).args={levels:[unpluggedLevel].concat(function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(levels)),studentProgress},(exports.OnlyLevelUnplugged=Template.bind({})).args={levels:[unpluggedLevel],studentProgress}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLXNlY3Rpb25Qcm9ncmVzcy1wcm9ncmVzc1RhYmxlcy1Qcm9ncmVzc1RhYmxlRGV0YWlsQ2VsbC1zdG9yeS4yNjQ1NWFhNC5pZnJhbWUuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7cVFBQ0EsSUFBQUEsUUFBQUMsdUJBQUFDLG9CQUFBLG9DQUNBQyxXQUFBRix1QkFBQUMsb0JBQUEsdUNBQ0FFLE9BQUFILHVCQUFBQyxvQkFBQSxrQ0FBMEJHLFVBQUEsNkJBSDFCLFNBQUFKLHVCQUFBSyxLQUFBLE9BQUFBLEtBQUFBLElBQUFDLFdBQUFELElBQUEsU0FBQUEsSUFBQSxVQUFBRSxXQUFBLE9BQUFBLFNBQUFDLE9BQUFDLE9BQUFELE9BQUFDLE9BQUFDLE9BQUEsU0FBQUMsUUFBQSxRQUFBQyxFQUFBLEVBQUFBLEVBQUFDLFVBQUFDLE9BQUFGLElBQUEsS0FBQUcsT0FBQUYsVUFBQUQsR0FBQSxRQUFBSSxPQUFBRCxPQUFBUCxPQUFBUyxVQUFBQyxlQUFBQyxLQUFBSixPQUFBQyxPQUFBTCxPQUFBSyxLQUFBRCxPQUFBQyxLQUFBLFFBQUFMLE1BQUEsRUFBQUosU0FBQWEsTUFBQSxLQUFBUCxVQUFBLFVBQUFRLHlCQUFBTixPQUFBTyxVQUFBLFNBQUFQLE9BQUEsYUFBQUMsSUFBQUosRUFBQUQsT0FBQSxTQUFBWSw4QkFBQVIsT0FBQU8sVUFBQSxTQUFBUCxPQUFBLGFBQUFDLElBQUFKLEVBQUFELE9BQUEsR0FBQWEsV0FBQWhCLE9BQUFpQixLQUFBVixRQUFBLElBQUFILEVBQUEsRUFBQUEsRUFBQVksV0FBQVYsT0FBQUYsSUFBQUksSUFBQVEsV0FBQVosR0FBQVUsU0FBQUksUUFBQVYsTUFBQSxJQUFBTCxPQUFBSyxLQUFBRCxPQUFBQyxNQUFBLE9BQUFMLE1BQUEsQ0FBQVksQ0FBQVIsT0FBQU8sVUFBQSxHQUFBZCxPQUFBbUIsc0JBQUEsS0FBQUMsaUJBQUFwQixPQUFBbUIsc0JBQUFaLFFBQUEsSUFBQUgsRUFBQSxFQUFBQSxFQUFBZ0IsaUJB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QUFBOVIsR0FBQSxPQUFBa1Esa0JBQUFuYixFQUFBNmMsT0FBQSxDQUFBRCxDQUFBeEIsTUFBQSxTQUFBNEIscUJBQUEsVUFBQTFiLFVBQUEsd0lBQUEwYixFQUFBLENBd0Z2Q1QsQ0FBS25LLFNBQzVCaEIsa0JBRzZCMVIsUUFBQUEsbUJBQUcyYyxTQUFTOWUsS0FBSyxDQUFDLElBQzlCK2UsS0FBTyxDQUN4QmxLLE9BQVEsQ0FBQ3VKLGdCQUNUdksiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvbGVnYWN5U2hhcmVkQ29tcG9uZW50cy9Gb250QXdlc29tZS5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9CdWJibGVCYWRnZS5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9CdWJibGVGYWN0b3J5LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3Byb2dyZXNzL1Rvb2x0aXBXaXRoSWNvbi5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9wcm9ncmVzcy9wcm9ncmVzc1N0eWxlcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3NlY3Rpb25Qcm9ncmVzcy9wcm9ncmVzc1RhYmxlcy9Qcm9ncmVzc1RhYmxlRGV0YWlsQ2VsbC5qc3giLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uUHJvZ3Jlc3MvcHJvZ3Jlc3NUYWJsZXMvUHJvZ3Jlc3NUYWJsZUxldmVsQnViYmxlLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdXRpbC9DYWNoZWRFbGVtZW50LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3Byb2dyZXNzL3N0eWxlcy5zY3NzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3JlZHV4LXRodW5rL2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3Byb2dyZXNzL3N0eWxlcy5zY3NzPzU2MzkiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3NlY3Rpb25Qcm9ncmVzcy9wcm9ncmVzc1RhYmxlcy9Qcm9ncmVzc1RhYmxlRGV0YWlsQ2VsbC5zdG9yeS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBmaWxlIGZvbnQtYXdlc29tZSBoZWxwZXIgY29tcG9uZW50LiAqL1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG4vKipcbiAqIEdpdmVuIGFuIGljb24gbmFtZSwgcmVuZGVyIHRoZSBpY29uIHVzaW5nIGFuIDxpPiB0YWcgaW4gdHlwaWNhbCBmb250LWF3ZXNvbWVcbiAqIGZhc2hpb24uICBSZXF1aXJlcyBmb250LWF3ZXNvbWUgdG8gYmUgYXZhaWxhYmxlIG9uIHRoZSBwYWdlLlxuICogU2VlIGh0dHA6Ly9mb250YXdlc29tZS5pby9pY29ucy8gdG8gbG9vayB1cCBzdXBwb3J0ZWQgaWNvbiBuYW1lcy5cbiAqXG4gKiBAZGVwcmVjYXRlZCB1c2UgRFNDTyBGb250QXdlc29tZVY2SWNvbiBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZvbnRBd2Vzb21lKHtpY29uLCBjbGFzc05hbWUsIHRpdGxlLCAuLi5wcm9wc30pIHtcbiAgY29uc3QgbmV3UHJvcHMgPSBfLmFzc2lnbih7fSwgcHJvcHMsIHtcbiAgICBjbGFzc05hbWU6IGBmYSBmYS0ke2ljb259ICR7Y2xhc3NOYW1lID8gY2xhc3NOYW1lIDogJyd9YCxcbiAgfSk7XG4gIHJldHVybiA8aSB7Li4ubmV3UHJvcHN9IHRpdGxlPXt0aXRsZX0gLz47XG59XG5cbkZvbnRBd2Vzb21lLnByb3BUeXBlcyA9IHtcbiAgaWNvbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAvLyBUaXRsZSBzaG91bGQgYmUgdXNlZCBmb3Igc2VtYW50aWMgaWNvbnMuIElmIG5vdCBnaXZlbiwgdGhlIHNjcmVlbnJlYWRlciB3aWxsIG5vdCByZWFkIHRoZSBpY29uXG4gIC8vIFNlZSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9kb2NzL3dlYi9kaWctZGVlcGVyL2FjY2Vzc2liaWxpdHkjaWNvbnMtdXNlZC1hcy1zZW1hbnRpYy1lbGVtZW50c1xufTtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgY29sb3IgZnJvbSAnQGNkby9hcHBzL3V0aWwvY29sb3InO1xuaW1wb3J0IHttYWtlRW51bX0gZnJvbSAnQGNkby9hcHBzL3V0aWxzJztcblxuaW1wb3J0IEZvbnRBd2Vzb21lIGZyb20gJy4uLy4uL2xlZ2FjeVNoYXJlZENvbXBvbmVudHMvRm9udEF3ZXNvbWUnO1xuXG5pbXBvcnQge0J1YmJsZVNpemUsIEJ1YmJsZVNoYXBlfSBmcm9tICcuL0J1YmJsZUZhY3RvcnknO1xuXG5leHBvcnQgY29uc3QgQmFkZ2VUeXBlID0gbWFrZUVudW0oJ2Fzc2Vzc21lbnQnLCAna2VlcFdvcmtpbmcnKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQnViYmxlQmFkZ2Uoe2JhZGdlVHlwZSwgYnViYmxlU2l6ZSwgYnViYmxlU2hhcGV9KSB7XG4gIGNvbnN0IGNhbkhhdmVCYWRnZSA9IFtCdWJibGVTaXplLmZ1bGwsIEJ1YmJsZVNpemUubGV0dGVyXTtcbiAgaWYgKCFjYW5IYXZlQmFkZ2UuaW5jbHVkZXMoYnViYmxlU2l6ZSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGlmIChiYWRnZVR5cGUgPT09IEJhZGdlVHlwZS5hc3Nlc3NtZW50KSB7XG4gICAgcmV0dXJuIEFzc2Vzc21lbnRCdWJibGVCYWRnZShidWJibGVTaGFwZSk7XG4gIH0gZWxzZSBpZiAoYmFkZ2VUeXBlID09PSBCYWRnZVR5cGUua2VlcFdvcmtpbmcpIHtcbiAgICByZXR1cm4gS2VlcFdvcmtpbmdCdWJibGVCYWRnZShidWJibGVTaXplKTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuQnViYmxlQmFkZ2UucHJvcFR5cGVzID0ge1xuICBiYWRnZVR5cGU6IFByb3BUeXBlcy5vbmVPZihPYmplY3QudmFsdWVzKEJhZGdlVHlwZSkpLmlzUmVxdWlyZWQsXG4gIGJ1YmJsZVNpemU6IFByb3BUeXBlcy5vbmVPZihPYmplY3QudmFsdWVzKEJ1YmJsZVNpemUpKS5pc1JlcXVpcmVkLFxuICBidWJibGVTaGFwZTogUHJvcFR5cGVzLm9uZU9mKE9iamVjdC52YWx1ZXMoQnViYmxlU2hhcGUpKS5pc1JlcXVpcmVkLFxufTtcblxuZnVuY3Rpb24gQXNzZXNzbWVudEJ1YmJsZUJhZGdlKGJ1YmJsZVNoYXBlKSB7XG4gIGNvbnN0IGJ1YmJsZVBvc2l0aW9uaW5nID1cbiAgICBidWJibGVTaGFwZSA9PT0gQnViYmxlU2hhcGUuZGlhbW9uZFxuICAgICAgPyBzdHlsZXMuZGlhbW9uZEJ1YmJsZVBvc2l0aW9uXG4gICAgICA6IHN0eWxlcy5idWJibGVQb3NpdGlvbjtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgc3R5bGU9e2J1YmJsZVBvc2l0aW9uaW5nfT5cbiAgICAgIDxBc3Nlc3NtZW50QmFkZ2UgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbkFzc2Vzc21lbnRCdWJibGVCYWRnZS5wcm9wVHlwZXMgPSB7XG4gIGJ1YmJsZVNoYXBlOiBQcm9wVHlwZXMub25lT2YoT2JqZWN0LnZhbHVlcyhCdWJibGVTaGFwZSkpLmlzUmVxdWlyZWQsXG59O1xuXG5mdW5jdGlvbiBLZWVwV29ya2luZ0J1YmJsZUJhZGdlKGJ1YmJsZVNpemUpIHtcbiAgY29uc3QgaXNTbWFsbCA9IGJ1YmJsZVNpemUgPT09IEJ1YmJsZVNpemUubGV0dGVyO1xuXG4gIGNvbnN0IGJ1YmJsZVBvc2l0aW9uaW5nID0gaXNTbWFsbFxuICAgID8gc3R5bGVzLmtlZXBXb3JraW5nU21hbGxCYWRnZVBvc2l0aW9uXG4gICAgOiBzdHlsZXMua2VlcFdvcmtpbmdCYWRnZVBvc2l0aW9uO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBzdHlsZT17YnViYmxlUG9zaXRpb25pbmd9PlxuICAgICAgPEtlZXBXb3JraW5nQmFkZ2UgaXNTbWFsbD17aXNTbWFsbH0gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbktlZXBXb3JraW5nQnViYmxlQmFkZ2UucHJvcFR5cGVzID0ge1xuICBidWJibGVTaXplOiBQcm9wVHlwZXMub25lT2YoT2JqZWN0LnZhbHVlcyhCdWJibGVTaXplKSkuaXNSZXF1aXJlZCxcbn07XG5cbi8vIEtlZXBXb3JraW5nQmFkZ2UgaXMgZXhwb3J0ZWQgYmVjYXVzZSBpdCBpcyBhbHNvIHVzZWQgaW5kZXBlbmRlbnRseSBvZlxuLy8gdGhlIHByb2dyZXNzIGJ1YmJsZVxuZXhwb3J0IGZ1bmN0aW9uIEtlZXBXb3JraW5nQmFkZ2Uoe2lzU21hbGwsIHN0eWxlfSkge1xuICBjb25zdCBiYWRnZVNpemUgPSBpc1NtYWxsXG4gICAgPyBzdHlsZXMua2VlcFdvcmtpbmdCYWRnZVNtYWxsU2l6ZVxuICAgIDogc3R5bGVzLmtlZXBXb3JraW5nQmFkZ2VGdWxsU2l6ZTtcblxuICByZXR1cm4gPGRpdiBzdHlsZT17ey4uLnN0eWxlcy5rZWVwV29ya2luZ0JhZGdlLCAuLi5iYWRnZVNpemUsIC4uLnN0eWxlfX0gLz47XG59XG5LZWVwV29ya2luZ0JhZGdlLnByb3BUeXBlcyA9IHtcbiAgaXNTbWFsbDogUHJvcFR5cGVzLmJvb2wsXG4gIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxufTtcblxuLy8gQXNzZXNzbWVudEJhZGdlIGlzIGV4cG9ydGVkIGZvciB0ZXN0c1xuZXhwb3J0IGZ1bmN0aW9uIEFzc2Vzc21lbnRCYWRnZSgpIHtcbiAgcmV0dXJuIChcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJmYS1zdGFja1wiIHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgIDxGb250QXdlc29tZVxuICAgICAgICBpY29uPVwiY2lyY2xlXCJcbiAgICAgICAgY2xhc3NOYW1lPVwiZmEtc3RhY2stMnhcIlxuICAgICAgICBzdHlsZT17c3R5bGVzLnB1cnBsZX1cbiAgICAgIC8+XG4gICAgICA8Rm9udEF3ZXNvbWVcbiAgICAgICAgaWNvbj1cImNpcmNsZS10aGluXCJcbiAgICAgICAgY2xhc3NOYW1lPVwiZmEtc3RhY2stMnhcIlxuICAgICAgICBzdHlsZT17c3R5bGVzLndoaXRlfVxuICAgICAgLz5cbiAgICAgIDxGb250QXdlc29tZSBpY29uPVwiY2hlY2tcIiBjbGFzc05hbWU9XCJmYS1zdGFjay0xeFwiIHN0eWxlPXtzdHlsZXMud2hpdGV9IC8+XG4gICAgPC9zcGFuPlxuICApO1xufVxuQXNzZXNzbWVudEJhZGdlLnByb3BUeXBlcyA9IHtcbiAgaGFzV2hpdGVCb3JkZXI6IFByb3BUeXBlcy5ib29sLFxuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbn07XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgY29udGFpbmVyOiB7XG4gICAgZm9udFNpemU6IDEwLFxuICB9LFxuICBidWJibGVQb3NpdGlvbjoge1xuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogLTcsXG4gICAgcmlnaHQ6IC03LFxuICB9LFxuICBkaWFtb25kQnViYmxlUG9zaXRpb246IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB0b3A6IC0xMyxcbiAgICByaWdodDogLTE3LFxuICB9LFxuICBwdXJwbGU6IHtcbiAgICBjb2xvcjogY29sb3IucHVycGxlLFxuICB9LFxuICB3aGl0ZToge1xuICAgIGNvbG9yOiBjb2xvci53aGl0ZSxcbiAgfSxcbiAga2VlcFdvcmtpbmdTbWFsbEJhZGdlUG9zaXRpb246IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB0b3A6IC0yLFxuICAgIHJpZ2h0OiAtMixcbiAgfSxcbiAga2VlcFdvcmtpbmdCYWRnZVBvc2l0aW9uOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdG9wOiAwLFxuICAgIHJpZ2h0OiAtMixcbiAgfSxcbiAga2VlcFdvcmtpbmdCYWRnZToge1xuICAgIGJvcmRlclJhZGl1czogJzUwJScsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci5yZWQsXG4gIH0sXG4gIGtlZXBXb3JraW5nQmFkZ2VGdWxsU2l6ZToge1xuICAgIHdpZHRoOiAxMCxcbiAgICBoZWlnaHQ6IDEwLFxuICB9LFxuICBrZWVwV29ya2luZ0JhZGdlU21hbGxTaXplOiB7XG4gICAgd2lkdGg6IDcsXG4gICAgaGVpZ2h0OiA3LFxuICB9LFxufTtcbiIsImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHt1bmlxdWVJZH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgcXVlcnlTdHJpbmcgZnJvbSAncXVlcnktc3RyaW5nJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBGb250QXdlc29tZSBmcm9tICdAY2RvL2FwcHMvbGVnYWN5U2hhcmVkQ29tcG9uZW50cy9Gb250QXdlc29tZSc7XG5pbXBvcnQge2N1cnJlbnRMb2NhdGlvbiwgbWFrZUVudW19IGZyb20gJ0BjZG8vYXBwcy91dGlscyc7XG5pbXBvcnQgaTE4biBmcm9tICdAY2RvL2xvY2FsZSc7XG5cbmltcG9ydCB7Z2V0SWNvbkZvckxldmVsLCBpc0xldmVsQXNzZXNzbWVudH0gZnJvbSAnLi9wcm9ncmVzc0hlbHBlcnMnO1xuaW1wb3J0IHtmbGV4LCBmb250LCBtYXJnaW5MZWZ0UmlnaHQsIG1hcmdpblRvcEJvdHRvbX0gZnJvbSAnLi9wcm9ncmVzc1N0eWxlcyc7XG5pbXBvcnQge2xldmVsV2l0aFByb2dyZXNzVHlwZX0gZnJvbSAnLi9wcm9ncmVzc1R5cGVzJztcbmltcG9ydCBUb29sdGlwV2l0aEljb24gZnJvbSAnLi9Ub29sdGlwV2l0aEljb24nO1xuaW1wb3J0ICcuL3N0eWxlcy5zY3NzJztcblxuZXhwb3J0IGNvbnN0IEJ1YmJsZVNpemUgPSBtYWtlRW51bSgnZG90JywgJ2xldHRlcicsICdmdWxsJyk7XG5leHBvcnQgY29uc3QgQnViYmxlU2hhcGUgPSBtYWtlRW51bSgnY2lyY2xlJywgJ2RpYW1vbmQnLCAncGlsbCcpO1xuXG4vKipcbiAqIEJhc2UgYnViYmxlIGNvbXBvbmVudCBkZWZpbmVkIGluIHRlcm1zIG9mIHNoYXBlLCBzaXplLCBhbmQgc3R5bGUsIGFzIG9wcG9zZWRcbiAqIHRvIGxldmVsLXJlbGF0ZWQgcHJvcGVydGllcy4gVGhpcyBjb21wb25lbnQgaXMgaXRzZWxmIG9ubHkgYW4gZW1wdHkgc3R5bGVkXG4gKiBjb250YWluZXIsIGFuZCBleHBlY3RzIHRoZSBidWJibGUgY29udGVudCAoZS5nLiBsZXZlbCBudW1iZXIsIGljb24sIHRleHQpIHRvXG4gKiBiZSBwYXNzZWQgaW4gYXMgaXRzIGNoaWxkcmVuLlxuICogQHBhcmFtIHtCdWJibGVTaGFwZX0gc2hhcGVcbiAqIEBwYXJhbSB7QnViYmxlU2l6ZX0gc2l6ZVxuICogQHBhcmFtIHtvYmplY3R9IHByb2dyZXNzU3R5bGUgY29udGFpbnMgYm9yZGVyIGFuZCBiYWNrZ3JvdW5kIGNvbG9yc1xuICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZXMgYXBwbGllcyBob3ZlciBlZmZlY3QgaWYgZW5hYmxlZFxuICogQHBhcmFtIHtub2RlfSBjaGlsZHJlbiB0aGUgY29udGVudCB0byByZW5kZXIgaW5zaWRlIHRoZSBidWJibGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIEJhc2ljQnViYmxlKHtcbiAgc2hhcGUsXG4gIHNpemUsXG4gIHByb2dyZXNzU3R5bGUsXG4gIGNsYXNzTmFtZXMsXG4gIGNoaWxkcmVuLFxufSkge1xuICBjb25zdCBidWJibGVTdHlsZSA9IG1haW5CdWJibGVTdHlsZShzaGFwZSwgc2l6ZSwgcHJvZ3Jlc3NTdHlsZSk7XG4gIGlmIChzaGFwZSA9PT0gQnViYmxlU2hhcGUuZGlhbW9uZCkge1xuICAgIHJldHVybiAoXG4gICAgICA8RGlhbW9uZENvbnRhaW5lclxuICAgICAgICBzaXplPXtzaXplfVxuICAgICAgICBidWJibGVTdHlsZT17YnViYmxlU3R5bGV9XG4gICAgICAgIGNsYXNzTmFtZXM9e2NsYXNzTmFtZXN9XG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvRGlhbW9uZENvbnRhaW5lcj5cbiAgICApO1xuICB9XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZXN9IHN0eWxlPXtidWJibGVTdHlsZX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59XG5CYXNpY0J1YmJsZS5wcm9wVHlwZXMgPSB7XG4gIHNoYXBlOiBQcm9wVHlwZXMub25lT2YoT2JqZWN0LnZhbHVlcyhCdWJibGVTaGFwZSkpLmlzUmVxdWlyZWQsXG4gIHNpemU6IFByb3BUeXBlcy5vbmVPZihPYmplY3QudmFsdWVzKEJ1YmJsZVNpemUpKS5pc1JlcXVpcmVkLFxuICBwcm9ncmVzc1N0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBjbGFzc05hbWVzOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG59O1xuXG4vKipcbiAqIENvbnRhaW5lciBhcHBseWluZyByb3RhdGlvbiB0cmFuc2Zvcm1zIGFuZCBmb3JjaW5nIGRpYW1vbmQgYnViYmxlcyB0byBoYXZlXG4gKiB0aGUgc2FtZSBzaXplIGFzIGNpcmNsZXMuXG4gKiBAcGFyYW0ge0J1YmJsZVNpemV9IHNpemVcbiAqIEBwYXJhbSB7b2JqZWN0fSBidWJibGVTdHlsZSBjb250YWlucyByb3RhdGlvbiB0cmFuc2Zvcm0gYW5kIHByb2dyZXNzIHN0eWxlXG4gKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lcyBhcHBsaWVzIGhvdmVyIGVmZmVjdCBpZiBlbmFibGVkXG4gKiBAcGFyYW0ge25vZGV9IGNoaWxkcmVuXG4gKi9cbmZ1bmN0aW9uIERpYW1vbmRDb250YWluZXIoe3NpemUsIGJ1YmJsZVN0eWxlLCBjbGFzc05hbWVzLCBjaGlsZHJlbn0pIHtcbiAgcmV0dXJuIChcbiAgICAvKiBDb25zdHJhaW4gc2l6ZSAqL1xuICAgIDxkaXYgc3R5bGU9e2RpYW1vbmRDb250YWluZXJTdHlsZShzaXplKX0+XG4gICAgICB7LyogQXBwbHkgcm90YXRpb24gdHJhbnNmb3JtLCBwcm9ncmVzcyBzdHlsZSwgYW5kIGhvdmVyIGVmZmVjdCAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzfSBzdHlsZT17YnViYmxlU3R5bGV9PlxuICAgICAgICB7LyogVW5kbyB0aGUgcm90YXRpb24gZnJvbSB0aGUgcGFyZW50ICovfVxuICAgICAgICA8ZGl2IHN0eWxlPXtidWJibGVTdHlsZXMuZGlhbW9uZENvbnRlbnRUcmFuc2Zvcm19PntjaGlsZHJlbn08L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuRGlhbW9uZENvbnRhaW5lci5wcm9wVHlwZXMgPSB7XG4gIHNpemU6IFByb3BUeXBlcy5vbmVPZihPYmplY3QudmFsdWVzKEJ1YmJsZVNpemUpKS5pc1JlcXVpcmVkLFxuICBidWJibGVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgY2xhc3NOYW1lczogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIEJ1YmJsZUxpbmsoe3VybCwgb25DbGljaywgY2hpbGRyZW4sIGExMXlfZGVzY3JpcHRpb259KSB7XG4gIHJldHVybiAoXG4gICAgPGFcbiAgICAgIGhyZWY9e3VybH1cbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICBjbGFzc05hbWU9XCJwcm9ncmVzcy1idWJibGUtbGlua1wiXG4gICAgICB0aXRsZT17YTExeV9kZXNjcmlwdGlvbn1cbiAgICAgIGFyaWEtbGFiZWw9e2ExMXlfZGVzY3JpcHRpb259XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvYT5cbiAgKTtcbn1cbkJ1YmJsZUxpbmsucHJvcFR5cGVzID0ge1xuICB1cmw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLmVsZW1lbnQuaXNSZXF1aXJlZCxcbiAgYTExeV9kZXNjcmlwdGlvbjogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cbmZ1bmN0aW9uIGdldFRvb2x0aXBUZXh0Rm9yTGV2ZWwobGV2ZWwpIHtcbiAgbGV0IHRvb2x0aXBUZXh0O1xuICBpZiAobGV2ZWwuaXNTdWJsZXZlbCkge1xuICAgIHRvb2x0aXBUZXh0ID0gbGV2ZWwuZGlzcGxheV9uYW1lO1xuICB9IGVsc2UgaWYgKGxldmVsLmlzVW5wbHVnZ2VkKSB7XG4gICAgdG9vbHRpcFRleHQgPSBpMThuLnVucGx1Z2dlZEFjdGl2aXR5KCk7XG4gIH0gZWxzZSB7XG4gICAgdG9vbHRpcFRleHQgPSBsZXZlbC5uYW1lIHx8IGxldmVsLnByb2dyZXNzaW9uRGlzcGxheU5hbWUgfHwgJyc7XG4gIH1cbiAgaWYgKGxldmVsLmxldmVsTnVtYmVyKSB7XG4gICAgdG9vbHRpcFRleHQgPSBgJHtsZXZlbC5sZXZlbE51bWJlcn0uICR7dG9vbHRpcFRleHR9YDtcbiAgfVxuICByZXR1cm4gdG9vbHRpcFRleHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBCYXNpY1Rvb2x0aXAoe2ljb24sIHRleHQsIGluY2x1ZGVBc3Nlc3NtZW50SWNvbiwgY2hpbGRyZW59KSB7XG4gIGNvbnN0IHRvb2x0aXBJZCA9IHVuaXF1ZUlkKCk7XG4gIHJldHVybiAoXG4gICAgPGRpdiBkYXRhLXRpcCBkYXRhLWZvcj17dG9vbHRpcElkfSBhcmlhLWRlc2NyaWJlZGJ5PXt0b29sdGlwSWR9PlxuICAgICAge2NoaWxkcmVufVxuICAgICAgPFRvb2x0aXBXaXRoSWNvblxuICAgICAgICB0b29sdGlwSWQ9e3Rvb2x0aXBJZH1cbiAgICAgICAgaWNvbj17aWNvbn1cbiAgICAgICAgdGV4dD17dGV4dH1cbiAgICAgICAgaW5jbHVkZUFzc2Vzc21lbnRJY29uPXtpbmNsdWRlQXNzZXNzbWVudEljb259XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApO1xufVxuQmFzaWNUb29sdGlwLnByb3BUeXBlcyA9IHtcbiAgaWNvbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgdGV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgaW5jbHVkZUFzc2Vzc21lbnRJY29uOiBQcm9wVHlwZXMuYm9vbCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5lbGVtZW50LFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIEJ1YmJsZVRvb2x0aXAoe2xldmVsLCBjaGlsZHJlbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8QmFzaWNUb29sdGlwXG4gICAgICBpY29uPXtnZXRJY29uRm9yTGV2ZWwobGV2ZWwpfVxuICAgICAgdGV4dD17Z2V0VG9vbHRpcFRleHRGb3JMZXZlbChsZXZlbCl9XG4gICAgICBpbmNsdWRlQXNzZXNzbWVudEljb249e2lzTGV2ZWxBc3Nlc3NtZW50KGxldmVsKX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9CYXNpY1Rvb2x0aXA+XG4gICk7XG59XG5CdWJibGVUb29sdGlwLnByb3BUeXBlcyA9IHtcbiAgbGV2ZWw6IGxldmVsV2l0aFByb2dyZXNzVHlwZS5pc1JlcXVpcmVkLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLmVsZW1lbnQuaXNSZXF1aXJlZCxcbn07XG5cbi8qKlxuICogPT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJ1YmJsZUNvbnRlbnQoXG4gIGlzTG9ja2VkLFxuICBpc1VucGx1Z2dlZCxcbiAgaXNCb251cyxcbiAgaXNQYWlyZWQsXG4gIHRpdGxlLFxuICBidWJibGVTaXplXG4pIHtcbiAgaWYgKGJ1YmJsZVNpemUgPT09IEJ1YmJsZVNpemUuZG90KSB7XG4gICAgLy8gZG90LXNpemVkIGJ1YmJsZXMgYXJlIHRvbyBzbWFsbCBmb3IgY29udGVudFxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBpc1VucGx1Z2dlZCA/IChcbiAgICA8c3Bhbj57aTE4bi51bnBsdWdnZWRBY3Rpdml0eSgpfTwvc3Bhbj5cbiAgKSA6IGlzTG9ja2VkID8gKFxuICAgIDxGb250QXdlc29tZSBpY29uPVwibG9ja1wiIC8+XG4gICkgOiBpc1BhaXJlZCA/IChcbiAgICA8Rm9udEF3ZXNvbWUgaWNvbj1cInVzZXJzXCIgLz5cbiAgKSA6IGlzQm9udXMgPyAoXG4gICAgPEZvbnRBd2Vzb21lIGljb249XCJmbGFnLWNoZWNrZXJlZFwiIC8+XG4gICkgOiB0aXRsZSA/IChcbiAgICA8c3Bhbj57dGl0bGV9PC9zcGFuPlxuICApIDogbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJ1YmJsZVNoYXBlKGlzVW5wbHVnZ2VkLCBpc0NvbmNlcHQpIHtcbiAgcmV0dXJuIGlzVW5wbHVnZ2VkXG4gICAgPyBCdWJibGVTaGFwZS5waWxsXG4gICAgOiBpc0NvbmNlcHRcbiAgICA/IEJ1YmJsZVNoYXBlLmRpYW1vbmRcbiAgICA6IEJ1YmJsZVNoYXBlLmNpcmNsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJ1YmJsZUNsYXNzTmFtZXMoaXNFbmFibGVkKSB7XG4gIHJldHVybiBjbGFzc05hbWVzKCdwcm9ncmVzcy1idWJibGUnLCB7ZW5hYmxlZDogaXNFbmFibGVkfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRCdWJibGVVcmwoXG4gIGxldmVsVXJsLFxuICBzdHVkZW50SWQsXG4gIHNlY3Rpb25JZCxcbiAgcHJlc2VydmVRdWVyeVBhcmFtcyA9IGZhbHNlXG4pIHtcbiAgaWYgKCFsZXZlbFVybCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHBhcmFtcyA9IHByZXNlcnZlUXVlcnlQYXJhbXNcbiAgICA/IHF1ZXJ5U3RyaW5nLnBhcnNlKGN1cnJlbnRMb2NhdGlvbigpLnNlYXJjaClcbiAgICA6IHt9O1xuXG4gIC8vIFdlIHdhbnQgdG8gcHJlc2VydmUgYWxsIG9mIHRoZSBxdWVyeVBhcmFtcyBFWENFUFQgdmVyc2lvbiBiZWNhdXNlIG5hdmlnYXRpbmdcbiAgLy8gYmV0d2VlbiBsZXZlbHMgYmFja2VkIGJ5IGRpZmZlcmVudCBwcm9qZWN0cyBvciBiZXR3ZWVuIGEgcHJvamVjdCBsZXZlbCBhbmRcbiAgLy8gYSBub24tcHJvamVjdCBsZXZlbCBwdXRzIHRoZSB1c2VyIGluIGFuIGVycm9yIHN0YXRlIHNpbmNlIHRoZSB2ZXJzaW9uIGlkIGRvZXNuJ3RcbiAgLy8gZXhpc3QuXG4gIGRlbGV0ZSBwYXJhbXMudmVyc2lvbjtcblxuICBpZiAoc2VjdGlvbklkKSB7XG4gICAgcGFyYW1zLnNlY3Rpb25faWQgPSBzZWN0aW9uSWQ7XG4gIH1cbiAgaWYgKHN0dWRlbnRJZCkge1xuICAgIHBhcmFtcy51c2VyX2lkID0gc3R1ZGVudElkO1xuICB9XG4gIGlmIChPYmplY3Qua2V5cyhwYXJhbXMpLmxlbmd0aCkge1xuICAgIHJldHVybiBgJHtsZXZlbFVybH0/JHtxdWVyeVN0cmluZy5zdHJpbmdpZnkocGFyYW1zKX1gO1xuICB9XG4gIHJldHVybiBsZXZlbFVybDtcbn1cblxuLyoqXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQnViYmxlIHN0eWxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5jb25zdCBMQVJHRV9GT05UID0gMTY7XG5jb25zdCBTTUFMTF9GT05UID0gMTI7XG5cbmNvbnN0IGJ1YmJsZVNpemVzID0ge1xuICBbQnViYmxlU2hhcGUuY2lyY2xlXToge1xuICAgIFtCdWJibGVTaXplLmRvdF06IDEzLFxuICAgIFtCdWJibGVTaXplLmxldHRlcl06IDIwLFxuICAgIFtCdWJibGVTaXplLmZ1bGxdOiAzNCxcbiAgfSxcbiAgW0J1YmJsZVNoYXBlLmRpYW1vbmRdOiB7XG4gICAgW0J1YmJsZVNpemUuZG90XTogMTAsXG4gICAgW0J1YmJsZVNpemUuZnVsbF06IDI2LFxuICB9LFxuICBbQnViYmxlU2hhcGUucGlsbF06IHt9LFxufTtcblxuY29uc3QgY2lyY2xlTWFyZ2lucyA9IHtcbiAgW0J1YmJsZVNpemUuZG90XTogMixcbiAgW0J1YmJsZVNpemUubGV0dGVyXTogMyxcbiAgW0J1YmJsZVNpemUuZnVsbF06IDIsXG59O1xuXG5jb25zdCBidWJibGVCb3JkZXJSYWRpaSA9IHtcbiAgW0J1YmJsZVNoYXBlLmNpcmNsZV06IHtcbiAgICBbQnViYmxlU2l6ZS5kb3RdOiBidWJibGVTaXplc1tCdWJibGVTaGFwZS5jaXJjbGVdW0J1YmJsZVNpemUuZG90XSxcbiAgICBbQnViYmxlU2l6ZS5sZXR0ZXJdOiBidWJibGVTaXplc1tCdWJibGVTaGFwZS5jaXJjbGVdW0J1YmJsZVNpemUubGV0dGVyXSxcbiAgICBbQnViYmxlU2l6ZS5mdWxsXTogYnViYmxlU2l6ZXNbQnViYmxlU2hhcGUuY2lyY2xlXVtCdWJibGVTaXplLmZ1bGxdLFxuICB9LFxuICBbQnViYmxlU2hhcGUuZGlhbW9uZF06IHtcbiAgICBbQnViYmxlU2l6ZS5kb3RdOiAyLFxuICAgIFtCdWJibGVTaXplLmZ1bGxdOiA0LFxuICB9LFxuICBbQnViYmxlU2hhcGUucGlsbF06IHt9LFxufTtcblxuLyoqXG4gKiBXZSB1c2UgZml4ZWQtc2l6ZSBjb250YWluZXJzIHRvIG1ha2UgZGlhbW9uZCBidWJibGVzIHRoZSBzYW1lIHdpZHRoIGFzXG4gKiBjaXJjbGUgYnViYmxlcywgc28gd2UgdXNlIEJ1YmJsZVNoYXBlLmNpcmNsZSB0byBjb21wdXRlLlxuICpcbiAqIENvbnRhaW5lciB3aWR0aCBpcyB0aGUgd2lkdGggb2YgdGhlIGJ1YmJsZSBwbHVzIHRoZSBsZWZ0IGFuZCByaWdodCBtYXJnaW5zLlxuICovXG5leHBvcnQgY29uc3QgYnViYmxlQ29udGFpbmVyV2lkdGhzID0ge1xuICBbQnViYmxlU2l6ZS5kb3RdOlxuICAgIGJ1YmJsZVNpemVzW0J1YmJsZVNoYXBlLmNpcmNsZV1bQnViYmxlU2l6ZS5kb3RdICtcbiAgICAyICogY2lyY2xlTWFyZ2luc1tCdWJibGVTaXplLmRvdF0sXG4gIFtCdWJibGVTaXplLmxldHRlcl06XG4gICAgYnViYmxlU2l6ZXNbQnViYmxlU2hhcGUuY2lyY2xlXVtCdWJibGVTaXplLmxldHRlcl0gK1xuICAgIDIgKiBjaXJjbGVNYXJnaW5zW0J1YmJsZVNpemUubGV0dGVyXSxcbiAgW0J1YmJsZVNpemUuZnVsbF06XG4gICAgYnViYmxlU2l6ZXNbQnViYmxlU2hhcGUuY2lyY2xlXVtCdWJibGVTaXplLmZ1bGxdICtcbiAgICAyICogY2lyY2xlTWFyZ2luc1tCdWJibGVTaXplLmZ1bGxdLFxufTtcblxuY29uc3QgZm9udFNpemVzID0ge1xuICBbQnViYmxlU2l6ZS5sZXR0ZXJdOiBTTUFMTF9GT05ULFxuICBbQnViYmxlU2l6ZS5mdWxsXTogTEFSR0VfRk9OVCxcbn07XG5cbmNvbnN0IGJ1YmJsZVN0eWxlcyA9IHtcbiAgbWFpbjoge1xuICAgIC4uLmZsZXgsXG4gICAgLi4uZm9udCxcbiAgICAuLi5tYXJnaW5Ub3BCb3R0b20oMyksXG4gICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgbGV0dGVyU3BhY2luZzogLTAuMTEsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gIH0sXG4gIHBpbGw6IHtcbiAgICBib3JkZXJSYWRpdXM6IDIwLFxuICAgIGZvbnRTaXplOiBTTUFMTF9GT05ULFxuICAgIHBhZGRpbmc6ICc2cHggMTBweCcsXG4gIH0sXG4gIGRpYW1vbmQ6IHtcbiAgICAuLi5tYXJnaW5Ub3BCb3R0b20oNiksXG4gICAgdHJhbnNmb3JtOiAncm90YXRlKDQ1ZGVnKScsXG4gICAgcGFkZGluZzogMixcbiAgfSxcbiAgZGlhbW9uZENvbnRlbnRUcmFuc2Zvcm06IHtcbiAgICB0cmFuc2Zvcm06ICdyb3RhdGUoLTQ1ZGVnKScsXG4gIH0sXG59O1xuXG4vKipcbiAqIENvbXB1dGVzIHN0eWxlIGZvciBzaGFwZS9zaXplLCBhbmQgbWVyZ2VzIHdpdGggYHByb2dyZXNzU3R5bGVgIHByZXZpb3VzbHlcbiAqIGNvbXB1dGVkIGJ5IGBwcm9ncmVzc1N0eWxlcy5sZXZlbFByb2dyZXNzU3R5bGVgLlxuICovXG5mdW5jdGlvbiBtYWluQnViYmxlU3R5bGUoc2hhcGUsIHNpemUsIHByb2dyZXNzU3R5bGUpIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5idWJibGVTdHlsZXMubWFpbixcbiAgICAuLi5zaGFwZVNpemVTdHlsZShzaGFwZSwgc2l6ZSksXG4gICAgLi4ucHJvZ3Jlc3NTdHlsZSxcbiAgfTtcbn1cblxuZnVuY3Rpb24gZGlhbW9uZENvbnRhaW5lclN0eWxlKHNpemUpIHtcbiAgY29uc3QgY29udGFpbmVyV2lkdGggPSBidWJibGVDb250YWluZXJXaWR0aHNbc2l6ZV07XG4gIHJldHVybiB7XG4gICAgLi4uZmxleCxcbiAgICB3aWR0aDogY29udGFpbmVyV2lkdGgsXG4gICAgaGVpZ2h0OiBjb250YWluZXJXaWR0aCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gc2hhcGVTaXplU3R5bGUoc2hhcGUsIHNpemUpIHtcbiAgaWYgKHNoYXBlID09PSBCdWJibGVTaGFwZS5waWxsKSB7XG4gICAgcmV0dXJuIGJ1YmJsZVN0eWxlcy5waWxsO1xuICB9XG5cbiAgY29uc3QgYnViYmxlU2l6ZSA9IGJ1YmJsZVNpemVzW3NoYXBlXVtzaXplXTtcbiAgY29uc3QgZm9udFNpemUgPSBmb250U2l6ZXNbc2l6ZV07XG4gIHJldHVybiB7XG4gICAgd2lkdGg6IGJ1YmJsZVNpemUsXG4gICAgaGVpZ2h0OiBidWJibGVTaXplLFxuICAgIG1heFdpZHRoOiBidWJibGVTaXplLFxuICAgIG1heEhlaWdodDogYnViYmxlU2l6ZSxcbiAgICBib3JkZXJSYWRpdXM6IGJ1YmJsZUJvcmRlclJhZGlpW3NoYXBlXVtzaXplXSxcbiAgICBmb250U2l6ZTogZm9udFNpemUsXG4gICAgbGluZUhlaWdodDogYCR7Zm9udFNpemV9cHhgLFxuICAgIC4uLihzaGFwZSA9PT0gQnViYmxlU2hhcGUuY2lyY2xlICYmIG1hcmdpbkxlZnRSaWdodChjaXJjbGVNYXJnaW5zW3NpemVdKSksXG4gICAgLi4uKHNoYXBlID09PSBCdWJibGVTaGFwZS5kaWFtb25kICYmIGJ1YmJsZVN0eWxlcy5kaWFtb25kKSxcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IHVuaXRUZXN0RXhwb3J0cyA9IHtcbiAgRGlhbW9uZENvbnRhaW5lcixcbiAgYnViYmxlU3R5bGVzLFxuICBtYWluQnViYmxlU3R5bGUsXG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0VG9vbHRpcCBmcm9tICdyZWFjdC10b29sdGlwJztcblxuaW1wb3J0IEZvbnRBd2Vzb21lIGZyb20gJy4uLy4uL2xlZ2FjeVNoYXJlZENvbXBvbmVudHMvRm9udEF3ZXNvbWUnO1xuXG5pbXBvcnQge0RPVF9TSVpFfSBmcm9tICcuL3Byb2dyZXNzU3R5bGVzJztcblxuLyoqXG4gKiBBIHNpbXBsZSB0b29sdGlwIHRoYXQgY29udGFpbnMgYW4gaWNvbiBhbmQgdGV4dC4gVG8gdXNlLCB5b3UgbXVzdCBzdGlsbCBhc3NvY2lhdGVcbiAqIHRoZSB0b29sdGlwIGlkIHdpdGggdGhlIGVsZW1lbnQgeW91IHdhbnQgdG8gZ2V0IHRoaXMgdG9vbHRpcCwgaWUuXG4gKiA8Rm9vIGRhdGEtdGlwIGRhdGEtZm9yPXt0b29sdGlwSWR9Lz5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9vbHRpcFdpdGhJY29uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICB0b29sdGlwSWQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBpY29uOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgdGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIGluY2x1ZGVBc3Nlc3NtZW50SWNvbjogUHJvcFR5cGVzLmJvb2wsXG4gIH07XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7dG9vbHRpcElkLCBpY29uLCB0ZXh0LCBpbmNsdWRlQXNzZXNzbWVudEljb259ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPFJlYWN0VG9vbHRpcCBpZD17dG9vbHRpcElkfSByb2xlPVwidG9vbHRpcFwiIHdyYXBwZXI9XCJzcGFuXCIgZWZmZWN0PVwic29saWRcIj5cbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLnRvb2x0aXB9PlxuICAgICAgICAgIHtpbmNsdWRlQXNzZXNzbWVudEljb24gJiYgKFxuICAgICAgICAgICAgPEZvbnRBd2Vzb21lXG4gICAgICAgICAgICAgIGljb249XCJjaGVjay1jaXJjbGVcIlxuICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLnRvb2x0aXBBc3Nlc3NtZW50SWNvbn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8Rm9udEF3ZXNvbWUgaWNvbj17aWNvbn0gc3R5bGU9e3N0eWxlcy50b29sdGlwSWNvbn0gLz5cbiAgICAgICAgICB7dGV4dH1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L1JlYWN0VG9vbHRpcD5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgdG9vbHRpcDoge1xuICAgIGxpbmVIZWlnaHQ6IERPVF9TSVpFICsgJ3B4JyxcbiAgfSxcbiAgdG9vbHRpcEljb246IHtcbiAgICBwYWRkaW5nUmlnaHQ6IDUsXG4gICAgcGFkZGluZ0xlZnQ6IDUsXG4gIH0sXG4gIHRvb2x0aXBBc3Nlc3NtZW50SWNvbjoge1xuICAgIHBhZGRpbmdMZWZ0OiA1LFxuICB9LFxufTtcbiIsImltcG9ydCBmb250Q29uc3RhbnRzIGZyb20gJ0BjZG8vYXBwcy9mb250Q29uc3RhbnRzJztcbmltcG9ydCBjb2xvciBmcm9tICdAY2RvL2FwcHMvdXRpbC9jb2xvcic7XG5pbXBvcnQge0xldmVsU3RhdHVzLCBMZXZlbEtpbmR9IGZyb20gJ0BjZG8vZ2VuZXJhdGVkLXNjcmlwdHMvc2hhcmVkQ29uc3RhbnRzJztcblxuLyoqXG4gKiBOb3RlOiB0aGVzZSBjb25zdGFudHMgd2lsbCBiZSByZW1vdmVkIGluIGZhdm9yIG9mIGBCdWJibGVGYWN0b3J5LmJ1YmJsZVNpemVzYFxuICogb25jZSB3ZSBmaW5pc2ggY2xlYW5pbmcgdXAgYWxsIG9mIG91ciBidWJibGUgY29tcG9uZW50cyAoTFAtMTY2MikuXG4gKi9cbmV4cG9ydCBjb25zdCBET1RfU0laRSA9IDMwO1xuZXhwb3J0IGNvbnN0IERJQU1PTkRfRE9UX1NJWkUgPSAyMjtcbmV4cG9ydCBjb25zdCBTTUFMTF9ET1RfU0laRSA9IDk7XG5leHBvcnQgY29uc3QgU01BTExfRElBTU9ORF9TSVpFID0gNjtcblxuLyoqXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogTGF5b3V0IGhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuZXhwb3J0IGNvbnN0IGZsZXggPSB7XG4gIGRpc3BsYXk6ICdmbGV4JyxcbiAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbn07XG5leHBvcnQgY29uc3QgZmxleEFyb3VuZCA9IHsuLi5mbGV4LCBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWFyb3VuZCd9O1xuZXhwb3J0IGNvbnN0IGZsZXhCZXR3ZWVuID0gey4uLmZsZXgsIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2Vlbid9O1xuXG5leHBvcnQgY29uc3QgaW5saW5lQmxvY2sgPSB7ZGlzcGxheTogJ2lubGluZS1ibG9jayd9O1xuXG5leHBvcnQgY29uc3QgbWFyZ2luTGVmdFJpZ2h0ID0gbWFyZ2luID0+IHtcbiAgcmV0dXJuIHtcbiAgICBtYXJnaW5MZWZ0OiBtYXJnaW4sXG4gICAgbWFyZ2luUmlnaHQ6IG1hcmdpbixcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBtYXJnaW5Ub3BCb3R0b20gPSBtYXJnaW4gPT4ge1xuICByZXR1cm4ge1xuICAgIG1hcmdpblRvcDogbWFyZ2luLFxuICAgIG1hcmdpbkJvdHRvbTogbWFyZ2luLFxuICB9O1xufTtcblxuLyoqXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogU2hhcmVkIHN0eWxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5leHBvcnQgY29uc3QgZm9udCA9IHtcbiAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXNlbWktYm9sZCddLFxufTtcblxuZXhwb3J0IGNvbnN0IGhvdmVyU3R5bGUgPSB7XG4gICc6aG92ZXInOiB7XG4gICAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgICBjb2xvcjogY29sb3Iud2hpdGUsXG4gICAgYm9yZGVyQ29sb3I6IGNvbG9yLmxldmVsX2N1cnJlbnQsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci5sZXZlbF9jdXJyZW50LFxuICB9LFxuICB0cmFuc2l0aW9uOlxuICAgICdiYWNrZ3JvdW5kLWNvbG9yIC4ycyBlYXNlLW91dCwgYm9yZGVyLWNvbG9yIC4ycyBlYXNlLW91dCwgY29sb3IgLjJzIGVhc2Utb3V0Jyxcbn07XG5cbi8qKlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFByb2dyZXNzIHN0eWxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG4vKipcbiAqIEdldCBib3JkZXIgYW5kIGJhY2tncm91bmQgc3R5bGluZyBiYXNlZCBvbiBsZXZlbCBraW5kIGFuZCBzdHVkZW50IHByb2dyZXNzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbGV2ZWxQcm9ncmVzc1N0eWxlKGxldmVsU3RhdHVzLCBsZXZlbEtpbmQpIHtcbiAgbGV0IHN0eWxlID0ge1xuICAgIGJvcmRlcldpZHRoOiAyLFxuICAgIGJvcmRlckNvbG9yOiBjb2xvci5saWdodGVyX2dyYXksXG4gICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgY29sb3I6IGNvbG9yLmNoYXJjb2FsLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGV2ZWxfbm90X3RyaWVkLFxuICB9O1xuXG4gIGNvbnN0IHN0YXR1c1N0eWxlID1cbiAgICBsZXZlbEtpbmQgPT09IExldmVsS2luZC5hc3Nlc3NtZW50XG4gICAgICA/IGFzc2Vzc21lbnRTdGF0dXNTdHlsZVtsZXZlbFN0YXR1c11cbiAgICAgIDogbGV2ZWxTdGF0dXNTdHlsZVtsZXZlbFN0YXR1c107XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5zdHlsZSxcbiAgICAuLi5zdGF0dXNTdHlsZSxcbiAgfTtcbn1cblxuY29uc3QgYXNzZXNzbWVudFN0YXR1c1N0eWxlID0ge1xuICBbTGV2ZWxTdGF0dXMuYXR0ZW1wdGVkXToge1xuICAgIGJvcmRlckNvbG9yOiBjb2xvci5sZXZlbF9zdWJtaXR0ZWQsXG4gIH0sXG4gIFtMZXZlbFN0YXR1cy5zdWJtaXR0ZWRdOiB7XG4gICAgYm9yZGVyQ29sb3I6IGNvbG9yLmxldmVsX3N1Ym1pdHRlZCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmxldmVsX3N1Ym1pdHRlZCxcbiAgICBjb2xvcjogY29sb3Iud2hpdGUsXG4gIH0sXG4gIFtMZXZlbFN0YXR1cy5jb21wbGV0ZWRfYXNzZXNzbWVudF06IHtcbiAgICBib3JkZXJDb2xvcjogY29sb3IubGV2ZWxfc3VibWl0dGVkLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGV2ZWxfc3VibWl0dGVkLFxuICAgIGNvbG9yOiBjb2xvci53aGl0ZSxcbiAgfSxcbiAgW0xldmVsU3RhdHVzLnBlcmZlY3RdOiB7XG4gICAgYm9yZGVyQ29sb3I6IGNvbG9yLmxldmVsX3N1Ym1pdHRlZCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmxldmVsX3N1Ym1pdHRlZCxcbiAgICBjb2xvcjogY29sb3Iud2hpdGUsXG4gIH0sXG59O1xuXG5jb25zdCBsZXZlbFN0YXR1c1N0eWxlID0ge1xuICBbTGV2ZWxTdGF0dXMuYXR0ZW1wdGVkXToge1xuICAgIGJvcmRlckNvbG9yOiBjb2xvci5sZXZlbF9wZXJmZWN0LFxuICB9LFxuICBbTGV2ZWxTdGF0dXMucGVyZmVjdF06IHtcbiAgICBib3JkZXJDb2xvcjogY29sb3IubGV2ZWxfcGVyZmVjdCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmxldmVsX3BlcmZlY3QsXG4gICAgY29sb3I6IGNvbG9yLndoaXRlLFxuICB9LFxuICBbTGV2ZWxTdGF0dXMuZnJlZV9wbGF5X2NvbXBsZXRlXToge1xuICAgIGJvcmRlckNvbG9yOiBjb2xvci5sZXZlbF9wZXJmZWN0LFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGV2ZWxfcGVyZmVjdCxcbiAgICBjb2xvcjogY29sb3Iud2hpdGUsXG4gIH0sXG4gIFtMZXZlbFN0YXR1cy5wYXNzZWRdOiB7XG4gICAgYm9yZGVyQ29sb3I6IGNvbG9yLmxldmVsX3BlcmZlY3QsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci5sZXZlbF9wYXNzZWQsXG4gIH0sXG4gIC8vIE5vdGU6IFRoZXJlIGFyZSBzdWJtaXR0YWJsZSBsZXZlbHMgdGhhdCBhcmUgbm90IGFzc2Vzc21lbnRzLlxuICBbTGV2ZWxTdGF0dXMuc3VibWl0dGVkXToge1xuICAgIGJvcmRlckNvbG9yOiBjb2xvci5sZXZlbF9zdWJtaXR0ZWQsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci5sZXZlbF9zdWJtaXR0ZWQsXG4gICAgY29sb3I6IGNvbG9yLndoaXRlLFxuICB9LFxuICBbTGV2ZWxTdGF0dXMuY29tcGxldGVkX2Fzc2Vzc21lbnRdOiB7XG4gICAgYm9yZGVyQ29sb3I6IGNvbG9yLmxldmVsX3N1Ym1pdHRlZCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmxldmVsX3N1Ym1pdHRlZCxcbiAgICBjb2xvcjogY29sb3Iud2hpdGUsXG4gIH0sXG4gIC8vIEJlbG93IGFyZSB1c2VkIGJ5IHBlZXIgcmV2aWV3c1xuICBbTGV2ZWxTdGF0dXMucmV2aWV3X3JlamVjdGVkXToge1xuICAgIGNvbG9yOiBjb2xvci53aGl0ZSxcbiAgICBib3JkZXJDb2xvcjogY29sb3IubGV2ZWxfcmV2aWV3X3JlamVjdGVkLFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGV2ZWxfcmV2aWV3X3JlamVjdGVkLFxuICB9LFxuICBbTGV2ZWxTdGF0dXMucmV2aWV3X2FjY2VwdGVkXToge1xuICAgIGNvbG9yOiBjb2xvci53aGl0ZSxcbiAgICBib3JkZXJDb2xvcjogY29sb3IubGV2ZWxfcGVyZmVjdCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmxldmVsX3BlcmZlY3QsXG4gIH0sXG59O1xuIiwiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgZmlyZWhvc2VDbGllbnQgZnJvbSAnQGNkby9hcHBzL21ldHJpY3MvZmlyZWhvc2UnO1xuaW1wb3J0IHtcbiAgQnViYmxlU2l6ZSxcbiAgZ2V0QnViYmxlVXJsLFxufSBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL3Byb2dyZXNzL0J1YmJsZUZhY3RvcnknO1xuaW1wb3J0IHtsZXNzb25IYXNMZXZlbHN9IGZyb20gJ0BjZG8vYXBwcy90ZW1wbGF0ZXMvcHJvZ3Jlc3MvcHJvZ3Jlc3NIZWxwZXJzJztcbmltcG9ydCAqIGFzIHByb2dyZXNzU3R5bGVzIGZyb20gJ0BjZG8vYXBwcy90ZW1wbGF0ZXMvcHJvZ3Jlc3MvcHJvZ3Jlc3NTdHlsZXMnO1xuaW1wb3J0IHtcbiAgbGV2ZWxUeXBlLFxuICBzdHVkZW50TGV2ZWxQcm9ncmVzc1R5cGUsXG59IGZyb20gJ0BjZG8vYXBwcy90ZW1wbGF0ZXMvcHJvZ3Jlc3MvcHJvZ3Jlc3NUeXBlcyc7XG5pbXBvcnQgY29sb3IgZnJvbSAnQGNkby9hcHBzL3V0aWwvY29sb3InO1xuXG5pbXBvcnQgUHJvZ3Jlc3NUYWJsZUxldmVsQnViYmxlIGZyb20gJy4vUHJvZ3Jlc3NUYWJsZUxldmVsQnViYmxlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZ3Jlc3NUYWJsZURldGFpbENlbGwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHN0dWRlbnRJZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIHNlY3Rpb25JZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIGxldmVsczogUHJvcFR5cGVzLmFycmF5T2YobGV2ZWxUeXBlKS5pc1JlcXVpcmVkLFxuICAgIHN0dWRlbnRQcm9ncmVzczogUHJvcFR5cGVzLm9iamVjdE9mKHN0dWRlbnRMZXZlbFByb2dyZXNzVHlwZSkuaXNSZXF1aXJlZCxcbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnJlY29yZEJ1YmJsZUNsaWNrID0gdGhpcy5yZWNvcmRCdWJibGVDbGljay5iaW5kKHRoaXMpO1xuICB9XG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcykge1xuICAgIHJldHVybiAhXy5pc0VxdWFsKHRoaXMucHJvcHMsIG5leHRQcm9wcyk7XG4gIH1cblxuICByZWNvcmRCdWJibGVDbGljayhsZXZlbElkKSB7XG4gICAgZmlyZWhvc2VDbGllbnQucHV0UmVjb3JkKFxuICAgICAge1xuICAgICAgICBzdHVkeTogJ3RlYWNoZXJfZGFzaGJvYXJkX2FjdGlvbnMnLFxuICAgICAgICBzdHVkeV9ncm91cDogJ3Byb2dyZXNzJyxcbiAgICAgICAgZXZlbnQ6ICdnb190b19sZXZlbCcsXG4gICAgICAgIGRhdGFfanNvbjogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHN0dWRlbnRfaWQ6IHRoaXMucHJvcHMuc3R1ZGVudElkLFxuICAgICAgICAgIHNlY3Rpb25faWQ6IHRoaXMucHJvcHMuc2VjdGlvbklkLFxuICAgICAgICAgIGxldmVsX2lkOiBsZXZlbElkLFxuICAgICAgICB9KSxcbiAgICAgIH0sXG4gICAgICB7aW5jbHVkZVVzZXJJZDogdHJ1ZX1cbiAgICApO1xuICB9XG5cbiAgYnVpbGRCdWJibGVVcmwobGV2ZWwpIHtcbiAgICByZXR1cm4gZ2V0QnViYmxlVXJsKGxldmVsLnVybCwgdGhpcy5wcm9wcy5zdHVkZW50SWQsIHRoaXMucHJvcHMuc2VjdGlvbklkKTtcbiAgfVxuXG4gIHJlbmRlclN1YmxldmVscyhsZXZlbCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7bGV2ZWwuc3VibGV2ZWxzLm1hcChzdWJsZXZlbCA9PiB7XG4gICAgICAgICAgY29uc3Qgc3VibGV2ZWxQcm9ncmVzcyA9IHRoaXMucHJvcHMuc3R1ZGVudFByb2dyZXNzW3N1YmxldmVsLmlkXTtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e3N1YmxldmVsLmlkfVxuICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLnN1YmxldmVsQ29udGFpbmVyfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtfID0+IHRoaXMucmVjb3JkQnViYmxlQ2xpY2soc3VibGV2ZWwuaWQpfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8UHJvZ3Jlc3NUYWJsZUxldmVsQnViYmxlXG4gICAgICAgICAgICAgICAgbGV2ZWxTdGF0dXM9e3N1YmxldmVsUHJvZ3Jlc3M/LnN0YXR1c31cbiAgICAgICAgICAgICAgICBidWJibGVTaXplPXtCdWJibGVTaXplLmxldHRlcn1cbiAgICAgICAgICAgICAgICBpc0JvbnVzPXtzdWJsZXZlbC5ib251c31cbiAgICAgICAgICAgICAgICBpc0NvbmNlcHQ9e3N1YmxldmVsLmlzQ29uY2VwdExldmVsfVxuICAgICAgICAgICAgICAgIHRpdGxlPXtzdWJsZXZlbC5idWJibGVUZXh0fVxuICAgICAgICAgICAgICAgIHVybD17dGhpcy5idWlsZEJ1YmJsZVVybChzdWJsZXZlbCl9XG4gICAgICAgICAgICAgICAgcmV2aWV3U3RhdGU9e3N1YmxldmVsUHJvZ3Jlc3M/LnRlYWNoZXJGZWVkYmFja1Jldmlld1N0YXRlfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyQnViYmxlKGxldmVsKSB7XG4gICAgY29uc3QgbGV2ZWxQcm9ncmVzcyA9IHRoaXMucHJvcHMuc3R1ZGVudFByb2dyZXNzW2xldmVsLmlkXTtcbiAgICBjb25zdCB1cmwgPSB0aGlzLmJ1aWxkQnViYmxlVXJsKGxldmVsKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGtleT17YCR7bGV2ZWwuaWR9XyR7bGV2ZWwubGV2ZWxOdW1iZXJ9YH0gc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgICA8ZGl2IG9uQ2xpY2s9e18gPT4gdGhpcy5yZWNvcmRCdWJibGVDbGljayhsZXZlbC5pZCl9PlxuICAgICAgICAgIDxQcm9ncmVzc1RhYmxlTGV2ZWxCdWJibGVcbiAgICAgICAgICAgIGxldmVsU3RhdHVzPXtsZXZlbFByb2dyZXNzPy5zdGF0dXN9XG4gICAgICAgICAgICBpc0xvY2tlZD17bGV2ZWxQcm9ncmVzcz8ubG9ja2VkfVxuICAgICAgICAgICAgbGV2ZWxLaW5kPXtsZXZlbC5raW5kfVxuICAgICAgICAgICAgaXNVbnBsdWdnZWQ9e2xldmVsLmlzVW5wbHVnZ2VkfVxuICAgICAgICAgICAgaXNCb251cz17bGV2ZWwuYm9udXN9XG4gICAgICAgICAgICBpc1BhaXJlZD17bGV2ZWxQcm9ncmVzcz8ucGFpcmVkfVxuICAgICAgICAgICAgaXNDb25jZXB0PXtsZXZlbC5pc0NvbmNlcHRMZXZlbH1cbiAgICAgICAgICAgIHRpdGxlPXtsZXZlbC5idWJibGVUZXh0fVxuICAgICAgICAgICAgdXJsPXt1cmx9XG4gICAgICAgICAgICByZXZpZXdTdGF0ZT17bGV2ZWxQcm9ncmVzcz8udGVhY2hlckZlZWRiYWNrUmV2aWV3U3RhdGV9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtsZXZlbC5zdWJsZXZlbHMgJiYgdGhpcy5yZW5kZXJTdWJsZXZlbHMobGV2ZWwpfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBpZiAoIWxlc3Nvbkhhc0xldmVscyh7bGV2ZWxzOiB0aGlzLnByb3BzLmxldmVsc30pKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9IGNsYXNzTmFtZT1cInVpdGVzdC1kZXRhaWwtY2VsbCBjZWxsLWNvbnRlbnRcIj5cbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmJhY2tncm91bmR9IC8+XG4gICAgICAgIHt0aGlzLnByb3BzLmxldmVscy5tYXAobGV2ZWwgPT4gdGhpcy5yZW5kZXJCdWJibGUobGV2ZWwpKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBjb250YWluZXI6IHtcbiAgICAuLi5wcm9ncmVzc1N0eWxlcy5mbGV4QmV0d2VlbixcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgfSxcbiAgYmFja2dyb3VuZDoge1xuICAgIGhlaWdodDogMTAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci5saWdodGVyX2dyYXksXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgbGVmdDogMTAsXG4gICAgcmlnaHQ6IDEwLFxuICB9LFxuICBzdWJsZXZlbENvbnRhaW5lcjoge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICB9LFxufTtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQge1Jldmlld1N0YXRlc30gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9mZWVkYmFjay90eXBlcyc7XG5pbXBvcnQgQnViYmxlQmFkZ2UsIHtCYWRnZVR5cGV9IGZyb20gJ0BjZG8vYXBwcy90ZW1wbGF0ZXMvcHJvZ3Jlc3MvQnViYmxlQmFkZ2UnO1xuaW1wb3J0IHtcbiAgQmFzaWNCdWJibGUsXG4gIEJ1YmJsZUxpbmssXG4gIEJ1YmJsZVNpemUsXG4gIGdldEJ1YmJsZUNvbnRlbnQsXG4gIGdldEJ1YmJsZUNsYXNzTmFtZXMsXG4gIGdldEJ1YmJsZVNoYXBlLFxufSBmcm9tICdAY2RvL2FwcHMvdGVtcGxhdGVzL3Byb2dyZXNzL0J1YmJsZUZhY3RvcnknO1xuaW1wb3J0IENhY2hlZEVsZW1lbnQgZnJvbSAnQGNkby9hcHBzL3V0aWwvQ2FjaGVkRWxlbWVudCc7XG5pbXBvcnQge0xldmVsS2luZH0gZnJvbSAnQGNkby9nZW5lcmF0ZWQtc2NyaXB0cy9zaGFyZWRDb25zdGFudHMnO1xuXG5pbXBvcnQge2xldmVsUHJvZ3Jlc3NTdHlsZX0gZnJvbSAnLi4vLi4vcHJvZ3Jlc3MvcHJvZ3Jlc3NTdHlsZXMnO1xuXG4vKipcbiAqIEJ1YmJsZSBjb21wb25lbnQgZGVzaWduZWQgc3BlY2lmaWNhbGx5IGZvciB1c2UgaW4gb3VyIHNlY3Rpb24gcHJvZ3Jlc3NcbiAqIHRhYmxlLCByZXNwb25zaWJsZSBmb3IgY29uZmlndXJpbmcgYEJhc2ljQnViYmxlYCBiYXNlZCBvbiBwcm9wZXJ0aWVzIG9mIGFcbiAqIGxldmVsIGFuZCBzdHVkZW50IHByb2dyZXNzLCBhbmQgZ2VuZXJhdGluZyBjYWNoZSBrZXlzIGZyb20gc2FtZS5cbiAqXG4gKiBPdXIgcHJvZ3Jlc3MgdGFibGUgZGlzcGxheXMgdGhvdXNhbmRzIG9mIHRoZXNlIGJ1YmJsZXMuIEhvd2V2ZXIsIHRoZSB2YXN0XG4gKiBtYWpvcml0eSBvZiB0aGVtIGFyZSBkdXBsaWNhdGVkIGluIGFsbCBhc3BlY3RzIGV4Y2VwdCB0aGUgdXJsIHRoZXkgbGluayB0by5cbiAqIFRodXMgd2UgYXJlIGFibGUgdG8gaW1wcm92ZSByZW5kZXJpbmcgcGVyZm9ybWFuY2UgYnkgY2FjaGluZyB0aGUgSFRNTCBmb3JcbiAqIHRoZSB1bmRlcmx5aW5nIGBCYXNpY0J1YmJsZWAgdG8gYXZvaWQgcmVjcmVhdGluZyBvbmVzIHdlIGFscmVhZHkgaGF2ZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZ3Jlc3NUYWJsZUxldmVsQnViYmxlIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBOb3RlOiBpZiBhZGRpbmcgb3IgcmVtb3ZpbmcgcHJvcHMgaW4gdGhpcyBjb21wb25lbnQsIGJlIHN1cmUgdG8gcmVhZCB0aGVcbiAgICogY29tbWVudCBmb3IgYGdldENhY2hlS2V5YCBhbmQgdXBkYXRlIGFjY29yZGluZ2x5IGlmIG5lY2Vzc2FyeS5cbiAgICovXG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgbGV2ZWxTdGF0dXM6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgbGV2ZWxLaW5kOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGlzTG9ja2VkOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc1VucGx1Z2dlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNDb25jZXB0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc0JvbnVzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc1BhaXJlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgYnViYmxlU2l6ZTogUHJvcFR5cGVzLm9uZU9mKE9iamVjdC52YWx1ZXMoQnViYmxlU2l6ZSkpLmlzUmVxdWlyZWQsXG4gICAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdXJsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHJldmlld1N0YXRlOiBQcm9wVHlwZXMub25lT2YoT2JqZWN0LmtleXMoUmV2aWV3U3RhdGVzKSksXG4gIH07XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBidWJibGVTaXplOiBCdWJibGVTaXplLmZ1bGwsXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5jcmVhdGVCdWJibGVFbGVtZW50ID0gdGhpcy5jcmVhdGVCdWJibGVFbGVtZW50LmJpbmQodGhpcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCdWJibGVMaW5rIHVybD17dGhpcy5wcm9wcy51cmx9PlxuICAgICAgICA8Q2FjaGVkRWxlbWVudFxuICAgICAgICAgIGVsZW1lbnRUeXBlPXsnQmFzaWNCdWJibGUnfVxuICAgICAgICAgIGNhY2hlS2V5PXt0aGlzLmdldENhY2hlS2V5KCl9XG4gICAgICAgICAgY3JlYXRlRWxlbWVudD17dGhpcy5jcmVhdGVCdWJibGVFbGVtZW50fVxuICAgICAgICAvPlxuICAgICAgPC9CdWJibGVMaW5rPlxuICAgICk7XG4gIH1cblxuICBzaG91bGRTaG93S2VlcFdvcmtpbmdCYWRnZSgpIHtcbiAgICByZXR1cm4gW1Jldmlld1N0YXRlcy5rZWVwV29ya2luZywgUmV2aWV3U3RhdGVzLmF3YWl0aW5nUmV2aWV3XS5pbmNsdWRlcyhcbiAgICAgIHRoaXMucHJvcHMucmV2aWV3U3RhdGVcbiAgICApO1xuICB9XG5cbiAgY3JlYXRlQnViYmxlRWxlbWVudCgpIHtcbiAgICBjb25zdCB7XG4gICAgICBsZXZlbFN0YXR1cyxcbiAgICAgIGxldmVsS2luZCxcbiAgICAgIGlzTG9ja2VkLFxuICAgICAgaXNVbnBsdWdnZWQsXG4gICAgICBpc0NvbmNlcHQsXG4gICAgICBpc0JvbnVzLFxuICAgICAgaXNQYWlyZWQsXG4gICAgICB0aXRsZSxcbiAgICAgIGJ1YmJsZVNpemUsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgY29udGVudCA9IGdldEJ1YmJsZUNvbnRlbnQoXG4gICAgICBpc0xvY2tlZCxcbiAgICAgIGlzVW5wbHVnZ2VkLFxuICAgICAgaXNCb251cyxcbiAgICAgIGlzUGFpcmVkLFxuICAgICAgdGl0bGUsXG4gICAgICBidWJibGVTaXplXG4gICAgKTtcbiAgICByZXR1cm4gdGhpcy5yZW5kZXJCYXNpY0J1YmJsZShcbiAgICAgIGdldEJ1YmJsZVNoYXBlKGlzVW5wbHVnZ2VkLCBpc0NvbmNlcHQpLFxuICAgICAgYnViYmxlU2l6ZSxcbiAgICAgIGxldmVsUHJvZ3Jlc3NTdHlsZShsZXZlbFN0YXR1cywgbGV2ZWxLaW5kKSxcbiAgICAgIGNvbnRlbnQsXG4gICAgICB0aGlzLnNob3VsZFNob3dLZWVwV29ya2luZ0JhZGdlKClcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIFdlIHVzZSB0aGlzIGhlbHBlciBhcyBhIHRlc3RpbmcgaG9vayB0byBpbnRlcmNlcHQgdGhlIGV4cGxpY2l0IHByb3BzIHVzZWRcbiAgICogdG8gcmVuZGVyIHRoZSBgQmFzaWNCdWJibGVgLlxuICAgKi9cbiAgcmVuZGVyQmFzaWNCdWJibGUoc2hhcGUsIHNpemUsIHByb2dyZXNzU3R5bGUsIGNvbnRlbnQsIHNob3dLZWVwV29ya2luZ0JhZGdlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCYXNpY0J1YmJsZVxuICAgICAgICBzaGFwZT17c2hhcGV9XG4gICAgICAgIHNpemU9e3NpemV9XG4gICAgICAgIHByb2dyZXNzU3R5bGU9e3Byb2dyZXNzU3R5bGV9XG4gICAgICAgIGNsYXNzTmFtZXM9e2dldEJ1YmJsZUNsYXNzTmFtZXModHJ1ZSl9XG4gICAgICA+XG4gICAgICAgIHtjb250ZW50fVxuICAgICAgICB7c2hvd0tlZXBXb3JraW5nQmFkZ2UgJiYgKFxuICAgICAgICAgIDxCdWJibGVCYWRnZVxuICAgICAgICAgICAgYmFkZ2VUeXBlPXtCYWRnZVR5cGUua2VlcFdvcmtpbmd9XG4gICAgICAgICAgICBidWJibGVTaXplPXtzaXplfVxuICAgICAgICAgICAgYnViYmxlU2hhcGU9e3NoYXBlfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICA8L0Jhc2ljQnViYmxlPlxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyB0aGUgc2ltcGxlc3Qga2V5IHRvIHVzZSBmb3IgdGhpcyBidWJibGUgY29uZmlndXJhdGlvbi5cbiAgICpcbiAgICogTm90ZTogYSBtb3JlIGdlbmVyYWwgYXBwcm9hY2ggdG8gY2FjaGUga2V5IGdlbmVyYXRpb24gd2FzIGNvbnNpZGVyZWQsIGJ1dFxuICAgKiB3ZSBmb3VuZCB0aGF0IHRha2luZyBhZHZhbnRhZ2Ugb2Ygb3VyIGNvbnRleHR1YWwga25vd2xlZGdlIG9mIHdoYXQgbWFrZXMgYVxuICAgKiBrZXkvYnViYmxlIHBhaXIgdW5pcXVlIGVuYWJsZXMgdXMgdG8gdG8gb3B0aW1pemUga2V5IGxlbmd0aCwgd2hpY2ggcmVzdWx0c1xuICAgKiBpbiBhIG5vdGljZWFibGUtZW5vdWdoIHBlcmZvcm1hbmNlIGltcHJvdmVtZW50IHRvIHdhcnJhbnQgdGhlIGFkZGl0aW9uYWxcbiAgICogY29tcGxleGl0eSBoZXJlLlxuICAgKlxuICAgKiBIb3dldmVyLCB0aGF0IG1lYW5zIGZ1dHVyZSBtYWludGFpbmVycyBvZiB0aGlzIGNvbXBvbmVudCB3aWxsIG5lZWQgdG9cbiAgICogdGhpbmsgY2FyZWZ1bGx5IGFib3V0IHdoZXRoZXIgdGhlIGFkZGl0aW9uIG9yIHJlbW92YWwgb2YgcHJvcHMgaW4gdGhpc1xuICAgKiBjb21wb25lbnQgd2lsbCByZXF1aXJlIGFuIHVwZGF0ZSB0byB0aGlzIGZ1bmN0aW9uLlxuICAgKlxuICAgKiBUaGUgZ2VuZXJhbCByZXF1aXJlbWVudCBpcyB0aGF0IGlmIGEgcHJvcGVydHkgYWZmZWN0cyBob3cgdGhlIHJlbmRlcmVkXG4gICAqIGJ1YmJsZSB3aWxsIGFwcGVhciwgaXQgc2hvdWxkIGJlIGluY2x1ZGVkIGluIHRoZSBrZXkuIFRoYXQgaW5jbHVkZXNcbiAgICogcHJvcGVydGllcyByZWxhdGVkIHRvIHNoYXBlIGFuZCBzaXplLCBhcyB3ZWxsIGFzIGFueXRoaW5nIHBhc3NlZCBpbnRvXG4gICAqIGBnZXRQcm9ncmVzc1N0eWxlYCBhbmQgYGdldEJ1YmJsZUNvbnRlbnRgLlxuICAgKi9cbiAgZ2V0Q2FjaGVLZXkoKSB7XG4gICAgY29uc3Qge1xuICAgICAgaXNMb2NrZWQsXG4gICAgICBsZXZlbFN0YXR1cyxcbiAgICAgIGxldmVsS2luZCxcbiAgICAgIGlzVW5wbHVnZ2VkLFxuICAgICAgaXNDb25jZXB0LFxuICAgICAgaXNCb251cyxcbiAgICAgIGlzUGFpcmVkLFxuICAgICAgdGl0bGUsXG4gICAgICBidWJibGVTaXplLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgLy8gc2FjcmlmaWNpbmcga2V5IHJlYWRhYmlsaXR5IGZvciBldmVyeSBsaXR0bGUgcGVyZm9ybWFuY2UgYm9vc3QgKFwic3RzXCIpXG4gICAgbGV0IHN0YXR1c1N0cmluZyA9IGBzdHM9JHtsZXZlbFN0YXR1c31gO1xuXG4gICAgLy8gd2UgbmVlZCB0byBleHBsaWNpdGx5IHNwZWNpZnkgaWYgdGhlIGxldmVsIGlzIGFuIGFzc2Vzc21lbnQsIHNpbmNlXG4gICAgLy8gYXNzZXNzbWVudCBidWJibGVzIGFyZSBhIGRpZmZlcmVudCBjb2xvciB0aGFuIHJlZ3VsYXIgYnViYmxlcy5cbiAgICBpZiAobGV2ZWxLaW5kID09PSBMZXZlbEtpbmQuYXNzZXNzbWVudCkge1xuICAgICAgc3RhdHVzU3RyaW5nID0gYGFzbXQ6JHtzdGF0dXNTdHJpbmd9YDtcbiAgICB9XG5cbiAgICAvLyBsZXR0ZXIgYnViYmxlcyBhbmQgdW5wbHVnZ2VkIGJ1YmJsZXMgYXJlIGFsbCBvZiB0aGUgc2FtZSBzaGFwZSBhbmRcbiAgICAvLyBjb250ZW50LCBzbyBmb3IgdGhvc2Ugd2UgY2FuIHJldHVybiBhIHNob3J0ZXIga2V5LlxuICAgIGlmIChidWJibGVTaXplID09PSBCdWJibGVTaXplLmxldHRlcikge1xuICAgICAgY29uc3QgYmFkZ2UgPSB0aGlzLnNob3VsZFNob3dLZWVwV29ya2luZ0JhZGdlKCkgPyAnJmJkZycgOiAnJztcbiAgICAgIHJldHVybiBgbHRyOnR0bD0ke3RpdGxlfSYke3N0YXR1c1N0cmluZ30ke2JhZGdlfWA7XG4gICAgfSBlbHNlIGlmIChpc1VucGx1Z2dlZCkge1xuICAgICAgcmV0dXJuIGB1bnA6JHtzdGF0dXNTdHJpbmd9YDtcbiAgICB9XG5cbiAgICAvLyBpbiB0aGUgZ2VuZXJhbCBjYXNlLCB3ZSBuZWVkIHRvIGluY2x1ZGUgYWxsIHRoZSBwcm9wZXJ0aWVzIHRoYXQgYWZmZWN0XG4gICAgLy8gdGhlIGJ1YmJsZSdzIGFwcGVhcmFuY2UgaW4gdGhlIGNhY2hlIGtleSwgd2hpY2ggaW5jbHVkZSB0aGUgc2hhcGUsXG4gICAgLy8gc3RhdHVzLCBhbmQgYWxsIHRoZSBwcm9wcyB1c2VkIHRvIGRldGVybWluZSB0aGUgY29udGVudFxuICAgIGNvbnN0IHNoYXBlU3RyaW5nID0gYHNocD0ke2dldEJ1YmJsZVNoYXBlKGlzVW5wbHVnZ2VkLCBpc0NvbmNlcHQpfWA7XG4gICAgY29uc3QgY29udGVudFN0cmluZyA9IGlzTG9ja2VkXG4gICAgICA/IGBsa2Q6YFxuICAgICAgOiBpc1BhaXJlZFxuICAgICAgPyBgcHJkOmBcbiAgICAgIDogaXNCb251c1xuICAgICAgPyBgYm5zOmBcbiAgICAgIDogdGl0bGVcbiAgICAgID8gYHR0bD0ke3RpdGxlfWBcbiAgICAgIDogbnVsbDtcblxuICAgIGNvbnN0IHN0cmluZ3MgPSBbY29udGVudFN0cmluZywgc2hhcGVTdHJpbmcsIHN0YXR1c1N0cmluZ107XG4gICAgaWYgKHRoaXMuc2hvdWxkU2hvd0tlZXBXb3JraW5nQmFkZ2UoKSkge1xuICAgICAgc3RyaW5ncy5wdXNoKCdiZGcnKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0cmluZ3Muam9pbignJicpO1xuICB9XG59XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTVNlcnZlciBmcm9tICdyZWFjdC1kb20vc2VydmVyJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ2FjaGVkRWxlbWVudCh7ZWxlbWVudFR5cGUsIGNhY2hlS2V5LCBjcmVhdGVFbGVtZW50fSkge1xuICBjb25zdCBodG1sQ2FjaGUgPSBlbGVtZW50c0h0bWxDYWNoZVtlbGVtZW50VHlwZV0gfHwge307XG4gIGxldCBlbGVtZW50SHRtbCA9IGh0bWxDYWNoZVtjYWNoZUtleV07XG4gIGlmICghZWxlbWVudEh0bWwpIHtcbiAgICBlbGVtZW50SHRtbCA9IGNyZWF0ZUh0bWwoY3JlYXRlRWxlbWVudCgpKTtcbiAgICBodG1sQ2FjaGVbY2FjaGVLZXldID0gZWxlbWVudEh0bWw7XG4gICAgZWxlbWVudHNIdG1sQ2FjaGVbZWxlbWVudFR5cGVdID0gaHRtbENhY2hlO1xuICB9XG4gIC8vIHNpbmNlIHdlIGdlbmVyYXRlZCB0aGlzIGh0bWwgb3Vyc2VsdmVzLCB3ZSBrbm93IGl0IGlzIHNhZmVcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWRhbmdlclxuICByZXR1cm4gPGRpdiBkYW5nZXJvdXNseVNldElubmVySFRNTD17e19faHRtbDogZWxlbWVudEh0bWx9fSAvPjtcbn1cbkNhY2hlZEVsZW1lbnQucHJvcFR5cGVzID0ge1xuICBlbGVtZW50VHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBjYWNoZUtleTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBjcmVhdGVFbGVtZW50OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxufTtcblxuZnVuY3Rpb24gY3JlYXRlSHRtbChlbGVtZW50KSB7XG4gIHJldHVybiBSZWFjdERPTVNlcnZlci5yZW5kZXJUb1N0YXRpY01hcmt1cChlbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gY2xlYXJFbGVtZW50c0NhY2hlKCkge1xuICBPYmplY3Qua2V5cyhlbGVtZW50c0h0bWxDYWNoZSkuZm9yRWFjaChrZXkgPT4ge1xuICAgIGRlbGV0ZSBlbGVtZW50c0h0bWxDYWNoZVtrZXldO1xuICB9KTtcbn1cblxuY29uc3QgZWxlbWVudHNIdG1sQ2FjaGUgPSB7fTtcblxuZXhwb3J0IGNvbnN0IHVuaXRUZXN0RXhwb3J0cyA9IHtcbiAgY2xlYXJFbGVtZW50c0NhY2hlLFxuICBlbGVtZW50c0h0bWxDYWNoZSxcbn07XG4iLCIvKiFcblx0Q29weXJpZ2h0IChjKSAyMDE4IEplZCBXYXRzb24uXG5cdExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgc2VlXG5cdGh0dHA6Ly9qZWR3YXRzb24uZ2l0aHViLmlvL2NsYXNzbmFtZXNcbiovXG4vKiBnbG9iYWwgZGVmaW5lICovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgaGFzT3duID0ge30uaGFzT3duUHJvcGVydHk7XG5cdHZhciBuYXRpdmVDb2RlU3RyaW5nID0gJ1tuYXRpdmUgY29kZV0nO1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMoKSB7XG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmIChhcmdUeXBlID09PSAnc3RyaW5nJyB8fCBhcmdUeXBlID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpKSB7XG5cdFx0XHRcdGlmIChhcmcubGVuZ3RoKSB7XG5cdFx0XHRcdFx0dmFyIGlubmVyID0gY2xhc3NOYW1lcy5hcHBseShudWxsLCBhcmcpO1xuXHRcdFx0XHRcdGlmIChpbm5lcikge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGlubmVyKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoYXJnVHlwZSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0aWYgKGFyZy50b1N0cmluZyAhPT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyAmJiAhYXJnLnRvU3RyaW5nLnRvU3RyaW5nKCkuaW5jbHVkZXMoJ1tuYXRpdmUgY29kZV0nKSkge1xuXHRcdFx0XHRcdGNsYXNzZXMucHVzaChhcmcudG9TdHJpbmcoKSk7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucHJvZ3Jlc3MtYnViYmxlLmVuYWJsZWR7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4ycyBlYXNlLW91dCxib3JkZXItY29sb3IgLjJzIGVhc2Utb3V0LGNvbG9yIC4ycyBlYXNlLW91dH0ucHJvZ3Jlc3MtYnViYmxlLmVuYWJsZWQ6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6I2ZmZiAhaW1wb3J0YW50O2JvcmRlci1jb2xvcjojZmZhNDAwICFpbXBvcnRhbnQ7YmFja2dyb3VuZC1jb2xvcjojZmZhNDAwICFpbXBvcnRhbnR9YS5wcm9ncmVzcy1idWJibGUtbGlua3tkaXNwbGF5OmlubGluZS1ibG9jaztjdXJzb3I6cG9pbnRlcjt0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50fWEucHJvZ3Jlc3MtYnViYmxlLWxpbms6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9dGFibGUucHJvZ3Jlc3MtbGVnZW5ke21hcmdpbi10b3A6NjBweDttYXJnaW4tYm90dG9tOjIwcHh9dGFibGUucHJvZ3Jlc3MtbGVnZW5kOm50aC1vZi10eXBlKDIpe21hcmdpbi10b3A6MH10YWJsZS5wcm9ncmVzcy1sZWdlbmQ6b25seS1vZi10eXBle3dpZHRoOjEwMCV9LnByb2dyZXNzLWxlZ2VuZHt0ZXh0LWFsaWduOmNlbnRlcn0ucHJvZ3Jlc3MtbGVnZW5kIHRke3BhZGRpbmc6MTBweH0ucHJvZ3Jlc3MtbGVnZW5kIHRye2JvcmRlcjoycHggc29saWQgI2U3ZThlYTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LnByb2dyZXNzLWxlZ2VuZCB0aGVhZHtjb2xvcjojNWI2NzcwfS5wcm9ncmVzcy1sZWdlbmQgdGhlYWQgdHJ7YmFja2dyb3VuZC1jb2xvcjojZTdlOGVhfS5wcm9ncmVzcy1sZWdlbmQgdGhlYWQgdHI6Zmlyc3Qtb2YtdHlwZXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyOm5vbmV9LnByb2dyZXNzLWxlZ2VuZCB0aGVhZCB0cjpmaXJzdC1vZi10eXBlIHRke2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zaXplOjE4cHh9LnByb2dyZXNzLWxlZ2VuZCB0aGVhZCB0ciBkaXY6bnRoLW9mLXR5cGUoMil7Zm9udC1zaXplOjEwcHh9LnByb2dyZXNzLWxlZ2VuZCB0Ym9keSB0ZDpmaXJzdC1vZi10eXBle2JvcmRlci1pbmxpbmUtZW5kOjJweCBzb2xpZCAjZTdlOGVhfS5wcm9ncmVzcy1sZWdlbmQgZGl2e2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0ucHJvZ3Jlc3MtbGVnZW5kIC5sZXZlbC1kZXRhaWxze3BhZGRpbmc6MTBweCAwO3doaXRlLXNwYWNlOm5vd3JhcH0ucHJvZ3Jlc3MtbGVnZW5kIC5sZXZlbC1kZXRhaWxzIGRpdjpudGgtb2YtdHlwZSgyKXtwYWRkaW5nLXRvcDoxNnB4fS5wcm9ncmVzcy1sZWdlbmQgLmxldmVsLWRldGFpbHMgaXttYXJnaW4taW5saW5lLWVuZDo1cHh9LnByb2dyZXNzLWxlZ2VuZCAuZW5kLWJvcmRlcntib3JkZXItaW5saW5lLWVuZDoycHggc29saWQgI2U3ZThlYX1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvdGVtcGxhdGVzL3Byb2dyZXNzL3N0eWxlcy5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi8uLi9zaGFyZWQvY3NzL2NvbG9yLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBR0UseUJBQ0UscUZBQ0UsQ0FHRiwrQkFDRSxvQkFBQSxDQUNBLHFCQUFBLENBQ0EsK0JBQUEsQ0FDQSxtQ0FBQSxDQUtOLHVCQUNFLG9CQUFBLENBQ0EsY0FBQSxDQUdBLCtCQUFBLENBRUEsNkJBQ0Usb0JBQUEsQ0FJSixzQkFDRSxlQUFBLENBQ0Esa0JBQUEsQ0FDQSxxQ0FDRSxZQUFBLENBRUYsbUNBQ0UsVUFBQSxDQUdKLGlCQUNFLGlCQUFBLENBQ0Esb0JBQ0UsWUFBQSxDQUVGLG9CQUNFLHdCQUFBLENBQ0EscUJDM0JJLENENkJOLHVCQUNFLGFDcENPLENEcUNQLDBCQUNFLHdCQ25DVSxDRG9DVix3Q0FDRSxxQkNsQ0EsQ0RtQ0EsV0FBQSxDQUNBLDJDQUNFLGdCQUFBLENBQ0EsY0FBQSxDQUdKLDZDQUNFLGNBQUEsQ0FLSix3Q0FDRSxtQ0FBQSxDQUdKLHFCQUNFLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLHNCQUFBLENBRUYsZ0NBQ0UsY0FBQSxDQUNBLGtCQUFBLENBQ0EsbURBQ0UsZ0JBQUEsQ0FFRixrQ0FDRSxxQkFBQSxDQUdKLDZCQUNFLG1DQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgXFxcImNvbG9yLnNjc3NcXFwiO1xcblxcbi5wcm9ncmVzcy1idWJibGUge1xcbiAgJi5lbmFibGVkIHtcXG4gICAgdHJhbnNpdGlvbjpcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1vdXQsXFxuICAgICAgYm9yZGVyLWNvbG9yIDAuMnMgZWFzZS1vdXQsXFxuICAgICAgY29sb3IgMC4ycyBlYXNlLW91dDtcXG4gICAgJjpob3ZlciB7XFxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgICAgIGNvbG9yOiAkd2hpdGUgIWltcG9ydGFudDtcXG4gICAgICBib3JkZXItY29sb3I6ICRsZXZlbF9jdXJyZW50ICFpbXBvcnRhbnQ7XFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGxldmVsX2N1cnJlbnQgIWltcG9ydGFudDtcXG4gICAgfVxcbiAgfVxcbn1cXG5cXG5hLnByb2dyZXNzLWJ1YmJsZS1saW5rIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG5cXG4gIC8vIFVzZSBpbXBvcnRhbnQgdG8gb3ZlcndyaXRlIGRlZmF1bHQgcHJvamVjdHMgbGluayB1bmRlcmxpbmUuXFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtcXG5cXG4gICY6aG92ZXIge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICB9XFxufVxcblxcbnRhYmxlLnByb2dyZXNzLWxlZ2VuZCB7XFxuICBtYXJnaW4tdG9wOiA2MHB4O1xcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG4gICY6bnRoLW9mLXR5cGUoMikge1xcbiAgICBtYXJnaW4tdG9wOiAwO1xcbiAgfVxcbiAgJjpvbmx5LW9mLXR5cGUge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG59XFxuLnByb2dyZXNzLWxlZ2VuZCB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB0ZCB7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICB9XFxuICB0ciB7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRsaWdodGVzdF9ncmF5O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XFxuICB9XFxuICB0aGVhZCB7XFxuICAgIGNvbG9yOiAkY2hhcmNvYWw7XFxuICAgIHRyIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHRlc3RfZ3JheTtcXG4gICAgICAmOmZpcnN0LW9mLXR5cGUge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xcbiAgICAgICAgYm9yZGVyOiBub25lO1xcbiAgICAgICAgdGQge1xcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgICBkaXY6bnRoLW9mLXR5cGUoMikge1xcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcbiAgdGJvZHkge1xcbiAgICB0ZDpmaXJzdC1vZi10eXBlIHtcXG4gICAgICBib3JkZXItaW5saW5lLWVuZDogMnB4IHNvbGlkICRsaWdodGVzdF9ncmF5O1xcbiAgICB9XFxuICB9XFxuICBkaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIH1cXG4gIC5sZXZlbC1kZXRhaWxzIHtcXG4gICAgcGFkZGluZzogMTBweCAwO1xcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgICBkaXY6bnRoLW9mLXR5cGUoMikge1xcbiAgICAgIHBhZGRpbmctdG9wOiAxNnB4O1xcbiAgICB9XFxuICAgIGkge1xcbiAgICAgIG1hcmdpbi1pbmxpbmUtZW5kOiA1cHg7XFxuICAgIH1cXG4gIH1cXG4gIC5lbmQtYm9yZGVyIHtcXG4gICAgYm9yZGVyLWlubGluZS1lbmQ6IDJweCBzb2xpZCAkbGlnaHRlc3RfZ3JheTtcXG4gIH1cXG59XFxuXCIsXCIvLyBjb2xvcnMgZnJvbSBodHRwczovL3d3dy5kcm9wYm94LmNvbS9zL3ljaml3dDh2eGxtdjJpaC9Db2RlLm9yZ19zdHlsZXNoZWV0X3YyXzA5LjA1LjEzLnBkZlxcblxcbi8vIFBsZWFzZSBrZWVwIHRoaXMgZmlsZSBzaW1wbGU7IGl0IHNob3VsZCBvbmx5IGNvbnRhaW4gY29sb3IgZGVmaW5pdGlvbnNcXG4vLyAgIGFuZCBhbGlhc2VzLiAgVmFyaWFibGVzIGRlZmluZWQgaW4gdGhpcyBmaWxlIGFyZSBleHBvcnRlZCB0b1xcbi8vICAgYXBwcy9zcmMvdXRpbC9jb2xvci5qcyBkdXJpbmcgdGhlIGFwcHMgYnVpbGQgcHJvY2Vzcy5cXG5cXG4kYmxhY2s6ICMwMDA7XFxuJGJhY2tncm91bmRfYmxhY2s6ICMxMjE0MTY7XFxuJGRhcmtfZ3JheTogIzJEMzEzOTtcXG4kZGFya2VzdF9ncmF5OiAjMjkyRjM2O1xcbiRkYXJrX3NsYXRlX2dyYXk6ICMyODJjMzQ7XFxuJGRhcmtlc3Rfc2xhdGVfZ3JheTogIzI1MjkyZDtcXG4kZGFya19jaGFyY29hbDogIzRkNTc1ZjtcXG4kY2hhcmNvYWw6ICM1YjY3NzA7XFxuJGxpZ2h0X2dyYXk6ICM5NDljYTI7XFxuJGxpZ2h0ZXJfZ3JheTogI2M2Y2FjZDtcXG4kbGlnaHRlc3RfZ3JheTogI2U3ZThlYTtcXG4kYmFja2dyb3VuZF9ncmF5OiAjZjJmMmYyO1xcbiRkaW1ncmF5OiAjNjk2OTY5O1xcbiR3aGl0ZTogI2ZmZjtcXG4kZGVmYXVsdF9ibHVlOiAjMzY3MGIzO1xcblxcbiRkYXJrX3RlYWw6ICMwMDk0YTM7XFxuJHRlYWw6ICMwMDkzYTQ7XFxuJGFwcGxhYl9idXR0b25fdGVhbDogIzFhYmM5YztcXG4kbGlnaHRfdGVhbDogIzU5Y2FkMztcXG4kbGlnaHRpc2hfdGVhbDogIzgwZDZkZTtcXG4kbGlnaHRlcl90ZWFsOiAjYTZlM2U4O1xcbiRsaWdodGVzdF90ZWFsOiAjZDlmM2Y1O1xcbiRhaV9ydWJyaWNfY3lhbjogIzNjZmZmODtcXG5cXG4kcHVycGxlOiAjOGM1MmJhO1xcbiRsaWdodF9wdXJwbGU6ICNhNjliYzE7XFxuJGxpZ2h0ZXJfcHVycGxlOiAjY2ZjOWRlO1xcbiRsaWdodGVzdF9wdXJwbGU6ICNlYmU4ZjE7XFxuXFxuJGN5YW46ICMwMDk0Y2E7XFxuJGxpZ2h0X2N5YW46ICM1OWI5ZGM7XFxuJGxpZ2h0ZXJfY3lhbjogI2E2ZGFlZDtcXG4kbGlnaHRlc3RfY3lhbjogI2Q5ZWZmNztcXG4kYWxtb3N0X3doaXRlX2N5YW46ICNmNWZjZmY7XFxuXFxuJG9yYW5nZTogI2ZmYTQwMDtcXG4kbGlnaHRfb3JhbmdlOiAjZmZjNDU5O1xcbiRsaWdodGVyX29yYW5nZTogI2ZmZTBhNjtcXG4kbGlnaHRlc3Rfb3JhbmdlOiAjZmZmMmQ5O1xcbiRkYXJrX29yYW5nZTogI2ZmODYwMDtcXG5cXG4kZ3JlZW46ICNiOWJmMTU7XFxuJGxpZ2h0X2dyZWVuOiAjZDFkNTY3O1xcbiRsaWdodGVyX2dyZWVuOiAjZTdlOWFkO1xcbiRsaWdodGVzdF9ncmVlbjogI2Y1ZjVkYztcXG4kaGlnaGxpZ2h0X2dyZWVuOiAjOGFmYzliO1xcblxcbiR5ZWxsb3c6ICNmZmI4MWQ7XFxuJGxpZ2h0X3llbGxvdzogI2ZmZGI3NDtcXG4kbGlnaHRlcl95ZWxsb3c6ICNmZmViYjU7XFxuJGxpZ2h0ZXN0X3llbGxvdzogI2ZmZjdkZjtcXG5cXG4kZ29sZGVucm9kOiAjZGFhNTIwO1xcblxcbiRoZWFkZXJfdGV4dDogJHdoaXRlO1xcbiRia2duZF9jb2xvcjogJHRlYWw7XFxuJGluc2V0X2NvbG9yOiAkbGlnaHRlcl9ncmF5O1xcbiRkYXJrX2NvbG9yOiAkcHVycGxlO1xcbiRoZHJfY29sb3I6ICRwdXJwbGU7XFxuXFxuLy8gU29tZSBleHRyYSBjb2xvcnMuXFxuJHJlZDogI2MwMDtcXG4kbGlnaHRlc3RfcmVkOiAjZmNjO1xcbiRkYXJrX3JlZDogI2Q2MjkxMTtcXG4kcmVhbGdyZWVuOiAjMDA4MDAwO1xcbiRyZWFseWVsbG93OiAjZmYwO1xcbiRtdXN0YXJkeWVsbG93OiAjZWZjZDFjO1xcbiR0d2l0dGVyX2JsdWU6ICMwMGFjZWQ7XFxuJGZhY2Vib29rX2JsdWU6ICMzYjU5OTg7XFxuJGxpbmtlZGluX2JsdWU6ICMwMDc3QjU7XFxuJGRhcmtfYmx1ZTogIzAwNjQ3ZjtcXG4kYmxvY2tseV9mbHlvdXRfZ3JheTogI2RkZDtcXG4kZGVmYXVsdF90ZXh0OiAjMzMzO1xcbiRib3JkZXJfZ3JheTogI2JiYjtcXG4kYm9yZGVyX2xpZ2h0X2dyYXk6ICNkOGQ4ZDg7XFxuJHRhYmxlX2hlYWRlcjogI2VjZWNlYztcXG4kdGFibGVfbGlnaHRfcm93OiAjZmNmY2ZjO1xcbiR0YWJsZV9kYXJrX3JvdzogI2Y0ZjRmNDtcXG5cXG4vLyBQcm9ncmVzcyBjb2xvcnMuXFxuJGxldmVsX3N1Ym1pdHRlZDogJHB1cnBsZTtcXG4kbGV2ZWxfcGVyZmVjdDogcmdiKDE0LCAxOTAsIDE0KTtcXG4kbGV2ZWxfcGFzc2VkOiByZ2IoMTU5LCAyMTIsIDE1OSk7XFxuJGxldmVsX2F0dGVtcHRlZDogJHJlYWx5ZWxsb3c7XFxuJGxldmVsX25vdF90cmllZDogI2ZlZmVmZTtcXG4kbGV2ZWxfY3VycmVudDogJG9yYW5nZTtcXG4kbGV2ZWxfcmV2aWV3X3JlamVjdGVkOiAkcmVkO1xcbiRsZXZlbF9yZXZpZXdfYWNjZXB0ZWQ6IHJnYigxMSwgMTQyLCAxMSk7IC8vIFRPRE86ICRsZXZlbF9wYXNzZWQ7XFxuJGFzc2Vzc21lbnQ6ICRjeWFuO1xcbiR3b3Jrc3BhY2VfcnVubmluZ19iYWNrZ3JvdW5kOiAjZTVlNWU1O1xcblxcbi8vIEV4cGVyaW1lbnRhbCBTcHJpdGUgTGFiIHZhbGlkYXRpb24gY29sb3JzLlxcbiRkYXJrX3B1cnBsZTogIzY4MkE3NztcXG4kYnJpZ2h0X2dyZWVuOiAjMGViZTBlO1xcbiRuZW9uX3Bpbms6ICNlOTExOGY7XFxuXFxuLy8gTGlua3MgKHVzZWQgaW4gYXBwcykuXFxuJGxpbmtfY29sb3I6ICMwNTk2Y2U7XFxuXFxuLy8gU2hhZG93LlxcbiRzaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4zKTtcXG5cXG4vLyBDb2xvcnMgdGhhdCBhcmUgdGFrZW4gZnJvbSBib290c3RyYXAsIGFuZCBub3QgbmVjZXNzYXJpbHkgcGFydCBvZiBvdXIgY29yZSB0aGVtZS5cXG4kYm9vdHN0cmFwX2J1dHRvbl9ibHVlOiAjMzM3YWI3O1xcbiRib290c3RyYXBfYnV0dG9uX3JlZDogI2Q5NTM0ZjtcXG4kYm9vdHN0cmFwX2Vycm9yX2JhY2tncm91bmQ6ICNmMmRlZGU7XFxuJGJvb3RzdHJhcF9lcnJvcl90ZXh0OiAjYjk0YTQ4O1xcbiRib290c3RyYXBfdjNfZXJyb3JfdGV4dDogI2E5NDQ0MjtcXG4kYm9vdHN0cmFwX2Vycm9yX2JvcmRlcjogI2ViY2NkMTtcXG4kYm9vdHN0cmFwX3dhcm5pbmdfYmFja2dyb3VuZDogI2ZjZjhlMztcXG4kYm9vdHN0cmFwX3dhcm5pbmdfdGV4dDogI2MwOTg1MztcXG4kYm9vdHN0cmFwX3dhcm5pbmdfYm9yZGVyOiAjZmFlYmNjO1xcbiRib290c3RyYXBfYm9yZGVyX2NvbG9yOiAjY2NjY2NjO1xcbiRib290c3RyYXBfc3VjY2Vzc19iYWNrZ3JvdW5kOiAjZGZmMGQ4O1xcbiRib290c3RyYXBfc3VjY2Vzc190ZXh0OiAjNDY4ODQ3O1xcbiRib290c3RyYXBfc3VjY2Vzc19ib3JkZXI6ICNkNmU5YzY7XFxuXFxuLy8gQ29sb3JzIHRha2VuIGZyb20gZHJvcGxldCwgbm90IHBhcnQgb2Ygb3VyIGNvcmUgdGhlbWUuXFxuJGRyb3BsZXRfbGlnaHRfZ3JlZW46ICNkM2U5NjU7XFxuJGRyb3BsZXRfYmx1ZTogIzY0YjVmNjtcXG4kZHJvcGxldF9icmlnaHRfYmx1ZTogIzE5YzNlMTtcXG4kZHJvcGxldF95ZWxsb3c6ICNmZmYxNzY7XFxuJGRyb3BsZXRfb3JhbmdlOiAjZmZiNzRkO1xcbiRkcm9wbGV0X3JlZDogI2Y3ODE4MztcXG4kZHJvcGxldF9jeWFuOiAjNGRkMGUxO1xcbiRkcm9wbGV0X3Bpbms6ICNmNTdhYzY7XFxuJGRyb3BsZXRfcHVycGxlOiAjYmI3N2M3O1xcbiRkcm9wbGV0X2dyZWVuOiAjNjhkOTk1O1xcbiRkcm9wbGV0X3doaXRlOiAkd2hpdGU7XFxuXFxuLy8gT2NlYW5zOiBkZWVwIGJsdWUgYmFja2dyb3VuZC5cXG4kb2NlYW5zX2RlZXBfYmx1ZTogcmdiKDIsIDAsIDI4KTtcXG5cXG4vLyBEYXJrIHRoZW1lIGJhY2tncm91bmQgKHVzZWQgYnkgZGVmYXVsdCBpbiBNdXNpYyBMYWIpXFxuJGRhcmtfYmxhY2s6ICMxMjEyMTI7XFxuXFxuLy8gPT09LS0tLT09PS0tLS09PT0tLS0tIFBoYXNlIDEgQ29sb3JzOiAtLS0tPT09LS0tLT09PS0tLS09PT1cXG4vLyBCcmFuZFxcbiRicmFuZF9wcmltYXJ5X2xpZ2h0OiAjRTBGOEY5O1xcbiRicmFuZF9wcmltYXJ5X2RlZmF1bHQ6ICMwMDlFQjA7XFxuJGJyYW5kX3ByaW1hcnlfZGFyazogIzAwNzc4NTtcXG5cXG4kYnJhbmRfc2Vjb25kYXJ5X2xpZ2h0OiAjRTBEMUVDO1xcbiRicmFuZF9zZWNvbmRhcnlfZGVmYXVsdDogIzhDNTJCQTtcXG4kYnJhbmRfc2Vjb25kYXJ5X2Rhcms6ICM2QzQ2OEE7XFxuXFxuJGJyYW5kX2FjY2VudF9kZWZhdWx0OiAjRUQ2MDYwO1xcblxcbiRicmFuZF90ZWFsXzU6ICNERkYyRjQ7XFxuXFxuLy9Qcm9kdWN0XFxuJHByb2R1Y3RfYWZmaXJtYXRpdmVfZGVmYXVsdDogIzNFQTMzRTtcXG5cXG4kcHJvZHVjdF9uZWdhdGl2ZV9saWdodDogI0ZERUJFOTtcXG4kcHJvZHVjdF9uZWdhdGl2ZV9kZWZhdWx0OiAjRTUzMTFBO1xcbiRwcm9kdWN0X25lZ2F0aXZlX2Rhcms6ICNBQTI1MTM7XFxuXFxuJHByb2R1Y3RfY2F1dGlvbl9kZWZhdWx0OiAjRjlDQjI4O1xcblxcbiRwcm9kdWN0X2luZm9ybWF0aW9uX2RlZmF1bHQ6ICMwMDdBQ0M7XFxuXFxuLy8gTmV1dHJhbFxcbiRuZXV0cmFsX3doaXRlOiAjRkZGRkZGO1xcbiRuZXV0cmFsX2xpZ2h0OiAjRjdGOEZBO1xcbiRuZXV0cmFsX2dyYXkxMDogI0VBRUJFQjtcXG4kbmV1dHJhbF9kYXJrMTA6ICNFQUVDRUY7XFxuJG5ldXRyYWxfZGFyazIwOiAjRDFENEQ4O1xcbiRuZXV0cmFsX2RhcmszMDogI0JFQzJDNztcXG4kbmV1dHJhbF9kYXJrNDA6ICNBQkIwQjY7XFxuJG5ldXRyYWxfZGFyazUwOiAjOTg5RUE1O1xcbiRuZXV0cmFsX2Rhcms2MDogIzg1OEM5NDtcXG4kbmV1dHJhbF9kYXJrNzA6ICM3MjdBODM7XFxuJG5ldXRyYWxfZGFyazgwOiAjNUY2ODcyO1xcbiRuZXV0cmFsX2Rhcms5MDogIzRDNTY2MTtcXG4kbmV1dHJhbF9kYXJrOiAjMjkyRjM2O1xcblxcbi8vQnJhbmRzXFxuJGdvb2dsZV9icmFuZF9jb2xvcjogIzBGOUQ1ODtcXG4kbWljcm9zb2Z0X2JyYW5kX2NvbG9yOiAjRkZCOTAwO1xcbiRmYWNlYm9va19icmFuZF9jb2xvcjogIzNCNTk5ODtcXG4kY2xldmVyX2JyYW5kX2NvbG9yOiAjMTQ2NEZGO1xcblxcbi8vID09PS0tLS09PT0tLS0tPT09LS0tLSBEZXNpZ24gc3lzdGVtIGNvbG9yczogLS0tLT09PS0tLS09PT0tLS0tPT09XFxuXFxuJGxpZ2h0X3ByaW1hcnlfMTAwOiAjQkZFNEU4O1xcbiRsaWdodF9wcmltYXJ5XzUwMDogIzAwOTNBNDtcXG4kbGlnaHRfcHJpbWFyeV83MDA6ICMwMDc3ODU7XFxuXFxuJGxpZ2h0X3NlY29uZGFyeV8xMDA6ICNFMkQ0RUU7XFxuJGxpZ2h0X3NlY29uZGFyeV81MDA6ICM4QzUyQkE7XFxuJGxpZ2h0X3NlY29uZGFyeV83MDA6ICM2QzQ2OEE7XFxuXFxuJGxpZ2h0X2dyYXlfNTA6ICNGN0Y4RkE7XFxuJGxpZ2h0X2dyYXlfMTAwOiAjRUFFQ0VGO1xcbiRsaWdodF9ncmF5XzIwMDogI0QxRDREODtcXG4kbGlnaHRfZ3JheV8zMDA6ICNCRUMyQzc7XFxuJGxpZ2h0X2dyYXlfNDAwOiAjQUJCMEI2O1xcbiRsaWdodF9ncmF5XzUwMDogIzk4OUVBNTtcXG4kbGlnaHRfZ3JheV82MDA6ICM4NThDOTQ7XFxuJGxpZ2h0X2dyYXlfNzAwOiAjNzI3QTgzO1xcbiRsaWdodF9ncmF5XzgwMDogIzVGNjg3MjtcXG4kbGlnaHRfZ3JheV85MDA6ICM0QzU2NjE7XFxuJGxpZ2h0X2dyYXlfOTUwOiAjMzk0NDUwO1xcblxcbiRsaWdodF9hZmZpcm1hdGl2ZV8xMDA6ICNFMkYxRTI7XFxuJGxpZ2h0X2FmZmlybWF0aXZlXzUwMDogIzNFQTMzRTtcXG4kbGlnaHRfYWZmaXJtYXRpdmVfNzAwOiAjMkQ3NDJEO1xcblxcbiRsaWdodF9uZWdhdGl2ZV8xMDA6ICNGQkUwREQ7XFxuJGxpZ2h0X25lZ2F0aXZlXzUwMDogI0U1MzExQTtcXG4kbGlnaHRfbmVnYXRpdmVfNzAwOiAjQjI0OTQ5O1xcblxcbiRsaWdodF9jYXV0aW9uXzEwMDogI0ZFRjdERjtcXG4kbGlnaHRfY2F1dGlvbl81MDA6ICNGOUNCMjg7XFxuJGxpZ2h0X2NhdXRpb25fNzAwOiAjQzdBMjIwO1xcblxcbiRsaWdodF9hY2NlbnRfMTAwOiAjRkFEN0Q3O1xcbiRsaWdodF9hY2NlbnRfNTAwOiAjRUQ2MDYwO1xcbiRsaWdodF9hY2NlbnRfNzAwOiAjRDg0QzRDO1xcblxcbiRsaWdodF9hcXVhXzEwMDogI0NFRkZGRDtcXG4kbGlnaHRfYXF1YV81MDA6ICMzQ0ZGRjg7XFxuJGxpZ2h0X2FxdWFfNzAwOiAjMzBDQ0M2O1xcblxcbiRsaWdodF9vcmFuZ2VfMTAwOiAjRkZFRENDO1xcbiRsaWdodF9vcmFuZ2VfNTAwOiAjRkZBNDAwO1xcbiRsaWdodF9vcmFuZ2VfNzAwOiAjQ0M4MzAwO1xcblxcbiRsaWdodF9pbmZvXzEwMDogI0RDRUZGQjtcXG4kbGlnaHRfaW5mb181MDA6ICMxODkyRTM7XFxuJGxpZ2h0X2luZm9fNzAwOiAjMTM3NUI2O1xcblxcbiRsaWdodF93aGl0ZTogI0ZGRkZGRjtcXG5cXG4kbGlnaHRfYmxhY2s6ICMyOTJGMzY7XFxuXFxuJGxpZ2h0X2JsYWNrX29wYWNpdHlfOTA6IHJnYmEoNDEsIDQ3LCA1NCwgMC45MCk7XFxuJGxpZ2h0X2JsYWNrX29wYWNpdHktODA6IHJnYmEoNDEsIDQ3LCA1NCwgMC44MCk7XFxuJGxpZ2h0X2JsYWNrX29wYWNpdHktNzA6IHJnYmEoNDEsIDQ3LCA1NCwgMC43MCk7XFxuJGxpZ2h0X2JsYWNrX29wYWNpdHktNjA6IHJnYmEoNDEsIDQ3LCA1NCwgMC42MCk7XFxuJGxpZ2h0X2JsYWNrX29wYWNpdHktNTA6IHJnYmEoNDEsIDQ3LCA1NCwgMC41MCk7XFxuJGxpZ2h0X2JsYWNrX29wYWNpdHktNDA6IHJnYmEoNDEsIDQ3LCA1NCwgMC40MCk7XFxuJGxpZ2h0X2JsYWNrX29wYWNpdHktMzA6IHJnYmEoNDEsIDQ3LCA1NCwgMC4zMCk7XFxuJGxpZ2h0X2JsYWNrX29wYWNpdHktMjA6IHJnYmEoNDEsIDQ3LCA1NCwgMC4yMCk7XFxuJGxpZ2h0X2JsYWNrX29wYWNpdHktMTA6IHJnYmEoNDEsIDQ3LCA1NCwgMC4xMCk7XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmZ1bmN0aW9uIGNyZWF0ZVRodW5rTWlkZGxld2FyZShleHRyYUFyZ3VtZW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoX3JlZikge1xuICAgIHZhciBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7XG4gICAgdmFyIGdldFN0YXRlID0gX3JlZi5nZXRTdGF0ZTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG5leHQpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYWN0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGlvbihkaXNwYXRjaCwgZ2V0U3RhdGUsIGV4dHJhQXJndW1lbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbn1cblxudmFyIHRodW5rID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKCk7XG50aHVuay53aXRoRXh0cmFBcmd1bWVudCA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gdGh1bms7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s0XS51c2VbMV0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzRdLnVzZVsyXSEuL3N0eWxlcy5zY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNF0udXNlWzFdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s0XS51c2VbMl0hLi9zdHlsZXMuc2Nzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQge0xldmVsU3RhdHVzfSBmcm9tICdAY2RvL2dlbmVyYXRlZC1zY3JpcHRzL3NoYXJlZENvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIGZha2VMZXZlbHMsXG4gIGZha2VMZXZlbCxcbiAgZmFrZVByb2dyZXNzRm9yTGV2ZWxzLFxufSBmcm9tICcuLi8uLi9wcm9ncmVzcy9wcm9ncmVzc1Rlc3RIZWxwZXJzJztcblxuaW1wb3J0IFByb2dyZXNzVGFibGVEZXRhaWxDZWxsIGZyb20gJy4vUHJvZ3Jlc3NUYWJsZURldGFpbENlbGwnO1xuXG5jb25zdCBzdGF0dXNGb3JMZXZlbCA9IFtcbiAgTGV2ZWxTdGF0dXMucGVyZmVjdCxcbiAgTGV2ZWxTdGF0dXMubm90X3RyaWVkLFxuICBMZXZlbFN0YXR1cy5hdHRlbXB0ZWQsXG4gIExldmVsU3RhdHVzLnBhc3NlZCxcbiAgTGV2ZWxTdGF0dXMuc3VibWl0dGVkLFxuXTtcbmNvbnN0IGxldmVscyA9IGZha2VMZXZlbHMoNSk7XG5sZXZlbHNbMF0uaXNDb25jZXB0TGV2ZWwgPSB0cnVlO1xuXG5jb25zdCBkaWFtb25kTGV2ZWxzID0gZmFrZUxldmVscygyKTtcbmRpYW1vbmRMZXZlbHNbMF0uaXNDb25jZXB0TGV2ZWwgPSB0cnVlO1xuZGlhbW9uZExldmVsc1sxXS5pc0NvbmNlcHRMZXZlbCA9IHRydWU7XG5cbmNvbnN0IHVucGx1Z2dlZExldmVsID0gZmFrZUxldmVsKHtpZDogMiwgaXNVbnBsdWdnZWQ6IHRydWV9KTtcblxuY29uc3Qgc3R1ZGVudFByb2dyZXNzID0gZmFrZVByb2dyZXNzRm9yTGV2ZWxzKGxldmVscyk7XG5sZXZlbHMuZm9yRWFjaChcbiAgKGxldmVsLCBpbmRleCkgPT4gKHN0dWRlbnRQcm9ncmVzc1tsZXZlbC5pZF0uc3RhdHVzID0gc3RhdHVzRm9yTGV2ZWxbaW5kZXhdKVxuKTtcblxuY29uc3QgcGFpcmVkUHJvZ3Jlc3MgPSBmYWtlUHJvZ3Jlc3NGb3JMZXZlbHMobGV2ZWxzKTtcbnBhaXJlZFByb2dyZXNzW2xldmVsc1swXS5pZF0ucGFpcmVkID0gdHJ1ZTtcblxuY29uc3Qgc3VibGV2ZWxzID0gZmFrZUxldmVscyg1KTtcbnN1YmxldmVscy5mb3JFYWNoKChzdWIsIGluZGV4KSA9PiB7XG4gIHN1Yi5idWJibGVUZXh0ID0gU3RyaW5nLmZyb21DaGFyQ29kZSgnYScuY2hhckNvZGVBdCgwKSArIGluZGV4KTtcbn0pO1xuY29uc3QgbGV2ZWxXaXRoU3VibGV2ZWxzID0gZmFrZUxldmVscygxKVswXTtcbmxldmVsV2l0aFN1YmxldmVscy5zdWJsZXZlbHMgPSBzdWJsZXZlbHM7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBQcm9ncmVzc1RhYmxlRGV0YWlsQ2VsbCxcbn07XG5cbmNvbnN0IERFRkFVTFRfUFJPUFMgPSB7XG4gIHN0dWRlbnRJZDogMSxcbiAgc2VjdGlvbklkOiAxLFxufTtcblxuLyoqXG4gKiBUaGlzIHBsYWNlcyB0aGUgY29tcG9uZW50IGluIHRoZSBzYW1lIHRhYmxlIHN0cnVjdHVyZSB0aGF0IHdpbGwgYmUgcmVuZGVyZWRcbiAqIGJ5IHRoZSBjb21wb25lbnQncyBwYXJlbnRzLCB0byBlbnN1cmUgdGhhdCB0aGUgc2FtZSBsYXlvdXQgc3R5bGVzIGFyZSBhcHBsaWVkLlxuICovXG5jb25zdCBUZW1wbGF0ZSA9IGFyZ3MgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzLXRhYmxlXCI+XG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb250ZW50LXZpZXdcIj5cbiAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJkZXRhaWwtdmlld1wiPlxuICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgPHRyPlxuICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICA8UHJvZ3Jlc3NUYWJsZURldGFpbENlbGwgey4uLkRFRkFVTFRfUFJPUFN9IHsuLi5hcmdzfSAvPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICA8L3RyPlxuICAgICAgICA8L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgY29uc3QgTGV2ZWxXaXRoU3VibGV2ZWxzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5MZXZlbFdpdGhTdWJsZXZlbHMuYXJncyA9IHtcbiAgbGV2ZWxzOiBbbGV2ZWxXaXRoU3VibGV2ZWxzXSxcbiAgc3R1ZGVudFByb2dyZXNzOiBzdHVkZW50UHJvZ3Jlc3MsXG59O1xuXG5leHBvcnQgY29uc3QgQmFzaWNCdWJibGVzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5CYXNpY0J1YmJsZXMuYXJncyA9IHtcbiAgbGV2ZWxzOiBsZXZlbHMsXG4gIHN0dWRlbnRQcm9ncmVzczogc3R1ZGVudFByb2dyZXNzLFxufTtcblxuZXhwb3J0IGNvbnN0IERpYW1vbmRCdWJibGVzID0gVGVtcGxhdGUuYmluZCh7fSk7XG5EaWFtb25kQnViYmxlcy5hcmdzID0ge1xuICBsZXZlbHM6IGRpYW1vbmRMZXZlbHMsXG4gIHN0dWRlbnRQcm9ncmVzczogc3R1ZGVudFByb2dyZXNzLFxufTtcblxuZXhwb3J0IGNvbnN0IEluY2x1ZGVzUGFpcmVkTGV2ZWwgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkluY2x1ZGVzUGFpcmVkTGV2ZWwuYXJncyA9IHtcbiAgbGV2ZWxzOiBsZXZlbHMsXG4gIHN0dWRlbnRQcm9ncmVzczogcGFpcmVkUHJvZ3Jlc3MsXG59O1xuXG5leHBvcnQgY29uc3QgRmlyc3RMZXZlbFVucGx1Z2dlZCA9IFRlbXBsYXRlLmJpbmQoe30pO1xuRmlyc3RMZXZlbFVucGx1Z2dlZC5hcmdzID0ge1xuICBsZXZlbHM6IFt1bnBsdWdnZWRMZXZlbCwgLi4ubGV2ZWxzXSxcbiAgc3R1ZGVudFByb2dyZXNzOiBzdHVkZW50UHJvZ3Jlc3MsXG59O1xuXG5leHBvcnQgY29uc3QgT25seUxldmVsVW5wbHVnZ2VkID0gVGVtcGxhdGUuYmluZCh7fSk7XG5Pbmx5TGV2ZWxVbnBsdWdnZWQuYXJncyA9IHtcbiAgbGV2ZWxzOiBbdW5wbHVnZ2VkTGV2ZWxdLFxuICBzdHVkZW50UHJvZ3Jlc3M6IHN0dWRlbnRQcm9ncmVzcyxcbn07XG4iXSwibmFtZXMiOlsiX2xvZGFzaCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3Byb3BUeXBlcyIsIl9yZWFjdCIsIl9leGNsdWRlZCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJleGNsdWRlZCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwic291cmNlS2V5cyIsImtleXMiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic291cmNlU3ltYm9sS2V5cyIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiRm9udEF3ZXNvbWUiLCJfcmVmIiwiaWNvbiIsImNsYXNzTmFtZSIsInRpdGxlIiwicHJvcHMiLCJuZXdQcm9wcyIsIl8iLCJjb25jYXQiLCJjcmVhdGVFbGVtZW50IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJfY29sb3IiLCJfdXRpbHMiLCJfRm9udEF3ZXNvbWUiLCJfQnViYmxlRmFjdG9yeSIsIl90eXBlb2YiLCJvIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsIm93bktleXMiLCJlIiwiciIsInQiLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsIl9vYmplY3RTcHJlYWQiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiX3RvUHJvcGVydHlLZXkiLCJfdG9QcmltaXRpdmUiLCJ0b1ByaW1pdGl2ZSIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiQmFkZ2VUeXBlIiwibWFrZUVudW0iLCJCdWJibGVCYWRnZSIsImJhZGdlVHlwZSIsImJ1YmJsZVNpemUiLCJidWJibGVTaGFwZSIsIkJ1YmJsZVNpemUiLCJmdWxsIiwibGV0dGVyIiwiaW5jbHVkZXMiLCJhc3Nlc3NtZW50IiwiQXNzZXNzbWVudEJ1YmJsZUJhZGdlIiwia2VlcFdvcmtpbmciLCJLZWVwV29ya2luZ0J1YmJsZUJhZGdlIiwiYnViYmxlUG9zaXRpb25pbmciLCJCdWJibGVTaGFwZSIsImRpYW1vbmQiLCJzdHlsZXMiLCJkaWFtb25kQnViYmxlUG9zaXRpb24iLCJidWJibGVQb3NpdGlvbiIsInN0eWxlIiwiQXNzZXNzbWVudEJhZGdlIiwiaXNTbWFsbCIsImtlZXBXb3JraW5nU21hbGxCYWRnZVBvc2l0aW9uIiwia2VlcFdvcmtpbmdCYWRnZVBvc2l0aW9uIiwiS2VlcFdvcmtpbmdCYWRnZSIsIl9yZWYyIiwiYmFkZ2VTaXplIiwia2VlcFdvcmtpbmdCYWRnZVNtYWxsU2l6ZSIsImtlZXBXb3JraW5nQmFkZ2VGdWxsU2l6ZSIsImtlZXBXb3JraW5nQmFkZ2UiLCJjb250YWluZXIiLCJwdXJwbGUiLCJ3aGl0ZSIsIm9uZU9mIiwidmFsdWVzIiwiYm9vbCIsIm9iamVjdCIsImhhc1doaXRlQm9yZGVyIiwiZm9udFNpemUiLCJwb3NpdGlvbiIsInRvcCIsInJpZ2h0IiwiY29sb3IiLCJib3JkZXJSYWRpdXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJyZWQiLCJ3aWR0aCIsImhlaWdodCIsImdldEJ1YmJsZUNsYXNzTmFtZXMiLCJpc0VuYWJsZWQiLCJjbGFzc05hbWVzIiwiZW5hYmxlZCIsImdldEJ1YmJsZUNvbnRlbnQiLCJpc0xvY2tlZCIsImlzVW5wbHVnZ2VkIiwiaXNCb251cyIsImlzUGFpcmVkIiwiZG90IiwiaTE4biIsInVucGx1Z2dlZEFjdGl2aXR5IiwiZ2V0QnViYmxlU2hhcGUiLCJpc0NvbmNlcHQiLCJwaWxsIiwiY2lyY2xlIiwiZ2V0QnViYmxlVXJsIiwibGV2ZWxVcmwiLCJzdHVkZW50SWQiLCJzZWN0aW9uSWQiLCJwcmVzZXJ2ZVF1ZXJ5UGFyYW1zIiwidW5kZWZpbmVkIiwicGFyYW1zIiwicXVlcnlTdHJpbmciLCJwYXJzZSIsImN1cnJlbnRMb2NhdGlvbiIsInNlYXJjaCIsInZlcnNpb24iLCJzZWN0aW9uX2lkIiwidXNlcl9pZCIsInN0cmluZ2lmeSIsIl9jbGFzc25hbWVzIiwiX3F1ZXJ5U3RyaW5nIiwiX2xvY2FsZSIsIl9wcm9ncmVzc0hlbHBlcnMiLCJfcHJvZ3Jlc3NTdHlsZXMiLCJfcHJvZ3Jlc3NUeXBlcyIsIl9Ub29sdGlwV2l0aEljb24iLCJCYXNpY0J1YmJsZSIsInNoYXBlIiwic2l6ZSIsInByb2dyZXNzU3R5bGUiLCJjaGlsZHJlbiIsImJ1YmJsZVN0eWxlIiwibWFpbkJ1YmJsZVN0eWxlIiwiRGlhbW9uZENvbnRhaW5lciIsImRpYW1vbmRDb250YWluZXJTdHlsZSIsImJ1YmJsZVN0eWxlcyIsImRpYW1vbmRDb250ZW50VHJhbnNmb3JtIiwiQnViYmxlTGluayIsIl9yZWYzIiwidXJsIiwib25DbGljayIsImExMXlfZGVzY3JpcHRpb24iLCJocmVmIiwiZ2V0VG9vbHRpcFRleHRGb3JMZXZlbCIsImxldmVsIiwidG9vbHRpcFRleHQiLCJpc1N1YmxldmVsIiwiZGlzcGxheV9uYW1lIiwibmFtZSIsInByb2dyZXNzaW9uRGlzcGxheU5hbWUiLCJsZXZlbE51bWJlciIsIkJhc2ljVG9vbHRpcCIsIl9yZWY0IiwidGV4dCIsImluY2x1ZGVBc3Nlc3NtZW50SWNvbiIsInRvb2x0aXBJZCIsInVuaXF1ZUlkIiwiQnViYmxlVG9vbHRpcCIsIl9yZWY1IiwiZ2V0SWNvbkZvckxldmVsIiwiaXNMZXZlbEFzc2Vzc21lbnQiLCJub2RlIiwiZnVuYyIsImVsZW1lbnQiLCJsZXZlbFdpdGhQcm9ncmVzc1R5cGUiLCJidWJibGVTaXplcyIsImNpcmNsZU1hcmdpbnMiLCJidWJibGVCb3JkZXJSYWRpaSIsImJ1YmJsZUNvbnRhaW5lcldpZHRocyIsImZvbnRTaXplcyIsIm1haW4iLCJmbGV4IiwiZm9udCIsIm1hcmdpblRvcEJvdHRvbSIsImJveFNpemluZyIsImxldHRlclNwYWNpbmciLCJ3aGl0ZVNwYWNlIiwicGFkZGluZyIsInRyYW5zZm9ybSIsInNoYXBlU2l6ZVN0eWxlIiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJsaW5lSGVpZ2h0IiwibWFyZ2luTGVmdFJpZ2h0IiwiY29udGFpbmVyV2lkdGgiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwidSIsInNldCIsIl9yZWFjdFRvb2x0aXAiLCJXZWFrTWFwIiwiX3NldFByb3RvdHlwZU9mIiwicCIsInNldFByb3RvdHlwZU9mIiwiX0NvbXBvbmVudCIsIlRvb2x0aXBXaXRoSWNvbiIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwicmVuZGVyIiwiX3RoaXMkcHJvcHMiLCJ0aGlzIiwiaWQiLCJyb2xlIiwid3JhcHBlciIsImVmZmVjdCIsInRvb2x0aXAiLCJ0b29sdGlwQXNzZXNzbWVudEljb24iLCJ0b29sdGlwSWNvbiIsIkNvbXBvbmVudCIsIkRPVF9TSVpFIiwicGFkZGluZ1JpZ2h0IiwicGFkZGluZ0xlZnQiLCJsZXZlbFByb2dyZXNzU3R5bGUiLCJsZXZlbFN0YXR1cyIsImxldmVsS2luZCIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJsaWdodGVyX2dyYXkiLCJib3JkZXJTdHlsZSIsImNoYXJjb2FsIiwibGV2ZWxfbm90X3RyaWVkIiwic3RhdHVzU3R5bGUiLCJMZXZlbEtpbmQiLCJhc3Nlc3NtZW50U3RhdHVzU3R5bGUiLCJsZXZlbFN0YXR1c1N0eWxlIiwiX2ZvbnRDb25zdGFudHMiLCJfc2hhcmVkQ29uc3RhbnRzIiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsIm1hcmdpbiIsIm1hcmdpbkxlZnQiLCJtYXJnaW5SaWdodCIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsImZvbnRDb25zdGFudHMiLCJ0ZXh0RGVjb3JhdGlvbiIsImxldmVsX2N1cnJlbnQiLCJ0cmFuc2l0aW9uIiwiTGV2ZWxTdGF0dXMiLCJhdHRlbXB0ZWQiLCJsZXZlbF9zdWJtaXR0ZWQiLCJzdWJtaXR0ZWQiLCJjb21wbGV0ZWRfYXNzZXNzbWVudCIsInBlcmZlY3QiLCJsZXZlbF9wZXJmZWN0IiwiZnJlZV9wbGF5X2NvbXBsZXRlIiwicGFzc2VkIiwibGV2ZWxfcGFzc2VkIiwicmV2aWV3X3JlamVjdGVkIiwibGV2ZWxfcmV2aWV3X3JlamVjdGVkIiwicmV2aWV3X2FjY2VwdGVkIiwiX2ZpcmVob3NlIiwicHJvZ3Jlc3NTdHlsZXMiLCJfUHJvZ3Jlc3NUYWJsZUxldmVsQnViYmxlIiwiX1JlYWN0JENvbXBvbmVudCIsIlByb2dyZXNzVGFibGVEZXRhaWxDZWxsIiwiX3RoaXMiLCJyZWNvcmRCdWJibGVDbGljayIsIl9wcm90byIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIm5leHRQcm9wcyIsImlzRXF1YWwiLCJsZXZlbElkIiwiZmlyZWhvc2VDbGllbnQiLCJwdXRSZWNvcmQiLCJzdHVkeSIsInN0dWR5X2dyb3VwIiwiZXZlbnQiLCJkYXRhX2pzb24iLCJKU09OIiwic3R1ZGVudF9pZCIsImxldmVsX2lkIiwiaW5jbHVkZVVzZXJJZCIsImJ1aWxkQnViYmxlVXJsIiwicmVuZGVyU3VibGV2ZWxzIiwiX3RoaXMyIiwic3VibGV2ZWxzIiwibWFwIiwic3VibGV2ZWwiLCJzdWJsZXZlbFByb2dyZXNzIiwic3R1ZGVudFByb2dyZXNzIiwic3VibGV2ZWxDb250YWluZXIiLCJzdGF0dXMiLCJib251cyIsImlzQ29uY2VwdExldmVsIiwiYnViYmxlVGV4dCIsInJldmlld1N0YXRlIiwidGVhY2hlckZlZWRiYWNrUmV2aWV3U3RhdGUiLCJyZW5kZXJCdWJibGUiLCJfdGhpczMiLCJsZXZlbFByb2dyZXNzIiwibG9ja2VkIiwia2luZCIsInBhaXJlZCIsIl90aGlzNCIsImxlc3Nvbkhhc0xldmVscyIsImxldmVscyIsImJhY2tncm91bmQiLCJSZWFjdCIsIm51bWJlciIsImFycmF5T2YiLCJsZXZlbFR5cGUiLCJvYmplY3RPZiIsInN0dWRlbnRMZXZlbFByb2dyZXNzVHlwZSIsImZsZXhCZXR3ZWVuIiwibGVmdCIsIl90eXBlcyIsIl9CdWJibGVCYWRnZSIsIl9DYWNoZWRFbGVtZW50IiwiUHJvZ3Jlc3NUYWJsZUxldmVsQnViYmxlIiwiX1JlYWN0JFB1cmVDb21wb25lbnQiLCJjcmVhdGVCdWJibGVFbGVtZW50IiwiZWxlbWVudFR5cGUiLCJjYWNoZUtleSIsImdldENhY2hlS2V5Iiwic2hvdWxkU2hvd0tlZXBXb3JraW5nQmFkZ2UiLCJSZXZpZXdTdGF0ZXMiLCJhd2FpdGluZ1JldmlldyIsImNvbnRlbnQiLCJyZW5kZXJCYXNpY0J1YmJsZSIsInNob3dLZWVwV29ya2luZ0JhZGdlIiwiX3RoaXMkcHJvcHMyIiwic3RhdHVzU3RyaW5nIiwiYmFkZ2UiLCJzaGFwZVN0cmluZyIsInN0cmluZ3MiLCJqb2luIiwiUHVyZUNvbXBvbmVudCIsIl9zZXJ2ZXIiLCJDYWNoZWRFbGVtZW50IiwiaHRtbENhY2hlIiwiZWxlbWVudHNIdG1sQ2FjaGUiLCJlbGVtZW50SHRtbCIsImNyZWF0ZUh0bWwiLCJSZWFjdERPTVNlcnZlciIsInJlbmRlclRvU3RhdGljTWFya3VwIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJjbGVhckVsZW1lbnRzQ2FjaGUiLCJoYXNPd24iLCJjbGFzc2VzIiwiYXJnIiwiYXJnVHlwZSIsIkFycmF5IiwiaXNBcnJheSIsImlubmVyIiwidG9TdHJpbmciLCJkZWZhdWx0IiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsIml0ZW0iLCJuZWVkTGF5ZXIiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNyZWF0ZVRodW5rTWlkZGxld2FyZSIsImV4dHJhQXJndW1lbnQiLCJkaXNwYXRjaCIsImdldFN0YXRlIiwibmV4dCIsImFjdGlvbiIsInRodW5rIiwid2l0aEV4dHJhQXJndW1lbnQiLCJvcHRpb25zIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJzZXRBdHRyaWJ1dGVzIiwiaW5zZXJ0IiwiZG9tQVBJIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwibG9jYWxzIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydEJ5U2VsZWN0b3IiLCJnZXRUYXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJhdHRyaWJ1dGVzIiwic2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9wcm9ncmVzc1Rlc3RIZWxwZXJzIiwiX1Byb2dyZXNzVGFibGVEZXRhaWxDZWxsIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJsZW4iLCJhcnIyIiwic3RhdHVzRm9yTGV2ZWwiLCJub3RfdHJpZWQiLCJmYWtlTGV2ZWxzIiwiZGlhbW9uZExldmVscyIsInVucGx1Z2dlZExldmVsIiwiZmFrZUxldmVsIiwiZmFrZVByb2dyZXNzRm9yTGV2ZWxzIiwicGFpcmVkUHJvZ3Jlc3MiLCJzdWIiLCJmcm9tQ2hhckNvZGUiLCJjaGFyQ29kZUF0IiwibGV2ZWxXaXRoU3VibGV2ZWxzIiwiY29tcG9uZW50IiwiREVGQVVMVF9QUk9QUyIsIlRlbXBsYXRlIiwiYXJncyIsIl90b0NvbnN1bWFibGVBcnJheSIsIl9hcnJheVdpdGhvdXRIb2xlcyIsIl9pdGVyYWJsZVRvQXJyYXkiLCJpdGVyIiwiZnJvbSIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIm1pbkxlbiIsInNsaWNlIiwidGVzdCIsIl9ub25JdGVyYWJsZVNwcmVhZCJdLCJzb3VyY2VSb290IjoiIn0=