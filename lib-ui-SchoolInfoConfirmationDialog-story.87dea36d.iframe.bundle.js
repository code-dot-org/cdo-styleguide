"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[751],{"./src/lib/ui/SchoolInfoConfirmationDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.styles=exports.default=void 0;var _react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_Dialog=_interopRequireWildcard(__webpack_require__("./src/templates/Dialog.jsx")),_Button=_interopRequireDefault(__webpack_require__("./src/templates/Button.jsx")),_SchoolInfoInterstitial=_interopRequireDefault(__webpack_require__("./src/lib/ui/SchoolInfoInterstitial.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_redux=__webpack_require__("./src/redux.js"),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_AnalyticsReporter=_interopRequireDefault(__webpack_require__("./src/lib/util/AnalyticsReporter.js")),_AnalyticsConstants=__webpack_require__("./src/lib/util/AnalyticsConstants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var styles=exports.styles={button:{marginTop:20,marginLeft:"50%"},buttonRTL:{marginTop:20,marginRight:"50%"},updateButton:{marginTop:20,marginLeft:5},updateButtonRTL:{marginTop:20,marginRight:5},intro:_objectSpread(_objectSpread({fontSize:18},_fontConstants.default["main-font-semi-bold"]),{},{color:_color.default.charcoal,paddingRight:20}),schoolName:{color:_color.default.purple,fontStyle:"italic"},body:{margin:10}},SchoolInfoConfirmationDialog=function(_Component){function SchoolInfoConfirmationDialog(props){var _this;return _defineProperty(_this=_Component.call(this,props)||this,"closeModal",(function(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.UPDATE_SCHOOL_INFO_DIALOG_CLOSED,{},_AnalyticsConstants.PLATFORMS.BOTH),_this.setState({isOpen:!1}),_this.props.onClose()})),_defineProperty(_this,"handleClickYes",(function(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.CONFIRM_SCHOOL_CLICKED,{},_AnalyticsConstants.PLATFORMS.BOTH);var _this$props$scriptDat=_this.props.scriptData,authTokenName=_this$props$scriptDat.authTokenName,authTokenValue=_this$props$scriptDat.authTokenValue,formData=new FormData;formData.append(authTokenName,authTokenValue),fetch("/api/v1/user_school_infos/".concat(_this.props.scriptData.existingSchoolInfo.user_school_info_id,"/update_last_confirmation_date"),{method:"PATCH",body:formData}).then(_this.closeModal).catch((function(error){_this.setState({error})}))})),_defineProperty(_this,"handleClickUpdate",(function(){_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.UPDATE_SCHOOL_CLICKED,{},_AnalyticsConstants.PLATFORMS.BOTH),_this.setState({showSchoolInterstitial:!0})})),_defineProperty(_this,"renderInitialContent",(function(){var _getStore$getState;_AnalyticsReporter.default.sendEvent(_AnalyticsConstants.EVENTS.UPDATE_SCHOOL_INFO_DIALOG_SHOWN,{},_AnalyticsConstants.PLATFORMS.BOTH);var schoolName=_this.state.schoolName,isRTL=null===(_getStore$getState=(0,_redux.getStore)().getState())||void 0===_getStore$getState?void 0:_getStore$getState.isRtl;return _react.default.createElement(_Dialog.Body,null,_react.default.createElement("div",{style:styles.body},_react.default.createElement("p",{style:styles.intro},_locale.default.schoolInfoDialogDescription(),_react.default.createElement("span",{style:styles.schoolName},_locale.default.schoolInfoDialogDescriptionSchoolName({schoolName})))),_react.default.createElement(_Button.default,{style:isRTL?styles.updateButtonRTL:styles.updateButton,text:_locale.default.schoolInfoDialogUpdate(),color:_Button.default.ButtonColor.blue,onClick:_this.handleClickUpdate,id:"update-button"}),_react.default.createElement(_Button.default,{style:isRTL?styles.buttonRTL:styles.button,text:_locale.default.yes(),color:_Button.default.ButtonColor.brandSecondaryDefault,onClick:_this.handleClickYes,id:"yes-button"}))})),_this.state={showSchoolInterstitial:!1,schoolName:props.scriptData.existingSchoolInfo.school_name,isOpen:props.isOpen||!0},_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(SchoolInfoConfirmationDialog,_Component);var _proto=SchoolInfoConfirmationDialog.prototype;return _proto.renderSchoolInformationForm=function renderSchoolInformationForm(){return _react.default.createElement(_Dialog.Body,null,_react.default.createElement(_SchoolInfoInterstitial.default,{scriptData:this.props.scriptData,onClose:this.closeModal}))},_proto.render=function render(){var _this$state=this.state,showSchoolInterstitial=_this$state.showSchoolInterstitial,isOpen=_this$state.isOpen;return _react.default.createElement(_Dialog.default,{isOpen,handleClose:this.closeModal},showSchoolInterstitial?this.renderSchoolInformationForm():this.renderInitialContent())},SchoolInfoConfirmationDialog}(_react.Component);_defineProperty(SchoolInfoConfirmationDialog,"propTypes",{schoolName:_propTypes.default.string,scriptData:_propTypes.default.shape({formUrl:_propTypes.default.string.isRequired,authTokenName:_propTypes.default.string.isRequired,authTokenValue:_propTypes.default.string.isRequired,existingSchoolInfo:_propTypes.default.shape({id:_propTypes.default.number,user_school_info_id:_propTypes.default.number,school_id:_propTypes.default.string,country:_propTypes.default.string,school_type:_propTypes.default.string,school_name:_propTypes.default.string,full_address:_propTypes.default.string}).isRequired}).isRequired,onClose:_propTypes.default.func,isOpen:_propTypes.default.bool});exports.default=SchoolInfoConfirmationDialog},"./src/propTypes.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.childrenOfType=function childrenOfType(){for(var _len=arguments.length,validChildrenTypes=new Array(_len),_key=0;_key<_len;_key++)validChildrenTypes[_key]=arguments[_key];return function(props,propName,componentName){if("children"!==propName)return new Error("The childrenOfType prop type should only be used on the children prop.");var prop=props[propName];if(prop){var actualChildrenTypes=_react.default.Children.map(prop,(function(el){return el&&el.type}))||[];return(0,_utils.isSubsequence)(validChildrenTypes,actualChildrenTypes)?void 0:new Error(componentName+" was given children of types "+actualChildrenTypes.map((function(t){return"<".concat(t.name,">")})).join(", ")+" but only accepts one of each child in the following order: "+validChildrenTypes.map((function(t){return"<".concat(t.name,">")})).join(", ")+".")}}},exports.whenNoChildOfTypes=function whenNoChildOfTypes(){for(var _len2=arguments.length,unexpectedChildTypes=new Array(_len2),_key2=0;_key2<_len2;_key2++)unexpectedChildTypes[_key2]=arguments[_key2];return function(props,propName,componentName){if(props.children&&props[propName]){var error,_step,_iterator=function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(_react.default.Children.map(props.children,(function(el){return el.type})));try{for(_iterator.s();!(_step=_iterator.n()).done;){var childType=_step.value;if(unexpectedChildTypes.includes(childType)){error=new Error("".concat(componentName," was given a ").concat(propName," prop and a ")+"<".concat(childType.name,"> child, but only one of those is allowed."));break}}}catch(err){_iterator.e(err)}finally{_iterator.f()}return error}}};var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_utils=__webpack_require__("./src/utils.js");function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}},"./src/redux.js":(module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStore=function getStore(){reduxStore||(reduxStore=createStoreWithReducers(),_experiments.default.isEnabled("reduxGlobalStore")&&(window.reduxStore=reduxStore));return reduxStore},exports.hasReducer=function hasReducer(key){return!!globalReducers[key]},exports.registerReducers=function registerReducers(reducers){for(var key in reducers){var existingReducer=globalReducers[key];if(existingReducer&&existingReducer!==reducers[key])throw new Error('reducer with key "'.concat(key,'" already registered!'))}Object.assign(globalReducers,reducers),reduxStore&&reduxStore.replaceReducer(redux.combineReducers(globalReducers))};_interopRequireDefault(__webpack_require__("./node_modules/immutable/dist/immutable.js"));var reduxStore,_experiments=_interopRequireDefault(__webpack_require__("./src/util/experiments.js")),redux=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/redux/es/redux.js")),_reduxThunk=_interopRequireDefault(__webpack_require__("./node_modules/redux-thunk/lib/index.js")),_toolkit=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var globalReducers={};function createStoreWithReducers(){return function createStore(reducer,initialState){_experiments.default.isEnabled(_experiments.default.REDUX_LOGGING);0;return(0,_toolkit.configureStore)({reducer,preloadedState:initialState,middleware:[_reduxThunk.default],devTools:!1})}(Object.keys(globalReducers).length>0?globalReducers:function(s){return s})}module.exports.createStoreWithReducers=createStoreWithReducers},"./src/templates/Dialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.Body=Body,exports.Buttons=Buttons,exports.Cancel=Cancel,exports.Confirm=Confirm,exports.Footer=Footer,exports.Icon=void 0,exports.Title=Title,exports.styles=exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_LegacyButton=_interopRequireDefault(__webpack_require__("./src/templates/LegacyButton.jsx")),_BaseDialog=_interopRequireDefault(__webpack_require__("./src/templates/BaseDialog.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_propTypes2=__webpack_require__("./src/propTypes.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_excluded=["type"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var styles=exports.styles={icon:{backgroundSize:100,backgroundPosition:"bottom",backgroundRepeat:"no-repeat",marginTop:-165,width:120,height:200,float:"left"},title:{fontSize:27,lineHeight:"30px",marginBottom:15,color:_color.default.purple},body:{fontSize:24,lineHeight:"27px",color:_color.default.purple,whiteSpace:"normal"},buttons:{marginTop:10},rightButton:{float:"right"},buttonClear:{clear:"both"},footer:{borderColor:_color.default.light_gray,borderStyle:"solid",borderWidth:0,borderTopWidth:2,marginTop:15,paddingTop:15}};function Title(_ref){var children=_ref.children;return _react.default.createElement("h1",{style:styles.title},children)}function Body(_ref2){var children=_ref2.children;return _react.default.createElement("div",{style:styles.body},children)}function Confirm(props){var type=props.type,other=_objectWithoutProperties(props,_excluded);return type=type||"primary",_react.default.createElement(_LegacyButton.default,_extends({type},other),props.children||_locale.default.dialogOK())}function Cancel(props){return _react.default.createElement(_LegacyButton.default,_extends({type:"cancel"},props),props.children||_locale.default.dialogCancel())}function Buttons(_ref3){var children=_ref3.children,leftChildren=(children=_react.default.Children.toArray(children)).slice(0,children.length-1),rightChild=children[children.length-1];return _react.default.createElement("div",{style:styles.buttons},leftChildren,_react.default.createElement("div",{style:styles.rightButton},rightChild),_react.default.createElement("div",{style:styles.buttonClear}))}function Footer(_ref4){var children=_ref4.children;return _react.default.createElement("div",{style:styles.footer},children)}Title.propTypes={children:_propTypes.default.node},Body.propTypes={children:_propTypes.default.node},Confirm.propTypes={children:_propTypes.default.node,type:_propTypes.default.string},Cancel.propTypes={children:_propTypes.default.node},Buttons.propTypes={children:(0,_propTypes2.childrenOfType)(Cancel,Confirm)},Footer.propTypes={children:_propTypes.default.node};var Icon=exports.Icon=(0,_radium.default)((function Icon(_ref5){var src=_ref5.src;return _react.default.createElement("span",{style:[styles.icon,{backgroundImage:"url(".concat(src,")")}]})}));Icon.propTypes={src:_propTypes.default.string.isRequired};var Dialog=exports.default=function(_React$Component){function Dialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleKeyDown",(function(event){if("Tab"===event.key){var elements=_this.baseDialog.getTabbableElements();if(elements.length){var curIndex=elements.findIndex((function(btn){return btn===document.activeElement}));elements[(curIndex+1)%elements.length].focus()}event.preventDefault()}})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(Dialog,_React$Component),Dialog.prototype.render=function render(){var _this2=this,children=[];if(this.props.icon&&children.push(_react.default.createElement(Icon,{key:"icon",src:this.props.icon})),this.props.title&&children.push(_react.default.createElement(Title,{key:"title"},this.props.title)),this.props.body&&children.push(_react.default.createElement(Body,{key:"body"},this.props.body)),children=children.concat(this.props.children),this.props.cancelText||this.props.onCancel||this.props.confirmText||this.props.onConfirm||this.props.confirmType){var buttons=_react.default.createElement(Buttons,{key:"buttons"},this.props.onCancel&&_react.default.createElement(Cancel,{onClick:this.props.onCancel},this.props.cancelText),this.props.onConfirm&&_react.default.createElement(Confirm,{onClick:this.props.onConfirm,type:this.props.confirmType},this.props.confirmText)),lastChild=children[children.length-1];lastChild&&lastChild.type===Footer?children.splice(children.length-1,0,buttons):children.push(buttons)}return this.props.footer&&children.push(_react.default.createElement(Footer,{key:"footer"},this.props.footer)),_react.default.createElement(_BaseDialog.default,_extends({},this.props,{ref:function ref(baseDialog){return _this2.baseDialog=baseDialog},handleKeyDown:this.handleKeyDown}),children)},Dialog}(_react.default.Component);_defineProperty(Dialog,"propTypes",_objectSpread(_objectSpread({},_BaseDialog.default.propTypes),{},{children:(0,_propTypes2.childrenOfType)(Icon,Title,Body,Buttons,Footer),icon:(0,_propTypes2.whenNoChildOfTypes)(Icon),title:(0,_propTypes2.whenNoChildOfTypes)(Title),body:(0,_propTypes2.whenNoChildOfTypes)(Body),footer:(0,_propTypes2.whenNoChildOfTypes)(Footer),cancelText:(0,_propTypes2.whenNoChildOfTypes)(Buttons),onCancel:(0,_propTypes2.whenNoChildOfTypes)(Buttons),confirmText:(0,_propTypes2.whenNoChildOfTypes)(Buttons),onConfirm:(0,_propTypes2.whenNoChildOfTypes)(Buttons),confirmType:(0,_propTypes2.whenNoChildOfTypes)(Buttons)}))},"./src/templates/LegacyButton.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.style=exports.default=exports.BUTTON_TYPES=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_excluded=["type","children","size"],_excluded2=["arrow"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var style=exports.style={base:{borderWidth:1,borderStyle:"solid",minWidth:100,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,":hover":{boxShadow:"2px 2px 5px rgba(0, 0, 0, 0.3)"}},large:{fontSize:35,lineHeight:"normal",paddingLeft:14,paddingRight:14},arrow:{base:{position:"relative",height:116,textAlign:"left",display:"inline-block"},left:{paddingLeft:58},right:{paddingRight:58}},arrowHead:{base:{position:"absolute",width:0,height:0,borderColor:"transparent",borderWidth:58,borderStyle:"solid"},left:function left(color){return{left:-48,borderRightColor:color}},right:function right(color){return{right:-48,borderLeftColor:color}}}};style.withArrow={base:{position:"relative",top:(116-style.base.borderWidth-20-44)/2,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,":hover":{boxShadow:"none"}},left:{paddingLeft:0},right:{paddingRight:0}};var BUTTON_TYPES=exports.BUTTON_TYPES={default:{style:{backgroundColor:_color.default.white,borderColor:_color.default.charcoal,color:_color.default.charcoal}},cancel:{style:{backgroundColor:_color.default.neutral_white,borderWidth:2,borderStyle:"solid",borderColor:_color.default.neutral_dark,color:_color.default.neutral_dark,":hover":{backgroundColor:_color.default.neutral_dark20,boxShadow:"none"},":focus":{backgroundColor:_color.default.neutral_dark20,boxShadow:"none"}}},primary:{style:{backgroundColor:_color.default.brand_secondary_default,borderColor:_color.default.brand_secondary_default,color:_color.default.neutral_white,":hover":{backgroundColor:_color.default.brand_secondary_dark,borderColor:_color.default.brand_secondary_dark,boxShadow:"none"}}},legacyPrimary:{style:{backgroundColor:_color.default.orange,borderColor:_color.default.orange,color:_color.default.neutral_white}},danger:{style:{backgroundColor:_color.default.product_negative_default,borderColor:_color.default.product_negative_default,color:_color.default.neutral_white,":hover":{backgroundColor:_color.default.product_negative_dark,borderColor:_color.default.product_negative_dark,boxShadow:"none"}}},action:{style:{backgroundColor:_color.default.purple,borderColor:_color.default.purple,color:_color.default.white}}},BaseButton=(0,_radium.default)((function BaseButton(_ref){var type=_ref.type,children=_ref.children,size=_ref.size,props=_objectWithoutProperties(_ref,_excluded),sizeStyle=style[size||"normal"],config=BUTTON_TYPES[type],styleArray=[style.base,config.style,sizeStyle];return _react.default.createElement("button",_extends({type:"button"},props,{style:[styleArray,props.style]}),children)}));BaseButton.propTypes={type:_propTypes.default.oneOf(Object.keys(BUTTON_TYPES)),children:_propTypes.default.node,size:_propTypes.default.oneOf(["normal","large"])};var ArrowButton=(0,_radium.default)((function ArrowButton(_ref2){var arrow=_ref2.arrow,props=_objectWithoutProperties(_ref2,_excluded2),config=BUTTON_TYPES[props.type];return _react.default.createElement("div",{style:[style.arrow.base,style.arrow[arrow],props.style]},_react.default.createElement("div",{style:[style.arrowHead.base,style.arrowHead[arrow](config.style.backgroundColor)]}),_react.default.createElement(BaseButton,_extends({},props,{style:[style.withArrow.base,style.withArrow[arrow]]})))}));ArrowButton.propTypes=Object.assign({},BaseButton.propTypes,{arrow:_propTypes.default.oneOf(["left","right"]).isRequired});var LegacyButton=(0,_radium.default)((function Button(props){return props.arrow?_react.default.createElement(ArrowButton,props):_react.default.createElement(BaseButton,props)}));LegacyButton.propTypes=Object.assign({},BaseButton.propTypes,{arrow:_propTypes.default.oneOf(["left","right"])});exports.default=LegacyButton},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk},"./src/lib/ui/SchoolInfoConfirmationDialog.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.DisplaySchoolInfoConfirmationDialog=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_SchoolInfoConfirmationDialog=_interopRequireDefault(__webpack_require__("./src/lib/ui/SchoolInfoConfirmationDialog.jsx")),_addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_SchoolInfoConfirmationDialog.default};(exports.DisplaySchoolInfoConfirmationDialog=function Template(args){return _react.default.createElement(_SchoolInfoConfirmationDialog.default,args)}.bind({})).args={scriptData:{formUrl:"",authTokenName:"auth_token",authTokenValue:"fake_auth_token",existingSchoolInfo:{}},onClose:(0,_addonActions.action)("onClose callback"),isOpen:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,