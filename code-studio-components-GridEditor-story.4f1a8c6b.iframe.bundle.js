(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1834],{"./src/bounce/tiles.js":(__unused_webpack_module,exports)=>{exports.Direction={NORTH:0,EAST:1,SOUTH:2,WEST:3},exports.PADDLE_BALL_COLLIDE_DISTANCE=.7,exports.FINISH_COLLIDE_DISTANCE=.5,exports.DEFAULT_BALL_SPEED=.1,exports.DEFAULT_BALL_DIRECTION=1.25*Math.PI,exports.DEFAULT_PADDLE_SPEED=.1,exports.DEFAULT_BALL_START_Y=2,exports.Y_TOP_BOUNDARY=-.2,exports.SquareType={OPEN:0,WALL:1,GOAL:2,BALLSTART:4,PADDLEFINISH:8,PADDLESTART:16,BALLFINISH:32,OBSTACLE:64}},"./src/code-studio/components/BeeCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var BeeCell=_maze.cells.BeeCell;exports.default=function(_CellEditor){function BeeCellEditor(){return _CellEditor.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BeeCellEditor,_CellEditor);var _proto=BeeCellEditor.prototype;return _proto.getSelectFieldNames=function getSelectFieldNames(){return _CellEditor.prototype.getSelectFieldNames.call(this).concat(["featureType","cloudType","flowerColor"])},_proto.getSanitizedValues=function getSanitizedValues(){var values=_CellEditor.prototype.getSanitizedValues.call(this);return this.props.cell.isVariableCloud()&&(values.featureType=BeeCell.FeatureType.VARIABLE),"undefined"===values.featureType&&(values.value="",values.range=""),this.props.cell.isFlower()||(values.flowerColor=""),values},_proto.renderFields=function renderFields(values){return _react.default.createElement("div",null,_CellEditor.prototype.renderFields.call(this,values),_react.default.createElement("label",{htmlFor:"featureType"},"Feature Type:"),_react.default.createElement("select",{name:"featureType",value:values.featureType,disabled:this.props.cell.isVariableCloud(),onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"none"),_react.default.createElement("option",{value:BeeCell.FeatureType.HIVE},"hive"),_react.default.createElement("option",{value:BeeCell.FeatureType.FLOWER},"flower"),_react.default.createElement("option",{value:BeeCell.FeatureType.VARIABLE},"variable")),_react.default.createElement("label",{htmlFor:"cloudType"},"Cloud Type:"),_react.default.createElement("select",{name:"cloudType",value:values.cloudType,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"none"),_react.default.createElement("option",{value:BeeCell.CloudType.STATIC},"classic"),_react.default.createElement("option",{value:BeeCell.CloudType.HIVE_OR_FLOWER},"hive or flower"),_react.default.createElement("option",{value:BeeCell.CloudType.FLOWER_OR_NOTHING},"flower or nothing"),_react.default.createElement("option",{value:BeeCell.CloudType.HIVE_OR_NOTHING},"hive or nothing"),_react.default.createElement("option",{value:BeeCell.CloudType.ANY},"any")),_react.default.createElement("label",{htmlFor:"flowerColor"},"Flower Color:"),_react.default.createElement("select",{name:"flowerColor",value:values.flowerColor,disabled:!this.props.cell.isFlower(),onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),_react.default.createElement("option",{value:BeeCell.FlowerColor.RED},"red"),_react.default.createElement("option",{value:BeeCell.FlowerColor.PURPLE},"purple")))},BeeCellEditor}(_CellEditor2.default);module.exports=exports.default},"./src/code-studio/components/BounceCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_tiles=__webpack_require__("./src/bounce/tiles.js"),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}exports.default=function(_CellEditor){function BounceCellEditor(){return _CellEditor.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(BounceCellEditor,_CellEditor),BounceCellEditor.prototype.renderFields=function renderFields(values){return _react.default.createElement("div",null,_CellEditor.prototype.renderTileTypes.call(this,values,_tiles.SquareType))},BounceCellEditor}(_CellEditor2.default);module.exports=exports.default},"./src/code-studio/components/CellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var SquareType=_maze.tiles.SquareType;!function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(exports.default=function(_React$Component){function CellEditor(props){var _this;return(_this=_React$Component.call(this,props)||this).handleChange=_this.handleChange.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(CellEditor,_React$Component);var _proto=CellEditor.prototype;return _proto.handleChange=function handleChange(){var formData=new FormData(this.form),values=Array.from(formData).reduce((function(serialized,_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],value=_ref2[1];return value="undefined"===value?void 0:isNaN(value)?"":Number(value),name in serialized?Array.isArray(serialized[name])?serialized[name].push(value):serialized[name]=[serialized[name],value]:serialized[name]=value,serialized}),{});this.props.onUpdate(values)},_proto.getSelectFieldNames=function getSelectFieldNames(){return["tileType"]},_proto.getSanitizedValues=function getSanitizedValues(){var values=this.props.cell.serialize();return this.getSelectFieldNames().forEach((function(value){void 0===values[value]&&(values[value]="undefined")})),values},_proto.renderTileTypes=function renderTileTypes(values){var squareTypes=arguments.length>1&&void 0!==arguments[1]?arguments[1]:SquareType;return _react.default.createElement("div",null,_react.default.createElement("label",{htmlFor:"tileType"},"Tile Type (required):"),_react.default.createElement("select",{name:"tileType",value:values.tileType,onChange:this.handleChange},Object.keys(squareTypes).map((function(key){return _react.default.createElement("option",{key,value:squareTypes[key]},key.toLowerCase())}))))},_proto.renderFields=function renderFields(values){return _react.default.createElement("div",null,this.renderTileTypes(values),_react.default.createElement("label",{htmlFor:"value"},"Value:"),_react.default.createElement("input",{type:"number",name:"value",value:values.value,onChange:this.handleChange}),_react.default.createElement("label",{htmlFor:"range"},"Range (defaults to value):"),_react.default.createElement("input",{type:"number",name:"range",value:values.range,disabled:"undefined"===values.featureType,onChange:this.handleChange}))},_proto.render=function render(){var _this2=this;return _react.default.createElement("form",{className:"span4 offset1",ref:function ref(form){_this2.form=form}},_react.default.createElement("header",null,_react.default.createElement("strong",null,"Editing Cell (",this.props.row,", ",this.props.col,")")),this.renderFields(this.getSanitizedValues()))},CellEditor}(_react.default.Component),"propTypes",{cell:_propTypes.default.object.isRequired,row:_propTypes.default.number.isRequired,col:_propTypes.default.number.isRequired,onUpdate:_propTypes.default.func.isRequired}),module.exports=exports.default},"./src/code-studio/components/Grid.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/studio/constants.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var studioTiles=_defineProperty(_defineProperty(_defineProperty({},_constants.SquareType.OPEN,"none"),_constants.SquareType.SPRITEFINISH,"goal"),_constants.SquareType.SPRITESTART,"sprite"),studioAvatarList=["dog","cat","penguin","dinosaur","octopus","witch","bat","bird","dragon","squirrel","wizard","alien","ghost","monster","robot","unicorn","zombie","knight","ninja","pirate","caveboy","cavegirl","princess","spacebot","soccergirl","soccerboy","tennisgirl","tennisboy"],karelTiles=["border","path","start","end","obstacle"],beeConditions=["","flower-or-hive","flower-or-nothing","hive-or-nothing","flower-hive-or-nothing"],beeFeatures=["hive","flower"],Cell=function(_React$Component){function Cell(){return _React$Component.apply(this,arguments)||this}return _inheritsLoose(Cell,_React$Component),Cell.prototype.render=function render(){var text,cell=this.props.cell,classNames=[],tdStyle={};if(this.props.selected&&classNames.push("selected"),this.props.highlighted&&classNames.push("highlighted"),"playlab"===this.props.skin)classNames.push("playlab",studioTiles[cell.getTileType()]),cell.getTileType()===_constants.SquareType.SPRITESTART&&void 0!==cell.sprite_&&(tdStyle.backgroundImage="url('/blockly/media/skins/studio/"+studioAvatarList[cell.sprite_]+"_spritesheet_200px.png')");else if("starwarsgrid"===this.props.skin)if(1===cell.tileType_)tdStyle.backgroundImage="url('/blockly/media/skins/hoc2015x/goal.png')";else if(16===cell.tileType_)tdStyle.backgroundImage="url('/blockly/media/skins/hoc2015x/instructions_bb8.png')",tdStyle.backgroundSize="cover";else{text=_constants.WallTypeMask&cell.tileType_?"2x":"";var x=(_constants.WallCoordColMask&cell.tileType_)>>_constants.WallCoordColShift,y=(_constants.WallCoordRowMask&cell.tileType_)>>_constants.WallCoordRowShift;tdStyle.backgroundImage="url('/blockly/media/skins/hoc2015x/tiles_background1.png')",tdStyle.backgroundSize="800% 800%",tdStyle.backgroundPosition="-".concat(48*x,"px -").concat(38*y,"px")}else if("bounce"===this.props.skin){if(cell.tileType_){var image=["tiles_wall","goal","ball","paddle","paddle","ball","obstacle"][Math.log2(cell.tileType_)];tdStyle.backgroundImage="url('/blockly/media/skins/bounce/".concat(image,".png')")}}else{if(classNames.push(karelTiles[cell.tileType_]),_maze.utils.isBeeSkin(this.props.skin))cell.isVariableCloud()?(classNames.push("conditional"),classNames.push(beeConditions[cell.cloudType_])):void 0!==cell.featureType_&&classNames.push(beeFeatures[cell.featureType_]);else if(cell.isDirt()){classNames.push("dirt");var dirtValue=cell.getCurrentValue(),dirtIndex=10+dirtValue+(dirtValue<0?1:0);tdStyle.backgroundPosition=50*-dirtIndex}void 0!==cell.originalValue_&&null!==cell.originalValue_&&(text=cell.originalValue_.toString(),cell.range_&&cell.range_>cell.originalValue_&&(text+=" - "+cell.range_.toString()))}return _react.default.createElement("td",{className:classNames.join(" "),onClick:this.props.onClick.bind(null,this.props.row,this.props.col),onMouseDown:this.props.onMouseDown.bind(null,this.props.row,this.props.col),onMouseOver:this.props.onMouseOver.bind(null,this.props.row,this.props.col),onMouseUp:this.props.onMouseUp.bind(null,this.props.row,this.props.col),style:tdStyle},text)},Cell}(_react.default.Component);_defineProperty(Cell,"propTypes",{cell:_propTypes.default.object.isRequired,row:_propTypes.default.number.isRequired,col:_propTypes.default.number.isRequired,selected:_propTypes.default.bool.isRequired,onClick:_propTypes.default.func.isRequired,onMouseDown:_propTypes.default.func.isRequired,onMouseOver:_propTypes.default.func.isRequired,onMouseUp:_propTypes.default.func.isRequired,skin:_propTypes.default.string.isRequired,highlighted:_propTypes.default.bool});var Grid=exports.default=function(_React$Component2){function Grid(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component2.call.apply(_React$Component2,[this].concat(args))||this,"state",{}),_defineProperty(_this,"beginDrag",(function(row,col){_this.setState({dragging:!0,dragStart:{row,col}})})),_defineProperty(_this,"moveDrag",(function(row,col){_this.state.dragging&&_this.setState({dragCurrent:{row,col}})})),_defineProperty(_this,"endDrag",(function(row,col){var dragStart=_this.state.dragStart;if(_this.setState({dragging:!1,dragStart:null,dragCurrent:null}),dragStart&&(dragStart.row!==row||dragStart.col!==col)){var top=Math.min(dragStart.row,row),left=Math.min(dragStart.col,col),bottom=Math.max(dragStart.row,row),right=Math.max(dragStart.col,col),cells=_this.props.cells.slice(top,bottom+1).map((function(row){return row.slice(left,right+1).map((function(cell){return cell.serialize()}))}));_this.props.setCopiedCells(cells)}})),_this}_inheritsLoose(Grid,_React$Component2);var _proto2=Grid.prototype;return _proto2.isHighlighting=function isHighlighting(row,col){return!(!this.state.dragging||!this.state.dragCurrent)&&(row>=Math.min(this.state.dragStart.row,this.state.dragCurrent.row)&&row<=Math.max(this.state.dragStart.row,this.state.dragCurrent.row)&&col>=Math.min(this.state.dragStart.col,this.state.dragCurrent.col)&&col<=Math.max(this.state.dragStart.col,this.state.dragCurrent.col))},_proto2.render=function render(){var _this2=this,tableRows=this.props.cells.map((function(row,x){var tableDatas=row.map((function(cell,y){var selected=_this2.props.selectedRow===x&&_this2.props.selectedCol===y;return _react.default.createElement(Cell,{key:"cell-"+x+"-"+y,cell,row:x,col:y,selected,highlighted:_this2.isHighlighting(x,y),onClick:_this2.props.onSelectionChange,onMouseDown:_this2.beginDrag,onMouseOver:_this2.moveDrag,onMouseUp:_this2.endDrag,skin:_this2.props.skin})}));return _react.default.createElement("tr",{key:"row-"+x},tableDatas)}));return _react.default.createElement("table",null,_react.default.createElement("tbody",null,tableRows))},Grid}(_react.default.Component);_defineProperty(Grid,"propTypes",{cells:_propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.object)).isRequired,selectedRow:_propTypes.default.number,selectedCol:_propTypes.default.number,skin:_propTypes.default.string.isRequired,onSelectionChange:_propTypes.default.func.isRequired,setCopiedCells:_propTypes.default.func.isRequired}),module.exports=exports.default},"./src/code-studio/components/GridEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js"),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var StudioCell=__webpack_require__("./src/studio/cell.js"),BeeCellEditor=__webpack_require__("./src/code-studio/components/BeeCellEditor.jsx"),BounceCellEditor=__webpack_require__("./src/code-studio/components/BounceCellEditor.jsx"),CellEditor=__webpack_require__("./src/code-studio/components/CellEditor.jsx"),Grid=__webpack_require__("./src/code-studio/components/Grid.jsx"),HarvesterCellEditor=__webpack_require__("./src/code-studio/components/HarvesterCellEditor.jsx"),PlanterCellEditor=__webpack_require__("./src/code-studio/components/PlanterCellEditor.jsx"),StarWarsGridCellEditor=__webpack_require__("./src/code-studio/components/StarWarsGridCellEditor.jsx"),StudioCellEditor=__webpack_require__("./src/code-studio/components/StudioCellEditor.jsx"),CellJSON=function(_React$Component){function CellJSON(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"handleChange",(function(event){_this.props.onChange(JSON.parse(event.target.value))})),_this}_inheritsLoose(CellJSON,_React$Component);var _proto=CellJSON.prototype;return _proto.componentDidUpdate=function componentDidUpdate(){var node=this.refs.serializedInput;node.focus(),node.select()},_proto.render=function render(){return _react.default.createElement("label",null,"Cell JSON (for copy/pasting):",_react.default.createElement("input",{type:"text",value:JSON.stringify(this.props.serialization),ref:"serializedInput",onChange:this.handleChange}))},CellJSON}(_react.default.Component);_defineProperty(CellJSON,"propTypes",{serialization:_propTypes.default.object.isRequired,onChange:_propTypes.default.func.isRequired});var GridEditor=exports.default=function(_React$Component2){function GridEditor(props){var _this2,_cells;_defineProperty(_this2=_React$Component2.call(this,props)||this,"changeSelection",(function(row,col){_this2.setState({selectedRow:row,selectedCol:col})})),_defineProperty(_this2,"handleCellChange",(function(newSerializedCellData){var row=_this2.state.selectedRow,col=_this2.state.selectedCol;_this2.updateCells(row,col,[[newSerializedCellData]])})),_defineProperty(_this2,"pasteCopiedCells",(function(){var copiedCells=_this2.state.copiedCells,row=_this2.state.selectedRow,col=_this2.state.selectedCol;_this2.updateCells(row,col,copiedCells)})),_defineProperty(_this2,"setCopiedCells",(function(cells){_this2.setState({copiedCells:cells})})),_defineProperty(_this2,"computeNumMaps",(function(grid){if("playlab"===_this2.props.skin||"starwarsgrid"===_this2.props.skin)return 1;var numMaps=1;return grid.forEach((function(row){row.forEach((function(cell){var numPossibilitiesForCell=cell.getPossibleGridAssets().length;numMaps*=numPossibilitiesForCell}))})),numMaps}));var cellClass=_this2.getCellClass();return _cells=props.serializedMaze?props.serializedMaze.map((function(row){return row.map(cellClass.deserialize)})):props.maze.map((function(row,x){return row.map((function(mazeCell,y){var initialDirtCell=props.initialDirt[x][y];return cellClass.parseFromOldValues(mazeCell,initialDirtCell)}))})),_this2.state={cells:_cells},_this2}_inheritsLoose(GridEditor,_React$Component2);var _proto2=GridEditor.prototype;return _proto2.getCellClass=function getCellClass(){return"playlab"===this.props.skin||"starwarsgrid"===this.props.skin?StudioCell:_maze.utils.isBeeSkin(this.props.skin)?_maze.cells.BeeCell:_maze.utils.isHarvesterSkin(this.props.skin)?_maze.cells.HarvesterCell:_maze.utils.isPlanterSkin(this.props.skin)?_maze.cells.PlanterCell:_maze.cells.Cell},_proto2.getEditorClass=function getEditorClass(){return"bounce"===this.props.skin?BounceCellEditor:"playlab"===this.props.skin?StudioCellEditor:"starwarsgrid"===this.props.skin?StarWarsGridCellEditor:_maze.utils.isBeeSkin(this.props.skin)?BeeCellEditor:_maze.utils.isHarvesterSkin(this.props.skin)?HarvesterCellEditor:_maze.utils.isPlanterSkin(this.props.skin)?PlanterCellEditor:CellEditor},_proto2.updateCells=function updateCells(row,col,newCells){var _this3=this;if(void 0!==newCells&&void 0!==row&&void 0!==col){var cells=this.state.cells;newCells.forEach((function(newRow,i){newRow.forEach((function(cell,j){cells[row+i]&&cells[row+i][col+j]&&(cells[row+i][col+j]=_this3.getCellClass().deserialize(cell))}))}));var serializedData=cells.map((function(row){return row.map((function(cell){return cell.serialize()}))}));this.props.onUpdate(serializedData),this.setState({cells})}},_proto2.render=function render(){var cellEditor,selectedCellJson,pasteButton,cells=this.state.cells,row=this.state.selectedRow,col=this.state.selectedCol;if(cells[row]&&cells[row][col]){var cell=cells[row][col],EditorClass=this.getEditorClass();cellEditor=_react.default.createElement(EditorClass,{cell,row,col,onUpdate:this.handleCellChange}),selectedCellJson=_react.default.createElement(CellJSON,{serialization:cell.serialize(),onChange:this.handleCellChange}),this.state.copiedCells&&(pasteButton=_react.default.createElement("button",{type:"button",onClick:this.pasteCopiedCells},"Paste Selected "+this.state.copiedCells.length+"x"+this.state.copiedCells[0].length+" Cells"))}var numMaps=this.computeNumMaps(cells);return _react.default.createElement("div",{className:"row"},_react.default.createElement("div",{className:"span5"},_react.default.createElement(Grid,{cells,selectedRow:this.state.selectedRow,selectedCol:this.state.selectedCol,skin:this.props.skin,setCopiedCells:this.setCopiedCells,onSelectionChange:this.changeSelection}),numMaps>1&&_react.default.createElement("p",null,"This configuration will generate ".concat(numMaps," maps.\n            We run student code against each possible map, so if this number is large,\n            performance will suffer.")),selectedCellJson,pasteButton),cellEditor)},GridEditor}(_react.default.Component);_defineProperty(GridEditor,"propTypes",{serializedMaze:_propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.object)),maze:_propTypes.default.arrayOf(_propTypes.default.array),initialDirt:_propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.number)),skin:_propTypes.default.string.isRequired,onUpdate:_propTypes.default.func.isRequired}),window.dashboard=window.dashboard||{},window.dashboard.GridEditor=GridEditor,module.exports=exports.default},"./src/code-studio/components/HarvesterCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var HarvesterCell=_maze.cells.HarvesterCell;exports.default=function(_CellEditor){function PlanterCellEditor(){return _CellEditor.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(PlanterCellEditor,_CellEditor),PlanterCellEditor.prototype.renderFields=function renderFields(values){return _react.default.createElement("div",null,_CellEditor.prototype.renderFields.call(this,values),_react.default.createElement("label",{htmlFor:"possibleFeatures"},"Possible Features:"),Object.keys(HarvesterCell.FeatureType).map((function(type){var value=HarvesterCell.FeatureType[type];return _react.default.createElement("label",{className:"checkbox",key:type},_react.default.createElement("input",{type:"checkbox",name:"possibleFeatures",value,checked:values.possibleFeatures.includes(value),onChange:this.handleChange}),type)}),this),_react.default.createElement("label",{htmlFor:"startsHidden"},"Starts Hidden:"),_react.default.createElement("input",{style:{margin:0},type:"checkbox",name:"startsHidden",checked:values.startsHidden,value:1,onChange:this.handleChange}))},PlanterCellEditor}(_CellEditor2.default);module.exports=exports.default},"./src/code-studio/components/PlanterCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _maze=__webpack_require__("./node_modules/@code-dot-org/maze/dist/main.js"),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var PlanterCell=_maze.cells.PlanterCell,SquareType=_maze.tiles.SquareType;exports.default=function(_CellEditor){function PlanterCellEditor(){return _CellEditor.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(PlanterCellEditor,_CellEditor);var _proto=PlanterCellEditor.prototype;return _proto.getSelectFieldNames=function getSelectFieldNames(){return["tileType","featureType"]},_proto.renderFields=function renderFields(values){return _react.default.createElement("div",null,this.renderTileTypes(values),_react.default.createElement("label",{htmlFor:"featureType"},"Feature Type:"),_react.default.createElement("select",{name:"featureType",value:values.featureType,disabled:this.props.cell.getTile()!==SquareType.OPEN,onChange:this.handleChange},Object.keys(PlanterCell.FeatureType).map((function(type){return _react.default.createElement("option",{key:type,value:PlanterCell.FeatureType[type]},type.toLowerCase())}))))},PlanterCellEditor}(_CellEditor2.default);module.exports=exports.default},"./src/code-studio/components/StarWarsGridCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/studio/constants.js"),_tileGuide=_interopRequireDefault(__webpack_require__("./static/code_studio/tile-guide.png")),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var options={empty:0,start:16,goal:1,crate_1:65536,crate_2:1048576,crate_3:131072,canister:1179648,covered_crates_1a:262144,covered_crates_1b:1310720,covered_crates_2a:2359296,covered_crates_2b:2424832,covered_crates_3a:3407872,covered_crates_3b:3473408},startDirections={"-":_constants.Direction.NONE,East:_constants.Direction.EAST,West:_constants.Direction.WEST,North:_constants.Direction.NORTH,South:_constants.Direction.SOUTH};exports.default=function(_CellEditor){function StarWarsGridCellEditor(){return _CellEditor.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(StarWarsGridCellEditor,_CellEditor);var _proto=StarWarsGridCellEditor.prototype;return _proto.handleChange=function handleChange(){var zoom=this.zoom&&this.zoom.checked,direction=this.direction?+this.direction.value:void 0;this.props.onUpdate({tileType:zoom<<_constants.WallTypeShift|this.type.value,direction})},_proto.render=function render(){var _this=this,type=~_constants.WallTypeMask&this.props.cell.tileType_,zoom=_constants.WallTypeMask&this.props.cell.tileType_;return _react.default.createElement("form",{className:"span4 offset1"},_react.default.createElement("img",{src:_tileGuide.default,alt:""}),_react.default.createElement("header",null,_react.default.createElement("strong",null,"Editing Cell (",this.props.row,", ",this.props.col,")")),_react.default.createElement("label",{htmlFor:"tileType"},"Tile Type (required):"),_react.default.createElement("select",{ref:function ref(c){_this.type=c},name:"tileType",value:type,onChange:this.handleChange},Object.entries(options).map((function(_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],value=_ref2[1];return _react.default.createElement("option",{value,key:value},name)}))),type>65535&&_react.default.createElement("span",null,_react.default.createElement("label",{htmlFor:"zoom"},"Double size:"),_react.default.createElement("input",{ref:function ref(c){_this.zoom=c},name:"zoom",type:"checkbox",checked:zoom,onChange:this.handleChange})),type===_constants.SquareType.SPRITESTART&&_react.default.createElement("span",null,_react.default.createElement("label",{htmlFor:"direction"},"Start direction:"),_react.default.createElement("select",{ref:function ref(c){_this.direction=c},name:"direction",value:this.props.cell.direction_,onChange:this.handleChange},Object.entries(startDirections).map((function(_ref3){var _ref4=_slicedToArray(_ref3,2),name=_ref4[0],value=_ref4[1];return _react.default.createElement("option",{value,key:value},name)})))))},StarWarsGridCellEditor}(_CellEditor2.default);module.exports=exports.default},"./src/code-studio/components/StudioCellEditor.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_constants=__webpack_require__("./src/studio/constants.js"),_CellEditor2=_interopRequireDefault(__webpack_require__("./src/code-studio/components/CellEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var avatarList=["dog","cat","penguin","dinosaur","octopus","witch","bat","bird","dragon","squirrel","wizard","alien","ghost","monster","robot","unicorn","zombie","knight","ninja","pirate","caveboy","cavegirl","princess","spacebot","soccergirl","soccerboy","tennisgirl","tennisboy"],usedSquareTypes={OPEN:_constants.SquareType.OPEN,GOAL:_constants.SquareType.SPRITEFINISH,START:_constants.SquareType.SPRITESTART};exports.default=function(_CellEditor){function StudioCellEditor(){return _CellEditor.apply(this,arguments)||this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(StudioCellEditor,_CellEditor);var _proto=StudioCellEditor.prototype;return _proto.getSelectFieldNames=function getSelectFieldNames(){return _CellEditor.prototype.getSelectFieldNames.call(this).concat(["speed","size","direction","emotion","sprite"])},_proto.renderFields=function renderFields(values){return _react.default.createElement("div",null,_CellEditor.prototype.renderTileTypes.call(this,values,usedSquareTypes),values.tileType===_constants.SquareType.SPRITESTART&&_react.default.createElement("div",null,_react.default.createElement("label",{htmlFor:"sprite"},"Sprite:"),_react.default.createElement("select",{name:"sprite",value:values.sprite,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),avatarList.map((function(sprite,i){return _react.default.createElement("option",{key:sprite,value:i},sprite)}))),_react.default.createElement("label",{htmlFor:"speed"},"Speed: "),_react.default.createElement("select",{name:"speed",value:values.speed,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),Object.keys(_constants.SpriteSpeed).map((function(type){return _react.default.createElement("option",{key:type,value:_constants.SpriteSpeed[type]},type.replace(/_/g," ").toLowerCase())}))),_react.default.createElement("label",{htmlFor:"size"},"Size: "),_react.default.createElement("select",{name:"size",value:values.size,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),Object.keys(_constants.SpriteSize).map((function(type){return _react.default.createElement("option",{key:type,value:_constants.SpriteSize[type]},type.replace(/_/g," ").toLowerCase())}))),_react.default.createElement("label",{htmlFor:"direction"},"Direction: "),_react.default.createElement("select",{name:"direction",value:values.direction,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),Object.keys(_constants.Direction).map((function(type){return _react.default.createElement("option",{key:type,value:_constants.Direction[type]},type.replace(/_/g," ").toLowerCase())}))),_react.default.createElement("label",{htmlFor:"emotion"},"Emotion: "),_react.default.createElement("select",{name:"emotion",value:values.emotion,onChange:this.handleChange},_react.default.createElement("option",{value:"undefined"},"default"),Object.keys(_constants.Emotions).map((function(type){return _react.default.createElement("option",{key:type,value:_constants.Emotions[type]},type.replace(/_/g," ").toLowerCase())})))))},StudioCellEditor}(_CellEditor2.default);module.exports=exports.default},"./src/studio/cell.js":module=>{var Cell=function Cell(tileType,speed,size,direction,emotion,sprite){this.tileType_=tileType,this.speed_=speed,this.size_=size,this.direction_=direction,this.emotion_=emotion,this.sprite_=sprite};module.exports=Cell,Cell.prototype.getTileType=function(){return this.tileType_},Cell.prototype.clone=function(){return new Cell(this.tileType_,this.speed_,this.size_,this.direction_,this.emotion_,this.sprite_)},Cell.prototype.serialize=function(){return{tileType:this.tileType_,speed:this.speed_,size:this.size_,direction:this.direction_,emotion:this.emotion_,sprite:this.sprite_}},Cell.deserialize=function(serialized){return new Cell(serialized.tileType,serialized.speed,serialized.size,serialized.direction,serialized.emotion,serialized.sprite)}},"./src/studio/constants.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getClosestDirection=exports.frameDirTableWalkingWithIdleCounterclockwise=exports.frameDirTableWalkingWithIdleClockwise=exports.frameDirTableWalking=exports.frameDirTable=exports.floatingScoreChangeY=exports.floatingScoreChangeOpacity=exports.WallTypeShift=exports.WallTypeMask=exports.WallType=exports.WallRandomCoordMax=exports.WallCoordsShift=exports.WallCoordsMask=exports.WallCoordRowShift=exports.WallCoordRowMask=exports.WallCoordMax=exports.WallCoordColShift=exports.WallCoordColMask=exports.WallAnyMask=exports.VISIBLE_VALUE=exports.UNIT_VECTOR=exports.TOUCH_OBSTACLE_THROTTLE_TIME=exports.TOUCH_HAZARD_EFFECT_TIME=exports.SquareType=exports.SquareItemClassShift=exports.SquareItemClassMask=exports.SpriteSpeed=exports.SpriteSize=exports.SPRITE_COLLIDE_DISTANCE_SCALING=exports.SOUND_THROTTLE_TIME=exports.SHAKE_DEFAULT_DURATION=exports.SHAKE_DEFAULT_DISTANCE=exports.SHAKE_DEFAULT_CYCLES=exports.RANDOM_VALUE=exports.Position=exports.NextTurn=exports.MAX_NUM_CLOUDS=exports.ITEM_FADE_TIME=exports.IDLE_TICKS_BEFORE_FACE_SOUTH=exports.HIDDEN_VALUE=exports.GOAL_FADE_TIME=exports.FINISH_COLLIDE_DISTANCE_SCALING=exports.Emotions=exports.EMPTY_QUOTES=exports.Direction=exports.DEFAULT_SPRITE_SPEED=exports.DEFAULT_SPRITE_SIZE=exports.DEFAULT_SPRITE_ANIMATION_FRAME_DURATION=exports.DEFAULT_PROJECTILE_SPEED=exports.DEFAULT_PROJECTILE_ANIMATION_FRAME_DURATION=exports.DEFAULT_ITEM_SPEED=exports.DEFAULT_ITEM_ANIMATION_FRAME_DURATION=exports.DEFAULT_ANIMATION_RATE=exports.DEFAULT_ACTOR_FADE_TIME=exports.ClockwiseDirectionsFromNorth=exports.CardinalDirections=exports.CLOUD_SIZE=exports.CLOUD_OPACITY=exports.CLICK_VALUE=exports.CAPTURE_TICK_COUNT=exports.BEHAVIOR_WATCH_ACTOR=exports.BEHAVIOR_WANDER=exports.BEHAVIOR_STOP=exports.BEHAVIOR_GRID_ALIGNED=exports.BEHAVIOR_FLEE=exports.BEHAVIOR_CHASE=void 0,exports.squareHasItemClass=function squareHasItemClass(itemClassIndex,squareValue){var classesEnabled=(squareValue&SquareItemClassMask)>>>SquareItemClassShift;return Math.pow(2,itemClassIndex)&classesEnabled},exports.turnRight90=exports.turnLeft90=void 0;var SpriteSpeed=exports.SpriteSpeed={VERY_SLOW:2,SLOW:3,LITTLE_SLOW:4,NORMAL:5,LITTLE_FAST:6,FAST:8,VERY_FAST:12},Direction=(exports.SpriteSize={VERY_SMALL:.5,SMALL:.75,NORMAL:1,LARGE:1.5,VERY_LARGE:2},exports.Direction={NONE:0,NORTH:1,EAST:2,SOUTH:4,WEST:8,NORTHEAST:3,SOUTHEAST:6,SOUTHWEST:12,NORTHWEST:9}),Dir=(exports.turnLeft90=function turnLeft90(direction){return direction>>1||Direction.WEST},exports.turnRight90=function turnRight90(direction){return direction<<1&15||Direction.NORTH},Direction),ClockwiseDirectionsFromNorth=exports.ClockwiseDirectionsFromNorth=[Dir.NORTH,Dir.NORTHEAST,Dir.EAST,Dir.SOUTHEAST,Dir.SOUTH,Dir.SOUTHWEST,Dir.WEST,Dir.NORTHWEST],frameDirTable=(exports.CardinalDirections=[Dir.NORTH,Dir.SOUTH,Dir.EAST,Dir.WEST],exports.getClosestDirection=function getClosestDirection(x,y){var radiansFromNorth=Math.atan2(x,-y),stepRadians=Math.PI/4,stepsFromNorth=(Math.round(radiansFromNorth/stepRadians)+8)%8;return ClockwiseDirectionsFromNorth[stepsFromNorth]},exports.frameDirTable={});frameDirTable[Dir.SOUTHEAST]=0,frameDirTable[Dir.EAST]=1,frameDirTable[Dir.NORTHEAST]=2,frameDirTable[Dir.NORTH]=3,frameDirTable[Dir.NORTHWEST]=4,frameDirTable[Dir.WEST]=5,frameDirTable[Dir.SOUTHWEST]=6;var frameDirTableWalking=exports.frameDirTableWalking={};frameDirTableWalking[Dir.NONE]=0,frameDirTableWalking[Dir.SOUTH]=0,frameDirTableWalking[Dir.SOUTHEAST]=1,frameDirTableWalking[Dir.EAST]=2,frameDirTableWalking[Dir.NORTHEAST]=3,frameDirTableWalking[Dir.NORTH]=4,frameDirTableWalking[Dir.NORTHWEST]=5,frameDirTableWalking[Dir.WEST]=6,frameDirTableWalking[Dir.SOUTHWEST]=7;var frameDirTableWalkingWithIdleClockwise=exports.frameDirTableWalkingWithIdleClockwise={};frameDirTableWalkingWithIdleClockwise[Dir.NONE]=8,frameDirTableWalkingWithIdleClockwise[Dir.SOUTH]=0,frameDirTableWalkingWithIdleClockwise[Dir.SOUTHEAST]=1,frameDirTableWalkingWithIdleClockwise[Dir.EAST]=2,frameDirTableWalkingWithIdleClockwise[Dir.NORTHEAST]=3,frameDirTableWalkingWithIdleClockwise[Dir.NORTH]=4,frameDirTableWalkingWithIdleClockwise[Dir.NORTHWEST]=5,frameDirTableWalkingWithIdleClockwise[Dir.WEST]=6,frameDirTableWalkingWithIdleClockwise[Dir.SOUTHWEST]=7;var frameDirTableWalkingWithIdleCounterclockwise=exports.frameDirTableWalkingWithIdleCounterclockwise={};frameDirTableWalkingWithIdleCounterclockwise[Dir.NONE]=8,frameDirTableWalkingWithIdleCounterclockwise[Dir.SOUTH]=0,frameDirTableWalkingWithIdleCounterclockwise[Dir.SOUTHEAST]=7,frameDirTableWalkingWithIdleCounterclockwise[Dir.EAST]=6,frameDirTableWalkingWithIdleCounterclockwise[Dir.NORTHEAST]=5,frameDirTableWalkingWithIdleCounterclockwise[Dir.NORTH]=4,frameDirTableWalkingWithIdleCounterclockwise[Dir.NORTHWEST]=3,frameDirTableWalkingWithIdleCounterclockwise[Dir.WEST]=2,frameDirTableWalkingWithIdleCounterclockwise[Dir.SOUTHWEST]=1;var UNIT_VECTOR=exports.UNIT_VECTOR={};UNIT_VECTOR[Dir.NONE]={x:0,y:0},UNIT_VECTOR[Dir.NORTH]={x:0,y:-1},UNIT_VECTOR[Dir.EAST]={x:1,y:0},UNIT_VECTOR[Dir.SOUTH]={x:0,y:1},UNIT_VECTOR[Dir.WEST]={x:-1,y:0},UNIT_VECTOR[Dir.NORTHEAST]={x:1,y:-1},UNIT_VECTOR[Dir.SOUTHEAST]={x:1,y:1},UNIT_VECTOR[Dir.SOUTHWEST]={x:-1,y:1},UNIT_VECTOR[Dir.NORTHWEST]={x:-1,y:-1},Dir.getUnitVector=function(dir){return UNIT_VECTOR[dir]};exports.Position={OUTTOPOUTLEFT:1,OUTTOPLEFT:2,OUTTOPCENTER:3,OUTTOPRIGHT:4,OUTTOPOUTRIGHT:5,TOPOUTLEFT:6,TOPLEFT:7,TOPCENTER:8,TOPRIGHT:9,TOPOUTRIGHT:10,MIDDLEOUTLEFT:11,MIDDLELEFT:12,MIDDLECENTER:13,MIDDLERIGHT:14,MIDDLEOUTRIGHT:15,BOTTOMOUTLEFT:16,BOTTOMLEFT:17,BOTTOMCENTER:18,BOTTOMRIGHT:19,BOTTOMOUTRIGHT:20,OUTBOTTOMOUTLEFT:21,OUTBOTTOMLEFT:22,OUTBOTTOMCENTER:23,OUTBOTTOMRIGHT:24,OUTBOTTOMOUTRIGHT:25};var NextTurn=exports.NextTurn={};NextTurn[Dir.NORTH]={},NextTurn[Dir.NORTH][Dir.NORTH]=Dir.NORTH,NextTurn[Dir.NORTH][Dir.EAST]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.SOUTH]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.NONE]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.WEST]=Dir.NORTHWEST,NextTurn[Dir.NORTH][Dir.NORTHEAST]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.SOUTHEAST]=Dir.NORTHEAST,NextTurn[Dir.NORTH][Dir.SOUTHWEST]=Dir.NORTHWEST,NextTurn[Dir.NORTH][Dir.NORTHWEST]=Dir.NORTHWEST,NextTurn[Dir.EAST]={},NextTurn[Dir.EAST][Dir.NORTH]=Dir.NORTHEAST,NextTurn[Dir.EAST][Dir.EAST]=Dir.EAST,NextTurn[Dir.EAST][Dir.SOUTH]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.NONE]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.WEST]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.NORTHEAST]=Dir.NORTHEAST,NextTurn[Dir.EAST][Dir.SOUTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.SOUTHWEST]=Dir.SOUTHEAST,NextTurn[Dir.EAST][Dir.NORTHWEST]=Dir.NORTHEAST,NextTurn[Dir.SOUTH]={},NextTurn[Dir.SOUTH][Dir.NORTH]=Dir.SOUTHEAST,NextTurn[Dir.SOUTH][Dir.EAST]=Dir.SOUTHEAST,NextTurn[Dir.SOUTH][Dir.SOUTH]=Dir.SOUTH,NextTurn[Dir.SOUTH][Dir.NONE]=Dir.NONE,NextTurn[Dir.SOUTH][Dir.WEST]=Dir.SOUTHWEST,NextTurn[Dir.SOUTH][Dir.NORTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.SOUTH][Dir.SOUTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.SOUTH][Dir.SOUTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.SOUTH][Dir.NORTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.WEST]={},NextTurn[Dir.WEST][Dir.NORTH]=Dir.NORTHWEST,NextTurn[Dir.WEST][Dir.EAST]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.SOUTH]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.NONE]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.WEST]=Dir.WEST,NextTurn[Dir.WEST][Dir.NORTHEAST]=Dir.NORTHWEST,NextTurn[Dir.WEST][Dir.SOUTHEAST]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.SOUTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.WEST][Dir.NORTHWEST]=Dir.NORTHWEST,NextTurn[Dir.NORTHEAST]={},NextTurn[Dir.NORTHEAST][Dir.NORTH]=Dir.NORTH,NextTurn[Dir.NORTHEAST][Dir.EAST]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.SOUTH]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.NONE]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.WEST]=Dir.NORTH,NextTurn[Dir.NORTHEAST][Dir.NORTHEAST]=Dir.NORTHEAST,NextTurn[Dir.NORTHEAST][Dir.SOUTHEAST]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.SOUTHWEST]=Dir.EAST,NextTurn[Dir.NORTHEAST][Dir.NORTHWEST]=Dir.NORTH,NextTurn[Dir.SOUTHEAST]={},NextTurn[Dir.SOUTHEAST][Dir.NORTH]=Dir.EAST,NextTurn[Dir.SOUTHEAST][Dir.EAST]=Dir.EAST,NextTurn[Dir.SOUTHEAST][Dir.SOUTH]=Dir.SOUTH,NextTurn[Dir.SOUTHEAST][Dir.NONE]=Dir.SOUTH,NextTurn[Dir.SOUTHEAST][Dir.WEST]=Dir.SOUTH,NextTurn[Dir.SOUTHEAST][Dir.NORTHEAST]=Dir.EAST,NextTurn[Dir.SOUTHEAST][Dir.SOUTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.SOUTHEAST][Dir.SOUTHWEST]=Dir.SOUTH,NextTurn[Dir.SOUTHEAST][Dir.NORTHWEST]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST]={},NextTurn[Dir.SOUTHWEST][Dir.NORTH]=Dir.WEST,NextTurn[Dir.SOUTHWEST][Dir.EAST]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.SOUTH]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.NONE]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.WEST]=Dir.WEST,NextTurn[Dir.SOUTHWEST][Dir.NORTHEAST]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.SOUTHEAST]=Dir.SOUTH,NextTurn[Dir.SOUTHWEST][Dir.SOUTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.SOUTHWEST][Dir.NORTHWEST]=Dir.WEST,NextTurn[Dir.NORTHWEST]={},NextTurn[Dir.NORTHWEST][Dir.NORTH]=Dir.NORTH,NextTurn[Dir.NORTHWEST][Dir.EAST]=Dir.NORTH,NextTurn[Dir.NORTHWEST][Dir.SOUTH]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.NONE]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.WEST]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.NORTHEAST]=Dir.NORTH,NextTurn[Dir.NORTHWEST][Dir.SOUTHEAST]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.SOUTHWEST]=Dir.WEST,NextTurn[Dir.NORTHWEST][Dir.NORTHWEST]=Dir.NORTHWEST,NextTurn[Dir.NONE]={},NextTurn[Dir.NONE][Dir.NORTH]=Dir.SOUTHEAST,NextTurn[Dir.NONE][Dir.EAST]=Dir.SOUTHEAST,NextTurn[Dir.NONE][Dir.SOUTH]=Dir.SOUTH,NextTurn[Dir.NONE][Dir.NONE]=Dir.NONE,NextTurn[Dir.NONE][Dir.WEST]=Dir.SOUTHWEST,NextTurn[Dir.NONE][Dir.NORTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.NONE][Dir.SOUTHEAST]=Dir.SOUTHEAST,NextTurn[Dir.NONE][Dir.SOUTHWEST]=Dir.SOUTHWEST,NextTurn[Dir.NONE][Dir.NORTHWEST]=Dir.SOUTHWEST;exports.Emotions={NORMAL:0,HAPPY:1,ANGRY:2,SAD:3},exports.FINISH_COLLIDE_DISTANCE_SCALING=.75,exports.SPRITE_COLLIDE_DISTANCE_SCALING=.9,exports.DEFAULT_SPRITE_SPEED=SpriteSpeed.NORMAL,exports.DEFAULT_SPRITE_SIZE=1,exports.DEFAULT_SPRITE_ANIMATION_FRAME_DURATION=6,exports.DEFAULT_PROJECTILE_SPEED=SpriteSpeed.SLOW,exports.DEFAULT_PROJECTILE_ANIMATION_FRAME_DURATION=1.5,exports.DEFAULT_ITEM_SPEED=SpriteSpeed.SLOW,exports.DEFAULT_ITEM_ANIMATION_FRAME_DURATION=1.5;var SquareType=exports.SquareType={OPEN:0,SPRITEFINISH:1,NOT_USED_2:2,WALL:4,NOT_USED_8:8,SPRITESTART:16,ITEM_CLASS_0:32,ITEM_CLASS_1:64,ITEM_CLASS_2:128,ITEM_CLASS_3:256,ITEM_CLASS_4:512,ITEM_CLASS_5:1024,ITEM_CLASS_6:2048,ITEM_CLASS_7:4096,NOT_USED_8K:8192,NOT_USED_16K:16384,NOT_USED_32K:32768},SquareItemClassMask=exports.SquareItemClassMask=SquareType.ITEM_CLASS_0|SquareType.ITEM_CLASS_1|SquareType.ITEM_CLASS_2|SquareType.ITEM_CLASS_3|SquareType.ITEM_CLASS_4|SquareType.ITEM_CLASS_5|SquareType.ITEM_CLASS_6|SquareType.ITEM_CLASS_7,SquareItemClassShift=exports.SquareItemClassShift=5;exports.WallType={NORMAL_SIZE:0,DOUBLE_SIZE:1,JUMBO_SIZE:2};var WallTypeMask=exports.WallTypeMask=251658240,WallCoordRowMask=exports.WallCoordRowMask=15728640,WallCoordColMask=exports.WallCoordColMask=983040,WallCoordsMask=exports.WallCoordsMask=WallTypeMask|WallCoordRowMask|WallCoordColMask,WallCoordsShift=exports.WallCoordsShift=16;exports.WallCoordColShift=WallCoordsShift,exports.WallCoordRowShift=WallCoordsShift+4,exports.WallTypeShift=WallCoordsShift+8,exports.WallCoordMax=16,exports.WallRandomCoordMax=2,exports.WallAnyMask=WallCoordsMask|SquareType.WALL,exports.floatingScoreChangeOpacity=-.025,exports.floatingScoreChangeY=-1,exports.RANDOM_VALUE="random",exports.HIDDEN_VALUE='"hidden"',exports.CLICK_VALUE='"click"',exports.VISIBLE_VALUE='"visible"',exports.EMPTY_QUOTES='""',exports.IDLE_TICKS_BEFORE_FACE_SOUTH=4,exports.DEFAULT_ANIMATION_RATE=20,exports.GOAL_FADE_TIME=200,exports.ITEM_FADE_TIME=200,exports.DEFAULT_ACTOR_FADE_TIME=1e3,exports.TOUCH_HAZARD_EFFECT_TIME=1500,exports.SHAKE_DEFAULT_DURATION=1e3,exports.SHAKE_DEFAULT_CYCLES=6,exports.SHAKE_DEFAULT_DISTANCE=5,exports.MAX_NUM_CLOUDS=2,exports.CLOUD_SIZE=300,exports.CLOUD_OPACITY=.7,exports.SOUND_THROTTLE_TIME=200,exports.TOUCH_OBSTACLE_THROTTLE_TIME=330,exports.BEHAVIOR_CHASE="chase",exports.BEHAVIOR_FLEE="flee",exports.BEHAVIOR_STOP="none",exports.BEHAVIOR_WANDER="roam",exports.BEHAVIOR_WATCH_ACTOR="watchActor",exports.BEHAVIOR_GRID_ALIGNED="grid",exports.CAPTURE_TICK_COUNT=20},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/code-studio/components/GridEditor.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.StarWarsBB8Editor=exports.KarelFarmerBeeCollectorEditor=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_GridEditor=_interopRequireDefault(__webpack_require__("./src/code-studio/components/GridEditor.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_GridEditor.default};var serializedMaze=[[16908288,16908288,0,0,0,0,0,0],[16908288,16908288,0,65536,131072,1048576,0,0],[0,0,0,0,0,0,0,0],[0,0,0,16,0,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,1048576,65536,1179648,0,0],[0,17956864,17956864,0,0,0,0,1048576],[0,17956864,17956864,0,0,0,0,0]].map((function(row){return row.map((function(cell){return{tileType:cell}}))})),Template=function Template(args){return _react.default.createElement("div",{id:"grid"},_react.default.createElement(_GridEditor.default,_extends({onUpdate:function onUpdate(){}},args)))};(exports.KarelFarmerBeeCollectorEditor=Template.bind({})).args={skin:"bee",maze:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,1,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},(exports.StarWarsBB8Editor=Template.bind({})).args={skin:"starwarsgrid",serializedMaze}},"./static/code_studio/tile-guide.png":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"tile-guidewpf903a96701bfacefdeb3365f59572b89.png"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1zdHVkaW8tY29tcG9uZW50cy1HcmlkRWRpdG9yLXN0b3J5LmE5ZWMyMTM5LmlmcmFtZS5idW5kbGUuanMiLCJtYXBwaW5ncyI6IjRJQUtBQSxRQUFRQyxVQUFZLENBQ2xCQyxNQUFPLEVBQ1BDLEtBQU0sRUFDTkMsTUFBTyxFQUNQQyxLQUFNLEdBR1JMLFFBQVFNLDZCQUErQixHQUN2Q04sUUFBUU8sd0JBQTBCLEdBQ2xDUCxRQUFRUSxtQkFBcUIsR0FDN0JSLFFBQVFTLHVCQUF5QixLQUFPQyxLQUFLQyxHQUM3Q1gsUUFBUVkscUJBQXVCLEdBQy9CWixRQUFRYSxxQkFBdUIsRUFDL0JiLFFBQVFjLGdCQUFrQixHQU8xQmQsUUFBUWUsV0FBYSxDQUNuQkMsS0FBTSxFQUNOQyxLQUFNLEVBQ05DLEtBQU0sRUFDTkMsVUFBVyxFQUNYQyxhQUFjLEVBQ2RDLFlBQWEsR0FDYkMsV0FBWSxHQUNaQyxTQUFVLEcscUxDNUJaLElBQUFDLE1BQUFDLG9CQUFBLGtEQUNBQyxPQUFBQyx1QkFBQUYsb0JBQUEsa0NBRUFHLGFBQUFELHVCQUFBRixvQkFBQSxnREFBc0MsU0FBQUUsdUJBQUFFLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLFVBQUFFLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFGLGdCQUFBRyxPQUFBQyxlQUFBRCxPQUFBQyxlQUFBQyxPQUFBLFNBQUFMLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFELEVBQUFLLFVBQUFKLEVBQUFELENBQUEsRUFBQUQsZ0JBQUFDLEVBQUFDLEVBQUEsQ0FFdEMsSUFBTUssUUFBVUMsTUFBQUEsTUFBTUQsUUFFWXRDLFFBQUFBLFFBQUEsU0FBQXdDLGFBQUEsU0FBQUMsZ0JBQUEsT0FBQUQsWUFBQUUsTUFBQSxLQUFBQyxZQUFBLE1BSkksU0FBQUMsZUFBQUMsU0FBQUMsWUFBQUQsU0FBQUUsVUFBQWIsT0FBQWMsT0FBQUYsV0FBQUMsV0FBQUYsU0FBQUUsVUFBQUUsWUFBQUosU0FBQWQsZ0JBQUFjLFNBQUFDLFdBQUEsQ0FJSkYsQ0FBQUgsY0FBQUQsYUFBQSxJQUFBVSxPQUFBVCxjQUFBTSxVQTBGL0IsT0F6RkRHLE9BR0FDLG9CQUFBLFNBQUFBLHNCQUNFLE9BQU9YLFlBQUFPLFVBQ0pJLG9CQUFtQkMsS0FBQyxNQUNwQkMsT0FBTyxDQUFDLGNBQWUsWUFBYSxlQUN6QyxFQUVBSCxPQUdBSSxtQkFBQSxTQUFBQSxxQkFDRSxJQUFNQyxPQUFNZixZQUFBTyxVQUFTTyxtQkFBa0JGLEtBQUMsTUFtQnhDLE9BaEJJSSxLQUFLQyxNQUFNQyxLQUFLQyxvQkFDbEJKLE9BQU9LLFlBQWN0QixRQUFRdUIsWUFBWUMsVUFLaEIsY0FBdkJQLE9BQU9LLGNBQ1RMLE9BQU9RLE1BQVEsR0FDZlIsT0FBT1MsTUFBUSxJQUlaUixLQUFLQyxNQUFNQyxLQUFLTyxhQUNuQlYsT0FBT1csWUFBYyxJQUdoQlgsTUFDVCxFQUVBTCxPQUdBaUIsYUFBQSxTQUFBQSxhQUFhWixRQUNYLE9BQ0U3QixPQUFBLFFBQUEwQyxjQUFBLFdBQUE1QixZQUFBTyxVQUNTb0IsYUFBWWYsS0FBQyxLQUFBRyxRQUVwQjdCLE9BQUEsUUFBQTBDLGNBQUEsU0FBT0MsUUFBUSxlQUFjLGlCQUM3QjNDLE9BQUEsUUFBQTBDLGNBQUEsVUFDRUUsS0FBSyxjQUNMUCxNQUFPUixPQUFPSyxZQUNkVyxTQUFVZixLQUFLQyxNQUFNQyxLQUFLQyxrQkFDMUJhLFNBQVVoQixLQUFLaUIsY0FFZi9DLE9BQUEsUUFBQTBDLGNBQUEsVUFBUUwsTUFBTSxhQUFZLFFBQzFCckMsT0FBQSxRQUFBMEMsY0FBQSxVQUFRTCxNQUFPekIsUUFBUXVCLFlBQVlhLE1BQU0sUUFDekNoRCxPQUFBLFFBQUEwQyxjQUFBLFVBQVFMLE1BQU96QixRQUFRdUIsWUFBWWMsUUFBUSxVQUMzQ2pELE9BQUEsUUFBQTBDLGNBQUEsVUFBUUwsTUFBT3pCLFFBQVF1QixZQUFZQyxVQUFVLGFBRy9DcEMsT0FBQSxRQUFBMEMsY0FBQSxTQUFPQyxRQUFRLGFBQVksZUFDM0IzQyxPQUFBLFFBQUEwQyxjQUFBLFVBQ0VFLEtBQUssWUFDTFAsTUFBT1IsT0FBT3FCLFVBQ2RKLFNBQVVoQixLQUFLaUIsY0FFZi9DLE9BQUEsUUFBQTBDLGNBQUEsVUFBUUwsTUFBTSxhQUFZLFFBQzFCckMsT0FBQSxRQUFBMEMsY0FBQSxVQUFRTCxNQUFPekIsUUFBUXVDLFVBQVVDLFFBQVEsV0FDekNwRCxPQUFBLFFBQUEwQyxjQUFBLFVBQVFMLE1BQU96QixRQUFRdUMsVUFBVUUsZ0JBQWdCLGtCQUdqRHJELE9BQUEsUUFBQTBDLGNBQUEsVUFBUUwsTUFBT3pCLFFBQVF1QyxVQUFVRyxtQkFBbUIscUJBR3BEdEQsT0FBQSxRQUFBMEMsY0FBQSxVQUFRTCxNQUFPekIsUUFBUXVDLFVBQVVJLGlCQUFpQixtQkFHbER2RCxPQUFBLFFBQUEwQyxjQUFBLFVBQVFMLE1BQU96QixRQUFRdUMsVUFBVUssS0FBSyxRQUd4Q3hELE9BQUEsUUFBQTBDLGNBQUEsU0FBT0MsUUFBUSxlQUFjLGlCQUM3QjNDLE9BQUEsUUFBQTBDLGNBQUEsVUFDRUUsS0FBSyxjQUNMUCxNQUFPUixPQUFPVyxZQUNkSyxVQUFXZixLQUFLQyxNQUFNQyxLQUFLTyxXQUMzQk8sU0FBVWhCLEtBQUtpQixjQUVmL0MsT0FBQSxRQUFBMEMsY0FBQSxVQUFRTCxNQUFNLGFBQVksV0FDMUJyQyxPQUFBLFFBQUEwQyxjQUFBLFVBQVFMLE1BQU96QixRQUFRNkMsWUFBWUMsS0FBSyxPQUN4QzFELE9BQUEsUUFBQTBDLGNBQUEsVUFBUUwsTUFBT3pCLFFBQVE2QyxZQUFZRSxRQUFRLFdBSW5ELEVBQUM1QyxhQUFBLENBMUYrQixDQUFTNkMsYUFBQUEsU0FBVUMsT0FBQXZGLFFBQUFBLFFBQUEsTyx3TENQckQsSUFBQTBCLE9BQUFDLHVCQUFBRixvQkFBQSxrQ0FFQStELE9BQUEvRCxvQkFBQSx5QkFFQUcsYUFBQUQsdUJBQUFGLG9CQUFBLGdEQUFzQyxTQUFBRSx1QkFBQUUsS0FBQSxPQUFBQSxLQUFBQSxJQUFBQyxXQUFBRCxJQUFBLFNBQUFBLElBQUEsVUFBQUUsZ0JBQUFDLEVBQUFDLEdBQUEsT0FBQUYsZ0JBQUFHLE9BQUFDLGVBQUFELE9BQUFDLGVBQUFDLE9BQUEsU0FBQUwsZ0JBQUFDLEVBQUFDLEdBQUEsT0FBQUQsRUFBQUssVUFBQUosRUFBQUQsQ0FBQSxFQUFBRCxnQkFBQUMsRUFBQUMsRUFBQSxDQUVEakMsUUFBQUEsUUFBQSxTQUFBd0MsYUFBQSxTQUFBaUQsbUJBQUEsT0FBQWpELFlBQUFFLE1BQUEsS0FBQUMsWUFBQSxLQU1sQyxPQVJtQyxTQUFBQyxlQUFBQyxTQUFBQyxZQUFBRCxTQUFBRSxVQUFBYixPQUFBYyxPQUFBRixXQUFBQyxXQUFBRixTQUFBRSxVQUFBRSxZQUFBSixTQUFBZCxnQkFBQWMsU0FBQUMsV0FBQSxDQUVERixDQUFBNkMsaUJBQUFqRCxhQUFBaUQsaUJBQUExQyxVQUluQ29CLGFBQUEsU0FBQUEsYUFBYVosUUFDWCxPQUFPN0IsT0FBQSxRQUFBMEMsY0FBQSxXQUFBNUIsWUFBQU8sVUFBWTJDLGdCQUFldEMsS0FBQyxLQUFBRyxPQUFReEMsT0FBQUEsWUFDN0MsRUFBQzBFLGdCQUFBLENBTmtDLENBQVNILGFBQUFBLFNBQVVDLE9BQUF2RixRQUFBQSxRQUFBLE8sa0xDTnhELElBQUF3QixNQUFBQyxvQkFBQSxrREFDQWtFLFdBQUFoRSx1QkFBQUYsb0JBQUEsdUNBQ0FDLE9BQUFDLHVCQUFBRixvQkFBQSxrQ0FBMEIsU0FBQUUsdUJBQUFFLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLFVBQUErRCxRQUFBNUQsR0FBQSxPQUFBNEQsUUFBQSxtQkFBQUMsUUFBQSxpQkFBQUEsT0FBQUMsU0FBQSxTQUFBOUQsR0FBQSxjQUFBQSxDQUFBLFdBQUFBLEdBQUEsT0FBQUEsR0FBQSxtQkFBQTZELFFBQUE3RCxFQUFBaUIsY0FBQTRDLFFBQUE3RCxJQUFBNkQsT0FBQTlDLFVBQUEsZ0JBQUFmLENBQUEsRUFBQTRELFFBQUE1RCxFQUFBLFVBQUErRCxlQUFBQyxJQUFBQyxHQUFBLGdCQUFBQyxnQkFBQUYsS0FBQSxHQUFBRyxNQUFBQyxRQUFBSixLQUFBLE9BQUFBLEdBQUEsQ0FBQUUsQ0FBQUYsTUFBQSxTQUFBSyxzQkFBQUMsRUFBQUMsR0FBQSxJQUFBQyxFQUFBLE1BQUFGLEVBQUEseUJBQUFULFFBQUFTLEVBQUFULE9BQUFDLFdBQUFRLEVBQUEsdUJBQUFFLEVBQUEsS0FBQUMsRUFBQUMsRUFBQVQsRUFBQVUsRUFBQUMsRUFBQSxHQUFBQyxHQUFBLEVBQUE3RSxHQUFBLFNBQUFpRSxHQUFBTyxFQUFBQSxFQUFBcEQsS0FBQWtELElBQUFRLEtBQUEsSUFBQVAsRUFBQSxJQUFBckUsT0FBQXNFLEtBQUFBLEVBQUEsT0FBQUssR0FBQSxjQUFBQSxHQUFBSixFQUFBUixFQUFBN0MsS0FBQW9ELElBQUFPLFFBQUFILEVBQUFJLEtBQUFQLEVBQUExQyxPQUFBNkMsRUFBQUssU0FBQVYsR0FBQU0sR0FBQSxVQUFBUCxHQUFBdEUsR0FBQSxFQUFBMEUsRUFBQUosQ0FBQSxpQkFBQU8sR0FBQSxNQUFBTCxFQUFBLFNBQUFHLEVBQUFILEVBQUEsU0FBQXRFLE9BQUF5RSxLQUFBQSxHQUFBLGtCQUFBM0UsRUFBQSxNQUFBMEUsQ0FBQSxTQUFBRSxDQUFBLEVBQUFQLENBQUFMLElBQUFDLElBQUEsU0FBQWlCLDRCQUFBbEYsRUFBQW1GLFFBQUEsSUFBQW5GLEVBQUEsMkJBQUFBLEVBQUEsT0FBQW9GLGtCQUFBcEYsRUFBQW1GLFFBQUEsSUFBQVQsRUFBQXhFLE9BQUFhLFVBQUFzRSxTQUFBakUsS0FBQXBCLEdBQUFzRixNQUFBLGlCQUFBWixHQUFBMUUsRUFBQWlCLGNBQUF5RCxFQUFBMUUsRUFBQWlCLFlBQUFxQixNQUFBLFdBQUFvQyxHQUFBLFFBQUFBLEVBQUEsT0FBQVAsTUFBQW9CLEtBQUF2RixHQUFBLGlCQUFBMEUsR0FBQSwyQ0FBQWMsS0FBQWQsR0FBQSxPQUFBVSxrQkFBQXBGLEVBQUFtRixPQUFBLENBQUFELENBQUFsQixJQUFBQyxJQUFBLFNBQUF3QixtQkFBQSxVQUFBQyxVQUFBLDZJQUFBRCxFQUFBLFVBQUFMLGtCQUFBcEIsSUFBQTJCLE1BQUEsTUFBQUEsS0FBQUEsSUFBQTNCLElBQUFpQixVQUFBVSxJQUFBM0IsSUFBQWlCLFFBQUEsUUFBQWhCLEVBQUEsRUFBQTJCLEtBQUEsSUFBQXpCLE1BQUF3QixLQUFBMUIsRUFBQTBCLElBQUExQixJQUFBMkIsS0FBQTNCLEdBQUFELElBQUFDLEdBQUEsT0FBQTJCLElBQUEsVUFBQTdGLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFGLGdCQUFBRyxPQUFBQyxlQUFBRCxPQUFBQyxlQUFBQyxPQUFBLFNBQUFMLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFELEVBQUFLLFVBQUFKLEVBQUFELENBQUEsRUFBQUQsZ0JBQUFDLEVBQUFDLEVBQUEsQ0FFMUIsSUFBTWxCLFdBQWE4RyxNQUFBQSxNQUFNOUcsWUFGQyxTQUFBK0csZ0JBQUFqRyxJQUFBa0csSUFBQWhFLE9BQUEsT0FBQWdFLElBQUEsU0FBQUMsZUFBQXhCLEdBQUEsSUFBQVAsRUFBQSxTQUFBZ0MsYUFBQXpCLEVBQUFGLEdBQUEsYUFBQVYsUUFBQVksS0FBQUEsRUFBQSxPQUFBQSxFQUFBLElBQUFDLEVBQUFELEVBQUFYLE9BQUFxQyxhQUFBLFlBQUF6QixFQUFBLEtBQUFSLEVBQUFRLEVBQUFyRCxLQUFBb0QsRUFBQUYsR0FBQSx3QkFBQVYsUUFBQUssR0FBQSxPQUFBQSxFQUFBLFVBQUF5QixVQUFBLGtFQUFBcEIsRUFBQTZCLE9BQUFDLFFBQUE1QixFQUFBLENBQUF5QixDQUFBekIsRUFBQSwwQkFBQVosUUFBQUssR0FBQUEsRUFBQUEsRUFBQSxHQUFBK0IsQ0FBQUQsUUFBQWxHLElBQUFLLE9BQUFtRyxlQUFBeEcsSUFBQWtHLElBQUEsQ0FBQWhFLE1BQUF1RSxZQUFBLEVBQUFDLGNBQUEsRUFBQUMsVUFBQSxJQUFBM0csSUFBQWtHLEtBQUFoRSxNQUFBbEMsR0FBQSxDQUk2QmlHLENBQXhCOUgsUUFBQUEsUUFBQSxTQUFBeUksa0JBUTdCLFNBQUFuRCxXQUFZN0IsT0FBTyxJQUFBaUYsTUFFZ0MsT0FEakRBLE1BQUFELGlCQUFBckYsS0FBQSxLQUFNSyxRQUFNLE1BQ1BnQixhQUFlaUUsTUFBS2pFLGFBQWFyQyxLQUFJc0csT0FBT0EsS0FDbkQsRUFmd0IsU0FBQTlGLGVBQUFDLFNBQUFDLFlBQUFELFNBQUFFLFVBQUFiLE9BQUFjLE9BQUFGLFdBQUFDLFdBQUFGLFNBQUFFLFVBQUFFLFlBQUFKLFNBQUFkLGdCQUFBYyxTQUFBQyxXQUFBLENBZXZCRixDQUFBMEMsV0FBQW1ELGtCQUFBLElBQUF2RixPQUFBb0MsV0FBQXZDLFVBaUpBLE9BakpBRyxPQUVEdUIsYUFBQSxTQUFBQSxlQUVFLElBQU1rRSxTQUFXLElBQUlDLFNBQVNwRixLQUFLcUYsTUFJN0J0RixPQUFTNEMsTUFBTW9CLEtBQUtvQixVQUFVRyxRQUFPLFNBQUNDLFdBQVVDLE1BQW9CLElBQUFDLE1BQUFsRCxlQUFBaUQsS0FBQSxHQUFqQjFFLEtBQUkyRSxNQUFBLEdBQUVsRixNQUFLa0YsTUFBQSxHQWlCbEUsT0FmRWxGLE1BRFksY0FBVkEsV0FDTW1GLEVBRUFDLE1BQU1wRixPQUFTLEdBQUtxRSxPQUFPckUsT0FHakNPLFFBQVF5RSxXQUNONUMsTUFBTUMsUUFBUTJDLFdBQVd6RSxPQUMzQnlFLFdBQVd6RSxNQUFNMEMsS0FBS2pELE9BRXRCZ0YsV0FBV3pFLE1BQVEsQ0FBQ3lFLFdBQVd6RSxNQUFPUCxPQUd4Q2dGLFdBQVd6RSxNQUFRUCxNQUdkZ0YsVUFDVCxHQUFHLENBQUMsR0FFSnZGLEtBQUtDLE1BQU0yRixTQUFTN0YsT0FDdEIsRUFFQUwsT0FPQUMsb0JBQUEsU0FBQUEsc0JBQ0UsTUFBTyxDQUFDLFdBQ1YsRUFFQUQsT0FXQUksbUJBQUEsU0FBQUEscUJBQ0UsSUFBTUMsT0FBU0MsS0FBS0MsTUFBTUMsS0FBSzJGLFlBVS9CLE9BTkE3RixLQUFLTCxzQkFBc0JtRyxTQUFRLFNBQUF2RixZQUNYbUYsSUFBbEIzRixPQUFPUSxTQUNUUixPQUFPUSxPQUFTLFlBRXBCLElBRU9SLE1BQ1QsRUFFQUwsT0FTQXdDLGdCQUFBLFNBQUFBLGdCQUFnQm5DLFFBQWtDLElBQTFCZ0csWUFBVzVHLFVBQUFzRSxPQUFBLFFBQUFpQyxJQUFBdkcsVUFBQSxHQUFBQSxVQUFBLEdBQUc1QixXQUNwQyxPQUNFVyxPQUFBLFFBQUEwQyxjQUFBLFdBQ0UxQyxPQUFBLFFBQUEwQyxjQUFBLFNBQU9DLFFBQVEsWUFBVyx5QkFDMUIzQyxPQUFBLFFBQUEwQyxjQUFBLFVBQ0VFLEtBQUssV0FDTFAsTUFBT1IsT0FBT2lHLFNBQ2RoRixTQUFVaEIsS0FBS2lCLGNBRWR2QyxPQUFPdUgsS0FBS0YsYUFBYUcsS0FBSSxTQUFBM0IsS0FBRyxPQUMvQnJHLE9BQUEsUUFBQTBDLGNBQUEsVUFBUTJELElBQVVoRSxNQUFPd0YsWUFBWXhCLE1BQ2xDQSxJQUFJNEIsY0FDRSxLQUtuQixFQUVBekcsT0FRQWlCLGFBQUEsU0FBQUEsYUFBYVosUUFDWCxPQUNFN0IsT0FBQSxRQUFBMEMsY0FBQSxXQUNHWixLQUFLa0MsZ0JBQWdCbkMsUUFFdEI3QixPQUFBLFFBQUEwQyxjQUFBLFNBQU9DLFFBQVEsU0FBUSxVQUN2QjNDLE9BQUEsUUFBQTBDLGNBQUEsU0FDRXdGLEtBQUssU0FDTHRGLEtBQUssUUFDTFAsTUFBT1IsT0FBT1EsTUFDZFMsU0FBVWhCLEtBQUtpQixlQUdqQi9DLE9BQUEsUUFBQTBDLGNBQUEsU0FBT0MsUUFBUSxTQUFRLDhCQUN2QjNDLE9BQUEsUUFBQTBDLGNBQUEsU0FDRXdGLEtBQUssU0FDTHRGLEtBQUssUUFDTFAsTUFBT1IsT0FBT1MsTUFDZE8sU0FBaUMsY0FBdkJoQixPQUFPSyxZQUNqQlksU0FBVWhCLEtBQUtpQixlQUl2QixFQUFDdkIsT0FFRDJHLE9BQUEsU0FBQUEsU0FBUyxJQUFBQyxPQUFBLEtBQ1AsT0FDRXBJLE9BQUEsUUFBQTBDLGNBQUEsUUFDRTJGLFVBQVUsZ0JBQ1ZDLElBQUssU0FBQUEsSUFBQW5CLE1BQ0hpQixPQUFLakIsS0FBT0EsSUFDZCxHQUVBbkgsT0FBQSxRQUFBMEMsY0FBQSxjQUNFMUMsT0FBQSxRQUFBMEMsY0FBQSxjQUFRLGlCQUNTWixLQUFLQyxNQUFNd0csSUFBSSxLQUFHekcsS0FBS0MsTUFBTXlHLElBQUksTUFJbkQxRyxLQUFLVyxhQUFhWCxLQUFLRixzQkFHOUIsRUFBQ2dDLFVBQUEsQ0E1SjRCLENBQVM2RSxPQUFBQSxRQUFNQyxXQUFmLFlBQ1YsQ0FDakIxRyxLQUFNMkcsV0FBQUEsUUFBVUMsT0FBT0MsV0FDdkJOLElBQUtJLFdBQUFBLFFBQVVHLE9BQU9ELFdBQ3RCTCxJQUFLRyxXQUFBQSxRQUFVRyxPQUFPRCxXQUN0Qm5CLFNBQVVpQixXQUFBQSxRQUFVSSxLQUFLRixhQUMxQmhGLE9BQUF2RixRQUFBQSxRQUFBLE8sNEtDakJILElBQUF3QixNQUFBQyxvQkFBQSxrREFDQWtFLFdBQUFoRSx1QkFBQUYsb0JBQUEsdUNBQ0FDLE9BQUFDLHVCQUFBRixvQkFBQSxrQ0FFQWlKLFdBQUFqSixvQkFBQSw2QkFPb0MsU0FBQUUsdUJBQUFFLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLFVBQUErRCxRQUFBNUQsR0FBQSxPQUFBNEQsUUFBQSxtQkFBQUMsUUFBQSxpQkFBQUEsT0FBQUMsU0FBQSxTQUFBOUQsR0FBQSxjQUFBQSxDQUFBLFdBQUFBLEdBQUEsT0FBQUEsR0FBQSxtQkFBQTZELFFBQUE3RCxFQUFBaUIsY0FBQTRDLFFBQUE3RCxJQUFBNkQsT0FBQTlDLFVBQUEsZ0JBQUFmLENBQUEsRUFBQTRELFFBQUE1RCxFQUFBLFVBQUFZLGVBQUFDLFNBQUFDLFlBQUFELFNBQUFFLFVBQUFiLE9BQUFjLE9BQUFGLFdBQUFDLFdBQUFGLFNBQUFFLFVBQUFFLFlBQUFKLFNBQUFkLGdCQUFBYyxTQUFBQyxXQUFBLFVBQUFmLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFGLGdCQUFBRyxPQUFBQyxlQUFBRCxPQUFBQyxlQUFBQyxPQUFBLFNBQUFMLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFELEVBQUFLLFVBQUFKLEVBQUFELENBQUEsRUFBQUQsZ0JBQUFDLEVBQUFDLEVBQUEsVUFBQTZGLGdCQUFBakcsSUFBQWtHLElBQUFoRSxPQUFBLE9BQUFnRSxJQUFBLFNBQUFDLGVBQUF4QixHQUFBLElBQUFQLEVBQUEsU0FBQWdDLGFBQUF6QixFQUFBRixHQUFBLGFBQUFWLFFBQUFZLEtBQUFBLEVBQUEsT0FBQUEsRUFBQSxJQUFBQyxFQUFBRCxFQUFBWCxPQUFBcUMsYUFBQSxZQUFBekIsRUFBQSxLQUFBUixFQUFBUSxFQUFBckQsS0FBQW9ELEVBQUFGLEdBQUEsd0JBQUFWLFFBQUFLLEdBQUEsT0FBQUEsRUFBQSxVQUFBeUIsVUFBQSxrRUFBQXBCLEVBQUE2QixPQUFBQyxRQUFBNUIsRUFBQSxDQUFBeUIsQ0FBQXpCLEVBQUEsMEJBQUFaLFFBQUFLLEdBQUFBLEVBQUFBLEVBQUEsR0FBQStCLENBQUFELFFBQUFsRyxJQUFBSyxPQUFBbUcsZUFBQXhHLElBQUFrRyxJQUFBLENBQUFoRSxNQUFBdUUsWUFBQSxFQUFBQyxjQUFBLEVBQUFDLFVBQUEsSUFBQTNHLElBQUFrRyxLQUFBaEUsTUFBQWxDLEdBQUEsQ0FFcEMsSUFHTThJLFlBQVc3QyxnQkFBQUEsZ0JBQUFBLGdCQUFBLEdBQ2QvRyxXQUFBQSxXQUFXQyxLQUFPLFFBQ2xCRCxXQUFBQSxXQUFXNkosYUFBZSxRQUMxQjdKLFdBQUFBLFdBQVc4SixZQUFjLFVBS3RCQyxpQkFBbUIsQ0FDdkIsTUFDQSxNQUNBLFVBQ0EsV0FDQSxVQUNBLFFBQ0EsTUFDQSxPQUNBLFNBQ0EsV0FDQSxTQUNBLFFBQ0EsUUFDQSxVQUNBLFFBQ0EsVUFDQSxTQUNBLFNBQ0EsUUFDQSxTQUNBLFVBQ0EsV0FDQSxXQUNBLFdBQ0EsYUFDQSxZQUNBLGFBQ0EsYUFHSUMsV0FBYSxDQUFDLFNBQVUsT0FBUSxRQUFTLE1BQU8sWUFDaERDLGNBQWdCLENBQ3BCLEdBQ0EsaUJBQ0Esb0JBQ0Esa0JBQ0EsMEJBRUlDLFlBQWMsQ0FBQyxPQUFRLFVBRXZCQyxLQUFJLFNBQUF6QyxrQkFBQSxTQUFBeUMsT0FBQSxPQUFBekMsaUJBQUEvRixNQUFBLEtBQUFDLFlBQUEsS0FnSVAsT0FoSU9DLGVBQUFzSSxLQUFBekMsa0JBQUF5QyxLQUFBbkksVUFjUjhHLE9BQUEsU0FBQUEsU0FDRSxJQUlJc0IsS0FKR3pILEtBQVFGLEtBQUtDLE1BQWJDLEtBRUQwSCxXQUFhLEdBQ2JDLFFBQVUsQ0FBQyxFQWFqQixHQVZJN0gsS0FBS0MsTUFBTTZILFVBQ2JGLFdBQVdwRSxLQUFLLFlBRWR4RCxLQUFLQyxNQUFNOEgsYUFDYkgsV0FBV3BFLEtBQUssZUFNTSxZQUFwQnhELEtBQUtDLE1BQU0rSCxLQUNiSixXQUFXcEUsS0FBSyxVQUFXMkQsWUFBWWpILEtBQUsrSCxnQkFHMUMvSCxLQUFLK0gsZ0JBQWtCMUssV0FBQUEsV0FBVzhKLGtCQUNqQjNCLElBQWpCeEYsS0FBS2dJLFVBRUxMLFFBQVFNLGdCQUNOLG9DQUNBYixpQkFBaUJwSCxLQUFLZ0ksU0FDdEIsaUNBRUMsR0FBd0IsaUJBQXBCbEksS0FBS0MsTUFBTStILEtBQ3BCLEdBQXVCLElBQW5COUgsS0FBS2tJLFVBQ1BQLFFBQVFNLGdCQUNOLHFEQUNHLEdBQXVCLEtBQW5CakksS0FBS2tJLFVBQ2RQLFFBQVFNLGdCQUNOLDREQUNGTixRQUFRUSxlQUFpQixZQUNwQixDQUNMVixLQUFPVyxXQUFBQSxhQUFlcEksS0FBS2tJLFVBQVksS0FBTyxHQUM5QyxJQUFNRyxHQUFLQyxXQUFBQSxpQkFBbUJ0SSxLQUFLa0ksWUFBY0ssV0FBQUEsa0JBQzNDQyxHQUFLQyxXQUFBQSxpQkFBbUJ6SSxLQUFLa0ksWUFBY1EsV0FBQUEsa0JBQ2pEZixRQUFRTSxnQkFDTiw2REFDRk4sUUFBUVEsZUFBaUIsWUFDekJSLFFBQVFnQixtQkFBcUIsSUFBSGhKLE9BOUdmLEdBOEdzQjBJLEVBQWMsUUFBQTFJLE9BN0duQyxHQThHVjZJLEVBQWUsS0FFbkIsTUFDSyxHQUF3QixXQUFwQjFJLEtBQUtDLE1BQU0rSCxLQUFtQixDQVV2QyxHQUFJOUgsS0FBS2tJLFVBQVcsQ0FDbEIsSUFBTVUsTUFWTyxDQUNiLGFBQ0EsT0FDQSxPQUNBLFNBQ0EsU0FDQSxPQUNBLFlBR3FCNUwsS0FBSzZMLEtBQUs3SSxLQUFLa0ksWUFDcENQLFFBQVFNLGdCQUFrQixvQ0FBSHRJLE9BQXVDaUosTUFBSyxTQUNyRSxDQUNGLEtBQU8sQ0FHTCxHQUZBbEIsV0FBV3BFLEtBQUsrRCxXQUFXckgsS0FBS2tJLFlBRTVCWSxNQUFBQSxNQUFVQyxVQUFVakosS0FBS0MsTUFBTStILE1BQzdCOUgsS0FBS0MsbUJBQ1B5SCxXQUFXcEUsS0FBSyxlQUNoQm9FLFdBQVdwRSxLQUFLZ0UsY0FBY3RILEtBQUtnSixtQkFDSnhELElBQXRCeEYsS0FBS2lKLGNBQ2R2QixXQUFXcEUsS0FBS2lFLFlBQVl2SCxLQUFLaUosb0JBSW5DLEdBQUlqSixLQUFLa0osU0FBVSxDQUNqQnhCLFdBQVdwRSxLQUFLLFFBQ2hCLElBQU02RixVQUFZbkosS0FBS29KLGtCQUNqQkMsVUFBWSxHQUFLRixXQUFhQSxVQUFZLEVBQUksRUFBSSxHQUN4RHhCLFFBQVFnQixtQkFBa0MsSUFBWlUsU0FDaEMsTUFHMEI3RCxJQUF4QnhGLEtBQUtzSixnQkFBd0QsT0FBeEJ0SixLQUFLc0osaUJBQzVDN0IsS0FBT3pILEtBQUtzSixlQUFlM0YsV0FDdkIzRCxLQUFLdUosUUFBVXZKLEtBQUt1SixPQUFTdkosS0FBS3NKLGlCQUNwQzdCLE1BQVEsTUFBUXpILEtBQUt1SixPQUFPNUYsWUFHbEMsQ0FFQSxPQUNFM0YsT0FBQSxRQUFBMEMsY0FBQSxNQUNFMkYsVUFBV3FCLFdBQVc4QixLQUFLLEtBQzNCQyxRQUFTM0osS0FBS0MsTUFBTTBKLFFBQVEvSyxLQUFLLEtBQU1vQixLQUFLQyxNQUFNd0csSUFBS3pHLEtBQUtDLE1BQU15RyxLQUNsRWtELFlBQWE1SixLQUFLQyxNQUFNMkosWUFBWWhMLEtBQ2xDLEtBQ0FvQixLQUFLQyxNQUFNd0csSUFDWHpHLEtBQUtDLE1BQU15RyxLQUVibUQsWUFBYTdKLEtBQUtDLE1BQU00SixZQUFZakwsS0FDbEMsS0FDQW9CLEtBQUtDLE1BQU13RyxJQUNYekcsS0FBS0MsTUFBTXlHLEtBRWJvRCxVQUFXOUosS0FBS0MsTUFBTTZKLFVBQVVsTCxLQUM5QixLQUNBb0IsS0FBS0MsTUFBTXdHLElBQ1h6RyxLQUFLQyxNQUFNeUcsS0FFYnFELE1BQU9sQyxTQUVORixLQUdQLEVBQUNELElBQUEsQ0FoSU8sQ0FBU2YsT0FBQUEsUUFBTUMsV0FBU3RDLGdCQUE1Qm9ELEtBQUksWUFDVyxDQUNqQnhILEtBQU0yRyxXQUFBQSxRQUFVQyxPQUFPQyxXQUN2Qk4sSUFBS0ksV0FBQUEsUUFBVUcsT0FBT0QsV0FDdEJMLElBQUtHLFdBQUFBLFFBQVVHLE9BQU9ELFdBQ3RCZSxTQUFVakIsV0FBQUEsUUFBVW1ELEtBQUtqRCxXQUN6QjRDLFFBQVM5QyxXQUFBQSxRQUFVSSxLQUFLRixXQUN4QjZDLFlBQWEvQyxXQUFBQSxRQUFVSSxLQUFLRixXQUM1QjhDLFlBQWFoRCxXQUFBQSxRQUFVSSxLQUFLRixXQUM1QitDLFVBQVdqRCxXQUFBQSxRQUFVSSxLQUFLRixXQUMxQmlCLEtBQU1uQixXQUFBQSxRQUFVb0QsT0FBT2xELFdBQ3ZCZ0IsWUFBYWxCLFdBQUFBLFFBQVVtRCxPQUN4QixJQXVIa0JFLEtBQUkxTixRQUFBQSxRQUFBLFNBQUEyTixtQkFBQSxTQUFBRCxPQUFBLFFBQUFoRixNQUFBa0YsS0FBQWpMLFVBQUFzRSxPQUFBNEcsS0FBQSxJQUFBMUgsTUFBQXlILE1BQUFFLEtBQUEsRUFBQUEsS0FBQUYsS0FBQUUsT0FBQUQsS0FBQUMsTUFBQW5MLFVBQUFtTCxNQXFFdEIsT0FyRXNCaEcsZ0JBQUFZLE1BQUFpRixrQkFBQXZLLEtBQUFWLE1BQUFpTCxrQkFBQSxPQUFBdEssT0FBQXdLLFFBQUEsYUFVZixDQUFDLEdBRVQvRixnQkFBQVksTUFBQSxhQUlZLFNBQUN1QixJQUFLQyxLQUNoQnhCLE1BQUtxRixTQUFTLENBQ1pDLFVBQVUsRUFDVkMsVUFBVyxDQUFDaEUsSUFBS0MsTUFFckIsSUFFQXBDLGdCQUFBWSxNQUFBLFlBS1csU0FBQ3VCLElBQUtDLEtBQ1h4QixNQUFLd0YsTUFBTUYsVUFDYnRGLE1BQUtxRixTQUFTLENBQ1pJLFlBQWEsQ0FBQ2xFLElBQUtDLE1BR3pCLElBRUFwQyxnQkFBQVksTUFBQSxXQUlVLFNBQUN1QixJQUFLQyxLQUNkLElBQU8rRCxVQUFhdkYsTUFBS3dGLE1BQWxCRCxVQU9QLEdBTkF2RixNQUFLcUYsU0FBUyxDQUNaQyxVQUFVLEVBQ1ZDLFVBQVcsS0FDWEUsWUFBYSxPQUdWRixZQUFjQSxVQUFVaEUsTUFBUUEsS0FBT2dFLFVBQVUvRCxNQUFRQSxLQUE5RCxDQUlBLElBQU1rRSxJQUFNMU4sS0FBSzJOLElBQUlKLFVBQVVoRSxJQUFLQSxLQUM5QnFFLEtBQU81TixLQUFLMk4sSUFBSUosVUFBVS9ELElBQUtBLEtBQy9CcUUsT0FBUzdOLEtBQUs4TixJQUFJUCxVQUFVaEUsSUFBS0EsS0FDakN3RSxNQUFRL04sS0FBSzhOLElBQUlQLFVBQVUvRCxJQUFLQSxLQUVoQzNILE1BQVFtRyxNQUFLakYsTUFBTWxCLE1BQU0rRSxNQUFNOEcsSUFBS0csT0FBUyxHQUFHN0UsS0FBSSxTQUFBTyxLQUN4RCxPQUFPQSxJQUFJM0MsTUFBTWdILEtBQU1HLE1BQVEsR0FBRy9FLEtBQUksU0FBQWhHLE1BQ3BDLE9BQU9BLEtBQUsyRixXQUNkLEdBQ0YsSUFPQVgsTUFBS2pGLE1BQU1pTCxlQUFlbk0sTUFsQjFCLENBbUJGLElBQUNtRyxLQUFBLENBQUE5RixlQUFBOEssS0FBQUMsbUJBQUEsSUFBQWdCLFFBQUFqQixLQUFBM0ssVUFpREEsT0EvQ0Q0TCxRQUlBQyxlQUFBLFNBQUFBLGVBQWUzRSxJQUFLQyxLQUNsQixTQUFJMUcsS0FBSzBLLE1BQU1GLFdBQVl4SyxLQUFLMEssTUFBTUMsZUFFbENsRSxLQUFPdkosS0FBSzJOLElBQUk3SyxLQUFLMEssTUFBTUQsVUFBVWhFLElBQUt6RyxLQUFLMEssTUFBTUMsWUFBWWxFLE1BQ2pFQSxLQUFPdkosS0FBSzhOLElBQUloTCxLQUFLMEssTUFBTUQsVUFBVWhFLElBQUt6RyxLQUFLMEssTUFBTUMsWUFBWWxFLE1BQ2pFQyxLQUFPeEosS0FBSzJOLElBQUk3SyxLQUFLMEssTUFBTUQsVUFBVS9ELElBQUsxRyxLQUFLMEssTUFBTUMsWUFBWWpFLE1BQ2pFQSxLQUFPeEosS0FBSzhOLElBQUloTCxLQUFLMEssTUFBTUQsVUFBVS9ELElBQUsxRyxLQUFLMEssTUFBTUMsWUFBWWpFLEtBSXZFLEVBQUN5RSxRQUVEOUUsT0FBQSxTQUFBQSxTQUFTLElBQUFDLE9BQUEsS0FDRCtFLFVBQVlyTCxLQUFLQyxNQUFNbEIsTUFBTW1ILEtBQUksU0FBQ08sSUFBSzhCLEdBQzNDLElBQU0rQyxXQUFhN0UsSUFBSVAsS0FBSSxTQUFDaEcsS0FBTXdJLEdBQ2hDLElBQU1aLFNBQ0p4QixPQUFLckcsTUFBTXNMLGNBQWdCaEQsR0FBS2pDLE9BQUtyRyxNQUFNdUwsY0FBZ0I5QyxFQUU3RCxPQUNFeEssT0FBQSxRQUFBMEMsY0FBQzhHLEtBQUksQ0FDSG5ELElBQUssUUFBVWdFLEVBQUksSUFBTUcsRUFDekJ4SSxLQUNBdUcsSUFBSzhCLEVBQ0w3QixJQUFLZ0MsRUFDTFosU0FDQUMsWUFBYXpCLE9BQUs4RSxlQUFlN0MsRUFBR0csR0FDcENpQixRQUFTckQsT0FBS3JHLE1BQU13TCxrQkFDcEI3QixZQUFhdEQsT0FBS29GLFVBQ2xCN0IsWUFBYXZELE9BQUtxRixTQUNsQjdCLFVBQVd4RCxPQUFLc0YsUUFDaEI1RCxLQUFNMUIsT0FBS3JHLE1BQU0rSCxNQUd2QixJQUVBLE9BQU85SixPQUFBLFFBQUEwQyxjQUFBLE1BQUkyRCxJQUFLLE9BQVNnRSxHQUFJK0MsV0FDL0IsSUFFQSxPQUNFcE4sT0FBQSxRQUFBMEMsY0FBQSxhQUNFMUMsT0FBQSxRQUFBMEMsY0FBQSxhQUFReUssV0FHZCxFQUFDbkIsSUFBQSxDQXRIc0IsQ0FBU3ZELE9BQUFBLFFBQU1DLFdBQVN0QyxnQkFBNUI0RixLQUFJLFlBQ0osQ0FDakJuTCxNQUFPOEgsV0FBQUEsUUFBVWdGLFFBQVFoRixXQUFBQSxRQUFVZ0YsUUFBUWhGLFdBQUFBLFFBQVVDLFNBQVNDLFdBQzlEd0UsWUFBYTFFLFdBQUFBLFFBQVVHLE9BQ3ZCd0UsWUFBYTNFLFdBQUFBLFFBQVVHLE9BQ3ZCZ0IsS0FBTW5CLFdBQUFBLFFBQVVvRCxPQUFPbEQsV0FDdkIwRSxrQkFBbUI1RSxXQUFBQSxRQUFVSSxLQUFLRixXQUNsQ21FLGVBQWdCckUsV0FBQUEsUUFBVUksS0FBS0YsYUFDaENoRixPQUFBdkYsUUFBQUEsUUFBQSxPLGtMQ3ZNSCxJQUFBd0IsTUFBQUMsb0JBQUEsa0RBQ0FrRSxXQUFBaEUsdUJBQUFGLG9CQUFBLHVDQUNBQyxPQUFBQyx1QkFBQUYsb0JBQUEsa0NBQTBCLFNBQUFFLHVCQUFBRSxLQUFBLE9BQUFBLEtBQUFBLElBQUFDLFdBQUFELElBQUEsU0FBQUEsSUFBQSxVQUFBK0QsUUFBQTVELEdBQUEsT0FBQTRELFFBQUEsbUJBQUFDLFFBQUEsaUJBQUFBLE9BQUFDLFNBQUEsU0FBQTlELEdBQUEsY0FBQUEsQ0FBQSxXQUFBQSxHQUFBLE9BQUFBLEdBQUEsbUJBQUE2RCxRQUFBN0QsRUFBQWlCLGNBQUE0QyxRQUFBN0QsSUFBQTZELE9BQUE5QyxVQUFBLGdCQUFBZixDQUFBLEVBQUE0RCxRQUFBNUQsRUFBQSxVQUFBWSxlQUFBQyxTQUFBQyxZQUFBRCxTQUFBRSxVQUFBYixPQUFBYyxPQUFBRixXQUFBQyxXQUFBRixTQUFBRSxVQUFBRSxZQUFBSixTQUFBZCxnQkFBQWMsU0FBQUMsV0FBQSxVQUFBZixnQkFBQUMsRUFBQUMsR0FBQSxPQUFBRixnQkFBQUcsT0FBQUMsZUFBQUQsT0FBQUMsZUFBQUMsT0FBQSxTQUFBTCxnQkFBQUMsRUFBQUMsR0FBQSxPQUFBRCxFQUFBSyxVQUFBSixFQUFBRCxDQUFBLEVBQUFELGdCQUFBQyxFQUFBQyxFQUFBLFVBQUE2RixnQkFBQWpHLElBQUFrRyxJQUFBaEUsT0FBQSxPQUFBZ0UsSUFBQSxTQUFBQyxlQUFBeEIsR0FBQSxJQUFBUCxFQUFBLFNBQUFnQyxhQUFBekIsRUFBQUYsR0FBQSxhQUFBVixRQUFBWSxLQUFBQSxFQUFBLE9BQUFBLEVBQUEsSUFBQUMsRUFBQUQsRUFBQVgsT0FBQXFDLGFBQUEsWUFBQXpCLEVBQUEsS0FBQVIsRUFBQVEsRUFBQXJELEtBQUFvRCxFQUFBRixHQUFBLHdCQUFBVixRQUFBSyxHQUFBLE9BQUFBLEVBQUEsVUFBQXlCLFVBQUEsa0VBQUFwQixFQUFBNkIsT0FBQUMsUUFBQTVCLEVBQUEsQ0FBQXlCLENBQUF6QixFQUFBLDBCQUFBWixRQUFBSyxHQUFBQSxFQUFBQSxFQUFBLEdBQUErQixDQUFBRCxRQUFBbEcsSUFBQUssT0FBQW1HLGVBQUF4RyxJQUFBa0csSUFBQSxDQUFBaEUsTUFBQXVFLFlBQUEsRUFBQUMsY0FBQSxFQUFBQyxVQUFBLElBQUEzRyxJQUFBa0csS0FBQWhFLE1BQUFsQyxHQUFBLENBRTFCLElBQUl5TixXQUFhN04sb0JBQVEsd0JBRXJCZ0IsY0FBZ0JoQixvQkFBUSxrREFDeEJnRSxpQkFBbUJoRSxvQkFBUSxxREFDM0I2RCxXQUFhN0Qsb0JBQVEsK0NBQ3JCaU0sS0FBT2pNLG9CQUFRLHlDQUNmOE4sb0JBQXNCOU4sb0JBQVEsd0RBQzlCK04sa0JBQW9CL04sb0JBQVEsc0RBQzVCZ08sdUJBQXlCaE8sb0JBQVEsMkRBQ2pDaU8saUJBQW1Cak8sb0JBQVEscURBRXpCa08sU0FBUSxTQUFBbEgsa0JBQUEsU0FBQWtILFdBQUEsUUFBQWpILE1BQUFrRixLQUFBakwsVUFBQXNFLE9BQUE0RyxLQUFBLElBQUExSCxNQUFBeUgsTUFBQUUsS0FBQSxFQUFBQSxLQUFBRixLQUFBRSxPQUFBRCxLQUFBQyxNQUFBbkwsVUFBQW1MLE1BY1gsT0FkV2hHLGdCQUFBWSxNQUFBRCxpQkFBQXJGLEtBQUFWLE1BQUErRixpQkFBQSxPQUFBcEYsT0FBQXdLLFFBQUEscUJBWUcsU0FBQStCLE9BQ2JsSCxNQUFLakYsTUFBTWUsU0FBU3FMLEtBQUtDLE1BQU1GLE1BQU1HLE9BQU9oTSxPQUM5QyxJQUFDMkUsS0FBQSxDQUFBOUYsZUFBQStNLFNBQUFsSCxrQkFBQSxJQUFBdkYsT0FBQXlNLFNBQUE1TSxVQWNBLE9BZEFHLE9BUkQ4TSxtQkFBQSxTQUFBQSxxQkFDRSxJQUFNQyxLQUFPek0sS0FBSzBNLEtBQUtDLGdCQUN2QkYsS0FBS0csUUFDTEgsS0FBS0ksUUFDUCxFQUFDbk4sT0FNRDJHLE9BQUEsU0FBQUEsU0FDRSxPQUNFbkksT0FBQSxRQUFBMEMsY0FBQSxhQUFPLGdDQUVMMUMsT0FBQSxRQUFBMEMsY0FBQSxTQUNFd0YsS0FBSyxPQUNMN0YsTUFBTzhMLEtBQUtTLFVBQVU5TSxLQUFLQyxNQUFNOE0sZUFDakN2RyxJQUFJLGtCQUNKeEYsU0FBVWhCLEtBQUtpQixlQUl2QixFQUFDa0wsUUFBQSxDQTVCVyxDQUFTeEYsT0FBQUEsUUFBTUMsV0FBU3RDLGdCQUFoQzZILFNBQVEsWUFDTyxDQUNqQlksY0FBZWxHLFdBQUFBLFFBQVVDLE9BQU9DLFdBQ2hDL0YsU0FBVTZGLFdBQUFBLFFBQVVJLEtBQUtGLGFBQzFCLElBMkJrQmlHLFdBQVV4USxRQUFBQSxRQUFBLFNBQUEyTixtQkFTN0IsU0FBQTZDLFdBQVkvTSxPQUFPLElBQUFxRyxPQUVidkgsT0FEU3VGLGdCQUFiZ0MsT0FBQTZELGtCQUFBdkssS0FBQSxLQUFNSyxRQUFNLEtBQUMsbUJBa0RHLFNBQUN3RyxJQUFLQyxLQUN0QkosT0FBS2lFLFNBQVMsQ0FDWmdCLFlBQWE5RSxJQUNiK0UsWUFBYTlFLEtBRWpCLElBOENBcEMsZ0JBQUFnQyxPQUFBLG9CQUdtQixTQUFBMkcsdUJBQ2pCLElBQU14RyxJQUFNSCxPQUFLb0UsTUFBTWEsWUFDakI3RSxJQUFNSixPQUFLb0UsTUFBTWMsWUFHdkJsRixPQUFLNEcsWUFBWXpHLElBQUtDLElBQUssQ0FBQyxDQUFDdUcsd0JBQy9CLElBRUEzSSxnQkFBQWdDLE9BQUEsb0JBR21CLFdBQ2pCLElBQU02RyxZQUFjN0csT0FBS29FLE1BQU15QyxZQUN6QjFHLElBQU1ILE9BQUtvRSxNQUFNYSxZQUNqQjdFLElBQU1KLE9BQUtvRSxNQUFNYyxZQUN2QmxGLE9BQUs0RyxZQUFZekcsSUFBS0MsSUFBS3lHLFlBQzdCLElBRUE3SSxnQkFBQWdDLE9BQUEsa0JBR2lCLFNBQUF2SCxPQUNmdUgsT0FBS2lFLFNBQVMsQ0FDWjRDLFlBQWFwTyxPQUVqQixJQUVBdUYsZ0JBQUFnQyxPQUFBLGtCQUlpQixTQUFBOEcsTUFDZixHQUF3QixZQUFwQjlHLE9BQUtyRyxNQUFNK0gsTUFBMEMsaUJBQXBCMUIsT0FBS3JHLE1BQU0rSCxLQUU5QyxPQUFPLEVBRVQsSUFBSXFGLFFBQVUsRUFPZCxPQU5BRCxLQUFLdEgsU0FBUSxTQUFBVyxLQUNYQSxJQUFJWCxTQUFRLFNBQUE1RixNQUNWLElBQUlvTix3QkFBMEJwTixLQUFLcU4sd0JBQXdCOUosT0FDM0Q0SixTQUFXQyx1QkFDYixHQUNGLElBQ09ELE9BQ1QsSUFsSkUsSUFBTUcsVUFBWWxILE9BQUttSCxlQWVyQixPQVpBMU8sT0FERWtCLE1BQU15TixlQUNBek4sTUFBTXlOLGVBQWV4SCxLQUFJLFNBQUFPLEtBQUcsT0FBSUEsSUFBSVAsSUFBSXNILFVBQVVHLFlBQVksSUFFOUQxTixNQUFNMk4sS0FBSzFILEtBQUksU0FBQ08sSUFBSzhCLEdBQzNCLE9BQU85QixJQUFJUCxLQUFJLFNBQUMySCxTQUFVbkYsR0FDeEIsSUFBTW9GLGdCQUFrQjdOLE1BQU04TixZQUFZeEYsR0FBR0csR0FDN0MsT0FBTzhFLFVBQVVRLG1CQUFtQkgsU0FBVUMsZ0JBQ2hELEdBQ0YsSUFHRnhILE9BQUtvRSxNQUFRLENBQ1gzTCxNQUFPQSxRQUNQdUgsTUFDSixDQUFDbEgsZUFBQTROLFdBQUE3QyxtQkFBQSxJQUFBZ0IsUUFBQTZCLFdBQUF6TixVQWtNQSxPQWxNQTRMLFFBRURzQyxhQUFBLFNBQUFBLGVBQ0UsTUFBd0IsWUFBcEJ6TixLQUFLQyxNQUFNK0gsTUFBMEMsaUJBQXBCaEksS0FBS0MsTUFBTStILEtBQ3ZDOEQsV0FDRTlDLE1BQUFBLE1BQVVDLFVBQVVqSixLQUFLQyxNQUFNK0gsTUFDakNqSixNQUFBQSxNQUFNRCxRQUNKa0ssTUFBQUEsTUFBVWlGLGdCQUFnQmpPLEtBQUtDLE1BQU0rSCxNQUN2Q2pKLE1BQUFBLE1BQU1tUCxjQUNKbEYsTUFBQUEsTUFBVW1GLGNBQWNuTyxLQUFLQyxNQUFNK0gsTUFDckNqSixNQUFBQSxNQUFNcVAsWUFFUnJQLE1BQUFBLE1BQU0ySSxJQUNmLEVBQUN5RCxRQUVEa0QsZUFBQSxTQUFBQSxpQkFDRSxNQUF3QixXQUFwQnJPLEtBQUtDLE1BQU0rSCxLQUNOL0YsaUJBQ3NCLFlBQXBCakMsS0FBS0MsTUFBTStILEtBQ2JrRSxpQkFDc0IsaUJBQXBCbE0sS0FBS0MsTUFBTStILEtBQ2JpRSx1QkFDRWpELE1BQUFBLE1BQVVDLFVBQVVqSixLQUFLQyxNQUFNK0gsTUFDakMvSSxjQUNFK0osTUFBQUEsTUFBVWlGLGdCQUFnQmpPLEtBQUtDLE1BQU0rSCxNQUN2QytELG9CQUNFL0MsTUFBQUEsTUFBVW1GLGNBQWNuTyxLQUFLQyxNQUFNK0gsTUFDckNnRSxrQkFFRmxLLFVBQ1QsRUFTQXFKLFFBU0ErQixZQUFBLFNBQUFBLFlBQVl6RyxJQUFLQyxJQUFLNEgsVUFBVSxJQUFBQyxPQUFBLEtBQzlCLFFBQWlCN0ksSUFBYjRJLGVBQWtDNUksSUFBUmUsVUFBNkJmLElBQVJnQixJQUFuRCxDQWlCQSxJQUFNM0gsTUFBUWlCLEtBQUswSyxNQUFNM0wsTUFDekJ1UCxTQUFTeEksU0FBUSxTQUFDMEksT0FBUS9MLEdBQ3hCK0wsT0FBTzFJLFNBQVEsU0FBQzVGLEtBQU11TyxHQUNoQjFQLE1BQU0wSCxJQUFNaEUsSUFBTTFELE1BQU0wSCxJQUFNaEUsR0FBR2lFLElBQU0rSCxLQUN6QzFQLE1BQU0wSCxJQUFNaEUsR0FBR2lFLElBQU0rSCxHQUFLRixPQUFLZCxlQUFlRSxZQUFZek4sTUFFOUQsR0FDRixJQUVBLElBQU13TyxlQUFpQjNQLE1BQU1tSCxLQUFJLFNBQUFPLEtBQUcsT0FBSUEsSUFBSVAsS0FBSSxTQUFBaEcsTUFBSSxPQUFJQSxLQUFLMkYsV0FBVyxHQUFDLElBRXpFN0YsS0FBS0MsTUFBTTJGLFNBQVM4SSxnQkFDcEIxTyxLQUFLdUssU0FBUyxDQUNaeEwsT0E1QkYsQ0E4QkYsRUFBQ29NLFFBbUREOUUsT0FBQSxTQUFBQSxTQUNFLElBRUlzSSxXQUNBQyxpQkFDQUMsWUFKRTlQLE1BQVFpQixLQUFLMEssTUFBTTNMLE1BS25CMEgsSUFBTXpHLEtBQUswSyxNQUFNYSxZQUNqQjdFLElBQU0xRyxLQUFLMEssTUFBTWMsWUFDdkIsR0FBSXpNLE1BQU0wSCxNQUFRMUgsTUFBTTBILEtBQUtDLEtBQU0sQ0FDakMsSUFBTXhHLEtBQU9uQixNQUFNMEgsS0FBS0MsS0FDbEJvSSxZQUFjOU8sS0FBS3FPLGlCQUN6Qk0sV0FDRXpRLE9BQUEsUUFBQTBDLGNBQUNrTyxZQUFXLENBQ1Y1TyxLQUNBdUcsSUFDQUMsSUFDQWQsU0FBVTVGLEtBQUsrTyxtQkFHbkJILGlCQUNFMVEsT0FBQSxRQUFBMEMsY0FBQ3VMLFNBQVEsQ0FDUFksY0FBZTdNLEtBQUsyRixZQUNwQjdFLFNBQVVoQixLQUFLK08sbUJBR2YvTyxLQUFLMEssTUFBTXlDLGNBQ2IwQixZQUNFM1EsT0FBQSxRQUFBMEMsY0FBQSxVQUFRd0YsS0FBSyxTQUFTdUQsUUFBUzNKLEtBQUtnUCxrQkFDakMsa0JBQ0NoUCxLQUFLMEssTUFBTXlDLFlBQVkxSixPQUN2QixJQUNBekQsS0FBSzBLLE1BQU15QyxZQUFZLEdBQUcxSixPQUMxQixVQUlWLENBRUEsSUFBTTRKLFFBQVVyTixLQUFLaVAsZUFBZWxRLE9BRXBDLE9BQ0ViLE9BQUEsUUFBQTBDLGNBQUEsT0FBSzJGLFVBQVUsT0FDYnJJLE9BQUEsUUFBQTBDLGNBQUEsT0FBSzJGLFVBQVUsU0FDYnJJLE9BQUEsUUFBQTBDLGNBQUNzSixLQUFJLENBQ0huTCxNQUNBd00sWUFBYXZMLEtBQUswSyxNQUFNYSxZQUN4QkMsWUFBYXhMLEtBQUswSyxNQUFNYyxZQUN4QnhELEtBQU1oSSxLQUFLQyxNQUFNK0gsS0FDakJrRCxlQUFnQmxMLEtBQUtrTCxlQUNyQk8sa0JBQW1CekwsS0FBS2tQLGtCQUV6QjdCLFFBQVUsR0FDVG5QLE9BQUEsUUFBQTBDLGNBQUEsNkNBQUFmLE9BQXdDd04sUUFBTyx5SUFJaER1QixpQkFDQUMsYUFFRkYsV0FHUCxFQUFDM0IsVUFBQSxDQTlONEIsQ0FBU3JHLE9BQUFBLFFBQU1DLFdBQVN0QyxnQkFBbEMwSSxXQUFVLFlBQ1YsQ0FDakJVLGVBQWdCN0csV0FBQUEsUUFBVWdGLFFBQVFoRixXQUFBQSxRQUFVZ0YsUUFBUWhGLFdBQUFBLFFBQVVDLFNBQzlEOEcsS0FBTS9HLFdBQUFBLFFBQVVnRixRQUFRaEYsV0FBQUEsUUFBVXNJLE9BQ2xDcEIsWUFBYWxILFdBQUFBLFFBQVVnRixRQUFRaEYsV0FBQUEsUUFBVWdGLFFBQVFoRixXQUFBQSxRQUFVRyxTQUMzRGdCLEtBQU1uQixXQUFBQSxRQUFVb0QsT0FBT2xELFdBQ3ZCbkIsU0FBVWlCLFdBQUFBLFFBQVVJLEtBQUtGLGFBMk43QnFJLE9BQU9DLFVBQVlELE9BQU9DLFdBQWEsQ0FBQyxFQUN4Q0QsT0FBT0MsVUFBVXJDLFdBQWFBLFdBQVdqTCxPQUFBdkYsUUFBQUEsUUFBQSxPLDJMQ2hSekMsSUFBQXdCLE1BQUFDLG9CQUFBLGtEQUNBQyxPQUFBQyx1QkFBQUYsb0JBQUEsa0NBRUFHLGFBQUFELHVCQUFBRixvQkFBQSxnREFBc0MsU0FBQUUsdUJBQUFFLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLFVBQUFFLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFGLGdCQUFBRyxPQUFBQyxlQUFBRCxPQUFBQyxlQUFBQyxPQUFBLFNBQUFMLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFELEVBQUFLLFVBQUFKLEVBQUFELENBQUEsRUFBQUQsZ0JBQUFDLEVBQUFDLEVBQUEsQ0FFdEMsSUFBTXlQLGNBQWdCblAsTUFBQUEsTUFBTW1QLGNBRVUxUixRQUFBQSxRQUFBLFNBQUF3QyxhQUFBLFNBQUFnTixvQkFBQSxPQUFBaE4sWUFBQUUsTUFBQSxLQUFBQyxZQUFBLEtBcUNuQyxPQXpDbUMsU0FBQUMsZUFBQUMsU0FBQUMsWUFBQUQsU0FBQUUsVUFBQWIsT0FBQWMsT0FBQUYsV0FBQUMsV0FBQUYsU0FBQUUsVUFBQUUsWUFBQUosU0FBQWQsZ0JBQUFjLFNBQUFDLFdBQUEsQ0FJQUYsQ0FBQTRNLGtCQUFBaE4sYUFBQWdOLGtCQUFBek0sVUFJcENvQixhQUFBLFNBQUFBLGFBQWFaLFFBQ1gsT0FDRTdCLE9BQUEsUUFBQTBDLGNBQUEsV0FBQTVCLFlBQUFPLFVBQ1NvQixhQUFZZixLQUFDLEtBQUFHLFFBRXBCN0IsT0FBQSxRQUFBMEMsY0FBQSxTQUFPQyxRQUFRLG9CQUFtQixzQkFDakNuQyxPQUFPdUgsS0FBS2lJLGNBQWM3TixhQUFhNkYsS0FBSSxTQUFVRSxNQUNwRCxJQUFJN0YsTUFBUTJOLGNBQWM3TixZQUFZK0YsTUFDdEMsT0FDRWxJLE9BQUEsUUFBQTBDLGNBQUEsU0FBTzJGLFVBQVUsV0FBV2hDLElBQUs2QixNQUMvQmxJLE9BQUEsUUFBQTBDLGNBQUEsU0FDRXdGLEtBQUssV0FDTHRGLEtBQUssbUJBQ0xQLE1BQ0ErTyxRQUFTdlAsT0FBT3dQLGlCQUFpQkMsU0FBU2pQLE9BQzFDUyxTQUFVaEIsS0FBS2lCLGVBRWhCbUYsS0FHUCxHQUFHcEcsTUFFSDlCLE9BQUEsUUFBQTBDLGNBQUEsU0FBT0MsUUFBUSxnQkFBZSxrQkFDOUIzQyxPQUFBLFFBQUEwQyxjQUFBLFNBQ0VtSixNQUFPLENBQUMwRixPQUFRLEdBQ2hCckosS0FBSyxXQUNMdEYsS0FBSyxlQUNMd08sUUFBU3ZQLE9BQU8yUCxhQUNoQm5QLE1BQU8sRUFDUFMsU0FBVWhCLEtBQUtpQixlQUl2QixFQUFDK0ssaUJBQUEsQ0FyQ21DLENBQVNsSyxhQUFBQSxTQUFVQyxPQUFBdkYsUUFBQUEsUUFBQSxPLHlMQ1B6RCxJQUFBd0IsTUFBQUMsb0JBQUEsa0RBQ0FDLE9BQUFDLHVCQUFBRixvQkFBQSxrQ0FFQUcsYUFBQUQsdUJBQUFGLG9CQUFBLGdEQUFzQyxTQUFBRSx1QkFBQUUsS0FBQSxPQUFBQSxLQUFBQSxJQUFBQyxXQUFBRCxJQUFBLFNBQUFBLElBQUEsVUFBQUUsZ0JBQUFDLEVBQUFDLEdBQUEsT0FBQUYsZ0JBQUFHLE9BQUFDLGVBQUFELE9BQUFDLGVBQUFDLE9BQUEsU0FBQUwsZ0JBQUFDLEVBQUFDLEdBQUEsT0FBQUQsRUFBQUssVUFBQUosRUFBQUQsQ0FBQSxFQUFBRCxnQkFBQUMsRUFBQUMsRUFBQSxDQUN0QyxJQUFNMlAsWUFBY3JQLE1BQUFBLE1BQU1xUCxZQUNwQjdRLFdBQWE4RyxNQUFBQSxNQUFNOUcsV0FFYWYsUUFBQUEsUUFBQSxTQUFBd0MsYUFBQSxTQUFBZ04sb0JBQUEsT0FBQWhOLFlBQUFFLE1BQUEsS0FBQUMsWUFBQSxNQUpBLFNBQUFDLGVBQUFDLFNBQUFDLFlBQUFELFNBQUFFLFVBQUFiLE9BQUFjLE9BQUFGLFdBQUFDLFdBQUFGLFNBQUFFLFVBQUFFLFlBQUFKLFNBQUFkLGdCQUFBYyxTQUFBQyxXQUFBLENBSUFGLENBQUE0TSxrQkFBQWhOLGFBQUEsSUFBQVUsT0FBQXNNLGtCQUFBek0sVUErQm5DLE9BOUJERyxPQUdBQyxvQkFBQSxTQUFBQSxzQkFDRSxNQUFPLENBQUMsV0FBWSxjQUN0QixFQUVBRCxPQUdBaUIsYUFBQSxTQUFBQSxhQUFhWixRQUNYLE9BQ0U3QixPQUFBLFFBQUEwQyxjQUFBLFdBQ0daLEtBQUtrQyxnQkFBZ0JuQyxRQUV0QjdCLE9BQUEsUUFBQTBDLGNBQUEsU0FBT0MsUUFBUSxlQUFjLGlCQUM3QjNDLE9BQUEsUUFBQTBDLGNBQUEsVUFDRUUsS0FBSyxjQUNMUCxNQUFPUixPQUFPSyxZQUNkVyxTQUFVZixLQUFLQyxNQUFNQyxLQUFLeVAsWUFBY3BTLFdBQVdDLEtBQ25Ed0QsU0FBVWhCLEtBQUtpQixjQUVkdkMsT0FBT3VILEtBQUttSSxZQUFZL04sYUFBYTZGLEtBQUksU0FBQUUsTUFBSSxPQUM1Q2xJLE9BQUEsUUFBQTBDLGNBQUEsVUFBUTJELElBQUs2QixLQUFNN0YsTUFBTzZOLFlBQVkvTixZQUFZK0YsT0FDL0NBLEtBQUtELGNBQ0MsS0FLbkIsRUFBQzZGLGlCQUFBLENBL0JtQyxDQUFTbEssYUFBQUEsU0FBVUMsT0FBQXZGLFFBQUFBLFFBQUEsTyw4TENaekQsSUFBQTBCLE9BQUFDLHVCQUFBRixvQkFBQSxrQ0FFQWlKLFdBQUFqSixvQkFBQSw2QkFPQTJSLFdBQUF6Uix1QkFBQUYsb0JBQUEsd0NBRUFHLGFBQUFELHVCQUFBRixvQkFBQSxnREFBc0MsU0FBQUUsdUJBQUFFLEtBQUEsT0FBQUEsS0FBQUEsSUFBQUMsV0FBQUQsSUFBQSxTQUFBQSxJQUFBLFVBQUFrRSxlQUFBQyxJQUFBQyxHQUFBLGdCQUFBQyxnQkFBQUYsS0FBQSxHQUFBRyxNQUFBQyxRQUFBSixLQUFBLE9BQUFBLEdBQUEsQ0FBQUUsQ0FBQUYsTUFBQSxTQUFBSyxzQkFBQUMsRUFBQUMsR0FBQSxJQUFBQyxFQUFBLE1BQUFGLEVBQUEseUJBQUFULFFBQUFTLEVBQUFULE9BQUFDLFdBQUFRLEVBQUEsdUJBQUFFLEVBQUEsS0FBQUMsRUFBQUMsRUFBQVQsRUFBQVUsRUFBQUMsRUFBQSxHQUFBQyxHQUFBLEVBQUE3RSxHQUFBLFNBQUFpRSxHQUFBTyxFQUFBQSxFQUFBcEQsS0FBQWtELElBQUFRLEtBQUEsSUFBQVAsRUFBQSxJQUFBckUsT0FBQXNFLEtBQUFBLEVBQUEsT0FBQUssR0FBQSxjQUFBQSxHQUFBSixFQUFBUixFQUFBN0MsS0FBQW9ELElBQUFPLFFBQUFILEVBQUFJLEtBQUFQLEVBQUExQyxPQUFBNkMsRUFBQUssU0FBQVYsR0FBQU0sR0FBQSxVQUFBUCxHQUFBdEUsR0FBQSxFQUFBMEUsRUFBQUosQ0FBQSxpQkFBQU8sR0FBQSxNQUFBTCxFQUFBLFNBQUFHLEVBQUFILEVBQUEsU0FBQXRFLE9BQUF5RSxLQUFBQSxHQUFBLGtCQUFBM0UsRUFBQSxNQUFBMEUsQ0FBQSxTQUFBRSxDQUFBLEVBQUFQLENBQUFMLElBQUFDLElBQUEsU0FBQWlCLDRCQUFBbEYsRUFBQW1GLFFBQUEsSUFBQW5GLEVBQUEsMkJBQUFBLEVBQUEsT0FBQW9GLGtCQUFBcEYsRUFBQW1GLFFBQUEsSUFBQVQsRUFBQXhFLE9BQUFhLFVBQUFzRSxTQUFBakUsS0FBQXBCLEdBQUFzRixNQUFBLGlCQUFBWixHQUFBMUUsRUFBQWlCLGNBQUF5RCxFQUFBMUUsRUFBQWlCLFlBQUFxQixNQUFBLFdBQUFvQyxHQUFBLFFBQUFBLEVBQUEsT0FBQVAsTUFBQW9CLEtBQUF2RixHQUFBLGlCQUFBMEUsR0FBQSwyQ0FBQWMsS0FBQWQsR0FBQSxPQUFBVSxrQkFBQXBGLEVBQUFtRixPQUFBLENBQUFELENBQUFsQixJQUFBQyxJQUFBLFNBQUF3QixtQkFBQSxVQUFBQyxVQUFBLDZJQUFBRCxFQUFBLFVBQUFMLGtCQUFBcEIsSUFBQTJCLE1BQUEsTUFBQUEsS0FBQUEsSUFBQTNCLElBQUFpQixVQUFBVSxJQUFBM0IsSUFBQWlCLFFBQUEsUUFBQWhCLEVBQUEsRUFBQTJCLEtBQUEsSUFBQXpCLE1BQUF3QixLQUFBMUIsRUFBQTBCLElBQUExQixJQUFBMkIsS0FBQTNCLEdBQUFELElBQUFDLEdBQUEsT0FBQTJCLElBQUEsVUFBQTdGLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFGLGdCQUFBRyxPQUFBQyxlQUFBRCxPQUFBQyxlQUFBQyxPQUFBLFNBQUFMLGdCQUFBQyxFQUFBQyxHQUFBLE9BQUFELEVBQUFLLFVBQUFKLEVBQUFELENBQUEsRUFBQUQsZ0JBQUFDLEVBQUFDLEVBQUEsQ0FFdEMsSUFBTW9SLFFBQVUsQ0FDZEMsTUFBTyxFQUNQQyxNQUFPLEdBQ1BDLEtBQU0sRUFDTkMsUUFBUyxNQUNUQyxRQUFTLFFBQ1RDLFFBQVMsT0FDVEMsU0FBVSxRQUNWQyxrQkFBbUIsT0FDbkJDLGtCQUFtQixRQUNuQkMsa0JBQW1CLFFBQ25CQyxrQkFBbUIsUUFDbkJDLGtCQUFtQixRQUNuQkMsa0JBQW1CLFNBR2ZDLGdCQUFrQixDQUN0QixJQUFLbFUsV0FBQUEsVUFBVW1VLEtBQ2ZDLEtBQU1wVSxXQUFBQSxVQUFVRSxLQUNoQm1VLEtBQU1yVSxXQUFBQSxVQUFVSSxLQUNoQmtVLE1BQU90VSxXQUFBQSxVQUFVQyxNQUNqQnNVLE1BQU92VSxXQUFBQSxVQUFVRyxPQUd3QkosUUFBQUEsUUFBQSxTQUFBd0MsYUFBQSxTQUFBaU4seUJBQUEsT0FBQWpOLFlBQUFFLE1BQUEsS0FBQUMsWUFBQSxNQTFCTCxTQUFBQyxlQUFBQyxTQUFBQyxZQUFBRCxTQUFBRSxVQUFBYixPQUFBYyxPQUFBRixXQUFBQyxXQUFBRixTQUFBRSxVQUFBRSxZQUFBSixTQUFBZCxnQkFBQWMsU0FBQUMsV0FBQSxDQTBCS0YsQ0FBQTZNLHVCQUFBak4sYUFBQSxJQUFBVSxPQUFBdU0sdUJBQUExTSxVQW9GeEMsT0FuRkRHLE9BR0F1QixhQUFBLFNBQUFBLGVBQ0UsSUFBTWdRLEtBQU9qUixLQUFLaVIsTUFBUWpSLEtBQUtpUixLQUFLM0IsUUFDOUI0QixVQUFZbFIsS0FBS2tSLFdBQWFsUixLQUFLa1IsVUFBVTNRLFdBQVFtRixFQUUzRDFGLEtBQUtDLE1BQU0yRixTQUFTLENBQ2xCSSxTQUFXaUwsTUFBUUUsV0FBQUEsY0FBaUJuUixLQUFLb0csS0FBSzdGLE1BQzlDMlEsV0FFSixFQUVBeFIsT0FHQTJHLE9BQUEsU0FBQUEsU0FBUyxJQUFBbkIsTUFBQSxLQUNEa0IsTUFBUWtDLFdBQUFBLGFBQWV0SSxLQUFLQyxNQUFNQyxLQUFLa0ksVUFDdkM2SSxLQUFPM0ksV0FBQUEsYUFBZXRJLEtBQUtDLE1BQU1DLEtBQUtrSSxVQUU1QyxPQUNFbEssT0FBQSxRQUFBMEMsY0FBQSxRQUFNMkYsVUFBVSxpQkFLZHJJLE9BQUEsUUFBQTBDLGNBQUEsT0FBS3dRLElBQUtDLFdBQUFBLFFBQVdDLElBQUksS0FDekJwVCxPQUFBLFFBQUEwQyxjQUFBLGNBQ0UxQyxPQUFBLFFBQUEwQyxjQUFBLGNBQVEsaUJBQ1NaLEtBQUtDLE1BQU13RyxJQUFJLEtBQUd6RyxLQUFLQyxNQUFNeUcsSUFBSSxNQUlwRHhJLE9BQUEsUUFBQTBDLGNBQUEsU0FBT0MsUUFBUSxZQUFXLHlCQUMxQjNDLE9BQUEsUUFBQTBDLGNBQUEsVUFDRTRGLElBQUssU0FBQUEsSUFBQStLLEdBQ0hyTSxNQUFLa0IsS0FBT21MLENBQ2QsRUFDQXpRLEtBQUssV0FDTFAsTUFBTzZGLEtBQ1BwRixTQUFVaEIsS0FBS2lCLGNBRWR2QyxPQUFPOFMsUUFBUTNCLFNBQVMzSixLQUFJLFNBQUFWLE1BQUEsSUFBQUMsTUFBQWxELGVBQUFpRCxLQUFBLEdBQUUxRSxLQUFJMkUsTUFBQSxHQUFFbEYsTUFBS2tGLE1BQUEsVUFDeEN2SCxPQUFBLFFBQUEwQyxjQUFBLFVBQVFMLE1BQWNnRSxJQUFLaEUsT0FDeEJPLEtBQ00sS0FHWnNGLEtBQU8sT0FDTmxJLE9BQUEsUUFBQTBDLGNBQUEsWUFDRTFDLE9BQUEsUUFBQTBDLGNBQUEsU0FBT0MsUUFBUSxRQUFPLGdCQUN0QjNDLE9BQUEsUUFBQTBDLGNBQUEsU0FDRTRGLElBQUssU0FBQUEsSUFBQStLLEdBQ0hyTSxNQUFLK0wsS0FBT00sQ0FDZCxFQUNBelEsS0FBSyxPQUNMc0YsS0FBSyxXQUNMa0osUUFBUzJCLEtBQ1RqUSxTQUFVaEIsS0FBS2lCLGdCQUlwQm1GLE9BQVM3SSxXQUFBQSxXQUFXOEosYUFDbkJuSixPQUFBLFFBQUEwQyxjQUFBLFlBQ0UxQyxPQUFBLFFBQUEwQyxjQUFBLFNBQU9DLFFBQVEsYUFBWSxvQkFDM0IzQyxPQUFBLFFBQUEwQyxjQUFBLFVBQ0U0RixJQUFLLFNBQUFBLElBQUErSyxHQUNIck0sTUFBS2dNLFVBQVlLLENBQ25CLEVBQ0F6USxLQUFLLFlBQ0xQLE1BQU9QLEtBQUtDLE1BQU1DLEtBQUt1UixXQUN2QnpRLFNBQVVoQixLQUFLaUIsY0FFZHZDLE9BQU84UyxRQUFRYixpQkFBaUJ6SyxLQUFJLFNBQUF3TCxPQUFBLElBQUFDLE1BQUFwUCxlQUFBbVAsTUFBQSxHQUFFNVEsS0FBSTZRLE1BQUEsR0FBRXBSLE1BQUtvUixNQUFBLFVBQ2hEelQsT0FBQSxRQUFBMEMsY0FBQSxVQUFRTCxNQUFjZ0UsSUFBS2hFLE9BQ3hCTyxLQUNNLE1BT3ZCLEVBQUNtTCxzQkFBQSxDQXBGd0MsQ0FBU25LLGFBQUFBLFNBQVVDLE9BQUF2RixRQUFBQSxRQUFBLE8sd0xDaEM5RCxJQUFBMEIsT0FBQUMsdUJBQUFGLG9CQUFBLGtDQUVBaUosV0FBQWpKLG9CQUFBLDZCQVFBRyxhQUFBRCx1QkFBQUYsb0JBQUEsZ0RBQXNDLFNBQUFFLHVCQUFBRSxLQUFBLE9BQUFBLEtBQUFBLElBQUFDLFdBQUFELElBQUEsU0FBQUEsSUFBQSxVQUFBRSxnQkFBQUMsRUFBQUMsR0FBQSxPQUFBRixnQkFBQUcsT0FBQUMsZUFBQUQsT0FBQUMsZUFBQUMsT0FBQSxTQUFBTCxnQkFBQUMsRUFBQUMsR0FBQSxPQUFBRCxFQUFBSyxVQUFBSixFQUFBRCxDQUFBLEVBQUFELGdCQUFBQyxFQUFBQyxFQUFBLENBWXRDLElBQU1tVCxXQUFhLENBQ2pCLE1BQ0EsTUFDQSxVQUNBLFdBQ0EsVUFDQSxRQUNBLE1BQ0EsT0FDQSxTQUNBLFdBQ0EsU0FDQSxRQUNBLFFBQ0EsVUFDQSxRQUNBLFVBQ0EsU0FDQSxTQUNBLFFBQ0EsU0FDQSxVQUNBLFdBQ0EsV0FDQSxXQUNBLGFBQ0EsWUFDQSxhQUNBLGFBTUlDLGdCQUFrQixDQUN0QnJVLEtBQU1ELFdBQUFBLFdBQVdDLEtBQ2pCRSxLQUFNSCxXQUFBQSxXQUFXNkosYUFDakIwSyxNQUFPdlUsV0FBQUEsV0FBVzhKLGFBR2lCN0ssUUFBQUEsUUFBQSxTQUFBd0MsYUFBQSxTQUFBa04sbUJBQUEsT0FBQWxOLFlBQUFFLE1BQUEsS0FBQUMsWUFBQSxNQXBEQyxTQUFBQyxlQUFBQyxTQUFBQyxZQUFBRCxTQUFBRSxVQUFBYixPQUFBYyxPQUFBRixXQUFBQyxXQUFBRixTQUFBRSxVQUFBRSxZQUFBSixTQUFBZCxnQkFBQWMsU0FBQUMsV0FBQSxDQW9EREYsQ0FBQThNLGlCQUFBbE4sYUFBQSxJQUFBVSxPQUFBd00saUJBQUEzTSxVQXVHbEMsT0F0R0RHLE9BR0FDLG9CQUFBLFNBQUFBLHNCQUNFLE9BQU9YLFlBQUFPLFVBQ0pJLG9CQUFtQkMsS0FBQyxNQUNwQkMsT0FBTyxDQUFDLFFBQVMsT0FBUSxZQUFhLFVBQVcsVUFDdEQsRUFFQUgsT0FHQWlCLGFBQUEsU0FBQUEsYUFBYVosUUFDWCxPQUNFN0IsT0FBQSxRQUFBMEMsY0FBQSxXQUFBNUIsWUFBQU8sVUFDUzJDLGdCQUFldEMsS0FBQyxLQUFBRyxPQUFROFIsaUJBRTlCOVIsT0FBT2lHLFdBQWF6SSxXQUFBQSxXQUFXOEosYUFDOUJuSixPQUFBLFFBQUEwQyxjQUFBLFdBQ0UxQyxPQUFBLFFBQUEwQyxjQUFBLFNBQU9DLFFBQVEsVUFBUyxXQUN4QjNDLE9BQUEsUUFBQTBDLGNBQUEsVUFDRUUsS0FBSyxTQUNMUCxNQUFPUixPQUFPZ1MsT0FDZC9RLFNBQVVoQixLQUFLaUIsY0FFZi9DLE9BQUEsUUFBQTBDLGNBQUEsVUFBUUwsTUFBTSxhQUFZLFdBQ3pCcVIsV0FBVzFMLEtBQUksU0FBQzZMLE9BQVF0UCxHQUN2QixPQUNFdkUsT0FBQSxRQUFBMEMsY0FBQSxVQUFRMkQsSUFBS3dOLE9BQVF4UixNQUFPa0MsR0FDekJzUCxPQUdQLEtBR0Y3VCxPQUFBLFFBQUEwQyxjQUFBLFNBQU9DLFFBQVEsU0FBUSxXQUN2QjNDLE9BQUEsUUFBQTBDLGNBQUEsVUFDRUUsS0FBSyxRQUNMUCxNQUFPUixPQUFPaVMsTUFDZGhSLFNBQVVoQixLQUFLaUIsY0FFZi9DLE9BQUEsUUFBQTBDLGNBQUEsVUFBUUwsTUFBTSxhQUFZLFdBQ3pCN0IsT0FBT3VILEtBQUtnTSxXQUFBQSxhQUFhL0wsS0FBSSxTQUFBRSxNQUM1QixPQUNFbEksT0FBQSxRQUFBMEMsY0FBQSxVQUFRMkQsSUFBSzZCLEtBQU03RixNQUFPMFIsV0FBQUEsWUFBWTdMLE9BQ25DQSxLQUFLOEwsUUFBUSxLQUFNLEtBQUsvTCxjQUcvQixLQUdGakksT0FBQSxRQUFBMEMsY0FBQSxTQUFPQyxRQUFRLFFBQU8sVUFDdEIzQyxPQUFBLFFBQUEwQyxjQUFBLFVBQ0VFLEtBQUssT0FDTFAsTUFBT1IsT0FBT29TLEtBQ2RuUixTQUFVaEIsS0FBS2lCLGNBRWYvQyxPQUFBLFFBQUEwQyxjQUFBLFVBQVFMLE1BQU0sYUFBWSxXQUN6QjdCLE9BQU91SCxLQUFLbU0sV0FBQUEsWUFBWWxNLEtBQUksU0FBQUUsTUFDM0IsT0FDRWxJLE9BQUEsUUFBQTBDLGNBQUEsVUFBUTJELElBQUs2QixLQUFNN0YsTUFBTzZSLFdBQUFBLFdBQVdoTSxPQUNsQ0EsS0FBSzhMLFFBQVEsS0FBTSxLQUFLL0wsY0FHL0IsS0FHRmpJLE9BQUEsUUFBQTBDLGNBQUEsU0FBT0MsUUFBUSxhQUFZLGVBQzNCM0MsT0FBQSxRQUFBMEMsY0FBQSxVQUNFRSxLQUFLLFlBQ0xQLE1BQU9SLE9BQU9tUixVQUNkbFEsU0FBVWhCLEtBQUtpQixjQUVmL0MsT0FBQSxRQUFBMEMsY0FBQSxVQUFRTCxNQUFNLGFBQVksV0FDekI3QixPQUFPdUgsS0FBS3hKLFdBQUFBLFdBQVd5SixLQUFJLFNBQUFFLE1BQzFCLE9BQ0VsSSxPQUFBLFFBQUEwQyxjQUFBLFVBQVEyRCxJQUFLNkIsS0FBTTdGLE1BQU85RCxXQUFBQSxVQUFVMkosT0FDakNBLEtBQUs4TCxRQUFRLEtBQU0sS0FBSy9MLGNBRy9CLEtBR0ZqSSxPQUFBLFFBQUEwQyxjQUFBLFNBQU9DLFFBQVEsV0FBVSxhQUN6QjNDLE9BQUEsUUFBQTBDLGNBQUEsVUFDRUUsS0FBSyxVQUNMUCxNQUFPUixPQUFPc1MsUUFDZHJSLFNBQVVoQixLQUFLaUIsY0FFZi9DLE9BQUEsUUFBQTBDLGNBQUEsVUFBUUwsTUFBTSxhQUFZLFdBQ3pCN0IsT0FBT3VILEtBQUtxTSxXQUFBQSxVQUFVcE0sS0FBSSxTQUFBRSxNQUN6QixPQUNFbEksT0FBQSxRQUFBMEMsY0FBQSxVQUFRMkQsSUFBSzZCLEtBQU03RixNQUFPK1IsV0FBQUEsU0FBU2xNLE9BQ2hDQSxLQUFLOEwsUUFBUSxLQUFNLEtBQUsvTCxjQUcvQixNQU1aLEVBQUMrRixnQkFBQSxDQXZHa0MsQ0FBU3BLLGFBQUFBLFNBQVVDLE9BQUF2RixRQUFBQSxRQUFBLE8sa0NDbkV4RCxJQUFJa0wsS0FBTyxTQUFQQSxLQUFpQjFCLFNBQVVnTSxNQUFPRyxLQUFNakIsVUFBV21CLFFBQVNOLFFBSTlEL1IsS0FBS29JLFVBQVlwQyxTQUtqQmhHLEtBQUt1UyxPQUFTUCxNQUtkaFMsS0FBS3dTLE1BQVFMLEtBS2JuUyxLQUFLeVIsV0FBYVAsVUFLbEJsUixLQUFLeVMsU0FBV0osUUFLaEJyUyxLQUFLa0ksUUFBVTZKLE1BQ2pCLEVBRUFoUSxPQUFPdkYsUUFBVWtMLEtBS2pCQSxLQUFLbkksVUFBVTBJLFlBQWMsV0FDM0IsT0FBT2pJLEtBQUtvSSxTQUNkLEVBTUFWLEtBQUtuSSxVQUFVbVQsTUFBUSxXQVNyQixPQVJjLElBQUloTCxLQUNoQjFILEtBQUtvSSxVQUNMcEksS0FBS3VTLE9BQ0x2UyxLQUFLd1MsTUFDTHhTLEtBQUt5UixXQUNMelIsS0FBS3lTLFNBQ0x6UyxLQUFLa0ksUUFHVCxFQU1BUixLQUFLbkksVUFBVXNHLFVBQVksV0FDekIsTUFBTyxDQUNMRyxTQUFVaEcsS0FBS29JLFVBQ2Y0SixNQUFPaFMsS0FBS3VTLE9BQ1pKLEtBQU1uUyxLQUFLd1MsTUFDWHRCLFVBQVdsUixLQUFLeVIsV0FDaEJZLFFBQVNyUyxLQUFLeVMsU0FDZFYsT0FBUS9SLEtBQUtrSSxRQUVqQixFQU9BUixLQUFLaUcsWUFBYyxTQUFVcEksWUFDM0IsT0FBTyxJQUFJbUMsS0FDVG5DLFdBQVdTLFNBQ1hULFdBQVd5TSxNQUNYek0sV0FBVzRNLEtBQ1g1TSxXQUFXMkwsVUFDWDNMLFdBQVc4TSxRQUNYOU0sV0FBV3dNLE9BRWYsQywyN0RDb1BPLFNBQVNZLG1CQUFtQkMsZUFBZ0JDLGFBQ2pELElBQU1DLGdCQUNIRCxZQUFjRSx1QkFBeUJDLHFCQUMxQyxPQUFPOVYsS0FBSytWLElBQUksRUFBR0wsZ0JBQWtCRSxjQUN2QyxFLDhDQTlVTyxJQUFNYixZQUFXelYsUUFBQUEsWUFBRyxDQUN6QjBXLFVBQVcsRUFDWEMsS0FBTSxFQUNOQyxZQUFhLEVBQ2JDLE9BQVEsRUFDUkMsWUFBYSxFQUNiQyxLQUFNLEVBQ05DLFVBQVcsSUFXQS9XLFdBUlVELFFBQUFBLFdBQUcsQ0FDeEJpWCxXQUFZLEdBQ1pDLE1BQU8sSUFDUEwsT0FBUSxFQUNSTSxNQUFPLElBQ1BDLFdBQVksR0FHUXBYLFFBQUFBLFVBQUcsQ0FDdkJvVSxLQUFNLEVBQ05sVSxNQUFPLEVBQ1BDLEtBQU0sRUFDTkMsTUFBTyxFQUNQQyxLQUFNLEVBQ05nWCxVQUFXLEVBQ1hDLFVBQVcsRUFDWEMsVUFBVyxHQUNYQyxVQUFXLElBV1BDLEtBUmlCelgsUUFBQUEsV0FBRyxTQUFiMFgsV0FBdUJoRCxXQUNsQyxPQUFPQSxXQUFhLEdBQUt6VSxVQUFVSSxJQUNyQyxFQUV3QkwsUUFBQUEsWUFBRyxTQUFkMlgsWUFBd0JqRCxXQUNuQyxPQUFRQSxXQUFhLEVBQUssSUFBT3pVLFVBQVVDLEtBQzdDLEVBRVlELFdBTUMyWCw2QkFBNEI1WCxRQUFBQSw2QkFBRyxDQUMxQ3lYLElBQUl2WCxNQUNKdVgsSUFBSUosVUFDSkksSUFBSXRYLEtBQ0pzWCxJQUFJSCxVQUNKRyxJQUFJclgsTUFDSnFYLElBQUlGLFVBQ0pFLElBQUlwWCxLQUNKb1gsSUFBSUQsV0F5Qk9LLGVBbkJrQjdYLFFBQUFBLG1CQUFHLENBQUN5WCxJQUFJdlgsTUFBT3VYLElBQUlyWCxNQUFPcVgsSUFBSXRYLEtBQU1zWCxJQUFJcFgsTUFTdkNMLFFBQUFBLG9CQUFHLFNBQXRCOFgsb0JBQWdDL0wsRUFBR0csR0FFOUMsSUFBTTZMLGlCQUFtQnJYLEtBQUtzWCxNQUFNak0sR0FBSUcsR0FDbEMrTCxZQUFjdlgsS0FBS0MsR0FBSyxFQUV4QnVYLGdCQUFrQnhYLEtBQUt5WCxNQUFNSixpQkFBbUJFLGFBQWUsR0FBSyxFQUUxRSxPQUFPTCw2QkFBNkJNLGVBQ3RDLEVBRTBCbFksUUFBQUEsY0FBRyxDQUFDLEdBQzlCNlgsY0FBY0osSUFBSUgsV0FBYSxFQUMvQk8sY0FBY0osSUFBSXRYLE1BQVEsRUFDMUIwWCxjQUFjSixJQUFJSixXQUFhLEVBQy9CUSxjQUFjSixJQUFJdlgsT0FBUyxFQUMzQjJYLGNBQWNKLElBQUlELFdBQWEsRUFDL0JLLGNBQWNKLElBQUlwWCxNQUFRLEVBQzFCd1gsY0FBY0osSUFBSUYsV0FBYSxFQUV4QixJQUFNYSxxQkFBb0JwWSxRQUFBQSxxQkFBRyxDQUFDLEVBQ3JDb1kscUJBQXFCWCxJQUFJckQsTUFBUSxFQUNqQ2dFLHFCQUFxQlgsSUFBSXJYLE9BQVMsRUFDbENnWSxxQkFBcUJYLElBQUlILFdBQWEsRUFDdENjLHFCQUFxQlgsSUFBSXRYLE1BQVEsRUFDakNpWSxxQkFBcUJYLElBQUlKLFdBQWEsRUFDdENlLHFCQUFxQlgsSUFBSXZYLE9BQVMsRUFDbENrWSxxQkFBcUJYLElBQUlELFdBQWEsRUFDdENZLHFCQUFxQlgsSUFBSXBYLE1BQVEsRUFDakMrWCxxQkFBcUJYLElBQUlGLFdBQWEsRUFHL0IsSUFBTWMsc0NBQXFDclksUUFBQUEsc0NBQUcsQ0FBQyxFQUN0RHFZLHNDQUFzQ1osSUFBSXJELE1BQVEsRUFDbERpRSxzQ0FBc0NaLElBQUlyWCxPQUFTLEVBQ25EaVksc0NBQXNDWixJQUFJSCxXQUFhLEVBQ3ZEZSxzQ0FBc0NaLElBQUl0WCxNQUFRLEVBQ2xEa1ksc0NBQXNDWixJQUFJSixXQUFhLEVBQ3ZEZ0Isc0NBQXNDWixJQUFJdlgsT0FBUyxFQUNuRG1ZLHNDQUFzQ1osSUFBSUQsV0FBYSxFQUN2RGEsc0NBQXNDWixJQUFJcFgsTUFBUSxFQUNsRGdZLHNDQUFzQ1osSUFBSUYsV0FBYSxFQUdoRCxJQUFNZSw2Q0FBNEN0WSxRQUFBQSw2Q0FBRyxDQUFDLEVBQzdEc1ksNkNBQTZDYixJQUFJckQsTUFBUSxFQUN6RGtFLDZDQUE2Q2IsSUFBSXJYLE9BQVMsRUFDMURrWSw2Q0FBNkNiLElBQUlILFdBQWEsRUFDOURnQiw2Q0FBNkNiLElBQUl0WCxNQUFRLEVBQ3pEbVksNkNBQTZDYixJQUFJSixXQUFhLEVBQzlEaUIsNkNBQTZDYixJQUFJdlgsT0FBUyxFQUMxRG9ZLDZDQUE2Q2IsSUFBSUQsV0FBYSxFQUM5RGMsNkNBQTZDYixJQUFJcFgsTUFBUSxFQUN6RGlZLDZDQUE2Q2IsSUFBSUYsV0FBYSxFQUt2RCxJQUFNZ0IsWUFBV3ZZLFFBQUFBLFlBQUcsQ0FBQyxFQUM1QnVZLFlBQVlkLElBQUlyRCxNQUFRLENBQUNySSxFQUFHLEVBQUdHLEVBQUcsR0FDbENxTSxZQUFZZCxJQUFJdlgsT0FBUyxDQUFDNkwsRUFBRyxFQUFHRyxHQUFJLEdBQ3BDcU0sWUFBWWQsSUFBSXRYLE1BQVEsQ0FBQzRMLEVBQUcsRUFBR0csRUFBRyxHQUNsQ3FNLFlBQVlkLElBQUlyWCxPQUFTLENBQUMyTCxFQUFHLEVBQUdHLEVBQUcsR0FDbkNxTSxZQUFZZCxJQUFJcFgsTUFBUSxDQUFDMEwsR0FBSSxFQUFHRyxFQUFHLEdBQ25DcU0sWUFBWWQsSUFBSUosV0FBYSxDQUFDdEwsRUFBRyxFQUFHRyxHQUFJLEdBQ3hDcU0sWUFBWWQsSUFBSUgsV0FBYSxDQUFDdkwsRUFBRyxFQUFHRyxFQUFHLEdBQ3ZDcU0sWUFBWWQsSUFBSUYsV0FBYSxDQUFDeEwsR0FBSSxFQUFHRyxFQUFHLEdBQ3hDcU0sWUFBWWQsSUFBSUQsV0FBYSxDQUFDekwsR0FBSSxFQUFHRyxHQUFJLEdBQ3pDdUwsSUFBSWUsY0FBZ0IsU0FBVUMsS0FDNUIsT0FBT0YsWUFBWUUsSUFDckIsRUFFcUJ6WSxRQUFBQSxTQUFHLENBQ3RCMFksY0FBZSxFQUNmQyxXQUFZLEVBQ1pDLGFBQWMsRUFDZEMsWUFBYSxFQUNiQyxlQUFnQixFQUNoQkMsV0FBWSxFQUNaQyxRQUFTLEVBQ1RDLFVBQVcsRUFDWEMsU0FBVSxFQUNWQyxZQUFhLEdBQ2JDLGNBQWUsR0FDZkMsV0FBWSxHQUNaQyxhQUFjLEdBQ2RDLFlBQWEsR0FDYkMsZUFBZ0IsR0FDaEJDLGNBQWUsR0FDZkMsV0FBWSxHQUNaQyxhQUFjLEdBQ2RDLFlBQWEsR0FDYkMsZUFBZ0IsR0FDaEJDLGlCQUFrQixHQUNsQkMsY0FBZSxHQUNmQyxnQkFBaUIsR0FDakJDLGVBQWdCLEdBQ2hCQyxrQkFBbUIsSUF6QmQsSUFnQ01DLFNBQVFuYSxRQUFBQSxTQUFHLENBQUMsRUFFekJtYSxTQUFTMUMsSUFBSXZYLE9BQVMsQ0FBQyxFQUN2QmlhLFNBQVMxQyxJQUFJdlgsT0FBT3VYLElBQUl2WCxPQUFTdVgsSUFBSXZYLE1BQ3JDaWEsU0FBUzFDLElBQUl2WCxPQUFPdVgsSUFBSXRYLE1BQVFzWCxJQUFJSixVQUNwQzhDLFNBQVMxQyxJQUFJdlgsT0FBT3VYLElBQUlyWCxPQUFTcVgsSUFBSUosVUFDckM4QyxTQUFTMUMsSUFBSXZYLE9BQU91WCxJQUFJckQsTUFBUXFELElBQUlKLFVBQ3BDOEMsU0FBUzFDLElBQUl2WCxPQUFPdVgsSUFBSXBYLE1BQVFvWCxJQUFJRCxVQUNwQzJDLFNBQVMxQyxJQUFJdlgsT0FBT3VYLElBQUlKLFdBQWFJLElBQUlKLFVBQ3pDOEMsU0FBUzFDLElBQUl2WCxPQUFPdVgsSUFBSUgsV0FBYUcsSUFBSUosVUFDekM4QyxTQUFTMUMsSUFBSXZYLE9BQU91WCxJQUFJRixXQUFhRSxJQUFJRCxVQUN6QzJDLFNBQVMxQyxJQUFJdlgsT0FBT3VYLElBQUlELFdBQWFDLElBQUlELFVBRXpDMkMsU0FBUzFDLElBQUl0WCxNQUFRLENBQUMsRUFDdEJnYSxTQUFTMUMsSUFBSXRYLE1BQU1zWCxJQUFJdlgsT0FBU3VYLElBQUlKLFVBQ3BDOEMsU0FBUzFDLElBQUl0WCxNQUFNc1gsSUFBSXRYLE1BQVFzWCxJQUFJdFgsS0FDbkNnYSxTQUFTMUMsSUFBSXRYLE1BQU1zWCxJQUFJclgsT0FBU3FYLElBQUlILFVBQ3BDNkMsU0FBUzFDLElBQUl0WCxNQUFNc1gsSUFBSXJELE1BQVFxRCxJQUFJSCxVQUNuQzZDLFNBQVMxQyxJQUFJdFgsTUFBTXNYLElBQUlwWCxNQUFRb1gsSUFBSUgsVUFDbkM2QyxTQUFTMUMsSUFBSXRYLE1BQU1zWCxJQUFJSixXQUFhSSxJQUFJSixVQUN4QzhDLFNBQVMxQyxJQUFJdFgsTUFBTXNYLElBQUlILFdBQWFHLElBQUlILFVBQ3hDNkMsU0FBUzFDLElBQUl0WCxNQUFNc1gsSUFBSUYsV0FBYUUsSUFBSUgsVUFDeEM2QyxTQUFTMUMsSUFBSXRYLE1BQU1zWCxJQUFJRCxXQUFhQyxJQUFJSixVQUV4QzhDLFNBQVMxQyxJQUFJclgsT0FBUyxDQUFDLEVBQ3ZCK1osU0FBUzFDLElBQUlyWCxPQUFPcVgsSUFBSXZYLE9BQVN1WCxJQUFJSCxVQUNyQzZDLFNBQVMxQyxJQUFJclgsT0FBT3FYLElBQUl0WCxNQUFRc1gsSUFBSUgsVUFDcEM2QyxTQUFTMUMsSUFBSXJYLE9BQU9xWCxJQUFJclgsT0FBU3FYLElBQUlyWCxNQUNyQytaLFNBQVMxQyxJQUFJclgsT0FBT3FYLElBQUlyRCxNQUFRcUQsSUFBSXJELEtBQ3BDK0YsU0FBUzFDLElBQUlyWCxPQUFPcVgsSUFBSXBYLE1BQVFvWCxJQUFJRixVQUNwQzRDLFNBQVMxQyxJQUFJclgsT0FBT3FYLElBQUlKLFdBQWFJLElBQUlILFVBQ3pDNkMsU0FBUzFDLElBQUlyWCxPQUFPcVgsSUFBSUgsV0FBYUcsSUFBSUgsVUFDekM2QyxTQUFTMUMsSUFBSXJYLE9BQU9xWCxJQUFJRixXQUFhRSxJQUFJRixVQUN6QzRDLFNBQVMxQyxJQUFJclgsT0FBT3FYLElBQUlELFdBQWFDLElBQUlGLFVBRXpDNEMsU0FBUzFDLElBQUlwWCxNQUFRLENBQUMsRUFDdEI4WixTQUFTMUMsSUFBSXBYLE1BQU1vWCxJQUFJdlgsT0FBU3VYLElBQUlELFVBQ3BDMkMsU0FBUzFDLElBQUlwWCxNQUFNb1gsSUFBSXRYLE1BQVFzWCxJQUFJRixVQUNuQzRDLFNBQVMxQyxJQUFJcFgsTUFBTW9YLElBQUlyWCxPQUFTcVgsSUFBSUYsVUFDcEM0QyxTQUFTMUMsSUFBSXBYLE1BQU1vWCxJQUFJckQsTUFBUXFELElBQUlGLFVBQ25DNEMsU0FBUzFDLElBQUlwWCxNQUFNb1gsSUFBSXBYLE1BQVFvWCxJQUFJcFgsS0FDbkM4WixTQUFTMUMsSUFBSXBYLE1BQU1vWCxJQUFJSixXQUFhSSxJQUFJRCxVQUN4QzJDLFNBQVMxQyxJQUFJcFgsTUFBTW9YLElBQUlILFdBQWFHLElBQUlGLFVBQ3hDNEMsU0FBUzFDLElBQUlwWCxNQUFNb1gsSUFBSUYsV0FBYUUsSUFBSUYsVUFDeEM0QyxTQUFTMUMsSUFBSXBYLE1BQU1vWCxJQUFJRCxXQUFhQyxJQUFJRCxVQUV4QzJDLFNBQVMxQyxJQUFJSixXQUFhLENBQUMsRUFDM0I4QyxTQUFTMUMsSUFBSUosV0FBV0ksSUFBSXZYLE9BQVN1WCxJQUFJdlgsTUFDekNpYSxTQUFTMUMsSUFBSUosV0FBV0ksSUFBSXRYLE1BQVFzWCxJQUFJdFgsS0FDeENnYSxTQUFTMUMsSUFBSUosV0FBV0ksSUFBSXJYLE9BQVNxWCxJQUFJdFgsS0FDekNnYSxTQUFTMUMsSUFBSUosV0FBV0ksSUFBSXJELE1BQVFxRCxJQUFJdFgsS0FDeENnYSxTQUFTMUMsSUFBSUosV0FBV0ksSUFBSXBYLE1BQVFvWCxJQUFJdlgsTUFDeENpYSxTQUFTMUMsSUFBSUosV0FBV0ksSUFBSUosV0FBYUksSUFBSUosVUFDN0M4QyxTQUFTMUMsSUFBSUosV0FBV0ksSUFBSUgsV0FBYUcsSUFBSXRYLEtBQzdDZ2EsU0FBUzFDLElBQUlKLFdBQVdJLElBQUlGLFdBQWFFLElBQUl0WCxLQUM3Q2dhLFNBQVMxQyxJQUFJSixXQUFXSSxJQUFJRCxXQUFhQyxJQUFJdlgsTUFFN0NpYSxTQUFTMUMsSUFBSUgsV0FBYSxDQUFDLEVBQzNCNkMsU0FBUzFDLElBQUlILFdBQVdHLElBQUl2WCxPQUFTdVgsSUFBSXRYLEtBQ3pDZ2EsU0FBUzFDLElBQUlILFdBQVdHLElBQUl0WCxNQUFRc1gsSUFBSXRYLEtBQ3hDZ2EsU0FBUzFDLElBQUlILFdBQVdHLElBQUlyWCxPQUFTcVgsSUFBSXJYLE1BQ3pDK1osU0FBUzFDLElBQUlILFdBQVdHLElBQUlyRCxNQUFRcUQsSUFBSXJYLE1BQ3hDK1osU0FBUzFDLElBQUlILFdBQVdHLElBQUlwWCxNQUFRb1gsSUFBSXJYLE1BQ3hDK1osU0FBUzFDLElBQUlILFdBQVdHLElBQUlKLFdBQWFJLElBQUl0WCxLQUM3Q2dhLFNBQVMxQyxJQUFJSCxXQUFXRyxJQUFJSCxXQUFhRyxJQUFJSCxVQUM3QzZDLFNBQVMxQyxJQUFJSCxXQUFXRyxJQUFJRixXQUFhRSxJQUFJclgsTUFDN0MrWixTQUFTMUMsSUFBSUgsV0FBV0csSUFBSUQsV0FBYUMsSUFBSXJYLE1BRTdDK1osU0FBUzFDLElBQUlGLFdBQWEsQ0FBQyxFQUMzQjRDLFNBQVMxQyxJQUFJRixXQUFXRSxJQUFJdlgsT0FBU3VYLElBQUlwWCxLQUN6QzhaLFNBQVMxQyxJQUFJRixXQUFXRSxJQUFJdFgsTUFBUXNYLElBQUlyWCxNQUN4QytaLFNBQVMxQyxJQUFJRixXQUFXRSxJQUFJclgsT0FBU3FYLElBQUlyWCxNQUN6QytaLFNBQVMxQyxJQUFJRixXQUFXRSxJQUFJckQsTUFBUXFELElBQUlyWCxNQUN4QytaLFNBQVMxQyxJQUFJRixXQUFXRSxJQUFJcFgsTUFBUW9YLElBQUlwWCxLQUN4QzhaLFNBQVMxQyxJQUFJRixXQUFXRSxJQUFJSixXQUFhSSxJQUFJclgsTUFDN0MrWixTQUFTMUMsSUFBSUYsV0FBV0UsSUFBSUgsV0FBYUcsSUFBSXJYLE1BQzdDK1osU0FBUzFDLElBQUlGLFdBQVdFLElBQUlGLFdBQWFFLElBQUlGLFVBQzdDNEMsU0FBUzFDLElBQUlGLFdBQVdFLElBQUlELFdBQWFDLElBQUlwWCxLQUU3QzhaLFNBQVMxQyxJQUFJRCxXQUFhLENBQUMsRUFDM0IyQyxTQUFTMUMsSUFBSUQsV0FBV0MsSUFBSXZYLE9BQVN1WCxJQUFJdlgsTUFDekNpYSxTQUFTMUMsSUFBSUQsV0FBV0MsSUFBSXRYLE1BQVFzWCxJQUFJdlgsTUFDeENpYSxTQUFTMUMsSUFBSUQsV0FBV0MsSUFBSXJYLE9BQVNxWCxJQUFJcFgsS0FDekM4WixTQUFTMUMsSUFBSUQsV0FBV0MsSUFBSXJELE1BQVFxRCxJQUFJcFgsS0FDeEM4WixTQUFTMUMsSUFBSUQsV0FBV0MsSUFBSXBYLE1BQVFvWCxJQUFJcFgsS0FDeEM4WixTQUFTMUMsSUFBSUQsV0FBV0MsSUFBSUosV0FBYUksSUFBSXZYLE1BQzdDaWEsU0FBUzFDLElBQUlELFdBQVdDLElBQUlILFdBQWFHLElBQUlwWCxLQUM3QzhaLFNBQVMxQyxJQUFJRCxXQUFXQyxJQUFJRixXQUFhRSxJQUFJcFgsS0FDN0M4WixTQUFTMUMsSUFBSUQsV0FBV0MsSUFBSUQsV0FBYUMsSUFBSUQsVUFFN0MyQyxTQUFTMUMsSUFBSXJELE1BQVEsQ0FBQyxFQUN0QitGLFNBQVMxQyxJQUFJckQsTUFBTXFELElBQUl2WCxPQUFTdVgsSUFBSUgsVUFDcEM2QyxTQUFTMUMsSUFBSXJELE1BQU1xRCxJQUFJdFgsTUFBUXNYLElBQUlILFVBQ25DNkMsU0FBUzFDLElBQUlyRCxNQUFNcUQsSUFBSXJYLE9BQVNxWCxJQUFJclgsTUFDcEMrWixTQUFTMUMsSUFBSXJELE1BQU1xRCxJQUFJckQsTUFBUXFELElBQUlyRCxLQUNuQytGLFNBQVMxQyxJQUFJckQsTUFBTXFELElBQUlwWCxNQUFRb1gsSUFBSUYsVUFDbkM0QyxTQUFTMUMsSUFBSXJELE1BQU1xRCxJQUFJSixXQUFhSSxJQUFJSCxVQUN4QzZDLFNBQVMxQyxJQUFJckQsTUFBTXFELElBQUlILFdBQWFHLElBQUlILFVBQ3hDNkMsU0FBUzFDLElBQUlyRCxNQUFNcUQsSUFBSUYsV0FBYUUsSUFBSUYsVUFDeEM0QyxTQUFTMUMsSUFBSXJELE1BQU1xRCxJQUFJRCxXQUFhQyxJQUFJRixVQUVuQnZYLFFBQUFBLFNBQUcsQ0FDdEI2VyxPQUFRLEVBQ1J1RCxNQUFPLEVBQ1BDLE1BQU8sRUFDUEMsSUFBSyxHQUlxQ3RhLFFBQUFBLGdDQUFHLElBQ0hBLFFBQUFBLGdDQUFHLEdBRWRBLFFBQUFBLHFCQUFHeVYsWUFBWW9CLE9BQ2hCN1csUUFBQUEsb0JBQUcsRUFDaUJBLFFBQUFBLHdDQUFHLEVBRWxCQSxRQUFBQSx5QkFBR3lWLFlBQVlrQixLQUNJM1csUUFBQUEsNENBQUcsSUFFNUJBLFFBQUFBLG1CQUFHeVYsWUFBWWtCLEtBQ0kzVyxRQUFBQSxzQ0FBRyxJQW5COUMsSUEwQk1lLFdBQVVmLFFBQUFBLFdBQUcsQ0FDeEJnQixLQUFNLEVBQ040SixhQUFjLEVBQ2QyUCxXQUFZLEVBQ1p0WixLQUFNLEVBQ051WixXQUFZLEVBQ1ozUCxZQUFhLEdBQ2I0UCxhQUFjLEdBQ2RDLGFBQWMsR0FDZEMsYUFBYyxJQUNkQyxhQUFjLElBQ2RDLGFBQWMsSUFDZEMsYUFBYyxLQUNkQyxhQUFjLEtBQ2RDLGFBQWMsS0FDZEMsWUFBYSxLQUNiQyxhQUFjLE1BQ2RDLGFBQWMsT0FJSDVFLG9CQUFtQnZXLFFBQUFBLG9CQUM5QmUsV0FBVzBaLGFBQ1gxWixXQUFXMlosYUFDWDNaLFdBQVc0WixhQUNYNVosV0FBVzZaLGFBQ1g3WixXQUFXOFosYUFDWDlaLFdBQVcrWixhQUNYL1osV0FBV2dhLGFBQ1hoYSxXQUFXaWEsYUFFQXhFLHFCQUFvQnhXLFFBQUFBLHFCQUFHLEVBWWZBLFFBQUFBLFNBQUcsQ0FDdEJvYixZQUFhLEVBQ2JDLFlBQWEsRUFDYkMsV0FBWSxHQUhQLElBTU14UCxhQUFZOUwsUUFBQUEsYUFBRyxVQUNmbU0saUJBQWdCbk0sUUFBQUEsaUJBQUcsU0FDbkJnTSxpQkFBZ0JoTSxRQUFBQSxpQkFBRyxPQUVuQnViLGVBQWN2YixRQUFBQSxlQUN6QjhMLGFBQWVLLGlCQUFtQkgsaUJBQ3ZCd1AsZ0JBQWV4YixRQUFBQSxnQkFBRyxHQUNEQSxRQUFBQSxrQkFBR3diLGdCQUNIeGIsUUFBQUEsa0JBQUd3YixnQkFBa0IsRUFDekJ4YixRQUFBQSxjQUFHd2IsZ0JBQWtCLEVBQ3RCeGIsUUFBQUEsYUFBRyxHQUNHQSxRQUFBQSxtQkFBRyxFQUVWQSxRQUFBQSxZQUFHdWIsZUFBaUJ4YSxXQUFXRSxLQUdoQmpCLFFBQUFBLDRCQUFJLEtBQ1ZBLFFBQUFBLHNCQUFJLEVBRVpBLFFBQUFBLGFBQUcsU0FDSEEsUUFBQUEsYUFBRyxXQUNKQSxRQUFBQSxZQUFHLFVBQ0RBLFFBQUFBLGNBQUcsWUFFSkEsUUFBQUEsYUFBRyxLQUlhQSxRQUFBQSw2QkFBRyxFQUdUQSxRQUFBQSx1QkFBRyxHQUdYQSxRQUFBQSxlQUFHLElBQ0hBLFFBQUFBLGVBQUcsSUFDTUEsUUFBQUEsd0JBQUcsSUFDRkEsUUFBQUEseUJBQUcsS0FHTEEsUUFBQUEsdUJBQUcsSUFDTEEsUUFBQUEscUJBQUcsRUFDREEsUUFBQUEsdUJBQUcsRUFHWEEsUUFBQUEsZUFBRyxFQUdQQSxRQUFBQSxXQUFHLElBR0FBLFFBQUFBLGNBQUcsR0FHR0EsUUFBQUEsb0JBQUcsSUFJTUEsUUFBQUEsNkJBQUcsSUFFakJBLFFBQUFBLGVBQUcsUUFDSkEsUUFBQUEsY0FBRyxPQUNIQSxRQUFBQSxjQUFHLE9BQ0RBLFFBQUFBLGdCQUFHLE9BQ0VBLFFBQUFBLHFCQUFHLGFBQ0ZBLFFBQUFBLHNCQUFHLE9BSU5BLFFBQUFBLG1CQUFHLEUsK0hDdFpsQyxJQUFJeWIscUJBQXVCLG9CQUFRLHlEQUVuQyxTQUFTQyxnQkFBaUIsQ0FFMUJuVyxPQUFPdkYsUUFBVSxXQUNmLFNBQVMyYixLQUFLbFksTUFBT21ZLFNBQVVDLGNBQWVDLFNBQVVDLGFBQWNDLFFBQ3BFLEdBQUlBLFNBQVdQLHFCQUFmLENBSUEsSUFBSVEsSUFBTSxJQUFJQyxNQUNaLG1MQUtGLE1BREFELElBQUkzWCxLQUFPLHNCQUNMMlgsR0FQTixDQVFGLENBRUEsU0FBU0UsVUFDUCxPQUFPUixJQUNULENBSEFBLEtBQUtwUixXQUFhb1IsS0FNbEIsSUFBSVMsZUFBaUIsQ0FDbkJ6SixNQUFPZ0osS0FDUG5PLEtBQU1tTyxLQUNObFIsS0FBTWtSLEtBQ05uUixPQUFRbVIsS0FDUnJSLE9BQVFxUixLQUNSbE8sT0FBUWtPLEtBQ1JVLE9BQVFWLEtBRVJXLElBQUtYLEtBQ0x0TSxRQUFTOE0sUUFDVEksUUFBU1osS0FDVGEsV0FBWUwsUUFDWmxNLEtBQU0wTCxLQUNOYyxTQUFVTixRQUNWTyxNQUFPUCxRQUNQUSxVQUFXUixRQUNYUyxNQUFPVCxRQUNQVSxNQUFPVixTQU1ULE9BSEFDLGVBQWVVLGVBQWlCcEIsY0FDaENVLGVBQWUvUixVQUFZK1IsZUFFcEJBLGNBQ1QsQywrRkNoQ0U3VyxPQUFPdkYsUUFBVSxvQkFBUSx3REFBUixFLGdGQ2ZuQnVGLE9BQU92RixRQUZvQiw4Qyx5UUNUM0IsSUFBQTBCLE9BQUFDLHVCQUFBRixvQkFBQSxrQ0FFQXNiLFlBQUFwYix1QkFBQUYsb0JBQUEsZ0RBQXNDLFNBQUFFLHVCQUFBRSxLQUFBLE9BQUFBLEtBQUFBLElBQUFDLFdBQUFELElBQUEsU0FBQUEsSUFBQSxVQUFBbWIsV0FBQSxPQUFBQSxTQUFBOWEsT0FBQSthLE9BQUEvYSxPQUFBK2EsT0FBQTdhLE9BQUEsU0FBQTJOLFFBQUEsUUFBQTlKLEVBQUEsRUFBQUEsRUFBQXRELFVBQUFzRSxPQUFBaEIsSUFBQSxLQUFBaVgsT0FBQXZhLFVBQUFzRCxHQUFBLFFBQUE4QixPQUFBbVYsT0FBQWhiLE9BQUFhLFVBQUFvYSxlQUFBL1osS0FBQThaLE9BQUFuVixPQUFBZ0ksT0FBQWhJLEtBQUFtVixPQUFBblYsS0FBQSxRQUFBZ0ksTUFBQSxFQUFBaU4sU0FBQXRhLE1BQUEsS0FBQUMsVUFBQSxDQUFBM0MsUUFBQUEsUUFFdkIsQ0FDYm9kLFVBQVc1TSxZQUFBQSxTQUh5QixJQWlCaENVLGVBWGUsQ0FDbkIsQ0FBQyxTQUFVLFNBQVUsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQ3BDLENBQUMsU0FBVSxTQUFVLEVBQUcsTUFBTyxPQUFRLFFBQVMsRUFBRyxHQUNuRCxDQUFDLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FDdEIsQ0FBQyxFQUFHLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQ3ZCLENBQUMsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQUN0QixDQUFDLEVBQUcsRUFBRyxFQUFHLFFBQVMsTUFBTyxRQUFTLEVBQUcsR0FDdEMsQ0FBQyxFQUFHLFNBQVUsU0FBVSxFQUFHLEVBQUcsRUFBRyxFQUFHLFNBQ3BDLENBQUMsRUFBRyxTQUFVLFNBQVUsRUFBRyxFQUFHLEVBQUcsRUFBRyxJQUdGeEgsS0FBSSxTQUFVTyxLQUNoRCxPQUFPQSxJQUFJUCxLQUFJLFNBQVVoRyxNQUN2QixNQUFPLENBQUM4RixTQUFVOUYsS0FDcEIsR0FDRixJQUVNMlosU0FBVyxTQUFYQSxTQUFXeFAsTUFBSSxPQUNuQm5NLE9BQUEsUUFBQTBDLGNBQUEsT0FBS2taLEdBQUcsUUFDTjViLE9BQUEsUUFBQTBDLGNBQUMyWSxZQUFBLFFBQVVDLFNBQUEsQ0FBQzVULFNBQVUsU0FBQUEsV0FBTyxHQUFPeUUsT0FDaEMsR0FHa0M3TixRQUFBQSw4QkFBR3FkLFNBQVNqYixLQUFLLENBQUMsSUFDOUJ5TCxLQUFPLENBQ25DckMsS0FBTSxNQUNONEYsS0FBTSxDQUNKLENBQUMsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQUN0QixDQUFDLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FDdEIsQ0FBQyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQ3RCLENBQUMsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQUN0QixDQUFDLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FDdEIsQ0FBQyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQ3RCLENBQUMsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQUN0QixDQUFDLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsSUFFeEJHLFlBQWEsQ0FDWCxDQUFDLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FDdEIsQ0FBQyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQ3RCLENBQUMsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQUN0QixDQUFDLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FDdEIsQ0FBQyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQ3RCLENBQUMsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQUN0QixDQUFDLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FDdEIsQ0FBQyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLE1BSUl2UixRQUFBQSxrQkFBR3FkLFNBQVNqYixLQUFLLENBQUMsSUFDOUJ5TCxLQUFPLENBQ3ZCckMsS0FBTSxlQUNOMEYsZSxnR0MzREYzTCxPQUFPdkYsUUFBVSxzQkFBMEIsa0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvYm91bmNlL3RpbGVzLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9jb21wb25lbnRzL0JlZUNlbGxFZGl0b3IuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9jb21wb25lbnRzL0JvdW5jZUNlbGxFZGl0b3IuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9jb21wb25lbnRzL0NlbGxFZGl0b3IuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9jb21wb25lbnRzL0dyaWQuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9jb21wb25lbnRzL0dyaWRFZGl0b3IuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9jb21wb25lbnRzL0hhcnZlc3RlckNlbGxFZGl0b3IuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9jb21wb25lbnRzL1BsYW50ZXJDZWxsRWRpdG9yLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vY29tcG9uZW50cy9TdGFyV2Fyc0dyaWRDZWxsRWRpdG9yLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vY29tcG9uZW50cy9TdHVkaW9DZWxsRWRpdG9yLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvc3R1ZGlvL2NlbGwuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3N0dWRpby9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vY29tcG9uZW50cy9HcmlkRWRpdG9yLnN0b3J5LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zdGF0aWMvY29kZV9zdHVkaW8vdGlsZS1ndWlkZS5wbmciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb25zdGFudHMgZm9yIGNhcmRpbmFsIGRpcmVjdGlvbnMuICBTdWJzZXF1ZW50IGNvZGUgYXNzdW1lcyB0aGVzZSBhcmVcbiAqIGluIHRoZSByYW5nZSAwLi4zIGFuZCB0aGF0IG9wcG9zaXRlcyBoYXZlIGFuIGFic29sdXRlIGRpZmZlcmVuY2Ugb2YgMi5cbiAqIEBlbnVtIHtudW1iZXJ9XG4gKi9cbmV4cG9ydHMuRGlyZWN0aW9uID0ge1xuICBOT1JUSDogMCxcbiAgRUFTVDogMSxcbiAgU09VVEg6IDIsXG4gIFdFU1Q6IDMsXG59O1xuXG5leHBvcnRzLlBBRERMRV9CQUxMX0NPTExJREVfRElTVEFOQ0UgPSAwLjc7XG5leHBvcnRzLkZJTklTSF9DT0xMSURFX0RJU1RBTkNFID0gMC41O1xuZXhwb3J0cy5ERUZBVUxUX0JBTExfU1BFRUQgPSAwLjE7XG5leHBvcnRzLkRFRkFVTFRfQkFMTF9ESVJFQ1RJT04gPSAxLjI1ICogTWF0aC5QSTtcbmV4cG9ydHMuREVGQVVMVF9QQURETEVfU1BFRUQgPSAwLjE7XG5leHBvcnRzLkRFRkFVTFRfQkFMTF9TVEFSVF9ZID0gMjtcbmV4cG9ydHMuWV9UT1BfQk9VTkRBUlkgPSAtMC4yO1xuXG4vKipcbiAqIFRoZSB0eXBlcyBvZiBzcXVhcmVzIGluIHRoZSBtYXplLCB3aGljaCBpcyByZXByZXNlbnRlZFxuICogYXMgYSAyRCBhcnJheSBvZiBTcXVhcmVUeXBlIHZhbHVlcy5cbiAqIEBlbnVtIHtudW1iZXJ9XG4gKi9cbmV4cG9ydHMuU3F1YXJlVHlwZSA9IHtcbiAgT1BFTjogMCxcbiAgV0FMTDogMSxcbiAgR09BTDogMixcbiAgQkFMTFNUQVJUOiA0LFxuICBQQURETEVGSU5JU0g6IDgsXG4gIFBBRERMRVNUQVJUOiAxNixcbiAgQkFMTEZJTklTSDogMzIsXG4gIE9CU1RBQ0xFOiA2NCxcbn07XG4iLCIvKipcbiAqIEBvdmVydmlldyBSZWFjdCBjb21wb25lbnQgdG8gYWxsb3cgZm9yIGVhc3kgZWRpdGluZyBhbmQgY3JlYXRpb24gb2YgQmVlQ2VsbHNcbiAqIEBzZWUgQGNvZGUtZG90LW9yZy9tYXplL3NyYy9iZWVDZWxsXG4gKi9cblxuaW1wb3J0IHtjZWxsc30gZnJvbSAnQGNvZGUtZG90LW9yZy9tYXplJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBDZWxsRWRpdG9yIGZyb20gJy4vQ2VsbEVkaXRvcic7XG5cbmNvbnN0IEJlZUNlbGwgPSBjZWxscy5CZWVDZWxsO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCZWVDZWxsRWRpdG9yIGV4dGVuZHMgQ2VsbEVkaXRvciB7XG4gIC8qKlxuICAgKiBAb3ZlcnJpZGVcbiAgICovXG4gIGdldFNlbGVjdEZpZWxkTmFtZXMoKSB7XG4gICAgcmV0dXJuIHN1cGVyXG4gICAgICAuZ2V0U2VsZWN0RmllbGROYW1lcygpXG4gICAgICAuY29uY2F0KFsnZmVhdHVyZVR5cGUnLCAnY2xvdWRUeXBlJywgJ2Zsb3dlckNvbG9yJ10pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgZ2V0U2FuaXRpemVkVmFsdWVzKCkge1xuICAgIGNvbnN0IHZhbHVlcyA9IHN1cGVyLmdldFNhbml0aXplZFZhbHVlcygpO1xuXG4gICAgLy8gSWYgdGhlIGNlbGwgaXMgYSB2YXJpYWJsZSBjbG91ZCwgaXRzIGZlYXR1cmUgTVVTVCBiZSB2YXJpYWJsZVxuICAgIGlmICh0aGlzLnByb3BzLmNlbGwuaXNWYXJpYWJsZUNsb3VkKCkpIHtcbiAgICAgIHZhbHVlcy5mZWF0dXJlVHlwZSA9IEJlZUNlbGwuRmVhdHVyZVR5cGUuVkFSSUFCTEU7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhlIGNlbGwgaGFzIG5vIGZlYXR1cmVzLCBpdCBzaG91bGQgaGF2ZSBuZWl0aGVyIHZhbHVlIG5vclxuICAgIC8vIHJhbmdlXG4gICAgaWYgKHZhbHVlcy5mZWF0dXJlVHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhbHVlcy52YWx1ZSA9ICcnO1xuICAgICAgdmFsdWVzLnJhbmdlID0gJyc7XG4gICAgfVxuXG4gICAgLy8gRmxvd2VyQ29sb3Igb25seSBtYWtlcyBzZW5zZSBpZiB0aGUgY2VsbCBpcyBhIGZsb3dlclxuICAgIGlmICghdGhpcy5wcm9wcy5jZWxsLmlzRmxvd2VyKCkpIHtcbiAgICAgIHZhbHVlcy5mbG93ZXJDb2xvciA9ICcnO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZXM7XG4gIH1cblxuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICByZW5kZXJGaWVsZHModmFsdWVzKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIHtzdXBlci5yZW5kZXJGaWVsZHModmFsdWVzKX1cblxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImZlYXR1cmVUeXBlXCI+RmVhdHVyZSBUeXBlOjwvbGFiZWw+XG4gICAgICAgIDxzZWxlY3RcbiAgICAgICAgICBuYW1lPVwiZmVhdHVyZVR5cGVcIlxuICAgICAgICAgIHZhbHVlPXt2YWx1ZXMuZmVhdHVyZVR5cGV9XG4gICAgICAgICAgZGlzYWJsZWQ9e3RoaXMucHJvcHMuY2VsbC5pc1ZhcmlhYmxlQ2xvdWQoKX1cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgID5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwidW5kZWZpbmVkXCI+bm9uZTwvb3B0aW9uPlxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9e0JlZUNlbGwuRmVhdHVyZVR5cGUuSElWRX0+aGl2ZTwvb3B0aW9uPlxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9e0JlZUNlbGwuRmVhdHVyZVR5cGUuRkxPV0VSfT5mbG93ZXI8L29wdGlvbj5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPXtCZWVDZWxsLkZlYXR1cmVUeXBlLlZBUklBQkxFfT52YXJpYWJsZTwvb3B0aW9uPlxuICAgICAgICA8L3NlbGVjdD5cblxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImNsb3VkVHlwZVwiPkNsb3VkIFR5cGU6PC9sYWJlbD5cbiAgICAgICAgPHNlbGVjdFxuICAgICAgICAgIG5hbWU9XCJjbG91ZFR5cGVcIlxuICAgICAgICAgIHZhbHVlPXt2YWx1ZXMuY2xvdWRUeXBlfVxuICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cbiAgICAgICAgPlxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJ1bmRlZmluZWRcIj5ub25lPC9vcHRpb24+XG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT17QmVlQ2VsbC5DbG91ZFR5cGUuU1RBVElDfT5jbGFzc2ljPC9vcHRpb24+XG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT17QmVlQ2VsbC5DbG91ZFR5cGUuSElWRV9PUl9GTE9XRVJ9PlxuICAgICAgICAgICAgaGl2ZSBvciBmbG93ZXJcbiAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPXtCZWVDZWxsLkNsb3VkVHlwZS5GTE9XRVJfT1JfTk9USElOR30+XG4gICAgICAgICAgICBmbG93ZXIgb3Igbm90aGluZ1xuICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9e0JlZUNlbGwuQ2xvdWRUeXBlLkhJVkVfT1JfTk9USElOR30+XG4gICAgICAgICAgICBoaXZlIG9yIG5vdGhpbmdcbiAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPXtCZWVDZWxsLkNsb3VkVHlwZS5BTll9PmFueTwvb3B0aW9uPlxuICAgICAgICA8L3NlbGVjdD5cblxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImZsb3dlckNvbG9yXCI+Rmxvd2VyIENvbG9yOjwvbGFiZWw+XG4gICAgICAgIDxzZWxlY3RcbiAgICAgICAgICBuYW1lPVwiZmxvd2VyQ29sb3JcIlxuICAgICAgICAgIHZhbHVlPXt2YWx1ZXMuZmxvd2VyQ29sb3J9XG4gICAgICAgICAgZGlzYWJsZWQ9eyF0aGlzLnByb3BzLmNlbGwuaXNGbG93ZXIoKX1cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgID5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwidW5kZWZpbmVkXCI+ZGVmYXVsdDwvb3B0aW9uPlxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9e0JlZUNlbGwuRmxvd2VyQ29sb3IuUkVEfT5yZWQ8L29wdGlvbj5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPXtCZWVDZWxsLkZsb3dlckNvbG9yLlBVUlBMRX0+cHVycGxlPC9vcHRpb24+XG4gICAgICAgIDwvc2VsZWN0PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBAb3ZlcnZpZXcgUmVhY3QgY29tcG9uZW50IHRvIGFsbG93IGZvciBlYXN5IGVkaXRpbmcgYW5kIGNyZWF0aW9uIG9mXG4gKiBCb3VuY2UgbWFwc1xuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7U3F1YXJlVHlwZX0gZnJvbSAnQGNkby9hcHBzL2JvdW5jZS90aWxlcyc7XG5cbmltcG9ydCBDZWxsRWRpdG9yIGZyb20gJy4vQ2VsbEVkaXRvcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvdW5jZUNlbGxFZGl0b3IgZXh0ZW5kcyBDZWxsRWRpdG9yIHtcbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgcmVuZGVyRmllbGRzKHZhbHVlcykge1xuICAgIHJldHVybiA8ZGl2PntzdXBlci5yZW5kZXJUaWxlVHlwZXModmFsdWVzLCBTcXVhcmVUeXBlKX08L2Rpdj47XG4gIH1cbn1cbiIsIi8qKlxuICogQG92ZXJ2aWV3IFJlYWN0IGNvbXBvbmVudCB0byBhbGxvdyBmb3IgZWFzeSBlZGl0aW5nIGFuZCBjcmVhdGlvbiBvZiBDZWxscy5cbiAqIGNhbiBiZSBleHRlbmRlZCB0byBhbGxvdyBmb3IgZWRpdGluZyBvZiB2YXJpb3VzIHNwZWNpYWxpemVkIGtpbmRzIG9mIGNlbGxzLlxuICogQHNlZSBAY29kZS1kb3Qtb3JnL21hemUvc3JjL2NlbGxcbiAqL1xuaW1wb3J0IHt0aWxlc30gZnJvbSAnQGNvZGUtZG90LW9yZy9tYXplJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jb25zdCBTcXVhcmVUeXBlID0gdGlsZXMuU3F1YXJlVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2VsbEVkaXRvciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY2VsbDogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHJvdzogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIGNvbDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIG9uVXBkYXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlID0gdGhpcy5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZUNoYW5nZSgpIHtcbiAgICAvLyBTZXJpYWxpemUgdGhlIGZvcm0gZGF0YSB0byBhbiBpdGVyYXRvclxuICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKHRoaXMuZm9ybSk7XG5cbiAgICAvLyBDb252ZXJ0IHRoZSBpdGVyYXRvciB0byBhbiBhcnJheSBhbmQgcmVkdWNlIGl0IHRvIGFuIG9iamVjdCwgY29tYmluaW5nXG4gICAgLy8gZHVwbGljYXRlIG5hbWVzIHdoZW4gYXBwcm9wcmlhdGUgKGllIGZvciBjaGVja2JveGVzKVxuICAgIGNvbnN0IHZhbHVlcyA9IEFycmF5LmZyb20oZm9ybURhdGEpLnJlZHVjZSgoc2VyaWFsaXplZCwgW25hbWUsIHZhbHVlXSkgPT4ge1xuICAgICAgaWYgKHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbHVlID0gaXNOYU4odmFsdWUpID8gJycgOiBOdW1iZXIodmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmFtZSBpbiBzZXJpYWxpemVkKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNlcmlhbGl6ZWRbbmFtZV0pKSB7XG4gICAgICAgICAgc2VyaWFsaXplZFtuYW1lXS5wdXNoKHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXJpYWxpemVkW25hbWVdID0gW3NlcmlhbGl6ZWRbbmFtZV0sIHZhbHVlXTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VyaWFsaXplZFtuYW1lXSA9IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc2VyaWFsaXplZDtcbiAgICB9LCB7fSk7XG5cbiAgICB0aGlzLnByb3BzLm9uVXBkYXRlKHZhbHVlcyk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFuIGFycmF5IG9mIHRoZSBuYW1lcyBvZiB0aGUgc2VsZWN0IGZpZWxkcyBjcmVhdGVkIGJ5IHRoZSByZW5kZXJcbiAgICogbWV0aG9kOyB1c2VkIHRvIHNhbml0aXplIHRoZSB2YWx1ZXMgdGhhdCBhcmUgZ29pbmcgdG8gYmUgcGFzc2VkIHRvIHRoZVxuICAgKiByZW5kZXJGaWVsZHMgaGVscGVyIG1ldGhvZC5cbiAgICpcbiAgICogQHJldHVybiB7U3RyaW5nW119XG4gICAqL1xuICBnZXRTZWxlY3RGaWVsZE5hbWVzKCkge1xuICAgIHJldHVybiBbJ3RpbGVUeXBlJ107XG4gIH1cblxuICAvKipcbiAgICogR2V0IGEgc2FuaXRpemVkIHNldCBvZiBuYW1lOnZhbHVlIHBhaXJzIGZvciByZW5kZXJpbmc7IGJ5IGRlZmF1bHQsIHNpbXBseVxuICAgKiBzZXRzIHVuZGVmaW5lZCB2YWx1ZXMgdGhhdCBhcmUgaW50ZW5kZWQgdG8gZ28gaW50byA8c2VsZWN0Lz5zIHRvIHRoZSBzdHJpbmdcbiAgICogJ3VuZGVmaW5lZCcgc28gd2UgYXJlbid0IHRyeWluZyB0byBzd2l0Y2ggdGhlbSBmcm9tIHVuY29udHJvbGxlZCB0b1xuICAgKiBjb250cm9sbGVkIGNvbXBvbmVudHMgYXQgcnVudGltZS5cbiAgICpcbiAgICogQ2FuIGJlIG92ZXJyaWRkZW4gYnkgaW5oZXJpdGluZyBjbGFzc2VzIHRvIGRvIG1vcmUgY29tcGxleCBzYW5pdGl6YXRpb24uXG4gICAqIHNlZSBCZWVDZWxsRWRpdG9yIGZvciBhbiBleGFtcGxlXG4gICAqXG4gICAqIEByZXR1cm4ge09iamVjdH1cbiAgICovXG4gIGdldFNhbml0aXplZFZhbHVlcygpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSB0aGlzLnByb3BzLmNlbGwuc2VyaWFsaXplKCk7XG5cbiAgICAvLyBXZSB3YW50IHVuZGVmaW5lZCB2YWx1ZXMgdGhhdCBhcmUgZ29pbmcgdG8gYmUgaW4gPHNlbGVjdHM+IHRvXG4gICAgLy8gYWN0dWFsbHkgYmUgdGhlIFNUUklORyAndW5kZWZpbmVkJyByYXRoZXIgdGhhbiB0aGUgdmFsdWUuXG4gICAgdGhpcy5nZXRTZWxlY3RGaWVsZE5hbWVzKCkuZm9yRWFjaCh2YWx1ZSA9PiB7XG4gICAgICBpZiAodmFsdWVzW3ZhbHVlXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhbHVlc1t2YWx1ZV0gPSAndW5kZWZpbmVkJztcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiB2YWx1ZXM7XG4gIH1cblxuICAvKipcbiAgICogUmVuZGVyIGp1c3QgdGhlIHRpbGVUeXBlcyBzZWxlY3RvcjsgdGhpcyBoZWxwZXIgbWV0aG9kIGlzIHByb3ZpZGVkIGJlY2F1c2UsXG4gICAqIHVubGlrZSB2YWx1ZSBhbmQgcmFuZ2UsIHRpbGVUeXBlcyBhcmUgdXNlZCBieSBhbGwgaW5oZXJpdGluZyBjbGFzc2VzLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gdmFsdWVzIC0gdGhpcy5nZXRTYW5pdGl6ZWRWYWx1ZXMoKVxuICAgKiBAcGFyYW0ge09iamVjdH0gc3F1YXJlVHlwZSAtIGtleS92YWx1ZSBwYWlycyByZXByZXNlbnRpbmcgdGhlIHRpbGUgdHlwZXMgdG9cbiAgICogICAgICAgIHJlbmRlci4gRGVmYXVsdHMgdG8gbWF6ZS50aWxlcy5TcXVhcmVUeXBlXG4gICAqIEByZXR1cm4ge0VsZW1lbnR9XG4gICAqL1xuICByZW5kZXJUaWxlVHlwZXModmFsdWVzLCBzcXVhcmVUeXBlcyA9IFNxdWFyZVR5cGUpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJ0aWxlVHlwZVwiPlRpbGUgVHlwZSAocmVxdWlyZWQpOjwvbGFiZWw+XG4gICAgICAgIDxzZWxlY3RcbiAgICAgICAgICBuYW1lPVwidGlsZVR5cGVcIlxuICAgICAgICAgIHZhbHVlPXt2YWx1ZXMudGlsZVR5cGV9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICA+XG4gICAgICAgICAge09iamVjdC5rZXlzKHNxdWFyZVR5cGVzKS5tYXAoa2V5ID0+IChcbiAgICAgICAgICAgIDxvcHRpb24ga2V5PXtrZXl9IHZhbHVlPXtzcXVhcmVUeXBlc1trZXldfT5cbiAgICAgICAgICAgICAge2tleS50b0xvd2VyQ2FzZSgpfVxuICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvc2VsZWN0PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW5kZXIgYWxsIGZpZWxkcyBmb3IgdGhpcyBmb3JtLiBNb3N0IGNoaWxkcmVuIHdpbGwgd2FudCB0byBvdmVycmlkZSB0aGlzXG4gICAqIG1ldGhvZCByYXRoZXIgdGhhbiB0aGUgaGlnaGVyLWxldmVsIHJlbmRlciBtZXRob2QgdG8gYXV0b21hdGljYWxseSBnZXQgdGhlXG4gICAqIHNhbml0aXplZCB2YWx1ZXMgYW5kIGhlYWRlciBkaXNwbGF5LlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gdmFsdWVzIC0gdGhpcy5nZXRTYW5pdGl6ZWRWYWx1ZXMoKVxuICAgKiBAcmV0dXJuIHtFbGVtZW50fVxuICAgKi9cbiAgcmVuZGVyRmllbGRzKHZhbHVlcykge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7dGhpcy5yZW5kZXJUaWxlVHlwZXModmFsdWVzKX1cblxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInZhbHVlXCI+VmFsdWU6PC9sYWJlbD5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgbmFtZT1cInZhbHVlXCJcbiAgICAgICAgICB2YWx1ZT17dmFsdWVzLnZhbHVlfVxuICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cbiAgICAgICAgLz5cblxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInJhbmdlXCI+UmFuZ2UgKGRlZmF1bHRzIHRvIHZhbHVlKTo8L2xhYmVsPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICBuYW1lPVwicmFuZ2VcIlxuICAgICAgICAgIHZhbHVlPXt2YWx1ZXMucmFuZ2V9XG4gICAgICAgICAgZGlzYWJsZWQ9e3ZhbHVlcy5mZWF0dXJlVHlwZSA9PT0gJ3VuZGVmaW5lZCd9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGZvcm1cbiAgICAgICAgY2xhc3NOYW1lPVwic3BhbjQgb2Zmc2V0MVwiXG4gICAgICAgIHJlZj17Zm9ybSA9PiB7XG4gICAgICAgICAgdGhpcy5mb3JtID0gZm9ybTtcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPGhlYWRlcj5cbiAgICAgICAgICA8c3Ryb25nPlxuICAgICAgICAgICAgRWRpdGluZyBDZWxsICh7dGhpcy5wcm9wcy5yb3d9LCB7dGhpcy5wcm9wcy5jb2x9KVxuICAgICAgICAgIDwvc3Ryb25nPlxuICAgICAgICA8L2hlYWRlcj5cblxuICAgICAgICB7dGhpcy5yZW5kZXJGaWVsZHModGhpcy5nZXRTYW5pdGl6ZWRWYWx1ZXMoKSl9XG4gICAgICA8L2Zvcm0+XG4gICAgKTtcbiAgfVxufVxuIiwiaW1wb3J0IHt1dGlscyBhcyBtYXplVXRpbHN9IGZyb20gJ0Bjb2RlLWRvdC1vcmcvbWF6ZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHtcbiAgU3F1YXJlVHlwZSxcbiAgV2FsbFR5cGVNYXNrLFxuICBXYWxsQ29vcmRSb3dNYXNrLFxuICBXYWxsQ29vcmRSb3dTaGlmdCxcbiAgV2FsbENvb3JkQ29sTWFzayxcbiAgV2FsbENvb3JkQ29sU2hpZnQsXG59IGZyb20gJ0BjZG8vYXBwcy9zdHVkaW8vY29uc3RhbnRzJztcblxuY29uc3QgQ0VMTF9XSURUSCA9IDQ4O1xuY29uc3QgQ0VMTF9IRUlHSFQgPSAzODtcblxuY29uc3Qgc3R1ZGlvVGlsZXMgPSB7XG4gIFtTcXVhcmVUeXBlLk9QRU5dOiAnbm9uZScsXG4gIFtTcXVhcmVUeXBlLlNQUklURUZJTklTSF06ICdnb2FsJyxcbiAgW1NxdWFyZVR5cGUuU1BSSVRFU1RBUlRdOiAnc3ByaXRlJyxcbn07XG5cbi8vIFRoaXMgbGlzdCBpcyBkdXBsaWNhdGVkIGluIFN0dWRpb0NlbGxFZGl0b3IuIFNlZSBjb21tZW50IHRoZXJlIGZvclxuLy8gc29tZSBleHBsYW5hdGlvbiBvZiB3aHkgdGhhdCdzIG5vdCB0aGUgZ3JlYXRlc3QgZGVzaWduLlxuY29uc3Qgc3R1ZGlvQXZhdGFyTGlzdCA9IFtcbiAgJ2RvZycsXG4gICdjYXQnLFxuICAncGVuZ3VpbicsXG4gICdkaW5vc2F1cicsXG4gICdvY3RvcHVzJyxcbiAgJ3dpdGNoJyxcbiAgJ2JhdCcsXG4gICdiaXJkJyxcbiAgJ2RyYWdvbicsXG4gICdzcXVpcnJlbCcsXG4gICd3aXphcmQnLFxuICAnYWxpZW4nLFxuICAnZ2hvc3QnLFxuICAnbW9uc3RlcicsXG4gICdyb2JvdCcsXG4gICd1bmljb3JuJyxcbiAgJ3pvbWJpZScsXG4gICdrbmlnaHQnLFxuICAnbmluamEnLFxuICAncGlyYXRlJyxcbiAgJ2NhdmVib3knLFxuICAnY2F2ZWdpcmwnLFxuICAncHJpbmNlc3MnLFxuICAnc3BhY2Vib3QnLFxuICAnc29jY2VyZ2lybCcsXG4gICdzb2NjZXJib3knLFxuICAndGVubmlzZ2lybCcsXG4gICd0ZW5uaXNib3knLFxuXTtcblxuY29uc3Qga2FyZWxUaWxlcyA9IFsnYm9yZGVyJywgJ3BhdGgnLCAnc3RhcnQnLCAnZW5kJywgJ29ic3RhY2xlJ107XG5jb25zdCBiZWVDb25kaXRpb25zID0gW1xuICAnJyxcbiAgJ2Zsb3dlci1vci1oaXZlJyxcbiAgJ2Zsb3dlci1vci1ub3RoaW5nJyxcbiAgJ2hpdmUtb3Itbm90aGluZycsXG4gICdmbG93ZXItaGl2ZS1vci1ub3RoaW5nJyxcbl07XG5jb25zdCBiZWVGZWF0dXJlcyA9IFsnaGl2ZScsICdmbG93ZXInXTtcblxuY2xhc3MgQ2VsbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY2VsbDogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHJvdzogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIGNvbDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgIHNlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgb25Nb3VzZURvd246IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgb25Nb3VzZU92ZXI6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgb25Nb3VzZVVwOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIHNraW46IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBoaWdobGlnaHRlZDogUHJvcFR5cGVzLmJvb2wsXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtjZWxsfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBjbGFzc05hbWVzID0gW107XG4gICAgY29uc3QgdGRTdHlsZSA9IHt9O1xuICAgIGxldCB0ZXh0O1xuXG4gICAgaWYgKHRoaXMucHJvcHMuc2VsZWN0ZWQpIHtcbiAgICAgIGNsYXNzTmFtZXMucHVzaCgnc2VsZWN0ZWQnKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucHJvcHMuaGlnaGxpZ2h0ZWQpIHtcbiAgICAgIGNsYXNzTmFtZXMucHVzaCgnaGlnaGxpZ2h0ZWQnKTtcbiAgICB9XG5cbiAgICAvLyBDZWxsIHR5cGUtc3BlY2lmaWMgc3R1ZmZcbiAgICAvLyBUT0RPKGVsaWphaCkgVGhpcyBhcmVhIGNvbnRhaW5zIGEgYnVuY2ggb2YgYXBwbGljYXRpb24tc3BlY2lmaWNcbiAgICAvLyBsb2dpYyB3aGljaCB3b3VsZCBpZGVhbGx5IGxpdmUgc29tZXdoZXJlIG1vcmUgZmxleGlibGUuXG4gICAgaWYgKHRoaXMucHJvcHMuc2tpbiA9PT0gJ3BsYXlsYWInKSB7XG4gICAgICBjbGFzc05hbWVzLnB1c2goJ3BsYXlsYWInLCBzdHVkaW9UaWxlc1tjZWxsLmdldFRpbGVUeXBlKCldKTtcblxuICAgICAgaWYgKFxuICAgICAgICBjZWxsLmdldFRpbGVUeXBlKCkgPT09IFNxdWFyZVR5cGUuU1BSSVRFU1RBUlQgJiZcbiAgICAgICAgY2VsbC5zcHJpdGVfICE9PSB1bmRlZmluZWRcbiAgICAgICkge1xuICAgICAgICB0ZFN0eWxlLmJhY2tncm91bmRJbWFnZSA9XG4gICAgICAgICAgXCJ1cmwoJy9ibG9ja2x5L21lZGlhL3NraW5zL3N0dWRpby9cIiArXG4gICAgICAgICAgc3R1ZGlvQXZhdGFyTGlzdFtjZWxsLnNwcml0ZV9dICtcbiAgICAgICAgICBcIl9zcHJpdGVzaGVldF8yMDBweC5wbmcnKVwiO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodGhpcy5wcm9wcy5za2luID09PSAnc3RhcndhcnNncmlkJykge1xuICAgICAgaWYgKGNlbGwudGlsZVR5cGVfID09PSAxKSB7XG4gICAgICAgIHRkU3R5bGUuYmFja2dyb3VuZEltYWdlID1cbiAgICAgICAgICBcInVybCgnL2Jsb2NrbHkvbWVkaWEvc2tpbnMvaG9jMjAxNXgvZ29hbC5wbmcnKVwiO1xuICAgICAgfSBlbHNlIGlmIChjZWxsLnRpbGVUeXBlXyA9PT0gMHgxMCkge1xuICAgICAgICB0ZFN0eWxlLmJhY2tncm91bmRJbWFnZSA9XG4gICAgICAgICAgXCJ1cmwoJy9ibG9ja2x5L21lZGlhL3NraW5zL2hvYzIwMTV4L2luc3RydWN0aW9uc19iYjgucG5nJylcIjtcbiAgICAgICAgdGRTdHlsZS5iYWNrZ3JvdW5kU2l6ZSA9ICdjb3Zlcic7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0ZXh0ID0gV2FsbFR5cGVNYXNrICYgY2VsbC50aWxlVHlwZV8gPyAnMngnIDogJyc7XG4gICAgICAgIGNvbnN0IHggPSAoV2FsbENvb3JkQ29sTWFzayAmIGNlbGwudGlsZVR5cGVfKSA+PiBXYWxsQ29vcmRDb2xTaGlmdDtcbiAgICAgICAgY29uc3QgeSA9IChXYWxsQ29vcmRSb3dNYXNrICYgY2VsbC50aWxlVHlwZV8pID4+IFdhbGxDb29yZFJvd1NoaWZ0O1xuICAgICAgICB0ZFN0eWxlLmJhY2tncm91bmRJbWFnZSA9XG4gICAgICAgICAgXCJ1cmwoJy9ibG9ja2x5L21lZGlhL3NraW5zL2hvYzIwMTV4L3RpbGVzX2JhY2tncm91bmQxLnBuZycpXCI7XG4gICAgICAgIHRkU3R5bGUuYmFja2dyb3VuZFNpemUgPSAnODAwJSA4MDAlJztcbiAgICAgICAgdGRTdHlsZS5iYWNrZ3JvdW5kUG9zaXRpb24gPSBgLSR7eCAqIENFTExfV0lEVEh9cHggLSR7XG4gICAgICAgICAgeSAqIENFTExfSEVJR0hUXG4gICAgICAgIH1weGA7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnNraW4gPT09ICdib3VuY2UnKSB7XG4gICAgICBjb25zdCBpbWFnZXMgPSBbXG4gICAgICAgICd0aWxlc193YWxsJyxcbiAgICAgICAgJ2dvYWwnLFxuICAgICAgICAnYmFsbCcsXG4gICAgICAgICdwYWRkbGUnLFxuICAgICAgICAncGFkZGxlJyxcbiAgICAgICAgJ2JhbGwnLFxuICAgICAgICAnb2JzdGFjbGUnLFxuICAgICAgXTtcbiAgICAgIGlmIChjZWxsLnRpbGVUeXBlXykge1xuICAgICAgICBjb25zdCBpbWFnZSA9IGltYWdlc1tNYXRoLmxvZzIoY2VsbC50aWxlVHlwZV8pXTtcbiAgICAgICAgdGRTdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCcvYmxvY2tseS9tZWRpYS9za2lucy9ib3VuY2UvJHtpbWFnZX0ucG5nJylgO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjbGFzc05hbWVzLnB1c2goa2FyZWxUaWxlc1tjZWxsLnRpbGVUeXBlX10pO1xuXG4gICAgICBpZiAobWF6ZVV0aWxzLmlzQmVlU2tpbih0aGlzLnByb3BzLnNraW4pKSB7XG4gICAgICAgIGlmIChjZWxsLmlzVmFyaWFibGVDbG91ZCgpKSB7XG4gICAgICAgICAgY2xhc3NOYW1lcy5wdXNoKCdjb25kaXRpb25hbCcpO1xuICAgICAgICAgIGNsYXNzTmFtZXMucHVzaChiZWVDb25kaXRpb25zW2NlbGwuY2xvdWRUeXBlX10pO1xuICAgICAgICB9IGVsc2UgaWYgKGNlbGwuZmVhdHVyZVR5cGVfICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBjbGFzc05hbWVzLnB1c2goYmVlRmVhdHVyZXNbY2VsbC5mZWF0dXJlVHlwZV9dKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZmFybWVyXG4gICAgICAgIGlmIChjZWxsLmlzRGlydCgpKSB7XG4gICAgICAgICAgY2xhc3NOYW1lcy5wdXNoKCdkaXJ0Jyk7XG4gICAgICAgICAgY29uc3QgZGlydFZhbHVlID0gY2VsbC5nZXRDdXJyZW50VmFsdWUoKTtcbiAgICAgICAgICBjb25zdCBkaXJ0SW5kZXggPSAxMCArIGRpcnRWYWx1ZSArIChkaXJ0VmFsdWUgPCAwID8gMSA6IDApO1xuICAgICAgICAgIHRkU3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uID0gLWRpcnRJbmRleCAqIDUwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChjZWxsLm9yaWdpbmFsVmFsdWVfICE9PSB1bmRlZmluZWQgJiYgY2VsbC5vcmlnaW5hbFZhbHVlXyAhPT0gbnVsbCkge1xuICAgICAgICB0ZXh0ID0gY2VsbC5vcmlnaW5hbFZhbHVlXy50b1N0cmluZygpO1xuICAgICAgICBpZiAoY2VsbC5yYW5nZV8gJiYgY2VsbC5yYW5nZV8gPiBjZWxsLm9yaWdpbmFsVmFsdWVfKSB7XG4gICAgICAgICAgdGV4dCArPSAnIC0gJyArIGNlbGwucmFuZ2VfLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPHRkXG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcy5qb2luKCcgJyl9XG4gICAgICAgIG9uQ2xpY2s9e3RoaXMucHJvcHMub25DbGljay5iaW5kKG51bGwsIHRoaXMucHJvcHMucm93LCB0aGlzLnByb3BzLmNvbCl9XG4gICAgICAgIG9uTW91c2VEb3duPXt0aGlzLnByb3BzLm9uTW91c2VEb3duLmJpbmQoXG4gICAgICAgICAgbnVsbCxcbiAgICAgICAgICB0aGlzLnByb3BzLnJvdyxcbiAgICAgICAgICB0aGlzLnByb3BzLmNvbFxuICAgICAgICApfVxuICAgICAgICBvbk1vdXNlT3Zlcj17dGhpcy5wcm9wcy5vbk1vdXNlT3Zlci5iaW5kKFxuICAgICAgICAgIG51bGwsXG4gICAgICAgICAgdGhpcy5wcm9wcy5yb3csXG4gICAgICAgICAgdGhpcy5wcm9wcy5jb2xcbiAgICAgICAgKX1cbiAgICAgICAgb25Nb3VzZVVwPXt0aGlzLnByb3BzLm9uTW91c2VVcC5iaW5kKFxuICAgICAgICAgIG51bGwsXG4gICAgICAgICAgdGhpcy5wcm9wcy5yb3csXG4gICAgICAgICAgdGhpcy5wcm9wcy5jb2xcbiAgICAgICAgKX1cbiAgICAgICAgc3R5bGU9e3RkU3R5bGV9XG4gICAgICA+XG4gICAgICAgIHt0ZXh0fVxuICAgICAgPC90ZD5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdyaWQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGNlbGxzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub2JqZWN0KSkuaXNSZXF1aXJlZCxcbiAgICBzZWxlY3RlZFJvdzogUHJvcFR5cGVzLm51bWJlcixcbiAgICBzZWxlY3RlZENvbDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBza2luOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgb25TZWxlY3Rpb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgc2V0Q29waWVkQ2VsbHM6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIH07XG5cbiAgc3RhdGUgPSB7fTtcblxuICAvKipcbiAgICogV2hlbiBkcmFnIGJlZ2lucywgcmVjb3JkIHRoYXQgd2UgYXJlIG5vdyBkcmFnZ2luZyBhbmQgd2hlcmUgd2VcbiAgICogc3RhcnRlZCBmcm9tLlxuICAgKi9cbiAgYmVnaW5EcmFnID0gKHJvdywgY29sKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBkcmFnZ2luZzogdHJ1ZSxcbiAgICAgIGRyYWdTdGFydDoge3JvdywgY29sfSxcbiAgICB9KTtcbiAgfTtcblxuICAvKipcbiAgICogQXMgdGhlIG1vdXNlIG1vdmVzIG92ZXIgdGhlIGNlbGxzLCBpZiB3ZSBhcmUgZHJhZ2dpbmcgdGhlbiByZWNvcmRcbiAgICogdGhlIGxhdGVzdCBjZWxsIHdlJ3ZlIG1vdmVkIG92ZXIgc28gd2UgY2FuIGhpZ2hsaWdodCBhbGwgc2VsZWN0ZWRcbiAgICogY2VsbHMgYXBwcm9wcmlhdGVseS5cbiAgICovXG4gIG1vdmVEcmFnID0gKHJvdywgY29sKSA9PiB7XG4gICAgaWYgKHRoaXMuc3RhdGUuZHJhZ2dpbmcpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBkcmFnQ3VycmVudDoge3JvdywgY29sfSxcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogT25jZSB0aGUgZHJhZyBlbmRzLCBjcmVhdGUgYSBzdWJhcnJheSBvZiBhbGwgc2VsZWN0ZWQgY2VsbHMgYW5kXG4gICAqIHNhdmUgaXQgdG8gb3VyIHBhcmVudC5cbiAgICovXG4gIGVuZERyYWcgPSAocm93LCBjb2wpID0+IHtcbiAgICBjb25zdCB7ZHJhZ1N0YXJ0fSA9IHRoaXMuc3RhdGU7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBkcmFnZ2luZzogZmFsc2UsXG4gICAgICBkcmFnU3RhcnQ6IG51bGwsXG4gICAgICBkcmFnQ3VycmVudDogbnVsbCxcbiAgICB9KTtcblxuICAgIGlmICghZHJhZ1N0YXJ0IHx8IChkcmFnU3RhcnQucm93ID09PSByb3cgJiYgZHJhZ1N0YXJ0LmNvbCA9PT0gY29sKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHRvcCA9IE1hdGgubWluKGRyYWdTdGFydC5yb3csIHJvdyk7XG4gICAgY29uc3QgbGVmdCA9IE1hdGgubWluKGRyYWdTdGFydC5jb2wsIGNvbCk7XG4gICAgY29uc3QgYm90dG9tID0gTWF0aC5tYXgoZHJhZ1N0YXJ0LnJvdywgcm93KTtcbiAgICBjb25zdCByaWdodCA9IE1hdGgubWF4KGRyYWdTdGFydC5jb2wsIGNvbCk7XG5cbiAgICBjb25zdCBjZWxscyA9IHRoaXMucHJvcHMuY2VsbHMuc2xpY2UodG9wLCBib3R0b20gKyAxKS5tYXAocm93ID0+IHtcbiAgICAgIHJldHVybiByb3cuc2xpY2UobGVmdCwgcmlnaHQgKyAxKS5tYXAoY2VsbCA9PiB7XG4gICAgICAgIHJldHVybiBjZWxsLnNlcmlhbGl6ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyBJdCdzIGEgYml0IGF3a3dhcmQgdG8gaGF2ZSB0aGVzZSB0d28gY29tcGV0aW5nIGNvbmNlcHRzIG9mIHdoYXRcbiAgICAvLyBcInNlbGVjdFwiIG1lYW5zLCBhbmQgdG8gaGF2ZSB0aGUga25vd2xlZGdlIG9mIGNvcHlpbmcgaW5qZWN0ZWRcbiAgICAvLyBpbnRvIHRoaXMgY29tcG9uZW50IHdoZW4gcmVhbGx5IGl0J3Mgb25seSBHcmlkRWRpdG9yIHRoYXQgY2FyZXNcbiAgICAvLyBXSFkgd2UncmUgdHJhY2tpbmcgXCJkcmFnIHNlbGVjdGlvbnNcIi5cbiAgICAvLyBUT0RPKGVsaWphaCkgVW5pZnkgXCJkcmFnIHNlbGVjdFwiIGFuZCBcIm9yaWdpbmFsIHNlbGVjdFwiXG4gICAgdGhpcy5wcm9wcy5zZXRDb3BpZWRDZWxscyhjZWxscyk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEFzIHdlIGFyZSBkcmFnZ2luZywgd2UgY2FuIGRldGVybWluZSBpZiBhIGdpdmVuIHgseSBjb29yZGluYXRlIHBhaXJcbiAgICogaXMgd2l0aGluIHRoZSBhcmVhIGJlaW5nIHNlbGVjdGVkLlxuICAgKi9cbiAgaXNIaWdobGlnaHRpbmcocm93LCBjb2wpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5kcmFnZ2luZyAmJiB0aGlzLnN0YXRlLmRyYWdDdXJyZW50KSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICByb3cgPj0gTWF0aC5taW4odGhpcy5zdGF0ZS5kcmFnU3RhcnQucm93LCB0aGlzLnN0YXRlLmRyYWdDdXJyZW50LnJvdykgJiZcbiAgICAgICAgcm93IDw9IE1hdGgubWF4KHRoaXMuc3RhdGUuZHJhZ1N0YXJ0LnJvdywgdGhpcy5zdGF0ZS5kcmFnQ3VycmVudC5yb3cpICYmXG4gICAgICAgIGNvbCA+PSBNYXRoLm1pbih0aGlzLnN0YXRlLmRyYWdTdGFydC5jb2wsIHRoaXMuc3RhdGUuZHJhZ0N1cnJlbnQuY29sKSAmJlxuICAgICAgICBjb2wgPD0gTWF0aC5tYXgodGhpcy5zdGF0ZS5kcmFnU3RhcnQuY29sLCB0aGlzLnN0YXRlLmRyYWdDdXJyZW50LmNvbClcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB0YWJsZVJvd3MgPSB0aGlzLnByb3BzLmNlbGxzLm1hcCgocm93LCB4KSA9PiB7XG4gICAgICBjb25zdCB0YWJsZURhdGFzID0gcm93Lm1hcCgoY2VsbCwgeSkgPT4ge1xuICAgICAgICBjb25zdCBzZWxlY3RlZCA9XG4gICAgICAgICAgdGhpcy5wcm9wcy5zZWxlY3RlZFJvdyA9PT0geCAmJiB0aGlzLnByb3BzLnNlbGVjdGVkQ29sID09PSB5O1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPENlbGxcbiAgICAgICAgICAgIGtleT17J2NlbGwtJyArIHggKyAnLScgKyB5fVxuICAgICAgICAgICAgY2VsbD17Y2VsbH1cbiAgICAgICAgICAgIHJvdz17eH1cbiAgICAgICAgICAgIGNvbD17eX1cbiAgICAgICAgICAgIHNlbGVjdGVkPXtzZWxlY3RlZH1cbiAgICAgICAgICAgIGhpZ2hsaWdodGVkPXt0aGlzLmlzSGlnaGxpZ2h0aW5nKHgsIHkpfVxuICAgICAgICAgICAgb25DbGljaz17dGhpcy5wcm9wcy5vblNlbGVjdGlvbkNoYW5nZX1cbiAgICAgICAgICAgIG9uTW91c2VEb3duPXt0aGlzLmJlZ2luRHJhZ31cbiAgICAgICAgICAgIG9uTW91c2VPdmVyPXt0aGlzLm1vdmVEcmFnfVxuICAgICAgICAgICAgb25Nb3VzZVVwPXt0aGlzLmVuZERyYWd9XG4gICAgICAgICAgICBza2luPXt0aGlzLnByb3BzLnNraW59XG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gPHRyIGtleT17J3Jvdy0nICsgeH0+e3RhYmxlRGF0YXN9PC90cj47XG4gICAgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPHRhYmxlPlxuICAgICAgICA8dGJvZHk+e3RhYmxlUm93c308L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICApO1xuICB9XG59XG4iLCIvKipcbiAqIEBvdmVydmlldyBSZWFjdCBjb21wb25lbnQgdG8gYWxsb3cgZm9yIGVhc3kgZWRpdGluZyBvZiBLYXJlbCBHcmlkcy5cbiAqIFVzZWQgaW4gTGV2ZWxCdWlsZGVyLCBhbmQgcmVsaWVzIG9uIHNvbWUgYXBwcyBjb2RlIGZvciB2YWxpZGF0aW9uLlxuICogU3VwcG9ydHMgYm90aCBCZWUgYW5kIEZhcm1lciBza2lucy5cbiAqL1xuaW1wb3J0IHtjZWxscywgdXRpbHMgYXMgbWF6ZVV0aWxzfSBmcm9tICdAY29kZS1kb3Qtb3JnL21hemUnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbnZhciBTdHVkaW9DZWxsID0gcmVxdWlyZSgnQGNkby9hcHBzL3N0dWRpby9jZWxsJyk7XG5cbnZhciBCZWVDZWxsRWRpdG9yID0gcmVxdWlyZSgnLi9CZWVDZWxsRWRpdG9yJyk7XG52YXIgQm91bmNlQ2VsbEVkaXRvciA9IHJlcXVpcmUoJy4vQm91bmNlQ2VsbEVkaXRvcicpO1xudmFyIENlbGxFZGl0b3IgPSByZXF1aXJlKCcuL0NlbGxFZGl0b3InKTtcbnZhciBHcmlkID0gcmVxdWlyZSgnLi9HcmlkJyk7XG52YXIgSGFydmVzdGVyQ2VsbEVkaXRvciA9IHJlcXVpcmUoJy4vSGFydmVzdGVyQ2VsbEVkaXRvcicpO1xudmFyIFBsYW50ZXJDZWxsRWRpdG9yID0gcmVxdWlyZSgnLi9QbGFudGVyQ2VsbEVkaXRvcicpO1xudmFyIFN0YXJXYXJzR3JpZENlbGxFZGl0b3IgPSByZXF1aXJlKCcuL1N0YXJXYXJzR3JpZENlbGxFZGl0b3InKTtcbnZhciBTdHVkaW9DZWxsRWRpdG9yID0gcmVxdWlyZSgnLi9TdHVkaW9DZWxsRWRpdG9yJyk7XG5cbmNsYXNzIENlbGxKU09OIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBzZXJpYWxpemF0aW9uOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIH07XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIGNvbnN0IG5vZGUgPSB0aGlzLnJlZnMuc2VyaWFsaXplZElucHV0O1xuICAgIG5vZGUuZm9jdXMoKTtcbiAgICBub2RlLnNlbGVjdCgpO1xuICB9XG5cbiAgaGFuZGxlQ2hhbmdlID0gZXZlbnQgPT4ge1xuICAgIHRoaXMucHJvcHMub25DaGFuZ2UoSlNPTi5wYXJzZShldmVudC50YXJnZXQudmFsdWUpKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxsYWJlbD5cbiAgICAgICAgQ2VsbCBKU09OIChmb3IgY29weS9wYXN0aW5nKTpcbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgIHZhbHVlPXtKU09OLnN0cmluZ2lmeSh0aGlzLnByb3BzLnNlcmlhbGl6YXRpb24pfVxuICAgICAgICAgIHJlZj1cInNlcmlhbGl6ZWRJbnB1dFwiXG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgPC9sYWJlbD5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdyaWRFZGl0b3IgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHNlcmlhbGl6ZWRNYXplOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub2JqZWN0KSksXG4gICAgbWF6ZTogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLmFycmF5KSwgLy8gbWF6ZSBpdGVtcyBjYW4gYmUgaW50ZWdlcnMgb3Igc3RyaW5nc1xuICAgIGluaXRpYWxEaXJ0OiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMubnVtYmVyKSksXG4gICAgc2tpbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIG9uVXBkYXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIGxldCBjZWxscztcbiAgICBjb25zdCBjZWxsQ2xhc3MgPSB0aGlzLmdldENlbGxDbGFzcygpO1xuXG4gICAgaWYgKHByb3BzLnNlcmlhbGl6ZWRNYXplKSB7XG4gICAgICBjZWxscyA9IHByb3BzLnNlcmlhbGl6ZWRNYXplLm1hcChyb3cgPT4gcm93Lm1hcChjZWxsQ2xhc3MuZGVzZXJpYWxpemUpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2VsbHMgPSBwcm9wcy5tYXplLm1hcCgocm93LCB4KSA9PiB7XG4gICAgICAgIHJldHVybiByb3cubWFwKChtYXplQ2VsbCwgeSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGluaXRpYWxEaXJ0Q2VsbCA9IHByb3BzLmluaXRpYWxEaXJ0W3hdW3ldO1xuICAgICAgICAgIHJldHVybiBjZWxsQ2xhc3MucGFyc2VGcm9tT2xkVmFsdWVzKG1hemVDZWxsLCBpbml0aWFsRGlydENlbGwpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBjZWxsczogY2VsbHMsXG4gICAgfTtcbiAgfVxuXG4gIGdldENlbGxDbGFzcygpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5za2luID09PSAncGxheWxhYicgfHwgdGhpcy5wcm9wcy5za2luID09PSAnc3RhcndhcnNncmlkJykge1xuICAgICAgcmV0dXJuIFN0dWRpb0NlbGw7XG4gICAgfSBlbHNlIGlmIChtYXplVXRpbHMuaXNCZWVTa2luKHRoaXMucHJvcHMuc2tpbikpIHtcbiAgICAgIHJldHVybiBjZWxscy5CZWVDZWxsO1xuICAgIH0gZWxzZSBpZiAobWF6ZVV0aWxzLmlzSGFydmVzdGVyU2tpbih0aGlzLnByb3BzLnNraW4pKSB7XG4gICAgICByZXR1cm4gY2VsbHMuSGFydmVzdGVyQ2VsbDtcbiAgICB9IGVsc2UgaWYgKG1hemVVdGlscy5pc1BsYW50ZXJTa2luKHRoaXMucHJvcHMuc2tpbikpIHtcbiAgICAgIHJldHVybiBjZWxscy5QbGFudGVyQ2VsbDtcbiAgICB9XG4gICAgcmV0dXJuIGNlbGxzLkNlbGw7XG4gIH1cblxuICBnZXRFZGl0b3JDbGFzcygpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5za2luID09PSAnYm91bmNlJykge1xuICAgICAgcmV0dXJuIEJvdW5jZUNlbGxFZGl0b3I7XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnNraW4gPT09ICdwbGF5bGFiJykge1xuICAgICAgcmV0dXJuIFN0dWRpb0NlbGxFZGl0b3I7XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnNraW4gPT09ICdzdGFyd2Fyc2dyaWQnKSB7XG4gICAgICByZXR1cm4gU3RhcldhcnNHcmlkQ2VsbEVkaXRvcjtcbiAgICB9IGVsc2UgaWYgKG1hemVVdGlscy5pc0JlZVNraW4odGhpcy5wcm9wcy5za2luKSkge1xuICAgICAgcmV0dXJuIEJlZUNlbGxFZGl0b3I7XG4gICAgfSBlbHNlIGlmIChtYXplVXRpbHMuaXNIYXJ2ZXN0ZXJTa2luKHRoaXMucHJvcHMuc2tpbikpIHtcbiAgICAgIHJldHVybiBIYXJ2ZXN0ZXJDZWxsRWRpdG9yO1xuICAgIH0gZWxzZSBpZiAobWF6ZVV0aWxzLmlzUGxhbnRlclNraW4odGhpcy5wcm9wcy5za2luKSkge1xuICAgICAgcmV0dXJuIFBsYW50ZXJDZWxsRWRpdG9yO1xuICAgIH1cbiAgICByZXR1cm4gQ2VsbEVkaXRvcjtcbiAgfVxuXG4gIGNoYW5nZVNlbGVjdGlvbiA9IChyb3csIGNvbCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc2VsZWN0ZWRSb3c6IHJvdyxcbiAgICAgIHNlbGVjdGVkQ29sOiBjb2wsXG4gICAgfSk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEhlbHBlciBtZXRob2QgdXNlZCB0byB1cGRhdGUgY2h1bmtzIG9mIHRoZSBncmlkLiBBY2NlcHRzIGEgcm93IGFuZFxuICAgKiBjb2x1bW4gcmVwcmVzZW50aW5nIHRoZSB0b3AgbGVmdCBjb3JuZXIgZnJvbSB3aGljaCB0byBiZWdpblxuICAgKiByZXBsYWNpbmcgYW5kIGEgdHdvLWRpbWVuc2lvbmFsIGFycmF5IG9mIHNlcmlhbGl6ZWQgY2VsbHMgdG8gdXBkYXRlXG4gICAqIGludG8gdGhlIGdyaWQuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByb3dcbiAgICogQHBhcmFtIHtudW1iZXJ9IGNvbFxuICAgKiBAcGFyYW0ge09iamVjdFtdW119IG5ld0NlbGxzXG4gICAqL1xuICB1cGRhdGVDZWxscyhyb3csIGNvbCwgbmV3Q2VsbHMpIHtcbiAgICBpZiAobmV3Q2VsbHMgPT09IHVuZGVmaW5lZCB8fCByb3cgPT09IHVuZGVmaW5lZCB8fCBjb2wgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIHRoaXMgaXMgdGVjaG5pY2FsbHkgYSB2aW9sYXRpb24gb2YgUmVhY3QncyBcInRob3Ugc2hhbHQgbm90IG1vZGlmeVxuICAgIC8vIHN0YXRlXCIgY29tbWFuZG1lbnQuIFRoZSBwcm9ibGVtIGhlcmUgaXMgdGhhdCB3ZSdyZSBtb2RpZnlpbmcgYW5cbiAgICAvLyBlbGVtZW50IG9mIGFuIGVsZW1lbnQgb2YgdGhpcy5zdGF0ZS5jZWxscy4gV2UgZG8gdGhlbiBpbW1lZGlhdGVseVxuICAgIC8vIHVwZGF0ZSB3aXRoIHNldFN0YXRlLCBidXQgaXQncyBzdGlsbCBhdCB0aGUgdmVyeSBsZWFzdCB1bmNsZWFuLlxuICAgIC8vXG4gICAgLy8gU29tZSBvdGhlciBwb3RlbnRpYWwgYXBwcm9hY2hlcyB3b3VsZCBiZSB0byBjbG9uZSBvdXIgZW50aXJlXG4gICAgLy8gYXJyYXkgYmVmb3JlIG1vZGlmeWluZyBpdCBvciB0byBzdG9yZSB0aGUgY2VsbHMgaW4gc29tZSB3YXkgdGhhdFxuICAgIC8vIGFsbG93cyB1cyB0byBpbW11dGFibHkgdXBkYXRlIHRoZW0uIFN0b3JpbmcgdGhhbSBhcyBhbiBvYmplY3RcbiAgICAvLyB3aG9zZSBrZXlzIGFyZSB0aGVpciB4LHkgY29vcmRpbmF0ZXMsIGZvciBleGFtcGxlLCBhbmQgdGhlblxuICAgIC8vIHByb3ZpZGluZyBzb21lIGhlbHBlciBtZXRob2QgdG8gcmV0cmlldmUgaW5kaXZpZHVhbCBjZWxscy5cbiAgICAvL1xuICAgIC8vIEJvdGggb2YgdGhvc2Ugc2VlbSBhIGJpdCB1bm5lY2Vzc2FyeSwgc28gZm9yIG5vdyB0aGlzIGhhY2sgd2lsbFxuICAgIC8vIHJlbWFpbi5cbiAgICBjb25zdCBjZWxscyA9IHRoaXMuc3RhdGUuY2VsbHM7XG4gICAgbmV3Q2VsbHMuZm9yRWFjaCgobmV3Um93LCBpKSA9PiB7XG4gICAgICBuZXdSb3cuZm9yRWFjaCgoY2VsbCwgaikgPT4ge1xuICAgICAgICBpZiAoY2VsbHNbcm93ICsgaV0gJiYgY2VsbHNbcm93ICsgaV1bY29sICsgal0pIHtcbiAgICAgICAgICBjZWxsc1tyb3cgKyBpXVtjb2wgKyBqXSA9IHRoaXMuZ2V0Q2VsbENsYXNzKCkuZGVzZXJpYWxpemUoY2VsbCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgY29uc3Qgc2VyaWFsaXplZERhdGEgPSBjZWxscy5tYXAocm93ID0+IHJvdy5tYXAoY2VsbCA9PiBjZWxsLnNlcmlhbGl6ZSgpKSk7XG5cbiAgICB0aGlzLnByb3BzLm9uVXBkYXRlKHNlcmlhbGl6ZWREYXRhKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGNlbGxzOiBjZWxscyxcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGVuIGEgZ2l2ZW4gY2VsbCBpcyBtb2RpZmllZCwgdXBkYXRlIHRoZSBncmlkXG4gICAqL1xuICBoYW5kbGVDZWxsQ2hhbmdlID0gbmV3U2VyaWFsaXplZENlbGxEYXRhID0+IHtcbiAgICBjb25zdCByb3cgPSB0aGlzLnN0YXRlLnNlbGVjdGVkUm93O1xuICAgIGNvbnN0IGNvbCA9IHRoaXMuc3RhdGUuc2VsZWN0ZWRDb2w7XG5cbiAgICAvLyB1cGRhdGVDZWxscyBleHBlY3RzIGEgdHdvLWRpbWVudGlvbmFsIGFycmF5XG4gICAgdGhpcy51cGRhdGVDZWxscyhyb3csIGNvbCwgW1tuZXdTZXJpYWxpemVkQ2VsbERhdGFdXSk7XG4gIH07XG5cbiAgLyoqXG4gICAqIFwiUGFzdGVcIiB0aGUgY2VsbHMgaW4gb3VyIFwiY2xpcGJvYXJkXCIgaW50byB0aGUgZ3JpZFxuICAgKi9cbiAgcGFzdGVDb3BpZWRDZWxscyA9ICgpID0+IHtcbiAgICBjb25zdCBjb3BpZWRDZWxscyA9IHRoaXMuc3RhdGUuY29waWVkQ2VsbHM7XG4gICAgY29uc3Qgcm93ID0gdGhpcy5zdGF0ZS5zZWxlY3RlZFJvdztcbiAgICBjb25zdCBjb2wgPSB0aGlzLnN0YXRlLnNlbGVjdGVkQ29sO1xuICAgIHRoaXMudXBkYXRlQ2VsbHMocm93LCBjb2wsIGNvcGllZENlbGxzKTtcbiAgfTtcblxuICAvKipcbiAgICogU3RvcmUgdGhlIGdpdmVuIGNlbGxzIG9uIG91ciBcImNsaXBib2FyZFwiXG4gICAqL1xuICBzZXRDb3BpZWRDZWxscyA9IGNlbGxzID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGNvcGllZENlbGxzOiBjZWxscyxcbiAgICB9KTtcbiAgfTtcblxuICAvKipcbiAgICogQ29tcHV0ZSB0aGUgbnVtYmVyIG9mIHVuaXF1ZSBtYXAgY29uZmlndXJhdGlvbnMsIHdoaWNoIGlzIHRoZSBwcm9kdWN0IG9mIHRoZSBudW1iZXJcbiAgICogb2Ygb3B0aW9ucyBmb3IgZWFjaCBDZWxsLlxuICAgKi9cbiAgY29tcHV0ZU51bU1hcHMgPSBncmlkID0+IHtcbiAgICBpZiAodGhpcy5wcm9wcy5za2luID09PSAncGxheWxhYicgfHwgdGhpcy5wcm9wcy5za2luID09PSAnc3RhcndhcnNncmlkJykge1xuICAgICAgLy8gVmFyaWFibGUgbWFwIGNvbmZpZ3VyYXRpb25zIGFyZSBub3Qgc3VwcG9ydGVkIGluIHRoZXNlIHNraW5zLlxuICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIGxldCBudW1NYXBzID0gMTtcbiAgICBncmlkLmZvckVhY2gocm93ID0+IHtcbiAgICAgIHJvdy5mb3JFYWNoKGNlbGwgPT4ge1xuICAgICAgICBsZXQgbnVtUG9zc2liaWxpdGllc0ZvckNlbGwgPSBjZWxsLmdldFBvc3NpYmxlR3JpZEFzc2V0cygpLmxlbmd0aDtcbiAgICAgICAgbnVtTWFwcyAqPSBudW1Qb3NzaWJpbGl0aWVzRm9yQ2VsbDtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiBudW1NYXBzO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBjZWxscyA9IHRoaXMuc3RhdGUuY2VsbHM7XG5cbiAgICBsZXQgY2VsbEVkaXRvcjtcbiAgICBsZXQgc2VsZWN0ZWRDZWxsSnNvbjtcbiAgICBsZXQgcGFzdGVCdXR0b247XG4gICAgY29uc3Qgcm93ID0gdGhpcy5zdGF0ZS5zZWxlY3RlZFJvdztcbiAgICBjb25zdCBjb2wgPSB0aGlzLnN0YXRlLnNlbGVjdGVkQ29sO1xuICAgIGlmIChjZWxsc1tyb3ddICYmIGNlbGxzW3Jvd11bY29sXSkge1xuICAgICAgY29uc3QgY2VsbCA9IGNlbGxzW3Jvd11bY29sXTtcbiAgICAgIGNvbnN0IEVkaXRvckNsYXNzID0gdGhpcy5nZXRFZGl0b3JDbGFzcygpO1xuICAgICAgY2VsbEVkaXRvciA9IChcbiAgICAgICAgPEVkaXRvckNsYXNzXG4gICAgICAgICAgY2VsbD17Y2VsbH1cbiAgICAgICAgICByb3c9e3Jvd31cbiAgICAgICAgICBjb2w9e2NvbH1cbiAgICAgICAgICBvblVwZGF0ZT17dGhpcy5oYW5kbGVDZWxsQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICAgIHNlbGVjdGVkQ2VsbEpzb24gPSAoXG4gICAgICAgIDxDZWxsSlNPTlxuICAgICAgICAgIHNlcmlhbGl6YXRpb249e2NlbGwuc2VyaWFsaXplKCl9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2VsbENoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgICBpZiAodGhpcy5zdGF0ZS5jb3BpZWRDZWxscykge1xuICAgICAgICBwYXN0ZUJ1dHRvbiA9IChcbiAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXt0aGlzLnBhc3RlQ29waWVkQ2VsbHN9PlxuICAgICAgICAgICAgeydQYXN0ZSBTZWxlY3RlZCAnICtcbiAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5jb3BpZWRDZWxscy5sZW5ndGggK1xuICAgICAgICAgICAgICAneCcgK1xuICAgICAgICAgICAgICB0aGlzLnN0YXRlLmNvcGllZENlbGxzWzBdLmxlbmd0aCArXG4gICAgICAgICAgICAgICcgQ2VsbHMnfVxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IG51bU1hcHMgPSB0aGlzLmNvbXB1dGVOdW1NYXBzKGNlbGxzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYW41XCI+XG4gICAgICAgICAgPEdyaWRcbiAgICAgICAgICAgIGNlbGxzPXtjZWxsc31cbiAgICAgICAgICAgIHNlbGVjdGVkUm93PXt0aGlzLnN0YXRlLnNlbGVjdGVkUm93fVxuICAgICAgICAgICAgc2VsZWN0ZWRDb2w9e3RoaXMuc3RhdGUuc2VsZWN0ZWRDb2x9XG4gICAgICAgICAgICBza2luPXt0aGlzLnByb3BzLnNraW59XG4gICAgICAgICAgICBzZXRDb3BpZWRDZWxscz17dGhpcy5zZXRDb3BpZWRDZWxsc31cbiAgICAgICAgICAgIG9uU2VsZWN0aW9uQ2hhbmdlPXt0aGlzLmNoYW5nZVNlbGVjdGlvbn1cbiAgICAgICAgICAvPlxuICAgICAgICAgIHtudW1NYXBzID4gMSAmJiAoXG4gICAgICAgICAgICA8cD57YFRoaXMgY29uZmlndXJhdGlvbiB3aWxsIGdlbmVyYXRlICR7bnVtTWFwc30gbWFwcy5cbiAgICAgICAgICAgIFdlIHJ1biBzdHVkZW50IGNvZGUgYWdhaW5zdCBlYWNoIHBvc3NpYmxlIG1hcCwgc28gaWYgdGhpcyBudW1iZXIgaXMgbGFyZ2UsXG4gICAgICAgICAgICBwZXJmb3JtYW5jZSB3aWxsIHN1ZmZlci5gfTwvcD5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtzZWxlY3RlZENlbGxKc29ufVxuICAgICAgICAgIHtwYXN0ZUJ1dHRvbn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjZWxsRWRpdG9yfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG53aW5kb3cuZGFzaGJvYXJkID0gd2luZG93LmRhc2hib2FyZCB8fCB7fTtcbndpbmRvdy5kYXNoYm9hcmQuR3JpZEVkaXRvciA9IEdyaWRFZGl0b3I7XG4iLCIvKipcbiAqIEBvdmVydmlldyBSZWFjdCBjb21wb25lbnQgdG8gYWxsb3cgZm9yIGVhc3kgZWRpdGluZyBhbmQgY3JlYXRpb24gb2YgSGFydmVzdGVyQ2VsbHNcbiAqIEBzZWUgQGNvZGUtZG90LW9yZy9tYXplL3NyYy9oYXJ2ZXN0ZXJDZWxsXG4gKi9cblxuaW1wb3J0IHtjZWxsc30gZnJvbSAnQGNvZGUtZG90LW9yZy9tYXplJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBDZWxsRWRpdG9yIGZyb20gJy4vQ2VsbEVkaXRvcic7XG5cbmNvbnN0IEhhcnZlc3RlckNlbGwgPSBjZWxscy5IYXJ2ZXN0ZXJDZWxsO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGFudGVyQ2VsbEVkaXRvciBleHRlbmRzIENlbGxFZGl0b3Ige1xuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICByZW5kZXJGaWVsZHModmFsdWVzKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIHtzdXBlci5yZW5kZXJGaWVsZHModmFsdWVzKX1cblxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInBvc3NpYmxlRmVhdHVyZXNcIj5Qb3NzaWJsZSBGZWF0dXJlczo8L2xhYmVsPlxuICAgICAgICB7T2JqZWN0LmtleXMoSGFydmVzdGVyQ2VsbC5GZWF0dXJlVHlwZSkubWFwKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgICAgdmFyIHZhbHVlID0gSGFydmVzdGVyQ2VsbC5GZWF0dXJlVHlwZVt0eXBlXTtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImNoZWNrYm94XCIga2V5PXt0eXBlfT5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICBuYW1lPVwicG9zc2libGVGZWF0dXJlc1wiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3ZhbHVlcy5wb3NzaWJsZUZlYXR1cmVzLmluY2x1ZGVzKHZhbHVlKX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIHt0eXBlfVxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICApO1xuICAgICAgICB9LCB0aGlzKX1cblxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInN0YXJ0c0hpZGRlblwiPlN0YXJ0cyBIaWRkZW46PC9sYWJlbD5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgc3R5bGU9e3ttYXJnaW46IDB9fVxuICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgbmFtZT1cInN0YXJ0c0hpZGRlblwiXG4gICAgICAgICAgY2hlY2tlZD17dmFsdWVzLnN0YXJ0c0hpZGRlbn1cbiAgICAgICAgICB2YWx1ZT17MX1cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iLCIvKipcbiAqIEBvdmVydmlldyBSZWFjdCBjb21wb25lbnQgdG8gYWxsb3cgZm9yIGVhc3kgZWRpdGluZyBhbmQgY3JlYXRpb24gb2YgUGxhbnRlckNlbGxzXG4gKiBAc2VlIEBjb2RlLWRvdC1vcmcvbWF6ZS9zcmMvaGFydmVzdGVyQ2VsbFxuICovXG5cbmltcG9ydCB7Y2VsbHMsIHRpbGVzfSBmcm9tICdAY29kZS1kb3Qtb3JnL21hemUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IENlbGxFZGl0b3IgZnJvbSAnLi9DZWxsRWRpdG9yJztcbmNvbnN0IFBsYW50ZXJDZWxsID0gY2VsbHMuUGxhbnRlckNlbGw7XG5jb25zdCBTcXVhcmVUeXBlID0gdGlsZXMuU3F1YXJlVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxhbnRlckNlbGxFZGl0b3IgZXh0ZW5kcyBDZWxsRWRpdG9yIHtcbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgZ2V0U2VsZWN0RmllbGROYW1lcygpIHtcbiAgICByZXR1cm4gWyd0aWxlVHlwZScsICdmZWF0dXJlVHlwZSddO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgcmVuZGVyRmllbGRzKHZhbHVlcykge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7dGhpcy5yZW5kZXJUaWxlVHlwZXModmFsdWVzKX1cblxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImZlYXR1cmVUeXBlXCI+RmVhdHVyZSBUeXBlOjwvbGFiZWw+XG4gICAgICAgIDxzZWxlY3RcbiAgICAgICAgICBuYW1lPVwiZmVhdHVyZVR5cGVcIlxuICAgICAgICAgIHZhbHVlPXt2YWx1ZXMuZmVhdHVyZVR5cGV9XG4gICAgICAgICAgZGlzYWJsZWQ9e3RoaXMucHJvcHMuY2VsbC5nZXRUaWxlKCkgIT09IFNxdWFyZVR5cGUuT1BFTn1cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgID5cbiAgICAgICAgICB7T2JqZWN0LmtleXMoUGxhbnRlckNlbGwuRmVhdHVyZVR5cGUpLm1hcCh0eXBlID0+IChcbiAgICAgICAgICAgIDxvcHRpb24ga2V5PXt0eXBlfSB2YWx1ZT17UGxhbnRlckNlbGwuRmVhdHVyZVR5cGVbdHlwZV19PlxuICAgICAgICAgICAgICB7dHlwZS50b0xvd2VyQ2FzZSgpfVxuICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvc2VsZWN0PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHtcbiAgU3F1YXJlVHlwZSxcbiAgRGlyZWN0aW9uLFxuICBXYWxsVHlwZU1hc2ssXG4gIFdhbGxUeXBlU2hpZnQsXG59IGZyb20gJ0BjZG8vYXBwcy9zdHVkaW8vY29uc3RhbnRzJztcblxuaW1wb3J0IHRpbGVHdWlkZSBmcm9tICcuLi8uLi8uLi9zdGF0aWMvY29kZV9zdHVkaW8vdGlsZS1ndWlkZS5wbmcnO1xuXG5pbXBvcnQgQ2VsbEVkaXRvciBmcm9tICcuL0NlbGxFZGl0b3InO1xuXG5jb25zdCBvcHRpb25zID0ge1xuICBlbXB0eTogMHgwLFxuICBzdGFydDogMHgwMDAwMTAsXG4gIGdvYWw6IDB4MDAwMDAxLFxuICBjcmF0ZV8xOiAweDAxMDAwMCxcbiAgY3JhdGVfMjogMHgxMDAwMDAsXG4gIGNyYXRlXzM6IDB4MDIwMDAwLFxuICBjYW5pc3RlcjogMHgxMjAwMDAsXG4gIGNvdmVyZWRfY3JhdGVzXzFhOiAweDA0MDAwMCxcbiAgY292ZXJlZF9jcmF0ZXNfMWI6IDB4MTQwMDAwLFxuICBjb3ZlcmVkX2NyYXRlc18yYTogMHgyNDAwMDAsXG4gIGNvdmVyZWRfY3JhdGVzXzJiOiAweDI1MDAwMCxcbiAgY292ZXJlZF9jcmF0ZXNfM2E6IDB4MzQwMDAwLFxuICBjb3ZlcmVkX2NyYXRlc18zYjogMHgzNTAwMDAsXG59O1xuXG5jb25zdCBzdGFydERpcmVjdGlvbnMgPSB7XG4gICctJzogRGlyZWN0aW9uLk5PTkUsXG4gIEVhc3Q6IERpcmVjdGlvbi5FQVNULFxuICBXZXN0OiBEaXJlY3Rpb24uV0VTVCxcbiAgTm9ydGg6IERpcmVjdGlvbi5OT1JUSCxcbiAgU291dGg6IERpcmVjdGlvbi5TT1VUSCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0YXJXYXJzR3JpZENlbGxFZGl0b3IgZXh0ZW5kcyBDZWxsRWRpdG9yIHtcbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgaGFuZGxlQ2hhbmdlKCkge1xuICAgIGNvbnN0IHpvb20gPSB0aGlzLnpvb20gJiYgdGhpcy56b29tLmNoZWNrZWQ7XG4gICAgY29uc3QgZGlyZWN0aW9uID0gdGhpcy5kaXJlY3Rpb24gPyArdGhpcy5kaXJlY3Rpb24udmFsdWUgOiB1bmRlZmluZWQ7XG5cbiAgICB0aGlzLnByb3BzLm9uVXBkYXRlKHtcbiAgICAgIHRpbGVUeXBlOiAoem9vbSA8PCBXYWxsVHlwZVNoaWZ0KSB8IHRoaXMudHlwZS52YWx1ZSxcbiAgICAgIGRpcmVjdGlvbjogZGlyZWN0aW9uLFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHR5cGUgPSB+V2FsbFR5cGVNYXNrICYgdGhpcy5wcm9wcy5jZWxsLnRpbGVUeXBlXztcbiAgICBjb25zdCB6b29tID0gV2FsbFR5cGVNYXNrICYgdGhpcy5wcm9wcy5jZWxsLnRpbGVUeXBlXztcblxuICAgIHJldHVybiAoXG4gICAgICA8Zm9ybSBjbGFzc05hbWU9XCJzcGFuNCBvZmZzZXQxXCI+XG4gICAgICAgIHtcbiAgICAgICAgICAvLyBUT0RPOiBBMTF5Mjc5IChodHRwczovL2NvZGVkb3RvcmcuYXRsYXNzaWFuLm5ldC9icm93c2UvQTExWS0yNzkpXG4gICAgICAgICAgLy8gVmVyaWZ5IG9yIHVwZGF0ZSB0aGlzIGFsdC10ZXh0IGFzIG5lY2Vzc2FyeVxuICAgICAgICB9XG4gICAgICAgIDxpbWcgc3JjPXt0aWxlR3VpZGV9IGFsdD1cIlwiIC8+XG4gICAgICAgIDxoZWFkZXI+XG4gICAgICAgICAgPHN0cm9uZz5cbiAgICAgICAgICAgIEVkaXRpbmcgQ2VsbCAoe3RoaXMucHJvcHMucm93fSwge3RoaXMucHJvcHMuY29sfSlcbiAgICAgICAgICA8L3N0cm9uZz5cbiAgICAgICAgPC9oZWFkZXI+XG5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJ0aWxlVHlwZVwiPlRpbGUgVHlwZSAocmVxdWlyZWQpOjwvbGFiZWw+XG4gICAgICAgIDxzZWxlY3RcbiAgICAgICAgICByZWY9e2MgPT4ge1xuICAgICAgICAgICAgdGhpcy50eXBlID0gYztcbiAgICAgICAgICB9fVxuICAgICAgICAgIG5hbWU9XCJ0aWxlVHlwZVwiXG4gICAgICAgICAgdmFsdWU9e3R5cGV9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICA+XG4gICAgICAgICAge09iamVjdC5lbnRyaWVzKG9wdGlvbnMpLm1hcCgoW25hbWUsIHZhbHVlXSkgPT4gKFxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT17dmFsdWV9IGtleT17dmFsdWV9PlxuICAgICAgICAgICAgICB7bmFtZX1cbiAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAge3R5cGUgPiAweGZmZmYgJiYgKFxuICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJ6b29tXCI+RG91YmxlIHNpemU6PC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICByZWY9e2MgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuem9vbSA9IGM7XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgIG5hbWU9XCJ6b29tXCJcbiAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgY2hlY2tlZD17em9vbX1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICl9XG4gICAgICAgIHt0eXBlID09PSBTcXVhcmVUeXBlLlNQUklURVNUQVJUICYmIChcbiAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiZGlyZWN0aW9uXCI+U3RhcnQgZGlyZWN0aW9uOjwvbGFiZWw+XG4gICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgIHJlZj17YyA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5kaXJlY3Rpb24gPSBjO1xuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICBuYW1lPVwiZGlyZWN0aW9uXCJcbiAgICAgICAgICAgICAgdmFsdWU9e3RoaXMucHJvcHMuY2VsbC5kaXJlY3Rpb25ffVxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtPYmplY3QuZW50cmllcyhzdGFydERpcmVjdGlvbnMpLm1hcCgoW25hbWUsIHZhbHVlXSkgPT4gKFxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9e3ZhbHVlfSBrZXk9e3ZhbHVlfT5cbiAgICAgICAgICAgICAgICAgIHtuYW1lfVxuICAgICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKX1cbiAgICAgIDwvZm9ybT5cbiAgICApO1xuICB9XG59XG4iLCIvKipcbiAqIEBvdmVydmlldyBSZWFjdCBjb21wb25lbnQgdG8gYWxsb3cgZm9yIGVhc3kgZWRpdGluZyBhbmQgY3JlYXRpb24gb2YgU3R1ZGlvIENlbGxzXG4gKiBAc2VlIEBjZG8vYXBwcy9zdHVkaW8vY2VsbFxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7XG4gIERpcmVjdGlvbixcbiAgRW1vdGlvbnMsXG4gIFNwcml0ZVNpemUsXG4gIFNwcml0ZVNwZWVkLFxuICBTcXVhcmVUeXBlLFxufSBmcm9tICdAY2RvL2FwcHMvc3R1ZGlvL2NvbnN0YW50cyc7XG5cbmltcG9ydCBDZWxsRWRpdG9yIGZyb20gJy4vQ2VsbEVkaXRvcic7XG5cbi8vIFRPRE8gZWxpamFoIHRoaXMgbGlzdCBpcyBwdWxsZWQgZnJvbSBAY2RvL2FwcHMvc3R1ZGlvL3NraW5zOmxvYWRTdHVkaW8oKSxcbi8vIHdoZXJlIGl0IGlzIGhhcmRjb2RlZCBhcyB0aGUgbGlzdCBvZiBhdmF0YXJzIGZvciB0aGUgQ29kZSBTdHVkaW8gUGxheWxhYlxuLy8gU2tpbi4gVGhlIGxpc3QgaXMgZHVwbGljYXRlZCBpbiBHcmlkLmpzeCBmb3IgdGhlIHB1cnBvc2VzIG9mIGRpc3BsYXlpbmcgdGhlXG4vLyBzcHJpdGVzLiBJZGVhbGx5LCBib3RoIG9mIHRoZXNlIHRlbXBsYXRlcyB3b3VsZCBqdXN0IGJlIHJlZmVyZW5jaW5nIGEgbW9yZVxuLy8gcHVibGljYWxseS1hY2Nlc3NpYmxlIGxpc3QgaW4gYXBwcyBjb2RlLlxuLy9cbi8vIEV2ZW4gbW9yZSBpZGVhbGx5LCB0aGlzIGVkaXRvciB3b3VsZCBiZSBleHBhbmRlZCB0byBzdXBwb3J0IGFueSBvZiBvdXIgc2tpbnMsXG4vLyBidXQgdGhhdCB3aWxsIGxpa2VseSByZXF1aXJlIGEgYml0IG9mIGEgcmVmYWN0b3IgaW4gdGhlIHdheSB3ZSBoYW5kbGUgc2tpbnMsXG4vLyBhbmQgaXMgdW5qdXN0aWZpYWJsZSBmb3Igbm93LCBzaW5jZSB0aGUgUGxheWxhYi1za2lubmVkIGxldmVscyBhcmUgY3VycmVudGx5XG4vLyB0aGUgb25seSBvbmVzIHdlIGVkaXQgd2l0aCB0aGlzIGludGVyZmFjZS5cbmNvbnN0IGF2YXRhckxpc3QgPSBbXG4gICdkb2cnLFxuICAnY2F0JyxcbiAgJ3Blbmd1aW4nLFxuICAnZGlub3NhdXInLFxuICAnb2N0b3B1cycsXG4gICd3aXRjaCcsXG4gICdiYXQnLFxuICAnYmlyZCcsXG4gICdkcmFnb24nLFxuICAnc3F1aXJyZWwnLFxuICAnd2l6YXJkJyxcbiAgJ2FsaWVuJyxcbiAgJ2dob3N0JyxcbiAgJ21vbnN0ZXInLFxuICAncm9ib3QnLFxuICAndW5pY29ybicsXG4gICd6b21iaWUnLFxuICAna25pZ2h0JyxcbiAgJ25pbmphJyxcbiAgJ3BpcmF0ZScsXG4gICdjYXZlYm95JyxcbiAgJ2NhdmVnaXJsJyxcbiAgJ3ByaW5jZXNzJyxcbiAgJ3NwYWNlYm90JyxcbiAgJ3NvY2NlcmdpcmwnLFxuICAnc29jY2VyYm95JyxcbiAgJ3Rlbm5pc2dpcmwnLFxuICAndGVubmlzYm95Jyxcbl07XG5cbi8vIFVzZSBhIHN1YnNldCBvZiBzdHVkaW8gU3F1YXJlVHlwZXMgZm9yIHRoZSB0aWxldHlwZXMsIHNpbmNlIG1hbnkgb2YgdGhlbSBhcmVcbi8vIG5vdCB1c2VkIG9yIGFyZSB1c2VkIG9ubHkgYnkgbm9uLWxldmVsYnVpbGRlci1lZGl0YWJsZSBpbXBsZW1lbnRhdGlvbnMuXG4vLyBBbHNvIG92ZXJyaWRlIHRoZSBuYW1lcyBiZWNhdXNlICdnb2FsJyBpcyBwcmV0dGllciB0aGFuICdzcHJpdGVmaW5pc2gnXG5jb25zdCB1c2VkU3F1YXJlVHlwZXMgPSB7XG4gIE9QRU46IFNxdWFyZVR5cGUuT1BFTixcbiAgR09BTDogU3F1YXJlVHlwZS5TUFJJVEVGSU5JU0gsXG4gIFNUQVJUOiBTcXVhcmVUeXBlLlNQUklURVNUQVJULFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3R1ZGlvQ2VsbEVkaXRvciBleHRlbmRzIENlbGxFZGl0b3Ige1xuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICBnZXRTZWxlY3RGaWVsZE5hbWVzKCkge1xuICAgIHJldHVybiBzdXBlclxuICAgICAgLmdldFNlbGVjdEZpZWxkTmFtZXMoKVxuICAgICAgLmNvbmNhdChbJ3NwZWVkJywgJ3NpemUnLCAnZGlyZWN0aW9uJywgJ2Vtb3Rpb24nLCAnc3ByaXRlJ10pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgcmVuZGVyRmllbGRzKHZhbHVlcykge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7c3VwZXIucmVuZGVyVGlsZVR5cGVzKHZhbHVlcywgdXNlZFNxdWFyZVR5cGVzKX1cblxuICAgICAgICB7dmFsdWVzLnRpbGVUeXBlID09PSBTcXVhcmVUeXBlLlNQUklURVNUQVJUICYmIChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJzcHJpdGVcIj5TcHJpdGU6PC9sYWJlbD5cbiAgICAgICAgICAgIDxzZWxlY3RcbiAgICAgICAgICAgICAgbmFtZT1cInNwcml0ZVwiXG4gICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZXMuc3ByaXRlfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJ1bmRlZmluZWRcIj5kZWZhdWx0PC9vcHRpb24+XG4gICAgICAgICAgICAgIHthdmF0YXJMaXN0Lm1hcCgoc3ByaXRlLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgIDxvcHRpb24ga2V5PXtzcHJpdGV9IHZhbHVlPXtpfT5cbiAgICAgICAgICAgICAgICAgICAge3Nwcml0ZX1cbiAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9zZWxlY3Q+XG5cbiAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwic3BlZWRcIj5TcGVlZDogPC9sYWJlbD5cbiAgICAgICAgICAgIDxzZWxlY3RcbiAgICAgICAgICAgICAgbmFtZT1cInNwZWVkXCJcbiAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlcy5zcGVlZH1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwidW5kZWZpbmVkXCI+ZGVmYXVsdDwvb3B0aW9uPlxuICAgICAgICAgICAgICB7T2JqZWN0LmtleXMoU3ByaXRlU3BlZWQpLm1hcCh0eXBlID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPG9wdGlvbiBrZXk9e3R5cGV9IHZhbHVlPXtTcHJpdGVTcGVlZFt0eXBlXX0+XG4gICAgICAgICAgICAgICAgICAgIHt0eXBlLnJlcGxhY2UoL18vZywgJyAnKS50b0xvd2VyQ2FzZSgpfVxuICAgICAgICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L3NlbGVjdD5cblxuICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJzaXplXCI+U2l6ZTogPC9sYWJlbD5cbiAgICAgICAgICAgIDxzZWxlY3RcbiAgICAgICAgICAgICAgbmFtZT1cInNpemVcIlxuICAgICAgICAgICAgICB2YWx1ZT17dmFsdWVzLnNpemV9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInVuZGVmaW5lZFwiPmRlZmF1bHQ8L29wdGlvbj5cbiAgICAgICAgICAgICAge09iamVjdC5rZXlzKFNwcml0ZVNpemUpLm1hcCh0eXBlID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPG9wdGlvbiBrZXk9e3R5cGV9IHZhbHVlPXtTcHJpdGVTaXplW3R5cGVdfT5cbiAgICAgICAgICAgICAgICAgICAge3R5cGUucmVwbGFjZSgvXy9nLCAnICcpLnRvTG93ZXJDYXNlKCl9XG4gICAgICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuXG4gICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImRpcmVjdGlvblwiPkRpcmVjdGlvbjogPC9sYWJlbD5cbiAgICAgICAgICAgIDxzZWxlY3RcbiAgICAgICAgICAgICAgbmFtZT1cImRpcmVjdGlvblwiXG4gICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZXMuZGlyZWN0aW9ufVxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJ1bmRlZmluZWRcIj5kZWZhdWx0PC9vcHRpb24+XG4gICAgICAgICAgICAgIHtPYmplY3Qua2V5cyhEaXJlY3Rpb24pLm1hcCh0eXBlID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPG9wdGlvbiBrZXk9e3R5cGV9IHZhbHVlPXtEaXJlY3Rpb25bdHlwZV19PlxuICAgICAgICAgICAgICAgICAgICB7dHlwZS5yZXBsYWNlKC9fL2csICcgJykudG9Mb3dlckNhc2UoKX1cbiAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9zZWxlY3Q+XG5cbiAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiZW1vdGlvblwiPkVtb3Rpb246IDwvbGFiZWw+XG4gICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgIG5hbWU9XCJlbW90aW9uXCJcbiAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlcy5lbW90aW9ufVxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJ1bmRlZmluZWRcIj5kZWZhdWx0PC9vcHRpb24+XG4gICAgICAgICAgICAgIHtPYmplY3Qua2V5cyhFbW90aW9ucykubWFwKHR5cGUgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8b3B0aW9uIGtleT17dHlwZX0gdmFsdWU9e0Vtb3Rpb25zW3R5cGVdfT5cbiAgICAgICAgICAgICAgICAgICAge3R5cGUucmVwbGFjZSgvXy9nLCAnICcpLnRvTG93ZXJDYXNlKCl9XG4gICAgICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIiwidmFyIENlbGwgPSBmdW5jdGlvbiAodGlsZVR5cGUsIHNwZWVkLCBzaXplLCBkaXJlY3Rpb24sIGVtb3Rpb24sIHNwcml0ZSkge1xuICAvKipcbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIHRoaXMudGlsZVR5cGVfID0gdGlsZVR5cGU7XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICB0aGlzLnNwZWVkXyA9IHNwZWVkO1xuXG4gIC8qKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgdGhpcy5zaXplXyA9IHNpemU7XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICB0aGlzLmRpcmVjdGlvbl8gPSBkaXJlY3Rpb247XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICB0aGlzLmVtb3Rpb25fID0gZW1vdGlvbjtcblxuICAvKipcbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIHRoaXMuc3ByaXRlXyA9IHNwcml0ZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2VsbDtcblxuLyoqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKi9cbkNlbGwucHJvdG90eXBlLmdldFRpbGVUeXBlID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy50aWxlVHlwZV87XG59O1xuXG4vKipcbiAqIFJldHVybnMgYSBuZXcgQ2VsbCB0aGF0J3MgYW4gZXhhY3QgcmVwbGljYSBvZiB0aGlzIG9uZVxuICogQHJldHVybiB7Q2VsbH1cbiAqL1xuQ2VsbC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBuZXdDZWxsID0gbmV3IENlbGwoXG4gICAgdGhpcy50aWxlVHlwZV8sXG4gICAgdGhpcy5zcGVlZF8sXG4gICAgdGhpcy5zaXplXyxcbiAgICB0aGlzLmRpcmVjdGlvbl8sXG4gICAgdGhpcy5lbW90aW9uXyxcbiAgICB0aGlzLnNwcml0ZV9cbiAgKTtcbiAgcmV0dXJuIG5ld0NlbGw7XG59O1xuXG4vKipcbiAqIFNlcmlhbGl6ZXMgdGhpcyBDZWxsIGludG8gSlNPTlxuICogQHJldHVybiB7T2JqZWN0fVxuICovXG5DZWxsLnByb3RvdHlwZS5zZXJpYWxpemUgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgdGlsZVR5cGU6IHRoaXMudGlsZVR5cGVfLFxuICAgIHNwZWVkOiB0aGlzLnNwZWVkXyxcbiAgICBzaXplOiB0aGlzLnNpemVfLFxuICAgIGRpcmVjdGlvbjogdGhpcy5kaXJlY3Rpb25fLFxuICAgIGVtb3Rpb246IHRoaXMuZW1vdGlvbl8sXG4gICAgc3ByaXRlOiB0aGlzLnNwcml0ZV8sXG4gIH07XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgQ2VsbCBmcm9tIHNlcmlhbGl6ZWQgSlNPTlxuICogQHBhcmFtIHtPYmplY3R9XG4gKiBAcmV0dXJuIHtDZWxsfVxuICovXG5DZWxsLmRlc2VyaWFsaXplID0gZnVuY3Rpb24gKHNlcmlhbGl6ZWQpIHtcbiAgcmV0dXJuIG5ldyBDZWxsKFxuICAgIHNlcmlhbGl6ZWQudGlsZVR5cGUsXG4gICAgc2VyaWFsaXplZC5zcGVlZCxcbiAgICBzZXJpYWxpemVkLnNpemUsXG4gICAgc2VyaWFsaXplZC5kaXJlY3Rpb24sXG4gICAgc2VyaWFsaXplZC5lbW90aW9uLFxuICAgIHNlcmlhbGl6ZWQuc3ByaXRlXG4gICk7XG59O1xuIiwiZXhwb3J0IGNvbnN0IFNwcml0ZVNwZWVkID0ge1xuICBWRVJZX1NMT1c6IDIsXG4gIFNMT1c6IDMsXG4gIExJVFRMRV9TTE9XOiA0LFxuICBOT1JNQUw6IDUsXG4gIExJVFRMRV9GQVNUOiA2LFxuICBGQVNUOiA4LFxuICBWRVJZX0ZBU1Q6IDEyLFxufTtcblxuZXhwb3J0IGNvbnN0IFNwcml0ZVNpemUgPSB7XG4gIFZFUllfU01BTEw6IDAuNSxcbiAgU01BTEw6IDAuNzUsXG4gIE5PUk1BTDogMSxcbiAgTEFSR0U6IDEuNSxcbiAgVkVSWV9MQVJHRTogMixcbn07XG5cbmV4cG9ydCBjb25zdCBEaXJlY3Rpb24gPSB7XG4gIE5PTkU6IDAsXG4gIE5PUlRIOiAxLFxuICBFQVNUOiAyLFxuICBTT1VUSDogNCxcbiAgV0VTVDogOCxcbiAgTk9SVEhFQVNUOiAzLFxuICBTT1VUSEVBU1Q6IDYsXG4gIFNPVVRIV0VTVDogMTIsXG4gIE5PUlRIV0VTVDogOSxcbn07XG5cbmV4cG9ydCBjb25zdCB0dXJuTGVmdDkwID0gZnVuY3Rpb24gKGRpcmVjdGlvbikge1xuICByZXR1cm4gZGlyZWN0aW9uID4+IDEgfHwgRGlyZWN0aW9uLldFU1Q7XG59O1xuXG5leHBvcnQgY29uc3QgdHVyblJpZ2h0OTAgPSBmdW5jdGlvbiAoZGlyZWN0aW9uKSB7XG4gIHJldHVybiAoZGlyZWN0aW9uIDw8IDEpICYgMHhmIHx8IERpcmVjdGlvbi5OT1JUSDtcbn07XG5cbmNvbnN0IERpciA9IERpcmVjdGlvbjtcblxuLyoqXG4gKiBNYXBwaW5nIG51bWJlciBvZiBzdGVwcyBhd2F5IGZyb20gbm9ydGggdG8gZGlyZWN0aW9uIGVudW0uXG4gKiBAdHlwZSB7RGlyZWN0aW9uW119XG4gKi9cbmV4cG9ydCBjb25zdCBDbG9ja3dpc2VEaXJlY3Rpb25zRnJvbU5vcnRoID0gW1xuICBEaXIuTk9SVEgsXG4gIERpci5OT1JUSEVBU1QsXG4gIERpci5FQVNULFxuICBEaXIuU09VVEhFQVNULFxuICBEaXIuU09VVEgsXG4gIERpci5TT1VUSFdFU1QsXG4gIERpci5XRVNULFxuICBEaXIuTk9SVEhXRVNULFxuXTtcblxuLyoqXG4gKiBMaXN0IG9mIGNhcmRpbmFsIGRpcmVjdGlvbnNcbiAqL1xuZXhwb3J0IGNvbnN0IENhcmRpbmFsRGlyZWN0aW9ucyA9IFtEaXIuTk9SVEgsIERpci5TT1VUSCwgRGlyLkVBU1QsIERpci5XRVNUXTtcblxuLyoqXG4gKiBHaXZlbiBhIDJEIHZlY3RvciAoeCBhbmQgeSkgcHJvdmlkZXMgdGhlIGNsb3Nlc3QgYW5pbWF0aW9uIGRpcmVjdGlvblxuICogZ2l2ZW4gaW4gb3VyIERpcmVjdGlvbiBlbnVtLlxuICogQHBhcmFtIHtudW1iZXJ9IHhcbiAqIEBwYXJhbSB7bnVtYmVyfSB5XG4gKiBAcmV0dXJucyB7RGlyZWN0aW9ufVxuICovXG5leHBvcnQgY29uc3QgZ2V0Q2xvc2VzdERpcmVjdGlvbiA9IGZ1bmN0aW9uICh4LCB5KSB7XG4gIC8vIFkgaXMgaW52ZXJ0ZWQgYmV0d2VlbiBvdXIgcGxheWxhYiBjb29yZGluYXRlIHNwYWNlIGFuZCB3aGF0IGF0YW4yIGV4cGVjdHMuXG4gIGNvbnN0IHJhZGlhbnNGcm9tTm9ydGggPSBNYXRoLmF0YW4yKHgsIC15KTtcbiAgY29uc3Qgc3RlcFJhZGlhbnMgPSBNYXRoLlBJIC8gNDtcbiAgLy8gU25hcCBwb3NpdGl2ZSBpbmRleCBvZiBuZWFyZXN0IDQ1wrAgd2hlcmUgMCBpcyBOb3J0aCwgMSBpcyBORSwgZXRjLi4uXG4gIGNvbnN0IHN0ZXBzRnJvbU5vcnRoID0gKE1hdGgucm91bmQocmFkaWFuc0Zyb21Ob3J0aCAvIHN0ZXBSYWRpYW5zKSArIDgpICUgODtcbiAgLy8gQXQgdGhpcyBwb2ludCB3ZSBzaG91bGQgaGF2ZSBhbiBpbnQgYmV0d2VlbiAwIGFuZCA3XG4gIHJldHVybiBDbG9ja3dpc2VEaXJlY3Rpb25zRnJvbU5vcnRoW3N0ZXBzRnJvbU5vcnRoXTtcbn07XG5cbmV4cG9ydCBjb25zdCBmcmFtZURpclRhYmxlID0ge307XG5mcmFtZURpclRhYmxlW0Rpci5TT1VUSEVBU1RdID0gMDtcbmZyYW1lRGlyVGFibGVbRGlyLkVBU1RdID0gMTtcbmZyYW1lRGlyVGFibGVbRGlyLk5PUlRIRUFTVF0gPSAyO1xuZnJhbWVEaXJUYWJsZVtEaXIuTk9SVEhdID0gMztcbmZyYW1lRGlyVGFibGVbRGlyLk5PUlRIV0VTVF0gPSA0O1xuZnJhbWVEaXJUYWJsZVtEaXIuV0VTVF0gPSA1O1xuZnJhbWVEaXJUYWJsZVtEaXIuU09VVEhXRVNUXSA9IDY7XG5cbmV4cG9ydCBjb25zdCBmcmFtZURpclRhYmxlV2Fsa2luZyA9IHt9O1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdbRGlyLk5PTkVdID0gMDtcbmZyYW1lRGlyVGFibGVXYWxraW5nW0Rpci5TT1VUSF0gPSAwO1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdbRGlyLlNPVVRIRUFTVF0gPSAxO1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdbRGlyLkVBU1RdID0gMjtcbmZyYW1lRGlyVGFibGVXYWxraW5nW0Rpci5OT1JUSEVBU1RdID0gMztcbmZyYW1lRGlyVGFibGVXYWxraW5nW0Rpci5OT1JUSF0gPSA0O1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdbRGlyLk5PUlRIV0VTVF0gPSA1O1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdbRGlyLldFU1RdID0gNjtcbmZyYW1lRGlyVGFibGVXYWxraW5nW0Rpci5TT1VUSFdFU1RdID0gNztcblxuLy8gRm9yd2FyZC10by1sZWZ0IChjbG9ja3dpc2UpXG5leHBvcnQgY29uc3QgZnJhbWVEaXJUYWJsZVdhbGtpbmdXaXRoSWRsZUNsb2Nrd2lzZSA9IHt9O1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdXaXRoSWRsZUNsb2Nrd2lzZVtEaXIuTk9ORV0gPSA4O1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdXaXRoSWRsZUNsb2Nrd2lzZVtEaXIuU09VVEhdID0gMDtcbmZyYW1lRGlyVGFibGVXYWxraW5nV2l0aElkbGVDbG9ja3dpc2VbRGlyLlNPVVRIRUFTVF0gPSAxO1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdXaXRoSWRsZUNsb2Nrd2lzZVtEaXIuRUFTVF0gPSAyO1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdXaXRoSWRsZUNsb2Nrd2lzZVtEaXIuTk9SVEhFQVNUXSA9IDM7XG5mcmFtZURpclRhYmxlV2Fsa2luZ1dpdGhJZGxlQ2xvY2t3aXNlW0Rpci5OT1JUSF0gPSA0O1xuZnJhbWVEaXJUYWJsZVdhbGtpbmdXaXRoSWRsZUNsb2Nrd2lzZVtEaXIuTk9SVEhXRVNUXSA9IDU7XG5mcmFtZURpclRhYmxlV2Fsa2luZ1dpdGhJZGxlQ2xvY2t3aXNlW0Rpci5XRVNUXSA9IDY7XG5mcmFtZURpclRhYmxlV2Fsa2luZ1dpdGhJZGxlQ2xvY2t3aXNlW0Rpci5TT1VUSFdFU1RdID0gNztcblxuLy8gRm9yd2FyZC10by1yaWdodCAoY291bnRlci1jbG9ja3dpc2UpXG5leHBvcnQgY29uc3QgZnJhbWVEaXJUYWJsZVdhbGtpbmdXaXRoSWRsZUNvdW50ZXJjbG9ja3dpc2UgPSB7fTtcbmZyYW1lRGlyVGFibGVXYWxraW5nV2l0aElkbGVDb3VudGVyY2xvY2t3aXNlW0Rpci5OT05FXSA9IDg7XG5mcmFtZURpclRhYmxlV2Fsa2luZ1dpdGhJZGxlQ291bnRlcmNsb2Nrd2lzZVtEaXIuU09VVEhdID0gMDtcbmZyYW1lRGlyVGFibGVXYWxraW5nV2l0aElkbGVDb3VudGVyY2xvY2t3aXNlW0Rpci5TT1VUSEVBU1RdID0gNztcbmZyYW1lRGlyVGFibGVXYWxraW5nV2l0aElkbGVDb3VudGVyY2xvY2t3aXNlW0Rpci5FQVNUXSA9IDY7XG5mcmFtZURpclRhYmxlV2Fsa2luZ1dpdGhJZGxlQ291bnRlcmNsb2Nrd2lzZVtEaXIuTk9SVEhFQVNUXSA9IDU7XG5mcmFtZURpclRhYmxlV2Fsa2luZ1dpdGhJZGxlQ291bnRlcmNsb2Nrd2lzZVtEaXIuTk9SVEhdID0gNDtcbmZyYW1lRGlyVGFibGVXYWxraW5nV2l0aElkbGVDb3VudGVyY2xvY2t3aXNlW0Rpci5OT1JUSFdFU1RdID0gMztcbmZyYW1lRGlyVGFibGVXYWxraW5nV2l0aElkbGVDb3VudGVyY2xvY2t3aXNlW0Rpci5XRVNUXSA9IDI7XG5mcmFtZURpclRhYmxlV2Fsa2luZ1dpdGhJZGxlQ291bnRlcmNsb2Nrd2lzZVtEaXIuU09VVEhXRVNUXSA9IDE7XG5cbi8qKlxuICogR2l2ZW4gYSBkaXJlY3Rpb24sIHJldHVybnMgdGhlIHVuaXQgdmVjdG9yIGZvciBpdC5cbiAqL1xuZXhwb3J0IGNvbnN0IFVOSVRfVkVDVE9SID0ge307XG5VTklUX1ZFQ1RPUltEaXIuTk9ORV0gPSB7eDogMCwgeTogMH07XG5VTklUX1ZFQ1RPUltEaXIuTk9SVEhdID0ge3g6IDAsIHk6IC0xfTtcblVOSVRfVkVDVE9SW0Rpci5FQVNUXSA9IHt4OiAxLCB5OiAwfTtcblVOSVRfVkVDVE9SW0Rpci5TT1VUSF0gPSB7eDogMCwgeTogMX07XG5VTklUX1ZFQ1RPUltEaXIuV0VTVF0gPSB7eDogLTEsIHk6IDB9O1xuVU5JVF9WRUNUT1JbRGlyLk5PUlRIRUFTVF0gPSB7eDogMSwgeTogLTF9O1xuVU5JVF9WRUNUT1JbRGlyLlNPVVRIRUFTVF0gPSB7eDogMSwgeTogMX07XG5VTklUX1ZFQ1RPUltEaXIuU09VVEhXRVNUXSA9IHt4OiAtMSwgeTogMX07XG5VTklUX1ZFQ1RPUltEaXIuTk9SVEhXRVNUXSA9IHt4OiAtMSwgeTogLTF9O1xuRGlyLmdldFVuaXRWZWN0b3IgPSBmdW5jdGlvbiAoZGlyKSB7XG4gIHJldHVybiBVTklUX1ZFQ1RPUltkaXJdO1xufTtcblxuZXhwb3J0IGNvbnN0IFBvc2l0aW9uID0ge1xuICBPVVRUT1BPVVRMRUZUOiAxLFxuICBPVVRUT1BMRUZUOiAyLFxuICBPVVRUT1BDRU5URVI6IDMsXG4gIE9VVFRPUFJJR0hUOiA0LFxuICBPVVRUT1BPVVRSSUdIVDogNSxcbiAgVE9QT1VUTEVGVDogNixcbiAgVE9QTEVGVDogNyxcbiAgVE9QQ0VOVEVSOiA4LFxuICBUT1BSSUdIVDogOSxcbiAgVE9QT1VUUklHSFQ6IDEwLFxuICBNSURETEVPVVRMRUZUOiAxMSxcbiAgTUlERExFTEVGVDogMTIsXG4gIE1JRERMRUNFTlRFUjogMTMsXG4gIE1JRERMRVJJR0hUOiAxNCxcbiAgTUlERExFT1VUUklHSFQ6IDE1LFxuICBCT1RUT01PVVRMRUZUOiAxNixcbiAgQk9UVE9NTEVGVDogMTcsXG4gIEJPVFRPTUNFTlRFUjogMTgsXG4gIEJPVFRPTVJJR0hUOiAxOSxcbiAgQk9UVE9NT1VUUklHSFQ6IDIwLFxuICBPVVRCT1RUT01PVVRMRUZUOiAyMSxcbiAgT1VUQk9UVE9NTEVGVDogMjIsXG4gIE9VVEJPVFRPTUNFTlRFUjogMjMsXG4gIE9VVEJPVFRPTVJJR0hUOiAyNCxcbiAgT1VUQk9UVE9NT1VUUklHSFQ6IDI1LFxufTtcblxuLy9cbi8vIFR1cm4gc3RhdGUgbWFjaGluZSwgdXNlIGFzIE5leHRUdXJuW2Zyb21EaXJdW3RvRGlyXVxuLy9cblxuZXhwb3J0IGNvbnN0IE5leHRUdXJuID0ge307XG5cbk5leHRUdXJuW0Rpci5OT1JUSF0gPSB7fTtcbk5leHRUdXJuW0Rpci5OT1JUSF1bRGlyLk5PUlRIXSA9IERpci5OT1JUSDtcbk5leHRUdXJuW0Rpci5OT1JUSF1bRGlyLkVBU1RdID0gRGlyLk5PUlRIRUFTVDtcbk5leHRUdXJuW0Rpci5OT1JUSF1bRGlyLlNPVVRIXSA9IERpci5OT1JUSEVBU1Q7XG5OZXh0VHVybltEaXIuTk9SVEhdW0Rpci5OT05FXSA9IERpci5OT1JUSEVBU1Q7XG5OZXh0VHVybltEaXIuTk9SVEhdW0Rpci5XRVNUXSA9IERpci5OT1JUSFdFU1Q7XG5OZXh0VHVybltEaXIuTk9SVEhdW0Rpci5OT1JUSEVBU1RdID0gRGlyLk5PUlRIRUFTVDtcbk5leHRUdXJuW0Rpci5OT1JUSF1bRGlyLlNPVVRIRUFTVF0gPSBEaXIuTk9SVEhFQVNUO1xuTmV4dFR1cm5bRGlyLk5PUlRIXVtEaXIuU09VVEhXRVNUXSA9IERpci5OT1JUSFdFU1Q7XG5OZXh0VHVybltEaXIuTk9SVEhdW0Rpci5OT1JUSFdFU1RdID0gRGlyLk5PUlRIV0VTVDtcblxuTmV4dFR1cm5bRGlyLkVBU1RdID0ge307XG5OZXh0VHVybltEaXIuRUFTVF1bRGlyLk5PUlRIXSA9IERpci5OT1JUSEVBU1Q7XG5OZXh0VHVybltEaXIuRUFTVF1bRGlyLkVBU1RdID0gRGlyLkVBU1Q7XG5OZXh0VHVybltEaXIuRUFTVF1bRGlyLlNPVVRIXSA9IERpci5TT1VUSEVBU1Q7XG5OZXh0VHVybltEaXIuRUFTVF1bRGlyLk5PTkVdID0gRGlyLlNPVVRIRUFTVDtcbk5leHRUdXJuW0Rpci5FQVNUXVtEaXIuV0VTVF0gPSBEaXIuU09VVEhFQVNUO1xuTmV4dFR1cm5bRGlyLkVBU1RdW0Rpci5OT1JUSEVBU1RdID0gRGlyLk5PUlRIRUFTVDtcbk5leHRUdXJuW0Rpci5FQVNUXVtEaXIuU09VVEhFQVNUXSA9IERpci5TT1VUSEVBU1Q7XG5OZXh0VHVybltEaXIuRUFTVF1bRGlyLlNPVVRIV0VTVF0gPSBEaXIuU09VVEhFQVNUO1xuTmV4dFR1cm5bRGlyLkVBU1RdW0Rpci5OT1JUSFdFU1RdID0gRGlyLk5PUlRIRUFTVDtcblxuTmV4dFR1cm5bRGlyLlNPVVRIXSA9IHt9O1xuTmV4dFR1cm5bRGlyLlNPVVRIXVtEaXIuTk9SVEhdID0gRGlyLlNPVVRIRUFTVDtcbk5leHRUdXJuW0Rpci5TT1VUSF1bRGlyLkVBU1RdID0gRGlyLlNPVVRIRUFTVDtcbk5leHRUdXJuW0Rpci5TT1VUSF1bRGlyLlNPVVRIXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5TT1VUSF1bRGlyLk5PTkVdID0gRGlyLk5PTkU7XG5OZXh0VHVybltEaXIuU09VVEhdW0Rpci5XRVNUXSA9IERpci5TT1VUSFdFU1Q7XG5OZXh0VHVybltEaXIuU09VVEhdW0Rpci5OT1JUSEVBU1RdID0gRGlyLlNPVVRIRUFTVDtcbk5leHRUdXJuW0Rpci5TT1VUSF1bRGlyLlNPVVRIRUFTVF0gPSBEaXIuU09VVEhFQVNUO1xuTmV4dFR1cm5bRGlyLlNPVVRIXVtEaXIuU09VVEhXRVNUXSA9IERpci5TT1VUSFdFU1Q7XG5OZXh0VHVybltEaXIuU09VVEhdW0Rpci5OT1JUSFdFU1RdID0gRGlyLlNPVVRIV0VTVDtcblxuTmV4dFR1cm5bRGlyLldFU1RdID0ge307XG5OZXh0VHVybltEaXIuV0VTVF1bRGlyLk5PUlRIXSA9IERpci5OT1JUSFdFU1Q7XG5OZXh0VHVybltEaXIuV0VTVF1bRGlyLkVBU1RdID0gRGlyLlNPVVRIV0VTVDtcbk5leHRUdXJuW0Rpci5XRVNUXVtEaXIuU09VVEhdID0gRGlyLlNPVVRIV0VTVDtcbk5leHRUdXJuW0Rpci5XRVNUXVtEaXIuTk9ORV0gPSBEaXIuU09VVEhXRVNUO1xuTmV4dFR1cm5bRGlyLldFU1RdW0Rpci5XRVNUXSA9IERpci5XRVNUO1xuTmV4dFR1cm5bRGlyLldFU1RdW0Rpci5OT1JUSEVBU1RdID0gRGlyLk5PUlRIV0VTVDtcbk5leHRUdXJuW0Rpci5XRVNUXVtEaXIuU09VVEhFQVNUXSA9IERpci5TT1VUSFdFU1Q7XG5OZXh0VHVybltEaXIuV0VTVF1bRGlyLlNPVVRIV0VTVF0gPSBEaXIuU09VVEhXRVNUO1xuTmV4dFR1cm5bRGlyLldFU1RdW0Rpci5OT1JUSFdFU1RdID0gRGlyLk5PUlRIV0VTVDtcblxuTmV4dFR1cm5bRGlyLk5PUlRIRUFTVF0gPSB7fTtcbk5leHRUdXJuW0Rpci5OT1JUSEVBU1RdW0Rpci5OT1JUSF0gPSBEaXIuTk9SVEg7XG5OZXh0VHVybltEaXIuTk9SVEhFQVNUXVtEaXIuRUFTVF0gPSBEaXIuRUFTVDtcbk5leHRUdXJuW0Rpci5OT1JUSEVBU1RdW0Rpci5TT1VUSF0gPSBEaXIuRUFTVDtcbk5leHRUdXJuW0Rpci5OT1JUSEVBU1RdW0Rpci5OT05FXSA9IERpci5FQVNUO1xuTmV4dFR1cm5bRGlyLk5PUlRIRUFTVF1bRGlyLldFU1RdID0gRGlyLk5PUlRIO1xuTmV4dFR1cm5bRGlyLk5PUlRIRUFTVF1bRGlyLk5PUlRIRUFTVF0gPSBEaXIuTk9SVEhFQVNUO1xuTmV4dFR1cm5bRGlyLk5PUlRIRUFTVF1bRGlyLlNPVVRIRUFTVF0gPSBEaXIuRUFTVDtcbk5leHRUdXJuW0Rpci5OT1JUSEVBU1RdW0Rpci5TT1VUSFdFU1RdID0gRGlyLkVBU1Q7XG5OZXh0VHVybltEaXIuTk9SVEhFQVNUXVtEaXIuTk9SVEhXRVNUXSA9IERpci5OT1JUSDtcblxuTmV4dFR1cm5bRGlyLlNPVVRIRUFTVF0gPSB7fTtcbk5leHRUdXJuW0Rpci5TT1VUSEVBU1RdW0Rpci5OT1JUSF0gPSBEaXIuRUFTVDtcbk5leHRUdXJuW0Rpci5TT1VUSEVBU1RdW0Rpci5FQVNUXSA9IERpci5FQVNUO1xuTmV4dFR1cm5bRGlyLlNPVVRIRUFTVF1bRGlyLlNPVVRIXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5TT1VUSEVBU1RdW0Rpci5OT05FXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5TT1VUSEVBU1RdW0Rpci5XRVNUXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5TT1VUSEVBU1RdW0Rpci5OT1JUSEVBU1RdID0gRGlyLkVBU1Q7XG5OZXh0VHVybltEaXIuU09VVEhFQVNUXVtEaXIuU09VVEhFQVNUXSA9IERpci5TT1VUSEVBU1Q7XG5OZXh0VHVybltEaXIuU09VVEhFQVNUXVtEaXIuU09VVEhXRVNUXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5TT1VUSEVBU1RdW0Rpci5OT1JUSFdFU1RdID0gRGlyLlNPVVRIO1xuXG5OZXh0VHVybltEaXIuU09VVEhXRVNUXSA9IHt9O1xuTmV4dFR1cm5bRGlyLlNPVVRIV0VTVF1bRGlyLk5PUlRIXSA9IERpci5XRVNUO1xuTmV4dFR1cm5bRGlyLlNPVVRIV0VTVF1bRGlyLkVBU1RdID0gRGlyLlNPVVRIO1xuTmV4dFR1cm5bRGlyLlNPVVRIV0VTVF1bRGlyLlNPVVRIXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5TT1VUSFdFU1RdW0Rpci5OT05FXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5TT1VUSFdFU1RdW0Rpci5XRVNUXSA9IERpci5XRVNUO1xuTmV4dFR1cm5bRGlyLlNPVVRIV0VTVF1bRGlyLk5PUlRIRUFTVF0gPSBEaXIuU09VVEg7XG5OZXh0VHVybltEaXIuU09VVEhXRVNUXVtEaXIuU09VVEhFQVNUXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5TT1VUSFdFU1RdW0Rpci5TT1VUSFdFU1RdID0gRGlyLlNPVVRIV0VTVDtcbk5leHRUdXJuW0Rpci5TT1VUSFdFU1RdW0Rpci5OT1JUSFdFU1RdID0gRGlyLldFU1Q7XG5cbk5leHRUdXJuW0Rpci5OT1JUSFdFU1RdID0ge307XG5OZXh0VHVybltEaXIuTk9SVEhXRVNUXVtEaXIuTk9SVEhdID0gRGlyLk5PUlRIO1xuTmV4dFR1cm5bRGlyLk5PUlRIV0VTVF1bRGlyLkVBU1RdID0gRGlyLk5PUlRIO1xuTmV4dFR1cm5bRGlyLk5PUlRIV0VTVF1bRGlyLlNPVVRIXSA9IERpci5XRVNUO1xuTmV4dFR1cm5bRGlyLk5PUlRIV0VTVF1bRGlyLk5PTkVdID0gRGlyLldFU1Q7XG5OZXh0VHVybltEaXIuTk9SVEhXRVNUXVtEaXIuV0VTVF0gPSBEaXIuV0VTVDtcbk5leHRUdXJuW0Rpci5OT1JUSFdFU1RdW0Rpci5OT1JUSEVBU1RdID0gRGlyLk5PUlRIO1xuTmV4dFR1cm5bRGlyLk5PUlRIV0VTVF1bRGlyLlNPVVRIRUFTVF0gPSBEaXIuV0VTVDtcbk5leHRUdXJuW0Rpci5OT1JUSFdFU1RdW0Rpci5TT1VUSFdFU1RdID0gRGlyLldFU1Q7XG5OZXh0VHVybltEaXIuTk9SVEhXRVNUXVtEaXIuTk9SVEhXRVNUXSA9IERpci5OT1JUSFdFU1Q7XG5cbk5leHRUdXJuW0Rpci5OT05FXSA9IHt9O1xuTmV4dFR1cm5bRGlyLk5PTkVdW0Rpci5OT1JUSF0gPSBEaXIuU09VVEhFQVNUO1xuTmV4dFR1cm5bRGlyLk5PTkVdW0Rpci5FQVNUXSA9IERpci5TT1VUSEVBU1Q7XG5OZXh0VHVybltEaXIuTk9ORV1bRGlyLlNPVVRIXSA9IERpci5TT1VUSDtcbk5leHRUdXJuW0Rpci5OT05FXVtEaXIuTk9ORV0gPSBEaXIuTk9ORTtcbk5leHRUdXJuW0Rpci5OT05FXVtEaXIuV0VTVF0gPSBEaXIuU09VVEhXRVNUO1xuTmV4dFR1cm5bRGlyLk5PTkVdW0Rpci5OT1JUSEVBU1RdID0gRGlyLlNPVVRIRUFTVDtcbk5leHRUdXJuW0Rpci5OT05FXVtEaXIuU09VVEhFQVNUXSA9IERpci5TT1VUSEVBU1Q7XG5OZXh0VHVybltEaXIuTk9ORV1bRGlyLlNPVVRIV0VTVF0gPSBEaXIuU09VVEhXRVNUO1xuTmV4dFR1cm5bRGlyLk5PTkVdW0Rpci5OT1JUSFdFU1RdID0gRGlyLlNPVVRIV0VTVDtcblxuZXhwb3J0IGNvbnN0IEVtb3Rpb25zID0ge1xuICBOT1JNQUw6IDAsXG4gIEhBUFBZOiAxLFxuICBBTkdSWTogMixcbiAgU0FEOiAzLFxufTtcblxuLy8gc2NhbGUgdGhlIGNvbGxpc2lvbiBib3VuZGluZyBib3ggdG8gbWFrZSBpdCBzbyB0aGV5IG5lZWQgdG8gb3ZlcmxhcCBhIHRvdWNoOlxuZXhwb3J0IGNvbnN0IEZJTklTSF9DT0xMSURFX0RJU1RBTkNFX1NDQUxJTkcgPSAwLjc1O1xuZXhwb3J0IGNvbnN0IFNQUklURV9DT0xMSURFX0RJU1RBTkNFX1NDQUxJTkcgPSAwLjk7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NQUklURV9TUEVFRCA9IFNwcml0ZVNwZWVkLk5PUk1BTDtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1NQUklURV9TSVpFID0gMTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1NQUklURV9BTklNQVRJT05fRlJBTUVfRFVSQVRJT04gPSA2O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9QUk9KRUNUSUxFX1NQRUVEID0gU3ByaXRlU3BlZWQuU0xPVztcbmV4cG9ydCBjb25zdCBERUZBVUxUX1BST0pFQ1RJTEVfQU5JTUFUSU9OX0ZSQU1FX0RVUkFUSU9OID0gMS41O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9JVEVNX1NQRUVEID0gU3ByaXRlU3BlZWQuU0xPVztcbmV4cG9ydCBjb25zdCBERUZBVUxUX0lURU1fQU5JTUFUSU9OX0ZSQU1FX0RVUkFUSU9OID0gMS41O1xuXG4vKipcbiAqIFRoZSB0eXBlcyBvZiBzcXVhcmVzIGluIHRoZSBtYXplLCB3aGljaCBpcyByZXByZXNlbnRlZFxuICogYXMgYSAyRCBhcnJheSBvZiBTcXVhcmVUeXBlIHZhbHVlcy5cbiAqIEBlbnVtIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBTcXVhcmVUeXBlID0ge1xuICBPUEVOOiAwLFxuICBTUFJJVEVGSU5JU0g6IDEsXG4gIE5PVF9VU0VEXzI6IDIsXG4gIFdBTEw6IDQsIC8vIHJhbmRvbSB3YWxsIHRpbGVcbiAgTk9UX1VTRURfODogOCxcbiAgU1BSSVRFU1RBUlQ6IDE2LFxuICBJVEVNX0NMQVNTXzA6IDMyLCAvLyBNdXN0IHN0YXkgaW4gc3luYyB3aXRoIFNxdWFyZUl0ZW1DbGFzc1NoaWZ0IGJlbG93XG4gIElURU1fQ0xBU1NfMTogNjQsXG4gIElURU1fQ0xBU1NfMjogMTI4LFxuICBJVEVNX0NMQVNTXzM6IDI1NixcbiAgSVRFTV9DTEFTU180OiA1MTIsXG4gIElURU1fQ0xBU1NfNTogMTAyNCxcbiAgSVRFTV9DTEFTU182OiAyMDQ4LFxuICBJVEVNX0NMQVNTXzc6IDQwOTYsXG4gIE5PVF9VU0VEXzhLOiA4MTkyLFxuICBOT1RfVVNFRF8xNks6IDE2Mzg0LFxuICBOT1RfVVNFRF8zMks6IDMyNzY4LFxuICAvLyBXYWxscyBzcGVjaWZpY2FsbHkgcmV0cmlldmVkIGZyb20gYW4gMTZ4MTYgZ3JpZCBhcmUgc3RvcmVkIGluIGJpdHMgMTYtMjcuXG59O1xuXG5leHBvcnQgY29uc3QgU3F1YXJlSXRlbUNsYXNzTWFzayA9XG4gIFNxdWFyZVR5cGUuSVRFTV9DTEFTU18wIHxcbiAgU3F1YXJlVHlwZS5JVEVNX0NMQVNTXzEgfFxuICBTcXVhcmVUeXBlLklURU1fQ0xBU1NfMiB8XG4gIFNxdWFyZVR5cGUuSVRFTV9DTEFTU18zIHxcbiAgU3F1YXJlVHlwZS5JVEVNX0NMQVNTXzQgfFxuICBTcXVhcmVUeXBlLklURU1fQ0xBU1NfNSB8XG4gIFNxdWFyZVR5cGUuSVRFTV9DTEFTU182IHxcbiAgU3F1YXJlVHlwZS5JVEVNX0NMQVNTXzc7XG5cbmV4cG9ydCBjb25zdCBTcXVhcmVJdGVtQ2xhc3NTaGlmdCA9IDU7XG5cbmV4cG9ydCBmdW5jdGlvbiBzcXVhcmVIYXNJdGVtQ2xhc3MoaXRlbUNsYXNzSW5kZXgsIHNxdWFyZVZhbHVlKSB7XG4gIGNvbnN0IGNsYXNzZXNFbmFibGVkID1cbiAgICAoc3F1YXJlVmFsdWUgJiBTcXVhcmVJdGVtQ2xhc3NNYXNrKSA+Pj4gU3F1YXJlSXRlbUNsYXNzU2hpZnQ7XG4gIHJldHVybiBNYXRoLnBvdygyLCBpdGVtQ2xhc3NJbmRleCkgJiBjbGFzc2VzRW5hYmxlZDtcbn1cblxuLyoqXG4gKiBUaGUgdHlwZXMgb2Ygd2FsbHMgaW4gdGhlIG1hemUuXG4gKiBAZW51bSB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgV2FsbFR5cGUgPSB7XG4gIE5PUk1BTF9TSVpFOiAwLFxuICBET1VCTEVfU0laRTogMSxcbiAgSlVNQk9fU0laRTogMixcbn07XG5cbmV4cG9ydCBjb25zdCBXYWxsVHlwZU1hc2sgPSAweDBmMDAwMDAwO1xuZXhwb3J0IGNvbnN0IFdhbGxDb29yZFJvd01hc2sgPSAweDAwZjAwMDAwO1xuZXhwb3J0IGNvbnN0IFdhbGxDb29yZENvbE1hc2sgPSAweDAwMGYwMDAwO1xuXG5leHBvcnQgY29uc3QgV2FsbENvb3Jkc01hc2sgPVxuICBXYWxsVHlwZU1hc2sgfCBXYWxsQ29vcmRSb3dNYXNrIHwgV2FsbENvb3JkQ29sTWFzaztcbmV4cG9ydCBjb25zdCBXYWxsQ29vcmRzU2hpZnQgPSAxNjtcbmV4cG9ydCBjb25zdCBXYWxsQ29vcmRDb2xTaGlmdCA9IFdhbGxDb29yZHNTaGlmdDtcbmV4cG9ydCBjb25zdCBXYWxsQ29vcmRSb3dTaGlmdCA9IFdhbGxDb29yZHNTaGlmdCArIDQ7XG5leHBvcnQgY29uc3QgV2FsbFR5cGVTaGlmdCA9IFdhbGxDb29yZHNTaGlmdCArIDg7XG5leHBvcnQgY29uc3QgV2FsbENvb3JkTWF4ID0gMTY7IC8vIGluZGljYXRlcyBhIDE2eDE2IGdyaWQsIHdoaWNoIHJlcXVpcmVzIDggYml0c1xuZXhwb3J0IGNvbnN0IFdhbGxSYW5kb21Db29yZE1heCA9IDI7IC8vIGhvdyBtYW55IHJvd3MvY29scyB3ZSByYW5kb21seSBzZWxlY3QgdGlsZXMgZnJvbVxuXG5leHBvcnQgY29uc3QgV2FsbEFueU1hc2sgPSBXYWxsQ29vcmRzTWFzayB8IFNxdWFyZVR5cGUuV0FMTDtcblxuLy8gRmxvYXRpbmcgc2NvcmU6IGNoYW5nZSBvcGFjaXR5IGFuZCBZIGNvb3JkaW5hdGUgYnkgdGhlc2UgdmFsdWVzIGVhY2ggdGljay5cbmV4cG9ydCBjb25zdCBmbG9hdGluZ1Njb3JlQ2hhbmdlT3BhY2l0eSA9IC0wLjAyNTtcbmV4cG9ydCBjb25zdCBmbG9hdGluZ1Njb3JlQ2hhbmdlWSA9IC0xO1xuXG5leHBvcnQgY29uc3QgUkFORE9NX1ZBTFVFID0gJ3JhbmRvbSc7XG5leHBvcnQgY29uc3QgSElEREVOX1ZBTFVFID0gJ1wiaGlkZGVuXCInO1xuZXhwb3J0IGNvbnN0IENMSUNLX1ZBTFVFID0gJ1wiY2xpY2tcIic7XG5leHBvcnQgY29uc3QgVklTSUJMRV9WQUxVRSA9ICdcInZpc2libGVcIic7XG5cbmV4cG9ydCBjb25zdCBFTVBUWV9RVU9URVMgPSAnXCJcIic7XG5cbi8vIE51bWJlciBvZiBleHRyYSB0aWNrcyBiZXR3ZWVuIHRoZSBsYXN0IHRpbWUgdGhlIHNwcml0ZSBtb3ZlZCBhbmQgd2hlbiB3ZVxuLy8gcmVzZXQgdGhlbSB0byBmYWNlIHNvdXRoLlxuZXhwb3J0IGNvbnN0IElETEVfVElDS1NfQkVGT1JFX0ZBQ0VfU09VVEggPSA0O1xuXG4vKiogQHR5cGUge251bWJlcn0gYW5pbWF0aW9uIHJhdGUgaW4gZnJhbWVzIHBlciBzZWNvbmQuICovXG5leHBvcnQgY29uc3QgREVGQVVMVF9BTklNQVRJT05fUkFURSA9IDIwO1xuXG4vLyBGYWRlIGR1cmF0aW9ucyAoaW4gbWlsbGlzZWNvbmRzKVxuZXhwb3J0IGNvbnN0IEdPQUxfRkFERV9USU1FID0gMjAwO1xuZXhwb3J0IGNvbnN0IElURU1fRkFERV9USU1FID0gMjAwO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfQUNUT1JfRkFERV9USU1FID0gMTAwMDtcbmV4cG9ydCBjb25zdCBUT1VDSF9IQVpBUkRfRUZGRUNUX1RJTUUgPSAxNTAwO1xuXG4vLyBPdGhlciBkZWZhdWx0cyBmb3IgYWN0aW9uc1xuZXhwb3J0IGNvbnN0IFNIQUtFX0RFRkFVTFRfRFVSQVRJT04gPSAxMDAwO1xuZXhwb3J0IGNvbnN0IFNIQUtFX0RFRkFVTFRfQ1lDTEVTID0gNjtcbmV4cG9ydCBjb25zdCBTSEFLRV9ERUZBVUxUX0RJU1RBTkNFID0gNTtcblxuLy8gTWF4aW11bSBudW1iZXIgb2YgY2xvdWRzIHRoYXQgY2FuIGJlIGRpc3BsYXllZC5cbmV4cG9ydCBjb25zdCBNQVhfTlVNX0NMT1VEUyA9IDI7XG5cbi8vIFdpZHRoICYgaGVpZ2h0IG9mIGEgY2xvdWQuXG5leHBvcnQgY29uc3QgQ0xPVURfU0laRSA9IDMwMDtcblxuLy8gVGhlIG9wYWNpdHkgb2YgYSBjbG91ZC5cbmV4cG9ydCBjb25zdCBDTE9VRF9PUEFDSVRZID0gMC43O1xuXG4vLyBIb3cgbWFueSBtaWxsaXNlY29uZHMgdG8gdGhyb3R0bGUgYmV0d2VlbiBwbGF5aW5nIHNvdW5kcy5cbmV4cG9ydCBjb25zdCBTT1VORF9USFJPVFRMRV9USU1FID0gMjAwO1xuXG4vLyBIb3cgbWFueSBtaWxsaXNlY29uZHMgdG8gdGhyb3R0bGUgYmV0d2VlbiB3aGVuVG91Y2hPYnN0YWNsZSBldmVudHMgd2hlblxuLy8gYmxvY2tNb3ZpbmdJbnRvV2FsbHMgaXMgZW5hYmxlZC5cbmV4cG9ydCBjb25zdCBUT1VDSF9PQlNUQUNMRV9USFJPVFRMRV9USU1FID0gMzMwO1xuXG5leHBvcnQgY29uc3QgQkVIQVZJT1JfQ0hBU0UgPSAnY2hhc2UnO1xuZXhwb3J0IGNvbnN0IEJFSEFWSU9SX0ZMRUUgPSAnZmxlZSc7XG5leHBvcnQgY29uc3QgQkVIQVZJT1JfU1RPUCA9ICdub25lJztcbmV4cG9ydCBjb25zdCBCRUhBVklPUl9XQU5ERVIgPSAncm9hbSc7XG5leHBvcnQgY29uc3QgQkVIQVZJT1JfV0FUQ0hfQUNUT1IgPSAnd2F0Y2hBY3Rvcic7XG5leHBvcnQgY29uc3QgQkVIQVZJT1JfR1JJRF9BTElHTkVEID0gJ2dyaWQnO1xuXG4vLyBUYWtlIHRoZSBzY3JlZW5zaG90IGFsbW9zdCBpbW1lZGlhdGVseSwgaG9wZWZ1bGx5IGNhdGNoaW5nIHRoZVxuLy8gdGl0bGUgc2NyZWVuIGFuZCBhbnkgY2hhcmFjdGVycyBpbiB0aGVpciBpbml0aWFsIHBvc2l0aW9ucy5cbmV4cG9ydCBjb25zdCBDQVBUVVJFX1RJQ0tfQ09VTlQgPSAyMDtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIFN5bWJvbC5mb3IgJiZcbiAgICBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykpIHx8XG4gICAgMHhlYWM3O1xuXG4gIHZhciBpc1ZhbGlkRWxlbWVudCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJlxuICAgICAgb2JqZWN0ICE9PSBudWxsICYmXG4gICAgICBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgfTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKGlzVmFsaWRFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBHcmlkRWRpdG9yIGZyb20gJy4vR3JpZEVkaXRvcic7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBHcmlkRWRpdG9yLFxufTtcblxuY29uc3Qgc3RhcldhcnNHcmlkID0gW1xuICBbMTY5MDgyODgsIDE2OTA4Mjg4LCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgWzE2OTA4Mjg4LCAxNjkwODI4OCwgMCwgNjU1MzYsIDEzMTA3MiwgMTA0ODU3NiwgMCwgMF0sXG4gIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgWzAsIDAsIDAsIDE2LCAwLCAxLCAwLCAwXSxcbiAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICBbMCwgMCwgMCwgMTA0ODU3NiwgNjU1MzYsIDExNzk2NDgsIDAsIDBdLFxuICBbMCwgMTc5NTY4NjQsIDE3OTU2ODY0LCAwLCAwLCAwLCAwLCAxMDQ4NTc2XSxcbiAgWzAsIDE3OTU2ODY0LCAxNzk1Njg2NCwgMCwgMCwgMCwgMCwgMF0sXG5dO1xuXG5jb25zdCBzZXJpYWxpemVkTWF6ZSA9IHN0YXJXYXJzR3JpZC5tYXAoZnVuY3Rpb24gKHJvdykge1xuICByZXR1cm4gcm93Lm1hcChmdW5jdGlvbiAoY2VsbCkge1xuICAgIHJldHVybiB7dGlsZVR5cGU6IGNlbGx9O1xuICB9KTtcbn0pO1xuXG5jb25zdCBUZW1wbGF0ZSA9IGFyZ3MgPT4gKFxuICA8ZGl2IGlkPVwiZ3JpZFwiPlxuICAgIDxHcmlkRWRpdG9yIG9uVXBkYXRlPXsoKSA9PiB7fX0gey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKTtcblxuZXhwb3J0IGNvbnN0IEthcmVsRmFybWVyQmVlQ29sbGVjdG9yRWRpdG9yID0gVGVtcGxhdGUuYmluZCh7fSk7XG5LYXJlbEZhcm1lckJlZUNvbGxlY3RvckVkaXRvci5hcmdzID0ge1xuICBza2luOiAnYmVlJyxcbiAgbWF6ZTogW1xuICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICBbMCwgMCwgMiwgMSwgMSwgMSwgMCwgMF0sXG4gICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gIF0sXG4gIGluaXRpYWxEaXJ0OiBbXG4gICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgIFswLCAwLCAwLCAxLCAxLCAxLCAwLCAwXSxcbiAgICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0sXG4gICAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdLFxuICAgIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSxcbiAgXSxcbn07XG5cbmV4cG9ydCBjb25zdCBTdGFyV2Fyc0JCOEVkaXRvciA9IFRlbXBsYXRlLmJpbmQoe30pO1xuU3RhcldhcnNCQjhFZGl0b3IuYXJncyA9IHtcbiAgc2tpbjogJ3N0YXJ3YXJzZ3JpZCcsXG4gIHNlcmlhbGl6ZWRNYXplOiBzZXJpYWxpemVkTWF6ZSxcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJ0aWxlLWd1aWRld3BmOTAzYTk2NzAxYmZhY2VmZGViMzM2NWY1OTU3MmI4OS5wbmdcIjsiXSwibmFtZXMiOlsiZXhwb3J0cyIsIkRpcmVjdGlvbiIsIk5PUlRIIiwiRUFTVCIsIlNPVVRIIiwiV0VTVCIsIlBBRERMRV9CQUxMX0NPTExJREVfRElTVEFOQ0UiLCJGSU5JU0hfQ09MTElERV9ESVNUQU5DRSIsIkRFRkFVTFRfQkFMTF9TUEVFRCIsIkRFRkFVTFRfQkFMTF9ESVJFQ1RJT04iLCJNYXRoIiwiUEkiLCJERUZBVUxUX1BBRERMRV9TUEVFRCIsIkRFRkFVTFRfQkFMTF9TVEFSVF9ZIiwiWV9UT1BfQk9VTkRBUlkiLCJTcXVhcmVUeXBlIiwiT1BFTiIsIldBTEwiLCJHT0FMIiwiQkFMTFNUQVJUIiwiUEFERExFRklOSVNIIiwiUEFERExFU1RBUlQiLCJCQUxMRklOSVNIIiwiT0JTVEFDTEUiLCJfbWF6ZSIsInJlcXVpcmUiLCJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX0NlbGxFZGl0b3IyIiwib2JqIiwiX19lc01vZHVsZSIsIl9zZXRQcm90b3R5cGVPZiIsIm8iLCJwIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJiaW5kIiwiX19wcm90b19fIiwiQmVlQ2VsbCIsImNlbGxzIiwiX0NlbGxFZGl0b3IiLCJCZWVDZWxsRWRpdG9yIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsInByb3RvdHlwZSIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwiX3Byb3RvIiwiZ2V0U2VsZWN0RmllbGROYW1lcyIsImNhbGwiLCJjb25jYXQiLCJnZXRTYW5pdGl6ZWRWYWx1ZXMiLCJ2YWx1ZXMiLCJ0aGlzIiwicHJvcHMiLCJjZWxsIiwiaXNWYXJpYWJsZUNsb3VkIiwiZmVhdHVyZVR5cGUiLCJGZWF0dXJlVHlwZSIsIlZBUklBQkxFIiwidmFsdWUiLCJyYW5nZSIsImlzRmxvd2VyIiwiZmxvd2VyQ29sb3IiLCJyZW5kZXJGaWVsZHMiLCJjcmVhdGVFbGVtZW50IiwiaHRtbEZvciIsIm5hbWUiLCJkaXNhYmxlZCIsIm9uQ2hhbmdlIiwiaGFuZGxlQ2hhbmdlIiwiSElWRSIsIkZMT1dFUiIsImNsb3VkVHlwZSIsIkNsb3VkVHlwZSIsIlNUQVRJQyIsIkhJVkVfT1JfRkxPV0VSIiwiRkxPV0VSX09SX05PVEhJTkciLCJISVZFX09SX05PVEhJTkciLCJBTlkiLCJGbG93ZXJDb2xvciIsIlJFRCIsIlBVUlBMRSIsIkNlbGxFZGl0b3IiLCJtb2R1bGUiLCJfdGlsZXMiLCJCb3VuY2VDZWxsRWRpdG9yIiwicmVuZGVyVGlsZVR5cGVzIiwiX3Byb3BUeXBlcyIsIl90eXBlb2YiLCJTeW1ib2wiLCJpdGVyYXRvciIsIl9zbGljZWRUb0FycmF5IiwiYXJyIiwiaSIsIl9hcnJheVdpdGhIb2xlcyIsIkFycmF5IiwiaXNBcnJheSIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsInIiLCJsIiwidCIsImUiLCJuIiwidSIsImEiLCJmIiwibmV4dCIsImRvbmUiLCJwdXNoIiwibGVuZ3RoIiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJ0b1N0cmluZyIsInNsaWNlIiwiZnJvbSIsInRlc3QiLCJfbm9uSXRlcmFibGVSZXN0IiwiVHlwZUVycm9yIiwibGVuIiwiYXJyMiIsInRpbGVzIiwiX2RlZmluZVByb3BlcnR5Iiwia2V5IiwiX3RvUHJvcGVydHlLZXkiLCJfdG9QcmltaXRpdmUiLCJ0b1ByaW1pdGl2ZSIsIlN0cmluZyIsIk51bWJlciIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiX1JlYWN0JENvbXBvbmVudCIsIl90aGlzIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImZvcm0iLCJyZWR1Y2UiLCJzZXJpYWxpemVkIiwiX3JlZiIsIl9yZWYyIiwidW5kZWZpbmVkIiwiaXNOYU4iLCJvblVwZGF0ZSIsInNlcmlhbGl6ZSIsImZvckVhY2giLCJzcXVhcmVUeXBlcyIsInRpbGVUeXBlIiwia2V5cyIsIm1hcCIsInRvTG93ZXJDYXNlIiwidHlwZSIsInJlbmRlciIsIl90aGlzMiIsImNsYXNzTmFtZSIsInJlZiIsInJvdyIsImNvbCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwib2JqZWN0IiwiaXNSZXF1aXJlZCIsIm51bWJlciIsImZ1bmMiLCJfY29uc3RhbnRzIiwic3R1ZGlvVGlsZXMiLCJTUFJJVEVGSU5JU0giLCJTUFJJVEVTVEFSVCIsInN0dWRpb0F2YXRhckxpc3QiLCJrYXJlbFRpbGVzIiwiYmVlQ29uZGl0aW9ucyIsImJlZUZlYXR1cmVzIiwiQ2VsbCIsInRleHQiLCJjbGFzc05hbWVzIiwidGRTdHlsZSIsInNlbGVjdGVkIiwiaGlnaGxpZ2h0ZWQiLCJza2luIiwiZ2V0VGlsZVR5cGUiLCJzcHJpdGVfIiwiYmFja2dyb3VuZEltYWdlIiwidGlsZVR5cGVfIiwiYmFja2dyb3VuZFNpemUiLCJXYWxsVHlwZU1hc2siLCJ4IiwiV2FsbENvb3JkQ29sTWFzayIsIldhbGxDb29yZENvbFNoaWZ0IiwieSIsIldhbGxDb29yZFJvd01hc2siLCJXYWxsQ29vcmRSb3dTaGlmdCIsImJhY2tncm91bmRQb3NpdGlvbiIsImltYWdlIiwibG9nMiIsIm1hemVVdGlscyIsImlzQmVlU2tpbiIsImNsb3VkVHlwZV8iLCJmZWF0dXJlVHlwZV8iLCJpc0RpcnQiLCJkaXJ0VmFsdWUiLCJnZXRDdXJyZW50VmFsdWUiLCJkaXJ0SW5kZXgiLCJvcmlnaW5hbFZhbHVlXyIsInJhbmdlXyIsImpvaW4iLCJvbkNsaWNrIiwib25Nb3VzZURvd24iLCJvbk1vdXNlT3ZlciIsIm9uTW91c2VVcCIsInN0eWxlIiwiYm9vbCIsInN0cmluZyIsIkdyaWQiLCJfUmVhY3QkQ29tcG9uZW50MiIsIl9sZW4iLCJhcmdzIiwiX2tleSIsInNldFN0YXRlIiwiZHJhZ2dpbmciLCJkcmFnU3RhcnQiLCJzdGF0ZSIsImRyYWdDdXJyZW50IiwidG9wIiwibWluIiwibGVmdCIsImJvdHRvbSIsIm1heCIsInJpZ2h0Iiwic2V0Q29waWVkQ2VsbHMiLCJfcHJvdG8yIiwiaXNIaWdobGlnaHRpbmciLCJ0YWJsZVJvd3MiLCJ0YWJsZURhdGFzIiwic2VsZWN0ZWRSb3ciLCJzZWxlY3RlZENvbCIsIm9uU2VsZWN0aW9uQ2hhbmdlIiwiYmVnaW5EcmFnIiwibW92ZURyYWciLCJlbmREcmFnIiwiYXJyYXlPZiIsIlN0dWRpb0NlbGwiLCJIYXJ2ZXN0ZXJDZWxsRWRpdG9yIiwiUGxhbnRlckNlbGxFZGl0b3IiLCJTdGFyV2Fyc0dyaWRDZWxsRWRpdG9yIiwiU3R1ZGlvQ2VsbEVkaXRvciIsIkNlbGxKU09OIiwiZXZlbnQiLCJKU09OIiwicGFyc2UiLCJ0YXJnZXQiLCJjb21wb25lbnREaWRVcGRhdGUiLCJub2RlIiwicmVmcyIsInNlcmlhbGl6ZWRJbnB1dCIsImZvY3VzIiwic2VsZWN0Iiwic3RyaW5naWZ5Iiwic2VyaWFsaXphdGlvbiIsIkdyaWRFZGl0b3IiLCJuZXdTZXJpYWxpemVkQ2VsbERhdGEiLCJ1cGRhdGVDZWxscyIsImNvcGllZENlbGxzIiwiZ3JpZCIsIm51bU1hcHMiLCJudW1Qb3NzaWJpbGl0aWVzRm9yQ2VsbCIsImdldFBvc3NpYmxlR3JpZEFzc2V0cyIsImNlbGxDbGFzcyIsImdldENlbGxDbGFzcyIsInNlcmlhbGl6ZWRNYXplIiwiZGVzZXJpYWxpemUiLCJtYXplIiwibWF6ZUNlbGwiLCJpbml0aWFsRGlydENlbGwiLCJpbml0aWFsRGlydCIsInBhcnNlRnJvbU9sZFZhbHVlcyIsImlzSGFydmVzdGVyU2tpbiIsIkhhcnZlc3RlckNlbGwiLCJpc1BsYW50ZXJTa2luIiwiUGxhbnRlckNlbGwiLCJnZXRFZGl0b3JDbGFzcyIsIm5ld0NlbGxzIiwiX3RoaXMzIiwibmV3Um93IiwiaiIsInNlcmlhbGl6ZWREYXRhIiwiY2VsbEVkaXRvciIsInNlbGVjdGVkQ2VsbEpzb24iLCJwYXN0ZUJ1dHRvbiIsIkVkaXRvckNsYXNzIiwiaGFuZGxlQ2VsbENoYW5nZSIsInBhc3RlQ29waWVkQ2VsbHMiLCJjb21wdXRlTnVtTWFwcyIsImNoYW5nZVNlbGVjdGlvbiIsImFycmF5Iiwid2luZG93IiwiZGFzaGJvYXJkIiwiY2hlY2tlZCIsInBvc3NpYmxlRmVhdHVyZXMiLCJpbmNsdWRlcyIsIm1hcmdpbiIsInN0YXJ0c0hpZGRlbiIsImdldFRpbGUiLCJfdGlsZUd1aWRlIiwib3B0aW9ucyIsImVtcHR5Iiwic3RhcnQiLCJnb2FsIiwiY3JhdGVfMSIsImNyYXRlXzIiLCJjcmF0ZV8zIiwiY2FuaXN0ZXIiLCJjb3ZlcmVkX2NyYXRlc18xYSIsImNvdmVyZWRfY3JhdGVzXzFiIiwiY292ZXJlZF9jcmF0ZXNfMmEiLCJjb3ZlcmVkX2NyYXRlc18yYiIsImNvdmVyZWRfY3JhdGVzXzNhIiwiY292ZXJlZF9jcmF0ZXNfM2IiLCJzdGFydERpcmVjdGlvbnMiLCJOT05FIiwiRWFzdCIsIldlc3QiLCJOb3J0aCIsIlNvdXRoIiwiem9vbSIsImRpcmVjdGlvbiIsIldhbGxUeXBlU2hpZnQiLCJzcmMiLCJ0aWxlR3VpZGUiLCJhbHQiLCJjIiwiZW50cmllcyIsImRpcmVjdGlvbl8iLCJfcmVmMyIsIl9yZWY0IiwiYXZhdGFyTGlzdCIsInVzZWRTcXVhcmVUeXBlcyIsIlNUQVJUIiwic3ByaXRlIiwic3BlZWQiLCJTcHJpdGVTcGVlZCIsInJlcGxhY2UiLCJzaXplIiwiU3ByaXRlU2l6ZSIsImVtb3Rpb24iLCJFbW90aW9ucyIsInNwZWVkXyIsInNpemVfIiwiZW1vdGlvbl8iLCJjbG9uZSIsInNxdWFyZUhhc0l0ZW1DbGFzcyIsIml0ZW1DbGFzc0luZGV4Iiwic3F1YXJlVmFsdWUiLCJjbGFzc2VzRW5hYmxlZCIsIlNxdWFyZUl0ZW1DbGFzc01hc2siLCJTcXVhcmVJdGVtQ2xhc3NTaGlmdCIsInBvdyIsIlZFUllfU0xPVyIsIlNMT1ciLCJMSVRUTEVfU0xPVyIsIk5PUk1BTCIsIkxJVFRMRV9GQVNUIiwiRkFTVCIsIlZFUllfRkFTVCIsIlZFUllfU01BTEwiLCJTTUFMTCIsIkxBUkdFIiwiVkVSWV9MQVJHRSIsIk5PUlRIRUFTVCIsIlNPVVRIRUFTVCIsIlNPVVRIV0VTVCIsIk5PUlRIV0VTVCIsIkRpciIsInR1cm5MZWZ0OTAiLCJ0dXJuUmlnaHQ5MCIsIkNsb2Nrd2lzZURpcmVjdGlvbnNGcm9tTm9ydGgiLCJmcmFtZURpclRhYmxlIiwiZ2V0Q2xvc2VzdERpcmVjdGlvbiIsInJhZGlhbnNGcm9tTm9ydGgiLCJhdGFuMiIsInN0ZXBSYWRpYW5zIiwic3RlcHNGcm9tTm9ydGgiLCJyb3VuZCIsImZyYW1lRGlyVGFibGVXYWxraW5nIiwiZnJhbWVEaXJUYWJsZVdhbGtpbmdXaXRoSWRsZUNsb2Nrd2lzZSIsImZyYW1lRGlyVGFibGVXYWxraW5nV2l0aElkbGVDb3VudGVyY2xvY2t3aXNlIiwiVU5JVF9WRUNUT1IiLCJnZXRVbml0VmVjdG9yIiwiZGlyIiwiT1VUVE9QT1VUTEVGVCIsIk9VVFRPUExFRlQiLCJPVVRUT1BDRU5URVIiLCJPVVRUT1BSSUdIVCIsIk9VVFRPUE9VVFJJR0hUIiwiVE9QT1VUTEVGVCIsIlRPUExFRlQiLCJUT1BDRU5URVIiLCJUT1BSSUdIVCIsIlRPUE9VVFJJR0hUIiwiTUlERExFT1VUTEVGVCIsIk1JRERMRUxFRlQiLCJNSURETEVDRU5URVIiLCJNSURETEVSSUdIVCIsIk1JRERMRU9VVFJJR0hUIiwiQk9UVE9NT1VUTEVGVCIsIkJPVFRPTUxFRlQiLCJCT1RUT01DRU5URVIiLCJCT1RUT01SSUdIVCIsIkJPVFRPTU9VVFJJR0hUIiwiT1VUQk9UVE9NT1VUTEVGVCIsIk9VVEJPVFRPTUxFRlQiLCJPVVRCT1RUT01DRU5URVIiLCJPVVRCT1RUT01SSUdIVCIsIk9VVEJPVFRPTU9VVFJJR0hUIiwiTmV4dFR1cm4iLCJIQVBQWSIsIkFOR1JZIiwiU0FEIiwiTk9UX1VTRURfMiIsIk5PVF9VU0VEXzgiLCJJVEVNX0NMQVNTXzAiLCJJVEVNX0NMQVNTXzEiLCJJVEVNX0NMQVNTXzIiLCJJVEVNX0NMQVNTXzMiLCJJVEVNX0NMQVNTXzQiLCJJVEVNX0NMQVNTXzUiLCJJVEVNX0NMQVNTXzYiLCJJVEVNX0NMQVNTXzciLCJOT1RfVVNFRF84SyIsIk5PVF9VU0VEXzE2SyIsIk5PVF9VU0VEXzMySyIsIk5PUk1BTF9TSVpFIiwiRE9VQkxFX1NJWkUiLCJKVU1CT19TSVpFIiwiV2FsbENvb3Jkc01hc2siLCJXYWxsQ29vcmRzU2hpZnQiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJlcnIiLCJFcnJvciIsImdldFNoaW0iLCJSZWFjdFByb3BUeXBlcyIsInN5bWJvbCIsImFueSIsImVsZW1lbnQiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIl9HcmlkRWRpdG9yIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJzb3VyY2UiLCJoYXNPd25Qcm9wZXJ0eSIsImNvbXBvbmVudCIsIlRlbXBsYXRlIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9