"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[2336],{"./src/applab/ImportProjectDialog.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.ImportProjectDialog=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_Dialog=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./src/legacySharedComponents/Dialog.jsx")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_screens=__webpack_require__("./src/applab/redux/screens.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var initialState={url:""},ImportProjectDialog=exports.ImportProjectDialog=function(_React$Component){function ImportProjectDialog(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,"state",_objectSpread({},initialState)),_defineProperty(_this,"onImport",(function(){_this.props.onImport(_this.state.url),_this.setState(initialState)})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ImportProjectDialog,_React$Component),ImportProjectDialog.prototype.render=function render(){var _this2=this;return _react.default.createElement(_Dialog.default,_extends({},this.props,{title:"Import screens"}),_react.default.createElement(_Dialog.Body,null,_react.default.createElement("p",{style:styles.instructions},'Copy the share link of the app you would like to import screens from. Paste in the URL of that app below and click "Next."'," ",_react.default.createElement("a",{href:"".concat(window.dashboard.CODE_ORG_URL,"/applab/docs/import"),target:"_blank",rel:"noopener noreferrer"},"Learn More")),_react.default.createElement("div",{style:styles.urlInputWrapper},_react.default.createElement("input",{type:"text",value:this.state.url,style:styles.urlInput,onChange:function onChange(event){return _this2.setState({url:event.target.value})}})),this.props.error&&_react.default.createElement("p",{style:styles.errorText},"We can't seem to find this project. Please make sure you've entered a valid App Lab project URL.")),_react.default.createElement(_Dialog.Buttons,null,_react.default.createElement(_Dialog.Confirm,{onClick:this.onImport,disabled:this.props.isFetching},this.props.isFetching&&_react.default.createElement("span",{className:"fa fa-spin fa-spinner"})," ","Next")))},ImportProjectDialog}(_react.default.Component);_defineProperty(ImportProjectDialog,"propTypes",_objectSpread(_objectSpread({},_Dialog.default.propTypes),{},{onImport:_propTypes.default.func.isRequired,isFetching:_propTypes.default.bool,error:_propTypes.default.bool}));var styles={urlInputWrapper:{display:"flex",alignItems:"stretch",width:"100%"},urlInput:{width:"inherit"},instructions:{color:_color.default.black},errorText:{color:_color.default.red}};exports.default=(0,_reactRedux.connect)((function(state){return{isOpen:state.screens.isImportingScreen&&!state.screens.importProject.fetchedProject,isFetching:state.screens.importProject.isFetchingProject,error:state.screens.importProject.errorFetchingProject}}),(function(dispatch){return{onImport:function onImport(url){dispatch((0,_screens.fetchProject)(url))},handleClose:function handleClose(){dispatch((0,_screens.toggleImportScreen)(!1))}}}))(ImportProjectDialog)},"./src/applab/ImportProjectDialog.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WhileFetching=exports.OnOpen=exports.ErrorFetching=void 0;var _addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_ImportProjectDialog=__webpack_require__("./src/applab/ImportProjectDialog.jsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_ImportProjectDialog.ImportProjectDialog};var Template=function Template(args){return _react.default.createElement(_ImportProjectDialog.ImportProjectDialog,_extends({hideBackdrop:!0,onImport:(0,_addonActions.action)("onImport")},args))};exports.OnOpen=Template.bind({});(exports.WhileFetching=Template.bind({})).args={isFetching:!0},(exports.ErrorFetching=Template.bind({})).args={error:!0}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,