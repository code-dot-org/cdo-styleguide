"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1585],{"./src/templates/manageStudents/manageStudentsRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.convertStudentServerData=exports.convertStudentDataToArray=exports.cancelStudentTransfer=exports.cancelEditingStudent=exports.blankStudentTransferStatus=exports.blankStudentTransfer=exports.addStudentsSuccess=exports.addStudentsFull=exports.addStudentsFailure=exports.addStudents=exports.addMultipleRows=exports.addMultipleAddRows=exports.TransferType=exports.TransferStatus=exports.RowType=exports.PrintLoginCardsButtonMetricsCategory=exports.ParentLetterButtonMetricsCategory=exports.AddStatus=void 0,exports.default=function manageStudents(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_LOGIN_TYPE){var addRowInitialization={};return action.loginType!==_sharedConstants.SectionLoginType.word&&action.loginType!==_sharedConstants.SectionLoginType.picture||(addRowInitialization={studentData:_defineProperty({},addRowId,_objectSpread(_objectSpread({},blankAddRow),{},{loginType:action.loginType})),editingData:_defineProperty({},addRowId,_objectSpread(_objectSpread({},blankAddRow),{},{loginType:action.loginType}))}),_objectSpread(_objectSpread({},state),{},{loginType:action.loginType},addRowInitialization)}if(action.type===SET_STUDENTS){var studentData=_objectSpread({},action.studentData);return state.loginType!==_sharedConstants.SectionLoginType.word&&state.loginType!==_sharedConstants.SectionLoginType.picture||(studentData[addRowId]=_objectSpread(_objectSpread({},blankAddRow),{},{loginType:state.loginType})),_objectSpread(_objectSpread({},state),{},{studentData,addStatus:{status:null,numStudents:null},isLoadingStudents:!1})}if(action.type===SET_SECTION_INFO)return _objectSpread(_objectSpread({},state),{},{sectionId:action.sectionId});if(action.type===START_EDITING_STUDENT)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{isEditing:!0}))),editingData:_objectSpread(_objectSpread({},state.editingData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{id:action.studentId})))});if(action.type===CANCEL_EDITING_STUDENT)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{isEditing:!1}))),editingData:_lodash.default.omit(state.editingData,action.studentId)});if(action.type===START_SAVING_STUDENT)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{isSaving:!0}))),editingData:_objectSpread(_objectSpread({},state.editingData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.editingData[action.studentId]),{},{isSaving:!0})))});if(action.type===SAVE_STUDENT_SUCCESS)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread(_objectSpread({},state.studentData[action.studentId]),state.editingData[action.studentId]),{},{isEditing:!1,isSaving:!1,rowType:RowType.STUDENT}))),editingData:_lodash.default.omit(state.editingData,action.studentId)});if(action.type===ADD_STUDENT_FAILURE){for(var newState=_objectSpread(_objectSpread({},state),{},{addStatus:{status:AddStatus.FAIL,numStudents:action.numStudents}}),i=0;i<action.studentIds.length;i++)newState.studentData[action.studentIds[i]]=_objectSpread(_objectSpread({},state.studentData[action.studentIds[i]]),{},{isSaving:!1}),newState.editingData[action.studentIds[i]]=_objectSpread(_objectSpread({},state.editingData[action.studentIds[i]]),{},{isSaving:!1});return newState}if(action.type===ADD_STUDENT_FULL){for(var _newState=_objectSpread(_objectSpread({},state),{},{addStatus:_objectSpread(_objectSpread({},state.addStatus),{},{status:AddStatus.FULL,numStudents:action.numStudents,sectionCapacity:action.sectionCapacity,sectionCode:action.sectionCode,sectionStudentCount:action.sectionStudentCount})}),_i=0;_i<action.studentIds.length;_i++)_newState.studentData[action.studentIds[_i]]=_objectSpread(_objectSpread({},state.studentData[action.studentIds[_i]]),{},{isSaving:!1}),_newState.editingData[action.studentIds[_i]]=_objectSpread(_objectSpread({},state.editingData[action.studentIds[_i]]),{},{isSaving:!1});return _newState}if(action.type===ADD_STUDENT_SUCCESS){return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread(_objectSpread({},_lodash.default.omit(state.studentData,action.rowIds)),action.studentData),{},_defineProperty({},addRowId,_objectSpread(_objectSpread({},blankAddRow),{},{loginType:state.loginType}))),editingData:_objectSpread(_objectSpread({},_lodash.default.omit(state.editingData,action.rowIds)),{},_defineProperty({},addRowId,_objectSpread(_objectSpread({},blankAddRow),{},{loginType:state.loginType}))),addStatus:{status:AddStatus.SUCCESS,numStudents:action.numStudents}})}if(action.type===SET_SHARING_DEFAULT){var sharingDisabled=state.editingData[action.studentId].age<13;return _objectSpread(_objectSpread({},state),{},{editingData:_objectSpread(_objectSpread({},state.editingData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.editingData[action.studentId]),{},{id:action.studentId,sharingDisabled})))})}if(action.type===EDIT_STUDENT)return _objectSpread(_objectSpread({},state),{},{editingData:_objectSpread(_objectSpread({},state.editingData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread(_objectSpread({},state.editingData[action.studentId]),action.studentData),{},{id:action.studentId})))});if(action.type===EDIT_ALL){var _newState3=_objectSpread({},state);for(var studentKey in state.studentData){var student=state.studentData[studentKey];_newState3.studentData[student.id].isEditing=!0,_newState3.editingData[student.id]=_objectSpread(_objectSpread({},_newState3.studentData[student.id]),state.editingData[student.id])}return _newState3}if(action.type===UPDATE_ALL_SHARE_SETTING){var _newState4=_objectSpread({},state);for(var _studentKey in state.studentData){var _student=state.studentData[_studentKey];_newState4.editingData[_student.id].sharingDisabled=action.disable}return _newState4}if(action.type===SET_SECRET_IMAGE)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{secretPicturePath:action.image})))});if(action.type===SET_SECRET_WORDS)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),{},_defineProperty({},action.studentId,_objectSpread(_objectSpread({},state.studentData[action.studentId]),{},{secretWords:action.words})))});if(action.type===REMOVE_STUDENT){var studentId=action.studentId;if(!state.studentData[studentId])throw new Error("student does not exist");return _objectSpread(_objectSpread({},state),{},{studentData:_lodash.default.omit(state.studentData,studentId),editingData:_lodash.default.omit(state.editingData,studentId)})}if(action.type===ADD_MULTIPLE_ROWS)return _objectSpread(_objectSpread({},state),{},{studentData:_objectSpread(_objectSpread({},state.studentData),action.studentData),editingData:_objectSpread(_objectSpread({},state.editingData),action.studentData)});if(action.type===SET_SHOW_SHARING_COLUMN)return _objectSpread(_objectSpread({},state),{},{showSharingColumn:!!action.visible});if(action.type===UPDATE_STUDENT_TRANSFER)return _objectSpread(_objectSpread({},state),{},{transferData:_objectSpread(_objectSpread({},state.transferData),action.transferData),transferStatus:blankStudentTransferStatus});if(action.type===CANCEL_STUDENT_TRANSFER)return _objectSpread(_objectSpread({},state),{},{transferData:blankStudentTransfer,transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{error:null})});if(action.type===TRANSFER_STUDENTS_SUCCESS)return _objectSpread(_objectSpread({},state),{},{transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{status:TransferStatus.SUCCESS,type:action.transferType,numStudents:action.numStudents,sectionDisplay:action.sectionDisplay})});if(action.type===TRANSFER_STUDENTS_FULL)return _objectSpread(_objectSpread({},state),{},{transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{status:TransferStatus.FULL,sectionCapacity:action.sectionCapacity,numStudents:action.numStudents,sectionCode:action.sectionCode,sectionStudentCount:action.sectionStudentCount,verb:action.verb})});if(action.type===TRANSFER_STUDENTS_FAILURE)return _objectSpread(_objectSpread({},state),{},{transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{status:TransferStatus.FAIL,error:action.error})});if(action.type===TRANSFER_STUDENTS_PENDING)return _objectSpread(_objectSpread({},state),{},{transferStatus:_objectSpread(_objectSpread({},state.transferStatus),{},{status:TransferStatus.PENDING})});if(action.type===START_LOADING_STUDENTS)return _objectSpread(_objectSpread({},state),{},{isLoadingStudents:!0});if(action.type===FINISH_LOADING_STUDENTS)return _objectSpread(_objectSpread({},state),{},{isLoadingStudents:!1});return state},exports.updateStudentTransfer=exports.updateAllShareSetting=exports.transferStudentsSuccess=exports.transferStudentsPending=exports.transferStudentsFull=exports.transferStudentsFailure=exports.transferStudents=exports.startSavingStudent=exports.startLoadingStudents=exports.startEditingStudent=exports.setStudents=exports.setShowSharingColumn=exports.setSharingDefault=exports.setSectionInfo=exports.setSecretWords=exports.setSecretImage=exports.setLoginType=exports.saveStudentSuccess=exports.saveStudent=exports.saveAllStudents=exports.removeStudent=exports.loadSectionStudentData=exports.handleShareSetting=exports.getStudentCount=exports.finishLoadingStudents=exports.filterAgeGatedStudents=exports.editStudent=exports.editAll=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_teacherSectionsRedux=__webpack_require__("./src/templates/teacherDashboard/teacherSectionsRedux.js"),_sharedConstants=__webpack_require__("./generated-scripts/sharedConstants.ts");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.ParentLetterButtonMetricsCategory={ABOVE_TABLE:"above-table",BELOW_TABLE:"below-table"},exports.PrintLoginCardsButtonMetricsCategory={MANAGE_STUDENTS:"manage-students",LOGIN_INFO:"section-login-info"};var AddStatus=exports.AddStatus={SUCCESS:"success",FAIL:"fail",FULL:"full"},RowType=exports.RowType={ADD:"addRow",NEW_STUDENT:"newStudentRow",STUDENT:"studentRow"},TransferStatus=exports.TransferStatus={SUCCESS:"success",FAIL:"fail",FULL:"full",PENDING:"pending"},TransferType=exports.TransferType={MOVE_STUDENTS:"moveStudents",COPY_STUDENTS:"copyStudents"},blankStudentTransfer=exports.blankStudentTransfer={studentIds:[],sectionId:null,otherTeacher:!1,otherTeacherSection:"",copyStudents:!0},blankStudentTransferStatus=exports.blankStudentTransferStatus={status:null,type:null,error:null,numStudents:0,sectionDisplay:""},addRowId=0,addRowIdCounter=-1,blankAddRow={id:addRowId,name:"",age:"",gender:"",username:"",loginType:"",sharingDisabled:!0,isEditing:!0,rowType:RowType.ADD},blankNewStudentRow={id:addRowId,name:"",age:"",gender:"",username:"",loginType:"",sharingDisabled:!0,isEditing:!0,rowType:RowType.NEW_STUDENT},initialState={loginType:"",sectionId:null,studentData:{},editingData:{},showSharingColumn:!1,addStatus:{status:null,numStudents:null},transferData:_objectSpread({},blankStudentTransfer),transferStatus:_objectSpread({},blankStudentTransferStatus),isLoadingStudents:!0},SET_LOGIN_TYPE="manageStudents/SET_LOGIN_TYPE",SET_STUDENTS="manageStudents/SET_STUDENTS",SET_SECTION_INFO="manageStudents/SET_SECTION_INFO",START_EDITING_STUDENT="manageStudents/START_EDITING_STUDENT",CANCEL_EDITING_STUDENT="manageStudents/CANCEL_EDITING_STUDENT",REMOVE_STUDENT="manageStudents/REMOVE_STUDENT",SET_SECRET_IMAGE="manageStudents/SET_SECRET_IMAGE",SET_SECRET_WORDS="manageStudents/SET_SECRET_WORDS",EDIT_STUDENT="manageStudents/EDIT_STUDENT",START_SAVING_STUDENT="manageStudents/START_SAVING_STUDENT",SAVE_STUDENT_SUCCESS="manageStudents/SAVE_STUDENT_SUCCESS",ADD_STUDENT_SUCCESS="manageStudents/ADD_STUDENT_SUCCESS",ADD_STUDENT_FAILURE="manageStudents/ADD_STUDENT_FAILURE",ADD_STUDENT_FULL="manageStudents/ADD_STUDENT_FULL",ADD_MULTIPLE_ROWS="manageStudents/ADD_MULTIPLE_ROWS",SET_SHOW_SHARING_COLUMN="manageStudents/SET_SHOW_SHARING_COLUMN",EDIT_ALL="manageStudents/EDIT_ALL",UPDATE_ALL_SHARE_SETTING="manageStudents/UPDATE_ALL_SHARE_SETTING",SET_SHARING_DEFAULT="manageStudents/SET_SHARING_DEFAULT",UPDATE_STUDENT_TRANSFER="manageStudents/UPDATE_STUDENT_TRANSFER",CANCEL_STUDENT_TRANSFER="manageStudents/CANCEL_STUDENT_TRANSFER",TRANSFER_STUDENTS_SUCCESS="manageStudents/TRANSFER_STUDENTS_SUCCESS",TRANSFER_STUDENTS_FAILURE="manageStudents/TRANSFER_STUDENTS_FAILURE",TRANSFER_STUDENTS_PENDING="manageStudents/TRANSFER_STUDENTS_PENDING",TRANSFER_STUDENTS_FULL="manageStudents/TRANSFER_STUDENTS_FULL",START_LOADING_STUDENTS="manageStudents/START_LOADING_STUDENTS",FINISH_LOADING_STUDENTS="manageStudents/FINISH_LOADING_STUDENTS",startLoadingStudents=exports.startLoadingStudents=function startLoadingStudents(){return{type:START_LOADING_STUDENTS}},finishLoadingStudents=exports.finishLoadingStudents=function finishLoadingStudents(){return{type:FINISH_LOADING_STUDENTS}},setStudents=(exports.setLoginType=function setLoginType(loginType){return{type:SET_LOGIN_TYPE,loginType}},exports.setStudents=function setStudents(studentData){return{type:SET_STUDENTS,studentData}}),setSectionInfo=exports.setSectionInfo=function setSectionInfo(sectionId){return{type:SET_SECTION_INFO,sectionId}},removeStudent=(exports.startEditingStudent=function startEditingStudent(studentId){return{type:START_EDITING_STUDENT,studentId}},exports.cancelEditingStudent=function cancelEditingStudent(studentId){return{type:CANCEL_EDITING_STUDENT,studentId}},exports.removeStudent=function removeStudent(studentId){return{type:REMOVE_STUDENT,studentId}}),editAll=(exports.setSecretImage=function setSecretImage(studentId,image){return{type:SET_SECRET_IMAGE,studentId,image}},exports.setSecretWords=function setSecretWords(studentId,words){return{type:SET_SECRET_WORDS,studentId,words}},exports.editStudent=function editStudent(studentId,studentData){return{type:EDIT_STUDENT,studentId,studentData}},exports.setSharingDefault=function setSharingDefault(studentId){return{type:SET_SHARING_DEFAULT,studentId}},exports.editAll=function editAll(){return{type:EDIT_ALL}}),updateAllShareSetting=exports.updateAllShareSetting=function updateAllShareSetting(disable){return{type:UPDATE_ALL_SHARE_SETTING,disable}},startSavingStudent=exports.startSavingStudent=function startSavingStudent(studentId){return{type:START_SAVING_STUDENT,studentId}},saveStudentSuccess=exports.saveStudentSuccess=function saveStudentSuccess(studentId){return{type:SAVE_STUDENT_SUCCESS,studentId}},transferStudentsSuccess=(exports.updateStudentTransfer=function updateStudentTransfer(transferData){return{type:UPDATE_STUDENT_TRANSFER,transferData}},exports.cancelStudentTransfer=function cancelStudentTransfer(){return{type:CANCEL_STUDENT_TRANSFER}},exports.transferStudentsSuccess=function transferStudentsSuccess(transferType,numStudents,sectionDisplay){return{type:TRANSFER_STUDENTS_SUCCESS,transferType,numStudents,sectionDisplay}}),transferStudentsFailure=exports.transferStudentsFailure=function transferStudentsFailure(error){return{type:TRANSFER_STUDENTS_FAILURE,error}},transferStudentsPending=exports.transferStudentsPending=function transferStudentsPending(){return{type:TRANSFER_STUDENTS_PENDING}},transferStudentsFull=exports.transferStudentsFull=function transferStudentsFull(_ref,copy){var sectionCapacity=_ref.sectionCapacity,numStudents=_ref.numStudents,sectionCode=_ref.sectionCode,sectionStudentCount=_ref.sectionStudentCount;return{type:TRANSFER_STUDENTS_FULL,sectionCapacity,numStudents,sectionStudentCount,sectionCode,verb:copy?"copy":"move"}},addStudentsSuccess=exports.addStudentsSuccess=function addStudentsSuccess(numStudents,rowIds,studentData){return{type:ADD_STUDENT_SUCCESS,numStudents,rowIds,studentData}},addStudentsFailure=exports.addStudentsFailure=function addStudentsFailure(numStudents,error,studentIds){return{type:ADD_STUDENT_FAILURE,numStudents,error,studentIds}},addStudentsFull=exports.addStudentsFull=function addStudentsFull(_ref2,studentIds){var sectionCapacity=_ref2.sectionCapacity,numStudents=_ref2.numStudents,sectionCode=_ref2.sectionCode,sectionStudentCount=_ref2.sectionStudentCount;return{type:ADD_STUDENT_FULL,sectionCapacity,numStudents,sectionStudentCount,sectionCode,studentIds}},addMultipleRows=exports.addMultipleRows=function addMultipleRows(studentData){return{type:ADD_MULTIPLE_ROWS,studentData}},saveStudent=(exports.setShowSharingColumn=function setShowSharingColumn(visible){return{type:SET_SHOW_SHARING_COLUMN,visible}},exports.handleShareSetting=function handleShareSetting(disable){return function(dispatch,getState){dispatch(editAll()),dispatch(updateAllShareSetting(disable))}},exports.saveStudent=function saveStudent(studentId){return function(dispatch,getState){var state=getState().manageStudents,sectionId=getState().teacherSections.selectedSectionId;dispatch(startSavingStudent(studentId)),updateStudentOnServer(state.editingData[studentId],sectionId,(function(error,data){error&&console.error(error),dispatch(saveStudentSuccess(studentId)),dispatch((0,_teacherSectionsRedux.asyncLoadSectionData)(sectionId))}))}}),addStudents=(exports.saveAllStudents=function saveAllStudents(){return function(dispatch,getState){var state=getState().manageStudents;Object.values(state.editingData).filter((function(student){return student.rowType===RowType.STUDENT})).forEach((function(student){""!==student.name&&dispatch(saveStudent(student.id))}));var newStudentsToAdd=Object.values(state.editingData).filter((function(student){return student.rowType===RowType.NEW_STUDENT&&!student.isSaving})).map((function(student){return student.id}));newStudentsToAdd.length>0&&dispatch(addStudents(newStudentsToAdd))}},exports.addStudents=function addStudents(studentIds){return function(dispatch,getState){for(var state=getState().manageStudents,sectionId=getState().teacherSections.selectedSectionId,numStudentsToAdd=studentIds.length,i=0;i<studentIds.length;i++)dispatch(startSavingStudent(studentIds[i]));var filteredData=Object.values(state.editingData).filter((function(student){return studentIds.includes(student.id)}));addStudentOnServer(filteredData,sectionId,(function(error,data){error&&data&&data.result===AddStatus.FULL?dispatch(addStudentsFull(data,studentIds)):error?(dispatch(addStudentsFailure(numStudentsToAdd,error,studentIds)),console.error(error)):(dispatch(addStudentsSuccess(numStudentsToAdd,studentIds,convertStudentServerData(data,state.loginType,sectionId))),dispatch((0,_teacherSectionsRedux.asyncLoadSectionData)(sectionId)))}))}});exports.addMultipleAddRows=function addMultipleAddRows(studentDataArray){return function(dispatch,getState){var studentData=studentDataArray.filter((function(data){return data.name})).reduce((function(accumulator,data){var newId=addRowIdCounter--;return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},newId,_objectSpread(_objectSpread({},blankNewStudentRow),{},{name:data.name,familyName:data.familyName,id:newId})))}),{});dispatch(addMultipleRows(studentData))}},exports.transferStudents=function transferStudents(onComplete){return function(dispatch,getState){dispatch(transferStudentsPending());var newSectionCode,state=getState(),currentSectionCode=(0,_teacherSectionsRedux.sectionCode)(state,state.teacherSections.selectedSectionId),_state$manageStudents=state.manageStudents.transferData,studentIds=_state$manageStudents.studentIds,newSectionId=_state$manageStudents.sectionId,otherTeacher=_state$manageStudents.otherTeacher,otherTeacherSection=_state$manageStudents.otherTeacherSection,copyStudents=_state$manageStudents.copyStudents;newSectionCode=otherTeacher&&otherTeacherSection?otherTeacherSection:(0,_teacherSectionsRedux.sectionCode)(state,newSectionId),transferStudentsOnServer(studentIds,currentSectionCode,newSectionCode,copyStudents,(function(error,data){if(error&&data&&data.result===TransferStatus.FULL)dispatch(transferStudentsFull(data,copyStudents)),onComplete();else if(error)dispatch(transferStudentsFailure(data&&data.error||error));else{copyStudents&&otherTeacher||studentIds.forEach((function(id){dispatch(removeStudent(id))}));var transferType=copyStudents?TransferType.COPY_STUDENTS:TransferType.MOVE_STUDENTS,sectionDisplay=otherTeacher?otherTeacherSection:(0,_teacherSectionsRedux.sectionName)(state,newSectionId);dispatch(transferStudentsSuccess(transferType,studentIds.length,sectionDisplay)),onComplete(),dispatch((0,_teacherSectionsRedux.asyncLoadSectionData)(state.teacherSections.selectedSectionId))}}))}};exports.getStudentCount=function getStudentCount(state){var studentData=_objectSpread({},state.manageStudents.studentData);return delete studentData[0],Object.keys(studentData).length};var convertStudentServerData=exports.convertStudentServerData=function convertStudentServerData(studentData,loginType,sectionId){for(var studentLookup={},i=0;i<studentData.length;i++){var student=studentData[i];studentLookup[student.id]={id:student.id,name:student.name,familyName:student.family_name,username:student.username,email:student.email,age:student.age||"",gender:student.gender||"",genderTeacherInput:student.gender_teacher_input||"",secretWords:student.secret_words,secretPicturePath:student.secret_picture_path,loginType,sectionId,sharingDisabled:student.sharing_disabled,hasEverSignedIn:student.has_ever_signed_in,dependsOnThisSectionForLogin:student.depends_on_this_section_for_login,isEditing:!1,isSaving:!1,rowType:RowType.STUDENT,userType:student.user_type,atRiskAgeGatedStudent:student.at_risk_age_gated,childAccountComplianceState:student.child_account_compliance_state,latestPermissionRequestSentAt:student.latest_permission_request_sent_at&&new Date(student.latest_permission_request_sent_at)}}return studentLookup},updateStudentOnServer=(exports.convertStudentDataToArray=function convertStudentDataToArray(studentData){return Object.values(studentData).reverse()},function updateStudentOnServer(updatedStudentInfo,sectionId,onComplete){var dataToUpdate={student:{id:updatedStudentInfo.id,name:updatedStudentInfo.name,family_name:updatedStudentInfo.familyName,age:updatedStudentInfo.age,gender:updatedStudentInfo.gender,gender_teacher_input:updatedStudentInfo.genderTeacherInput,sharing_disabled:updatedStudentInfo.sharingDisabled}};_jquery.default.ajax({url:"/dashboardapi/sections/".concat(sectionId,"/students/").concat(dataToUpdate.student.id),method:"PATCH",type:"json",contentType:"application/json;charset=UTF-8",data:JSON.stringify(dataToUpdate)}).done((function(data){onComplete(null,data)})).fail((function(jqXhr,status){onComplete(status,null)}))}),addStudentOnServer=function addStudentOnServer(updatedStudentsInfo,sectionId,onComplete){for(var studentsToAdd=[],i=0;i<updatedStudentsInfo.length;i++)studentsToAdd[i]={editing:!0,name:updatedStudentsInfo[i].name,family_name:updatedStudentsInfo[i].familyName,age:updatedStudentsInfo[i].age,gender:updatedStudentsInfo[i].gender,gender_teacher_input:updatedStudentsInfo[i].genderTeacherInput,sharing_disabled:updatedStudentsInfo[i].sharingDisabled};var students={students:studentsToAdd};_jquery.default.ajax({url:"/dashboardapi/sections/".concat(sectionId,"/students/bulk_add"),method:"POST",contentType:"application/json;charset=UTF-8",data:JSON.stringify(students)}).done((function(data){onComplete(null,data)})).fail((function(jqXhr,status){onComplete(status,jqXhr.responseJSON||null)}))},transferStudentsOnServer=function transferStudentsOnServer(studentIds,currentSectionCode,newSectionCode,stayEnrolledInCurrentSection,onComplete){var payload={student_ids:studentIds,current_section_code:currentSectionCode,new_section_code:newSectionCode,stay_enrolled_in_current_section:stayEnrolledInCurrentSection};_jquery.default.ajax({url:"/dashboardapi/sections/transfers",method:"POST",contentType:"application/json;charset=UTF-8",data:JSON.stringify(payload)}).done((function(data){onComplete(null,data)})).fail((function(jqXhr,status){onComplete(status,jqXhr.responseJSON)}))};exports.loadSectionStudentData=function loadSectionStudentData(sectionId){return function(dispatch,getState){var state=getState().manageStudents,oldSectionId=state.sectionId;state.sectionId!==sectionId?(dispatch(setSectionInfo(sectionId)),dispatch(startLoadingStudents()),_jquery.default.ajax({method:"GET",url:"/dashboardapi/sections/".concat(sectionId,"/students"),dataType:"json"}).done((function(studentData){var convertedStudentData=convertStudentServerData(studentData,state.loginType,sectionId);dispatch(setStudents(convertedStudentData))})).fail((function(){dispatch(setSectionInfo(oldSectionId)),dispatch(finishLoadingStudents())}))):dispatch(finishLoadingStudents())}},exports.filterAgeGatedStudents=function filterAgeGatedStudents(studentData){return studentData.filter((function(student){return student.atRiskAgeGatedStudent}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU9BLFlBQVlvRyxRQUFPLFNBQUF0RCxTQUFPLE9BQUlBLFFBQVE0SyxxQkFBcUIsR0FDcEUsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvbWFuYWdlU3R1ZGVudHMvbWFuYWdlU3R1ZGVudHNSZWR1eC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuaW1wb3J0IHtcbiAgc2VjdGlvbkNvZGUsXG4gIHNlY3Rpb25OYW1lLFxuICBhc3luY0xvYWRTZWN0aW9uRGF0YSxcbn0gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy90ZWFjaGVyRGFzaGJvYXJkL3RlYWNoZXJTZWN0aW9uc1JlZHV4JztcbmltcG9ydCB7U2VjdGlvbkxvZ2luVHlwZX0gZnJvbSAnQGNkby9nZW5lcmF0ZWQtc2NyaXB0cy9zaGFyZWRDb25zdGFudHMnO1xuXG5leHBvcnQgY29uc3QgUGFyZW50TGV0dGVyQnV0dG9uTWV0cmljc0NhdGVnb3J5ID0ge1xuICBBQk9WRV9UQUJMRTogJ2Fib3ZlLXRhYmxlJyxcbiAgQkVMT1dfVEFCTEU6ICdiZWxvdy10YWJsZScsXG59O1xuXG5leHBvcnQgY29uc3QgUHJpbnRMb2dpbkNhcmRzQnV0dG9uTWV0cmljc0NhdGVnb3J5ID0ge1xuICBNQU5BR0VfU1RVREVOVFM6ICdtYW5hZ2Utc3R1ZGVudHMnLFxuICBMT0dJTl9JTkZPOiAnc2VjdGlvbi1sb2dpbi1pbmZvJyxcbn07XG5cbi8vIFJlc3BvbnNlIGZyb20gc2VydmVyIGFmdGVyIGFkZGluZyBhIG5ldyBzdHVkZW50IHRvIHRoZSBzZWN0aW9uLlxuZXhwb3J0IGNvbnN0IEFkZFN0YXR1cyA9IHtcbiAgU1VDQ0VTUzogJ3N1Y2Nlc3MnLFxuICBGQUlMOiAnZmFpbCcsXG4gIEZVTEw6ICdmdWxsJyxcbn07XG5cbi8vIFR5cGVzIG9mIHJvd3MgaW4gc3R1ZGVudERhdGEvZWRpdGluZ0RhdGFcbi8vIG5ld1N0dWRlbnQgbG9va3MgbGlrZSBhIHN0dWRlbnRSb3cgd2l0aCBpc0VkaXRpbmcgdHJ1ZSwgYnV0XG4vLyBpcyB1cGRhdGVkIGxpa2UgYW4gYWRkIHJvdywgc2luY2UgdGhlIHN0dWRlbnQgaGFzIHlldCB0byBiZSBhZGRlZC5cbmV4cG9ydCBjb25zdCBSb3dUeXBlID0ge1xuICBBREQ6ICdhZGRSb3cnLFxuICBORVdfU1RVREVOVDogJ25ld1N0dWRlbnRSb3cnLFxuICBTVFVERU5UOiAnc3R1ZGVudFJvdycsXG59O1xuXG4vLyBDb25zdGFudHMgYXJvdW5kIG1vdmluZyBzdHVkZW50cyB0byBhbm90aGVyIHNlY3Rpb24uXG4vLyBSZXNwb25zZSBmcm9tIHNlcnZlciBhZnRlciBtb3Zpbmcgc3R1ZGVudChzKSB0byBhIG5ldyBzZWN0aW9uXG5leHBvcnQgY29uc3QgVHJhbnNmZXJTdGF0dXMgPSB7XG4gIFNVQ0NFU1M6ICdzdWNjZXNzJyxcbiAgRkFJTDogJ2ZhaWwnLFxuICBGVUxMOiAnZnVsbCcsXG4gIFBFTkRJTkc6ICdwZW5kaW5nJyxcbn07XG5cbi8vIFR5cGUgb2Ygc3R1ZGVudCB0cmFuc2ZlciAtIHdoZXRoZXIgc3R1ZGVudHMgYXJlIGJlaW5nIG1vdmVkIChhbmQgc3Vic2VxdWVudGx5IHJlbW92ZWQgZnJvbSBjdXJyZW50IHNlY3Rpb24pIG9yIGNvcGllZCB0byBuZXcgc2VjdGlvblxuZXhwb3J0IGNvbnN0IFRyYW5zZmVyVHlwZSA9IHtcbiAgTU9WRV9TVFVERU5UUzogJ21vdmVTdHVkZW50cycsXG4gIENPUFlfU1RVREVOVFM6ICdjb3B5U3R1ZGVudHMnLFxufTtcblxuLyoqIEluaXRpYWwgc3RhdGUgZm9yIG1hbmFnZVN0dWRlbnRzLnRyYW5zZmVyRGF0YSByZWR1eCBzdG9yZS5cbiAqIHN0dWRlbnRJZHMgLSBzdHVkZW50IGlkcyBzZWxlY3RlZCB0byBiZSBtb3ZlZCB0byBhbm90aGVyIHNlY3Rpb25cbiAqIHNlY3Rpb25JZCAtIHNlY3Rpb24gaWQgdG8gd2hpY2ggbmV3IHN0dWRlbnRzIHdpbGwgYmUgbW92ZWRcbiAqIG90aGVyVGVhY2hlciAtIHN0dWRlbnRzIGFyZSBiZWluZyBtb3ZlZCB0byBhIHNlY3Rpb24gb3duZWQgYnkgYSBkaWZmZXJlbnQgdGVhY2hlclxuICogb3RoZXJUZWFjaGVyU2VjdGlvbiAtIGlmIG5ldyBzZWN0aW9uIGlzIG93bmVkIGJ5IGEgZGlmZmVyZW50IHRlYWNoZXIsIGN1cnJlbnQgdGVhY2hlciBpbnB1dHMgbmV3IHNlY3Rpb24gY29kZVxuICogY29weVN0dWRlbnRzIC0gd2hldGhlciBvciBub3Qgc3R1ZGVudHMgd2lsbCBiZSBjb3BpZWQgdG8gbmV3IHNlY3Rpb24gb3IgbW92ZWQgKGFuZCBzdWJzZXF1ZW50bHkgcmVtb3ZlZCBmcm9tIGN1cnJlbnQgc2VjdGlvbilcbiAqL1xuZXhwb3J0IGNvbnN0IGJsYW5rU3R1ZGVudFRyYW5zZmVyID0ge1xuICBzdHVkZW50SWRzOiBbXSxcbiAgc2VjdGlvbklkOiBudWxsLFxuICBvdGhlclRlYWNoZXI6IGZhbHNlLFxuICBvdGhlclRlYWNoZXJTZWN0aW9uOiAnJyxcbiAgY29weVN0dWRlbnRzOiB0cnVlLFxufTtcblxuLyoqIEluaXRpYWwgc3RhdGUgZm9yIG1hbmFnZVN0dWRlbnRzLnRyYW5zZmVyU3RhdHVzIHJlZHV4IHN0b3JlLlxuICogc3RhdHVzIChUcmFuc2ZlclN0YXR1cykgLSB3aGV0aGVyIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIGZhaWxlZFxuICogdHlwZSAoVHJhbnNmZXJUeXBlKSAtIHdoZXRoZXIgdHJhbnNmZXIgbW92ZWQgc3R1ZGVudHMgKGFuZCBzdWJzZXF1ZW50bHkgcmVtb3ZlZCB0aGVtIGZyb20gY3VycmVudCBzZWN0aW9uKSBvciBjb3BpZWQgdGhlbVxuICogZXJyb3IgLSBlcnJvciB0ZXh0IHJldHVybmVkIGZyb20gc2VydmVyXG4gKiBudW1TdHVkZW50cyAtIG51bWJlciBvZiBzdHVkZW50cyB0cmFuc2ZlcnJlZCB0byBuZXcgc2VjdGlvblxuICogc2VjdGlvbkRpc3BsYXkgLSBob3cgc2VjdGlvbiBzaG91bGQgYmUgZGlzcGxheWVkIHRvIHVzZXIuIG1vc3QgbGlrZWx5IHRoZSBzZWN0aW9uIG5hbWUgb3Igc2VjdGlvbiBjb2RlXG4gKi9cbmV4cG9ydCBjb25zdCBibGFua1N0dWRlbnRUcmFuc2ZlclN0YXR1cyA9IHtcbiAgc3RhdHVzOiBudWxsLFxuICB0eXBlOiBudWxsLFxuICBlcnJvcjogbnVsbCxcbiAgbnVtU3R1ZGVudHM6IDAsXG4gIHNlY3Rpb25EaXNwbGF5OiAnJyxcbn07XG5cbi8vIFRoaXMgZG9lc24ndCBnZXQgdXNlZCB0byBtYWtlIGEgc2VydmVyIGNhbGwsIGJ1dCBkb2VzXG4vLyBuZWVkIHRvIGJlIHVuaXF1ZSBmcm9tIHRoZSByZXN0IG9mIHRoZSBpZHMuXG5jb25zdCBhZGRSb3dJZCA9IDA7XG5cbi8vIE51bWJlciB0aGF0IGlzIGF2YWlsYWJsZSBhcyBhIG5ldyBpZCBmb3IgYWRkaW5nIHN0dWRlbnRzLlxuLy8gRWFjaCBuZWVkcyBhIHVuaXF1ZSBpZCwgYW5kIGNvdW50cyBiYWNrd2FyZCBmcm9tIC0xLlxubGV0IGFkZFJvd0lkQ291bnRlciA9IC0xO1xuXG4vLyBBZGQgcm93IGlzIGZvciBhZGRpbmcgYSBzaW5nbGUgc3R1ZGVudCBmcm9tIGJsYW5rIGRhdGEuXG5jb25zdCBibGFua0FkZFJvdyA9IHtcbiAgaWQ6IGFkZFJvd0lkLFxuICBuYW1lOiAnJyxcbiAgYWdlOiAnJyxcbiAgZ2VuZGVyOiAnJyxcbiAgdXNlcm5hbWU6ICcnLFxuICBsb2dpblR5cGU6ICcnLFxuICBzaGFyaW5nRGlzYWJsZWQ6IHRydWUsXG4gIGlzRWRpdGluZzogdHJ1ZSxcbiAgcm93VHlwZTogUm93VHlwZS5BREQsXG59O1xuXG4vLyBOZXcgc3R1ZGVudCByb3cgaXMgY3JlYXRlZCBhZnRlciBhIGxpc3Qgb2Ygc3R1ZGVudHMgaGF2ZSBiZWVuXG4vLyBhZGRlZCB0byB0aGUgdGFibGUsIGJ1dCB0aGVpciBpbmZvcm1hdGlvbiBoYXNuJ3QgYmVlbiBzYXZlZFxuLy8gdG8gdGhlIHNlcnZlciB5ZXQuXG5jb25zdCBibGFua05ld1N0dWRlbnRSb3cgPSB7XG4gIGlkOiBhZGRSb3dJZCxcbiAgbmFtZTogJycsXG4gIGFnZTogJycsXG4gIGdlbmRlcjogJycsXG4gIHVzZXJuYW1lOiAnJyxcbiAgbG9naW5UeXBlOiAnJyxcbiAgc2hhcmluZ0Rpc2FibGVkOiB0cnVlLFxuICBpc0VkaXRpbmc6IHRydWUsXG4gIHJvd1R5cGU6IFJvd1R5cGUuTkVXX1NUVURFTlQsXG59O1xuXG4vKiogSW5pdGlhbCBzdGF0ZSBmb3IgdGhlIG1hbmFnZVN0dWRlbnRzIHJlZHV4IHN0b3JlLlxuICogbG9naW5UeXBlIC0gYSBTZWN0aW9uTG9naW5UeXBlIGZvciB0aGUgYWN0aXZlIHNlY3Rpb24uXG4gKiBzZWN0aW9uSWQgLSB0aGUgc2VjdGlvbklkIG51bWJlciBmb3IgdGhlIGFjdGl2ZSBzZWN0aW9uLlxuICogc3R1ZGVudERhdGEgLSByZXByZXNlbnRzIHN0dWRlbnQgaW5mb3JtYXRpb24gcGVyc2lzdGVkIG9uIHRoZSBzZXJ2ZXIuXG4gKiBpZiBpc0VkaXRpbmcgKGluIHN0dWRlbnREYXRhKSwgdGhlbiBlZGl0aW5nRGF0YSByZXByZXNlbnRzIHRoZSBkYXRhXG4gKiBpbiB0aGUgZWRpdCBmaWVsZHMgb24gdGhlIGNsaWVudCB3aGljaCBoYXMgbm90IHlldCBiZWVuIHBlcnNpc3RlZCB0byB0aGUgc2VydmVyLlxuICogc2hvd1NoYXJpbmdDb2x1bW4gLSB3aGV0aGVyIHRoZSBjb250cm9sIHByb2plY3Qgc2hhcmluZyBjb2x1bW4gc2hvdWxkIGJlIGhpZGRlbiBvciB2aXNpYmxlIGluIHRoZSB0YWJsZS5cbiAqIGFkZFN0YXR1cyAtIHN0YXR1cyBpcyBvZiB0eXBlIEFkZFN0YXR1cyBhbmQgbnVtU3R1ZGVudHMgaXMgaG93IG1hbnkgc3R1ZGVudHMgd2VyZSBhZGRlZC5cbiAqIHRyYW5zZmVyRGF0YSAtIGluaXRpYWwgc3RhdGUgZGVzY3JpYmVkIGFib3ZlIGluIGJsYW5rU3R1ZGVudFRyYW5zZmVyIGFzc2lnbm1lbnRcbiAqL1xuY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICBsb2dpblR5cGU6ICcnLFxuICBzZWN0aW9uSWQ6IG51bGwsXG4gIHN0dWRlbnREYXRhOiB7fSxcbiAgZWRpdGluZ0RhdGE6IHt9LFxuICBzaG93U2hhcmluZ0NvbHVtbjogZmFsc2UsXG4gIGFkZFN0YXR1czoge3N0YXR1czogbnVsbCwgbnVtU3R1ZGVudHM6IG51bGx9LFxuICB0cmFuc2ZlckRhdGE6IHsuLi5ibGFua1N0dWRlbnRUcmFuc2Zlcn0sXG4gIHRyYW5zZmVyU3RhdHVzOiB7Li4uYmxhbmtTdHVkZW50VHJhbnNmZXJTdGF0dXN9LFxuICBpc0xvYWRpbmdTdHVkZW50czogdHJ1ZSxcbn07XG5cbmNvbnN0IFNFVF9MT0dJTl9UWVBFID0gJ21hbmFnZVN0dWRlbnRzL1NFVF9MT0dJTl9UWVBFJztcbmNvbnN0IFNFVF9TVFVERU5UUyA9ICdtYW5hZ2VTdHVkZW50cy9TRVRfU1RVREVOVFMnO1xuY29uc3QgU0VUX1NFQ1RJT05fSU5GTyA9ICdtYW5hZ2VTdHVkZW50cy9TRVRfU0VDVElPTl9JTkZPJztcbmNvbnN0IFNUQVJUX0VESVRJTkdfU1RVREVOVCA9ICdtYW5hZ2VTdHVkZW50cy9TVEFSVF9FRElUSU5HX1NUVURFTlQnO1xuY29uc3QgQ0FOQ0VMX0VESVRJTkdfU1RVREVOVCA9ICdtYW5hZ2VTdHVkZW50cy9DQU5DRUxfRURJVElOR19TVFVERU5UJztcbmNvbnN0IFJFTU9WRV9TVFVERU5UID0gJ21hbmFnZVN0dWRlbnRzL1JFTU9WRV9TVFVERU5UJztcbmNvbnN0IFNFVF9TRUNSRVRfSU1BR0UgPSAnbWFuYWdlU3R1ZGVudHMvU0VUX1NFQ1JFVF9JTUFHRSc7XG5jb25zdCBTRVRfU0VDUkVUX1dPUkRTID0gJ21hbmFnZVN0dWRlbnRzL1NFVF9TRUNSRVRfV09SRFMnO1xuY29uc3QgRURJVF9TVFVERU5UID0gJ21hbmFnZVN0dWRlbnRzL0VESVRfU1RVREVOVCc7XG5jb25zdCBTVEFSVF9TQVZJTkdfU1RVREVOVCA9ICdtYW5hZ2VTdHVkZW50cy9TVEFSVF9TQVZJTkdfU1RVREVOVCc7XG5jb25zdCBTQVZFX1NUVURFTlRfU1VDQ0VTUyA9ICdtYW5hZ2VTdHVkZW50cy9TQVZFX1NUVURFTlRfU1VDQ0VTUyc7XG5jb25zdCBBRERfU1RVREVOVF9TVUNDRVNTID0gJ21hbmFnZVN0dWRlbnRzL0FERF9TVFVERU5UX1NVQ0NFU1MnO1xuY29uc3QgQUREX1NUVURFTlRfRkFJTFVSRSA9ICdtYW5hZ2VTdHVkZW50cy9BRERfU1RVREVOVF9GQUlMVVJFJztcbmNvbnN0IEFERF9TVFVERU5UX0ZVTEwgPSAnbWFuYWdlU3R1ZGVudHMvQUREX1NUVURFTlRfRlVMTCc7XG5jb25zdCBBRERfTVVMVElQTEVfUk9XUyA9ICdtYW5hZ2VTdHVkZW50cy9BRERfTVVMVElQTEVfUk9XUyc7XG5jb25zdCBTRVRfU0hPV19TSEFSSU5HX0NPTFVNTiA9ICdtYW5hZ2VTdHVkZW50cy9TRVRfU0hPV19TSEFSSU5HX0NPTFVNTic7XG5jb25zdCBFRElUX0FMTCA9ICdtYW5hZ2VTdHVkZW50cy9FRElUX0FMTCc7XG5jb25zdCBVUERBVEVfQUxMX1NIQVJFX1NFVFRJTkcgPSAnbWFuYWdlU3R1ZGVudHMvVVBEQVRFX0FMTF9TSEFSRV9TRVRUSU5HJztcbmNvbnN0IFNFVF9TSEFSSU5HX0RFRkFVTFQgPSAnbWFuYWdlU3R1ZGVudHMvU0VUX1NIQVJJTkdfREVGQVVMVCc7XG5jb25zdCBVUERBVEVfU1RVREVOVF9UUkFOU0ZFUiA9ICdtYW5hZ2VTdHVkZW50cy9VUERBVEVfU1RVREVOVF9UUkFOU0ZFUic7XG5jb25zdCBDQU5DRUxfU1RVREVOVF9UUkFOU0ZFUiA9ICdtYW5hZ2VTdHVkZW50cy9DQU5DRUxfU1RVREVOVF9UUkFOU0ZFUic7XG5jb25zdCBUUkFOU0ZFUl9TVFVERU5UU19TVUNDRVNTID0gJ21hbmFnZVN0dWRlbnRzL1RSQU5TRkVSX1NUVURFTlRTX1NVQ0NFU1MnO1xuY29uc3QgVFJBTlNGRVJfU1RVREVOVFNfRkFJTFVSRSA9ICdtYW5hZ2VTdHVkZW50cy9UUkFOU0ZFUl9TVFVERU5UU19GQUlMVVJFJztcbmNvbnN0IFRSQU5TRkVSX1NUVURFTlRTX1BFTkRJTkcgPSAnbWFuYWdlU3R1ZGVudHMvVFJBTlNGRVJfU1RVREVOVFNfUEVORElORyc7XG5jb25zdCBUUkFOU0ZFUl9TVFVERU5UU19GVUxMID0gJ21hbmFnZVN0dWRlbnRzL1RSQU5TRkVSX1NUVURFTlRTX0ZVTEwnO1xuY29uc3QgU1RBUlRfTE9BRElOR19TVFVERU5UUyA9ICdtYW5hZ2VTdHVkZW50cy9TVEFSVF9MT0FESU5HX1NUVURFTlRTJztcbmNvbnN0IEZJTklTSF9MT0FESU5HX1NUVURFTlRTID0gJ21hbmFnZVN0dWRlbnRzL0ZJTklTSF9MT0FESU5HX1NUVURFTlRTJztcblxuLy8gQWN0aW9uIGNyZWF0b3JzXG5leHBvcnQgY29uc3Qgc3RhcnRMb2FkaW5nU3R1ZGVudHMgPSAoKSA9PiAoe3R5cGU6IFNUQVJUX0xPQURJTkdfU1RVREVOVFN9KTtcbmV4cG9ydCBjb25zdCBmaW5pc2hMb2FkaW5nU3R1ZGVudHMgPSAoKSA9PiAoe3R5cGU6IEZJTklTSF9MT0FESU5HX1NUVURFTlRTfSk7XG5cbmV4cG9ydCBjb25zdCBzZXRMb2dpblR5cGUgPSBsb2dpblR5cGUgPT4gKHt0eXBlOiBTRVRfTE9HSU5fVFlQRSwgbG9naW5UeXBlfSk7XG5leHBvcnQgY29uc3Qgc2V0U3R1ZGVudHMgPSBzdHVkZW50RGF0YSA9PiAoe1xuICB0eXBlOiBTRVRfU1RVREVOVFMsXG4gIHN0dWRlbnREYXRhLFxufSk7XG5leHBvcnQgY29uc3Qgc2V0U2VjdGlvbkluZm8gPSBzZWN0aW9uSWQgPT4gKHtcbiAgdHlwZTogU0VUX1NFQ1RJT05fSU5GTyxcbiAgc2VjdGlvbklkLFxufSk7XG5leHBvcnQgY29uc3Qgc3RhcnRFZGl0aW5nU3R1ZGVudCA9IHN0dWRlbnRJZCA9PiAoe1xuICB0eXBlOiBTVEFSVF9FRElUSU5HX1NUVURFTlQsXG4gIHN0dWRlbnRJZCxcbn0pO1xuZXhwb3J0IGNvbnN0IGNhbmNlbEVkaXRpbmdTdHVkZW50ID0gc3R1ZGVudElkID0+ICh7XG4gIHR5cGU6IENBTkNFTF9FRElUSU5HX1NUVURFTlQsXG4gIHN0dWRlbnRJZCxcbn0pO1xuZXhwb3J0IGNvbnN0IHJlbW92ZVN0dWRlbnQgPSBzdHVkZW50SWQgPT4gKHt0eXBlOiBSRU1PVkVfU1RVREVOVCwgc3R1ZGVudElkfSk7XG5leHBvcnQgY29uc3Qgc2V0U2VjcmV0SW1hZ2UgPSAoc3R1ZGVudElkLCBpbWFnZSkgPT4gKHtcbiAgdHlwZTogU0VUX1NFQ1JFVF9JTUFHRSxcbiAgc3R1ZGVudElkLFxuICBpbWFnZSxcbn0pO1xuZXhwb3J0IGNvbnN0IHNldFNlY3JldFdvcmRzID0gKHN0dWRlbnRJZCwgd29yZHMpID0+ICh7XG4gIHR5cGU6IFNFVF9TRUNSRVRfV09SRFMsXG4gIHN0dWRlbnRJZCxcbiAgd29yZHMsXG59KTtcbmV4cG9ydCBjb25zdCBlZGl0U3R1ZGVudCA9IChzdHVkZW50SWQsIHN0dWRlbnREYXRhKSA9PiAoe1xuICB0eXBlOiBFRElUX1NUVURFTlQsXG4gIHN0dWRlbnRJZCxcbiAgc3R1ZGVudERhdGEsXG59KTtcbmV4cG9ydCBjb25zdCBzZXRTaGFyaW5nRGVmYXVsdCA9IHN0dWRlbnRJZCA9PiAoe1xuICB0eXBlOiBTRVRfU0hBUklOR19ERUZBVUxULFxuICBzdHVkZW50SWQsXG59KTtcbmV4cG9ydCBjb25zdCBlZGl0QWxsID0gKCkgPT4gKHt0eXBlOiBFRElUX0FMTH0pO1xuZXhwb3J0IGNvbnN0IHVwZGF0ZUFsbFNoYXJlU2V0dGluZyA9IGRpc2FibGUgPT4gKHtcbiAgdHlwZTogVVBEQVRFX0FMTF9TSEFSRV9TRVRUSU5HLFxuICBkaXNhYmxlLFxufSk7XG5leHBvcnQgY29uc3Qgc3RhcnRTYXZpbmdTdHVkZW50ID0gc3R1ZGVudElkID0+ICh7XG4gIHR5cGU6IFNUQVJUX1NBVklOR19TVFVERU5ULFxuICBzdHVkZW50SWQsXG59KTtcbmV4cG9ydCBjb25zdCBzYXZlU3R1ZGVudFN1Y2Nlc3MgPSBzdHVkZW50SWQgPT4gKHtcbiAgdHlwZTogU0FWRV9TVFVERU5UX1NVQ0NFU1MsXG4gIHN0dWRlbnRJZCxcbn0pO1xuZXhwb3J0IGNvbnN0IHVwZGF0ZVN0dWRlbnRUcmFuc2ZlciA9IHRyYW5zZmVyRGF0YSA9PiAoe1xuICB0eXBlOiBVUERBVEVfU1RVREVOVF9UUkFOU0ZFUixcbiAgdHJhbnNmZXJEYXRhLFxufSk7XG5leHBvcnQgY29uc3QgY2FuY2VsU3R1ZGVudFRyYW5zZmVyID0gKCkgPT4gKHt0eXBlOiBDQU5DRUxfU1RVREVOVF9UUkFOU0ZFUn0pO1xuZXhwb3J0IGNvbnN0IHRyYW5zZmVyU3R1ZGVudHNTdWNjZXNzID0gKFxuICB0cmFuc2ZlclR5cGUsXG4gIG51bVN0dWRlbnRzLFxuICBzZWN0aW9uRGlzcGxheVxuKSA9PiAoe1xuICB0eXBlOiBUUkFOU0ZFUl9TVFVERU5UU19TVUNDRVNTLFxuICB0cmFuc2ZlclR5cGUsXG4gIG51bVN0dWRlbnRzLFxuICBzZWN0aW9uRGlzcGxheSxcbn0pO1xuZXhwb3J0IGNvbnN0IHRyYW5zZmVyU3R1ZGVudHNGYWlsdXJlID0gZXJyb3IgPT4gKHtcbiAgdHlwZTogVFJBTlNGRVJfU1RVREVOVFNfRkFJTFVSRSxcbiAgZXJyb3IsXG59KTtcbmV4cG9ydCBjb25zdCB0cmFuc2ZlclN0dWRlbnRzUGVuZGluZyA9ICgpID0+ICh7XG4gIHR5cGU6IFRSQU5TRkVSX1NUVURFTlRTX1BFTkRJTkcsXG59KTtcbmV4cG9ydCBjb25zdCB0cmFuc2ZlclN0dWRlbnRzRnVsbCA9IChcbiAge3NlY3Rpb25DYXBhY2l0eSwgbnVtU3R1ZGVudHMsIHNlY3Rpb25Db2RlLCBzZWN0aW9uU3R1ZGVudENvdW50fSxcbiAgY29weVxuKSA9PiAoe1xuICB0eXBlOiBUUkFOU0ZFUl9TVFVERU5UU19GVUxMLFxuICBzZWN0aW9uQ2FwYWNpdHksXG4gIG51bVN0dWRlbnRzLFxuICBzZWN0aW9uU3R1ZGVudENvdW50LFxuICBzZWN0aW9uQ29kZSxcbiAgdmVyYjogY29weSA/ICdjb3B5JyA6ICdtb3ZlJyxcbn0pO1xuZXhwb3J0IGNvbnN0IGFkZFN0dWRlbnRzU3VjY2VzcyA9IChudW1TdHVkZW50cywgcm93SWRzLCBzdHVkZW50RGF0YSkgPT4gKHtcbiAgdHlwZTogQUREX1NUVURFTlRfU1VDQ0VTUyxcbiAgbnVtU3R1ZGVudHMsXG4gIHJvd0lkcyxcbiAgc3R1ZGVudERhdGEsXG59KTtcbmV4cG9ydCBjb25zdCBhZGRTdHVkZW50c0ZhaWx1cmUgPSAobnVtU3R1ZGVudHMsIGVycm9yLCBzdHVkZW50SWRzKSA9PiAoe1xuICB0eXBlOiBBRERfU1RVREVOVF9GQUlMVVJFLFxuICBudW1TdHVkZW50cyxcbiAgZXJyb3IsXG4gIHN0dWRlbnRJZHMsXG59KTtcbmV4cG9ydCBjb25zdCBhZGRTdHVkZW50c0Z1bGwgPSAoXG4gIHtzZWN0aW9uQ2FwYWNpdHksIG51bVN0dWRlbnRzLCBzZWN0aW9uQ29kZSwgc2VjdGlvblN0dWRlbnRDb3VudH0sXG4gIHN0dWRlbnRJZHNcbikgPT4gKHtcbiAgdHlwZTogQUREX1NUVURFTlRfRlVMTCxcbiAgc2VjdGlvbkNhcGFjaXR5LFxuICBudW1TdHVkZW50cyxcbiAgc2VjdGlvblN0dWRlbnRDb3VudCxcbiAgc2VjdGlvbkNvZGUsXG4gIHN0dWRlbnRJZHMsXG59KTtcbmV4cG9ydCBjb25zdCBhZGRNdWx0aXBsZVJvd3MgPSBzdHVkZW50RGF0YSA9PiAoe1xuICB0eXBlOiBBRERfTVVMVElQTEVfUk9XUyxcbiAgc3R1ZGVudERhdGEsXG59KTtcblxuZXhwb3J0IGNvbnN0IHNldFNob3dTaGFyaW5nQ29sdW1uID0gdmlzaWJsZSA9PiAoe1xuICB0eXBlOiBTRVRfU0hPV19TSEFSSU5HX0NPTFVNTixcbiAgdmlzaWJsZSxcbn0pO1xuXG5leHBvcnQgY29uc3QgaGFuZGxlU2hhcmVTZXR0aW5nID0gZGlzYWJsZSA9PiB7XG4gIHJldHVybiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XG4gICAgZGlzcGF0Y2goZWRpdEFsbCgpKTtcbiAgICBkaXNwYXRjaCh1cGRhdGVBbGxTaGFyZVNldHRpbmcoZGlzYWJsZSkpO1xuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IHNhdmVTdHVkZW50ID0gc3R1ZGVudElkID0+IHtcbiAgcmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcbiAgICBjb25zdCBzdGF0ZSA9IGdldFN0YXRlKCkubWFuYWdlU3R1ZGVudHM7XG4gICAgY29uc3Qgc2VjdGlvbklkID0gZ2V0U3RhdGUoKS50ZWFjaGVyU2VjdGlvbnMuc2VsZWN0ZWRTZWN0aW9uSWQ7XG4gICAgZGlzcGF0Y2goc3RhcnRTYXZpbmdTdHVkZW50KHN0dWRlbnRJZCkpO1xuICAgIHVwZGF0ZVN0dWRlbnRPblNlcnZlcihcbiAgICAgIHN0YXRlLmVkaXRpbmdEYXRhW3N0dWRlbnRJZF0sXG4gICAgICBzZWN0aW9uSWQsXG4gICAgICAoZXJyb3IsIGRhdGEpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgZGlzcGF0Y2goc2F2ZVN0dWRlbnRTdWNjZXNzKHN0dWRlbnRJZCkpO1xuICAgICAgICBkaXNwYXRjaChhc3luY0xvYWRTZWN0aW9uRGF0YShzZWN0aW9uSWQpKTtcbiAgICAgIH1cbiAgICApO1xuICB9O1xufTtcblxuLy8gU2F2ZXMgYWxsIFJvd1R5cGUuU1RVREVOVCBjdXJyZW50bHkgYmVpbmcgZWRpdGVkIGFuZCBhZGRzIGFsbFxuLy8gUm93VHlwZS5ORVdfU1RVREVOVCBjdXJyZW50bHkgYmVpbmcgZWRpdGVkLlxuZXhwb3J0IGNvbnN0IHNhdmVBbGxTdHVkZW50cyA9ICgpID0+IHtcbiAgcmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcbiAgICBjb25zdCBzdGF0ZSA9IGdldFN0YXRlKCkubWFuYWdlU3R1ZGVudHM7XG5cbiAgICAvLyBDdXJyZW50bHksIGV2ZXJ5IHVwZGF0ZSBpcyBhbiBpbmRpdmlkdWFsIGNhbGwgdG8gdGhlIHNlcnZlci5cbiAgICBjb25zdCBjdXJyZW50bHlFZGl0ZWREYXRhID0gT2JqZWN0LnZhbHVlcyhzdGF0ZS5lZGl0aW5nRGF0YSk7XG4gICAgbGV0IHN0dWRlbnRzVG9TYXZlID0gY3VycmVudGx5RWRpdGVkRGF0YS5maWx0ZXIoXG4gICAgICBzdHVkZW50ID0+IHN0dWRlbnQucm93VHlwZSA9PT0gUm93VHlwZS5TVFVERU5UXG4gICAgKTtcbiAgICBzdHVkZW50c1RvU2F2ZS5mb3JFYWNoKHN0dWRlbnQgPT4ge1xuICAgICAgaWYgKHN0dWRlbnQubmFtZSAhPT0gJycpIHtcbiAgICAgICAgZGlzcGF0Y2goc2F2ZVN0dWRlbnQoc3R1ZGVudC5pZCkpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gQWRkaW5nIHN0dWRlbnRzIGNhbiBiZSBzYXZlZCB0b2dldGhlci5cbiAgICAvLyBPbmx5IGFkZCBzdHVkZW50cyB0aGF0IGN1cnJlbnRseSBhcmUgbm90IGluIHByb2dyZXNzIHNhdmluZy5cbiAgICBjb25zdCBhcnJheU9mRWRpdGVkRGF0YSA9IE9iamVjdC52YWx1ZXMoc3RhdGUuZWRpdGluZ0RhdGEpO1xuICAgIGNvbnN0IG5ld1N0dWRlbnRzVG9BZGQgPSBhcnJheU9mRWRpdGVkRGF0YVxuICAgICAgLmZpbHRlcihcbiAgICAgICAgc3R1ZGVudCA9PiBzdHVkZW50LnJvd1R5cGUgPT09IFJvd1R5cGUuTkVXX1NUVURFTlQgJiYgIXN0dWRlbnQuaXNTYXZpbmdcbiAgICAgIClcbiAgICAgIC5tYXAoc3R1ZGVudCA9PiBzdHVkZW50LmlkKTtcbiAgICBpZiAobmV3U3R1ZGVudHNUb0FkZC5sZW5ndGggPiAwKSB7XG4gICAgICBkaXNwYXRjaChhZGRTdHVkZW50cyhuZXdTdHVkZW50c1RvQWRkKSk7XG4gICAgfVxuICB9O1xufTtcblxuLy8gQWRkcyBhIHN0dWRlbnQsIHdpdGggdGhlIGdpdmVuIHJvdyBpZCAoc3R1ZGVudElkcyksIGZyb20gUm93VHlwZS5BREQgb3Jcbi8vIFJvd1R5cGUuTkVXX1NUVURFTlQuXG5leHBvcnQgY29uc3QgYWRkU3R1ZGVudHMgPSBzdHVkZW50SWRzID0+IHtcbiAgcmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcbiAgICBjb25zdCBzdGF0ZSA9IGdldFN0YXRlKCkubWFuYWdlU3R1ZGVudHM7XG4gICAgY29uc3Qgc2VjdGlvbklkID0gZ2V0U3RhdGUoKS50ZWFjaGVyU2VjdGlvbnMuc2VsZWN0ZWRTZWN0aW9uSWQ7XG4gICAgY29uc3QgbnVtU3R1ZGVudHNUb0FkZCA9IHN0dWRlbnRJZHMubGVuZ3RoO1xuXG4gICAgLy8gVXBkYXRlIGVhY2ggcm93IHRvIHNhdmluZyBpbiBwcm9ncmVzcy5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0dWRlbnRJZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGRpc3BhdGNoKHN0YXJ0U2F2aW5nU3R1ZGVudChzdHVkZW50SWRzW2ldKSk7XG4gICAgfVxuXG4gICAgY29uc3QgYXJyYXlPZkVkaXRlZERhdGEgPSBPYmplY3QudmFsdWVzKHN0YXRlLmVkaXRpbmdEYXRhKTtcbiAgICBjb25zdCBmaWx0ZXJlZERhdGEgPSBhcnJheU9mRWRpdGVkRGF0YS5maWx0ZXIoc3R1ZGVudCA9PlxuICAgICAgc3R1ZGVudElkcy5pbmNsdWRlcyhzdHVkZW50LmlkKVxuICAgICk7XG4gICAgYWRkU3R1ZGVudE9uU2VydmVyKGZpbHRlcmVkRGF0YSwgc2VjdGlvbklkLCAoZXJyb3IsIGRhdGEpID0+IHtcbiAgICAgIGlmIChlcnJvciAmJiBkYXRhICYmIGRhdGEucmVzdWx0ID09PSBBZGRTdGF0dXMuRlVMTCkge1xuICAgICAgICAvLyBzdHVkZW50SWRzIHJlcXVpcmVkIHRvIGFsbG93IGZvciByZXBlYXQgYnVsa19hZGQgYXR0ZW1wdHNcbiAgICAgICAgZGlzcGF0Y2goYWRkU3R1ZGVudHNGdWxsKGRhdGEsIHN0dWRlbnRJZHMpKTtcbiAgICAgIH0gZWxzZSBpZiAoZXJyb3IpIHtcbiAgICAgICAgZGlzcGF0Y2goYWRkU3R1ZGVudHNGYWlsdXJlKG51bVN0dWRlbnRzVG9BZGQsIGVycm9yLCBzdHVkZW50SWRzKSk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGlzcGF0Y2goXG4gICAgICAgICAgYWRkU3R1ZGVudHNTdWNjZXNzKFxuICAgICAgICAgICAgbnVtU3R1ZGVudHNUb0FkZCxcbiAgICAgICAgICAgIHN0dWRlbnRJZHMsXG4gICAgICAgICAgICBjb252ZXJ0U3R1ZGVudFNlcnZlckRhdGEoZGF0YSwgc3RhdGUubG9naW5UeXBlLCBzZWN0aW9uSWQpXG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgICBkaXNwYXRjaChhc3luY0xvYWRTZWN0aW9uRGF0YShzZWN0aW9uSWQpKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn07XG5cbi8vIENyZWF0ZXMgYSBuZXcgUm93VHlwZS5ORVdfU1RVREVOVCBmb3IgZWFjaCBuYW1lIGluIHRoZSBhcnJheS5cbmV4cG9ydCBjb25zdCBhZGRNdWx0aXBsZUFkZFJvd3MgPSBzdHVkZW50RGF0YUFycmF5ID0+IHtcbiAgcmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcbiAgICBjb25zdCBzdHVkZW50RGF0YSA9IHN0dWRlbnREYXRhQXJyYXlcbiAgICAgIC5maWx0ZXIoZGF0YSA9PiBkYXRhLm5hbWUpXG4gICAgICAucmVkdWNlKChhY2N1bXVsYXRvciwgZGF0YSkgPT4ge1xuICAgICAgICBjb25zdCBuZXdJZCA9IGFkZFJvd0lkQ291bnRlci0tO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uYWNjdW11bGF0b3IsXG4gICAgICAgICAgW25ld0lkXToge1xuICAgICAgICAgICAgLi4uYmxhbmtOZXdTdHVkZW50Um93LFxuICAgICAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICAgICAgZmFtaWx5TmFtZTogZGF0YS5mYW1pbHlOYW1lLFxuICAgICAgICAgICAgaWQ6IG5ld0lkLFxuICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICB9LCB7fSk7XG4gICAgZGlzcGF0Y2goYWRkTXVsdGlwbGVSb3dzKHN0dWRlbnREYXRhKSk7XG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgdHJhbnNmZXJTdHVkZW50cyA9IG9uQ29tcGxldGUgPT4ge1xuICByZXR1cm4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xuICAgIGRpc3BhdGNoKHRyYW5zZmVyU3R1ZGVudHNQZW5kaW5nKCkpO1xuICAgIGNvbnN0IHN0YXRlID0gZ2V0U3RhdGUoKTtcbiAgICAvLyBHZXQgc2VjdGlvbiBjb2RlIGZvciBjdXJyZW50IHNlY3Rpb24gZnJvbSB0ZWFjaGVyU2VjdGlvbnNSZWR1eFxuICAgIGNvbnN0IGN1cnJlbnRTZWN0aW9uQ29kZSA9IHNlY3Rpb25Db2RlKFxuICAgICAgc3RhdGUsXG4gICAgICBzdGF0ZS50ZWFjaGVyU2VjdGlvbnMuc2VsZWN0ZWRTZWN0aW9uSWRcbiAgICApO1xuICAgIGNvbnN0IHtcbiAgICAgIHN0dWRlbnRJZHMsXG4gICAgICBzZWN0aW9uSWQ6IG5ld1NlY3Rpb25JZCxcbiAgICAgIG90aGVyVGVhY2hlcixcbiAgICAgIG90aGVyVGVhY2hlclNlY3Rpb24sXG4gICAgICBjb3B5U3R1ZGVudHMsXG4gICAgfSA9IHN0YXRlLm1hbmFnZVN0dWRlbnRzLnRyYW5zZmVyRGF0YTtcbiAgICBsZXQgbmV3U2VjdGlvbkNvZGU7XG5cbiAgICBpZiAob3RoZXJUZWFjaGVyICYmIG90aGVyVGVhY2hlclNlY3Rpb24pIHtcbiAgICAgIG5ld1NlY3Rpb25Db2RlID0gb3RoZXJUZWFjaGVyU2VjdGlvbjtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3U2VjdGlvbkNvZGUgPSBzZWN0aW9uQ29kZShzdGF0ZSwgbmV3U2VjdGlvbklkKTtcbiAgICB9XG5cbiAgICB0cmFuc2ZlclN0dWRlbnRzT25TZXJ2ZXIoXG4gICAgICBzdHVkZW50SWRzLFxuICAgICAgY3VycmVudFNlY3Rpb25Db2RlLFxuICAgICAgbmV3U2VjdGlvbkNvZGUsXG4gICAgICBjb3B5U3R1ZGVudHMsXG4gICAgICAoZXJyb3IsIGRhdGEpID0+IHtcbiAgICAgICAgaWYgKGVycm9yICYmIGRhdGEgJiYgZGF0YS5yZXN1bHQgPT09IFRyYW5zZmVyU3RhdHVzLkZVTEwpIHtcbiAgICAgICAgICBkaXNwYXRjaCh0cmFuc2ZlclN0dWRlbnRzRnVsbChkYXRhLCBjb3B5U3R1ZGVudHMpKTtcbiAgICAgICAgICBvbkNvbXBsZXRlKCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZXJyb3IpIHtcbiAgICAgICAgICBkaXNwYXRjaCh0cmFuc2ZlclN0dWRlbnRzRmFpbHVyZSgoZGF0YSAmJiBkYXRhLmVycm9yKSB8fCBlcnJvcikpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICghY29weVN0dWRlbnRzIHx8ICFvdGhlclRlYWNoZXIpIHtcbiAgICAgICAgICAgIHN0dWRlbnRJZHMuZm9yRWFjaChpZCA9PiB7XG4gICAgICAgICAgICAgIGRpc3BhdGNoKHJlbW92ZVN0dWRlbnQoaWQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCB0cmFuc2ZlclR5cGUgPSBjb3B5U3R1ZGVudHNcbiAgICAgICAgICAgID8gVHJhbnNmZXJUeXBlLkNPUFlfU1RVREVOVFNcbiAgICAgICAgICAgIDogVHJhbnNmZXJUeXBlLk1PVkVfU1RVREVOVFM7XG4gICAgICAgICAgLy8gR2V0IHNlY3Rpb24gbmFtZSBmb3IgbmV3IHNlY3Rpb24gZnJvbSB0ZWFjaGVyU2VjdGlvbnNSZWR1eFxuICAgICAgICAgIGNvbnN0IHNlY3Rpb25EaXNwbGF5ID0gb3RoZXJUZWFjaGVyXG4gICAgICAgICAgICA/IG90aGVyVGVhY2hlclNlY3Rpb25cbiAgICAgICAgICAgIDogc2VjdGlvbk5hbWUoc3RhdGUsIG5ld1NlY3Rpb25JZCk7XG4gICAgICAgICAgZGlzcGF0Y2goXG4gICAgICAgICAgICB0cmFuc2ZlclN0dWRlbnRzU3VjY2VzcyhcbiAgICAgICAgICAgICAgdHJhbnNmZXJUeXBlLFxuICAgICAgICAgICAgICBzdHVkZW50SWRzLmxlbmd0aCxcbiAgICAgICAgICAgICAgc2VjdGlvbkRpc3BsYXlcbiAgICAgICAgICAgIClcbiAgICAgICAgICApO1xuICAgICAgICAgIG9uQ29tcGxldGUoKTtcbiAgICAgICAgICBkaXNwYXRjaChcbiAgICAgICAgICAgIGFzeW5jTG9hZFNlY3Rpb25EYXRhKHN0YXRlLnRlYWNoZXJTZWN0aW9ucy5zZWxlY3RlZFNlY3Rpb25JZClcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgKTtcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1hbmFnZVN0dWRlbnRzKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pIHtcbiAgaWYgKGFjdGlvbi50eXBlID09PSBTRVRfTE9HSU5fVFlQRSkge1xuICAgIGxldCBhZGRSb3dJbml0aWFsaXphdGlvbiA9IHt9O1xuICAgIGlmIChcbiAgICAgIGFjdGlvbi5sb2dpblR5cGUgPT09IFNlY3Rpb25Mb2dpblR5cGUud29yZCB8fFxuICAgICAgYWN0aW9uLmxvZ2luVHlwZSA9PT0gU2VjdGlvbkxvZ2luVHlwZS5waWN0dXJlXG4gICAgKSB7XG4gICAgICBhZGRSb3dJbml0aWFsaXphdGlvbiA9IHtcbiAgICAgICAgc3R1ZGVudERhdGE6IHtcbiAgICAgICAgICBbYWRkUm93SWRdOiB7XG4gICAgICAgICAgICAuLi5ibGFua0FkZFJvdyxcbiAgICAgICAgICAgIGxvZ2luVHlwZTogYWN0aW9uLmxvZ2luVHlwZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBlZGl0aW5nRGF0YToge1xuICAgICAgICAgIFthZGRSb3dJZF06IHtcbiAgICAgICAgICAgIC4uLmJsYW5rQWRkUm93LFxuICAgICAgICAgICAgbG9naW5UeXBlOiBhY3Rpb24ubG9naW5UeXBlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBsb2dpblR5cGU6IGFjdGlvbi5sb2dpblR5cGUsXG4gICAgICAuLi5hZGRSb3dJbml0aWFsaXphdGlvbixcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0VUX1NUVURFTlRTKSB7XG4gICAgbGV0IHN0dWRlbnREYXRhID0ge1xuICAgICAgLi4uYWN0aW9uLnN0dWRlbnREYXRhLFxuICAgIH07XG4gICAgaWYgKFxuICAgICAgc3RhdGUubG9naW5UeXBlID09PSBTZWN0aW9uTG9naW5UeXBlLndvcmQgfHxcbiAgICAgIHN0YXRlLmxvZ2luVHlwZSA9PT0gU2VjdGlvbkxvZ2luVHlwZS5waWN0dXJlXG4gICAgKSB7XG4gICAgICBzdHVkZW50RGF0YVthZGRSb3dJZF0gPSB7XG4gICAgICAgIC4uLmJsYW5rQWRkUm93LFxuICAgICAgICBsb2dpblR5cGU6IHN0YXRlLmxvZ2luVHlwZSxcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHN0dWRlbnREYXRhOiBzdHVkZW50RGF0YSxcbiAgICAgIGFkZFN0YXR1czoge3N0YXR1czogbnVsbCwgbnVtU3R1ZGVudHM6IG51bGx9LFxuICAgICAgaXNMb2FkaW5nU3R1ZGVudHM6IGZhbHNlLFxuICAgIH07XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBTRVRfU0VDVElPTl9JTkZPKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgc2VjdGlvbklkOiBhY3Rpb24uc2VjdGlvbklkLFxuICAgIH07XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBTVEFSVF9FRElUSU5HX1NUVURFTlQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBzdHVkZW50RGF0YToge1xuICAgICAgICAuLi5zdGF0ZS5zdHVkZW50RGF0YSxcbiAgICAgICAgW2FjdGlvbi5zdHVkZW50SWRdOiB7XG4gICAgICAgICAgLi4uc3RhdGUuc3R1ZGVudERhdGFbYWN0aW9uLnN0dWRlbnRJZF0sXG4gICAgICAgICAgaXNFZGl0aW5nOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIGVkaXRpbmdEYXRhOiB7XG4gICAgICAgIC4uLnN0YXRlLmVkaXRpbmdEYXRhLFxuICAgICAgICBbYWN0aW9uLnN0dWRlbnRJZF06IHtcbiAgICAgICAgICAuLi5zdGF0ZS5zdHVkZW50RGF0YVthY3Rpb24uc3R1ZGVudElkXSxcbiAgICAgICAgICBpZDogYWN0aW9uLnN0dWRlbnRJZCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IENBTkNFTF9FRElUSU5HX1NUVURFTlQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBzdHVkZW50RGF0YToge1xuICAgICAgICAuLi5zdGF0ZS5zdHVkZW50RGF0YSxcbiAgICAgICAgW2FjdGlvbi5zdHVkZW50SWRdOiB7XG4gICAgICAgICAgLi4uc3RhdGUuc3R1ZGVudERhdGFbYWN0aW9uLnN0dWRlbnRJZF0sXG4gICAgICAgICAgaXNFZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBlZGl0aW5nRGF0YTogXy5vbWl0KHN0YXRlLmVkaXRpbmdEYXRhLCBhY3Rpb24uc3R1ZGVudElkKSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU1RBUlRfU0FWSU5HX1NUVURFTlQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBzdHVkZW50RGF0YToge1xuICAgICAgICAuLi5zdGF0ZS5zdHVkZW50RGF0YSxcbiAgICAgICAgW2FjdGlvbi5zdHVkZW50SWRdOiB7XG4gICAgICAgICAgLi4uc3RhdGUuc3R1ZGVudERhdGFbYWN0aW9uLnN0dWRlbnRJZF0sXG4gICAgICAgICAgaXNTYXZpbmc6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgZWRpdGluZ0RhdGE6IHtcbiAgICAgICAgLi4uc3RhdGUuZWRpdGluZ0RhdGEsXG4gICAgICAgIFthY3Rpb24uc3R1ZGVudElkXToge1xuICAgICAgICAgIC4uLnN0YXRlLmVkaXRpbmdEYXRhW2FjdGlvbi5zdHVkZW50SWRdLFxuICAgICAgICAgIGlzU2F2aW5nOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0FWRV9TVFVERU5UX1NVQ0NFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBzdHVkZW50RGF0YToge1xuICAgICAgICAuLi5zdGF0ZS5zdHVkZW50RGF0YSxcbiAgICAgICAgW2FjdGlvbi5zdHVkZW50SWRdOiB7XG4gICAgICAgICAgLi4uc3RhdGUuc3R1ZGVudERhdGFbYWN0aW9uLnN0dWRlbnRJZF0sXG4gICAgICAgICAgLi4uc3RhdGUuZWRpdGluZ0RhdGFbYWN0aW9uLnN0dWRlbnRJZF0sXG4gICAgICAgICAgaXNFZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgICBpc1NhdmluZzogZmFsc2UsXG4gICAgICAgICAgcm93VHlwZTogUm93VHlwZS5TVFVERU5ULFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIGVkaXRpbmdEYXRhOiBfLm9taXQoc3RhdGUuZWRpdGluZ0RhdGEsIGFjdGlvbi5zdHVkZW50SWQpLFxuICAgIH07XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBBRERfU1RVREVOVF9GQUlMVVJFKSB7XG4gICAgbGV0IG5ld1N0YXRlID0ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBhZGRTdGF0dXM6IHtzdGF0dXM6IEFkZFN0YXR1cy5GQUlMLCBudW1TdHVkZW50czogYWN0aW9uLm51bVN0dWRlbnRzfSxcbiAgICB9O1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWN0aW9uLnN0dWRlbnRJZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIG5ld1N0YXRlLnN0dWRlbnREYXRhW2FjdGlvbi5zdHVkZW50SWRzW2ldXSA9IHtcbiAgICAgICAgLi4uc3RhdGUuc3R1ZGVudERhdGFbYWN0aW9uLnN0dWRlbnRJZHNbaV1dLFxuICAgICAgICBpc1NhdmluZzogZmFsc2UsXG4gICAgICB9O1xuICAgICAgbmV3U3RhdGUuZWRpdGluZ0RhdGFbYWN0aW9uLnN0dWRlbnRJZHNbaV1dID0ge1xuICAgICAgICAuLi5zdGF0ZS5lZGl0aW5nRGF0YVthY3Rpb24uc3R1ZGVudElkc1tpXV0sXG4gICAgICAgIGlzU2F2aW5nOiBmYWxzZSxcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBuZXdTdGF0ZTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IEFERF9TVFVERU5UX0ZVTEwpIHtcbiAgICBsZXQgbmV3U3RhdGUgPSB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIGFkZFN0YXR1czoge1xuICAgICAgICAuLi5zdGF0ZS5hZGRTdGF0dXMsXG4gICAgICAgIHN0YXR1czogQWRkU3RhdHVzLkZVTEwsXG4gICAgICAgIG51bVN0dWRlbnRzOiBhY3Rpb24ubnVtU3R1ZGVudHMsXG4gICAgICAgIHNlY3Rpb25DYXBhY2l0eTogYWN0aW9uLnNlY3Rpb25DYXBhY2l0eSxcbiAgICAgICAgc2VjdGlvbkNvZGU6IGFjdGlvbi5zZWN0aW9uQ29kZSxcbiAgICAgICAgc2VjdGlvblN0dWRlbnRDb3VudDogYWN0aW9uLnNlY3Rpb25TdHVkZW50Q291bnQsXG4gICAgICB9LFxuICAgIH07XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhY3Rpb24uc3R1ZGVudElkcy5sZW5ndGg7IGkrKykge1xuICAgICAgbmV3U3RhdGUuc3R1ZGVudERhdGFbYWN0aW9uLnN0dWRlbnRJZHNbaV1dID0ge1xuICAgICAgICAuLi5zdGF0ZS5zdHVkZW50RGF0YVthY3Rpb24uc3R1ZGVudElkc1tpXV0sXG4gICAgICAgIGlzU2F2aW5nOiBmYWxzZSxcbiAgICAgIH07XG4gICAgICBuZXdTdGF0ZS5lZGl0aW5nRGF0YVthY3Rpb24uc3R1ZGVudElkc1tpXV0gPSB7XG4gICAgICAgIC4uLnN0YXRlLmVkaXRpbmdEYXRhW2FjdGlvbi5zdHVkZW50SWRzW2ldXSxcbiAgICAgICAgaXNTYXZpbmc6IGZhbHNlLFxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld1N0YXRlO1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gQUREX1NUVURFTlRfU1VDQ0VTUykge1xuICAgIGxldCBuZXdTdGF0ZSA9IHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgc3R1ZGVudERhdGE6IHtcbiAgICAgICAgLi4uXy5vbWl0KHN0YXRlLnN0dWRlbnREYXRhLCBhY3Rpb24ucm93SWRzKSxcbiAgICAgICAgLi4uYWN0aW9uLnN0dWRlbnREYXRhLFxuICAgICAgICBbYWRkUm93SWRdOiB7XG4gICAgICAgICAgLi4uYmxhbmtBZGRSb3csXG4gICAgICAgICAgbG9naW5UeXBlOiBzdGF0ZS5sb2dpblR5cGUsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgZWRpdGluZ0RhdGE6IHtcbiAgICAgICAgLi4uXy5vbWl0KHN0YXRlLmVkaXRpbmdEYXRhLCBhY3Rpb24ucm93SWRzKSxcbiAgICAgICAgW2FkZFJvd0lkXToge1xuICAgICAgICAgIC4uLmJsYW5rQWRkUm93LFxuICAgICAgICAgIGxvZ2luVHlwZTogc3RhdGUubG9naW5UeXBlLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIGFkZFN0YXR1czoge3N0YXR1czogQWRkU3RhdHVzLlNVQ0NFU1MsIG51bVN0dWRlbnRzOiBhY3Rpb24ubnVtU3R1ZGVudHN9LFxuICAgIH07XG4gICAgcmV0dXJuIG5ld1N0YXRlO1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0VUX1NIQVJJTkdfREVGQVVMVCkge1xuICAgIGNvbnN0IGVkaXRlZEFnZSA9IHN0YXRlLmVkaXRpbmdEYXRhW2FjdGlvbi5zdHVkZW50SWRdLmFnZTtcbiAgICAvLyBGb3IgcHJpdmFjeSByZWFzb25zLCB3ZSBkaXNhYmxlIHNoYXJpbmcgYnkgZGVmYXVsdCBpZiB0aGUgc3R1ZGVudCBpcyB1bmRlciB0aGUgYWdlIG9mIDEzLlxuICAgIGNvbnN0IHNoYXJpbmdEaXNhYmxlZCA9IGVkaXRlZEFnZSA8IDEzO1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIGVkaXRpbmdEYXRhOiB7XG4gICAgICAgIC4uLnN0YXRlLmVkaXRpbmdEYXRhLFxuICAgICAgICBbYWN0aW9uLnN0dWRlbnRJZF06IHtcbiAgICAgICAgICAuLi5zdGF0ZS5lZGl0aW5nRGF0YVthY3Rpb24uc3R1ZGVudElkXSxcbiAgICAgICAgICBpZDogYWN0aW9uLnN0dWRlbnRJZCxcbiAgICAgICAgICBzaGFyaW5nRGlzYWJsZWQ6IHNoYXJpbmdEaXNhYmxlZCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IEVESVRfU1RVREVOVCkge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIGVkaXRpbmdEYXRhOiB7XG4gICAgICAgIC4uLnN0YXRlLmVkaXRpbmdEYXRhLFxuICAgICAgICBbYWN0aW9uLnN0dWRlbnRJZF06IHtcbiAgICAgICAgICAuLi5zdGF0ZS5lZGl0aW5nRGF0YVthY3Rpb24uc3R1ZGVudElkXSxcbiAgICAgICAgICAuLi5hY3Rpb24uc3R1ZGVudERhdGEsXG4gICAgICAgICAgaWQ6IGFjdGlvbi5zdHVkZW50SWQsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH07XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBFRElUX0FMTCkge1xuICAgIGxldCBuZXdTdGF0ZSA9IHtcbiAgICAgIC4uLnN0YXRlLFxuICAgIH07XG4gICAgZm9yIChjb25zdCBzdHVkZW50S2V5IGluIHN0YXRlLnN0dWRlbnREYXRhKSB7XG4gICAgICBjb25zdCBzdHVkZW50ID0gc3RhdGUuc3R1ZGVudERhdGFbc3R1ZGVudEtleV07XG4gICAgICBuZXdTdGF0ZS5zdHVkZW50RGF0YVtzdHVkZW50LmlkXS5pc0VkaXRpbmcgPSB0cnVlO1xuICAgICAgbmV3U3RhdGUuZWRpdGluZ0RhdGFbc3R1ZGVudC5pZF0gPSB7XG4gICAgICAgIC4uLm5ld1N0YXRlLnN0dWRlbnREYXRhW3N0dWRlbnQuaWRdLFxuICAgICAgICAuLi5zdGF0ZS5lZGl0aW5nRGF0YVtzdHVkZW50LmlkXSxcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBuZXdTdGF0ZTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFVQREFURV9BTExfU0hBUkVfU0VUVElORykge1xuICAgIGxldCBuZXdTdGF0ZSA9IHtcbiAgICAgIC4uLnN0YXRlLFxuICAgIH07XG4gICAgZm9yIChjb25zdCBzdHVkZW50S2V5IGluIHN0YXRlLnN0dWRlbnREYXRhKSB7XG4gICAgICBjb25zdCBzdHVkZW50ID0gc3RhdGUuc3R1ZGVudERhdGFbc3R1ZGVudEtleV07XG4gICAgICBuZXdTdGF0ZS5lZGl0aW5nRGF0YVtzdHVkZW50LmlkXS5zaGFyaW5nRGlzYWJsZWQgPSBhY3Rpb24uZGlzYWJsZTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld1N0YXRlO1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0VUX1NFQ1JFVF9JTUFHRSkge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHN0dWRlbnREYXRhOiB7XG4gICAgICAgIC4uLnN0YXRlLnN0dWRlbnREYXRhLFxuICAgICAgICBbYWN0aW9uLnN0dWRlbnRJZF06IHtcbiAgICAgICAgICAuLi5zdGF0ZS5zdHVkZW50RGF0YVthY3Rpb24uc3R1ZGVudElkXSxcbiAgICAgICAgICBzZWNyZXRQaWN0dXJlUGF0aDogYWN0aW9uLmltYWdlLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0VUX1NFQ1JFVF9XT1JEUykge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHN0dWRlbnREYXRhOiB7XG4gICAgICAgIC4uLnN0YXRlLnN0dWRlbnREYXRhLFxuICAgICAgICBbYWN0aW9uLnN0dWRlbnRJZF06IHtcbiAgICAgICAgICAuLi5zdGF0ZS5zdHVkZW50RGF0YVthY3Rpb24uc3R1ZGVudElkXSxcbiAgICAgICAgICBzZWNyZXRXb3JkczogYWN0aW9uLndvcmRzLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gUkVNT1ZFX1NUVURFTlQpIHtcbiAgICBjb25zdCBzdHVkZW50SWQgPSBhY3Rpb24uc3R1ZGVudElkO1xuICAgIGNvbnN0IHN0dWRlbnQgPSBzdGF0ZS5zdHVkZW50RGF0YVtzdHVkZW50SWRdO1xuICAgIGlmICghc3R1ZGVudCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdzdHVkZW50IGRvZXMgbm90IGV4aXN0Jyk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHN0dWRlbnREYXRhOiBfLm9taXQoc3RhdGUuc3R1ZGVudERhdGEsIHN0dWRlbnRJZCksXG4gICAgICBlZGl0aW5nRGF0YTogXy5vbWl0KHN0YXRlLmVkaXRpbmdEYXRhLCBzdHVkZW50SWQpLFxuICAgIH07XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBBRERfTVVMVElQTEVfUk9XUykge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHN0dWRlbnREYXRhOiB7XG4gICAgICAgIC4uLnN0YXRlLnN0dWRlbnREYXRhLFxuICAgICAgICAuLi5hY3Rpb24uc3R1ZGVudERhdGEsXG4gICAgICB9LFxuICAgICAgZWRpdGluZ0RhdGE6IHtcbiAgICAgICAgLi4uc3RhdGUuZWRpdGluZ0RhdGEsXG4gICAgICAgIC4uLmFjdGlvbi5zdHVkZW50RGF0YSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNFVF9TSE9XX1NIQVJJTkdfQ09MVU1OKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgc2hvd1NoYXJpbmdDb2x1bW46ICEhYWN0aW9uLnZpc2libGUsXG4gICAgfTtcbiAgfVxuXG4gIGlmIChhY3Rpb24udHlwZSA9PT0gVVBEQVRFX1NUVURFTlRfVFJBTlNGRVIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICB0cmFuc2ZlckRhdGE6IHtcbiAgICAgICAgLi4uc3RhdGUudHJhbnNmZXJEYXRhLFxuICAgICAgICAuLi5hY3Rpb24udHJhbnNmZXJEYXRhLFxuICAgICAgfSxcbiAgICAgIC8vIGNsZWFyIGFueSBwcmV2aW91cyBzdGF0dXMgaWYgdHJhbnNmZXIgZGF0YSBoYXMgY2hhbmdlZFxuICAgICAgdHJhbnNmZXJTdGF0dXM6IGJsYW5rU3R1ZGVudFRyYW5zZmVyU3RhdHVzLFxuICAgIH07XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBDQU5DRUxfU1RVREVOVF9UUkFOU0ZFUikge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHRyYW5zZmVyRGF0YTogYmxhbmtTdHVkZW50VHJhbnNmZXIsXG4gICAgICB0cmFuc2ZlclN0YXR1czoge1xuICAgICAgICAuLi5zdGF0ZS50cmFuc2ZlclN0YXR1cyxcbiAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICB9LFxuICAgIH07XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBUUkFOU0ZFUl9TVFVERU5UU19TVUNDRVNTKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgdHJhbnNmZXJTdGF0dXM6IHtcbiAgICAgICAgLi4uc3RhdGUudHJhbnNmZXJTdGF0dXMsXG4gICAgICAgIHN0YXR1czogVHJhbnNmZXJTdGF0dXMuU1VDQ0VTUyxcbiAgICAgICAgdHlwZTogYWN0aW9uLnRyYW5zZmVyVHlwZSxcbiAgICAgICAgbnVtU3R1ZGVudHM6IGFjdGlvbi5udW1TdHVkZW50cyxcbiAgICAgICAgc2VjdGlvbkRpc3BsYXk6IGFjdGlvbi5zZWN0aW9uRGlzcGxheSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFRSQU5TRkVSX1NUVURFTlRTX0ZVTEwpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICB0cmFuc2ZlclN0YXR1czoge1xuICAgICAgICAuLi5zdGF0ZS50cmFuc2ZlclN0YXR1cyxcbiAgICAgICAgc3RhdHVzOiBUcmFuc2ZlclN0YXR1cy5GVUxMLFxuICAgICAgICBzZWN0aW9uQ2FwYWNpdHk6IGFjdGlvbi5zZWN0aW9uQ2FwYWNpdHksXG4gICAgICAgIG51bVN0dWRlbnRzOiBhY3Rpb24ubnVtU3R1ZGVudHMsXG4gICAgICAgIHNlY3Rpb25Db2RlOiBhY3Rpb24uc2VjdGlvbkNvZGUsXG4gICAgICAgIHNlY3Rpb25TdHVkZW50Q291bnQ6IGFjdGlvbi5zZWN0aW9uU3R1ZGVudENvdW50LFxuICAgICAgICB2ZXJiOiBhY3Rpb24udmVyYixcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFRSQU5TRkVSX1NUVURFTlRTX0ZBSUxVUkUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICB0cmFuc2ZlclN0YXR1czoge1xuICAgICAgICAuLi5zdGF0ZS50cmFuc2ZlclN0YXR1cyxcbiAgICAgICAgc3RhdHVzOiBUcmFuc2ZlclN0YXR1cy5GQUlMLFxuICAgICAgICBlcnJvcjogYWN0aW9uLmVycm9yLFxuICAgICAgfSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gVFJBTlNGRVJfU1RVREVOVFNfUEVORElORykge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHRyYW5zZmVyU3RhdHVzOiB7XG4gICAgICAgIC4uLnN0YXRlLnRyYW5zZmVyU3RhdHVzLFxuICAgICAgICBzdGF0dXM6IFRyYW5zZmVyU3RhdHVzLlBFTkRJTkcsXG4gICAgICB9LFxuICAgIH07XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBTVEFSVF9MT0FESU5HX1NUVURFTlRTKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgaXNMb2FkaW5nU3R1ZGVudHM6IHRydWUsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IEZJTklTSF9MT0FESU5HX1NUVURFTlRTKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgaXNMb2FkaW5nU3R1ZGVudHM6IGZhbHNlLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4gc3RhdGU7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRTdHVkZW50Q291bnQgPSBzdGF0ZSA9PiB7XG4gIGNvbnN0IHN0dWRlbnREYXRhID0gey4uLnN0YXRlLm1hbmFnZVN0dWRlbnRzLnN0dWRlbnREYXRhfTtcbiAgLy8gRGVsZXRlIHBsYWNlaG9sZGVyIHJvdyBmb3IgYWRkaW5nIGEgc3R1ZGVudCB3aGVyZSBpZCBpcyBzZXQgdG8gMC5cbiAgZGVsZXRlIHN0dWRlbnREYXRhWzBdO1xuXG4gIHJldHVybiBPYmplY3Qua2V5cyhzdHVkZW50RGF0YSkubGVuZ3RoO1xufTtcblxuLy8gQ29udmVydHMgZGF0YSBmcm9tIC9kYXNoYm9hcmRhcGkvc2VjdGlvbnMvc2VjdGlvbmlkL3N0dWRlbnRzIHRvIGEgc2V0IG9mIGtleS92YWx1ZVxuLy8gb2JqZWN0cyBmb3IgdGhlIHJlZHV4IHN0b3JlXG5leHBvcnQgY29uc3QgY29udmVydFN0dWRlbnRTZXJ2ZXJEYXRhID0gKHN0dWRlbnREYXRhLCBsb2dpblR5cGUsIHNlY3Rpb25JZCkgPT4ge1xuICBsZXQgc3R1ZGVudExvb2t1cCA9IHt9O1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0dWRlbnREYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IHN0dWRlbnQgPSBzdHVkZW50RGF0YVtpXTtcbiAgICBzdHVkZW50TG9va3VwW3N0dWRlbnQuaWRdID0ge1xuICAgICAgaWQ6IHN0dWRlbnQuaWQsXG4gICAgICBuYW1lOiBzdHVkZW50Lm5hbWUsXG4gICAgICBmYW1pbHlOYW1lOiBzdHVkZW50LmZhbWlseV9uYW1lLFxuICAgICAgdXNlcm5hbWU6IHN0dWRlbnQudXNlcm5hbWUsXG4gICAgICBlbWFpbDogc3R1ZGVudC5lbWFpbCxcbiAgICAgIGFnZTogc3R1ZGVudC5hZ2UgfHwgJycsXG4gICAgICBnZW5kZXI6IHN0dWRlbnQuZ2VuZGVyIHx8ICcnLFxuICAgICAgZ2VuZGVyVGVhY2hlcklucHV0OiBzdHVkZW50LmdlbmRlcl90ZWFjaGVyX2lucHV0IHx8ICcnLFxuICAgICAgc2VjcmV0V29yZHM6IHN0dWRlbnQuc2VjcmV0X3dvcmRzLFxuICAgICAgc2VjcmV0UGljdHVyZVBhdGg6IHN0dWRlbnQuc2VjcmV0X3BpY3R1cmVfcGF0aCxcbiAgICAgIGxvZ2luVHlwZTogbG9naW5UeXBlLFxuICAgICAgc2VjdGlvbklkOiBzZWN0aW9uSWQsXG4gICAgICBzaGFyaW5nRGlzYWJsZWQ6IHN0dWRlbnQuc2hhcmluZ19kaXNhYmxlZCxcbiAgICAgIGhhc0V2ZXJTaWduZWRJbjogc3R1ZGVudC5oYXNfZXZlcl9zaWduZWRfaW4sXG4gICAgICBkZXBlbmRzT25UaGlzU2VjdGlvbkZvckxvZ2luOiBzdHVkZW50LmRlcGVuZHNfb25fdGhpc19zZWN0aW9uX2Zvcl9sb2dpbixcbiAgICAgIGlzRWRpdGluZzogZmFsc2UsXG4gICAgICBpc1NhdmluZzogZmFsc2UsXG4gICAgICByb3dUeXBlOiBSb3dUeXBlLlNUVURFTlQsXG4gICAgICB1c2VyVHlwZTogc3R1ZGVudC51c2VyX3R5cGUsXG4gICAgICBhdFJpc2tBZ2VHYXRlZFN0dWRlbnQ6IHN0dWRlbnQuYXRfcmlza19hZ2VfZ2F0ZWQsXG4gICAgICBjaGlsZEFjY291bnRDb21wbGlhbmNlU3RhdGU6IHN0dWRlbnQuY2hpbGRfYWNjb3VudF9jb21wbGlhbmNlX3N0YXRlLFxuICAgICAgbGF0ZXN0UGVybWlzc2lvblJlcXVlc3RTZW50QXQ6XG4gICAgICAgIHN0dWRlbnQubGF0ZXN0X3Blcm1pc3Npb25fcmVxdWVzdF9zZW50X2F0ICYmXG4gICAgICAgIG5ldyBEYXRlKHN0dWRlbnQubGF0ZXN0X3Blcm1pc3Npb25fcmVxdWVzdF9zZW50X2F0KSxcbiAgICB9O1xuICB9XG4gIHJldHVybiBzdHVkZW50TG9va3VwO1xufTtcblxuLy8gQ29udmVydHMga2V5L3ZhbHVlIGlkL3N0dWRlbnQgcGFpcnMgdG8gYW4gYXJyYXkgb2Ygc3R1ZGVudCBvYmplY3RzIGZvciB0aGVcbi8vIGNvbXBvbmVudCB0byBkaXNwbGF5XG5leHBvcnQgY29uc3QgY29udmVydFN0dWRlbnREYXRhVG9BcnJheSA9IHN0dWRlbnREYXRhID0+IHtcbiAgcmV0dXJuIE9iamVjdC52YWx1ZXMoc3R1ZGVudERhdGEpLnJldmVyc2UoKTtcbn07XG5cbi8vIE1ha2UgYSBwb3N0IHJlcXVlc3QgdG8gZWRpdCBhIHN0dWRlbnQuXG5jb25zdCB1cGRhdGVTdHVkZW50T25TZXJ2ZXIgPSAodXBkYXRlZFN0dWRlbnRJbmZvLCBzZWN0aW9uSWQsIG9uQ29tcGxldGUpID0+IHtcbiAgY29uc3QgZGF0YVRvVXBkYXRlID0ge1xuICAgIHN0dWRlbnQ6IHtcbiAgICAgIGlkOiB1cGRhdGVkU3R1ZGVudEluZm8uaWQsXG4gICAgICBuYW1lOiB1cGRhdGVkU3R1ZGVudEluZm8ubmFtZSxcbiAgICAgIGZhbWlseV9uYW1lOiB1cGRhdGVkU3R1ZGVudEluZm8uZmFtaWx5TmFtZSxcbiAgICAgIGFnZTogdXBkYXRlZFN0dWRlbnRJbmZvLmFnZSxcbiAgICAgIGdlbmRlcjogdXBkYXRlZFN0dWRlbnRJbmZvLmdlbmRlcixcbiAgICAgIGdlbmRlcl90ZWFjaGVyX2lucHV0OiB1cGRhdGVkU3R1ZGVudEluZm8uZ2VuZGVyVGVhY2hlcklucHV0LFxuICAgICAgc2hhcmluZ19kaXNhYmxlZDogdXBkYXRlZFN0dWRlbnRJbmZvLnNoYXJpbmdEaXNhYmxlZCxcbiAgICB9LFxuICB9O1xuICAkLmFqYXgoe1xuICAgIHVybDogYC9kYXNoYm9hcmRhcGkvc2VjdGlvbnMvJHtzZWN0aW9uSWR9L3N0dWRlbnRzLyR7ZGF0YVRvVXBkYXRlLnN0dWRlbnQuaWR9YCxcbiAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgdHlwZTogJ2pzb24nLFxuICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04JyxcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShkYXRhVG9VcGRhdGUpLFxuICB9KVxuICAgIC5kb25lKGRhdGEgPT4ge1xuICAgICAgb25Db21wbGV0ZShudWxsLCBkYXRhKTtcbiAgICB9KVxuICAgIC5mYWlsKChqcVhociwgc3RhdHVzKSA9PiB7XG4gICAgICBvbkNvbXBsZXRlKHN0YXR1cywgbnVsbCk7XG4gICAgfSk7XG59O1xuXG4vLyBNYWtlIGEgcG9zdCByZXF1ZXN0IHRvIGFkZCBzdHVkZW50cy5cbmNvbnN0IGFkZFN0dWRlbnRPblNlcnZlciA9ICh1cGRhdGVkU3R1ZGVudHNJbmZvLCBzZWN0aW9uSWQsIG9uQ29tcGxldGUpID0+IHtcbiAgY29uc3Qgc3R1ZGVudHNUb0FkZCA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHVwZGF0ZWRTdHVkZW50c0luZm8ubGVuZ3RoOyBpKyspIHtcbiAgICBzdHVkZW50c1RvQWRkW2ldID0ge1xuICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgIG5hbWU6IHVwZGF0ZWRTdHVkZW50c0luZm9baV0ubmFtZSxcbiAgICAgIGZhbWlseV9uYW1lOiB1cGRhdGVkU3R1ZGVudHNJbmZvW2ldLmZhbWlseU5hbWUsXG4gICAgICBhZ2U6IHVwZGF0ZWRTdHVkZW50c0luZm9baV0uYWdlLFxuICAgICAgZ2VuZGVyOiB1cGRhdGVkU3R1ZGVudHNJbmZvW2ldLmdlbmRlcixcbiAgICAgIGdlbmRlcl90ZWFjaGVyX2lucHV0OiB1cGRhdGVkU3R1ZGVudHNJbmZvW2ldLmdlbmRlclRlYWNoZXJJbnB1dCxcbiAgICAgIHNoYXJpbmdfZGlzYWJsZWQ6IHVwZGF0ZWRTdHVkZW50c0luZm9baV0uc2hhcmluZ0Rpc2FibGVkLFxuICAgIH07XG4gIH1cbiAgY29uc3Qgc3R1ZGVudHMgPSB7XG4gICAgc3R1ZGVudHM6IHN0dWRlbnRzVG9BZGQsXG4gIH07XG4gICQuYWpheCh7XG4gICAgdXJsOiBgL2Rhc2hib2FyZGFwaS9zZWN0aW9ucy8ke3NlY3Rpb25JZH0vc3R1ZGVudHMvYnVsa19hZGRgLFxuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04JyxcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShzdHVkZW50cyksXG4gIH0pXG4gICAgLmRvbmUoZGF0YSA9PiB7XG4gICAgICBvbkNvbXBsZXRlKG51bGwsIGRhdGEpO1xuICAgIH0pXG4gICAgLmZhaWwoKGpxWGhyLCBzdGF0dXMpID0+IHtcbiAgICAgIG9uQ29tcGxldGUoc3RhdHVzLCBqcVhoci5yZXNwb25zZUpTT04gfHwgbnVsbCk7XG4gICAgfSk7XG59O1xuXG4vLyBNYWtlIGEgcG9zdCByZXF1ZXN0IHRvIHRyYW5zZmVyIHN0dWRlbnRzLlxuY29uc3QgdHJhbnNmZXJTdHVkZW50c09uU2VydmVyID0gKFxuICBzdHVkZW50SWRzLFxuICBjdXJyZW50U2VjdGlvbkNvZGUsXG4gIG5ld1NlY3Rpb25Db2RlLFxuICBzdGF5RW5yb2xsZWRJbkN1cnJlbnRTZWN0aW9uLFxuICBvbkNvbXBsZXRlXG4pID0+IHtcbiAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICBzdHVkZW50X2lkczogc3R1ZGVudElkcyxcbiAgICBjdXJyZW50X3NlY3Rpb25fY29kZTogY3VycmVudFNlY3Rpb25Db2RlLFxuICAgIG5ld19zZWN0aW9uX2NvZGU6IG5ld1NlY3Rpb25Db2RlLFxuICAgIHN0YXlfZW5yb2xsZWRfaW5fY3VycmVudF9zZWN0aW9uOiBzdGF5RW5yb2xsZWRJbkN1cnJlbnRTZWN0aW9uLFxuICB9O1xuICAkLmFqYXgoe1xuICAgIHVybDogJy9kYXNoYm9hcmRhcGkvc2VjdGlvbnMvdHJhbnNmZXJzJyxcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCcsXG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCksXG4gIH0pXG4gICAgLmRvbmUoZGF0YSA9PiB7XG4gICAgICBvbkNvbXBsZXRlKG51bGwsIGRhdGEpO1xuICAgIH0pXG4gICAgLmZhaWwoKGpxWGhyLCBzdGF0dXMpID0+IHtcbiAgICAgIG9uQ29tcGxldGUoc3RhdHVzLCBqcVhoci5yZXNwb25zZUpTT04pO1xuICAgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGxvYWRTZWN0aW9uU3R1ZGVudERhdGEgPSBzZWN0aW9uSWQgPT4ge1xuICByZXR1cm4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xuICAgIGNvbnN0IHN0YXRlID0gZ2V0U3RhdGUoKS5tYW5hZ2VTdHVkZW50cztcbiAgICBsZXQgb2xkU2VjdGlvbklkID0gc3RhdGUuc2VjdGlvbklkO1xuXG4gICAgLy8gTG9hZCBkYXRhIG9ubHkgaWYgc2VjdGlvbiBJZCBkb2Vzbid0IGFscmVhZHkgbWF0Y2hcbiAgICBpZiAoc3RhdGUuc2VjdGlvbklkICE9PSBzZWN0aW9uSWQpIHtcbiAgICAgIC8vIFNldCBzZWN0aW9uIElEIHRvIGluZGljYXRlIHN0dWRlbnQgZGF0YSBmb3IgY3VycmVudCBzZWN0aW9uLlxuICAgICAgZGlzcGF0Y2goc2V0U2VjdGlvbkluZm8oc2VjdGlvbklkKSk7XG4gICAgICBkaXNwYXRjaChzdGFydExvYWRpbmdTdHVkZW50cygpKTtcbiAgICAgICQuYWpheCh7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIHVybDogYC9kYXNoYm9hcmRhcGkvc2VjdGlvbnMvJHtzZWN0aW9uSWR9L3N0dWRlbnRzYCxcbiAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgIH0pXG4gICAgICAgIC5kb25lKHN0dWRlbnREYXRhID0+IHtcbiAgICAgICAgICBjb25zdCBjb252ZXJ0ZWRTdHVkZW50RGF0YSA9IGNvbnZlcnRTdHVkZW50U2VydmVyRGF0YShcbiAgICAgICAgICAgIHN0dWRlbnREYXRhLFxuICAgICAgICAgICAgc3RhdGUubG9naW5UeXBlLFxuICAgICAgICAgICAgc2VjdGlvbklkXG4gICAgICAgICAgKTtcbiAgICAgICAgICBkaXNwYXRjaChzZXRTdHVkZW50cyhjb252ZXJ0ZWRTdHVkZW50RGF0YSkpO1xuICAgICAgICB9KVxuICAgICAgICAuZmFpbCgoKSA9PiB7XG4gICAgICAgICAgLy8gcmV2ZXJ0IHRvIG9sZCBzZWN0aW9uIElEIGluIGNhc2Ugb2YgZmFpbHVyZSB0byBiYWNrZW5kIGNhbGxcbiAgICAgICAgICBkaXNwYXRjaChzZXRTZWN0aW9uSW5mbyhvbGRTZWN0aW9uSWQpKTtcbiAgICAgICAgICBkaXNwYXRjaChmaW5pc2hMb2FkaW5nU3R1ZGVudHMoKSk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBkaXNwYXRjaChmaW5pc2hMb2FkaW5nU3R1ZGVudHMoKSk7XG4gICAgfVxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGZpbHRlckFnZUdhdGVkU3R1ZGVudHMgPSBzdHVkZW50RGF0YSA9PiB7XG4gIHJldHVybiBzdHVkZW50RGF0YS5maWx0ZXIoc3R1ZGVudCA9PiBzdHVkZW50LmF0Umlza0FnZUdhdGVkU3R1ZGVudCk7XG59O1xuIl0sIm5hbWVzIjpbIm1hbmFnZVN0dWRlbnRzIiwic3RhdGUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJpbml0aWFsU3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiU0VUX0xPR0lOX1RZUEUiLCJhZGRSb3dJbml0aWFsaXphdGlvbiIsImxvZ2luVHlwZSIsIlNlY3Rpb25Mb2dpblR5cGUiLCJ3b3JkIiwicGljdHVyZSIsInN0dWRlbnREYXRhIiwiX2RlZmluZVByb3BlcnR5IiwiYWRkUm93SWQiLCJfb2JqZWN0U3ByZWFkIiwiYmxhbmtBZGRSb3ciLCJlZGl0aW5nRGF0YSIsIlNFVF9TVFVERU5UUyIsImFkZFN0YXR1cyIsInN0YXR1cyIsIm51bVN0dWRlbnRzIiwiaXNMb2FkaW5nU3R1ZGVudHMiLCJTRVRfU0VDVElPTl9JTkZPIiwic2VjdGlvbklkIiwiU1RBUlRfRURJVElOR19TVFVERU5UIiwic3R1ZGVudElkIiwiaXNFZGl0aW5nIiwiaWQiLCJDQU5DRUxfRURJVElOR19TVFVERU5UIiwiXyIsIm9taXQiLCJTVEFSVF9TQVZJTkdfU1RVREVOVCIsImlzU2F2aW5nIiwiU0FWRV9TVFVERU5UX1NVQ0NFU1MiLCJyb3dUeXBlIiwiUm93VHlwZSIsIlNUVURFTlQiLCJBRERfU1RVREVOVF9GQUlMVVJFIiwibmV3U3RhdGUiLCJBZGRTdGF0dXMiLCJGQUlMIiwiaSIsInN0dWRlbnRJZHMiLCJBRERfU1RVREVOVF9GVUxMIiwiRlVMTCIsInNlY3Rpb25DYXBhY2l0eSIsInNlY3Rpb25Db2RlIiwic2VjdGlvblN0dWRlbnRDb3VudCIsIkFERF9TVFVERU5UX1NVQ0NFU1MiLCJyb3dJZHMiLCJTVUNDRVNTIiwiU0VUX1NIQVJJTkdfREVGQVVMVCIsInNoYXJpbmdEaXNhYmxlZCIsImFnZSIsIkVESVRfU1RVREVOVCIsIkVESVRfQUxMIiwic3R1ZGVudEtleSIsInN0dWRlbnQiLCJVUERBVEVfQUxMX1NIQVJFX1NFVFRJTkciLCJkaXNhYmxlIiwiU0VUX1NFQ1JFVF9JTUFHRSIsInNlY3JldFBpY3R1cmVQYXRoIiwiaW1hZ2UiLCJTRVRfU0VDUkVUX1dPUkRTIiwic2VjcmV0V29yZHMiLCJ3b3JkcyIsIlJFTU9WRV9TVFVERU5UIiwiRXJyb3IiLCJBRERfTVVMVElQTEVfUk9XUyIsIlNFVF9TSE9XX1NIQVJJTkdfQ09MVU1OIiwic2hvd1NoYXJpbmdDb2x1bW4iLCJ2aXNpYmxlIiwiVVBEQVRFX1NUVURFTlRfVFJBTlNGRVIiLCJ0cmFuc2ZlckRhdGEiLCJ0cmFuc2ZlclN0YXR1cyIsImJsYW5rU3R1ZGVudFRyYW5zZmVyU3RhdHVzIiwiQ0FOQ0VMX1NUVURFTlRfVFJBTlNGRVIiLCJibGFua1N0dWRlbnRUcmFuc2ZlciIsImVycm9yIiwiVFJBTlNGRVJfU1RVREVOVFNfU1VDQ0VTUyIsIlRyYW5zZmVyU3RhdHVzIiwidHJhbnNmZXJUeXBlIiwic2VjdGlvbkRpc3BsYXkiLCJUUkFOU0ZFUl9TVFVERU5UU19GVUxMIiwidmVyYiIsIlRSQU5TRkVSX1NUVURFTlRTX0ZBSUxVUkUiLCJUUkFOU0ZFUl9TVFVERU5UU19QRU5ESU5HIiwiUEVORElORyIsIlNUQVJUX0xPQURJTkdfU1RVREVOVFMiLCJGSU5JU0hfTE9BRElOR19TVFVERU5UUyIsIl9qcXVlcnkiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9sb2Rhc2giLCJfdGVhY2hlclNlY3Rpb25zUmVkdXgiLCJfc2hhcmVkQ29uc3RhbnRzIiwib2JqIiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJvIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsImZvckVhY2giLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsIl90b1ByaW1pdGl2ZSIsInRvUHJpbWl0aXZlIiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiZXhwb3J0cyIsIkFCT1ZFX1RBQkxFIiwiQkVMT1dfVEFCTEUiLCJNQU5BR0VfU1RVREVOVFMiLCJMT0dJTl9JTkZPIiwiQUREIiwiTkVXX1NUVURFTlQiLCJUcmFuc2ZlclR5cGUiLCJNT1ZFX1NUVURFTlRTIiwiQ09QWV9TVFVERU5UUyIsIm90aGVyVGVhY2hlciIsIm90aGVyVGVhY2hlclNlY3Rpb24iLCJjb3B5U3R1ZGVudHMiLCJhZGRSb3dJZENvdW50ZXIiLCJuYW1lIiwiZ2VuZGVyIiwidXNlcm5hbWUiLCJibGFua05ld1N0dWRlbnRSb3ciLCJzdGFydExvYWRpbmdTdHVkZW50cyIsImZpbmlzaExvYWRpbmdTdHVkZW50cyIsInNldFN0dWRlbnRzIiwic2V0TG9naW5UeXBlIiwic2V0U2VjdGlvbkluZm8iLCJyZW1vdmVTdHVkZW50Iiwic3RhcnRFZGl0aW5nU3R1ZGVudCIsImNhbmNlbEVkaXRpbmdTdHVkZW50IiwiZWRpdEFsbCIsInNldFNlY3JldEltYWdlIiwic2V0U2VjcmV0V29yZHMiLCJlZGl0U3R1ZGVudCIsInNldFNoYXJpbmdEZWZhdWx0IiwidXBkYXRlQWxsU2hhcmVTZXR0aW5nIiwic3RhcnRTYXZpbmdTdHVkZW50Iiwic2F2ZVN0dWRlbnRTdWNjZXNzIiwidHJhbnNmZXJTdHVkZW50c1N1Y2Nlc3MiLCJ1cGRhdGVTdHVkZW50VHJhbnNmZXIiLCJjYW5jZWxTdHVkZW50VHJhbnNmZXIiLCJ0cmFuc2ZlclN0dWRlbnRzRmFpbHVyZSIsInRyYW5zZmVyU3R1ZGVudHNQZW5kaW5nIiwidHJhbnNmZXJTdHVkZW50c0Z1bGwiLCJfcmVmIiwiY29weSIsImFkZFN0dWRlbnRzU3VjY2VzcyIsImFkZFN0dWRlbnRzRmFpbHVyZSIsImFkZFN0dWRlbnRzRnVsbCIsIl9yZWYyIiwiYWRkTXVsdGlwbGVSb3dzIiwic2F2ZVN0dWRlbnQiLCJzZXRTaG93U2hhcmluZ0NvbHVtbiIsImhhbmRsZVNoYXJlU2V0dGluZyIsImRpc3BhdGNoIiwiZ2V0U3RhdGUiLCJ0ZWFjaGVyU2VjdGlvbnMiLCJzZWxlY3RlZFNlY3Rpb25JZCIsInVwZGF0ZVN0dWRlbnRPblNlcnZlciIsImRhdGEiLCJjb25zb2xlIiwiYXN5bmNMb2FkU2VjdGlvbkRhdGEiLCJhZGRTdHVkZW50cyIsInNhdmVBbGxTdHVkZW50cyIsInZhbHVlcyIsIm5ld1N0dWRlbnRzVG9BZGQiLCJtYXAiLCJudW1TdHVkZW50c1RvQWRkIiwiZmlsdGVyZWREYXRhIiwiaW5jbHVkZXMiLCJhZGRTdHVkZW50T25TZXJ2ZXIiLCJyZXN1bHQiLCJjb252ZXJ0U3R1ZGVudFNlcnZlckRhdGEiLCJhZGRNdWx0aXBsZUFkZFJvd3MiLCJzdHVkZW50RGF0YUFycmF5IiwicmVkdWNlIiwiYWNjdW11bGF0b3IiLCJuZXdJZCIsImZhbWlseU5hbWUiLCJ0cmFuc2ZlclN0dWRlbnRzIiwib25Db21wbGV0ZSIsIm5ld1NlY3Rpb25Db2RlIiwiY3VycmVudFNlY3Rpb25Db2RlIiwiX3N0YXRlJG1hbmFnZVN0dWRlbnRzIiwibmV3U2VjdGlvbklkIiwidHJhbnNmZXJTdHVkZW50c09uU2VydmVyIiwic2VjdGlvbk5hbWUiLCJnZXRTdHVkZW50Q291bnQiLCJzdHVkZW50TG9va3VwIiwiZmFtaWx5X25hbWUiLCJlbWFpbCIsImdlbmRlclRlYWNoZXJJbnB1dCIsImdlbmRlcl90ZWFjaGVyX2lucHV0Iiwic2VjcmV0X3dvcmRzIiwic2VjcmV0X3BpY3R1cmVfcGF0aCIsInNoYXJpbmdfZGlzYWJsZWQiLCJoYXNFdmVyU2lnbmVkSW4iLCJoYXNfZXZlcl9zaWduZWRfaW4iLCJkZXBlbmRzT25UaGlzU2VjdGlvbkZvckxvZ2luIiwiZGVwZW5kc19vbl90aGlzX3NlY3Rpb25fZm9yX2xvZ2luIiwidXNlclR5cGUiLCJ1c2VyX3R5cGUiLCJhdFJpc2tBZ2VHYXRlZFN0dWRlbnQiLCJhdF9yaXNrX2FnZV9nYXRlZCIsImNoaWxkQWNjb3VudENvbXBsaWFuY2VTdGF0ZSIsImNoaWxkX2FjY291bnRfY29tcGxpYW5jZV9zdGF0ZSIsImxhdGVzdFBlcm1pc3Npb25SZXF1ZXN0U2VudEF0IiwibGF0ZXN0X3Blcm1pc3Npb25fcmVxdWVzdF9zZW50X2F0IiwiRGF0ZSIsImNvbnZlcnRTdHVkZW50RGF0YVRvQXJyYXkiLCJyZXZlcnNlIiwidXBkYXRlZFN0dWRlbnRJbmZvIiwiZGF0YVRvVXBkYXRlIiwiJCIsImFqYXgiLCJ1cmwiLCJjb25jYXQiLCJtZXRob2QiLCJjb250ZW50VHlwZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJkb25lIiwiZmFpbCIsImpxWGhyIiwidXBkYXRlZFN0dWRlbnRzSW5mbyIsInN0dWRlbnRzVG9BZGQiLCJlZGl0aW5nIiwic3R1ZGVudHMiLCJyZXNwb25zZUpTT04iLCJzdGF5RW5yb2xsZWRJbkN1cnJlbnRTZWN0aW9uIiwicGF5bG9hZCIsInN0dWRlbnRfaWRzIiwiY3VycmVudF9zZWN0aW9uX2NvZGUiLCJuZXdfc2VjdGlvbl9jb2RlIiwic3RheV9lbnJvbGxlZF9pbl9jdXJyZW50X3NlY3Rpb24iLCJsb2FkU2VjdGlvblN0dWRlbnREYXRhIiwib2xkU2VjdGlvbklkIiwiZGF0YVR5cGUiLCJjb252ZXJ0ZWRTdHVkZW50RGF0YSIsImZpbHRlckFnZUdhdGVkU3R1ZGVudHMiXSwic291cmNlUm9vdCI6IiJ9