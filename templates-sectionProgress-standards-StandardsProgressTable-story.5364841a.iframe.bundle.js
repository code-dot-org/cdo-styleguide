"use strict";(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[1562],{"./.storybook/decorators.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{reduxStore:()=>reduxStore});var redux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/redux/es/redux.js"),redux_thunk__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/redux-thunk/lib/index.js"),_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/code-studio/isRtlRedux.js"),_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/code-studio/responsiveRedux.js");const reduxStore=(reducers={},state={})=>(0,redux__WEBPACK_IMPORTED_MODULE_3__.createStore)((0,redux__WEBPACK_IMPORTED_MODULE_3__.combineReducers)({isRtl:_cdo_apps_code_studio_isRtlRedux__WEBPACK_IMPORTED_MODULE_1__.default,responsive:_cdo_apps_code_studio_responsiveRedux__WEBPACK_IMPORTED_MODULE_2__.default,...reducers}),state,(0,redux__WEBPACK_IMPORTED_MODULE_3__.applyMiddleware)(redux_thunk__WEBPACK_IMPORTED_MODULE_0__.default))},"./src/code-studio/isRtlRedux.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function locale(){var state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RTL)return action.isRtl;return state},exports.isRtlFromDOM=isRtlFromDOM,exports.setRtlFromDOM=exports.setRtl=void 0;var SET_RTL="isRtl/SET_RTL",setRtl=exports.setRtl=function setRtl(isRtl){return{type:SET_RTL,isRtl}};exports.setRtlFromDOM=function setRtlFromDOM(){return setRtl(isRtlFromDOM())};function isRtlFromDOM(){var head=document.getElementsByTagName("head")[0];if(head&&head.parentElement){var dir=head.parentElement.getAttribute("dir");return!(!dir||"rtl"!==dir.toLowerCase())}return!1}},"./src/code-studio/responsiveRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResponsiveSize=void 0,exports.default=function reducer(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_RESPONSIVE_SIZE&&state.responsiveSize!==action.responsiveSize)return _objectSpread(_objectSpread({},state),{},{responsiveSize:action.responsiveSize});return state},exports.getResponsiveBreakpoint=getResponsiveBreakpoint,exports.setResponsiveSize=void 0;var _utils=__webpack_require__("./src/utils.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_RESPONSIVE_SIZE="responsive/SET_RESPONSIVE_SIZE",ResponsiveSize=(exports.setResponsiveSize=function setResponsiveSize(responsiveSize){return{type:SET_RESPONSIVE_SIZE,responsiveSize}},exports.ResponsiveSize=(0,_utils.makeEnum)("lg","md","sm","xs")),Breakpoints=[{breakpoint:992,responsiveSize:ResponsiveSize.lg},{breakpoint:720,responsiveSize:ResponsiveSize.md},{breakpoint:650,responsiveSize:ResponsiveSize.sm},{breakpoint:0,responsiveSize:ResponsiveSize.xs}];function getResponsiveBreakpoint(width){var responsiveSize=Breakpoints.find((function(_ref){var breakpoint=_ref.breakpoint;return width>breakpoint}));return void 0===responsiveSize?(console.error("No responsive size found for width ".concat(width,", defaulting to xs")),ResponsiveSize.xs):responsiveSize.responsiveSize}var initialState={responsiveSize:getResponsiveBreakpoint(window.innerWidth)}},"./src/templates/FontAwesome.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/sectionProgress/standards/StandardDescriptionCell.jsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_reactTooltip=_interopRequireDefault(__webpack_require__("./node_modules/react-tooltip/dist/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_ProgressBoxForLessonNumber=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/ProgressBoxForLessonNumber.jsx")),_standardsConstants=__webpack_require__("./src/templates/sectionProgress/standards/standardsConstants.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var StandardDescriptionCell=function(_Component){function StandardDescriptionCell(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"getLessonBoxes",(function(){return _this.props.lessonsForStandardStatus?_this.props.lessonsForStandardStatus.map((function(lesson,index){var icon=lesson.unplugged?_standardsConstants.LessonIcons.UNPLUGGED:_standardsConstants.LessonIcons.PLUGGED,percentComplete=100*(lesson.numStudentsCompleted/lesson.numStudents).toFixed(2);return _react.default.createElement("span",{key:lesson.name,style:styles.lessonBox},!_this.props.isViewingReport&&_react.default.createElement(_reactTooltip.default,{id:lesson.name,key:lesson.name,role:"tooltip",wrapper:"span",effect:"solid",place:"top"},_react.default.createElement("div",{style:styles.tooltip},_react.default.createElement("div",{style:styles.tooltipLessonName},lesson.name," ",_react.default.createElement(_FontAwesome.default,{icon})),_react.default.createElement("div",null,_locale.default.completedStudentPercent({percentComplete})))),_react.default.createElement(_ProgressBoxForLessonNumber.default,{key:lesson.lessonNumber,completed:lesson.completed,inProgress:lesson.inProgress,lessonNumber:lesson.lessonNumber,tooltipId:lesson.name,linkToLessonPlan:lesson.url}))})):void 0})),_defineProperty(_this,"getNumberLessons",(function(){return _this.props.lessonsForStandardStatus?_this.props.lessonsForStandardStatus.length:0})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(StandardDescriptionCell,_Component),StandardDescriptionCell.prototype.render=function render(){return _react.default.createElement("div",{style:styles.main},_react.default.createElement("div",{style:styles.description},this.props.description),_react.default.createElement("div",{style:styles.lessonsArea},_react.default.createElement("span",{style:styles.lessonsAreaTitle},_locale.default.availableLessons({numLessons:this.getNumberLessons()})),_react.default.createElement("div",{style:styles.lessonBoxes},this.getLessonBoxes())))},StandardDescriptionCell}(_react.Component);_defineProperty(StandardDescriptionCell,"propTypes",{description:_propTypes.default.string,lessonsForStandardStatus:_propTypes.default.array,isViewingReport:_propTypes.default.bool});var styles={main:{display:"flex",flexDirection:"column",height:"100%"},description:{marginBottom:10},lessonsArea:{display:"flex",flexDirection:"row"},lessonBoxes:{display:"flex",flexDirection:"row",flexWrap:"wrap"},lessonBox:{marginBottom:10},lessonsAreaTitle:{marginRight:10,width:"30%"},tooltip:{textAlign:"center"},tooltipLessonName:function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({},_fontConstants.default["main-font-bold"])};exports.default=StandardDescriptionCell;module.exports=exports.default},"./src/templates/sectionProgress/standards/StandardsProgressTable.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedStandardsProgressTable=exports.COLUMNS=void 0;var _lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireWildcard(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),Table=_interopRequireWildcard(__webpack_require__("./node_modules/reactabular-table/dist/index.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_sectionStandardsProgressRedux=__webpack_require__("./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js"),_tableConstants=__webpack_require__("./src/templates/tables/tableConstants.js"),_locale=_interopRequireDefault(__webpack_require__("./src/util/locale-do-not-import.js")),_StandardDescriptionCell=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/StandardDescriptionCell.jsx"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.COLUMNS={STANDARD_CATEGORY:0,STANDARD_NUMBER:1,STANDARD_DESCRIPTION:2,LESSONS_COMPLETED:3};var StandardsProgressTable=function(_Component){function StandardsProgressTable(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_this=_Component.call.apply(_Component,[this].concat(args))||this,"standardCategoryCellFormatter",(function(standard,_ref){_ref.rowData,_ref.rowIndex;return _react.default.createElement("div",null,standard)})),_defineProperty(_this,"standardNumberCellFormatter",(function(standard,_ref2){_ref2.rowData,_ref2.rowIndex;return _react.default.createElement("div",null,standard)})),_defineProperty(_this,"lessonsCompletedColumnFormatter",(function(lesson,_ref3){var rowData=_ref3.rowData;_ref3.columnIndex;return _react.default.createElement("div",{id:rowData.id},rowData.numCompleted)})),_defineProperty(_this,"standardDescriptionColumnFormatter",(function(standard,_ref4){var rowData=_ref4.rowData;_ref4.rowIndex;return _react.default.createElement(_StandardDescriptionCell.default,{id:rowData.id,description:rowData.description,lessonsForStandardStatus:rowData.lessonsForStandardStatus,isViewingReport:_this.props.isViewingReport})})),_defineProperty(_this,"getColumns",(function(){return[{property:"category_description",header:{label:_locale.default.standardConcept(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.mainColumnHeader)}},cell:{formatters:[_this.standardCategoryCellFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.mainColumnCell)}}},{property:"shortcode",header:{label:_locale.default.standardIdentifier(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.mainColumnHeader)}},cell:{formatters:[_this.standardNumberCellFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.mainColumnCell)}}},{property:"description",header:{label:_locale.default.description(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.descriptionColumnHeader)}},cell:{formatters:[_this.standardDescriptionColumnFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.descriptionCell)}}},{property:"numCompleted",header:{label:_locale.default.lessonsCompleted(),props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.headerCell),styles.mainColumnHeader)}},cell:{formatters:[_this.lessonsCompletedColumnFormatter],props:{style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.cell),styles.mainColumnCell)}}}]})),_defineProperty(_this,"getNumLessonsCompletedForStandard",(function(standard,index){var count=0;return _this.props.lessonsByStandard[standard.id]&&_this.props.lessonsByStandard[standard.id].forEach((function(lesson){lesson.completed&&count++})),count})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(StandardsProgressTable,_Component),StandardsProgressTable.prototype.render=function render(){var _this2=this,loading=_lodash.default.isEmpty(this.props.lessonsByStandard),columns=this.getColumns(),rowData=(this.props.standards||[]).map((function(standard,index){return _objectSpread(_objectSpread({},standard),{},{numCompleted:_this2.getNumLessonsCompletedForStandard(standard,index),lessonsForStandardStatus:_this2.props.lessonsByStandard[standard.id]?_this2.props.lessonsByStandard[standard.id]:[]})}));return _react.default.createElement("div",null,loading&&_react.default.createElement(_FontAwesome.default,{id:"uitest-spinner",icon:"spinner",className:"fa-pulse fa-3x"}),!loading&&_react.default.createElement(Table.Provider,{columns,style:_objectSpread(_objectSpread({},_tableConstants.tableLayoutStyles.table),this.props.style),id:"uitest-progress-standards-table"},_react.default.createElement(Table.Header,null),_react.default.createElement(Table.Body,{rows:rowData,rowKey:"id"})))},StandardsProgressTable}(_react.Component);_defineProperty(StandardsProgressTable,"propTypes",{style:_propTypes.default.object,isViewingReport:_propTypes.default.bool,standards:_propTypes.default.array,lessonsByStandard:_propTypes.default.object});var styles={mainColumnHeader:{width:80,textAlign:"center"},descriptionColumnHeader:{textAlign:"center"},mainColumnCell:{width:80,textAlign:"center"},descriptionCell:{maxWidth:470,padding:"10px 10px 0px 10px"}};exports.UnconnectedStandardsProgressTable=StandardsProgressTable,exports.default=(0,_reactRedux.connect)((function(state){return{lessonsByStandard:(0,_sectionStandardsProgressRedux.lessonsByStandard)(state),standards:state.sectionStandardsProgress.standardsData}}))(StandardsProgressTable)},"./src/templates/sectionProgress/standards/standardsTestHelpers.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.unpluggedLessonList=exports.stateForTeacherMarkedIncompletedLesson=exports.stateForTeacherMarkedCompletedLesson=exports.stateForTeacherMarkedAndProgress=exports.stateForPartiallyCompletedLesson=exports.stateForCompletedLesson=exports.standardsData=exports.scriptId=exports.pluggedLesson=exports.lessonId=exports.lessonCompletedByStandard=exports.fakeState=void 0;var _progressHelpers=__webpack_require__("./src/templates/progress/progressHelpers.js"),_standardsConstants=__webpack_require__("./src/templates/sectionProgress/standards/standardsConstants.js"),teacherSections=(exports.unpluggedLessonList=[{id:1,name:"Lesson 1",number:1,url:"https://curriculum.code.org/csf-19/coursea/1/"},{id:2,name:"Lesson 4",number:3,url:"https://curriculum.code.org/csf-19/coursea/3/"}],exports.lessonCompletedByStandard={1:[{name:"Mazes",lessonNumber:1,completed:!0,numStudentsCompleted:25,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/1/"},{name:"More Mazes",lessonNumber:14,completed:!0,numStudentsCompleted:28,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/14/"},{name:"Even More Mazes",lessonNumber:15,completed:!1,numStudentsCompleted:10,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/15/"},{name:"Hard Mazes",lessonNumber:16,completed:!1,numStudentsCompleted:10,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/16/"},{name:"Really Hard Mazes",lessonNumber:17,completed:!1,numStudentsCompleted:10,numStudents:30,url:"https://curriculum.code.org/csf-19/coursea/17/"}]},{selectedSectionId:1,sections:{1:{id:1,name:"Picture Section",createdAt:"2019-10-25T14:24:28.000Z",loginType:"picture",grades:["9"],providerManaged:!1,lessonExtras:!0,pairingAllowed:!0,sharingDisabled:!1,studentCount:4,code:"HQGBNJ",courseId:null,scriptId:92,hidden:!1}}}),standardsData=exports.standardsData=[{id:16,shortcode:"1A-IC-17",description:"Work respectfully and responsibly with others online.",category_description:"Impacts of Computing",lesson_ids:[662,663]},{id:17,shortcode:"1A-IC-18",description:'"Keep login information private',category_description:"Impacts of Computing",lesson_ids:[662,663]},{id:4,shortcode:"1A-AP-11",description:"Decompose (break down) the steps needed to solve a problem into a precise sequence of instructions.",category_description:"Algorithms & Programming",lesson_ids:[663,664,665,666,667,669,670,671,672,673]}],lessonId=exports.lessonId=662,scriptId=exports.scriptId=92,unitDataByUnit={92:{csf:!0,hasStandards:!0,id:scriptId,path:"//localhost-studio.code.org:3000/s/coursea-2019",title:"Course A (2019)",lessons:[{script_id:92,script_name:"coursea-2019",script_stages:3,id:lessonId,position:1,relative_position:1,name:"Going Places Safely",title:"Lesson 1: Going Places Safely",lesson_group_display_name:"Digital Citizenship",lockable:!1,levels:[],description_student:"Learn the rules to safely visit places online.",description_teacher:"In collaboration with Common Sense Media, this lesson helps students learn that many websites ask for information that is private and discusses how to responsibly handle such requests. Students also find out that they can go to exciting places online, but they need to follow certain rules to remain safe.",unplugged:!0,lesson_plan_html_url:"https://curriculum.code.org/csf-19/coursea/1",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/coursea-2019/1/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/coursea-2019/lessons/1/extras"},{script_id:scriptId,script_name:"coursea-2019",script_stages:3,id:663,position:2,relative_position:2,name:"Learn to Drag and Drop",title:"Lesson 2: Learn to Drag and Drop",lesson_group_display_name:"Sequencing",lockable:!1,levels:[{id:"10001"},{id:"10002"},{id:"10003"}],description_student:"Click and drag to finish the puzzles.",description_teacher:"This lesson will give students an idea of what to expect when they head to the computer lab. It begins with a brief discussion introducing them to computer lab manners, then they will progress into using a computer to complete online puzzles.",unplugged:!1,lesson_plan_html_url:"https://curriculum.code.org/csf-19/coursea/2",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/coursea-2019/2/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/coursea-2019/lessons/2/extras"},{script_id:scriptId,script_name:"coursea-2019",script_stages:3,id:664,position:3,relative_position:3,name:"Happy Maps",title:"Lesson 3: Happy Maps",lesson_group_display_name:"Sequencing",lockable:!1,levels:[],description_student:"Write instructions to get the Flurb to the fruit.",description_teacher:'This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Students will practice writing precise instructions as they work to translate instructions into the symbols provided. If problems arise in the code, students should also work together to recognize bugs and build solutions.',unplugged:!0,lesson_plan_html_url:"https://curriculum.code.org/csf-19/coursea/3",lesson_plan_pdf_url:"//localhost.code.org:3000/curriculum/coursea-2019/3/Teacher.pdf",lesson_extras_level_url:"http://localhost-studio.code.org:3000/s/coursea-2019/lessons/3/extras"}]}},progress20=(exports.pluggedLesson=unitDataByUnit[scriptId].lessons[1],(0,_progressHelpers.levelProgressFromResult)(20)),sectionCompletedLesson={92:{100001:{10001:progress20,10002:progress20,10003:progress20},100002:{10001:progress20,10002:progress20,10003:progress20},100003:{10001:progress20,10002:progress20},100004:{10001:progress20,10002:progress20}}},sectionPartialCompletedLesson={92:{100001:{10001:progress20,10002:progress20,10003:progress20},100002:{10001:progress20,10002:progress20,10003:progress20}}},studentLevelScoresByLessonComplete={92:{662:{100001:{10001:_standardsConstants.TeacherScores.COMPLETE}}}},studentLevelScoresByLessonIncomplete={92:{662:{100001:{10001:_standardsConstants.TeacherScores.INCOMPLETE}}}},selectedLessons=[{id:662,completed:!0,name:"Going Places Safely",number:1,url:"https://curriculum.code.org/csf-19/coursea/1"}];exports.fakeState={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:{92:{}}},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData,studentLevelScoresByLesson:{92:{662:{}}}},teacherSections},exports.stateForPartiallyCompletedLesson={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionPartialCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData},teacherSections},exports.stateForCompletedLesson={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData},teacherSections},exports.stateForTeacherMarkedCompletedLesson={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData,studentLevelScoresByLesson:studentLevelScoresByLessonComplete,selectedLessons},teacherSections},exports.stateForTeacherMarkedIncompletedLesson={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData,studentLevelScoresByLesson:studentLevelScoresByLessonIncomplete,selectedLessons:[]},teacherSections},exports.stateForTeacherMarkedAndProgress={sectionProgress:{unitDataByUnit,studentLevelProgressByUnit:sectionCompletedLesson},unitSelection:{scriptId:92},sectionStandardsProgress:{standardsData,studentLevelScoresByLesson:studentLevelScoresByLessonComplete,selectedLessons},teacherSections}},"./src/templates/sectionProgress/standards/StandardsProgressTable.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js"),_redux=__webpack_require__("./node_modules/redux/es/redux.js"),_unitSelectionRedux=_interopRequireDefault(__webpack_require__("./src/redux/unitSelectionRedux.js")),_sectionProgressRedux=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/sectionProgressRedux.js")),_decorators=__webpack_require__("./.storybook/decorators.js"),_sectionStandardsProgressRedux=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js")),_StandardsProgressTable=__webpack_require__("./src/templates/sectionProgress/standards/StandardsProgressTable.jsx"),_standardsTestHelpers=__webpack_require__("./src/templates/sectionProgress/standards/standardsTestHelpers.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.default={component:_StandardsProgressTable.UnconnectedStandardsProgressTable},exports.Default=function Template(args){return _react.default.createElement(_reactRedux.Provider,{store:(0,_decorators.reduxStore)((0,_redux.combineReducers)({sectionProgress:_sectionProgressRedux.default,sectionStandardsProgress:_sectionStandardsProgressRedux.default,unitSelection:_unitSelectionRedux.default}))},_react.default.createElement(_StandardsProgressTable.UnconnectedStandardsProgressTable,_extends({standards:_standardsTestHelpers.standardsData,lessonsByStandard:_standardsTestHelpers.lessonCompletedByStandard},args)))}.bind({})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,