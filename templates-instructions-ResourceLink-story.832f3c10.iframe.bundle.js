(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[7275],{"./src/code-studio/LegacyDialog.js":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _jquery=_interopRequireDefault(__webpack_require__("./node_modules/jquery/dist/jquery.js")),_debounce=_interopRequireDefault(__webpack_require__("./node_modules/lodash/debounce.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function createOpenInNewTabButton(parentElement,link){link&&parentElement.append((0,_jquery.default)('<div><a target="_blank" href="'.concat(link,'" rel="noopener noreferrer"></a></div>')).addClass("open-link"))}var LegacyDialog=module.exports=function(options){this.isVisible=!0;var body=options.body,header=options.header,close=void 0===options.close||options.close,closeLink=(0,_jquery.default)('<div id="x-close"/>').addClass("x-close").attr("data-dismiss","modal");this.div=(0,_jquery.default)('<div tabindex="-1"/>').addClass("modal"),options.width&&this.div.css({width:"".concat(options.width,"px"),marginLeft:"-".concat(options.width/2,"px")}),this.div.addClass("dash_modal"),options.id&&this.div.attr("id",options.id);var resizeCallback,modalBody=(0,_jquery.default)("<div/>").addClass("modal-body");if(modalBody.addClass("dash_modal_body"),header){var modalHeader=(0,_jquery.default)("<div/>").addClass("modal-header").append(header);close&&(modalHeader.append(closeLink),createOpenInNewTabButton(modalHeader,options.link)),this.div.append(modalHeader)}else close&&(modalBody.append(closeLink),createOpenInNewTabButton(modalBody,options.link));(modalBody.append(body),this.div.append(modalBody).appendTo((0,_jquery.default)(document.body)),options.autoResizeScrollableElement)&&(this.div.addClass("auto-resize-scrollable"),this.div.find(options.autoResizeScrollableElement).css("overflow-y","auto"),resizeCallback=(0,_debounce.default)(function(){this.isVisible&&function sizeDialogToViewport(scrollableElementSelector){var viewportHeight=(0,_jquery.default)(window).height(),modalDialog=(0,_jquery.default)(".auto-resize-scrollable").filter(":visible"),scrollableElement=modalDialog.find(scrollableElementSelector);scrollableElement.is("iframe")?scrollableElement.css("height",""):scrollableElement.css("max-height","");var overflow=modalDialog.offset().top+modalDialog.height()-(viewportHeight-parseInt(modalDialog.css("padding-bottom"),10)-parseInt(modalDialog.css("margin-bottom"),10)),scrollableElementHeight=scrollableElement.height()-overflow;scrollableElement.css("max-height",scrollableElementHeight),scrollableElement.is("iframe")?scrollableElement.css("height",scrollableElementHeight):scrollableElement.css("max-height",scrollableElementHeight)}(options.autoResizeScrollableElement)}.bind(this),250),this.div.find("img").load(resizeCallback),(0,_jquery.default)(window).on("resize",resizeCallback),resizeCallback());var thisDialog=this;(0,_jquery.default)(this.div).on("hidden.bs.modal",(function(){resizeCallback&&(thisDialog.isVisible=!1,(0,_jquery.default)(window).off("resize",resizeCallback)),options.onKeydown&&(0,_jquery.default)(this.div).off("keydown",options.onKeydown),options.onHidden&&options.onHidden(),options.redirect&&(window.location.href=options.redirect),(0,_jquery.default)(this).remove()})),(0,_jquery.default)(this.div).on("hide.bs.modal",function(e){this.hideOptions&&(this.processHideOptions(this.hideOptions),e.preventDefault(),this.hideOptions=null)}.bind(this)),options.onKeydown&&(0,_jquery.default)(this.div).on("keydown",options.onKeydown)};LegacyDialog.prototype.show=function(options){options=options||{},(0,_jquery.default)(this.div).modal({show:!0,backdrop:options.backdrop||!0}),this.isVisible=!0,options.hideOptions&&(this.hideOptions=options.hideOptions),this.div.offset(options)},LegacyDialog.prototype.hide=function(){(0,_jquery.default)(this.div).modal("hide"),this.isVisible=!1},LegacyDialog.prototype.focus=function(){this.isVisible&&(0,_jquery.default)(this.div).focus()},LegacyDialog.prototype.processHideOptions=function(options){var startCss={opacity:"1"};startCss.left=this.div.css("left"),startCss.top=this.div.css("top"),startCss.width=this.div.css("width"),startCss.height=this.div.css("height");var marginLeft=parseInt(this.div.css("marginLeft")),endCss={opacity:"0",overflow:"visible"};endCss.left=(0,_jquery.default)(options.endTarget).offset().left-marginLeft,endCss.top=(0,_jquery.default)(options.endTarget).offset().top-(0,_jquery.default)(window).scrollTop(),endCss.width=(0,_jquery.default)(options.endTarget).css("width"),endCss.height=(0,_jquery.default)(options.endTarget).css("height");(0,_jquery.default)(".modal-backdrop").animate({opacity:0},500),this.div.find(".farSide").animate({opacity:0},150),this.div.find("#x-close").animate({opacity:0},150),this.div.find(".dialog-title").animate({opacity:0},150),this.div.find(".aniGif").animate({opacity:0},150),this.div.find(".modal-content p").animate({"font-size":"13px"},500),this.div.find(".markdown-instructions-container").animate({opacity:0},50),(0,_jquery.default)(this.div).css(startCss).animate(endCss,500,"swing",(function(){(0,_jquery.default)(this).modal("hide")}))};var _default=LegacyDialog;exports.default=_default,module.exports=exports.default},"./src/templates/FontAwesome.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=FontAwesome;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_lodash=_interopRequireDefault(__webpack_require__("./node_modules/lodash/lodash.js")),_excluded=["icon","className","title"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function FontAwesome(_ref){var icon=_ref.icon,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded),newProps=_lodash.default.assign({},props,{className:"fa fa-".concat(icon," ").concat(className||"")});return _react.default.createElement("i",_extends({},newProps,{title}))}FontAwesome.propTypes={icon:_propTypes.default.string.isRequired,className:_propTypes.default.string,title:_propTypes.default.string},module.exports=exports.default},"./src/templates/instructions/ResourceLink.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_radium=_interopRequireDefault(__webpack_require__("./node_modules/radium/es/index.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js")),_FontAwesome=_interopRequireDefault(__webpack_require__("./src/templates/FontAwesome.jsx")),_LegacyDialog=_interopRequireDefault(__webpack_require__("./src/code-studio/LegacyDialog.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ResourceLink=function(_React$Component){function ResourceLink(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(_assertThisInitialized(_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this),"state",{dialogSelected:!1}),_defineProperty(_assertThisInitialized(_this),"selectResource",(function(e){e.shiftKey||e.metaKey||e.altKey||(e.preventDefault(),_this.props.openReferenceInNewTab?window.open(_this.props.reference,"_blank","noopener,noreferrer"):(new _LegacyDialog.default({body:$("<iframe>").addClass("instructions-container").width("100%").attr("src",_this.props.reference),autoResizeScrollableElement:".instructions-container",id:"block-documentation-lightbox"}).show(),$(".instructions-container").load((function(){$(".instructions-container").contents().find("body").css({overflow:"auto"})}))))})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ResourceLink,_React$Component),ResourceLink.prototype.render=function render(){var _this$props=this.props,icon=_this$props.icon,text=_this$props.text,highlight=_this$props.highlight,iconStyle=_objectSpread(_objectSpread({},styles.commonIcon),highlight?styles.mapIcon:styles.resourceIcon),thumbnailStyle=_objectSpread(_objectSpread({},styles.commonThumbnail),highlight&&styles.mapThumbnail);return _react.default.createElement("div",null,_react.default.createElement("div",{style:styles.resourceStyle,onClick:this.selectResource},_react.default.createElement("span",{style:thumbnailStyle},_react.default.createElement(_FontAwesome.default,{icon,style:iconStyle,title:text})),_react.default.createElement("a",{href:this.props.reference,style:styles.textLink},text)))},ResourceLink}(_react.default.Component);_defineProperty(ResourceLink,"propTypes",{highlight:_propTypes.default.bool,icon:_propTypes.default.string.isRequired,text:_propTypes.default.string.isRequired,reference:_propTypes.default.string.isRequired,openReferenceInNewTab:_propTypes.default.bool});var styles={textLink:{display:"inline-block",margin:8,fontWeight:"bold",fontSize:16,lineHeight:"25px",cursor:"pointer",maxWidth:"90%"},mapThumbnail:{backgroundColor:_color.default.teal},commonThumbnail:{borderRadius:5,paddingLeft:26,paddingRight:26,paddingTop:16,paddingBottom:9},commonIcon:{fontSize:22},mapIcon:{color:_color.default.white},resourceIcon:{color:_color.default.teal},resourceStyle:{margin:8}},_default=(0,_radium.default)(ResourceLink);exports.default=_default,module.exports=exports.default},"./src/util/color.js":module=>{module.exports={black:"#000",background_black:"#121416",dark_gray:"#2D3139",darkest_gray:"#292F36",dark_slate_gray:"#282c34",darkest_slate_gray:"#25292d",dark_charcoal:"#4d575f",charcoal:"#5b6770",light_gray:"#949ca2",lighter_gray:"#c6cacd",lightest_gray:"#e7e8ea",background_gray:"#f2f2f2",dimgray:"#696969",white:"#fff",default_blue:"#3670b3",dark_teal:"#0094a3",teal:"#0093a4",applab_button_teal:"#1abc9c",light_teal:"#59cad3",lightish_teal:"#80d6de",lighter_teal:"#a6e3e8",lightest_teal:"#d9f3f5",ai_rubric_cyan:"#3cfff8",purple:"#8c52ba",light_purple:"#a69bc1",lighter_purple:"#cfc9de",lightest_purple:"#ebe8f1",cyan:"#0094ca",light_cyan:"#59b9dc",lighter_cyan:"#a6daed",lightest_cyan:"#d9eff7",almost_white_cyan:"#f5fcff",orange:"#ffa400",light_orange:"#ffc459",lighter_orange:"#ffe0a6",lightest_orange:"#fff2d9",dark_orange:"#ff8600",green:"#b9bf15",light_green:"#d1d567",lighter_green:"#e7e9ad",lightest_green:"#f5f5dc",highlight_green:"#8afc9b",yellow:"#ffb81d",light_yellow:"#ffdb74",lighter_yellow:"#ffebb5",lightest_yellow:"#fff7df",goldenrod:"#daa520",header_text:"#fff",bkgnd_color:"#0093a4",inset_color:"#c6cacd",dark_color:"#8c52ba",hdr_color:"#8c52ba",red:"#c00",lightest_red:"#fcc",dark_red:"#d62911",realgreen:"#008000",realyellow:"#ff0",mustardyellow:"#efcd1c",twitter_blue:"#00aced",facebook_blue:"#3b5998",linkedin_blue:"#0077B5",dark_blue:"#00647f",blockly_flyout_gray:"#ddd",default_text:"#333",border_gray:"#bbb",border_light_gray:"#d8d8d8",table_header:"#ececec",table_light_row:"#fcfcfc",table_dark_row:"#f4f4f4",level_submitted:"#8c52ba",level_perfect:"rgb(14, 190, 14)",level_passed:"rgb(159, 212, 159)",level_attempted:"#ff0",level_not_tried:"#fefefe",level_current:"#ffa400",level_review_rejected:"#c00",level_review_accepted:"rgb(11, 142, 11)",assessment:"#0094ca",workspace_running_background:"#e5e5e5",dark_purple:"#682A77",bright_green:"#0ebe0e",neon_pink:"#e9118f",link_color:"#0596ce",shadow:"rgba(0, 0, 0, 0.3)",bootstrap_button_blue:"#337ab7",bootstrap_button_red:"#d9534f",bootstrap_error_background:"#f2dede",bootstrap_error_text:"#b94a48",bootstrap_v3_error_text:"#a94442",bootstrap_error_border:"#ebccd1",bootstrap_warning_background:"#fcf8e3",bootstrap_warning_text:"#c09853",bootstrap_warning_border:"#faebcc",bootstrap_border_color:"#cccccc",bootstrap_success_background:"#dff0d8",bootstrap_success_text:"#468847",bootstrap_success_border:"#d6e9c6",droplet_light_green:"#d3e965",droplet_blue:"#64b5f6",droplet_bright_blue:"#19c3e1",droplet_yellow:"#fff176",droplet_orange:"#ffb74d",droplet_red:"#f78183",droplet_cyan:"#4dd0e1",droplet_pink:"#f57ac6",droplet_purple:"#bb77c7",droplet_green:"#68d995",droplet_white:"#fff",oceans_deep_blue:"rgb(2, 0, 28)",dark_black:"#121212",brand_primary_light:"#ABDFE5",brand_primary_default:"#009EB0",brand_primary_dark:"#008291",brand_secondary_light:"#E0D1EC",brand_secondary_default:"#8C52BA",brand_secondary_dark:"#6F488E",brand_accent_default:"#ED6060",product_affirmative_default:"#3EA33E",product_negative_light:"#FDEBE9",product_negative_default:"#E5311A",product_negative_dark:"#AA2513",product_caution_default:"#F9CB28",product_information_default:"#007ACC",neutral_white:"#FFFFFF",neutral_light:"#F7F8FA",neutral_dark10:"#EAEBEB",neutral_dark20:"#D4D5D7",neutral_dark30:"#BFC1C3",neutral_dark40:"#A9ACAF",neutral_dark50:"#94979B",neutral_dark60:"#7F8286",neutral_dark70:"#6A6E73",neutral_dark80:"#54595E",neutral_dark90:"#3F444B",neutral_dark:"#292F36",google_brand_color:"#0F9D58",microsoft_brand_color:"#FFB900",facebook_brand_color:"#3B5998",light_primary_100:"#ABDFE5",light_primary_500:"#0093A4",light_primary_700:"#008291",light_secondary_100:"#E2D4EE",light_secondary_500:"#8C52BA",light_secondary_700:"#6F488E",light_gray_50:"#F7F8FA",light_gray_100:"#EAEBEB",light_gray_200:"#D4D5D7",light_gray_300:"#BFC1C3",light_gray_500:"#94979B",light_gray_700:"#6A6E73",light_gray_800:"#54595E",light_gray_900:"#3F444B",light_affirmative_100:"#E2F1E2",light_affirmative_500:"#3EA33E",light_negative_500:"#E5311A",light_caution_500:"#F9CB28",light_info_100:"#DCEFFB",light_info_500:"#1892E3",light_white:"#FFFFFF",light_black:"#292F36"}},"./node_modules/lodash/_baseTrim.js":(module,__unused_webpack_exports,__webpack_require__)=>{var trimmedEndIndex=__webpack_require__("./node_modules/lodash/_trimmedEndIndex.js"),reTrimStart=/^\s+/;module.exports=function baseTrim(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,""):string}},"./node_modules/lodash/_trimmedEndIndex.js":module=>{var reWhitespace=/\s/;module.exports=function trimmedEndIndex(string){for(var index=string.length;index--&&reWhitespace.test(string.charAt(index)););return index}},"./node_modules/lodash/debounce.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isObject=__webpack_require__("./node_modules/lodash/isObject.js"),now=__webpack_require__("./node_modules/lodash/now.js"),toNumber=__webpack_require__("./node_modules/lodash/toNumber.js"),nativeMax=Math.max,nativeMin=Math.min;module.exports=function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=!1,maxing=!1,trailing=!0;if("function"!=typeof func)throw new TypeError("Expected a function");function invokeFunc(time){var args=lastArgs,thisArg=lastThis;return lastArgs=lastThis=void 0,lastInvokeTime=time,result=func.apply(thisArg,args)}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime;return void 0===lastCallTime||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&time-lastInvokeTime>=maxWait}function timerExpired(){var time=now();if(shouldInvoke(time))return trailingEdge(time);timerId=setTimeout(timerExpired,function remainingWait(time){var timeWaiting=wait-(time-lastCallTime);return maxing?nativeMin(timeWaiting,maxWait-(time-lastInvokeTime)):timeWaiting}(time))}function trailingEdge(time){return timerId=void 0,trailing&&lastArgs?invokeFunc(time):(lastArgs=lastThis=void 0,result)}function debounced(){var time=now(),isInvoking=shouldInvoke(time);if(lastArgs=arguments,lastThis=this,lastCallTime=time,isInvoking){if(void 0===timerId)return function leadingEdge(time){return lastInvokeTime=time,timerId=setTimeout(timerExpired,wait),leading?invokeFunc(time):result}(lastCallTime);if(maxing)return clearTimeout(timerId),timerId=setTimeout(timerExpired,wait),invokeFunc(lastCallTime)}return void 0===timerId&&(timerId=setTimeout(timerExpired,wait)),result}return wait=toNumber(wait)||0,isObject(options)&&(leading=!!options.leading,maxWait=(maxing="maxWait"in options)?nativeMax(toNumber(options.maxWait)||0,wait):maxWait,trailing="trailing"in options?!!options.trailing:trailing),debounced.cancel=function cancel(){void 0!==timerId&&clearTimeout(timerId),lastInvokeTime=0,lastArgs=lastCallTime=lastThis=timerId=void 0},debounced.flush=function flush(){return void 0===timerId?result:trailingEdge(now())},debounced}},"./node_modules/lodash/now.js":(module,__unused_webpack_exports,__webpack_require__)=>{var root=__webpack_require__("./node_modules/lodash/_root.js");module.exports=function(){return root.Date.now()}},"./node_modules/lodash/toNumber.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseTrim=__webpack_require__("./node_modules/lodash/_baseTrim.js"),isObject=__webpack_require__("./node_modules/lodash/isObject.js"),isSymbol=__webpack_require__("./node_modules/lodash/isSymbol.js"),reIsBadHex=/^[-+]0x[0-9a-f]+$/i,reIsBinary=/^0b[01]+$/i,reIsOctal=/^0o[0-7]+$/i,freeParseInt=parseInt;module.exports=function toNumber(value){if("number"==typeof value)return value;if(isSymbol(value))return NaN;if(isObject(value)){var other="function"==typeof value.valueOf?value.valueOf():value;value=isObject(other)?other+"":other}if("string"!=typeof value)return 0===value?value:+value;value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NaN:+value}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/templates/instructions/ResourceLink.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.NonHighlightedReference=exports.HighlightedReference=void 0;var _ResourceLink=_interopRequireDefault(__webpack_require__("./src/templates/instructions/ResourceLink.jsx")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _default={component:_ResourceLink.default};exports.default=_default;var Template=function Template(args){return _react.default.createElement(_ResourceLink.default,args)},HighlightedReference=Template.bind({});exports.HighlightedReference=HighlightedReference,HighlightedReference.args={highlight:!0,icon:"map",text:"First Item",reference:"/docs/csd/maker_leds/index.html"};var NonHighlightedReference=Template.bind({});exports.NonHighlightedReference=NonHighlightedReference,NonHighlightedReference.args={highlight:!1,icon:"book",text:"Second Item",reference:"/docs/csd/maker_leds/index.html"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,