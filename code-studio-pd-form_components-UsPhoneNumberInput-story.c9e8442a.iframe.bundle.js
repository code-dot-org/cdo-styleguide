(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[6434],{"./src/code-studio/pd/form_components/FieldGroup.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_reactBootstrap=__webpack_require__("./node_modules/react-bootstrap/es/index.js"),_excluded=["id","validationState","errorMessage","label","required","onChange","children","labelWidth","controlWidth","inlineControl"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var REQUIRED=_react.default.createElement("span",{style:{color:"red"}},"Â *"),FieldGroup=exports.default=function(_React$Component){function FieldGroup(props){var _this;return(_this=_React$Component.call(this,props)||this).handleChange=_this.handleChange.bind(_this),_this}!function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(FieldGroup,_React$Component);var _proto=FieldGroup.prototype;return _proto.handleChange=function handleChange(event){var value=event.target.value;("number"!==this.props.type||value.match(/^$|^-?[0-9]*\.?[0-9]*$/))&&this.props.onChange&&this.props.onChange(_defineProperty({},this.props.id,value))},_proto.renderControl=function renderControl(controlWidth,children,props){var updatedProps=_objectSpread(_objectSpread({},props),{},{type:"number"===props.type?"text":props.type});return _react.default.createElement(_reactBootstrap.Col,controlWidth,_react.default.createElement(_reactBootstrap.FormControl,_extends({onChange:this.handleChange},updatedProps),children))},_proto.render=function render(){var _this$props=this.props,id=_this$props.id,validationState=_this$props.validationState,errorMessage=_this$props.errorMessage,label=_this$props.label,required=_this$props.required,children=(_this$props.onChange,_this$props.children),labelWidth=_this$props.labelWidth,controlWidth=_this$props.controlWidth,inlineControl=_this$props.inlineControl,props=_objectWithoutProperties(_this$props,_excluded);return _react.default.createElement(_reactBootstrap.FormGroup,{controlId:id,validationState},_react.default.createElement(_reactBootstrap.Row,null,_react.default.createElement(_reactBootstrap.Col,labelWidth,_react.default.createElement(_reactBootstrap.ControlLabel,null,label,required&&REQUIRED)),inlineControl&&this.renderControl(controlWidth,children,props)),!inlineControl&&_react.default.createElement(_reactBootstrap.Row,null,this.renderControl(controlWidth,children,props)),_react.default.createElement(_reactBootstrap.HelpBlock,null,errorMessage))},FieldGroup}(_react.default.Component);FieldGroup.defaultProps={labelWidth:{md:12},controlWidth:{md:12}},FieldGroup.propTypes={id:_propTypes.default.string.isRequired,type:_propTypes.default.string,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]).isRequired,required:_propTypes.default.bool,validationState:_propTypes.default.string,errorMessage:_propTypes.default.string,children:_propTypes.default.arrayOf(_propTypes.default.node),onChange:_propTypes.default.func,labelWidth:_propTypes.default.object,controlWidth:_propTypes.default.object,inlineControl:_propTypes.default.bool},module.exports=exports.default},"./src/code-studio/pd/form_components/UsPhoneNumberInput.jsx":(module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_FieldGroup=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/FieldGroup.jsx")),_excluded=["name","label","validationState","errorMessage","required","value","onChange"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var PHONE_NUMBER_REGEX=/(\()?(\(?\d{1,3})?(\) ?)?(\d{1,3})?(-| )?(\d{1,4})?/,UsPhoneNumberInput=exports.default=function(_React$Component){function UsPhoneNumberInput(props){var _this;return _defineProperty(_this=_React$Component.call(this,props)||this,"handleChange",(function(change){var phoneNumber=UsPhoneNumberInput.coercePhoneNumber(change[_this.props.name]);_this.setState({value:phoneNumber});var phoneNumberDigits=UsPhoneNumberInput.toJustNumbers(phoneNumber);_this.props.onChange&&phoneNumberDigits!==UsPhoneNumberInput.toJustNumbers(_this.props.value)&&_this.props.onChange(_defineProperty({},_this.props.name,phoneNumberDigits))})),_this.state={value:UsPhoneNumberInput.coercePhoneNumber(_this.props.value)},_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(UsPhoneNumberInput,_React$Component),UsPhoneNumberInput.isValid=function isValid(value){return/^\d{10}$/.test(value)},UsPhoneNumberInput.coercePhoneNumber=function coercePhoneNumber(value){var match=PHONE_NUMBER_REGEX.exec(value),phoneNumber="";return match&&(match[1]&&!match[2]?phoneNumber=match[1]:match[2]&&(phoneNumber="(".concat(match[2]),3===match[2].length&&(match[3]&&!match[4]?phoneNumber+=match[3]:match[4]&&(phoneNumber+=") ".concat(match[4]),3===match[4].length&&(match[5]&&!match[6]?phoneNumber+="-":match[6]&&(phoneNumber+="-".concat(match[6]))))))),phoneNumber},UsPhoneNumberInput.toJustNumbers=function toJustNumbers(value){return"string"==typeof value?value.replace(/[^\d]/g,""):""},UsPhoneNumberInput.prototype.render=function render(){var _this$props=this.props,name=_this$props.name,label=_this$props.label,validationState=_this$props.validationState,errorMessage=_this$props.errorMessage,required=_this$props.required,props=(_this$props.value,_this$props.onChange,_objectWithoutProperties(_this$props,_excluded));return _react.default.createElement("div",null,_react.default.createElement(_FieldGroup.default,_extends({key:name,id:name,type:"text",label,validationState,errorMessage,onChange:this.handleChange,value:this.state.value||"",required,placeholder:"(xxx) xxx-xxxx"},props)))},UsPhoneNumberInput}(_react.default.Component);_defineProperty(UsPhoneNumberInput,"propTypes",{name:_propTypes.default.string.isRequired,label:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]).isRequired,value:_propTypes.default.string,validationState:_propTypes.default.string,errorMessage:_propTypes.default.string,required:_propTypes.default.bool,onChange:_propTypes.default.func}),module.exports=exports.default},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim};return ReactPropTypes.checkPropTypes=emptyFunction,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/code-studio/pd/form_components/UsPhoneNumberInput.story.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.DefaultPhoneInput=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_UsPhoneNumberInput=_interopRequireDefault(__webpack_require__("./src/code-studio/pd/form_components/UsPhoneNumberInput.jsx"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={component:_UsPhoneNumberInput.default};(exports.DefaultPhoneInput=function Template(args){return _react.default.createElement(_UsPhoneNumberInput.default,args)}.bind({})).args={name:"Storybook",label:"Enter a phone number"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1zdHVkaW8tcGQtZm9ybV9jb21wb25lbnRzLVVzUGhvbmVOdW1iZXJJbnB1dC1zdG9yeS45MzhiOTNmMC5pZnJhbWUuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJnZ0JBQUEsSUFBQUEsV0FBQUMsdUJBQUFDLG9CQUFBLHVDQUNBQyxPQUFBRix1QkFBQUMsb0JBQUEsa0NBRUFFLGdCQUFBRixvQkFBQSw4Q0FPeUJHLFVBQUEsc0lBQUFKLHVCQUFBSyxLQUFBLE9BQUFBLEtBQUFBLElBQUFDLFdBQUFELElBQUEsU0FBQUEsSUFBQSxVQUFBRSx5QkFBQUMsT0FBQUMsVUFBQSxTQUFBRCxPQUFBLGFBQUFFLElBQUFDLEVBQUFDLE9BQUEsU0FBQUMsOEJBQUFMLE9BQUFDLFVBQUEsU0FBQUQsT0FBQSxhQUFBRSxJQUFBQyxFQUFBQyxPQUFBLEdBQUFFLFdBQUFDLE9BQUFDLEtBQUFSLFFBQUEsSUFBQUcsRUFBQSxFQUFBQSxFQUFBRyxXQUFBRyxPQUFBTixJQUFBRCxJQUFBSSxXQUFBSCxHQUFBRixTQUFBUyxRQUFBUixNQUFBLElBQUFFLE9BQUFGLEtBQUFGLE9BQUFFLE1BQUEsT0FBQUUsTUFBQSxDQUFBQyxDQUFBTCxPQUFBQyxVQUFBLEdBQUFNLE9BQUFJLHNCQUFBLEtBQUFDLGlCQUFBTCxPQUFBSSxzQkFBQVgsUUFBQSxJQUFBRyxFQUFBLEVBQUFBLEVBQUFTLGlCQUFBSCxPQUFBTixJQUFBRCxJQUFBVSxpQkFBQVQsR0FBQUYsU0FBQVMsUUFBQVIsTUFBQSxHQUFBSyxPQUFBTSxVQUFBQyxxQkFBQUMsS0FBQWYsT0FBQUUsT0FBQUUsT0FBQUYsS0FBQUYsT0FBQUUsS0FBQSxRQUFBRSxNQUFBLFVBQUFZLFdBQUEsT0FBQUEsU0FBQVQsT0FBQVUsT0FBQVYsT0FBQVUsT0FBQUMsT0FBQSxTQUFBZCxRQUFBLFFBQUFELEVBQUEsRUFBQUEsRUFBQWdCLFVBQUFWLE9BQUFOLElBQUEsS0FBQUgsT0FBQW1CLFVBQUFoQixHQUFBLFFBQUFELE9BQUFGLE9BQUFP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S0FDTnZCLEtBQU11QixLQUNOVyxPQUFRWCxLQUNSdEIsT0FBUXNCLEtBQ1I5QixPQUFROEIsS0FDUlksT0FBUVosS0FFUmEsSUFBS2IsS0FDTHpCLFFBQVNpQyxRQUNUbkMsUUFBUzJCLEtBQ1RjLFdBQVlOLFFBQ1poQyxLQUFNd0IsS0FDTmUsU0FBVVAsUUFDVlEsTUFBT1IsUUFDUHBDLFVBQVdvQyxRQUNYUyxNQUFPVCxRQUNQVSxNQUFPVixTQU1ULE9BSEFDLGVBQWVVLGVBQWlCcEIsY0FDaENVLGVBQWV4QyxVQUFZd0MsZUFFcEJBLGNBQ1QsQywrRkNoQ0U5QixPQUFPbkQsUUFBVSxvQkFBUSx3REFBUixFLGdGQ2ZuQm1ELE9BQU9uRCxRQUZvQiw4QyxtUENUM0IsSUFBQS9ELE9BQUFGLHVCQUFBQyxvQkFBQSxrQ0FDQTRKLG9CQUFBN0osdUJBQUFDLG9CQUFBLGdFQUFzRCxTQUFBRCx1QkFBQUssS0FBQSxPQUFBQSxLQUFBQSxJQUFBQyxXQUFBRCxJQUFBLFNBQUFBLElBQUEsQ0FBQTRELFFBQUFBLFFBRXZDLENBQ2I2RixVQUFXdEMsb0JBQUFBLFVBS2lCdkQsUUFBQUEsa0JBRmIsU0FBWDhGLFNBQVdDLE1BQUksT0FBSTlKLE9BQUEsUUFBQTJELGNBQUNnRyxvQkFBQSxRQUF1QkcsS0FBUSxFQUVmdEksS0FBSyxDQUFDLElBQzlCc0ksS0FBTyxDQUN2QnBDLEtBQU0sWUFDTmhDLE1BQU8sdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvY29kZS1zdHVkaW8vcGQvZm9ybV9jb21wb25lbnRzL0ZpZWxkR3JvdXAuanN4Iiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9wZC9mb3JtX2NvbXBvbmVudHMvVXNQaG9uZU51bWJlcklucHV0LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy9jb2RlLXN0dWRpby9wZC9mb3JtX2NvbXBvbmVudHMvVXNQaG9uZU51bWJlcklucHV0LnN0b3J5LmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXJlc3RyaWN0ZWQtaW1wb3J0cyAqL1xuaW1wb3J0IHtcbiAgQ29udHJvbExhYmVsLFxuICBGb3JtQ29udHJvbCxcbiAgRm9ybUdyb3VwLFxuICBIZWxwQmxvY2ssXG4gIFJvdyxcbiAgQ29sLFxufSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xuLyogZXNsaW50LWVuYWJsZSBuby1yZXN0cmljdGVkLWltcG9ydHMgKi9cblxuY29uc3QgUkVRVUlSRUQgPSA8c3BhbiBzdHlsZT17e2NvbG9yOiAncmVkJ319PiZuYnNwOyo8L3NwYW4+O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaWVsZEdyb3VwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgaGFuZGxlQ2hhbmdlKGV2ZW50KSB7XG4gICAgY29uc3QgdmFsdWUgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgaWYgKHRoaXMucHJvcHMudHlwZSA9PT0gJ251bWJlcicpIHtcbiAgICAgIC8vIFdlIG9ubHkgd2FudCBudW1iZXJzIG91dCBvZiB0aGlzIHRleHQgZmllbGQsIGFuZCBzbyB0aGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiByZXN0cmljdHMgaW5wdXQgdG9cbiAgICAgIC8vIGRpZ2l0cywgYSBzaW5nbGUgZGVjaW1hbCBwb2ludCwgYW5kIGFuIG9wdGlvbmFsIG1pbnVzIHNpZ24gYXQgdGhlXG4gICAgICAvLyBiZWdpbm5pbmcuXG4gICAgICBpZiAoIXZhbHVlLm1hdGNoKC9eJHxeLT9bMC05XSpcXC4/WzAtOV0qJC8pKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZSAmJlxuICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh7XG4gICAgICAgIFt0aGlzLnByb3BzLmlkXTogdmFsdWUsXG4gICAgICB9KTtcbiAgfVxuXG4gIHJlbmRlckNvbnRyb2woY29udHJvbFdpZHRoLCBjaGlsZHJlbiwgcHJvcHMpIHtcbiAgICAvLyBSYXRoZXIgdGhhbiBzZXQgYW4gaW5wdXQgZmllbGQncyB0eXBlIHRvIG51bWJlciwgd2UgbGVhdmUgaXQgYXMgdGV4dC5cbiAgICAvLyBUaGUgaGFuZGxlQ2hhbmdlIGZ1bmN0aW9uIHdpbGwgZmlsdGVyIGl0cyBjb250ZW50cyB0byBiZSBudW1iZXJzIG9ubHkuXG4gICAgY29uc3QgdXBkYXRlZFByb3BzID0ge1xuICAgICAgLi4ucHJvcHMsXG4gICAgICB0eXBlOiBwcm9wcy50eXBlID09PSAnbnVtYmVyJyA/ICd0ZXh0JyA6IHByb3BzLnR5cGUsXG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Q29sIHsuLi5jb250cm9sV2lkdGh9PlxuICAgICAgICA8Rm9ybUNvbnRyb2wgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfSB7Li4udXBkYXRlZFByb3BzfT5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvRm9ybUNvbnRyb2w+XG4gICAgICA8L0NvbD5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGlkLFxuICAgICAgdmFsaWRhdGlvblN0YXRlLFxuICAgICAgZXJyb3JNZXNzYWdlLFxuICAgICAgbGFiZWwsXG4gICAgICByZXF1aXJlZCxcbiAgICAgIC8vIHdlIHB1bGwgb25DaGFuZ2Ugb3V0IGhlcmUganVzdCBzbyBpdCBkb2Vzbid0IGdldCBpbmNsdWRlZCBpbiAuLi5wcm9wc1xuICAgICAgb25DaGFuZ2UsIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgbGFiZWxXaWR0aCxcbiAgICAgIGNvbnRyb2xXaWR0aCxcbiAgICAgIGlubGluZUNvbnRyb2wsXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxGb3JtR3JvdXAgY29udHJvbElkPXtpZH0gdmFsaWRhdGlvblN0YXRlPXt2YWxpZGF0aW9uU3RhdGV9PlxuICAgICAgICA8Um93PlxuICAgICAgICAgIDxDb2wgey4uLmxhYmVsV2lkdGh9PlxuICAgICAgICAgICAgPENvbnRyb2xMYWJlbD5cbiAgICAgICAgICAgICAge2xhYmVsfVxuICAgICAgICAgICAgICB7cmVxdWlyZWQgJiYgUkVRVUlSRUR9XG4gICAgICAgICAgICA8L0NvbnRyb2xMYWJlbD5cbiAgICAgICAgICA8L0NvbD5cbiAgICAgICAgICB7aW5saW5lQ29udHJvbCAmJiB0aGlzLnJlbmRlckNvbnRyb2woY29udHJvbFdpZHRoLCBjaGlsZHJlbiwgcHJvcHMpfVxuICAgICAgICA8L1Jvdz5cbiAgICAgICAgeyFpbmxpbmVDb250cm9sICYmIChcbiAgICAgICAgICA8Um93Pnt0aGlzLnJlbmRlckNvbnRyb2woY29udHJvbFdpZHRoLCBjaGlsZHJlbiwgcHJvcHMpfTwvUm93PlxuICAgICAgICApfVxuICAgICAgICA8SGVscEJsb2NrPntlcnJvck1lc3NhZ2V9PC9IZWxwQmxvY2s+XG4gICAgICA8L0Zvcm1Hcm91cD5cbiAgICApO1xuICB9XG59XG5cbkZpZWxkR3JvdXAuZGVmYXVsdFByb3BzID0ge1xuICBsYWJlbFdpZHRoOiB7bWQ6IDEyfSxcbiAgY29udHJvbFdpZHRoOiB7bWQ6IDEyfSxcbn07XG5cbkZpZWxkR3JvdXAucHJvcFR5cGVzID0ge1xuICBpZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBsYWJlbDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmVsZW1lbnRdKS5pc1JlcXVpcmVkLFxuICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG4gIHZhbGlkYXRpb25TdGF0ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZXJyb3JNZXNzYWdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm5vZGUpLFxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIGxhYmVsV2lkdGg6IFByb3BUeXBlcy5vYmplY3QsXG4gIGNvbnRyb2xXaWR0aDogUHJvcFR5cGVzLm9iamVjdCxcbiAgaW5saW5lQ29udHJvbDogUHJvcFR5cGVzLmJvb2wsXG59O1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRmllbGRHcm91cCBmcm9tICcuL0ZpZWxkR3JvdXAnO1xuXG5jb25zdCBQSE9ORV9OVU1CRVJfUkVHRVggPVxuICAvKFxcKCk/KFxcKD9cXGR7MSwzfSk/KFxcKSA/KT8oXFxkezEsM30pPygtfCApPyhcXGR7MSw0fSk/LztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNQaG9uZU51bWJlcklucHV0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgbGFiZWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSlcbiAgICAgIC5pc1JlcXVpcmVkLFxuICAgIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHZhbGlkYXRpb25TdGF0ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBlcnJvck1lc3NhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgcmVxdWlyZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB2YWx1ZTogVXNQaG9uZU51bWJlcklucHV0LmNvZXJjZVBob25lTnVtYmVyKHRoaXMucHJvcHMudmFsdWUpLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSB2YWx1ZSBpcyBleGFjdGx5IDEwIGRpZ2l0cyBhbmQgbm8gb3RoZXIgY2hhcmFjdGVycywgb3RoZXJ3aXNlIGZhbHNlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgLSB0byBpbnNwZWN0XG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgc3RhdGljIGlzVmFsaWQodmFsdWUpIHtcbiAgICByZXR1cm4gL15cXGR7MTB9JC8udGVzdCh2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogQ29lcmNlIHJhdyB2YWx1ZSBpbnRvIHRoZSBuZWFyZXN0IHByb3Blcmx5IGZvcm1hdHRlZCBwaG9uZSBudW1iZXJcbiAgICogVGhpcyBpcyB0byBtYWtlIHRoZSB0eXBpbmcgbW9yZSBuYXR1cmFsIGFuZCBmbGV4aWJsZS5cbiAgICogSWYgd2UgaW5zdGVhZCB2YWxpZGF0ZSB0aGUgZm9ybWF0IGV4cGxpY2l0bHksIHRoZW4gaXQgd2lsbCByZXF1aXJlIGVudGVyaW5nIGluIHRoZSBwYXJlbnRoZXNlcywgc3BhY2UsIGFuZCBkYXNoLlxuICAgKiBPbiB0aGUgb3RoZXIgaGFuZCwgaWYgd2Ugb25seSBhY2NlcHQgbnVtYmVycyBhbmQgcmVmb3JtYXQgb3Vyc2VsdmVzLCB0aGVuIGVkaXRpbmcgYW5kIGRlbGV0aW5nIGJlY29tZSBhd2t3YXJkLlxuICAgKlxuICAgKiBTZWUgdGhlIHVuaXQgdGVzdHMgZm9yIGV4YW1wbGVzLlxuICAgKiBAcGFyYW0ge1N0cmluZ30gdmFsdWUgLSByYXcgdmFsdWUgdG8gY29lcmNlIGludG8gYSBwaG9uZSBudW1iZXJcbiAgICogQHJldHVybnMge3N0cmluZ30gYmVzdCBlZmZvcnQgZm9ybWF0dGVkIHBob25lIG51bWJlciBmcm9tIHRoZSBzdXBwbGllZCB2YWx1ZVxuICAgKi9cbiAgc3RhdGljIGNvZXJjZVBob25lTnVtYmVyKHZhbHVlKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBQSE9ORV9OVU1CRVJfUkVHRVguZXhlYyh2YWx1ZSk7XG4gICAgbGV0IHBob25lTnVtYmVyID0gJyc7XG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICBpZiAobWF0Y2hbMV0gJiYgIW1hdGNoWzJdKSB7XG4gICAgICAgIC8vIG9wZW5pbmcgKFxuICAgICAgICBwaG9uZU51bWJlciA9IG1hdGNoWzFdO1xuICAgICAgfSBlbHNlIGlmIChtYXRjaFsyXSkge1xuICAgICAgICAvLyBGaXJzdCAzIGRpZ2l0cywgXCIoMTIzKVwiXG4gICAgICAgIHBob25lTnVtYmVyID0gYCgke21hdGNoWzJdfWA7XG4gICAgICAgIGlmIChtYXRjaFsyXS5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICAvLyBPcHRpb25hbCBzcGFjZSwgXCIoMTIzKSBcIlxuICAgICAgICAgIGlmIChtYXRjaFszXSAmJiAhbWF0Y2hbNF0pIHtcbiAgICAgICAgICAgIHBob25lTnVtYmVyICs9IG1hdGNoWzNdO1xuICAgICAgICAgIH0gZWxzZSBpZiAobWF0Y2hbNF0pIHtcbiAgICAgICAgICAgIC8vIFNlY29uZCBzZXQgb2YgMyBkaWdpdHMsIFwiKDEyMykgNDU2XCJcbiAgICAgICAgICAgIHBob25lTnVtYmVyICs9IGApICR7bWF0Y2hbNF19YDtcbiAgICAgICAgICAgIGlmIChtYXRjaFs0XS5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICAgICAgaWYgKG1hdGNoWzVdICYmICFtYXRjaFs2XSkge1xuICAgICAgICAgICAgICAgIC8vIE9wdGlvbmFsIC0sIFwiKDEyMykgNDU2LVwiXG4gICAgICAgICAgICAgICAgcGhvbmVOdW1iZXIgKz0gJy0nO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKG1hdGNoWzZdKSB7XG4gICAgICAgICAgICAgICAgLy8gTGFzdCA0IGRpZ2l0cywgXCIoMTIzKSA0NTYtNzg5MFwiXG4gICAgICAgICAgICAgICAgcGhvbmVOdW1iZXIgKz0gYC0ke21hdGNoWzZdfWA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcGhvbmVOdW1iZXI7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIG9ubHkgZGlnaXRzIGZyb20gdGhlIHN1cHBsaWVkIHN0cmluZ1xuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgLSBzdXBwbGllZCBzdHJpbmdcbiAgICogQHJldHVybnMge3N0cmluZ30gLSBhbGwgZGlnaXRzIGZyb20gdGhlIHN1cHBsaWVkIHN0cmluZ1xuICAgKi9cbiAgc3RhdGljIHRvSnVzdE51bWJlcnModmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IHZhbHVlLnJlcGxhY2UoL1teXFxkXS9nLCAnJykgOiAnJztcbiAgfVxuXG4gIGhhbmRsZUNoYW5nZSA9IGNoYW5nZSA9PiB7XG4gICAgY29uc3QgcGhvbmVOdW1iZXIgPSBVc1Bob25lTnVtYmVySW5wdXQuY29lcmNlUGhvbmVOdW1iZXIoXG4gICAgICBjaGFuZ2VbdGhpcy5wcm9wcy5uYW1lXVxuICAgICk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB2YWx1ZTogcGhvbmVOdW1iZXIsXG4gICAgfSk7XG5cbiAgICBjb25zdCBwaG9uZU51bWJlckRpZ2l0cyA9IFVzUGhvbmVOdW1iZXJJbnB1dC50b0p1c3ROdW1iZXJzKHBob25lTnVtYmVyKTtcbiAgICBpZiAoXG4gICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlICYmXG4gICAgICBwaG9uZU51bWJlckRpZ2l0cyAhPT0gVXNQaG9uZU51bWJlcklucHV0LnRvSnVzdE51bWJlcnModGhpcy5wcm9wcy52YWx1ZSlcbiAgICApIHtcbiAgICAgIHRoaXMucHJvcHMub25DaGFuZ2Uoe1xuICAgICAgICBbdGhpcy5wcm9wcy5uYW1lXTogcGhvbmVOdW1iZXJEaWdpdHMsXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIG5hbWUsXG4gICAgICBsYWJlbCxcbiAgICAgIHZhbGlkYXRpb25TdGF0ZSxcbiAgICAgIGVycm9yTWVzc2FnZSxcbiAgICAgIHJlcXVpcmVkLFxuICAgICAgLy8gcHVsbCB2YWx1ZSBhbmQgb25DaGFuZ2Ugc28gdGhleSBkb24ndCBnZXQgaW5jbHVkZWQgaW4gLi4ucHJvcHNcbiAgICAgIHZhbHVlLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICBvbkNoYW5nZSwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgLi4ucHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8RmllbGRHcm91cFxuICAgICAgICAgIGtleT17bmFtZX1cbiAgICAgICAgICBpZD17bmFtZX1cbiAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgbGFiZWw9e2xhYmVsfVxuICAgICAgICAgIHZhbGlkYXRpb25TdGF0ZT17dmFsaWRhdGlvblN0YXRlfVxuICAgICAgICAgIGVycm9yTWVzc2FnZT17ZXJyb3JNZXNzYWdlfVxuICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cbiAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS52YWx1ZSB8fCAnJ31cbiAgICAgICAgICByZXF1aXJlZD17cmVxdWlyZWR9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCIoeHh4KSB4eHgteHh4eFwiXG4gICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBVc1Bob25lTnVtYmVySW5wdXQgZnJvbSAnLi9Vc1Bob25lTnVtYmVySW5wdXQnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudDogVXNQaG9uZU51bWJlcklucHV0LFxufTtcblxuY29uc3QgVGVtcGxhdGUgPSBhcmdzID0+IDxVc1Bob25lTnVtYmVySW5wdXQgey4uLmFyZ3N9IC8+O1xuXG5leHBvcnQgY29uc3QgRGVmYXVsdFBob25lSW5wdXQgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkRlZmF1bHRQaG9uZUlucHV0LmFyZ3MgPSB7XG4gIG5hbWU6ICdTdG9yeWJvb2snLFxuICBsYWJlbDogJ0VudGVyIGEgcGhvbmUgbnVtYmVyJyxcbn07XG4iXSwibmFtZXMiOlsiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX3JlYWN0Qm9vdHN0cmFwIiwiX2V4Y2x1ZGVkIiwib2JqIiwiX19lc01vZHVsZSIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsInNvdXJjZSIsImV4Y2x1ZGVkIiwia2V5IiwiaSIsInRhcmdldCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwic291cmNlS2V5cyIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic291cmNlU3ltYm9sS2V5cyIsInByb3RvdHlwZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiY2FsbCIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsImFyZ3VtZW50cyIsImhhc093blByb3BlcnR5IiwiYXBwbHkiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiX29iamVjdFNwcmVhZCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsIl90b1ByaW1pdGl2ZSIsIl90eXBlb2YiLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiX3NldFByb3RvdHlwZU9mIiwicCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiUkVRVUlSRUQiLCJjcmVhdGVFbGVtZW50Iiwic3R5bGUiLCJjb2xvciIsIkZpZWxkR3JvdXAiLCJleHBvcnRzIiwiX1JlYWN0JENvbXBvbmVudCIsInByb3BzIiwiX3RoaXMiLCJoYW5kbGVDaGFuZ2UiLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwiX3Byb3RvIiwiZXZlbnQiLCJ0aGlzIiwidHlwZSIsIm1hdGNoIiwib25DaGFuZ2UiLCJpZCIsInJlbmRlckNvbnRyb2wiLCJjb250cm9sV2lkdGgiLCJjaGlsZHJlbiIsInVwZGF0ZWRQcm9wcyIsIkNvbCIsIkZvcm1Db250cm9sIiwicmVuZGVyIiwiX3RoaXMkcHJvcHMiLCJ2YWxpZGF0aW9uU3RhdGUiLCJlcnJvck1lc3NhZ2UiLCJsYWJlbCIsInJlcXVpcmVkIiwibGFiZWxXaWR0aCIsImlubGluZUNvbnRyb2wiLCJGb3JtR3JvdXAiLCJjb250cm9sSWQiLCJSb3ciLCJDb250cm9sTGFiZWwiLCJIZWxwQmxvY2siLCJSZWFjdCIsIkNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsIm1kIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm9uZU9mVHlwZSIsImVsZW1lbnQiLCJib29sIiwiYXJyYXlPZiIsIm5vZGUiLCJmdW5jIiwib2JqZWN0IiwibW9kdWxlIiwiX0ZpZWxkR3JvdXAiLCJpdGVyYXRvciIsIlBIT05FX05VTUJFUl9SRUdFWCIsIlVzUGhvbmVOdW1iZXJJbnB1dCIsImNoYW5nZSIsInBob25lTnVtYmVyIiwiY29lcmNlUGhvbmVOdW1iZXIiLCJuYW1lIiwic2V0U3RhdGUiLCJwaG9uZU51bWJlckRpZ2l0cyIsInRvSnVzdE51bWJlcnMiLCJzdGF0ZSIsImlzVmFsaWQiLCJ0ZXN0IiwiZXhlYyIsImNvbmNhdCIsInJlcGxhY2UiLCJwbGFjZWhvbGRlciIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImVyciIsIkVycm9yIiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJudW1iZXIiLCJzeW1ib2wiLCJhbnkiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIl9Vc1Bob25lTnVtYmVySW5wdXQiLCJjb21wb25lbnQiLCJUZW1wbGF0ZSIsImFyZ3MiXSwic291cmNlUm9vdCI6IiJ9