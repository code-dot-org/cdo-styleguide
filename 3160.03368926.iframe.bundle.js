(self.webpackChunkblockly_mooc=self.webpackChunkblockly_mooc||[]).push([[3160],{"./src/fontConstants.js":module=>{module.exports={"metropolis-font":"'Metropolis', sans-serif","main-font":"'Metropolis', sans-serif","thin-font-weight":"100","extra-light-font-weight":"200","light-font-weight":"300","regular-font-weight":"400","medium-font-weight":"500","semi-bold-font-weight":"600","bold-font-weight":"700","extra-bold-font-weight":"800","black-font-weight":"900","main-font-thin":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"normal"},"main-font-thin-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"100",fontStyle:"italic"},"main-font-extra-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"normal"},"main-font-extra-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"200",fontStyle:"italic"},"main-font-light":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"normal"},"main-font-light-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"300",fontStyle:"italic"},"main-font-regular":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"normal"},"main-font-regular-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"400",fontStyle:"italic"},"main-font-medium":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"normal"},"main-font-medium-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"500",fontStyle:"italic"},"main-font-semi-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"normal"},"main-font-semi-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"600",fontStyle:"italic"},"main-font-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"normal"},"main-font-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"700",fontStyle:"italic"},"main-font-extra-bold":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"normal"},"main-font-extra-bold-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"800",fontStyle:"italic"},"main-font-black":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"normal"},"main-font-black-italic":{fontFamily:"'Metropolis', sans-serif",fontWeight:"900",fontStyle:"italic"},"barlowSemiCondensed-semibold":"'Barlow Semi Condensed Semibold', sans-serif","barlowSemiCondensed-medium":"'Barlow Semi Condensed Medium', sans-serif","code-font":"'Source Code Pro', Monaco, 'Bitstream Vera Sans Mono', 'Lucida Console', Terminal, monospace","font-awesome-core-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/fontawesome.min.css'","font-awesome-brands-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/brands.min.css'","font-awesome-solid-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/solid.min.css'","font-awesome-regular-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/regular.min.css'","font-awesome-v4-fonts-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-font-face.min.css'","font-awesome-v4-shims-url":"'https://dsco.code.org/assets/font-awesome-pro/1684178876/css/v4-shims.min.css'"}},"./src/redux/unitSelectionRedux.js":(__unused_webpack_module,exports)=>{"use strict";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(exports,"__esModule",{value:!0}),exports.SET_SCRIPT=exports.SET_COURSES=void 0,exports.default=function unitSelection(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_COURSES){var firstCourse=action.coursesWithProgress[0],firstUnit=firstCourse?firstCourse.units[0]:null;return _objectSpread(_objectSpread({},state),{},{coursesWithProgress:action.coursesWithProgress,scriptId:null===state.scriptId?null==firstUnit?void 0:firstUnit.id:state.scriptId})}if(action.type===SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{scriptId:action.scriptId});return state},exports.setScriptId=exports.setCoursesWithProgress=exports.getSelectedScriptName=exports.getSelectedScriptFriendlyName=exports.getSelectedScriptDescription=exports.doesCurrentCourseUseFeedback=void 0;var SET_SCRIPT="unitSelection/SET_SCRIPT";exports.SET_SCRIPT=SET_SCRIPT;var SET_COURSES="unitSelection/SET_COURSES";exports.SET_COURSES=SET_COURSES;exports.setScriptId=function setScriptId(scriptId){return{type:SET_SCRIPT,scriptId}};exports.setCoursesWithProgress=function setCoursesWithProgress(coursesWithProgress){return{type:SET_COURSES,coursesWithProgress}};var getSelectedUnit=function getSelectedUnit(state){var unit,scriptId=state.unitSelection.scriptId;return scriptId?(state.unitSelection.coursesWithProgress.forEach((function(course){var tempUnit=course.units.find((function(unit){return scriptId===unit.id}));tempUnit&&(unit=tempUnit)})),unit):null};exports.getSelectedScriptName=function getSelectedScriptName(state){return getSelectedUnit(state)?getSelectedUnit(state).key:null};exports.getSelectedScriptFriendlyName=function getSelectedScriptFriendlyName(state){return getSelectedUnit(state)?getSelectedUnit(state).name:null};exports.getSelectedScriptDescription=function getSelectedScriptDescription(state){return getSelectedUnit(state)?getSelectedUnit(state).description:null};exports.doesCurrentCourseUseFeedback=function doesCurrentCourseUseFeedback(state){var _getSelectedUnit;return!(null===(_getSelectedUnit=getSelectedUnit(state))||void 0===_getSelectedUnit||!_getSelectedUnit.is_feedback_enabled)};var initialState={scriptId:null,coursesWithProgress:[]}},"./src/templates/sectionProgress/ProgressBox.jsx":(module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_fontConstants=_interopRequireDefault(__webpack_require__("./src/fontConstants.js")),_color=_interopRequireDefault(__webpack_require__("./src/util/color.js"));function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBox=function(_Component){function ProgressBox(){return _Component.apply(this,arguments)||this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBox,_Component),ProgressBox.prototype.render=function render(){var _this$props=this.props,started=_this$props.started,incomplete=_this$props.incomplete,imperfect=_this$props.imperfect,perfect=_this$props.perfect,lessonIsAllAssessment=_this$props.lessonIsAllAssessment,viewed=_this$props.viewed,viewedStyle=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.neutral_dark20,height:20,width:20}),boxWithBorderStyle=_objectSpread(_objectSpread({},styles.box),{},{borderColor:started?lessonIsAllAssessment?_color.default.level_submitted:_color.default.level_perfect:_color.default.light_gray},this.props.style),perfectLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_perfect,height:perfect,top:20-perfect}),assessmentLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_submitted,height:perfect,top:20-perfect}),incompleteLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_not_tried,height:incomplete}),imperfectLevels=_objectSpread(_objectSpread({},styles.filler),{},{backgroundColor:_color.default.level_passed,height:imperfect}),lessonNumberStyle=_objectSpread(_objectSpread({},styles.lessonNumber),{},{color:perfect?_color.default.white:_color.default.charcoal});return _react.default.createElement("div",{style:boxWithBorderStyle,"data-testid":"progress-box"},this.props.lessonNumber&&_react.default.createElement("div",{style:lessonNumberStyle},this.props.lessonNumber),viewed?_react.default.createElement("div",{style:viewedStyle}):_react.default.createElement(_react.default.Fragment,null,_react.default.createElement("div",{style:incompleteLevels}),_react.default.createElement("div",{style:imperfectLevels}),_react.default.createElement("div",{className:"uitest-perfect-bar",style:lessonIsAllAssessment?assessmentLevels:perfectLevels})))},ProgressBox}(_react.Component);exports.default=ProgressBox,_defineProperty(ProgressBox,"propTypes",{started:_propTypes.default.bool,incomplete:_propTypes.default.number,imperfect:_propTypes.default.number,perfect:_propTypes.default.number,style:_propTypes.default.object,lessonIsAllAssessment:_propTypes.default.bool,lessonNumber:_propTypes.default.number,viewed:_propTypes.default.bool});var styles={box:{height:20,width:20,borderWidth:1,borderStyle:"solid",boxSizing:"content-box",position:"relative"},filler:{width:20,position:"absolute"},lessonNumber:_objectSpread({position:"absolute",zIndex:2,paddingTop:2,textAlign:"center",width:20},_fontConstants.default["main-font-regular"])};module.exports=exports.default},"./src/templates/sectionProgress/sectionProgressConstants.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unitDataPropType=exports.tooltipIdForStudent=exports.studentTableRowType=exports.scrollbarWidth=exports.ViewType=void 0;var _propTypes=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/prop-types/index.js")),_progressTypes=__webpack_require__("./src/templates/progress/progressTypes.js");var unitDataPropType=_propTypes.default.shape({id:_propTypes.default.number.isRequired,csf:_propTypes.default.bool,hasStandards:_propTypes.default.bool,title:_propTypes.default.string,path:_propTypes.default.string,lessons:_propTypes.default.arrayOf(_propTypes.default.shape({levels:_propTypes.default.arrayOf(_propTypes.default.object).isRequired})),family_name:_propTypes.default.string,version_year:_propTypes.default.string,name:_propTypes.default.string});exports.unitDataPropType=unitDataPropType;exports.ViewType={SUMMARY:"summary",DETAIL:"detail",STANDARDS:"standards"};var studentTableRowType=_propTypes.default.shape({id:_propTypes.default.string.isRequired,student:_progressTypes.studentType.isRequired,expansionIndex:_propTypes.default.number.isRequired,isExpanded:_propTypes.default.bool,useDarkBackground:_propTypes.default.bool});exports.studentTableRowType=studentTableRowType;exports.tooltipIdForStudent=function tooltipIdForStudent(studentId){return"tooltipIdForStudent".concat(studentId)};var scrollbarWidth=function getScrollbarWidth(){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var inner=document.createElement("div");outer.appendChild(inner);var scrollbarWidth=outer.offsetWidth-inner.offsetWidth;return outer.parentNode.removeChild(outer),scrollbarWidth}();exports.scrollbarWidth=scrollbarWidth},"./src/templates/sectionProgress/sectionProgressRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.addDataByUnit=void 0,exports.default=function sectionProgress(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===_unitSelectionRedux.SET_SCRIPT)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:INITIAL_LESSON_OF_INTEREST});if(action.type===SET_CURRENT_VIEW)return _objectSpread(_objectSpread({},state),{},{currentView:action.viewType});if(action.type===START_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!0});if(action.type===FINISH_LOADING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isLoadingProgress:!1});if(action.type===START_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!0});if(action.type===FINISH_REFRESHING_PROGRESS)return _objectSpread(_objectSpread({},state),{},{isRefreshingProgress:!1});if(action.type===SET_LESSON_OF_INTEREST)return _objectSpread(_objectSpread({},state),{},{lessonOfInterest:action.lessonOfInterest});if(action.type===ADD_DATA_BY_UNIT)return _objectSpread(_objectSpread({},state),{},{unitDataByUnit:_objectSpread(_objectSpread({},state.unitDataByUnit),action.data.unitDataByUnit),studentLevelProgressByUnit:_objectSpread(_objectSpread({},state.studentLevelProgressByUnit),action.data.studentLevelProgressByUnit),studentLessonProgressByUnit:_objectSpread(_objectSpread({},state.studentLessonProgressByUnit),action.data.studentLessonProgressByUnit),studentLastUpdateByUnit:_objectSpread(_objectSpread({},state.studentLastUpdateByUnit),action.data.studentLastUpdateByUnit)});return state},exports.startRefreshingProgress=exports.startLoadingProgress=exports.setLessonOfInterest=exports.setCurrentView=exports.jumpToLessonDetails=exports.getCurrentUnitData=exports.finishRefreshingProgress=exports.finishLoadingProgress=void 0;var _unitSelectionRedux=__webpack_require__("./src/redux/unitSelectionRedux.js"),_firehose=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./src/lib/util/firehose.js")),_sectionProgressConstants=__webpack_require__("./src/templates/sectionProgress/sectionProgressConstants.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_CURRENT_VIEW="sectionProgress/SET_CURRENT_VIEW",SET_LESSON_OF_INTEREST="sectionProgress/SET_LESSON_OF_INTEREST",START_LOADING_PROGRESS="sectionProgress/START_LOADING_PROGRESS",FINISH_LOADING_PROGRESS="sectionProgress/FINISH_LOADING_PROGRESS",START_REFRESHING_PROGRESS="sectionProgress/START_REFRESHING_PROGRESS",FINISH_REFRESHING_PROGRESS="sectionProgress/FINISH_REFRESHING_PROGRESS",ADD_DATA_BY_UNIT="sectionProgress/ADD_DATA_BY_UNIT";exports.startLoadingProgress=function startLoadingProgress(){return{type:START_LOADING_PROGRESS}};exports.finishLoadingProgress=function finishLoadingProgress(){return{type:FINISH_LOADING_PROGRESS}};exports.startRefreshingProgress=function startRefreshingProgress(){return{type:START_REFRESHING_PROGRESS}};exports.finishRefreshingProgress=function finishRefreshingProgress(){return{type:FINISH_REFRESHING_PROGRESS}};var setLessonOfInterest=function setLessonOfInterest(lessonOfInterest){return{type:SET_LESSON_OF_INTEREST,lessonOfInterest}};exports.setLessonOfInterest=setLessonOfInterest;var setCurrentView=function setCurrentView(viewType){return{type:SET_CURRENT_VIEW,viewType}};exports.setCurrentView=setCurrentView;exports.addDataByUnit=function addDataByUnit(data){return{type:ADD_DATA_BY_UNIT,data}};var INITIAL_LESSON_OF_INTEREST=1,initialState={section:{},currentView:_sectionProgressConstants.ViewType.SUMMARY,unitDataByUnit:{},studentLevelProgressByUnit:{},studentLessonProgressByUnit:{},studentLastUpdateByUnit:{},lessonOfInterest:INITIAL_LESSON_OF_INTEREST,isLoadingProgress:!1,isRefreshingProgress:!1};exports.jumpToLessonDetails=function jumpToLessonDetails(lessonOfInterest){return function(dispatch,getState){var state=getState();dispatch(setLessonOfInterest(lessonOfInterest)),dispatch(setCurrentView(_sectionProgressConstants.ViewType.DETAIL)),_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"progress",event:"view_change_toggle",data_json:JSON.stringify({section_id:state.teacherSections.selectedSectionId,old_view:_sectionProgressConstants.ViewType.SUMMARY,new_view:_sectionProgressConstants.ViewType.DETAIL,script_id:state.unitSelection.scriptId})},{includeUserId:!0})}};exports.getCurrentUnitData=function getCurrentUnitData(state){return state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId]}},"./src/templates/sectionProgress/standards/ProgressBoxForLessonNumber.jsx":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UnconnectedProgressBoxForLessonNumber=void 0;var _propTypes=_interopRequireDefault(__webpack_require__("./node_modules/prop-types/index.js")),_react=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_ProgressBox=_interopRequireDefault(__webpack_require__("./src/templates/sectionProgress/ProgressBox.jsx")),_firehose=_interopRequireDefault(__webpack_require__("./src/lib/util/firehose.js")),_reactRedux=__webpack_require__("./node_modules/react-redux/es/index.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var ProgressBoxForLessonNumber=function(_Component){function ProgressBoxForLessonNumber(){for(var _this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty(function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(_this=_Component.call.apply(_Component,[this].concat(args))||this),"handleClick",(function(){_firehose.default.putRecord({study:"teacher_dashboard_actions",study_group:"standards",event:"click_lesson_progress_box",data_json:JSON.stringify({link:_this.props.linkToLessonPlan,section_id:_this.props.sectionId,script_id:_this.props.scriptId,in_report:window.location.pathname.includes("standards_report")})},{includeUserId:!0})})),_this}return function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}(ProgressBoxForLessonNumber,_Component),ProgressBoxForLessonNumber.prototype.render=function render(){var _this$props=this.props,completed=_this$props.completed,inProgress=_this$props.inProgress,lessonNumber=_this$props.lessonNumber,tooltipId=_this$props.tooltipId,linkToLessonPlan=_this$props.linkToLessonPlan,started=completed||inProgress,workingOn=inProgress&&!completed,progressBox=_react.default.createElement(_ProgressBox.default,{style:styles.lessonBox,started,incomplete:started?0:20,imperfect:workingOn?20:0,perfect:completed?20:0,lessonNumber});return linkToLessonPlan?_react.default.createElement("a",{href:linkToLessonPlan,target:"_blank",rel:"noopener noreferrer","data-for":tooltipId,"data-tip":!0,onClick:this.handleClick},progressBox):progressBox},ProgressBoxForLessonNumber}(_react.Component);_defineProperty(ProgressBoxForLessonNumber,"propTypes",{completed:_propTypes.default.bool,inProgress:_propTypes.default.bool,lessonNumber:_propTypes.default.number,tooltipId:_propTypes.default.string,linkToLessonPlan:_propTypes.default.string,sectionId:_propTypes.default.number,scriptId:_propTypes.default.number});var styles={lessonBox:{marginRight:5,marginLeft:5}},UnconnectedProgressBoxForLessonNumber=ProgressBoxForLessonNumber;exports.UnconnectedProgressBoxForLessonNumber=UnconnectedProgressBoxForLessonNumber;var _default=(0,_reactRedux.connect)((function(state){return{sectionId:state.teacherSections.selectedSectionId,scriptId:state.unitSelection.scriptId}}))(ProgressBoxForLessonNumber);exports.default=_default},"./src/templates/sectionProgress/standards/sectionStandardsProgressRedux.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function sectionStandardsProgress(){var state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialState,action=arguments.length>1?arguments[1]:void 0;if(action.type===SET_STANDARDS_DATA){var sortedByCategory=_lodash.default.orderBy(action.standardsData,"category_description","asc"),groupedStandards=_lodash.default.orderBy(_lodash.default.groupBy(sortedByCategory,"category_description"),"category_description","asc"),sortedStandards=_lodash.default.map(groupedStandards,sortByShortcode);return _objectSpread(_objectSpread({},state),{},{standardsData:_lodash.default.flatten(sortedStandards)})}if(action.type===SET_TEACHER_COMMENT_FOR_REPORT)return _objectSpread(_objectSpread({},state),{},{teacherComment:action.teacherComment});if(action.type===SET_SELECTED_LESSONS)return _objectSpread(_objectSpread({},state),{},{selectedLessons:action.selected});if(action.type===SET_STUDENT_LEVEL_SCORES){var prevLevelScoreByLesson=state.studentLevelScoresByLesson[action.scriptId]?state.studentLevelScoresByLesson[action.scriptId][action.lessonId]:{};return _objectSpread(_objectSpread({},state),{},{studentLevelScoresByLesson:_objectSpread(_objectSpread({},state.studentLevelScoresByLesson),{},_defineProperty({},action.scriptId,_objectSpread(_objectSpread({},state.studentLevelScoresByLesson[action.scriptId]),{},_defineProperty({},action.lessonId,_objectSpread(_objectSpread({},prevLevelScoreByLesson),action.scoresData[action.scriptId][action.lessonId])))))})}return state},exports.fetchStandardsCoveredForScript=function fetchStandardsCoveredForScript(scriptId){return function(dispatch,getState){$.ajax({method:"GET",dataType:"json",url:"/dashboardapi/script_standards/".concat(scriptId)}).then((function(data){dispatch(setStandardsData(data))}))}},exports.fetchStudentLevelScores=function fetchStudentLevelScores(scriptId,sectionId){return function(dispatch,getState){var state=getState(),numStudents=state.teacherSections.sections[state.teacherSections.selectedSectionId].studentCount,unpluggedLessonList=getUnpluggedLessonsForScript(state),unpluggedLessonIds=_lodash.default.map(unpluggedLessonList,"id"),numPages=Math.ceil(numStudents/50),requests=_lodash.default.range(1,numPages+1).map((function(currentPage){var url="/dashboardapi/v1/teacher_scores/".concat(sectionId,"/").concat(scriptId,"?page=").concat(currentPage);return fetch(url,{credentials:"include"}).then((function(response){return response.json()})).then((function(data){var scoresData=data;unpluggedLessonIds.forEach((function(lessonId){return dispatch(setStudentLevelScores(scriptId,lessonId,scoresData))}))}))}));Promise.all(requests).then((function(){var initialCompletedUnpluggedLessons=function getInitialUnpluggedLessonCompletionStatus(state,scriptId){var completedLessonIds=[];if(state.sectionStandardsProgress.studentLevelScoresByLesson&&state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId]){var levelScoresByStudentForScript=state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId];Object.keys(levelScoresByStudentForScript).forEach((function(item){_lodash.default.filter(_lodash.default.values(levelScoresByStudentForScript[item]),(function(studentScore){return _lodash.default.first(_lodash.default.values(studentScore))===_standardsConstants.TeacherScores.COMPLETE})).length>=1&&completedLessonIds.push(parseInt(item))}))}return completedLessonIds}(getState(),scriptId),lessonsToSelect=_lodash.default.filter(unpluggedLessonList,(function(lesson){if(initialCompletedUnpluggedLessons.includes(lesson.id))return lesson}));dispatch(setSelectedLessons(lessonsToSelect))}))}},exports.getLessonCompletionStatus=getLessonCompletionStatus,exports.getLessonSelectionStatus=getLessonSelectionStatus,exports.getNumberLessonsCompleted=function getNumberLessonsCompleted(state){var lessonsCompleted=0,lessons=getLessonsForCurrentScript(state,state.unitSelection.scriptId);lessons&&lessons.forEach((function(lesson){getLessonCompletionStatus(state,lesson.id).completed&&(lessonsCompleted+=1)}));return lessonsCompleted},exports.getNumberLessonsInScript=function getNumberLessonsInScript(state){var numLessons=0,lessons=getLessonsForCurrentScript(state,state.unitSelection.scriptId);lessons&&(numLessons=lessons.length);return numLessons},exports.getPluggedLessonCompletionStatus=getPluggedLessonCompletionStatus,exports.getUnpluggedLessonCompletionStatus=getUnpluggedLessonCompletionStatus,exports.getUnpluggedLessonsForScript=getUnpluggedLessonsForScript,exports.setTeacherCommentForReport=exports.setStudentLevelScores=exports.setStandardsData=exports.setSelectedLessons=exports.lessonsByStandard=void 0;var _lodash=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/lodash/lodash.js")),_constants=__webpack_require__("./src/constants.js"),_standardsConstants=__webpack_require__("./src/templates/sectionProgress/standards/standardsConstants.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var SET_STANDARDS_DATA="sectionStandardsProgress/SET_STANDARDS_DATA",SET_TEACHER_COMMENT_FOR_REPORT="sectionStandardsProgress/SET_TEACHER_COMMENT_FOR_REPORT",SET_SELECTED_LESSONS="sectionStandardsProgress/SET_SELECTED_LESSONS",SET_STUDENT_LEVEL_SCORES="sectionStandardsProgress/SET_STUDENT_LEVEL_SCORES",setStandardsData=function setStandardsData(standardsData){return{type:SET_STANDARDS_DATA,standardsData}};exports.setStandardsData=setStandardsData;exports.setTeacherCommentForReport=function setTeacherCommentForReport(teacherComment){return{type:SET_TEACHER_COMMENT_FOR_REPORT,teacherComment}};var setSelectedLessons=function setSelectedLessons(selected){return{type:SET_SELECTED_LESSONS,selected}};exports.setSelectedLessons=setSelectedLessons;var setStudentLevelScores=function setStudentLevelScores(scriptId,lessonId,scoresData){return{type:SET_STUDENT_LEVEL_SCORES,scriptId,lessonId,scoresData}};exports.setStudentLevelScores=setStudentLevelScores;var initialState={standardsData:[],teacherComment:null,selectedLessons:[],studentLevelScoresByLesson:{}};function sortByShortcode(standardsByCategory){return _lodash.default.orderBy(standardsByCategory,"shortcode","asc")}function getLessonsForCurrentScript(state){if(state.unitSelection.scriptId&&state.sectionProgress.unitDataByUnit&&state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId])return state.sectionProgress.unitDataByUnit[state.unitSelection.scriptId].lessons}function getLessonSelectionStatus(state,lessonId){return _lodash.default.map(state.sectionStandardsProgress.selectedLessons,"id").includes(lessonId)}function getUnpluggedLessonsForScript(state){var unpluggedLessons=[],lessons=getLessonsForCurrentScript(state);return lessons&&(unpluggedLessons=_lodash.default.filter(lessons,(function(lesson){return lesson.unplugged}))).forEach((function(lesson){var lessonCompletionStatus=getLessonCompletionStatus(state,lesson.id);lesson.completed=lessonCompletionStatus.completed,lesson.inProgress=lessonCompletionStatus.inProgress})),_lodash.default.map(unpluggedLessons,(function filterLessonData(lesson){return{id:lesson.id,name:lesson.name,number:lesson.position,url:lesson.lesson_plan_html_url,completed:lesson.completed,inProgress:lesson.inProgress}}))}function getLessonCompletionStatus(state,lessonId){var scriptId=state.unitSelection.scriptId,lessons=getLessonsForCurrentScript(state);if(lessons){var lesson=_lodash.default.find(lessons,["id",lessonId]);return lesson.unplugged?getUnpluggedLessonCompletionStatus(state,scriptId,lessonId):getPluggedLessonCompletionStatus(state,lesson)}}function getUnpluggedLessonCompletionStatus(state,scriptId,lessonId){return{completed:getLessonSelectionStatus(state,lessonId),inProgress:!1,numStudentsCompleted:getNumberOfStudentsCompletedUnpluggedLesson(state,scriptId,lessonId)}}function getNumberOfStudentsCompletedUnpluggedLesson(state,scriptId,lessonId){var completionNumberByLesson=0;if(state.sectionStandardsProgress.studentLevelScoresByLesson&&state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId]&&state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId][lessonId]){var levelScoresByStudent=state.sectionStandardsProgress.studentLevelScoresByLesson[scriptId][lessonId];completionNumberByLesson=_lodash.default.filter(_lodash.default.values(levelScoresByStudent),(function(studentScore){return _lodash.default.first(_lodash.default.values(studentScore))===_standardsConstants.TeacherScores.COMPLETE})).length}return completionNumberByLesson}function getPluggedLessonCompletionStatus(state,lesson){var completionByLesson={};if(state.unitSelection.scriptId&&state.sectionProgress.unitDataByUnit&&state.sectionProgress.studentLevelProgressByUnit&&state.sectionProgress.studentLevelProgressByUnit[state.unitSelection.scriptId]&&state.teacherSections.sections&&state.teacherSections.selectedSectionId){var scriptId=state.unitSelection.scriptId,numberStudentsInSection=state.teacherSections.sections[state.teacherSections.selectedSectionId].studentCount,levelProgressByScript=state.sectionProgress.studentLevelProgressByUnit[scriptId],studentIds=Object.keys(levelProgressByScript),levelIds=_lodash.default.map(lesson.levels,"id"),numStudentsCompletedLesson=0,numStudentsInProgressLesson=0;studentIds.forEach((function(studentId){var numLevelsInLessonCompletedByStudent=0;levelIds.forEach((function(levelId){var levelProgress=levelProgressByScript[studentId][levelId];levelProgress&&levelProgress.result>=_constants.TestResults.MINIMUM_PASS_RESULT&&numLevelsInLessonCompletedByStudent++}));var levelCompletionRatio=numLevelsInLessonCompletedByStudent/levelIds.length;levelCompletionRatio>=.2&&numStudentsInProgressLesson++,levelCompletionRatio>=.6&&numStudentsCompletedLesson++}));var completed=numStudentsCompletedLesson/numberStudentsInSection>=.8,inProgress=numStudentsInProgressLesson/numberStudentsInSection>=.2;completionByLesson.completed=completed,completionByLesson.inProgress=inProgress,completionByLesson.numStudentsCompleted=numStudentsCompletedLesson}return completionByLesson}exports.lessonsByStandard=function lessonsByStandard(state){var lessonsByStandardId={},lessons=getLessonsForCurrentScript(state,state.unitSelection.scriptId);if(lessons&&state.sectionStandardsProgress.standardsData){var standards=state.sectionStandardsProgress.standardsData,numStudents=state.teacherSections.sections[state.teacherSections.selectedSectionId].studentCount;standards.forEach((function(standard){var associatedLessons=[];lessons.forEach((function(lesson){if(standard.lesson_ids.includes(lesson.id)){var lessonCompletionStatus=getLessonCompletionStatus(state,lesson.id),lessonDetails={name:lesson.name,lessonNumber:lesson.relative_position,completed:lessonCompletionStatus.completed,inProgress:lessonCompletionStatus.inProgress,numStudentsCompleted:lessonCompletionStatus.numStudentsCompleted,numStudents,url:lesson.lesson_plan_html_url,unplugged:lesson.unplugged};associatedLessons.push(lessonDetails)}})),lessonsByStandardId[standard.id]=associatedLessons}))}return lessonsByStandardId}},"./src/templates/sectionProgress/standards/standardsConstants.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.cstaStandardsURL=exports.TeacherScores=exports.LessonIcons=void 0;exports.LessonIcons={PLUGGED:"desktop",UNPLUGGED:"scissors"};exports.cstaStandardsURL="https://www.csteachers.org/page/standards";exports.TeacherScores={COMPLETE:100,INCOMPLETE:0}},"./node_modules/redux-thunk/lib/index.js":(__unused_webpack_module,exports)=>{"use strict";function createThunkMiddleware(extraArgument){return function(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){return"function"==typeof action?action(dispatch,getState,extraArgument):next(action)}}}}exports.__esModule=!0;var thunk=createThunkMiddleware();thunk.withExtraArgument=createThunkMiddleware,exports.default=thunk}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c0JBRTFCL1MsUUFBQSxRQUFxQm9ULEsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvZm9udENvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvcmVkdXgvdW5pdFNlbGVjdGlvblJlZHV4LmpzIiwid2VicGFjazovL2Jsb2NrbHktbW9vYy8uL3NyYy90ZW1wbGF0ZXMvc2VjdGlvblByb2dyZXNzL1Byb2dyZXNzQm94LmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3NlY3Rpb25Qcm9ncmVzcy9zZWN0aW9uUHJvZ3Jlc3NDb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uUHJvZ3Jlc3Mvc2VjdGlvblByb2dyZXNzUmVkdXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uUHJvZ3Jlc3Mvc3RhbmRhcmRzL1Byb2dyZXNzQm94Rm9yTGVzc29uTnVtYmVyLmpzeCIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9zcmMvdGVtcGxhdGVzL3NlY3Rpb25Qcm9ncmVzcy9zdGFuZGFyZHMvc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzUmVkdXguanMiLCJ3ZWJwYWNrOi8vYmxvY2tseS1tb29jLy4vc3JjL3RlbXBsYXRlcy9zZWN0aW9uUHJvZ3Jlc3Mvc3RhbmRhcmRzL3N0YW5kYXJkc0NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9ibG9ja2x5LW1vb2MvLi9ub2RlX21vZHVsZXMvcmVkdXgtdGh1bmsvbGliL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG5cbi8vIGFwcHMvc3JjL2ZvbnRDb25zdGFudHMuanNcbi8vIEdFTkVSQVRFRCBGSUxFOiBETyBOT1QgTU9ESUZZIERJUkVDVExZXG4vLyBUaGlzIGdlbmVyYXRlZCBmaWxlIGV4cG9ydHMgYWxsIHZhcmlhYmxlcyBkZWZpbmVkIGluIHNoYXJlZC9jc3MvZm9udC5zY3NzXG4vLyBmb3IgdXNlIGluIEphdmFTY3JpcHQuIFRoZSBnZW5lcmF0b3Igc2NyaXB0IGlzIGNvbnZlcnQtc2Nzcy12YXJpYWJsZXMuanNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBcIm1ldHJvcG9saXMtZm9udFwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcIm1haW4tZm9udFwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcInRoaW4tZm9udC13ZWlnaHRcIjogXCIxMDBcIixcbiAgXCJleHRyYS1saWdodC1mb250LXdlaWdodFwiOiBcIjIwMFwiLFxuICBcImxpZ2h0LWZvbnQtd2VpZ2h0XCI6IFwiMzAwXCIsXG4gIFwicmVndWxhci1mb250LXdlaWdodFwiOiBcIjQwMFwiLFxuICBcIm1lZGl1bS1mb250LXdlaWdodFwiOiBcIjUwMFwiLFxuICBcInNlbWktYm9sZC1mb250LXdlaWdodFwiOiBcIjYwMFwiLFxuICBcImJvbGQtZm9udC13ZWlnaHRcIjogXCI3MDBcIixcbiAgXCJleHRyYS1ib2xkLWZvbnQtd2VpZ2h0XCI6IFwiODAwXCIsXG4gIFwiYmxhY2stZm9udC13ZWlnaHRcIjogXCI5MDBcIixcbiAgXCJtYWluLWZvbnQtdGhpblwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCIxMDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtdGhpbi1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMTAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWV4dHJhLWxpZ2h0XCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjIwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1leHRyYS1saWdodC1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMjAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWxpZ2h0XCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjMwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIm5vcm1hbFwiLFxuICB9LFxuICBcIm1haW4tZm9udC1saWdodC1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiMzAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LXJlZ3VsYXJcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNDAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LXJlZ3VsYXItaXRhbGljXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjQwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIml0YWxpY1wiLFxuICB9LFxuICBcIm1haW4tZm9udC1tZWRpdW1cIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNTAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LW1lZGl1bS1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNTAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LXNlbWktYm9sZFwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI2MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtc2VtaS1ib2xkLWl0YWxpY1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI2MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJpdGFsaWNcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtYm9sZFwiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI3MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtYm9sZC1pdGFsaWNcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiNzAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwiaXRhbGljXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWV4dHJhLWJvbGRcIjoge1xuICBcImZvbnRGYW1pbHlcIjogXCInTWV0cm9wb2xpcycsIHNhbnMtc2VyaWZcIixcbiAgXCJmb250V2VpZ2h0XCI6IFwiODAwXCIsXG4gIFwiZm9udFN0eWxlXCI6IFwibm9ybWFsXCIsXG4gIH0sXG4gIFwibWFpbi1mb250LWV4dHJhLWJvbGQtaXRhbGljXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjgwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIml0YWxpY1wiLFxuICB9LFxuICBcIm1haW4tZm9udC1ibGFja1wiOiB7XG4gIFwiZm9udEZhbWlseVwiOiBcIidNZXRyb3BvbGlzJywgc2Fucy1zZXJpZlwiLFxuICBcImZvbnRXZWlnaHRcIjogXCI5MDBcIixcbiAgXCJmb250U3R5bGVcIjogXCJub3JtYWxcIixcbiAgfSxcbiAgXCJtYWluLWZvbnQtYmxhY2staXRhbGljXCI6IHtcbiAgXCJmb250RmFtaWx5XCI6IFwiJ01ldHJvcG9saXMnLCBzYW5zLXNlcmlmXCIsXG4gIFwiZm9udFdlaWdodFwiOiBcIjkwMFwiLFxuICBcImZvbnRTdHlsZVwiOiBcIml0YWxpY1wiLFxuICB9LFxuICBcImJhcmxvd1NlbWlDb25kZW5zZWQtc2VtaWJvbGRcIjogXCInQmFybG93IFNlbWkgQ29uZGVuc2VkIFNlbWlib2xkJywgc2Fucy1zZXJpZlwiLFxuICBcImJhcmxvd1NlbWlDb25kZW5zZWQtbWVkaXVtXCI6IFwiJ0JhcmxvdyBTZW1pIENvbmRlbnNlZCBNZWRpdW0nLCBzYW5zLXNlcmlmXCIsXG4gIFwiY29kZS1mb250XCI6IFwiJ1NvdXJjZSBDb2RlIFBybycsIE1vbmFjbywgJ0JpdHN0cmVhbSBWZXJhIFNhbnMgTW9ubycsICdMdWNpZGEgQ29uc29sZScsIFRlcm1pbmFsLCBtb25vc3BhY2VcIixcbiAgXCJmb250LWF3ZXNvbWUtY29yZS11cmxcIjogXCInaHR0cHM6Ly9kc2NvLmNvZGUub3JnL2Fzc2V0cy9mb250LWF3ZXNvbWUtcHJvLzE2ODQxNzg4NzYvY3NzL2ZvbnRhd2Vzb21lLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLWJyYW5kcy11cmxcIjogXCInaHR0cHM6Ly9kc2NvLmNvZGUub3JnL2Fzc2V0cy9mb250LWF3ZXNvbWUtcHJvLzE2ODQxNzg4NzYvY3NzL2JyYW5kcy5taW4uY3NzJ1wiLFxuICBcImZvbnQtYXdlc29tZS1zb2xpZC11cmxcIjogXCInaHR0cHM6Ly9kc2NvLmNvZGUub3JnL2Fzc2V0cy9mb250LWF3ZXNvbWUtcHJvLzE2ODQxNzg4NzYvY3NzL3NvbGlkLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLXJlZ3VsYXItdXJsXCI6IFwiJ2h0dHBzOi8vZHNjby5jb2RlLm9yZy9hc3NldHMvZm9udC1hd2Vzb21lLXByby8xNjg0MTc4ODc2L2Nzcy9yZWd1bGFyLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLXY0LWZvbnRzLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3MvdjQtZm9udC1mYWNlLm1pbi5jc3MnXCIsXG4gIFwiZm9udC1hd2Vzb21lLXY0LXNoaW1zLXVybFwiOiBcIidodHRwczovL2RzY28uY29kZS5vcmcvYXNzZXRzL2ZvbnQtYXdlc29tZS1wcm8vMTY4NDE3ODg3Ni9jc3MvdjQtc2hpbXMubWluLmNzcydcIixcbn07XG4iLCIvLyBSZWR1Y2VyIGZvciBzY3JpcHQgc2VsZWN0aW9uIGluIHRlYWNoZXIgZGFzaGJvYXJkLlxuLy8gVGFiIHNwZWNpZmljIHJlZHVjZXJzIGNhbiBpbXBvcnQgYWN0aW9ucyBmcm9tIHRoaXMgZmlsZVxuLy8gaWYgdGhleSBuZWVkIHRvIHJlc3BvbmQgdG8gYSBzY3JpcHQgY2hhbmdpbmcuXG5cbi8vIEFjdGlvbiB0eXBlIGNvbnN0YW50c1xuZXhwb3J0IGNvbnN0IFNFVF9TQ1JJUFQgPSAndW5pdFNlbGVjdGlvbi9TRVRfU0NSSVBUJztcbmV4cG9ydCBjb25zdCBTRVRfQ09VUlNFUyA9ICd1bml0U2VsZWN0aW9uL1NFVF9DT1VSU0VTJztcblxuLy8gQWN0aW9uIGNyZWF0b3JzXG5leHBvcnQgY29uc3Qgc2V0U2NyaXB0SWQgPSBzY3JpcHRJZCA9PiAoe3R5cGU6IFNFVF9TQ1JJUFQsIHNjcmlwdElkfSk7XG5leHBvcnQgY29uc3Qgc2V0Q291cnNlc1dpdGhQcm9ncmVzcyA9IGNvdXJzZXNXaXRoUHJvZ3Jlc3MgPT4gKHtcbiAgdHlwZTogU0VUX0NPVVJTRVMsXG4gIGNvdXJzZXNXaXRoUHJvZ3Jlc3MsXG59KTtcblxuLy8gU2VsZWN0b3JzXG5jb25zdCBnZXRTZWxlY3RlZFVuaXQgPSBzdGF0ZSA9PiB7XG4gIGNvbnN0IHNjcmlwdElkID0gc3RhdGUudW5pdFNlbGVjdGlvbi5zY3JpcHRJZDtcbiAgaWYgKCFzY3JpcHRJZCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgbGV0IHVuaXQ7XG4gIHN0YXRlLnVuaXRTZWxlY3Rpb24uY291cnNlc1dpdGhQcm9ncmVzcy5mb3JFYWNoKGNvdXJzZSA9PiB7XG4gICAgY29uc3QgdGVtcFVuaXQgPSBjb3Vyc2UudW5pdHMuZmluZCh1bml0ID0+IHNjcmlwdElkID09PSB1bml0LmlkKTtcbiAgICBpZiAodGVtcFVuaXQpIHtcbiAgICAgIHVuaXQgPSB0ZW1wVW5pdDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gdW5pdDtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRTZWxlY3RlZFNjcmlwdE5hbWUgPSBzdGF0ZSA9PiB7XG4gIHJldHVybiBnZXRTZWxlY3RlZFVuaXQoc3RhdGUpID8gZ2V0U2VsZWN0ZWRVbml0KHN0YXRlKS5rZXkgOiBudWxsO1xufTtcblxuLyogR2V0IHRoZSB1c2VyIGZyaWVuZGx5IG5hbWUgb2YgYSBzY3JpcHQodGhlIHVuaXQgb3IgY291cnNlIG5hbWUpICovXG5leHBvcnQgY29uc3QgZ2V0U2VsZWN0ZWRTY3JpcHRGcmllbmRseU5hbWUgPSBzdGF0ZSA9PiB7XG4gIHJldHVybiBnZXRTZWxlY3RlZFVuaXQoc3RhdGUpID8gZ2V0U2VsZWN0ZWRVbml0KHN0YXRlKS5uYW1lIDogbnVsbDtcbn07XG5cbi8qIEdldCB0aGUgZGVzY3JpcHRpb24gb2YgYSBzY3JpcHQodGhlIHVuaXQgb3IgY291cnNlIG5hbWUpICovXG5leHBvcnQgY29uc3QgZ2V0U2VsZWN0ZWRTY3JpcHREZXNjcmlwdGlvbiA9IHN0YXRlID0+IHtcbiAgcmV0dXJuIGdldFNlbGVjdGVkVW5pdChzdGF0ZSkgPyBnZXRTZWxlY3RlZFVuaXQoc3RhdGUpLmRlc2NyaXB0aW9uIDogbnVsbDtcbn07XG5cbmV4cG9ydCBjb25zdCBkb2VzQ3VycmVudENvdXJzZVVzZUZlZWRiYWNrID0gc3RhdGUgPT4ge1xuICByZXR1cm4gISFnZXRTZWxlY3RlZFVuaXQoc3RhdGUpPy5pc19mZWVkYmFja19lbmFibGVkO1xufTtcblxuLy8gSW5pdGlhbCBzdGF0ZSBvZiB1bml0U2VsZWN0aW9uUmVkdXhcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgc2NyaXB0SWQ6IG51bGwsXG4gIGNvdXJzZXNXaXRoUHJvZ3Jlc3M6IFtdLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdW5pdFNlbGVjdGlvbihzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSB7XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0VUX0NPVVJTRVMpIHtcbiAgICBsZXQgZmlyc3RDb3Vyc2UgPSBhY3Rpb24uY291cnNlc1dpdGhQcm9ncmVzc1swXTtcblxuICAgIGNvbnN0IGZpcnN0VW5pdCA9IGZpcnN0Q291cnNlID8gZmlyc3RDb3Vyc2UudW5pdHNbMF0gOiBudWxsO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgY291cnNlc1dpdGhQcm9ncmVzczogYWN0aW9uLmNvdXJzZXNXaXRoUHJvZ3Jlc3MsXG4gICAgICBzY3JpcHRJZDogc3RhdGUuc2NyaXB0SWQgPT09IG51bGwgPyBmaXJzdFVuaXQ/LmlkIDogc3RhdGUuc2NyaXB0SWQsXG4gICAgfTtcbiAgfVxuXG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0VUX1NDUklQVCkge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHNjcmlwdElkOiBhY3Rpb24uc2NyaXB0SWQsXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBzdGF0ZTtcbn1cbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBmb250Q29uc3RhbnRzIGZyb20gJ0BjZG8vYXBwcy9mb250Q29uc3RhbnRzJztcbmltcG9ydCBjb2xvciBmcm9tICdAY2RvL2FwcHMvdXRpbC9jb2xvcic7XG5cbmNvbnN0IFBST0dSRVNTX0JPWF9TSVpFID0gMjA7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2dyZXNzQm94IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBzdGFydGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpbmNvbXBsZXRlOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGltcGVyZmVjdDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBwZXJmZWN0OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxlc3NvbklzQWxsQXNzZXNzbWVudDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbGVzc29uTnVtYmVyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIHZpZXdlZDogUHJvcFR5cGVzLmJvb2wsXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHN0YXJ0ZWQsXG4gICAgICBpbmNvbXBsZXRlLFxuICAgICAgaW1wZXJmZWN0LFxuICAgICAgcGVyZmVjdCxcbiAgICAgIGxlc3NvbklzQWxsQXNzZXNzbWVudCxcbiAgICAgIHZpZXdlZCxcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IHZpZXdlZFN0eWxlID0ge1xuICAgICAgLi4uc3R5bGVzLmZpbGxlcixcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubmV1dHJhbF9kYXJrMjAsXG4gICAgICBoZWlnaHQ6IFBST0dSRVNTX0JPWF9TSVpFLFxuICAgICAgd2lkdGg6IFBST0dSRVNTX0JPWF9TSVpFLFxuICAgIH07XG5cbiAgICBjb25zdCBib3hXaXRoQm9yZGVyU3R5bGUgPSB7XG4gICAgICAuLi5zdHlsZXMuYm94LFxuICAgICAgYm9yZGVyQ29sb3I6IHN0YXJ0ZWRcbiAgICAgICAgPyBsZXNzb25Jc0FsbEFzc2Vzc21lbnRcbiAgICAgICAgICA/IGNvbG9yLmxldmVsX3N1Ym1pdHRlZFxuICAgICAgICAgIDogY29sb3IubGV2ZWxfcGVyZmVjdFxuICAgICAgICA6IGNvbG9yLmxpZ2h0X2dyYXksXG4gICAgICAuLi50aGlzLnByb3BzLnN0eWxlLFxuICAgIH07XG5cbiAgICBjb25zdCBwZXJmZWN0TGV2ZWxzID0ge1xuICAgICAgLi4uc3R5bGVzLmZpbGxlcixcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGV2ZWxfcGVyZmVjdCxcbiAgICAgIGhlaWdodDogcGVyZmVjdCxcbiAgICAgIHRvcDogUFJPR1JFU1NfQk9YX1NJWkUgLSBwZXJmZWN0LFxuICAgIH07XG5cbiAgICBjb25zdCBhc3Nlc3NtZW50TGV2ZWxzID0ge1xuICAgICAgLi4uc3R5bGVzLmZpbGxlcixcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3IubGV2ZWxfc3VibWl0dGVkLFxuICAgICAgaGVpZ2h0OiBwZXJmZWN0LFxuICAgICAgdG9wOiBQUk9HUkVTU19CT1hfU0laRSAtIHBlcmZlY3QsXG4gICAgfTtcblxuICAgIGNvbnN0IGluY29tcGxldGVMZXZlbHMgPSB7XG4gICAgICAuLi5zdHlsZXMuZmlsbGVyLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvci5sZXZlbF9ub3RfdHJpZWQsXG4gICAgICBoZWlnaHQ6IGluY29tcGxldGUsXG4gICAgfTtcblxuICAgIGNvbnN0IGltcGVyZmVjdExldmVscyA9IHtcbiAgICAgIC4uLnN0eWxlcy5maWxsZXIsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yLmxldmVsX3Bhc3NlZCxcbiAgICAgIGhlaWdodDogaW1wZXJmZWN0LFxuICAgIH07XG5cbiAgICBjb25zdCBsZXNzb25OdW1iZXJTdHlsZSA9IHtcbiAgICAgIC4uLnN0eWxlcy5sZXNzb25OdW1iZXIsXG4gICAgICBjb2xvcjogcGVyZmVjdCA/IGNvbG9yLndoaXRlIDogY29sb3IuY2hhcmNvYWwsXG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXtib3hXaXRoQm9yZGVyU3R5bGV9IGRhdGEtdGVzdGlkPVwicHJvZ3Jlc3MtYm94XCI+XG4gICAgICAgIHt0aGlzLnByb3BzLmxlc3Nvbk51bWJlciAmJiAoXG4gICAgICAgICAgPGRpdiBzdHlsZT17bGVzc29uTnVtYmVyU3R5bGV9Pnt0aGlzLnByb3BzLmxlc3Nvbk51bWJlcn08L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgICAge3ZpZXdlZCA/IChcbiAgICAgICAgICA8ZGl2IHN0eWxlPXt2aWV3ZWRTdHlsZX0gLz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgPGRpdiBzdHlsZT17aW5jb21wbGV0ZUxldmVsc30gLz5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e2ltcGVyZmVjdExldmVsc30gLz5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXsndWl0ZXN0LXBlcmZlY3QtYmFyJ31cbiAgICAgICAgICAgICAgc3R5bGU9e2xlc3NvbklzQWxsQXNzZXNzbWVudCA/IGFzc2Vzc21lbnRMZXZlbHMgOiBwZXJmZWN0TGV2ZWxzfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8Lz5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBib3g6IHtcbiAgICBoZWlnaHQ6IFBST0dSRVNTX0JPWF9TSVpFLFxuICAgIHdpZHRoOiBQUk9HUkVTU19CT1hfU0laRSxcbiAgICBib3JkZXJXaWR0aDogMSxcbiAgICBib3JkZXJTdHlsZTogJ3NvbGlkJyxcbiAgICBib3hTaXppbmc6ICdjb250ZW50LWJveCcsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gIH0sXG4gIGZpbGxlcjoge1xuICAgIHdpZHRoOiBQUk9HUkVTU19CT1hfU0laRSxcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgfSxcbiAgbGVzc29uTnVtYmVyOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgekluZGV4OiAyLFxuICAgIHBhZGRpbmdUb3A6IDIsXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICB3aWR0aDogUFJPR1JFU1NfQk9YX1NJWkUsXG4gICAgLi4uZm9udENvbnN0YW50c1snbWFpbi1mb250LXJlZ3VsYXInXSxcbiAgfSxcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHtzdHVkZW50VHlwZX0gZnJvbSAnQGNkby9hcHBzL3RlbXBsYXRlcy9wcm9ncmVzcy9wcm9ncmVzc1R5cGVzJztcblxuLyoqXG4gKiBTaGFwZSBmb3IgdW5pdERhdGFcbiAqIFRoZSBkYXRhIHdlIGdldCBmcm9tIHRoZSBzZXJ2ZXIncyBjYWxsIHRvIHVuaXQuc3VtbWFyaXplLiBUaGUgZm9ybWF0XG4gKiBlbmRzIHVwIGJlaW5nIHNpbWlsYXIgdG8gdGhhdCB3aGljaCB3ZSBzZW5kIHRvIGluaXRQcm9ncmVzcyBpbiBwcm9ncmVzc1JlZHV4LlxuICogVGhlIGltcG9ydGFudCBwYXJ0IGlzIHVuaXREYXRhLmxlc3NvbnMsIHdoaWNoIGdldHMgdXNlZCBieSBsZXZlbHNXaXRoTGVzc29uXG4gKiBOb3RlOiB1bml0IHdhcyBwcmV2aW91c2x5IG5hbWVkIHNjcmlwdFxuICovXG5leHBvcnQgY29uc3QgdW5pdERhdGFQcm9wVHlwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIGlkOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGNzZjogUHJvcFR5cGVzLmJvb2wsXG4gIGhhc1N0YW5kYXJkczogUHJvcFR5cGVzLmJvb2wsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBwYXRoOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBsZXNzb25zOiBQcm9wVHlwZXMuYXJyYXlPZihcbiAgICBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgbGV2ZWxzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub2JqZWN0KS5pc1JlcXVpcmVkLFxuICAgIH0pXG4gICksXG4gIGZhbWlseV9uYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB2ZXJzaW9uX3llYXI6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG59KTtcblxuLy8gVHlwZXMgb2Ygdmlld3Mgb2YgdGhlIHByb2dyZXNzIHRhYlxuZXhwb3J0IGNvbnN0IFZpZXdUeXBlID0ge1xuICBTVU1NQVJZOiAnc3VtbWFyeScsIC8vIGxlc3NvbnNcbiAgREVUQUlMOiAnZGV0YWlsJywgLy8gbGV2ZWxzXG4gIFNUQU5EQVJEUzogJ3N0YW5kYXJkcycsXG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFN0dWRlbnRUYWJsZVJvd1xuICogQW4gb2JqZWN0IHdyYXBwaW5nIGFyb3VuZCBgc3R1ZGVudFR5cGVgIHVzZWQgdG8gbWFuYWdlIHRoZVxuICogZXhwYW5kZWQvY29sbGFwc2VkIHN0YXRlIG9mIHNlY3Rpb24gcHJvZ3Jlc3MgdGFibGUgcm93cy5cbiAqXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaWRcbiAqIEBwcm9wZXJ0eSB7c3R1ZGVudFR5cGV9IHN0dWRlbnRcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBleHBhbnNpb25JbmRleCAwIGZvciB0aGUgcHJpbWFyeSByb3csXG4gKiBvdGhlcndpc2UgMS1iYXNlZCBpbmRleCBvZiBleHBhbmRlZCByb3dcbiAqIEBwcm9wZXJ0eSB7Ym9vbH0gaXNFeHBhbmRlZCB1c2VkIGJ5IHByaW1hcnkgcm93IHRvIHRyYWNrIHN0YXRlXG4gKiBAcHJvcGVydHkge2Jvb2x9IHVzZURhcmtCYWNrZ3JvdW5kIHVzZWQgYnkgcHJpbWFyeSByb3cgdG8gZGV0ZXJtaW5lIGJhY2tncm91bmQgY29sb3JcbiAqL1xuZXhwb3J0IGNvbnN0IHN0dWRlbnRUYWJsZVJvd1R5cGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBpZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBzdHVkZW50OiBzdHVkZW50VHlwZS5pc1JlcXVpcmVkLFxuICBleHBhbnNpb25JbmRleDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBpc0V4cGFuZGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgdXNlRGFya0JhY2tncm91bmQ6IFByb3BUeXBlcy5ib29sLFxufSk7XG5cbmV4cG9ydCBjb25zdCB0b29sdGlwSWRGb3JTdHVkZW50ID0gc3R1ZGVudElkID0+XG4gIGB0b29sdGlwSWRGb3JTdHVkZW50JHtzdHVkZW50SWR9YDtcblxuZXhwb3J0IGNvbnN0IHNjcm9sbGJhcldpZHRoID0gZ2V0U2Nyb2xsYmFyV2lkdGgoKTtcblxuZnVuY3Rpb24gZ2V0U2Nyb2xsYmFyV2lkdGgoKSB7XG4gIC8vIENyZWF0aW5nIGludmlzaWJsZSBjb250YWluZXJcbiAgY29uc3Qgb3V0ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgb3V0ZXIuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuICBvdXRlci5zdHlsZS5vdmVyZmxvdyA9ICdzY3JvbGwnOyAvLyBmb3JjaW5nIHNjcm9sbGJhciB0byBhcHBlYXJcbiAgb3V0ZXIuc3R5bGUubXNPdmVyZmxvd1N0eWxlID0gJ3Njcm9sbGJhcic7IC8vIG5lZWRlZCBmb3IgV2luSlMgYXBwc1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG91dGVyKTtcblxuICAvLyBDcmVhdGluZyBpbm5lciBlbGVtZW50IGFuZCBwbGFjaW5nIGl0IGluIHRoZSBjb250YWluZXJcbiAgY29uc3QgaW5uZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgb3V0ZXIuYXBwZW5kQ2hpbGQoaW5uZXIpO1xuXG4gIC8vIENhbGN1bGF0aW5nIGRpZmZlcmVuY2UgYmV0d2VlbiBjb250YWluZXIncyBmdWxsIHdpZHRoIGFuZCB0aGUgY2hpbGQgd2lkdGhcbiAgY29uc3Qgc2Nyb2xsYmFyV2lkdGggPSBvdXRlci5vZmZzZXRXaWR0aCAtIGlubmVyLm9mZnNldFdpZHRoO1xuXG4gIC8vIFJlbW92aW5nIHRlbXBvcmFyeSBlbGVtZW50cyBmcm9tIHRoZSBET01cbiAgb3V0ZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvdXRlcik7XG5cbiAgcmV0dXJuIHNjcm9sbGJhcldpZHRoO1xufVxuIiwiaW1wb3J0IHtTRVRfU0NSSVBUfSBmcm9tICdAY2RvL2FwcHMvcmVkdXgvdW5pdFNlbGVjdGlvblJlZHV4JztcbmltcG9ydCBmaXJlaG9zZUNsaWVudCBmcm9tICcuLi8uLi9saWIvdXRpbC9maXJlaG9zZSc7XG5pbXBvcnQge1ZpZXdUeXBlfSBmcm9tICcuL3NlY3Rpb25Qcm9ncmVzc0NvbnN0YW50cyc7XG5cbmNvbnN0IFNFVF9DVVJSRU5UX1ZJRVcgPSAnc2VjdGlvblByb2dyZXNzL1NFVF9DVVJSRU5UX1ZJRVcnO1xuY29uc3QgU0VUX0xFU1NPTl9PRl9JTlRFUkVTVCA9ICdzZWN0aW9uUHJvZ3Jlc3MvU0VUX0xFU1NPTl9PRl9JTlRFUkVTVCc7XG5jb25zdCBTVEFSVF9MT0FESU5HX1BST0dSRVNTID0gJ3NlY3Rpb25Qcm9ncmVzcy9TVEFSVF9MT0FESU5HX1BST0dSRVNTJztcbmNvbnN0IEZJTklTSF9MT0FESU5HX1BST0dSRVNTID0gJ3NlY3Rpb25Qcm9ncmVzcy9GSU5JU0hfTE9BRElOR19QUk9HUkVTUyc7XG5jb25zdCBTVEFSVF9SRUZSRVNISU5HX1BST0dSRVNTID0gJ3NlY3Rpb25Qcm9ncmVzcy9TVEFSVF9SRUZSRVNISU5HX1BST0dSRVNTJztcbmNvbnN0IEZJTklTSF9SRUZSRVNISU5HX1BST0dSRVNTID0gJ3NlY3Rpb25Qcm9ncmVzcy9GSU5JU0hfUkVGUkVTSElOR19QUk9HUkVTUyc7XG5jb25zdCBBRERfREFUQV9CWV9VTklUID0gJ3NlY3Rpb25Qcm9ncmVzcy9BRERfREFUQV9CWV9VTklUJztcblxuLy8gQWN0aW9uIGNyZWF0b3JzXG5leHBvcnQgY29uc3Qgc3RhcnRMb2FkaW5nUHJvZ3Jlc3MgPSAoKSA9PiAoe3R5cGU6IFNUQVJUX0xPQURJTkdfUFJPR1JFU1N9KTtcbmV4cG9ydCBjb25zdCBmaW5pc2hMb2FkaW5nUHJvZ3Jlc3MgPSAoKSA9PiAoe3R5cGU6IEZJTklTSF9MT0FESU5HX1BST0dSRVNTfSk7XG5leHBvcnQgY29uc3Qgc3RhcnRSZWZyZXNoaW5nUHJvZ3Jlc3MgPSAoKSA9PiAoe1xuICB0eXBlOiBTVEFSVF9SRUZSRVNISU5HX1BST0dSRVNTLFxufSk7XG5leHBvcnQgY29uc3QgZmluaXNoUmVmcmVzaGluZ1Byb2dyZXNzID0gKCkgPT4gKHtcbiAgdHlwZTogRklOSVNIX1JFRlJFU0hJTkdfUFJPR1JFU1MsXG59KTtcbmV4cG9ydCBjb25zdCBzZXRMZXNzb25PZkludGVyZXN0ID0gbGVzc29uT2ZJbnRlcmVzdCA9PiAoe1xuICB0eXBlOiBTRVRfTEVTU09OX09GX0lOVEVSRVNULFxuICBsZXNzb25PZkludGVyZXN0LFxufSk7XG5leHBvcnQgY29uc3Qgc2V0Q3VycmVudFZpZXcgPSB2aWV3VHlwZSA9PiAoe3R5cGU6IFNFVF9DVVJSRU5UX1ZJRVcsIHZpZXdUeXBlfSk7XG5leHBvcnQgY29uc3QgYWRkRGF0YUJ5VW5pdCA9IGRhdGEgPT4gKHtcbiAgdHlwZTogQUREX0RBVEFfQllfVU5JVCxcbiAgZGF0YSxcbn0pO1xuXG5jb25zdCBJTklUSUFMX0xFU1NPTl9PRl9JTlRFUkVTVCA9IDE7XG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgc2VjdGlvbjoge30sXG4gIGN1cnJlbnRWaWV3OiBWaWV3VHlwZS5TVU1NQVJZLFxuICB1bml0RGF0YUJ5VW5pdDoge30sXG4gIHN0dWRlbnRMZXZlbFByb2dyZXNzQnlVbml0OiB7fSxcbiAgc3R1ZGVudExlc3NvblByb2dyZXNzQnlVbml0OiB7fSxcbiAgc3R1ZGVudExhc3RVcGRhdGVCeVVuaXQ6IHt9LFxuICBsZXNzb25PZkludGVyZXN0OiBJTklUSUFMX0xFU1NPTl9PRl9JTlRFUkVTVCxcbiAgaXNMb2FkaW5nUHJvZ3Jlc3M6IGZhbHNlLFxuICBpc1JlZnJlc2hpbmdQcm9ncmVzczogZmFsc2UsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZWN0aW9uUHJvZ3Jlc3Moc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikge1xuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNFVF9TQ1JJUFQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBsZXNzb25PZkludGVyZXN0OiBJTklUSUFMX0xFU1NPTl9PRl9JTlRFUkVTVCxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gU0VUX0NVUlJFTlRfVklFVykge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIGN1cnJlbnRWaWV3OiBhY3Rpb24udmlld1R5cGUsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNUQVJUX0xPQURJTkdfUFJPR1JFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc0xvYWRpbmdQcm9ncmVzczogdHJ1ZSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gRklOSVNIX0xPQURJTkdfUFJPR1JFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc0xvYWRpbmdQcm9ncmVzczogZmFsc2UsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNUQVJUX1JFRlJFU0hJTkdfUFJPR1JFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc1JlZnJlc2hpbmdQcm9ncmVzczogdHJ1ZSxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gRklOSVNIX1JFRlJFU0hJTkdfUFJPR1JFU1MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBpc1JlZnJlc2hpbmdQcm9ncmVzczogZmFsc2UsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNFVF9MRVNTT05fT0ZfSU5URVJFU1QpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBsZXNzb25PZkludGVyZXN0OiBhY3Rpb24ubGVzc29uT2ZJbnRlcmVzdCxcbiAgICB9O1xuICB9XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gQUREX0RBVEFfQllfVU5JVCkge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHVuaXREYXRhQnlVbml0OiB7XG4gICAgICAgIC4uLnN0YXRlLnVuaXREYXRhQnlVbml0LFxuICAgICAgICAuLi5hY3Rpb24uZGF0YS51bml0RGF0YUJ5VW5pdCxcbiAgICAgIH0sXG4gICAgICBzdHVkZW50TGV2ZWxQcm9ncmVzc0J5VW5pdDoge1xuICAgICAgICAuLi5zdGF0ZS5zdHVkZW50TGV2ZWxQcm9ncmVzc0J5VW5pdCxcbiAgICAgICAgLi4uYWN0aW9uLmRhdGEuc3R1ZGVudExldmVsUHJvZ3Jlc3NCeVVuaXQsXG4gICAgICB9LFxuICAgICAgc3R1ZGVudExlc3NvblByb2dyZXNzQnlVbml0OiB7XG4gICAgICAgIC4uLnN0YXRlLnN0dWRlbnRMZXNzb25Qcm9ncmVzc0J5VW5pdCxcbiAgICAgICAgLi4uYWN0aW9uLmRhdGEuc3R1ZGVudExlc3NvblByb2dyZXNzQnlVbml0LFxuICAgICAgfSxcbiAgICAgIHN0dWRlbnRMYXN0VXBkYXRlQnlVbml0OiB7XG4gICAgICAgIC4uLnN0YXRlLnN0dWRlbnRMYXN0VXBkYXRlQnlVbml0LFxuICAgICAgICAuLi5hY3Rpb24uZGF0YS5zdHVkZW50TGFzdFVwZGF0ZUJ5VW5pdCxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBzdGF0ZTtcbn1cblxuZXhwb3J0IGNvbnN0IGp1bXBUb0xlc3NvbkRldGFpbHMgPSBsZXNzb25PZkludGVyZXN0ID0+IHtcbiAgcmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcbiAgICBjb25zdCBzdGF0ZSA9IGdldFN0YXRlKCk7XG4gICAgZGlzcGF0Y2goc2V0TGVzc29uT2ZJbnRlcmVzdChsZXNzb25PZkludGVyZXN0KSk7XG4gICAgZGlzcGF0Y2goc2V0Q3VycmVudFZpZXcoVmlld1R5cGUuREVUQUlMKSk7XG4gICAgZmlyZWhvc2VDbGllbnQucHV0UmVjb3JkKFxuICAgICAge1xuICAgICAgICBzdHVkeTogJ3RlYWNoZXJfZGFzaGJvYXJkX2FjdGlvbnMnLFxuICAgICAgICBzdHVkeV9ncm91cDogJ3Byb2dyZXNzJyxcbiAgICAgICAgZXZlbnQ6ICd2aWV3X2NoYW5nZV90b2dnbGUnLFxuICAgICAgICBkYXRhX2pzb246IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBzZWN0aW9uX2lkOiBzdGF0ZS50ZWFjaGVyU2VjdGlvbnMuc2VsZWN0ZWRTZWN0aW9uSWQsXG4gICAgICAgICAgb2xkX3ZpZXc6IFZpZXdUeXBlLlNVTU1BUlksXG4gICAgICAgICAgbmV3X3ZpZXc6IFZpZXdUeXBlLkRFVEFJTCxcbiAgICAgICAgICBzY3JpcHRfaWQ6IHN0YXRlLnVuaXRTZWxlY3Rpb24uc2NyaXB0SWQsXG4gICAgICAgIH0pLFxuICAgICAgfSxcbiAgICAgIHtpbmNsdWRlVXNlcklkOiB0cnVlfVxuICAgICk7XG4gIH07XG59O1xuXG4vLyBTZWxlY3RvciBmdW5jdGlvbnNcblxuLyoqXG4gKiBSZXRyaWV2ZXMgdGhlIHVuaXQgZGF0YSBmb3IgdGhlIHNlY3Rpb24gaW4gdGhlIHNlbGVjdGVkIHVuaXRcbiAqIEByZXR1cm5zIHt1bml0RGF0YVByb3BUeXBlfSBvYmplY3QgY29udGFpbmluZyBtZXRhZGF0YSBhYm91dCB0aGUgdW5pdCBzdHJ1Y3R1cmVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldEN1cnJlbnRVbml0RGF0YSA9IHN0YXRlID0+IHtcbiAgcmV0dXJuIHN0YXRlLnNlY3Rpb25Qcm9ncmVzcy51bml0RGF0YUJ5VW5pdFtzdGF0ZS51bml0U2VsZWN0aW9uLnNjcmlwdElkXTtcbn07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvZ3Jlc3NCb3ggZnJvbSAnLi4vUHJvZ3Jlc3NCb3gnO1xuaW1wb3J0IGZpcmVob3NlQ2xpZW50IGZyb20gJy4uLy4uLy4uL2xpYi91dGlsL2ZpcmVob3NlJztcbmltcG9ydCB7Y29ubmVjdH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuXG5jbGFzcyBQcm9ncmVzc0JveEZvckxlc3Nvbk51bWJlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgY29tcGxldGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpblByb2dyZXNzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsZXNzb25OdW1iZXI6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgdG9vbHRpcElkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGxpbmtUb0xlc3NvblBsYW46IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc2VjdGlvbklkOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIHNjcmlwdElkOiBQcm9wVHlwZXMubnVtYmVyLFxuICB9O1xuXG4gIGhhbmRsZUNsaWNrID0gKCkgPT4ge1xuICAgIGZpcmVob3NlQ2xpZW50LnB1dFJlY29yZChcbiAgICAgIHtcbiAgICAgICAgc3R1ZHk6ICd0ZWFjaGVyX2Rhc2hib2FyZF9hY3Rpb25zJyxcbiAgICAgICAgc3R1ZHlfZ3JvdXA6ICdzdGFuZGFyZHMnLFxuICAgICAgICBldmVudDogJ2NsaWNrX2xlc3Nvbl9wcm9ncmVzc19ib3gnLFxuICAgICAgICBkYXRhX2pzb246IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBsaW5rOiB0aGlzLnByb3BzLmxpbmtUb0xlc3NvblBsYW4sXG4gICAgICAgICAgc2VjdGlvbl9pZDogdGhpcy5wcm9wcy5zZWN0aW9uSWQsXG4gICAgICAgICAgc2NyaXB0X2lkOiB0aGlzLnByb3BzLnNjcmlwdElkLFxuICAgICAgICAgIGluX3JlcG9ydDogd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKCdzdGFuZGFyZHNfcmVwb3J0JyksXG4gICAgICAgIH0pLFxuICAgICAgfSxcbiAgICAgIHtpbmNsdWRlVXNlcklkOiB0cnVlfVxuICAgICk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtjb21wbGV0ZWQsIGluUHJvZ3Jlc3MsIGxlc3Nvbk51bWJlciwgdG9vbHRpcElkLCBsaW5rVG9MZXNzb25QbGFufSA9XG4gICAgICB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHN0YXJ0ZWQgPSBjb21wbGV0ZWQgfHwgaW5Qcm9ncmVzcztcbiAgICBjb25zdCB3b3JraW5nT24gPSBpblByb2dyZXNzICYmICFjb21wbGV0ZWQ7XG4gICAgY29uc3QgcHJvZ3Jlc3NCb3ggPSAoXG4gICAgICA8UHJvZ3Jlc3NCb3hcbiAgICAgICAgc3R5bGU9e3N0eWxlcy5sZXNzb25Cb3h9XG4gICAgICAgIHN0YXJ0ZWQ9e3N0YXJ0ZWR9XG4gICAgICAgIGluY29tcGxldGU9e3N0YXJ0ZWQgPyAwIDogMjB9XG4gICAgICAgIGltcGVyZmVjdD17d29ya2luZ09uID8gMjAgOiAwfVxuICAgICAgICBwZXJmZWN0PXtjb21wbGV0ZWQgPyAyMCA6IDB9XG4gICAgICAgIGxlc3Nvbk51bWJlcj17bGVzc29uTnVtYmVyfVxuICAgICAgLz5cbiAgICApO1xuXG4gICAgaWYgKGxpbmtUb0xlc3NvblBsYW4pIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxhXG4gICAgICAgICAgaHJlZj17bGlua1RvTGVzc29uUGxhbn1cbiAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgIGRhdGEtZm9yPXt0b29sdGlwSWR9XG4gICAgICAgICAgZGF0YS10aXBcbiAgICAgICAgICBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfVxuICAgICAgICA+XG4gICAgICAgICAge3Byb2dyZXNzQm94fVxuICAgICAgICA8L2E+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gcHJvZ3Jlc3NCb3g7XG4gICAgfVxuICB9XG59XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgbGVzc29uQm94OiB7XG4gICAgbWFyZ2luUmlnaHQ6IDUsXG4gICAgbWFyZ2luTGVmdDogNSxcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBVbmNvbm5lY3RlZFByb2dyZXNzQm94Rm9yTGVzc29uTnVtYmVyID0gUHJvZ3Jlc3NCb3hGb3JMZXNzb25OdW1iZXI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3Qoc3RhdGUgPT4gKHtcbiAgc2VjdGlvbklkOiBzdGF0ZS50ZWFjaGVyU2VjdGlvbnMuc2VsZWN0ZWRTZWN0aW9uSWQsXG4gIHNjcmlwdElkOiBzdGF0ZS51bml0U2VsZWN0aW9uLnNjcmlwdElkLFxufSkpKFByb2dyZXNzQm94Rm9yTGVzc29uTnVtYmVyKTtcbiIsImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQge1Rlc3RSZXN1bHRzfSBmcm9tICdAY2RvL2FwcHMvY29uc3RhbnRzJztcbmltcG9ydCB7VGVhY2hlclNjb3Jlc30gZnJvbSAnLi9zdGFuZGFyZHNDb25zdGFudHMnO1xuXG5jb25zdCBTRVRfU1RBTkRBUkRTX0RBVEEgPSAnc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzL1NFVF9TVEFOREFSRFNfREFUQSc7XG5jb25zdCBTRVRfVEVBQ0hFUl9DT01NRU5UX0ZPUl9SRVBPUlQgPVxuICAnc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzL1NFVF9URUFDSEVSX0NPTU1FTlRfRk9SX1JFUE9SVCc7XG5jb25zdCBTRVRfU0VMRUNURURfTEVTU09OUyA9ICdzZWN0aW9uU3RhbmRhcmRzUHJvZ3Jlc3MvU0VUX1NFTEVDVEVEX0xFU1NPTlMnO1xuY29uc3QgU0VUX1NUVURFTlRfTEVWRUxfU0NPUkVTID1cbiAgJ3NlY3Rpb25TdGFuZGFyZHNQcm9ncmVzcy9TRVRfU1RVREVOVF9MRVZFTF9TQ09SRVMnO1xuXG4vLyBBY3Rpb24gY3JlYXRvcnNcbmV4cG9ydCBjb25zdCBzZXRTdGFuZGFyZHNEYXRhID0gc3RhbmRhcmRzRGF0YSA9PiB7XG4gIHJldHVybiB7dHlwZTogU0VUX1NUQU5EQVJEU19EQVRBLCBzdGFuZGFyZHNEYXRhOiBzdGFuZGFyZHNEYXRhfTtcbn07XG5leHBvcnQgY29uc3Qgc2V0VGVhY2hlckNvbW1lbnRGb3JSZXBvcnQgPSB0ZWFjaGVyQ29tbWVudCA9PiAoe1xuICB0eXBlOiBTRVRfVEVBQ0hFUl9DT01NRU5UX0ZPUl9SRVBPUlQsXG4gIHRlYWNoZXJDb21tZW50LFxufSk7XG5leHBvcnQgY29uc3Qgc2V0U2VsZWN0ZWRMZXNzb25zID0gc2VsZWN0ZWQgPT4gKHtcbiAgdHlwZTogU0VUX1NFTEVDVEVEX0xFU1NPTlMsXG4gIHNlbGVjdGVkLFxufSk7XG5leHBvcnQgY29uc3Qgc2V0U3R1ZGVudExldmVsU2NvcmVzID0gKHNjcmlwdElkLCBsZXNzb25JZCwgc2NvcmVzRGF0YSkgPT4gKHtcbiAgdHlwZTogU0VUX1NUVURFTlRfTEVWRUxfU0NPUkVTLFxuICBzY3JpcHRJZCxcbiAgbGVzc29uSWQsXG4gIHNjb3Jlc0RhdGEsXG59KTtcblxuLy8gSW5pdGlhbCBTdGF0ZVxuY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICBzdGFuZGFyZHNEYXRhOiBbXSxcbiAgdGVhY2hlckNvbW1lbnQ6IG51bGwsXG4gIHNlbGVjdGVkTGVzc29uczogW10sXG4gIHN0dWRlbnRMZXZlbFNjb3Jlc0J5TGVzc29uOiB7fSxcbn07XG5cbmZ1bmN0aW9uIHNvcnRCeVNob3J0Y29kZShzdGFuZGFyZHNCeUNhdGVnb3J5KSB7XG4gIHJldHVybiBfLm9yZGVyQnkoc3RhbmRhcmRzQnlDYXRlZ29yeSwgJ3Nob3J0Y29kZScsICdhc2MnKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pIHtcbiAgaWYgKGFjdGlvbi50eXBlID09PSBTRVRfU1RBTkRBUkRTX0RBVEEpIHtcbiAgICBjb25zdCBzb3J0ZWRCeUNhdGVnb3J5ID0gXy5vcmRlckJ5KFxuICAgICAgYWN0aW9uLnN0YW5kYXJkc0RhdGEsXG4gICAgICAnY2F0ZWdvcnlfZGVzY3JpcHRpb24nLFxuICAgICAgJ2FzYydcbiAgICApO1xuICAgIGNvbnN0IGdyb3VwZWRTdGFuZGFyZHMgPSBfLm9yZGVyQnkoXG4gICAgICBfLmdyb3VwQnkoc29ydGVkQnlDYXRlZ29yeSwgJ2NhdGVnb3J5X2Rlc2NyaXB0aW9uJyksXG4gICAgICAnY2F0ZWdvcnlfZGVzY3JpcHRpb24nLFxuICAgICAgJ2FzYydcbiAgICApO1xuICAgIGNvbnN0IHNvcnRlZFN0YW5kYXJkcyA9IF8ubWFwKGdyb3VwZWRTdGFuZGFyZHMsIHNvcnRCeVNob3J0Y29kZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgc3RhbmRhcmRzRGF0YTogXy5mbGF0dGVuKHNvcnRlZFN0YW5kYXJkcyksXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNFVF9URUFDSEVSX0NPTU1FTlRfRk9SX1JFUE9SVCkge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHRlYWNoZXJDb21tZW50OiBhY3Rpb24udGVhY2hlckNvbW1lbnQsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNFVF9TRUxFQ1RFRF9MRVNTT05TKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgc2VsZWN0ZWRMZXNzb25zOiBhY3Rpb24uc2VsZWN0ZWQsXG4gICAgfTtcbiAgfVxuICBpZiAoYWN0aW9uLnR5cGUgPT09IFNFVF9TVFVERU5UX0xFVkVMX1NDT1JFUykge1xuICAgIGNvbnN0IHByZXZMZXZlbFNjb3JlQnlMZXNzb24gPSBzdGF0ZS5zdHVkZW50TGV2ZWxTY29yZXNCeUxlc3NvbltcbiAgICAgIGFjdGlvbi5zY3JpcHRJZFxuICAgIF1cbiAgICAgID8gc3RhdGUuc3R1ZGVudExldmVsU2NvcmVzQnlMZXNzb25bYWN0aW9uLnNjcmlwdElkXVthY3Rpb24ubGVzc29uSWRdXG4gICAgICA6IHt9O1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHN0dWRlbnRMZXZlbFNjb3Jlc0J5TGVzc29uOiB7XG4gICAgICAgIC4uLnN0YXRlLnN0dWRlbnRMZXZlbFNjb3Jlc0J5TGVzc29uLFxuICAgICAgICBbYWN0aW9uLnNjcmlwdElkXToge1xuICAgICAgICAgIC4uLnN0YXRlLnN0dWRlbnRMZXZlbFNjb3Jlc0J5TGVzc29uW2FjdGlvbi5zY3JpcHRJZF0sXG4gICAgICAgICAgW2FjdGlvbi5sZXNzb25JZF06IHtcbiAgICAgICAgICAgIC4uLnByZXZMZXZlbFNjb3JlQnlMZXNzb24sXG4gICAgICAgICAgICAuLi5hY3Rpb24uc2NvcmVzRGF0YVthY3Rpb24uc2NyaXB0SWRdW2FjdGlvbi5sZXNzb25JZF0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICByZXR1cm4gc3RhdGU7XG59XG5cbmZ1bmN0aW9uIGdldExlc3NvbnNGb3JDdXJyZW50U2NyaXB0KHN0YXRlKSB7XG4gIGlmIChcbiAgICBzdGF0ZS51bml0U2VsZWN0aW9uLnNjcmlwdElkICYmXG4gICAgc3RhdGUuc2VjdGlvblByb2dyZXNzLnVuaXREYXRhQnlVbml0ICYmXG4gICAgc3RhdGUuc2VjdGlvblByb2dyZXNzLnVuaXREYXRhQnlVbml0W3N0YXRlLnVuaXRTZWxlY3Rpb24uc2NyaXB0SWRdXG4gICkge1xuICAgIGNvbnN0IGxlc3NvbnMgPVxuICAgICAgc3RhdGUuc2VjdGlvblByb2dyZXNzLnVuaXREYXRhQnlVbml0W3N0YXRlLnVuaXRTZWxlY3Rpb24uc2NyaXB0SWRdXG4gICAgICAgIC5sZXNzb25zO1xuICAgIHJldHVybiBsZXNzb25zO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRMZXNzb25TZWxlY3Rpb25TdGF0dXMoc3RhdGUsIGxlc3NvbklkKSB7XG4gIGNvbnN0IHNlbGVjdGVkID0gXy5tYXAoXG4gICAgc3RhdGUuc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzLnNlbGVjdGVkTGVzc29ucyxcbiAgICAnaWQnXG4gICkuaW5jbHVkZXMobGVzc29uSWQpO1xuICByZXR1cm4gc2VsZWN0ZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRVbnBsdWdnZWRMZXNzb25zRm9yU2NyaXB0KHN0YXRlKSB7XG4gIGxldCB1bnBsdWdnZWRMZXNzb25zID0gW107XG4gIGNvbnN0IGxlc3NvbnMgPSBnZXRMZXNzb25zRm9yQ3VycmVudFNjcmlwdChzdGF0ZSk7XG5cbiAgaWYgKGxlc3NvbnMpIHtcbiAgICB1bnBsdWdnZWRMZXNzb25zID0gXy5maWx0ZXIobGVzc29ucywgZnVuY3Rpb24gKGxlc3Nvbikge1xuICAgICAgcmV0dXJuIGxlc3Nvbi51bnBsdWdnZWQ7XG4gICAgfSk7XG5cbiAgICB1bnBsdWdnZWRMZXNzb25zLmZvckVhY2gobGVzc29uID0+IHtcbiAgICAgIGNvbnN0IGxlc3NvbkNvbXBsZXRpb25TdGF0dXMgPSBnZXRMZXNzb25Db21wbGV0aW9uU3RhdHVzKFxuICAgICAgICBzdGF0ZSxcbiAgICAgICAgbGVzc29uLmlkXG4gICAgICApO1xuICAgICAgbGVzc29uWydjb21wbGV0ZWQnXSA9IGxlc3NvbkNvbXBsZXRpb25TdGF0dXMuY29tcGxldGVkO1xuICAgICAgbGVzc29uWydpblByb2dyZXNzJ10gPSBsZXNzb25Db21wbGV0aW9uU3RhdHVzLmluUHJvZ3Jlc3M7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBmaWx0ZXJMZXNzb25EYXRhKGxlc3Nvbikge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogbGVzc29uLmlkLFxuICAgICAgbmFtZTogbGVzc29uLm5hbWUsXG4gICAgICBudW1iZXI6IGxlc3Nvbi5wb3NpdGlvbixcbiAgICAgIHVybDogbGVzc29uLmxlc3Nvbl9wbGFuX2h0bWxfdXJsLFxuICAgICAgY29tcGxldGVkOiBsZXNzb24uY29tcGxldGVkLFxuICAgICAgaW5Qcm9ncmVzczogbGVzc29uLmluUHJvZ3Jlc3MsXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBfLm1hcCh1bnBsdWdnZWRMZXNzb25zLCBmaWx0ZXJMZXNzb25EYXRhKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE51bWJlckxlc3NvbnNDb21wbGV0ZWQoc3RhdGUpIHtcbiAgbGV0IGxlc3NvbnNDb21wbGV0ZWQgPSAwO1xuICBjb25zdCBsZXNzb25zID0gZ2V0TGVzc29uc0ZvckN1cnJlbnRTY3JpcHQoXG4gICAgc3RhdGUsXG4gICAgc3RhdGUudW5pdFNlbGVjdGlvbi5zY3JpcHRJZFxuICApO1xuXG4gIGlmIChsZXNzb25zKSB7XG4gICAgbGVzc29ucy5mb3JFYWNoKGxlc3NvbiA9PiB7XG4gICAgICBjb25zdCBsZXNzb25Db21wbGV0aW9uU3RhdHVzID0gZ2V0TGVzc29uQ29tcGxldGlvblN0YXR1cyhcbiAgICAgICAgc3RhdGUsXG4gICAgICAgIGxlc3Nvbi5pZFxuICAgICAgKTtcbiAgICAgIGlmIChsZXNzb25Db21wbGV0aW9uU3RhdHVzLmNvbXBsZXRlZCkge1xuICAgICAgICBsZXNzb25zQ29tcGxldGVkICs9IDE7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIGxlc3NvbnNDb21wbGV0ZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROdW1iZXJMZXNzb25zSW5TY3JpcHQoc3RhdGUpIHtcbiAgbGV0IG51bUxlc3NvbnMgPSAwO1xuICBjb25zdCBsZXNzb25zID0gZ2V0TGVzc29uc0ZvckN1cnJlbnRTY3JpcHQoXG4gICAgc3RhdGUsXG4gICAgc3RhdGUudW5pdFNlbGVjdGlvbi5zY3JpcHRJZFxuICApO1xuXG4gIGlmIChsZXNzb25zKSB7XG4gICAgbnVtTGVzc29ucyA9IGxlc3NvbnMubGVuZ3RoO1xuICB9XG4gIHJldHVybiBudW1MZXNzb25zO1xufVxuXG5leHBvcnQgY29uc3QgbGVzc29uc0J5U3RhbmRhcmQgPSBzdGF0ZSA9PiB7XG4gIGxldCBsZXNzb25zQnlTdGFuZGFyZElkID0ge307XG4gIGNvbnN0IGxlc3NvbnMgPSBnZXRMZXNzb25zRm9yQ3VycmVudFNjcmlwdChcbiAgICBzdGF0ZSxcbiAgICBzdGF0ZS51bml0U2VsZWN0aW9uLnNjcmlwdElkXG4gICk7XG5cbiAgaWYgKGxlc3NvbnMgJiYgc3RhdGUuc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzLnN0YW5kYXJkc0RhdGEpIHtcbiAgICBjb25zdCBzdGFuZGFyZHMgPSBzdGF0ZS5zZWN0aW9uU3RhbmRhcmRzUHJvZ3Jlc3Muc3RhbmRhcmRzRGF0YTtcblxuICAgIGNvbnN0IG51bVN0dWRlbnRzID1cbiAgICAgIHN0YXRlLnRlYWNoZXJTZWN0aW9ucy5zZWN0aW9uc1tzdGF0ZS50ZWFjaGVyU2VjdGlvbnMuc2VsZWN0ZWRTZWN0aW9uSWRdXG4gICAgICAgIC5zdHVkZW50Q291bnQ7XG5cbiAgICBzdGFuZGFyZHMuZm9yRWFjaChzdGFuZGFyZCA9PiB7XG4gICAgICBsZXQgYXNzb2NpYXRlZExlc3NvbnMgPSBbXTtcblxuICAgICAgbGVzc29ucy5mb3JFYWNoKGxlc3NvbiA9PiB7XG4gICAgICAgIGlmIChzdGFuZGFyZC5sZXNzb25faWRzLmluY2x1ZGVzKGxlc3Nvbi5pZCkpIHtcbiAgICAgICAgICBjb25zdCBsZXNzb25Db21wbGV0aW9uU3RhdHVzID0gZ2V0TGVzc29uQ29tcGxldGlvblN0YXR1cyhcbiAgICAgICAgICAgIHN0YXRlLFxuICAgICAgICAgICAgbGVzc29uLmlkXG4gICAgICAgICAgKTtcbiAgICAgICAgICBjb25zdCBsZXNzb25EZXRhaWxzID0ge1xuICAgICAgICAgICAgbmFtZTogbGVzc29uLm5hbWUsXG4gICAgICAgICAgICBsZXNzb25OdW1iZXI6IGxlc3Nvbi5yZWxhdGl2ZV9wb3NpdGlvbixcbiAgICAgICAgICAgIGNvbXBsZXRlZDogbGVzc29uQ29tcGxldGlvblN0YXR1cy5jb21wbGV0ZWQsXG4gICAgICAgICAgICBpblByb2dyZXNzOiBsZXNzb25Db21wbGV0aW9uU3RhdHVzLmluUHJvZ3Jlc3MsXG4gICAgICAgICAgICBudW1TdHVkZW50c0NvbXBsZXRlZDogbGVzc29uQ29tcGxldGlvblN0YXR1cy5udW1TdHVkZW50c0NvbXBsZXRlZCxcbiAgICAgICAgICAgIG51bVN0dWRlbnRzOiBudW1TdHVkZW50cyxcbiAgICAgICAgICAgIHVybDogbGVzc29uLmxlc3Nvbl9wbGFuX2h0bWxfdXJsLFxuICAgICAgICAgICAgdW5wbHVnZ2VkOiBsZXNzb24udW5wbHVnZ2VkLFxuICAgICAgICAgIH07XG4gICAgICAgICAgYXNzb2NpYXRlZExlc3NvbnMucHVzaChsZXNzb25EZXRhaWxzKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGxlc3NvbnNCeVN0YW5kYXJkSWRbc3RhbmRhcmQuaWRdID0gYXNzb2NpYXRlZExlc3NvbnM7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIGxlc3NvbnNCeVN0YW5kYXJkSWQ7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGVzc29uQ29tcGxldGlvblN0YXR1cyhzdGF0ZSwgbGVzc29uSWQpIHtcbiAgY29uc3Qgc2NyaXB0SWQgPSBzdGF0ZS51bml0U2VsZWN0aW9uLnNjcmlwdElkO1xuICBjb25zdCBsZXNzb25zID0gZ2V0TGVzc29uc0ZvckN1cnJlbnRTY3JpcHQoc3RhdGUsIHNjcmlwdElkKTtcbiAgaWYgKGxlc3NvbnMpIHtcbiAgICBjb25zdCBsZXNzb24gPSBfLmZpbmQobGVzc29ucywgWydpZCcsIGxlc3NvbklkXSk7XG4gICAgaWYgKGxlc3Nvbi51bnBsdWdnZWQpIHtcbiAgICAgIHJldHVybiBnZXRVbnBsdWdnZWRMZXNzb25Db21wbGV0aW9uU3RhdHVzKHN0YXRlLCBzY3JpcHRJZCwgbGVzc29uSWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZ2V0UGx1Z2dlZExlc3NvbkNvbXBsZXRpb25TdGF0dXMoc3RhdGUsIGxlc3Nvbik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRVbnBsdWdnZWRMZXNzb25Db21wbGV0aW9uU3RhdHVzKHN0YXRlLCBzY3JpcHRJZCwgbGVzc29uSWQpIHtcbiAgY29uc3QgY29tcGxldGlvbkJ5TGVzc29uID0ge1xuICAgIGNvbXBsZXRlZDogZ2V0TGVzc29uU2VsZWN0aW9uU3RhdHVzKHN0YXRlLCBsZXNzb25JZCksXG4gICAgaW5Qcm9ncmVzczogZmFsc2UsXG4gICAgbnVtU3R1ZGVudHNDb21wbGV0ZWQ6IGdldE51bWJlck9mU3R1ZGVudHNDb21wbGV0ZWRVbnBsdWdnZWRMZXNzb24oXG4gICAgICBzdGF0ZSxcbiAgICAgIHNjcmlwdElkLFxuICAgICAgbGVzc29uSWRcbiAgICApLFxuICB9O1xuXG4gIHJldHVybiBjb21wbGV0aW9uQnlMZXNzb247XG59XG5cbmZ1bmN0aW9uIGdldE51bWJlck9mU3R1ZGVudHNDb21wbGV0ZWRVbnBsdWdnZWRMZXNzb24oXG4gIHN0YXRlLFxuICBzY3JpcHRJZCxcbiAgbGVzc29uSWRcbikge1xuICBsZXQgY29tcGxldGlvbk51bWJlckJ5TGVzc29uID0gMDtcbiAgaWYgKFxuICAgIHN0YXRlLnNlY3Rpb25TdGFuZGFyZHNQcm9ncmVzcy5zdHVkZW50TGV2ZWxTY29yZXNCeUxlc3NvbiAmJlxuICAgIHN0YXRlLnNlY3Rpb25TdGFuZGFyZHNQcm9ncmVzcy5zdHVkZW50TGV2ZWxTY29yZXNCeUxlc3NvbltzY3JpcHRJZF0gJiZcbiAgICBzdGF0ZS5zZWN0aW9uU3RhbmRhcmRzUHJvZ3Jlc3Muc3R1ZGVudExldmVsU2NvcmVzQnlMZXNzb25bc2NyaXB0SWRdW1xuICAgICAgbGVzc29uSWRcbiAgICBdXG4gICkge1xuICAgIGNvbnN0IGxldmVsU2NvcmVzQnlTdHVkZW50ID1cbiAgICAgIHN0YXRlLnNlY3Rpb25TdGFuZGFyZHNQcm9ncmVzcy5zdHVkZW50TGV2ZWxTY29yZXNCeUxlc3NvbltzY3JpcHRJZF1bXG4gICAgICAgIGxlc3NvbklkXG4gICAgICBdO1xuXG4gICAgY29uc3Qgc3R1ZGVudFNjb3Jlc0NvbXBsZXRlID0gXy5maWx0ZXIoXG4gICAgICBfLnZhbHVlcyhsZXZlbFNjb3Jlc0J5U3R1ZGVudCksXG4gICAgICBmdW5jdGlvbiAoc3R1ZGVudFNjb3JlKSB7XG4gICAgICAgIHJldHVybiBfLmZpcnN0KF8udmFsdWVzKHN0dWRlbnRTY29yZSkpID09PSBUZWFjaGVyU2NvcmVzLkNPTVBMRVRFO1xuICAgICAgfVxuICAgICk7XG5cbiAgICBjb21wbGV0aW9uTnVtYmVyQnlMZXNzb24gPSBzdHVkZW50U2NvcmVzQ29tcGxldGUubGVuZ3RoO1xuICB9XG4gIHJldHVybiBjb21wbGV0aW9uTnVtYmVyQnlMZXNzb247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQbHVnZ2VkTGVzc29uQ29tcGxldGlvblN0YXR1cyhzdGF0ZSwgbGVzc29uKSB7XG4gIC8vIEEgbGVzc29uIGlzIFwiaW4gcHJvZ3Jlc3NcIiBmb3IgYSBzdHVkZW50IGlmIHRoZXkgaGF2ZSBjb21wbGV0ZWQgYXRcbiAgLy8gbGVhc3QgMjAlIG9mIHRoZSBsZXZlbHMgaW4gdGhlIGxlc3Nvbi5cbiAgY29uc3QgbGV2ZWxzUGVyTGVzc29uSW5Qcm9ncmVzc1RocmVzaG9sZCA9IDAuMjtcbiAgY29uc3Qgc3R1ZGVudHNQZXJTZWN0aW9uSW5Qcm9ncmVzc1RocmVzaG9sZCA9IDAuMjtcbiAgLy8gQSBsZXNzb24gaXMgXCJjb21wbGV0ZWRcIiBieSBhIHN0dWRlbnQgaWYgYXQgbGVhc3QgNjAlIG9mIHRoZSBsZXZlbHMgYXJlXG4gIC8vIGNvbXBsZXRlZC5cbiAgY29uc3QgbGV2ZWxzUGVyTGVzc29uQ29tcGxldGlvblRocmVzaG9sZCA9IDAuNjtcbiAgLy8gTGVzc29uIHN0YXR1cyBmb3IgYSBzZWN0aW9uIGlzIGRldGVybWluZWQgYnkgdGhlIGNvbXBsZXRpb24gc3RhdHVzIG9mXG4gIC8vIGxldmVscyBmb3IgODAlIG9mIHN0dWRlbnRzIGluIHRoZSBzZWN0aW9uLlxuICBjb25zdCBzdHVkZW50c1BlclNlY3Rpb25Db21wbGV0aW9uVGhyZXNob2xkID0gMC44O1xuXG4gIGxldCBjb21wbGV0aW9uQnlMZXNzb24gPSB7fTtcblxuICBpZiAoXG4gICAgc3RhdGUudW5pdFNlbGVjdGlvbi5zY3JpcHRJZCAmJlxuICAgIHN0YXRlLnNlY3Rpb25Qcm9ncmVzcy51bml0RGF0YUJ5VW5pdCAmJlxuICAgIHN0YXRlLnNlY3Rpb25Qcm9ncmVzcy5zdHVkZW50TGV2ZWxQcm9ncmVzc0J5VW5pdCAmJlxuICAgIHN0YXRlLnNlY3Rpb25Qcm9ncmVzcy5zdHVkZW50TGV2ZWxQcm9ncmVzc0J5VW5pdFtcbiAgICAgIHN0YXRlLnVuaXRTZWxlY3Rpb24uc2NyaXB0SWRcbiAgICBdICYmXG4gICAgc3RhdGUudGVhY2hlclNlY3Rpb25zLnNlY3Rpb25zICYmXG4gICAgc3RhdGUudGVhY2hlclNlY3Rpb25zLnNlbGVjdGVkU2VjdGlvbklkXG4gICkge1xuICAgIGNvbnN0IHNjcmlwdElkID0gc3RhdGUudW5pdFNlbGVjdGlvbi5zY3JpcHRJZDtcbiAgICBjb25zdCBudW1iZXJTdHVkZW50c0luU2VjdGlvbiA9XG4gICAgICBzdGF0ZS50ZWFjaGVyU2VjdGlvbnMuc2VjdGlvbnNbc3RhdGUudGVhY2hlclNlY3Rpb25zLnNlbGVjdGVkU2VjdGlvbklkXVxuICAgICAgICAuc3R1ZGVudENvdW50O1xuICAgIGNvbnN0IGxldmVsUHJvZ3Jlc3NCeVNjcmlwdCA9XG4gICAgICBzdGF0ZS5zZWN0aW9uUHJvZ3Jlc3Muc3R1ZGVudExldmVsUHJvZ3Jlc3NCeVVuaXRbc2NyaXB0SWRdO1xuXG4gICAgY29uc3Qgc3R1ZGVudElkcyA9IE9iamVjdC5rZXlzKGxldmVsUHJvZ3Jlc3NCeVNjcmlwdCk7XG4gICAgY29uc3QgbGV2ZWxJZHMgPSBfLm1hcChsZXNzb24ubGV2ZWxzLCAnaWQnKTtcbiAgICBsZXQgbnVtU3R1ZGVudHNDb21wbGV0ZWRMZXNzb24gPSAwO1xuICAgIGxldCBudW1TdHVkZW50c0luUHJvZ3Jlc3NMZXNzb24gPSAwO1xuICAgIHN0dWRlbnRJZHMuZm9yRWFjaChzdHVkZW50SWQgPT4ge1xuICAgICAgbGV0IG51bUxldmVsc0luTGVzc29uQ29tcGxldGVkQnlTdHVkZW50ID0gMDtcbiAgICAgIGxldmVsSWRzLmZvckVhY2gobGV2ZWxJZCA9PiB7XG4gICAgICAgIGNvbnN0IGxldmVsUHJvZ3Jlc3MgPSBsZXZlbFByb2dyZXNzQnlTY3JpcHRbc3R1ZGVudElkXVtsZXZlbElkXTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGxldmVsUHJvZ3Jlc3MgJiZcbiAgICAgICAgICBsZXZlbFByb2dyZXNzLnJlc3VsdCA+PSBUZXN0UmVzdWx0cy5NSU5JTVVNX1BBU1NfUkVTVUxUXG4gICAgICAgICkge1xuICAgICAgICAgIG51bUxldmVsc0luTGVzc29uQ29tcGxldGVkQnlTdHVkZW50Kys7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgY29uc3QgbGV2ZWxDb21wbGV0aW9uUmF0aW8gPVxuICAgICAgICBudW1MZXZlbHNJbkxlc3NvbkNvbXBsZXRlZEJ5U3R1ZGVudCAvIGxldmVsSWRzLmxlbmd0aDtcbiAgICAgIGlmIChsZXZlbENvbXBsZXRpb25SYXRpbyA+PSBsZXZlbHNQZXJMZXNzb25JblByb2dyZXNzVGhyZXNob2xkKSB7XG4gICAgICAgIG51bVN0dWRlbnRzSW5Qcm9ncmVzc0xlc3NvbisrO1xuICAgICAgfVxuICAgICAgaWYgKGxldmVsQ29tcGxldGlvblJhdGlvID49IGxldmVsc1Blckxlc3NvbkNvbXBsZXRpb25UaHJlc2hvbGQpIHtcbiAgICAgICAgbnVtU3R1ZGVudHNDb21wbGV0ZWRMZXNzb24rKztcbiAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBjb21wbGV0ZWQgPVxuICAgICAgbnVtU3R1ZGVudHNDb21wbGV0ZWRMZXNzb24gLyBudW1iZXJTdHVkZW50c0luU2VjdGlvbiA+PVxuICAgICAgc3R1ZGVudHNQZXJTZWN0aW9uQ29tcGxldGlvblRocmVzaG9sZDtcbiAgICBjb25zdCBpblByb2dyZXNzID1cbiAgICAgIG51bVN0dWRlbnRzSW5Qcm9ncmVzc0xlc3NvbiAvIG51bWJlclN0dWRlbnRzSW5TZWN0aW9uID49XG4gICAgICBzdHVkZW50c1BlclNlY3Rpb25JblByb2dyZXNzVGhyZXNob2xkO1xuICAgIGNvbXBsZXRpb25CeUxlc3NvblsnY29tcGxldGVkJ10gPSBjb21wbGV0ZWQ7XG4gICAgY29tcGxldGlvbkJ5TGVzc29uWydpblByb2dyZXNzJ10gPSBpblByb2dyZXNzO1xuICAgIGNvbXBsZXRpb25CeUxlc3NvblsnbnVtU3R1ZGVudHNDb21wbGV0ZWQnXSA9IG51bVN0dWRlbnRzQ29tcGxldGVkTGVzc29uO1xuICB9XG4gIHJldHVybiBjb21wbGV0aW9uQnlMZXNzb247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaFN0YW5kYXJkc0NvdmVyZWRGb3JTY3JpcHQoc2NyaXB0SWQpIHtcbiAgcmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcbiAgICAkLmFqYXgoe1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgICB1cmw6IGAvZGFzaGJvYXJkYXBpL3NjcmlwdF9zdGFuZGFyZHMvJHtzY3JpcHRJZH1gLFxuICAgIH0pLnRoZW4oZGF0YSA9PiB7XG4gICAgICBjb25zdCBzdGFuZGFyZHNEYXRhID0gZGF0YTtcbiAgICAgIGRpc3BhdGNoKHNldFN0YW5kYXJkc0RhdGEoc3RhbmRhcmRzRGF0YSkpO1xuICAgIH0pO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmV0Y2hTdHVkZW50TGV2ZWxTY29yZXMoc2NyaXB0SWQsIHNlY3Rpb25JZCkge1xuICByZXR1cm4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xuICAgIGxldCBzdGF0ZSA9IGdldFN0YXRlKCk7XG4gICAgY29uc3QgbnVtU3R1ZGVudHMgPVxuICAgICAgc3RhdGUudGVhY2hlclNlY3Rpb25zLnNlY3Rpb25zW3N0YXRlLnRlYWNoZXJTZWN0aW9ucy5zZWxlY3RlZFNlY3Rpb25JZF1cbiAgICAgICAgLnN0dWRlbnRDb3VudDtcbiAgICBsZXQgdW5wbHVnZ2VkTGVzc29uTGlzdCA9IGdldFVucGx1Z2dlZExlc3NvbnNGb3JTY3JpcHQoc3RhdGUpO1xuICAgIGNvbnN0IHVucGx1Z2dlZExlc3NvbklkcyA9IF8ubWFwKHVucGx1Z2dlZExlc3Nvbkxpc3QsICdpZCcpO1xuICAgIGNvbnN0IE5VTV9TVFVERU5UU19QRVJfUEFHRSA9IDUwO1xuICAgIGNvbnN0IG51bVBhZ2VzID0gTWF0aC5jZWlsKG51bVN0dWRlbnRzIC8gTlVNX1NUVURFTlRTX1BFUl9QQUdFKTtcbiAgICBjb25zdCByZXF1ZXN0cyA9IF8ucmFuZ2UoMSwgbnVtUGFnZXMgKyAxKS5tYXAoY3VycmVudFBhZ2UgPT4ge1xuICAgICAgY29uc3QgdXJsID0gYC9kYXNoYm9hcmRhcGkvdjEvdGVhY2hlcl9zY29yZXMvJHtzZWN0aW9uSWR9LyR7c2NyaXB0SWR9P3BhZ2U9JHtjdXJyZW50UGFnZX1gO1xuICAgICAgcmV0dXJuIGZldGNoKHVybCwge2NyZWRlbnRpYWxzOiAnaW5jbHVkZSd9KVxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgIGNvbnN0IHNjb3Jlc0RhdGEgPSBkYXRhO1xuICAgICAgICAgIHVucGx1Z2dlZExlc3Nvbklkcy5mb3JFYWNoKGxlc3NvbklkID0+XG4gICAgICAgICAgICBkaXNwYXRjaChzZXRTdHVkZW50TGV2ZWxTY29yZXMoc2NyaXB0SWQsIGxlc3NvbklkLCBzY29yZXNEYXRhKSlcbiAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICBQcm9taXNlLmFsbChyZXF1ZXN0cykudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICBsZXQgaW5pdGlhbENvbXBsZXRlZFVucGx1Z2dlZExlc3NvbnMgPVxuICAgICAgICBnZXRJbml0aWFsVW5wbHVnZ2VkTGVzc29uQ29tcGxldGlvblN0YXR1cyhnZXRTdGF0ZSgpLCBzY3JpcHRJZCk7XG4gICAgICBjb25zdCBsZXNzb25zVG9TZWxlY3QgPSBfLmZpbHRlcih1bnBsdWdnZWRMZXNzb25MaXN0LCBmdW5jdGlvbiAobGVzc29uKSB7XG4gICAgICAgIGlmIChpbml0aWFsQ29tcGxldGVkVW5wbHVnZ2VkTGVzc29ucy5pbmNsdWRlcyhsZXNzb24uaWQpKSB7XG4gICAgICAgICAgcmV0dXJuIGxlc3NvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBkaXNwYXRjaChzZXRTZWxlY3RlZExlc3NvbnMobGVzc29uc1RvU2VsZWN0KSk7XG4gICAgfSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldEluaXRpYWxVbnBsdWdnZWRMZXNzb25Db21wbGV0aW9uU3RhdHVzKHN0YXRlLCBzY3JpcHRJZCkge1xuICBsZXQgY29tcGxldGVkTGVzc29uSWRzID0gW107XG5cbiAgaWYgKFxuICAgIHN0YXRlLnNlY3Rpb25TdGFuZGFyZHNQcm9ncmVzcy5zdHVkZW50TGV2ZWxTY29yZXNCeUxlc3NvbiAmJlxuICAgIHN0YXRlLnNlY3Rpb25TdGFuZGFyZHNQcm9ncmVzcy5zdHVkZW50TGV2ZWxTY29yZXNCeUxlc3NvbltzY3JpcHRJZF1cbiAgKSB7XG4gICAgY29uc3QgbGV2ZWxTY29yZXNCeVN0dWRlbnRGb3JTY3JpcHQgPVxuICAgICAgc3RhdGUuc2VjdGlvblN0YW5kYXJkc1Byb2dyZXNzLnN0dWRlbnRMZXZlbFNjb3Jlc0J5TGVzc29uW3NjcmlwdElkXTtcblxuICAgIE9iamVjdC5rZXlzKGxldmVsU2NvcmVzQnlTdHVkZW50Rm9yU2NyaXB0KS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICBjb25zdCBzdHVkZW50U2NvcmVzQ29tcGxldGUgPSBfLmZpbHRlcihcbiAgICAgICAgXy52YWx1ZXMobGV2ZWxTY29yZXNCeVN0dWRlbnRGb3JTY3JpcHRbaXRlbV0pLFxuICAgICAgICBmdW5jdGlvbiAoc3R1ZGVudFNjb3JlKSB7XG4gICAgICAgICAgcmV0dXJuIF8uZmlyc3QoXy52YWx1ZXMoc3R1ZGVudFNjb3JlKSkgPT09IFRlYWNoZXJTY29yZXMuQ09NUExFVEU7XG4gICAgICAgIH1cbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IG51bVN0dWRlbnRDb21wbGV0ZWQgPSBzdHVkZW50U2NvcmVzQ29tcGxldGUubGVuZ3RoO1xuXG4gICAgICAvLyBJZiBhbnkgc3R1ZGVudCBpbiB0aGUgc2VjdGlvbiBoYXMgYSB0ZWFjaGVyIHNjb3JlIGluZGljYXRpbmdcbiAgICAgIC8vIGNvbXBsZXRpb24gZm9yIHRoZSBsZXNzb24sIHRoZSBsZXNzb24gaXMgY29uc2lkZXJlZCBjb21wbGV0ZWQgZm9yIHRoZVxuICAgICAgLy8gc2VjdGlvbi4gV2hlbiBhIHRlYWNoZXIgbWFya3MgYSBsZXNzb24gY29tcGxldGUgZm9yIGEgc2VjdGlvbiwgdGhlXG4gICAgICAvLyBsZXNzb24gaXMgbWFya2VkIGNvbXBsZXRlIGZvciBlYWNoIHN0dWRlbnQgaW4gdGhlIHNlY3Rpb24sIHNvIHdlIGNhblxuICAgICAgLy8gaW5mZXIgdGhhdCBpZiBpdCdzIG1hcmtlZCBjb21wbGV0ZSBmb3Igb25lIHN0dWRlbnQgaW4gdGhlIHNlY3Rpb24sXG4gICAgICAvLyBpdCdzIG1hcmtlZCBjb21wbGV0ZSBmb3IgYWxsIHN0dWRlbnRzIGluIHRoZSBzZWN0aW9uLlxuICAgICAgY29uc3QgY29tcGxldGVkID0gbnVtU3R1ZGVudENvbXBsZXRlZCA+PSAxO1xuXG4gICAgICBpZiAoY29tcGxldGVkKSB7XG4gICAgICAgIGNvbXBsZXRlZExlc3Nvbklkcy5wdXNoKHBhcnNlSW50KGl0ZW0pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZXR1cm4gY29tcGxldGVkTGVzc29uSWRzO1xufVxuIiwiZXhwb3J0IGNvbnN0IExlc3Nvbkljb25zID0ge1xuICBQTFVHR0VEOiAnZGVza3RvcCcsXG4gIFVOUExVR0dFRDogJ3NjaXNzb3JzJyxcbn07XG5cbmV4cG9ydCBjb25zdCBjc3RhU3RhbmRhcmRzVVJMID0gJ2h0dHBzOi8vd3d3LmNzdGVhY2hlcnMub3JnL3BhZ2Uvc3RhbmRhcmRzJztcblxuLy8gVGhlc2UgY29uc3RhbnRzIGhlbHAgY2xhcmlmeSB0aGUgbWVhbmluZyBvZiBhIFRlYWNoZXJTY29yZS5zY29yZS5cblxuLy8gVGhlIHZhbHVlIG9mIFRlYWNoZXJTY29yZXMuQ09NUExFVEUgaXMgY29uc2lzdGVudCB3aXRoIFRlc3RSZXN1bHRzLkFMTF9QQVNTICAvLyBpbiBjb25zdGFudHMuanMgYW5kIEFjdGl2aXR5Q29uc3RhbnRzLkJFU1RfUEFTU19SRVNVTFQgaW5cbi8vIGFjdGl2aXR5X2NvbnN0YW50cy5yYiwgd2hpY2ggY2xhcmlmeSB0aGUgbWVhbmluZyBvZiBhIFVzZXJMZXZlbC5iZXN0X3Jlc3VsdC5cblxuLy8gVGhlIHZhbHVlIG9mIFRlYWNoZXJTY29yZXMuSU5DT01QTEVURSBpcyBjb25zaXN0ZW50IHdpdGggUmVzdWx0VHlwZS5VTlNFVFxuLy8gaW4gY29uc3RhbnRzLmpzLCBhbmQgd291bGQgZXZhbHVhdGUgdG8gTGV2ZWxTdGF0dXMubm90X3RyaWVkIHdoZW4gd2UgZ2V0IHRoZSAvLyBhY3Rpdml0eUNzc0NsYXNzIHVzZWQgZm9yIHByb2dyZXNzIGJ1YmJsZSBjb2xvciBmcm9tIGFjdGl2aXR5VXRpbHMuanMuXG5cbmV4cG9ydCBjb25zdCBUZWFjaGVyU2NvcmVzID0ge1xuICBDT01QTEVURTogMTAwLFxuICBJTkNPTVBMRVRFOiAwLFxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmZ1bmN0aW9uIGNyZWF0ZVRodW5rTWlkZGxld2FyZShleHRyYUFyZ3VtZW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoX3JlZikge1xuICAgIHZhciBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7XG4gICAgdmFyIGdldFN0YXRlID0gX3JlZi5nZXRTdGF0ZTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG5leHQpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYWN0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGlvbihkaXNwYXRjaCwgZ2V0U3RhdGUsIGV4dHJhQXJndW1lbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbn1cblxudmFyIHRodW5rID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKCk7XG50aHVuay53aXRoRXh0cmFBcmd1bWVudCA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gdGh1bms7Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ1bml0U2VsZWN0aW9uIiwic3RhdGUiLCJpbml0aWFsU3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiU0VUX0NPVVJTRVMiLCJmaXJzdENvdXJzZSIsImNvdXJzZXNXaXRoUHJvZ3Jlc3MiLCJmaXJzdFVuaXQiLCJ1bml0cyIsInNjcmlwdElkIiwiaWQiLCJTRVRfU0NSSVBUIiwic2V0U2NyaXB0SWQiLCJzZXRDb3Vyc2VzV2l0aFByb2dyZXNzIiwiZ2V0U2VsZWN0ZWRVbml0IiwidW5pdCIsImZvckVhY2giLCJjb3Vyc2UiLCJ0ZW1wVW5pdCIsImZpbmQiLCJnZXRTZWxlY3RlZFNjcmlwdE5hbWUiLCJrZXkiLCJnZXRTZWxlY3RlZFNjcmlwdEZyaWVuZGx5TmFtZSIsIm5hbWUiLCJnZXRTZWxlY3RlZFNjcmlwdERlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb24iLCJkb2VzQ3VycmVudENvdXJzZVVzZUZlZWRiYWNrIiwiaXNfZmVlZGJhY2tfZW5hYmxlZCIsIlByb2dyZXNzQm94IiwicmVuZGVyIiwidGhpcyIsInByb3BzIiwic3RhcnRlZCIsImluY29tcGxldGUiLCJpbXBlcmZlY3QiLCJwZXJmZWN0IiwibGVzc29uSXNBbGxBc3Nlc3NtZW50Iiwidmlld2VkIiwidmlld2VkU3R5bGUiLCJzdHlsZXMiLCJmaWxsZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvciIsIm5ldXRyYWxfZGFyazIwIiwiaGVpZ2h0Iiwid2lkdGgiLCJib3hXaXRoQm9yZGVyU3R5bGUiLCJib3giLCJib3JkZXJDb2xvciIsImxldmVsX3N1Ym1pdHRlZCIsImxldmVsX3BlcmZlY3QiLCJsaWdodF9ncmF5Iiwic3R5bGUiLCJwZXJmZWN0TGV2ZWxzIiwidG9wIiwiYXNzZXNzbWVudExldmVscyIsImluY29tcGxldGVMZXZlbHMiLCJsZXZlbF9ub3RfdHJpZWQiLCJpbXBlcmZlY3RMZXZlbHMiLCJsZXZlbF9wYXNzZWQiLCJsZXNzb25OdW1iZXJTdHlsZSIsImxlc3Nvbk51bWJlciIsIndoaXRlIiwiY2hhcmNvYWwiLCJjbGFzc05hbWUiLCJDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJib29sIiwibnVtYmVyIiwib2JqZWN0IiwiYm9yZGVyV2lkdGgiLCJib3JkZXJTdHlsZSIsImJveFNpemluZyIsInBvc2l0aW9uIiwiekluZGV4IiwicGFkZGluZ1RvcCIsInRleHRBbGlnbiIsImZvbnRDb25zdGFudHMiLCJ1bml0RGF0YVByb3BUeXBlIiwic2hhcGUiLCJpc1JlcXVpcmVkIiwiY3NmIiwiaGFzU3RhbmRhcmRzIiwidGl0bGUiLCJzdHJpbmciLCJwYXRoIiwibGVzc29ucyIsImFycmF5T2YiLCJsZXZlbHMiLCJmYW1pbHlfbmFtZSIsInZlcnNpb25feWVhciIsIlNVTU1BUlkiLCJERVRBSUwiLCJTVEFOREFSRFMiLCJzdHVkZW50VGFibGVSb3dUeXBlIiwic3R1ZGVudCIsInN0dWRlbnRUeXBlIiwiZXhwYW5zaW9uSW5kZXgiLCJpc0V4cGFuZGVkIiwidXNlRGFya0JhY2tncm91bmQiLCJ0b29sdGlwSWRGb3JTdHVkZW50Iiwic3R1ZGVudElkIiwic2Nyb2xsYmFyV2lkdGgiLCJnZXRTY3JvbGxiYXJXaWR0aCIsIm91dGVyIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidmlzaWJpbGl0eSIsIm92ZXJmbG93IiwibXNPdmVyZmxvd1N0eWxlIiwiYm9keSIsImFwcGVuZENoaWxkIiwiaW5uZXIiLCJvZmZzZXRXaWR0aCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInNlY3Rpb25Qcm9ncmVzcyIsImxlc3Nvbk9mSW50ZXJlc3QiLCJJTklUSUFMX0xFU1NPTl9PRl9JTlRFUkVTVCIsIlNFVF9DVVJSRU5UX1ZJRVciLCJjdXJyZW50VmlldyIsInZpZXdUeXBlIiwiU1RBUlRfTE9BRElOR19QUk9HUkVTUyIsImlzTG9hZGluZ1Byb2dyZXNzIiwiRklOSVNIX0xPQURJTkdfUFJPR1JFU1MiLCJTVEFSVF9SRUZSRVNISU5HX1BST0dSRVNTIiwiaXNSZWZyZXNoaW5nUHJvZ3Jlc3MiLCJGSU5JU0hfUkVGUkVTSElOR19QUk9HUkVTUyIsIlNFVF9MRVNTT05fT0ZfSU5URVJFU1QiLCJBRERfREFUQV9CWV9VTklUIiwidW5pdERhdGFCeVVuaXQiLCJkYXRhIiwic3R1ZGVudExldmVsUHJvZ3Jlc3NCeVVuaXQiLCJzdHVkZW50TGVzc29uUHJvZ3Jlc3NCeVVuaXQiLCJzdHVkZW50TGFzdFVwZGF0ZUJ5VW5pdCIsInN0YXJ0TG9hZGluZ1Byb2dyZXNzIiwiZmluaXNoTG9hZGluZ1Byb2dyZXNzIiwic3RhcnRSZWZyZXNoaW5nUHJvZ3Jlc3MiLCJmaW5pc2hSZWZyZXNoaW5nUHJvZ3Jlc3MiLCJzZXRMZXNzb25PZkludGVyZXN0Iiwic2V0Q3VycmVudFZpZXciLCJhZGREYXRhQnlVbml0Iiwic2VjdGlvbiIsIlZpZXdUeXBlIiwianVtcFRvTGVzc29uRGV0YWlscyIsImRpc3BhdGNoIiwiZ2V0U3RhdGUiLCJmaXJlaG9zZUNsaWVudCIsInB1dFJlY29yZCIsInN0dWR5Iiwic3R1ZHlfZ3JvdXAiLCJldmVudCIsImRhdGFfanNvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJzZWN0aW9uX2lkIiwidGVhY2hlclNlY3Rpb25zIiwic2VsZWN0ZWRTZWN0aW9uSWQiLCJvbGRfdmlldyIsIm5ld192aWV3Iiwic2NyaXB0X2lkIiwiaW5jbHVkZVVzZXJJZCIsImdldEN1cnJlbnRVbml0RGF0YSIsIlByb2dyZXNzQm94Rm9yTGVzc29uTnVtYmVyIiwibGluayIsImxpbmtUb0xlc3NvblBsYW4iLCJzZWN0aW9uSWQiLCJpbl9yZXBvcnQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwiaW5jbHVkZXMiLCJjb21wbGV0ZWQiLCJpblByb2dyZXNzIiwidG9vbHRpcElkIiwid29ya2luZ09uIiwicHJvZ3Jlc3NCb3giLCJsZXNzb25Cb3giLCJocmVmIiwidGFyZ2V0IiwicmVsIiwib25DbGljayIsImhhbmRsZUNsaWNrIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5MZWZ0IiwiVW5jb25uZWN0ZWRQcm9ncmVzc0JveEZvckxlc3Nvbk51bWJlciIsImNvbm5lY3QiLCJzZWN0aW9uU3RhbmRhcmRzUHJvZ3Jlc3MiLCJTRVRfU1RBTkRBUkRTX0RBVEEiLCJzb3J0ZWRCeUNhdGVnb3J5IiwiXyIsIm9yZGVyQnkiLCJzdGFuZGFyZHNEYXRhIiwiZ3JvdXBlZFN0YW5kYXJkcyIsImdyb3VwQnkiLCJzb3J0ZWRTdGFuZGFyZHMiLCJtYXAiLCJzb3J0QnlTaG9ydGNvZGUiLCJmbGF0dGVuIiwiU0VUX1RFQUNIRVJfQ09NTUVOVF9GT1JfUkVQT1JUIiwidGVhY2hlckNvbW1lbnQiLCJTRVRfU0VMRUNURURfTEVTU09OUyIsInNlbGVjdGVkTGVzc29ucyIsInNlbGVjdGVkIiwiU0VUX1NUVURFTlRfTEVWRUxfU0NPUkVTIiwicHJldkxldmVsU2NvcmVCeUxlc3NvbiIsInN0dWRlbnRMZXZlbFNjb3Jlc0J5TGVzc29uIiwibGVzc29uSWQiLCJzY29yZXNEYXRhIiwiZmV0Y2hTdGFuZGFyZHNDb3ZlcmVkRm9yU2NyaXB0IiwiJCIsImFqYXgiLCJtZXRob2QiLCJkYXRhVHlwZSIsInVybCIsInRoZW4iLCJzZXRTdGFuZGFyZHNEYXRhIiwiZmV0Y2hTdHVkZW50TGV2ZWxTY29yZXMiLCJudW1TdHVkZW50cyIsInNlY3Rpb25zIiwic3R1ZGVudENvdW50IiwidW5wbHVnZ2VkTGVzc29uTGlzdCIsImdldFVucGx1Z2dlZExlc3NvbnNGb3JTY3JpcHQiLCJ1bnBsdWdnZWRMZXNzb25JZHMiLCJudW1QYWdlcyIsIk1hdGgiLCJjZWlsIiwicmVxdWVzdHMiLCJyYW5nZSIsImN1cnJlbnRQYWdlIiwiZmV0Y2giLCJjcmVkZW50aWFscyIsInJlc3BvbnNlIiwianNvbiIsInNldFN0dWRlbnRMZXZlbFNjb3JlcyIsIlByb21pc2UiLCJhbGwiLCJpbml0aWFsQ29tcGxldGVkVW5wbHVnZ2VkTGVzc29ucyIsImdldEluaXRpYWxVbnBsdWdnZWRMZXNzb25Db21wbGV0aW9uU3RhdHVzIiwiY29tcGxldGVkTGVzc29uSWRzIiwibGV2ZWxTY29yZXNCeVN0dWRlbnRGb3JTY3JpcHQiLCJPYmplY3QiLCJrZXlzIiwiaXRlbSIsImZpbHRlciIsInZhbHVlcyIsInN0dWRlbnRTY29yZSIsImZpcnN0IiwiVGVhY2hlclNjb3JlcyIsIkNPTVBMRVRFIiwibGVuZ3RoIiwicHVzaCIsInBhcnNlSW50IiwibGVzc29uc1RvU2VsZWN0IiwibGVzc29uIiwic2V0U2VsZWN0ZWRMZXNzb25zIiwiZ2V0TnVtYmVyTGVzc29uc0NvbXBsZXRlZCIsImxlc3NvbnNDb21wbGV0ZWQiLCJnZXRMZXNzb25zRm9yQ3VycmVudFNjcmlwdCIsImdldExlc3NvbkNvbXBsZXRpb25TdGF0dXMiLCJnZXROdW1iZXJMZXNzb25zSW5TY3JpcHQiLCJudW1MZXNzb25zIiwic2V0VGVhY2hlckNvbW1lbnRGb3JSZXBvcnQiLCJzdGFuZGFyZHNCeUNhdGVnb3J5IiwiZ2V0TGVzc29uU2VsZWN0aW9uU3RhdHVzIiwidW5wbHVnZ2VkTGVzc29ucyIsInVucGx1Z2dlZCIsImxlc3NvbkNvbXBsZXRpb25TdGF0dXMiLCJmaWx0ZXJMZXNzb25EYXRhIiwibGVzc29uX3BsYW5faHRtbF91cmwiLCJnZXRVbnBsdWdnZWRMZXNzb25Db21wbGV0aW9uU3RhdHVzIiwiZ2V0UGx1Z2dlZExlc3NvbkNvbXBsZXRpb25TdGF0dXMiLCJudW1TdHVkZW50c0NvbXBsZXRlZCIsImdldE51bWJlck9mU3R1ZGVudHNDb21wbGV0ZWRVbnBsdWdnZWRMZXNzb24iLCJjb21wbGV0aW9uTnVtYmVyQnlMZXNzb24iLCJsZXZlbFNjb3Jlc0J5U3R1ZGVudCIsImNvbXBsZXRpb25CeUxlc3NvbiIsIm51bWJlclN0dWRlbnRzSW5TZWN0aW9uIiwibGV2ZWxQcm9ncmVzc0J5U2NyaXB0Iiwic3R1ZGVudElkcyIsImxldmVsSWRzIiwibnVtU3R1ZGVudHNDb21wbGV0ZWRMZXNzb24iLCJudW1TdHVkZW50c0luUHJvZ3Jlc3NMZXNzb24iLCJudW1MZXZlbHNJbkxlc3NvbkNvbXBsZXRlZEJ5U3R1ZGVudCIsImxldmVsSWQiLCJsZXZlbFByb2dyZXNzIiwicmVzdWx0IiwiVGVzdFJlc3VsdHMiLCJNSU5JTVVNX1BBU1NfUkVTVUxUIiwibGV2ZWxDb21wbGV0aW9uUmF0aW8iLCJsZXNzb25zQnlTdGFuZGFyZCIsImxlc3NvbnNCeVN0YW5kYXJkSWQiLCJzdGFuZGFyZHMiLCJzdGFuZGFyZCIsImFzc29jaWF0ZWRMZXNzb25zIiwibGVzc29uX2lkcyIsImxlc3NvbkRldGFpbHMiLCJyZWxhdGl2ZV9wb3NpdGlvbiIsIlBMVUdHRUQiLCJVTlBMVUdHRUQiLCJJTkNPTVBMRVRFIiwiY3JlYXRlVGh1bmtNaWRkbGV3YXJlIiwiZXh0cmFBcmd1bWVudCIsIl9yZWYiLCJuZXh0IiwiX19lc01vZHVsZSIsInRodW5rIiwid2l0aEV4dHJhQXJndW1lbnQiXSwic291cmNlUm9vdCI6IiJ9